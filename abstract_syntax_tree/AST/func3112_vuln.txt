TranslationUnitDecl 0x12c042608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0434b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c042bd0 '__int128'
|-TypedefDecl 0x12c043528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c042bf0 'unsigned __int128'
|-TypedefDecl 0x12c113230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c113000 'struct __NSConstantString_tag'
|   `-Record 0x12c043580 '__NSConstantString_tag'
|-TypedefDecl 0x12c113298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c042d90 '__SVInt8_t'
|-TypedefDecl 0x12c113300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c042db0 '__SVInt16_t'
|-TypedefDecl 0x12c113368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c042dd0 '__SVInt32_t'
|-TypedefDecl 0x12c1133d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c042df0 '__SVInt64_t'
|-TypedefDecl 0x12c113438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c042e10 '__SVUint8_t'
|-TypedefDecl 0x12c1134a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c042e30 '__SVUint16_t'
|-TypedefDecl 0x12c113508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c042e50 '__SVUint32_t'
|-TypedefDecl 0x12c113570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c042e70 '__SVUint64_t'
|-TypedefDecl 0x12c1135d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c042e90 '__SVFloat16_t'
|-TypedefDecl 0x12c113640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c042eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c1136a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c042ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c113710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c042ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c113778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c042f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c1137e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c042f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c113848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c042f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c1138b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c042f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c113918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c042f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c113980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c042fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c1139e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c042fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c113a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c042ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c113ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c043010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c113b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c043030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c113b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c043050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c113bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c043070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c113c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c043090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c113cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c0430b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c113d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c0430d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c113d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c0430f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c113df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c043110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c113e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c043130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c113ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c043150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c113f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c043170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c113f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c043190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c114800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c0431b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c114868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c0431d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c1148d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c0431f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c114938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c043210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c1149a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c043230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c114a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c043250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c114a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c043270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c114ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c043290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c114b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c0432b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c114ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c0432d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c114c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c0432f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c114c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c043310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c114ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c043330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c114d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c043350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c114db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c043370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c114e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c043390 '__SVBool_t'
|-TypedefDecl 0x12c114e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c0433b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c114ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c0433d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c114f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c0433f0 '__SVCount_t'
|-TypedefDecl 0x12c114ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c114fb0 'char *'
|   `-BuiltinType 0x12c0426b0 'char'
|-TypedefDecl 0x12c115068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c114fb0 'char *'
|   `-BuiltinType 0x12c0426b0 'char'
|-FunctionDecl 0x12c1151c0 <dataset_diviso_filec/func3112_vuln.c:1:1, line:38:1> line:1:13 invalid extract_caps 'void (int)' static
| |-ParmVarDecl 0x12c1150f0 <col:26, col:32> col:32 invalid pid 'int'
| `-CompoundStmt 0x12c131a68 <col:37, line:38:1>
|   |-DeclStmt 0x12c1152f0 <line:3:2, col:12>
|   | `-VarDecl 0x12c115288 <col:2, col:8> col:8 used file 'char *'
|   |-IfStmt 0x12c12eec0 <line:4:2, line:7:2>
|   | |-BinaryOperator 0x12c115650 <line:4:6, col:38> 'int' contains-errors '=='
|   | | |-CallExpr 0x12c1155e0 <col:6, col:32> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12c1154c8 <col:6> 'int ()' Function 0x12c1153a8 'asprintf' 'int ()'
|   | | | |-UnaryOperator 0x12c115540 <col:15, col:16> 'char **' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x12c1154e8 <col:16> 'char *' lvalue Var 0x12c115288 'file' 'char *'
|   | | | |-StringLiteral 0x12c1155a0 <col:22> 'char[4]' lvalue "STR"
|   | | | `-RecoveryExpr 0x12c1155c0 <col:29> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x12c115638 <col:37, col:38> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x12c115618 <col:38> 'int' 1
|   | `-CompoundStmt 0x12c12eea0 <col:41, line:7:2>
|   |   |-CallExpr 0x12c1157d8 <line:5:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x12c1157c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12c115750 <col:3> 'int ()' Function 0x12c115698 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x12c12e800 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x12c115770 <col:10> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x12c12ee78 <line:6:3, col:9> 'void'
|   |     |-ImplicitCastExpr 0x12c12ee60 <col:3> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12c12edf0 <col:3> 'void (int) __attribute__((noreturn))' Function 0x12c12ec80 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x12c12ee10 <col:8> 'int' 1
|   |-IfStmt 0x12c12f1b0 <line:9:2, line:10:8>
|   | |-UnaryOperator 0x12c12f130 <line:9:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12c12f118 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12c12f0f8 <col:7> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x12c12f198 <line:10:3, col:8> 'errexit' 0x12c12f148
|   |-DeclStmt 0x12c12f260 <line:12:2, col:18>
|   | `-VarDecl 0x12c12f1f8 <col:2, col:7> col:7 invalid buf 'char'
|   |-WhileStmt 0x12c1313a8 <line:13:2, line:30:2>
|   | |-CallExpr 0x12c12f4a0 <line:13:9, col:34> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x12c12f358 <col:9> 'int ()' Function 0x12c12f2a0 'fgets' 'int ()'
|   | | |-RecoveryExpr 0x12c12f378 <col:15> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x12c12f460 <col:20, col:29> '<dependent type>' contains-errors '-'
|   | | | |-RecoveryExpr 0x12c12f440 <col:20> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x12c12f3b0 <col:29> 'int' 1
|   | | `-RecoveryExpr 0x12c12f480 <col:32> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12c131390 <col:37, line:30:2>
|   |   `-IfStmt 0x12c131360 <line:14:3, line:29:3> has_else
|   |     |-BinaryOperator 0x12c130688 <line:14:7, col:33> 'int' contains-errors '=='
|   |     | |-CallExpr 0x12c130630 <col:7, col:28> '<dependent type>' contains-errors
|   |     | | |-DeclRefExpr 0x12c12f778 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x12c12f528 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |     | | |-RecoveryExpr 0x12c12f798 <col:15> '<dependent type>' contains-errors lvalue
|   |     | | |-StringLiteral 0x12c12f7b8 <col:20> 'char[4]' lvalue "STR"
|   |     | | `-IntegerLiteral 0x12c12f7d8 <col:27> 'int' 7
|   |     | `-IntegerLiteral 0x12c130668 <col:33> 'int' 0
|   |     |-CompoundStmt 0x12c130db8 <col:36, line:21:3>
|   |     | |-DeclStmt 0x12c130788 <line:15:4, col:23>
|   |     | | `-VarDecl 0x12c1306c0 <col:4, col:22> col:10 used ptr 'char *' cinit
|   |     | |   `-BinaryOperator 0x12c130768 <col:16, col:22> '<dependent type>' contains-errors '+'
|   |     | |     |-RecoveryExpr 0x12c130728 <col:16> '<dependent type>' contains-errors lvalue
|   |     | |     `-IntegerLiteral 0x12c130748 <col:22> 'int' 7
|   |     | |-DeclStmt 0x12c130820 <line:16:4, col:26>
|   |     | | `-VarDecl 0x12c1307b8 <col:4, col:23> col:23 used val 'unsigned long long'
|   |     | `-IfStmt 0x12c130d58 <line:17:4, line:18:10>
|   |     |   |-BinaryOperator 0x12c130d20 <line:17:8, col:36> 'int' contains-errors '!='
|   |     |   | |-CallExpr 0x12c130c68 <col:8, col:31> 'int' contains-errors
|   |     |   | | |-ImplicitCastExpr 0x12c130c50 <col:8> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   |     |   | | | `-DeclRefExpr 0x12c130af0 <col:8> 'int (const char *restrict, const char *restrict, ...)' Function 0x12c1308d8 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |     |   | | |-ImplicitCastExpr 0x12c130cb8 <col:15> 'const char *' contains-errors <NoOp>
|   |     |   | | | `-ImplicitCastExpr 0x12c130ca0 <col:15> 'char *' contains-errors <LValueToRValue>
|   |     |   | | |   `-DeclRefExpr 0x12c130b10 <col:15> 'char *' contains-errors lvalue Var 0x12c1306c0 'ptr' 'char *'
|   |     |   | | |-ImplicitCastExpr 0x12c130ce8 <col:20> 'const char *' <NoOp>
|   |     |   | | | `-ImplicitCastExpr 0x12c130cd0 <col:20> 'char *' <ArrayToPointerDecay>
|   |     |   | | |   `-StringLiteral 0x12c130b30 <col:20> 'char[4]' lvalue "STR"
|   |     |   | | `-UnaryOperator 0x12c130ba0 <col:27, col:28> 'unsigned long long *' prefix '&' cannot overflow
|   |     |   | |   `-DeclRefExpr 0x12c130b50 <col:28> 'unsigned long long' lvalue Var 0x12c1307b8 'val' 'unsigned long long'
|   |     |   | `-IntegerLiteral 0x12c130d00 <col:36> 'int' 1
|   |     |   `-GotoStmt 0x12c130d40 <line:18:5, col:10> 'errexit' 0x12c12f148
|   |     `-IfStmt 0x12c131340 <line:22:8, line:29:3>
|   |       |-BinaryOperator 0x12c130ee8 <line:22:12, col:39> 'int' contains-errors '=='
|   |       | |-CallExpr 0x12c130e90 <col:12, col:34> '<dependent type>' contains-errors
|   |       | | |-DeclRefExpr 0x12c130de0 <col:12> 'int (const char *, const char *, unsigned long)' Function 0x12c12f528 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |       | | |-RecoveryExpr 0x12c130e00 <col:20> '<dependent type>' contains-errors lvalue
|   |       | | |-StringLiteral 0x12c130e20 <col:25> 'char[4]' lvalue "STR"
|   |       | | `-IntegerLiteral 0x12c130e40 <col:32> 'int' 11
|   |       | `-IntegerLiteral 0x12c130ec8 <col:39> 'int' 0
|   |       `-CompoundStmt 0x12c131318 <col:42, line:29:3>
|   |         |-DeclStmt 0x12c130fe8 <line:23:4, col:24>
|   |         | `-VarDecl 0x12c130f20 <col:4, col:22> col:10 used ptr 'char *' cinit
|   |         |   `-BinaryOperator 0x12c130fc8 <col:16, col:22> '<dependent type>' contains-errors '+'
|   |         |     |-RecoveryExpr 0x12c130f88 <col:16> '<dependent type>' contains-errors lvalue
|   |         |     `-IntegerLiteral 0x12c130fa8 <col:22> 'int' 11
|   |         |-DeclStmt 0x12c131080 <line:24:4, col:11>
|   |         | `-VarDecl 0x12c131018 <col:4, col:8> col:8 used val 'int'
|   |         `-IfStmt 0x12c1312a0 <line:25:4, line:26:10>
|   |           |-BinaryOperator 0x12c131268 <line:25:8, col:36> 'int' contains-errors '!='
|   |           | |-CallExpr 0x12c1311b0 <col:8, col:31> 'int' contains-errors
|   |           | | |-ImplicitCastExpr 0x12c131198 <col:8> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   |           | | | `-DeclRefExpr 0x12c131098 <col:8> 'int (const char *restrict, const char *restrict, ...)' Function 0x12c1308d8 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |           | | |-ImplicitCastExpr 0x12c131200 <col:15> 'const char *' contains-errors <NoOp>
|   |           | | | `-ImplicitCastExpr 0x12c1311e8 <col:15> 'char *' contains-errors <LValueToRValue>
|   |           | | |   `-DeclRefExpr 0x12c1310b8 <col:15> 'char *' contains-errors lvalue Var 0x12c130f20 'ptr' 'char *'
|   |           | | |-ImplicitCastExpr 0x12c131230 <col:20> 'const char *' <NoOp>
|   |           | | | `-ImplicitCastExpr 0x12c131218 <col:20> 'char *' <ArrayToPointerDecay>
|   |           | | |   `-StringLiteral 0x12c1310d8 <col:20> 'char[4]' lvalue "STR"
|   |           | | `-UnaryOperator 0x12c131150 <col:27, col:28> 'int *' prefix '&' cannot overflow
|   |           | |   `-DeclRefExpr 0x12c1310f8 <col:28> 'int' lvalue Var 0x12c131018 'val' 'int'
|   |           | `-IntegerLiteral 0x12c131248 <col:36> 'int' 1
|   |           `-GotoStmt 0x12c131288 <line:26:5, col:10> 'errexit' 0x12c12f148
|   |-CallExpr 0x12c131528 <line:31:2, col:11> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12c1314a8 <col:2> 'int ()' Function 0x12c1313f0 'fclose' 'int ()'
|   | `-RecoveryExpr 0x12c131508 <col:9> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12c131818 <line:32:2, col:11> 'void'
|   | |-ImplicitCastExpr 0x12c131800 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12c131770 <col:2> 'void (void *)' Function 0x12c131600 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x12c131858 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x12c131840 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12c131790 <col:7> 'char *' lvalue Var 0x12c115288 'file' 'char *'
|   |-ReturnStmt 0x12c131870 <line:33:2>
|   |-LabelStmt 0x12c1319c8 <line:35:1, col:8> 'errexit'
|   | `-NullStmt 0x12c1319c0 <col:8>
|   `-CallExpr 0x12c131a40 <line:37:2, col:8> 'void'
|     |-ImplicitCastExpr 0x12c131a28 <col:2> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x12c1319e8 <col:2> 'void (int) __attribute__((noreturn))' Function 0x12c12ec80 'exit' 'void (int) __attribute__((noreturn))'
|     `-IntegerLiteral 0x12c131a08 <col:7> 'int' 1
|-FunctionDecl 0x12c12ec80 <line:6:3> col:3 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x12c12ed80 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x12c12ed28 <<invalid sloc>> Implicit 869
|-FunctionDecl 0x12c12f528 <line:14:7> col:7 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x12c12f628 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12c12f690 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12c12f6f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12c12f5d0 <<invalid sloc>> Implicit 888
|-FunctionDecl 0x12c1308d8 <line:17:8> col:8 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x12c1309d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12c130a40 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-BuiltinAttr 0x12c130980 <<invalid sloc>> Implicit 913
| `-FormatAttr 0x12c130ab8 <col:8> Implicit scanf 2 3
`-FunctionDecl 0x12c131600 <line:32:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12c131700 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12c1316a8 <<invalid sloc>> Implicit 873
