TranslationUnitDecl 0x124855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1248564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124855bd0 '__int128'
|-TypedefDecl 0x124856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124855bf0 'unsigned __int128'
|-TypedefDecl 0x124926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x124926000 'struct __NSConstantString_tag'
|   `-Record 0x124856580 '__NSConstantString_tag'
|-TypedefDecl 0x124926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124855d90 '__SVInt8_t'
|-TypedefDecl 0x124926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124855db0 '__SVInt16_t'
|-TypedefDecl 0x124926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124855dd0 '__SVInt32_t'
|-TypedefDecl 0x1249263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124855df0 '__SVInt64_t'
|-TypedefDecl 0x124926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124855e10 '__SVUint8_t'
|-TypedefDecl 0x1249264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124855e30 '__SVUint16_t'
|-TypedefDecl 0x124926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124855e50 '__SVUint32_t'
|-TypedefDecl 0x124926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124855e70 '__SVUint64_t'
|-TypedefDecl 0x1249265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124855e90 '__SVFloat16_t'
|-TypedefDecl 0x124926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1249266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124855ed0 '__SVFloat64_t'
|-TypedefDecl 0x124926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x124926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1249267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x124926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1249268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x124926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x124926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1249269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x124926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x124926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x124926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x124926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x124926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x124926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124856090 '__clang_svint8x3_t'
|-TypedefDecl 0x124926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1248560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x124926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1248560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x124926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1248560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x124926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x124926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x124926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x124926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x124926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x124927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1248561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x124927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1248561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1249278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1248561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x124927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1249279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124856230 '__clang_svint16x4_t'
|-TypedefDecl 0x124927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124856250 '__clang_svint32x4_t'
|-TypedefDecl 0x124927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124856270 '__clang_svint64x4_t'
|-TypedefDecl 0x124927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x124927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1248562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x124927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1248562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x124927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1248562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x124927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x124927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x124927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x124927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x124927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124856390 '__SVBool_t'
|-TypedefDecl 0x124927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1248563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x124927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1248563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x124927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1248563f0 '__SVCount_t'
|-TypedefDecl 0x124927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x124927fb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-TypedefDecl 0x124928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x124927fb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
`-FunctionDecl 0x124928500 <dataset_diviso_filec/func18812_vuln.c:1:1, line:20:1> line:1:20 ModulateHSV 'void (const double, const double, const double, double *, double *, double *)' static inline
  |-ParmVarDecl 0x1249280d8 <col:32, col:45> col:45 used percent_hue 'const double'
  |-ParmVarDecl 0x124928158 <line:2:3, col:16> col:16 used percent_saturation 'const double'
  |-ParmVarDecl 0x1249281d8 <col:35, col:48> col:48 used percent_value 'const double'
  |-ParmVarDecl 0x124928288 <col:62, col:70> col:70 used red 'double *'
  |-ParmVarDecl 0x124928308 <line:3:3, col:11> col:11 used green 'double *'
  |-ParmVarDecl 0x124928388 <col:17, col:25> col:25 used blue 'double *'
  `-CompoundStmt 0x126008d70 <line:4:1, line:20:1>
    |-DeclStmt 0x1249287c0 <line:5:3, line:8:10>
    | |-VarDecl 0x124928638 <line:5:3, line:6:5> col:5 used hue 'double'
    | |-VarDecl 0x1249286b8 <line:5:3, line:7:5> col:5 used saturation 'double'
    | `-VarDecl 0x124928738 <line:5:3, line:8:5> col:5 used value 'double'
    |-CallExpr 0x126008518 <line:11:3, col:60> 'int'
    | |-ImplicitCastExpr 0x126008500 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x126008310 <col:3> 'int ()' Function 0x126008258 'ConvertRGBToHSV' 'int ()'
    | |-ImplicitCastExpr 0x126008568 <col:19, col:20> 'double' <LValueToRValue>
    | | `-UnaryOperator 0x126008368 <col:19, col:20> 'double' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x126008350 <col:20> 'double *' <LValueToRValue>
    | |     `-DeclRefExpr 0x126008330 <col:20> 'double *' lvalue ParmVar 0x124928288 'red' 'double *'
    | |-ImplicitCastExpr 0x126008580 <col:24, col:25> 'double' <LValueToRValue>
    | | `-UnaryOperator 0x1260083b8 <col:24, col:25> 'double' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x1260083a0 <col:25> 'double *' <LValueToRValue>
    | |     `-DeclRefExpr 0x126008380 <col:25> 'double *' lvalue ParmVar 0x124928308 'green' 'double *'
    | |-ImplicitCastExpr 0x126008598 <col:31, col:32> 'double' <LValueToRValue>
    | | `-UnaryOperator 0x126008408 <col:31, col:32> 'double' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x1260083f0 <col:32> 'double *' <LValueToRValue>
    | |     `-DeclRefExpr 0x1260083d0 <col:32> 'double *' lvalue ParmVar 0x124928388 'blue' 'double *'
    | |-UnaryOperator 0x126008440 <col:37, col:38> 'double *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x126008420 <col:38> 'double' lvalue Var 0x124928638 'hue' 'double'
    | |-UnaryOperator 0x126008478 <col:42, col:43> 'double *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x126008458 <col:43> 'double' lvalue Var 0x1249286b8 'saturation' 'double'
    | `-UnaryOperator 0x1260084b0 <col:54, col:55> 'double *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x126008490 <col:55> 'double' lvalue Var 0x124928738 'value' 'double'
    |-CompoundAssignOperator 0x1260086e8 <line:12:3, col:33> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x1260085b0 <col:3> 'double' lvalue Var 0x124928638 'hue' 'double'
    | `-BinaryOperator 0x1260086c8 <col:8, col:33> 'double' '*'
    |   |-FloatingLiteral 0x1260085d0 <col:8> 'double' 5.000000e-01
    |   `-ParenExpr 0x1260086a8 <col:12, col:33> 'double'
    |     `-BinaryOperator 0x126008688 <col:13, col:30> 'double' '-'
    |       |-BinaryOperator 0x126008648 <col:13, col:18> 'double' '*'
    |       | |-FloatingLiteral 0x1260085f0 <col:13> 'double' 1.000000e-02
    |       | `-ImplicitCastExpr 0x126008630 <col:18> 'double' <LValueToRValue>
    |       |   `-DeclRefExpr 0x126008610 <col:18> 'const double' lvalue ParmVar 0x1249280d8 'percent_hue' 'const double'
    |       `-FloatingLiteral 0x126008668 <col:30> 'double' 1.000000e+00
    |-WhileStmt 0x126008800 <line:13:3, line:14:10>
    | |-BinaryOperator 0x126008770 <line:13:10, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x126008758 <col:10> 'double' <LValueToRValue>
    | | | `-DeclRefExpr 0x126008718 <col:10> 'double' lvalue Var 0x124928638 'hue' 'double'
    | | `-FloatingLiteral 0x126008738 <col:16> 'double' 0.000000e+00
    | `-CompoundAssignOperator 0x1260087d0 <line:14:5, col:10> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
    |   |-DeclRefExpr 0x126008790 <col:5> 'double' lvalue Var 0x124928638 'hue' 'double'
    |   `-FloatingLiteral 0x1260087b0 <col:10> 'double' 1.000000e+00
    |-WhileStmt 0x126008908 <line:15:3, line:16:10>
    | |-BinaryOperator 0x126008878 <line:15:10, col:17> 'int' '>='
    | | |-ImplicitCastExpr 0x126008860 <col:10> 'double' <LValueToRValue>
    | | | `-DeclRefExpr 0x126008820 <col:10> 'double' lvalue Var 0x124928638 'hue' 'double'
    | | `-FloatingLiteral 0x126008840 <col:17> 'double' 1.000000e+00
    | `-CompoundAssignOperator 0x1260088d8 <line:16:5, col:10> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
    |   |-DeclRefExpr 0x126008898 <col:5> 'double' lvalue Var 0x124928638 'hue' 'double'
    |   `-FloatingLiteral 0x1260088b8 <col:10> 'double' 1.000000e+00
    |-CompoundAssignOperator 0x1260089c0 <line:17:3, col:20> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x126008928 <col:3> 'double' lvalue Var 0x1249286b8 'saturation' 'double'
    | `-BinaryOperator 0x1260089a0 <col:15, col:20> 'double' '*'
    |   |-FloatingLiteral 0x126008948 <col:15> 'double' 1.000000e-02
    |   `-ImplicitCastExpr 0x126008988 <col:20> 'double' <LValueToRValue>
    |     `-DeclRefExpr 0x126008968 <col:20> 'const double' lvalue ParmVar 0x124928158 'percent_saturation' 'const double'
    |-CompoundAssignOperator 0x126008a88 <line:18:3, col:15> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x1260089f0 <col:3> 'double' lvalue Var 0x124928738 'value' 'double'
    | `-BinaryOperator 0x126008a68 <col:10, col:15> 'double' '*'
    |   |-FloatingLiteral 0x126008a10 <col:10> 'double' 1.000000e-02
    |   `-ImplicitCastExpr 0x126008a50 <col:15> 'double' <LValueToRValue>
    |     `-DeclRefExpr 0x126008a30 <col:15> 'const double' lvalue ParmVar 0x1249281d8 'percent_value' 'const double'
    `-CallExpr 0x126008c90 <line:19:3, col:54> 'int'
      |-ImplicitCastExpr 0x126008c78 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x126008b98 <col:3> 'int ()' Function 0x126008ae0 'ConvertHSVToRGB' 'int ()'
      |-ImplicitCastExpr 0x126008ce0 <col:19> 'double' <LValueToRValue>
      | `-DeclRefExpr 0x126008bb8 <col:19> 'double' lvalue Var 0x124928638 'hue' 'double'
      |-ImplicitCastExpr 0x126008cf8 <col:23> 'double' <LValueToRValue>
      | `-DeclRefExpr 0x126008bd8 <col:23> 'double' lvalue Var 0x1249286b8 'saturation' 'double'
      |-ImplicitCastExpr 0x126008d10 <col:34> 'double' <LValueToRValue>
      | `-DeclRefExpr 0x126008bf8 <col:34> 'double' lvalue Var 0x124928738 'value' 'double'
      |-ImplicitCastExpr 0x126008d28 <col:40> 'double *' <LValueToRValue>
      | `-DeclRefExpr 0x126008c18 <col:40> 'double *' lvalue ParmVar 0x124928288 'red' 'double *'
      |-ImplicitCastExpr 0x126008d40 <col:44> 'double *' <LValueToRValue>
      | `-DeclRefExpr 0x126008c38 <col:44> 'double *' lvalue ParmVar 0x124928308 'green' 'double *'
      `-ImplicitCastExpr 0x126008d58 <col:50> 'double *' <LValueToRValue>
        `-DeclRefExpr 0x126008c58 <col:50> 'double *' lvalue ParmVar 0x124928388 'blue' 'double *'
