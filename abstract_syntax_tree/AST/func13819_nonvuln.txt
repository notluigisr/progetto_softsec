TranslationUnitDecl 0x11d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d855bd0 '__int128'
|-TypedefDecl 0x11d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d855bf0 'unsigned __int128'
|-TypedefDecl 0x11e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x11d856580 '__NSConstantString_tag'
|-TypedefDecl 0x11e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d855d90 '__SVInt8_t'
|-TypedefDecl 0x11e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d855db0 '__SVInt16_t'
|-TypedefDecl 0x11e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d855dd0 '__SVInt32_t'
|-TypedefDecl 0x11e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d855df0 '__SVInt64_t'
|-TypedefDecl 0x11e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d855e10 '__SVUint8_t'
|-TypedefDecl 0x11e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d855e30 '__SVUint16_t'
|-TypedefDecl 0x11e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d855e50 '__SVUint32_t'
|-TypedefDecl 0x11e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d855e70 '__SVUint64_t'
|-TypedefDecl 0x11e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d855e90 '__SVFloat16_t'
|-TypedefDecl 0x11e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d856390 '__SVBool_t'
|-TypedefDecl 0x11e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d8563f0 '__SVCount_t'
|-TypedefDecl 0x11e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
|-TypedefDecl 0x11e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
|-FunctionDecl 0x11e00de38 <dataset_diviso_filec/func13819_nonvuln.c:1:1, line:36:1> line:1:1 rsvg_make_valid_utf8 'int (const char *, int)'
| |-ParmVarDecl 0x11e00dcd8 <col:23, col:35> col:35 used str 'const char *'
| |-ParmVarDecl 0x11e00dd58 <col:40, col:44> col:44 used len 'int'
| `-CompoundStmt 0x11e02af68 <line:2:1, line:36:1>
|   |-DeclStmt 0x11e00e080 <line:4:5, col:36>
|   | |-VarDecl 0x11e00df80 <col:5, col:17> col:17 used remainder 'const char *'
|   | `-VarDecl 0x11e00e000 <col:5, col:29> col:29 used invalid 'const char *'
|   |-DeclStmt 0x11e00e1b0 <line:5:5, col:37>
|   | |-VarDecl 0x11e00e0b0 <col:5, col:9> col:9 used remaining_bytes 'int'
|   | `-VarDecl 0x11e00e130 <col:5, col:26> col:26 used valid_bytes 'int'
|   |-BinaryOperator 0x11e00e238 <line:8:5, col:17> 'const char *' '='
|   | |-DeclRefExpr 0x11e00e1e0 <col:5> 'const char *' lvalue Var 0x11e00df80 'remainder' 'const char *'
|   | `-ImplicitCastExpr 0x11e00e220 <col:17> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x11e00e200 <col:17> 'const char *' lvalue ParmVar 0x11e00dcd8 'str' 'const char *'
|   |-IfStmt 0x11e028a98 <line:10:5, line:13:27> has_else
|   | |-BinaryOperator 0x11e00e2b0 <line:10:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x11e00e298 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e00e258 <col:9> 'int' lvalue ParmVar 0x11e00dd58 'len' 'int'
|   | | `-IntegerLiteral 0x11e00e278 <col:15> 'int' 0
|   | |-BinaryOperator 0x11e028a00 <line:11:9, col:38> 'int' '='
|   | | |-DeclRefExpr 0x11e00e2d0 <col:9> 'int' lvalue Var 0x11e00e0b0 'remaining_bytes' 'int'
|   | | `-ImplicitCastExpr 0x11e0289e8 <col:27, col:38> 'int' <IntegralCast>
|   | |   `-CallExpr 0x11e0289a8 <col:27, col:38> 'unsigned long'
|   | |     |-ImplicitCastExpr 0x11e028990 <col:27> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x11e028900 <col:27> 'unsigned long (const char *)' Function 0x11e028790 'strlen' 'unsigned long (const char *)'
|   | |     `-ImplicitCastExpr 0x11e0289d0 <col:35> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x11e028920 <col:35> 'const char *' lvalue ParmVar 0x11e00dcd8 'str' 'const char *'
|   | `-BinaryOperator 0x11e028a78 <line:13:9, col:27> 'int' '='
|   |   |-DeclRefExpr 0x11e028a20 <col:9> 'int' lvalue Var 0x11e00e0b0 'remaining_bytes' 'int'
|   |   `-ImplicitCastExpr 0x11e028a60 <col:27> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x11e028a40 <col:27> 'int' lvalue ParmVar 0x11e00dd58 'len' 'int'
|   |-WhileStmt 0x11e02a870 <line:15:5, line:28:5>
|   | |-BinaryOperator 0x11e028b20 <line:15:12, col:31> 'int' '!='
|   | | |-ImplicitCastExpr 0x11e028b08 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e028ac8 <col:12> 'int' lvalue Var 0x11e00e0b0 'remaining_bytes' 'int'
|   | | `-IntegerLiteral 0x11e028ae8 <col:31> 'int' 0
|   | `-CompoundStmt 0x11e02a830 <col:34, line:28:5>
|   |   |-IfStmt 0x11e028dd8 <line:16:9, line:17:13>
|   |   | |-CallExpr 0x11e028d68 <line:16:13, col:66> 'int'
|   |   | | |-ImplicitCastExpr 0x11e028d50 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x11e028c50 <col:13> 'int ()' Function 0x11e028b98 'g_utf8_validate' 'int ()'
|   |   | | |-ImplicitCastExpr 0x11e028da0 <col:30> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x11e028c70 <col:30> 'const char *' lvalue Var 0x11e00df80 'remainder' 'const char *'
|   |   | | |-ImplicitCastExpr 0x11e028db8 <col:41> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x11e028c90 <col:41> 'int' lvalue Var 0x11e00e0b0 'remaining_bytes' 'int'
|   |   | | `-UnaryOperator 0x11e028d00 <col:58, col:59> 'const char **' prefix '&' cannot overflow
|   |   | |   `-DeclRefExpr 0x11e028cb0 <col:59> 'const char *' lvalue Var 0x11e00e000 'invalid' 'const char *'
|   |   | `-BreakStmt 0x11e028dd0 <line:17:13>
|   |   |-BinaryOperator 0x11e028ec0 <line:18:9, col:33> 'int' '='
|   |   | |-DeclRefExpr 0x11e028df8 <col:9> 'int' lvalue Var 0x11e00e130 'valid_bytes' 'int'
|   |   | `-ImplicitCastExpr 0x11e028ea8 <col:23, col:33> 'int' <IntegralCast>
|   |   |   `-BinaryOperator 0x11e028e88 <col:23, col:33> 'long' '-'
|   |   |     |-ImplicitCastExpr 0x11e028e58 <col:23> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x11e028e18 <col:23> 'const char *' lvalue Var 0x11e00e000 'invalid' 'const char *'
|   |   |     `-ImplicitCastExpr 0x11e028e70 <col:33> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x11e028e38 <col:33> 'const char *' lvalue Var 0x11e00df80 'remainder' 'const char *'
|   |   |-CallExpr 0x11e0292b8 <line:23:9, col:60> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x11e0291e8 <col:9> 'int ()' Function 0x11e029130 'g_string_append_len' 'int ()'
|   |   | |-RecoveryExpr 0x11e029298 <col:30> '<dependent type>' contains-errors lvalue
|   |   | |-DeclRefExpr 0x11e029220 <col:38> 'const char *' lvalue Var 0x11e00df80 'remainder' 'const char *'
|   |   | `-DeclRefExpr 0x11e029240 <col:49> 'int' lvalue Var 0x11e00e130 'valid_bytes' 'int'
|   |   |-CallExpr 0x11e02a680 <line:24:9, col:39> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x11e0293d0 <col:9> 'int ()' Function 0x11e029318 'g_string_append_c' 'int ()'
|   |   | |-RecoveryExpr 0x11e02a660 <col:28> '<dependent type>' contains-errors lvalue
|   |   | `-CharacterLiteral 0x11e02a618 <col:36> 'int' 63
|   |   |-CompoundAssignOperator 0x11e02a748 <line:26:9, col:42> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x11e02a6b0 <col:9> 'int' lvalue Var 0x11e00e0b0 'remaining_bytes' 'int'
|   |   | `-BinaryOperator 0x11e02a728 <col:28, col:42> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x11e02a710 <col:28> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x11e02a6d0 <col:28> 'int' lvalue Var 0x11e00e130 'valid_bytes' 'int'
|   |   |   `-IntegerLiteral 0x11e02a6f0 <col:42> 'int' 1
|   |   `-BinaryOperator 0x11e02a810 <line:27:9, col:31> 'const char *' '='
|   |     |-DeclRefExpr 0x11e02a778 <col:9> 'const char *' lvalue Var 0x11e00df80 'remainder' 'const char *'
|   |     `-BinaryOperator 0x11e02a7f0 <col:21, col:31> 'const char *' '+'
|   |       |-ImplicitCastExpr 0x11e02a7d8 <col:21> 'const char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x11e02a798 <col:21> 'const char *' lvalue Var 0x11e00e000 'invalid' 'const char *'
|   |       `-IntegerLiteral 0x11e02a7b8 <col:31> 'int' 1
|   `-IfStmt 0x11e02ad28 <line:30:5, line:31:62>
|     |-BinaryOperator 0x11e02a920 <line:30:9, col:19> 'int' contains-errors '=='
|     | |-RecoveryExpr 0x11e02a8e0 <col:9> '<dependent type>' contains-errors lvalue
|     | `-RecoveryExpr 0x11e02a900 <col:19> '<dependent type>' contains-errors lvalue
|     `-ReturnStmt 0x11e02ad18 <line:31:9, col:62>
|       `-ConditionalOperator 0x11e02ace8 <col:16, col:62> 'int'
|         |-BinaryOperator 0x11e02a998 <col:16, col:22> 'int' '<'
|         | |-ImplicitCastExpr 0x11e02a980 <col:16> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x11e02a940 <col:16> 'int' lvalue ParmVar 0x11e00dd58 'len' 'int'
|         | `-IntegerLiteral 0x11e02a960 <col:22> 'int' 0
|         |-CallExpr 0x11e02ab10 <col:26, col:45> 'int'
|         | |-ImplicitCastExpr 0x11e02aaf8 <col:26> 'int (*)()' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x11e02aa98 <col:26> 'int ()' Function 0x11e02a9e0 'g_strndup' 'int ()'
|         | |-ImplicitCastExpr 0x11e02ab40 <col:37> 'const char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x11e02aab8 <col:37> 'const char *' lvalue ParmVar 0x11e00dcd8 'str' 'const char *'
|         | `-ImplicitCastExpr 0x11e02ab58 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x11e02aad8 <col:42> 'int' lvalue ParmVar 0x11e00dd58 'len' 'int'
|         `-CallExpr 0x11e02aca8 <col:49, col:62> 'int'
|           |-ImplicitCastExpr 0x11e02ac90 <col:49> 'int (*)()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x11e02ac50 <col:49> 'int ()' Function 0x11e02ab98 'g_strdup' 'int ()'
|           `-ImplicitCastExpr 0x11e02acd0 <col:59> 'const char *' <LValueToRValue>
|             `-DeclRefExpr 0x11e02ac70 <col:59> 'const char *' lvalue ParmVar 0x11e00dcd8 'str' 'const char *'
`-FunctionDecl 0x11e028790 <line:11:27> col:27 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x11e028890 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x11e028838 <<invalid sloc>> Implicit 902
