TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12a926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a926800 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12a926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12a926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12a926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12a926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12a926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12a926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12a926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12a928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12a9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a9287b0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12a928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a9287b0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
`-FunctionDecl 0x12a928d28 <dataset_diviso_filec/func12543_vuln.c:1:1, line:80:1> line:1:1 invalid ri_ReportViolation 'int (const int *, int, int, int, int, int, int)'
  |-ParmVarDecl 0x12a9288f0 <col:20, col:45> col:45 invalid riinfo 'const int *'
  |-ParmVarDecl 0x12a928970 <line:2:8, col:17> col:17 invalid pk_rel 'int'
  |-ParmVarDecl 0x12a9289f0 <col:25, col:34> col:34 invalid fk_rel 'int'
  |-ParmVarDecl 0x12a928a70 <line:3:8, col:18> col:18 invalid violator 'int'
  |-ParmVarDecl 0x12a928af0 <col:28, col:38> col:38 referenced invalid tupdesc 'int'
  |-ParmVarDecl 0x12a928b70 <line:4:8, col:12> col:12 used queryno 'int'
  |-ParmVarDecl 0x12a928bf0 <col:21, col:26> col:26 invalid spi_err 'int'
  `-CompoundStmt 0x12a944368 <line:5:1, line:80:1>
    |-DeclStmt 0x12a928e88 <line:9:2, col:22>
    | `-VarDecl 0x12a928e20 <col:2, col:15> col:15 referenced invalid attnums 'const int *'
    |-DeclStmt 0x12a928f20 <line:10:2, col:11>
    | `-VarDecl 0x12a928eb8 <col:2, col:8> col:8 used idx 'int'
    |-IfStmt 0x12a942d78 <line:23:2, line:34:2> has_else
    | |-RecoveryExpr 0x12a942918 <line:23:6> '_Bool' contains-errors
    | |-CompoundStmt 0x12a942b38 <line:24:2, line:28:2>
    | | |-BinaryOperator 0x12a9429e8 <line:25:3, col:21> '<dependent type>' contains-errors '='
    | | | |-RecoveryExpr 0x12a942958 <col:3> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x12a942938 <col:3> 'const int *' lvalue Var 0x12a928e20 'attnums' 'const int *'
    | | | `-CXXDependentScopeMemberExpr 0x12a9429a0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->fk_attnums
    | | |   `-RecoveryExpr 0x12a942980 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x12a942b18 <line:26:3, line:27:22>
    | |   |-RecoveryExpr 0x12a942a28 <line:26:7, col:18> '_Bool' contains-errors
    | |   `-BinaryOperator 0x12a942af8 <line:27:4, col:22> '<dependent type>' contains-errors '='
    | |     |-RecoveryExpr 0x12a942a68 <col:4> '<dependent type>' contains-errors lvalue
    | |     | `-DeclRefExpr 0x12a942a48 <col:4> 'int' lvalue ParmVar 0x12a928af0 'tupdesc' 'int'
    | |     `-CXXDependentScopeMemberExpr 0x12a942ab0 <col:14, col:22> '<dependent type>' contains-errors lvalue ->rd_att
    | |       `-RecoveryExpr 0x12a942a90 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a942d58 <line:30:2, line:34:2>
    |   |-BinaryOperator 0x12a942c08 <line:31:3, col:21> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12a942b78 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12a942b58 <col:3> 'const int *' lvalue Var 0x12a928e20 'attnums' 'const int *'
    |   | `-CXXDependentScopeMemberExpr 0x12a942bc0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->pk_attnums
    |   |   `-RecoveryExpr 0x12a942ba0 <col:13> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12a942d38 <line:32:3, line:33:22>
    |     |-RecoveryExpr 0x12a942c48 <line:32:7, col:18> '_Bool' contains-errors
    |     `-BinaryOperator 0x12a942d18 <line:33:4, col:22> '<dependent type>' contains-errors '='
    |       |-RecoveryExpr 0x12a942c88 <col:4> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x12a942c68 <col:4> 'int' lvalue ParmVar 0x12a928af0 'tupdesc' 'int'
    |       `-CXXDependentScopeMemberExpr 0x12a942cd0 <col:14, col:22> '<dependent type>' contains-errors lvalue ->rd_att
    |         `-RecoveryExpr 0x12a942cb0 <col:14> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x12a9439a8 <line:39:2, line:57:2>
      |-BinaryOperator 0x12a942f08 <line:39:7, col:13> 'int' '='
      | |-DeclRefExpr 0x12a942ec8 <col:7> 'int' lvalue Var 0x12a928eb8 'idx' 'int'
      | `-IntegerLiteral 0x12a942ee8 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x12a942fb0 <col:16, col:30> 'int' contains-errors '<'
      | |-DeclRefExpr 0x12a942f28 <col:16> 'int' lvalue Var 0x12a928eb8 'idx' 'int'
      | `-CXXDependentScopeMemberExpr 0x12a942f68 <col:22, col:30> '<dependent type>' contains-errors lvalue ->nkeys
      |   `-RecoveryExpr 0x12a942f48 <col:22> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x12a943000 <col:37, col:40> 'int' postfix '++'
      | `-DeclRefExpr 0x12a942fd0 <col:37> 'int' lvalue Var 0x12a928eb8 'idx' 'int'
      `-CompoundStmt 0x12a943968 <line:40:2, line:57:2>
        |-DeclStmt 0x12a943128 <line:41:3, col:28>
        | `-VarDecl 0x12a943030 <col:3, col:27> col:9 used fnum 'int' cinit
        |   `-ArraySubscriptExpr 0x12a943108 <col:16, col:27> '<dependent type>' contains-errors lvalue
        |     |-ImplicitCastExpr 0x12a9430d8 <col:16> '<dependent type>' contains-errors <LValueToRValue>
        |     | `-RecoveryExpr 0x12a943098 <col:16> '<dependent type>' contains-errors lvalue
        |     `-ImplicitCastExpr 0x12a9430f0 <col:24> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x12a9430b8 <col:24> 'int' lvalue Var 0x12a928eb8 'idx' 'int'
        |-DeclStmt 0x12a943258 <line:42:3, line:43:12>
        | |-VarDecl 0x12a943158 <line:42:3, col:12> col:12 used name 'char *'
        | `-VarDecl 0x12a9431d8 <col:3, line:43:9> col:9 used val 'char *'
        |-BinaryOperator 0x12a943400 <line:45:3, col:33> 'char *' contains-errors '='
        | |-DeclRefExpr 0x12a943270 <col:3> 'char *' lvalue Var 0x12a943158 'name' 'char *'
        | `-CallExpr 0x12a9433d0 <col:10, col:33> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x12a943370 <col:10> 'int ()' Function 0x12a9432b8 'SPI_fname' 'int ()'
        |   |-RecoveryExpr 0x12a943390 <col:20> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x12a9433b0 <col:29> 'int' contains-errors lvalue Var 0x12a943030 'fnum' 'int'
        |-BinaryOperator 0x12a9435d8 <line:46:3, col:45> 'char *' contains-errors '='
        | |-DeclRefExpr 0x12a943420 <col:3> 'char *' lvalue Var 0x12a9431d8 'val' 'char *'
        | `-CallExpr 0x12a9435a0 <col:9, col:45> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x12a943520 <col:9> 'int ()' Function 0x12a943468 'SPI_getvalue' 'int ()'
        |   |-RecoveryExpr 0x12a943540 <col:22> '<dependent type>' contains-errors lvalue
        |   |-RecoveryExpr 0x12a943560 <col:32> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x12a943580 <col:41> 'int' contains-errors lvalue Var 0x12a943030 'fnum' 'int'
        |-IfStmt 0x12a9436c0 <line:47:3, line:48:10>
        | |-UnaryOperator 0x12a943630 <line:47:7, col:8> 'int' prefix '!' cannot overflow
        | | `-ImplicitCastExpr 0x12a943618 <col:8> 'char *' <LValueToRValue>
        | |   `-DeclRefExpr 0x12a9435f8 <col:8> 'char *' lvalue Var 0x12a9431d8 'val' 'char *'
        | `-BinaryOperator 0x12a9436a0 <line:48:4, col:10> 'char *' '='
        |   |-DeclRefExpr 0x12a943648 <col:4> 'char *' lvalue Var 0x12a9431d8 'val' 'char *'
        |   `-ImplicitCastExpr 0x12a943688 <col:10> 'char *' <ArrayToPointerDecay>
        |     `-StringLiteral 0x12a943668 <col:10> 'char[4]' lvalue "STR"
        `-IfStmt 0x12a9438c8 <line:50:3, line:54:3>
          |-BinaryOperator 0x12a943738 <line:50:7, col:13> 'int' '>'
          | |-ImplicitCastExpr 0x12a943720 <col:7> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x12a9436e0 <col:7> 'int' lvalue Var 0x12a928eb8 'idx' 'int'
          | `-IntegerLiteral 0x12a943700 <col:13> 'int' 0
          `-CompoundStmt 0x12a9438b8 <line:51:3, line:54:3>
