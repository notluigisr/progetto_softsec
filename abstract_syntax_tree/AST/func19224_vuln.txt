TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x127926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x127926000 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x127926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x127926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x127926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x1279263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x127926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x1279264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x127926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x127926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x1279265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x127926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1279266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x127926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x127926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1279267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x127926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1279268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x127926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x127926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1279269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x127926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x127926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x127926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x127926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x127926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x127926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x127926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x127926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x127926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x127926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x127926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x127926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x127926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x127926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x127927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x127927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1279278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x127927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1279279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x127927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x127927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x127927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x127927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x127927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x127927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x127927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x127927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x127927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x127927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x127927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x127927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x127927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x127927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x127927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x127928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-FunctionDecl 0x1279284f8 <dataset_diviso_filec/func19224_vuln.c:1:1, line:46:1> line:1:1 invalid gerbv_gdk_draw_prim5 'int (int *, int *, double *, double, int, int)'
| |-ParmVarDecl 0x127928128 <col:22, col:33> col:33 invalid pixmap 'int *'
| |-ParmVarDecl 0x1279281a8 <col:41, col:48> col:48 invalid gc 'int *'
| |-ParmVarDecl 0x127928258 <col:52, col:60> col:60 used p 'double *'
| |-ParmVarDecl 0x1279282d8 <line:2:8, col:15> col:15 used scale 'double'
| |-ParmVarDecl 0x127928358 <col:22, col:27> col:27 used x 'int'
| |-ParmVarDecl 0x1279283d8 <col:30, col:35> col:35 used y 'int'
| `-CompoundStmt 0x1279460c0 <line:3:1, line:46:1>
|   |-DeclStmt 0x127928670 <line:4:5, col:31>
|   | `-VarDecl 0x1279285e8 <col:5, col:30> col:15 used exposure_idx 'const int' cinit
|   |   `-IntegerLiteral 0x127928650 <col:30> 'int' 0
|   |-DeclStmt 0x127928728 <line:5:5, col:35>
|   | `-VarDecl 0x1279286a0 <col:5, col:34> col:15 used nuf_vertices_idx 'const int' cinit
|   |   `-IntegerLiteral 0x127928708 <col:34> 'int' 1
|   |-DeclStmt 0x1279287e0 <line:6:5, col:31>
|   | `-VarDecl 0x127928758 <col:5, col:30> col:15 used center_x_idx 'const int' cinit
|   |   `-IntegerLiteral 0x1279287c0 <col:30> 'int' 2
|   |-DeclStmt 0x1279418a0 <line:7:5, col:31>
|   | `-VarDecl 0x127941818 <col:5, col:30> col:15 used center_y_idx 'const int' cinit
|   |   `-IntegerLiteral 0x127941880 <col:30> 'int' 3
|   |-DeclStmt 0x127941958 <line:8:5, col:31>
|   | `-VarDecl 0x1279418d0 <col:5, col:30> col:15 used diameter_idx 'const int' cinit
|   |   `-IntegerLiteral 0x127941938 <col:30> 'int' 4
|   |-DeclStmt 0x127941a10 <line:9:5, col:31>
|   | `-VarDecl 0x127941988 <col:5, col:30> col:15 used rotation_idx 'const int' cinit
|   |   `-IntegerLiteral 0x1279419f0 <col:30> 'int' 5
|   |-DeclStmt 0x127941b40 <line:10:5, col:24>
|   | |-VarDecl 0x127941a40 <col:5, col:9> col:9 used nuf_vertices 'int'
|   | `-VarDecl 0x127941ac0 <col:5, col:23> col:23 used i 'int'
|   |-DeclStmt 0x127941d80 <line:11:5, col:42>
|   | |-VarDecl 0x127941b70 <col:5, col:12> col:12 used vertex 'double'
|   | |-VarDecl 0x127941bf0 <col:5, col:20> col:20 used tick 'double'
|   | |-VarDecl 0x127941c70 <col:5, col:26> col:26 used rotation 'double'
|   | `-VarDecl 0x127941cf0 <col:5, col:36> col:36 used radius 'double'
|   |-BinaryOperator 0x127942090 <line:16:5, col:43> 'int' '='
|   | |-DeclRefExpr 0x127941f88 <col:5> 'int' lvalue Var 0x127941a40 'nuf_vertices' 'int'
|   | `-CStyleCastExpr 0x127942068 <col:20, col:43> 'int' <FloatingToIntegral>
|   |   `-ImplicitCastExpr 0x127942050 <col:25, col:43> 'double' <LValueToRValue> part_of_explicit_cast
|   |     `-ArraySubscriptExpr 0x127942018 <col:25, col:43> 'double' lvalue
|   |       |-ImplicitCastExpr 0x127941fe8 <col:25> 'double *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x127941fa8 <col:25> 'double *' lvalue ParmVar 0x127928258 'p' 'double *'
|   |       `-ImplicitCastExpr 0x127942000 <col:27> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x127941fc8 <col:27> 'const int' lvalue Var 0x1279286a0 'nuf_vertices_idx' 'const int'
|   |-IfStmt 0x1279424c0 <line:18:5, line:21:5>
|   | |-UnaryOperator 0x1279422f0 <line:18:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1279422d8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1279422b8 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1279424a0 <col:18, line:21:5>
|   |   |-CallExpr 0x127942468 <line:19:2, col:15> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1279423e8 <col:2> 'int ()' Function 0x127942330 'g_free' 'int ()'
|   |   | `-RecoveryExpr 0x127942448 <col:9> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x127942490 <line:20:2>
|   |-CallExpr 0x127942668 <line:23:5, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1279425c0 <col:5> 'int ()' Function 0x127942508 'gdk_gc_copy' 'int ()'
|   | |-RecoveryExpr 0x127942648 <col:17> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x1279425f8 <col:27> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x127944710 <line:26:5, line:29:5>
|   | |-BinaryOperator 0x1279427b8 <line:26:9, col:28> 'int' '=='
|   | | |-ImplicitCastExpr 0x127942748 <col:9, col:23> 'double' <LValueToRValue>
|   | | | `-ArraySubscriptExpr 0x127942708 <col:9, col:23> 'double' lvalue
|   | | |   |-ImplicitCastExpr 0x1279426d8 <col:9> 'double *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x127942698 <col:9> 'double *' lvalue ParmVar 0x127928258 'p' 'double *'
|   | | |   `-ImplicitCastExpr 0x1279426f0 <col:11> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1279426b8 <col:11> 'const int' lvalue Var 0x1279285e8 'exposure_idx' 'const int'
|   | | `-FloatingLiteral 0x127942728 <col:28> 'double' 0.000000e+00
|   | `-CompoundStmt 0x127944700 <col:33, line:29:5>
|   |-BinaryOperator 0x127944aa8 <line:32:5, col:40> 'double' '='
|   | |-DeclRefExpr 0x1279447e8 <col:5> 'double' lvalue Var 0x127941c70 'rotation' 'double'
|   | `-ImplicitCastExpr 0x127944a90 <col:16, col:40> 'double' <IntegralToFloating>
|   |   `-CallExpr 0x127944a68 <col:16, col:40> 'int'
|   |     |-ImplicitCastExpr 0x127944a50 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1279448e8 <col:16> 'int ()' Function 0x127944830 'DEG2RAD' 'int ()'
|   |     `-UnaryOperator 0x127944a08 <col:24, col:39> 'double' prefix '-'
|   |       `-ImplicitCastExpr 0x127944998 <col:25, col:39> 'double' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x127944978 <col:25, col:39> 'double' lvalue
|   |           |-ImplicitCastExpr 0x127944948 <col:25> 'double *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x127944908 <col:25> 'double *' lvalue ParmVar 0x127928258 'p' 'double *'
|   |           `-ImplicitCastExpr 0x127944960 <col:27> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x127944928 <col:27> 'const int' lvalue Var 0x127941988 'rotation_idx' 'const int'
|   |-BinaryOperator 0x127944c28 <line:33:5, col:32> 'double' '='
|   | |-DeclRefExpr 0x127944ac8 <col:5> 'double' lvalue Var 0x127941cf0 'radius' 'double'
|   | `-BinaryOperator 0x127944c08 <col:14, col:32> 'double' '/'
|   |   |-ImplicitCastExpr 0x127944b98 <col:14, col:28> 'double' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x127944b58 <col:14, col:28> 'double' lvalue
|   |   |   |-ImplicitCastExpr 0x127944b28 <col:14> 'double *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x127944ae8 <col:14> 'double *' lvalue ParmVar 0x127928258 'p' 'double *'
|   |   |   `-ImplicitCastExpr 0x127944b40 <col:16> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x127944b08 <col:16> 'const int' lvalue Var 0x1279418d0 'diameter_idx' 'const int'
|   |   `-FloatingLiteral 0x127944b78 <col:32> 'double' 2.000000e+00
|   |-ForStmt 0x127945df8 <line:34:5, line:38:5>
|   | |-BinaryOperator 0x127944c88 <line:34:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x127944c48 <col:10> 'int' lvalue Var 0x127941ac0 'i' 'int'
|   | | `-IntegerLiteral 0x127944c68 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x127944d18 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x127944ce8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x127944ca8 <col:17> 'int' lvalue Var 0x127941ac0 'i' 'int'
|   | | `-ImplicitCastExpr 0x127944d00 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127944cc8 <col:21> 'int' lvalue Var 0x127941a40 'nuf_vertices' 'int'
|   | |-UnaryOperator 0x127944d58 <col:35, col:36> 'int' postfix '++'
|   | | `-DeclRefExpr 0x127944d38 <col:35> 'int' lvalue Var 0x127941ac0 'i' 'int'
|   | `-CompoundStmt 0x127945de0 <col:40, line:38:5>
|   |   `-BinaryOperator 0x127944eb8 <line:35:2, col:31> 'double' '='
|   |     |-DeclRefExpr 0x127944d70 <col:2> 'double' lvalue Var 0x127941b70 'vertex' 'double'
|   |     `-BinaryOperator 0x127944e98 <col:12, col:31> 'double' '+'
|   |       |-BinaryOperator 0x127944e40 <col:12, col:27> 'double' '*'
|   |       | |-ImplicitCastExpr 0x127944e28 <col:12> 'double' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x127944d90 <col:12> 'double' lvalue Var 0x127941bf0 'tick' 'double'
|   |       | `-CStyleCastExpr 0x127944e00 <col:19, col:27> 'double' <IntegralToFloating>
|   |       |   `-ImplicitCastExpr 0x127944de8 <col:27> 'int' <LValueToRValue> part_of_explicit_cast
|   |       |     `-DeclRefExpr 0x127944db0 <col:27> 'int' lvalue Var 0x127941ac0 'i' 'int'
|   |       `-ImplicitCastExpr 0x127944e80 <col:31> 'double' <LValueToRValue>
|   |         `-DeclRefExpr 0x127944e60 <col:31> 'double' lvalue Var 0x127941c70 'rotation' 'double'
|   `-ReturnStmt 0x1279460b0 <line:45:5>
|-FunctionDecl 0x127944f38 <line:36:21> col:21 implicit used round 'double (double)' extern
| |-ParmVarDecl 0x127945038 <<invalid sloc>> <invalid sloc> 'double'
| |-BuiltinAttr 0x127944fe0 <<invalid sloc>> Implicit 1145
| |-NoThrowAttr 0x1279450a8 <col:21> Implicit
| `-ConstAttr 0x1279450d0 <col:21> Implicit
|-FunctionDecl 0x127945158 <col:45> col:45 implicit used cos 'double (double)' extern
| |-ParmVarDecl 0x127945258 <<invalid sloc>> <invalid sloc> 'double'
| |-BuiltinAttr 0x127945200 <<invalid sloc>> Implicit 1055
| |-ConstAttr 0x1279452c8 <col:45> Implicit
| `-NoThrowAttr 0x1279452f0 <col:45> Implicit
`-FunctionDecl 0x127945900 <line:37:45> col:45 implicit used sin 'double (double)' extern
  |-ParmVarDecl 0x127945a00 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x1279459a8 <<invalid sloc>> Implicit 1157
  |-ConstAttr 0x127945a70 <col:45> Implicit
  `-NoThrowAttr 0x127945a98 <col:45> Implicit
