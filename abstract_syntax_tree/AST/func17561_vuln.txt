TranslationUnitDecl 0x13704fc08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x137050ab8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1370501d0 '__int128'
|-TypedefDecl 0x137050b28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1370501f0 'unsigned __int128'
|-TypedefDecl 0x137812030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137811e00 'struct __NSConstantString_tag'
|   `-Record 0x137050b80 '__NSConstantString_tag'
|-TypedefDecl 0x137812098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137050390 '__SVInt8_t'
|-TypedefDecl 0x137812100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1370503b0 '__SVInt16_t'
|-TypedefDecl 0x137812168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1370503d0 '__SVInt32_t'
|-TypedefDecl 0x1378121d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1370503f0 '__SVInt64_t'
|-TypedefDecl 0x137812238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137050410 '__SVUint8_t'
|-TypedefDecl 0x1378122a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137050430 '__SVUint16_t'
|-TypedefDecl 0x137812308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137050450 '__SVUint32_t'
|-TypedefDecl 0x137812370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137050470 '__SVUint64_t'
|-TypedefDecl 0x1378123d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137050490 '__SVFloat16_t'
|-TypedefDecl 0x137812440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1370504b0 '__SVFloat32_t'
|-TypedefDecl 0x1378124a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1370504d0 '__SVFloat64_t'
|-TypedefDecl 0x137812510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1370504f0 '__SVBfloat16_t'
|-TypedefDecl 0x137812578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137050510 '__clang_svint8x2_t'
|-TypedefDecl 0x1378125e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137050530 '__clang_svint16x2_t'
|-TypedefDecl 0x137812648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137050550 '__clang_svint32x2_t'
|-TypedefDecl 0x1378126b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137050570 '__clang_svint64x2_t'
|-TypedefDecl 0x137812718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137050590 '__clang_svuint8x2_t'
|-TypedefDecl 0x137812780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1370505b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1378127e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1370505d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137812850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1370505f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1378128b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137050610 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137812920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137050630 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137812988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137050650 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1378129f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137050670 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137812a58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137050690 '__clang_svint8x3_t'
|-TypedefDecl 0x137812ac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370506b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137812b28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370506d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137812b90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370506f0 '__clang_svint64x3_t'
|-TypedefDecl 0x137812bf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137050710 '__clang_svuint8x3_t'
|-TypedefDecl 0x137812c60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137050730 '__clang_svuint16x3_t'
|-TypedefDecl 0x137812cc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137050750 '__clang_svuint32x3_t'
|-TypedefDecl 0x137812d30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137050770 '__clang_svuint64x3_t'
|-TypedefDecl 0x137812d98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137050790 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137813600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370507b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137813668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370507d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1378136d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370507f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137813738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137050810 '__clang_svint8x4_t'
|-TypedefDecl 0x1378137a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137050830 '__clang_svint16x4_t'
|-TypedefDecl 0x137813808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137050850 '__clang_svint32x4_t'
|-TypedefDecl 0x137813870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137050870 '__clang_svint64x4_t'
|-TypedefDecl 0x1378138d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137050890 '__clang_svuint8x4_t'
|-TypedefDecl 0x137813940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370508b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1378139a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370508d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137813a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370508f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137813a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137050910 '__clang_svfloat16x4_t'
|-TypedefDecl 0x137813ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137050930 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137813b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137050950 '__clang_svfloat64x4_t'
|-TypedefDecl 0x137813bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137050970 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137813c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137050990 '__SVBool_t'
|-TypedefDecl 0x137813c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370509b0 '__clang_svboolx2_t'
|-TypedefDecl 0x137813ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370509d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137813d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370509f0 '__SVCount_t'
|-TypedefDecl 0x137813df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x137813db0 'char *'
|   `-BuiltinType 0x13704fcb0 'char'
|-TypedefDecl 0x137813e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x137813db0 'char *'
|   `-BuiltinType 0x13704fcb0 'char'
`-FunctionDecl 0x13782ca78 <dataset_diviso_filec/func17561_vuln.c:1:1, line:21:1> line:1:22 asn1_header_decode 'unsigned char (struct asn1_ctx *, unsigned char **, unsigned int *, unsigned int *, unsigned int *)' static
  |-ParmVarDecl 0x137814448 <col:41, col:58> col:58 used ctx 'struct asn1_ctx *'
  |-ParmVarDecl 0x137814530 <line:2:6, col:22> col:22 used eoc 'unsigned char **'
  |-ParmVarDecl 0x13782c800 <line:3:6, col:20> col:20 used cls 'unsigned int *'
  |-ParmVarDecl 0x13782c880 <line:4:6, col:20> col:20 used con 'unsigned int *'
  |-ParmVarDecl 0x13782c900 <line:5:6, col:20> col:20 used tag 'unsigned int *'
  `-CompoundStmt 0x13782d610 <line:6:1, line:21:1>
    |-DeclStmt 0x13782cca8 <line:7:2, col:23>
    | |-VarDecl 0x13782cba8 <col:2, col:15> col:15 used def 'unsigned int'
    | `-VarDecl 0x13782cc28 <col:2, col:20> col:20 used len 'unsigned int'
    |-IfStmt 0x13782cfd8 <line:9:2, line:10:10>
    | |-UnaryOperator 0x13782cf78 <line:9:6, col:40> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x13782ced8 <col:7, col:40> 'int'
    | |   |-ImplicitCastExpr 0x13782cec0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13782cdf0 <col:7> 'int ()' Function 0x13782cd38 'asn1_id_decode' 'int ()'
    | |   |-ImplicitCastExpr 0x13782cf18 <col:22> 'struct asn1_ctx *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13782ce10 <col:22> 'struct asn1_ctx *' lvalue ParmVar 0x137814448 'ctx' 'struct asn1_ctx *'
    | |   |-ImplicitCastExpr 0x13782cf30 <col:27> 'unsigned int *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13782ce30 <col:27> 'unsigned int *' lvalue ParmVar 0x13782c800 'cls' 'unsigned int *'
    | |   |-ImplicitCastExpr 0x13782cf48 <col:32> 'unsigned int *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13782ce50 <col:32> 'unsigned int *' lvalue ParmVar 0x13782c880 'con' 'unsigned int *'
    | |   `-ImplicitCastExpr 0x13782cf60 <col:37> 'unsigned int *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13782ce70 <col:37> 'unsigned int *' lvalue ParmVar 0x13782c900 'tag' 'unsigned int *'
    | `-ReturnStmt 0x13782cfc8 <line:10:3, col:10>
    |   `-ImplicitCastExpr 0x13782cfb0 <col:10> 'unsigned char' <IntegralCast>
    |     `-IntegerLiteral 0x13782cf90 <col:10> 'int' 0
    |-BinaryOperator 0x13782d090 <line:12:2, col:14> 'unsigned int' '='
    | |-DeclRefExpr 0x13782cff8 <col:2> 'unsigned int' lvalue Var 0x13782cba8 'def' 'unsigned int'
    | `-BinaryOperator 0x13782d070 <col:8, col:14> 'unsigned int' '='
    |   |-DeclRefExpr 0x13782d018 <col:8> 'unsigned int' lvalue Var 0x13782cc28 'len' 'unsigned int'
    |   `-ImplicitCastExpr 0x13782d058 <col:14> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x13782d038 <col:14> 'int' 0
    |-IfStmt 0x13782d308 <line:13:2, line:14:10>
    | |-UnaryOperator 0x13782d2a8 <line:13:6, col:41> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x13782d258 <col:7, col:41> 'int'
    | |   |-ImplicitCastExpr 0x13782d240 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13782d190 <col:7> 'int ()' Function 0x13782d0d8 'asn1_length_decode' 'int ()'
    | |   |-ImplicitCastExpr 0x13782d290 <col:26> 'struct asn1_ctx *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13782d1b0 <col:26> 'struct asn1_ctx *' lvalue ParmVar 0x137814448 'ctx' 'struct asn1_ctx *'
    | |   |-UnaryOperator 0x13782d1f0 <col:31, col:32> 'unsigned int *' prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x13782d1d0 <col:32> 'unsigned int' lvalue Var 0x13782cba8 'def' 'unsigned int'
    | |   `-UnaryOperator 0x13782d228 <col:37, col:38> 'unsigned int *' prefix '&' cannot overflow
    | |     `-DeclRefExpr 0x13782d208 <col:38> 'unsigned int' lvalue Var 0x13782cc28 'len' 'unsigned int'
    | `-ReturnStmt 0x13782d2f8 <line:14:3, col:10>
    |   `-ImplicitCastExpr 0x13782d2e0 <col:10> 'unsigned char' <IntegralCast>
    |     `-IntegerLiteral 0x13782d2c0 <col:10> 'int' 0
    |-IfStmt 0x13782d598 <line:16:2, line:19:10> has_else
    | |-ImplicitCastExpr 0x13782d348 <line:16:6> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x13782d328 <col:6> 'unsigned int' lvalue Var 0x13782cba8 'def' 'unsigned int'
    | |-BinaryOperator 0x13782d450 <line:17:3, col:25> 'unsigned char *' contains-errors '='
    | | |-UnaryOperator 0x13782d398 <col:3, col:4> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x13782d380 <col:4> 'unsigned char **' <LValueToRValue>
    | | |   `-DeclRefExpr 0x13782d360 <col:4> 'unsigned char **' lvalue ParmVar 0x137814530 'eoc' 'unsigned char **'
    | | `-BinaryOperator 0x13782d430 <col:10, col:25> '<dependent type>' contains-errors '+'
    | |   |-RecoveryExpr 0x13782d3e8 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x13782d3b0 <col:10> 'struct asn1_ctx *' lvalue ParmVar 0x137814448 'ctx' 'struct asn1_ctx *'
    | |   `-DeclRefExpr 0x13782d410 <col:25> 'unsigned int' lvalue Var 0x13782cc28 'len' 'unsigned int'
    | `-BinaryOperator 0x13782d578 <line:19:3, col:10> 'unsigned char *' contains-errors '='
    |   |-UnaryOperator 0x13782d540 <col:3, col:4> 'unsigned char *' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x13782d528 <col:4> 'unsigned char **' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13782d470 <col:4> 'unsigned char **' lvalue ParmVar 0x137814530 'eoc' 'unsigned char **'
    |   `-RecoveryExpr 0x13782d558 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13782d600 <line:20:2, col:9>
      `-ImplicitCastExpr 0x13782d5e8 <col:9> 'unsigned char' <IntegralCast>
        `-IntegerLiteral 0x13782d5c8 <col:9> 'int' 1
