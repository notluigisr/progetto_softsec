TranslationUnitDecl 0x13783e808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13783f6b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13783edd0 '__int128'
|-TypedefDecl 0x13783f728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13783edf0 'unsigned __int128'
|-TypedefDecl 0x13705d430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13705d200 'struct __NSConstantString_tag'
|   `-Record 0x13783f780 '__NSConstantString_tag'
|-TypedefDecl 0x13705d498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13783ef90 '__SVInt8_t'
|-TypedefDecl 0x13705d500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13783efb0 '__SVInt16_t'
|-TypedefDecl 0x13705d568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13783efd0 '__SVInt32_t'
|-TypedefDecl 0x13705d5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13783eff0 '__SVInt64_t'
|-TypedefDecl 0x13705d638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13783f010 '__SVUint8_t'
|-TypedefDecl 0x13705d6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13783f030 '__SVUint16_t'
|-TypedefDecl 0x13705d708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13783f050 '__SVUint32_t'
|-TypedefDecl 0x13705d770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13783f070 '__SVUint64_t'
|-TypedefDecl 0x13705d7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13783f090 '__SVFloat16_t'
|-TypedefDecl 0x13705d840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13783f0b0 '__SVFloat32_t'
|-TypedefDecl 0x13705d8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13783f0d0 '__SVFloat64_t'
|-TypedefDecl 0x13705d910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13783f0f0 '__SVBfloat16_t'
|-TypedefDecl 0x13705d978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13783f110 '__clang_svint8x2_t'
|-TypedefDecl 0x13705d9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13783f130 '__clang_svint16x2_t'
|-TypedefDecl 0x13705da48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13783f150 '__clang_svint32x2_t'
|-TypedefDecl 0x13705dab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13783f170 '__clang_svint64x2_t'
|-TypedefDecl 0x13705db18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13783f190 '__clang_svuint8x2_t'
|-TypedefDecl 0x13705db80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13783f1b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13705dbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13783f1d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13705dc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13783f1f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13705dcb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13783f210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13705dd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13783f230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13705dd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13783f250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13705ddf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13783f270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13705de58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13783f290 '__clang_svint8x3_t'
|-TypedefDecl 0x13705dec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13783f2b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13705df28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13783f2d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13705df90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13783f2f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13705dff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13783f310 '__clang_svuint8x3_t'
|-TypedefDecl 0x13705e060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13783f330 '__clang_svuint16x3_t'
|-TypedefDecl 0x13705e0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13783f350 '__clang_svuint32x3_t'
|-TypedefDecl 0x13705e130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13783f370 '__clang_svuint64x3_t'
|-TypedefDecl 0x13705e198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13783f390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13705e600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13783f3b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13705e668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13783f3d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13705e6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13783f3f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13705e738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13783f410 '__clang_svint8x4_t'
|-TypedefDecl 0x13705e7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13783f430 '__clang_svint16x4_t'
|-TypedefDecl 0x13705e808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13783f450 '__clang_svint32x4_t'
|-TypedefDecl 0x13705e870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13783f470 '__clang_svint64x4_t'
|-TypedefDecl 0x13705e8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13783f490 '__clang_svuint8x4_t'
|-TypedefDecl 0x13705e940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13783f4b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13705e9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13783f4d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13705ea10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13783f4f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13705ea78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13783f510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13705eae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13783f530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13705eb48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13783f550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13705ebb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13783f570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13705ec18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13783f590 '__SVBool_t'
|-TypedefDecl 0x13705ec80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13783f5b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13705ece8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13783f5d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13705ed50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13783f5f0 '__SVCount_t'
|-TypedefDecl 0x13705edf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13705edb0 'char *'
|   `-BuiltinType 0x13783e8b0 'char'
|-TypedefDecl 0x13705ee68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13705edb0 'char *'
|   `-BuiltinType 0x13783e8b0 'char'
|-FunctionDecl 0x13705f088 <dataset_diviso_filec/func13159_vuln.c:1:1, line:36:1> line:1:5 invalid ssh_scp_response 'int (int, char **)'
| |-ParmVarDecl 0x13705eef0 <col:22, col:30> col:30 referenced invalid scp 'int'
| |-ParmVarDecl 0x13705efa8 <col:35, col:42> col:42 used response 'char **'
| `-CompoundStmt 0x13707aff0 <col:51, line:36:1>
|   |-DeclStmt 0x13705f1c0 <line:2:2, col:20>
|   | `-VarDecl 0x13705f158 <col:2, col:16> col:16 used code 'unsigned char'
|   |-DeclStmt 0x13705f258 <line:3:2, col:7>
|   | `-VarDecl 0x13705f1f0 <col:2, col:6> col:6 used r 'int'
|   |-DeclStmt 0x13705f378 <line:4:2, col:15>
|   | `-VarDecl 0x13705f310 <col:2, col:14> col:7 used msg 'char[128]'
|   |-IfStmt 0x13705f470 <line:5:2, line:6:13>
|   | |-BinaryOperator 0x13705f408 <line:5:5, col:10> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x13705f390 <col:5> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x13705f3e8 <col:10> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13705f460 <line:6:6, col:13>
|   |   `-RecoveryExpr 0x13705f440 <col:13> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x137079188 <line:7:2, col:43> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13705f490 <col:2> 'int' lvalue Var 0x13705f1f0 'r' 'int'
|   | `-CallExpr 0x137079148 <col:4, col:43> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x137079010 <col:4> 'int ()' Function 0x13705f558 'ssh_channel_read' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x137079050 <col:21, col:26> '<dependent type>' contains-errors lvalue ->channel
|   |   | `-RecoveryExpr 0x137079030 <col:21> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x1370790f0 <col:34, col:35> 'unsigned char *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x137079098 <col:35> 'unsigned char' lvalue Var 0x13705f158 'code' 'unsigned char'
|   |   |-IntegerLiteral 0x137079108 <col:40> 'int' 1
|   |   `-IntegerLiteral 0x137079128 <col:42> 'int' 0
|   |-IfStmt 0x137079288 <line:8:2, line:9:10>
|   | |-BinaryOperator 0x137079220 <line:8:5, col:10> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x1370791a8 <col:5> 'int' lvalue Var 0x13705f1f0 'r' 'int'
|   | | `-RecoveryExpr 0x137079200 <col:10> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x137079278 <line:9:3, col:10>
|   |   `-RecoveryExpr 0x137079258 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x137079368 <line:10:2, line:11:10>
|   | |-BinaryOperator 0x137079318 <line:10:5, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x137079300 <col:5> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1370792e8 <col:5> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1370792a8 <col:5> 'unsigned char' lvalue Var 0x13705f158 'code' 'unsigned char'
|   | | `-IntegerLiteral 0x1370792c8 <col:13> 'int' 0
|   | `-ReturnStmt 0x137079358 <line:11:3, col:10>
|   |   `-IntegerLiteral 0x137079338 <col:10> 'int' 0
|   |-IfStmt 0x137079838 <line:12:2, line:16:2>
|   | |-BinaryOperator 0x1370793f8 <line:12:5, col:12> 'int' '>'
|   | | |-ImplicitCastExpr 0x1370793e0 <col:5> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1370793c8 <col:5> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x137079388 <col:5> 'unsigned char' lvalue Var 0x13705f158 'code' 'unsigned char'
|   | | `-IntegerLiteral 0x1370793a8 <col:12> 'int' 2
|   | `-CompoundStmt 0x137079810 <col:14, line:16:2>
|   |   |-CallExpr 0x137079680 <line:13:3, col:52> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1370794f8 <col:3> 'int ()' Function 0x137079440 'ssh_set_error' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x137079538 <col:17, col:22> '<dependent type>' contains-errors lvalue ->session
|   |   | | `-RecoveryExpr 0x137079518 <col:17> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x137079660 <col:30> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x1370795e0 <col:41> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x137079600 <col:48> 'unsigned char' lvalue Var 0x13705f158 'code' 'unsigned char'
|   |   |-BinaryOperator 0x1370797a8 <line:14:3, col:14> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x137079708 <col:3, col:8> '<dependent type>' contains-errors lvalue ->state
|   |   | | `-RecoveryExpr 0x1370796e0 <col:3> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1370796c0 <col:3> 'int' lvalue ParmVar 0x13705eef0 'scp' 'int'
|   |   | `-RecoveryExpr 0x137079788 <col:14> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x137079800 <line:15:3, col:10>
|   |     `-RecoveryExpr 0x1370797e0 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x137079a50 <line:17:2, col:43> 'int' contains-errors '='
|   | |-DeclRefExpr 0x137079858 <col:2> 'int' lvalue Var 0x13705f1f0 'r' 'int'
|   | `-CallExpr 0x137079a18 <col:4, col:43> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x137079958 <col:4> 'int ()' Function 0x1370798a0 'ssh_scp_read_string' 'int ()'
|   |   |-RecoveryExpr 0x137079978 <col:24> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x137079998 <col:28> 'char[128]' lvalue Var 0x13705f310 'msg' 'char[128]'
|   |   `-UnaryExprOrTypeTraitExpr 0x1370799f8 <col:32, col:42> 'unsigned long' sizeof
|   |     `-ParenExpr 0x1370799d8 <col:38, col:42> 'char[128]' lvalue
|   |       `-DeclRefExpr 0x1370799b8 <col:39> 'char[128]' lvalue Var 0x13705f310 'msg' 'char[128]' non_odr_use_unevaluated
|   |-IfStmt 0x137079b50 <line:18:2, line:19:10>
|   | |-BinaryOperator 0x137079ae8 <line:18:5, col:8> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x137079a70 <col:5> 'int' lvalue Var 0x13705f1f0 'r' 'int'
|   | | `-RecoveryExpr 0x137079ac8 <col:8> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x137079b40 <line:19:3, col:10>
|   |   `-ImplicitCastExpr 0x137079b28 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x137079b08 <col:10> 'int' lvalue Var 0x13705f1f0 'r' 'int'
|   |-IfStmt 0x13707ab70 <line:21:2, line:27:2>
|   | |-BinaryOperator 0x137079be0 <line:21:5, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x137079bc8 <col:5> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x137079bb0 <col:5> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x137079b70 <col:5> 'unsigned char' lvalue Var 0x13705f158 'code' 'unsigned char'
|   | | `-IntegerLiteral 0x137079b90 <col:13> 'int' 1
|   | `-CompoundStmt 0x13707ab40 <col:15, line:27:2>
|   |   |-CallExpr 0x137079d40 <line:22:3, col:60> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x137079c00 <col:3> 'int ()' Function 0x137079440 'ssh_set_error' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x137079c40 <col:17, col:22> '<dependent type>' contains-errors lvalue ->session
|   |   | | `-RecoveryExpr 0x137079c20 <col:17> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x137079d20 <col:30> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x137079ca0 <col:50> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x137079cc0 <col:57> 'char[128]' lvalue Var 0x13705f310 'msg' 'char[128]'
|   |   |-CallExpr 0x137079f30 <line:23:3, col:34> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x137079e60 <col:3> 'int ()' Function 0x137079da8 'SSH_LOG' 'int ()'
|   |   | |-RecoveryExpr 0x137079f10 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x137079e98 <col:24> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x137079eb8 <col:31> 'char[128]' lvalue Var 0x13705f310 'msg' 'char[128]'
|   |   |-IfStmt 0x13707aaf0 <line:24:3, line:25:24>
|   |   | |-ImplicitCastExpr 0x137079f88 <line:24:6> 'char **' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x137079f68 <col:6> 'char **' lvalue ParmVar 0x13705efa8 'response' 'char **'
|   |   | `-BinaryOperator 0x13707aad0 <line:25:4, col:24> 'char *' '='
|   |   |   |-UnaryOperator 0x137079fd8 <col:4, col:5> 'char *' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x137079fc0 <col:5> 'char **' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x137079fa0 <col:5> 'char **' lvalue ParmVar 0x13705efa8 'response' 'char **'
|   |   |   `-CallExpr 0x13707aa78 <col:14, col:24> 'char *'
|   |   |     |-ImplicitCastExpr 0x13707aa60 <col:14> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13707a9d0 <col:14> 'char *(const char *)' Function 0x13707a860 'strdup' 'char *(const char *)'
|   |   |     `-ImplicitCastExpr 0x13707aab8 <col:21> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x13707aaa0 <col:21> 'char *' <ArrayToPointerDecay>
|   |   |         `-DeclRefExpr 0x13707a9f0 <col:21> 'char[128]' lvalue Var 0x13705f310 'msg' 'char[128]'
|   |   `-ReturnStmt 0x13707ab30 <line:26:3, col:10>
|   |     `-IntegerLiteral 0x13707ab10 <col:10> 'int' 1
|   |-IfStmt 0x13707af88 <line:28:2, line:33:2>
|   | |-BinaryOperator 0x13707ac00 <line:28:5, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x13707abe8 <col:5> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x13707abd0 <col:5> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13707ab90 <col:5> 'unsigned char' lvalue Var 0x13705f158 'code' 'unsigned char'
|   | | `-IntegerLiteral 0x13707abb0 <col:13> 'int' 2
|   | `-CompoundStmt 0x13707af60 <col:15, line:33:2>
|   |   |-CallExpr 0x13707ad60 <line:29:3, col:51> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13707ac20 <col:3> 'int ()' Function 0x137079440 'ssh_set_error' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x13707ac60 <col:17, col:22> '<dependent type>' contains-errors lvalue ->session
|   |   | | `-RecoveryExpr 0x13707ac40 <col:17> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x13707ad40 <col:30> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x13707acc0 <col:41> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x13707ace0 <col:48> 'char[128]' lvalue Var 0x13705f310 'msg' 'char[128]'
|   |   |-IfStmt 0x13707af10 <line:30:3, line:31:24>
|   |   | |-ImplicitCastExpr 0x13707adc0 <line:30:6> 'char **' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13707ada0 <col:6> 'char **' lvalue ParmVar 0x13705efa8 'response' 'char **'
|   |   | `-BinaryOperator 0x13707aef0 <line:31:4, col:24> 'char *' '='
|   |   |   |-UnaryOperator 0x13707ae10 <col:4, col:5> 'char *' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x13707adf8 <col:5> 'char **' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x13707add8 <col:5> 'char **' lvalue ParmVar 0x13705efa8 'response' 'char **'
|   |   |   `-CallExpr 0x13707ae98 <col:14, col:24> 'char *'
|   |   |     |-ImplicitCastExpr 0x13707ae80 <col:14> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13707ae28 <col:14> 'char *(const char *)' Function 0x13707a860 'strdup' 'char *(const char *)'
|   |   |     `-ImplicitCastExpr 0x13707aed8 <col:21> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x13707aec0 <col:21> 'char *' <ArrayToPointerDecay>
|   |   |         `-DeclRefExpr 0x13707ae48 <col:21> 'char[128]' lvalue Var 0x13705f310 'msg' 'char[128]'
|   |   `-ReturnStmt 0x13707af50 <line:32:3, col:10>
|   |     `-IntegerLiteral 0x13707af30 <col:10> 'int' 2
|   `-ReturnStmt 0x13707afe0 <line:35:2, col:9>
|     `-RecoveryExpr 0x13707afc0 <col:9> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13707a860 <line:25:14> col:14 implicit used strdup 'char *(const char *)' extern
  |-ParmVarDecl 0x13707a960 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13707a908 <<invalid sloc>> Implicit 950
