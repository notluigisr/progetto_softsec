TranslationUnitDecl 0x15082a608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15082b4b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15082abd0 '__int128'
|-TypedefDecl 0x15082b528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15082abf0 'unsigned __int128'
|-TypedefDecl 0x1508fb230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1508fb000 'struct __NSConstantString_tag'
|   `-Record 0x15082b580 '__NSConstantString_tag'
|-TypedefDecl 0x1508fb298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15082ad90 '__SVInt8_t'
|-TypedefDecl 0x1508fb300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15082adb0 '__SVInt16_t'
|-TypedefDecl 0x1508fb368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15082add0 '__SVInt32_t'
|-TypedefDecl 0x1508fb3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15082adf0 '__SVInt64_t'
|-TypedefDecl 0x1508fb438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15082ae10 '__SVUint8_t'
|-TypedefDecl 0x1508fb4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15082ae30 '__SVUint16_t'
|-TypedefDecl 0x1508fb508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15082ae50 '__SVUint32_t'
|-TypedefDecl 0x1508fb570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15082ae70 '__SVUint64_t'
|-TypedefDecl 0x1508fb5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15082ae90 '__SVFloat16_t'
|-TypedefDecl 0x1508fb640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15082aeb0 '__SVFloat32_t'
|-TypedefDecl 0x1508fb6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15082aed0 '__SVFloat64_t'
|-TypedefDecl 0x1508fb710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15082aef0 '__SVBfloat16_t'
|-TypedefDecl 0x1508fb778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15082af10 '__clang_svint8x2_t'
|-TypedefDecl 0x1508fb7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15082af30 '__clang_svint16x2_t'
|-TypedefDecl 0x1508fb848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15082af50 '__clang_svint32x2_t'
|-TypedefDecl 0x1508fb8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15082af70 '__clang_svint64x2_t'
|-TypedefDecl 0x1508fb918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15082af90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1508fb980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15082afb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1508fb9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15082afd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1508fba50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15082aff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1508fbab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15082b010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1508fbb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15082b030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1508fbb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15082b050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1508fbbf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15082b070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1508fbc58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15082b090 '__clang_svint8x3_t'
|-TypedefDecl 0x1508fbcc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15082b0b0 '__clang_svint16x3_t'
|-TypedefDecl 0x1508fbd28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15082b0d0 '__clang_svint32x3_t'
|-TypedefDecl 0x1508fbd90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15082b0f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1508fbdf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15082b110 '__clang_svuint8x3_t'
|-TypedefDecl 0x1508fbe60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15082b130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1508fbec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15082b150 '__clang_svuint32x3_t'
|-TypedefDecl 0x1508fbf30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15082b170 '__clang_svuint64x3_t'
|-TypedefDecl 0x1508fbf98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15082b190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1508fc800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15082b1b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1508fc868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15082b1d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1508fc8d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15082b1f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1508fc938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15082b210 '__clang_svint8x4_t'
|-TypedefDecl 0x1508fc9a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15082b230 '__clang_svint16x4_t'
|-TypedefDecl 0x1508fca08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15082b250 '__clang_svint32x4_t'
|-TypedefDecl 0x1508fca70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15082b270 '__clang_svint64x4_t'
|-TypedefDecl 0x1508fcad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15082b290 '__clang_svuint8x4_t'
|-TypedefDecl 0x1508fcb40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15082b2b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1508fcba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15082b2d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1508fcc10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15082b2f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1508fcc78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15082b310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1508fcce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15082b330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1508fcd48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15082b350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1508fcdb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15082b370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1508fce18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15082b390 '__SVBool_t'
|-TypedefDecl 0x1508fce80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15082b3b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1508fcee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15082b3d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1508fcf50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15082b3f0 '__SVCount_t'
|-TypedefDecl 0x1508fcff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1508fcfb0 'char *'
|   `-BuiltinType 0x15082a6b0 'char'
|-TypedefDecl 0x1508fd068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1508fcfb0 'char *'
|   `-BuiltinType 0x15082a6b0 'char'
|-FunctionDecl 0x1508fd438 <dataset_diviso_filec/func5356_nonvuln.c:1:1, line:15:1> line:1:14 invalid zend_declare_property_string 'int (int *, const char *, int, const char *, int)'
| |-ParmVarDecl 0x1508fd128 <col:43, col:61> col:61 invalid ce 'int *'
| |-ParmVarDecl 0x1508fd1a8 <col:65, col:77> col:77 used name 'const char *'
| |-ParmVarDecl 0x1508fd228 <col:83, col:87> col:87 used name_length 'int'
| |-ParmVarDecl 0x1508fd2a8 <col:100, col:112> col:112 used value 'const char *'
| |-ParmVarDecl 0x1508fd328 <col:119, col:123> col:123 used access_type 'int'
| `-CompoundStmt 0x15101ac20 <line:2:1, line:15:1>
|   |-DeclStmt 0x150916c80 <line:4:2, col:25>
|   | `-VarDecl 0x1508fd538 <col:2, col:24> col:6 used len 'int' cinit
|   |   `-ImplicitCastExpr 0x150916c68 <col:12, col:24> 'int' <IntegralCast>
|   |     `-CallExpr 0x150916c28 <col:12, col:24> 'unsigned long'
|   |       |-ImplicitCastExpr 0x150916c10 <col:12> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x150916b80 <col:12> 'unsigned long (const char *)' Function 0x150916a10 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x150916c50 <col:19> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x150916ba0 <col:19> 'const char *' lvalue ParmVar 0x1508fd2a8 'value' 'const char *'
|   |-IfStmt 0x1509176d0 <line:6:2, line:12:2> has_else
|   | |-BinaryOperator 0x150916d58 <line:6:6, col:17> '<dependent type>' contains-errors '&'
|   | | |-CXXDependentScopeMemberExpr 0x150916cb8 <col:6, col:10> '<dependent type>' contains-errors lvalue ->type
|   | | | `-RecoveryExpr 0x150916c98 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x150916d38 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x1509173d0 <col:38, line:9:2>
|   | | |-CallExpr 0x150916f50 <line:7:3, col:32> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x150916ed0 <col:3> 'int ()' Function 0x150916e18 'ALLOC_PERMANENT_ZVAL' 'int ()'
|   | | | `-RecoveryExpr 0x150916f30 <col:24> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x150917390 <line:8:3, col:58> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x150917058 <col:3> 'int ()' Function 0x150916fa0 'ZVAL_STRINGL' 'int ()'
|   | |   |-RecoveryExpr 0x1509172f8 <col:16> '<dependent type>' contains-errors lvalue
|   | |   |-CallExpr 0x150917330 <col:26, col:49> 'int'
|   | |   | |-ImplicitCastExpr 0x150917318 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x150917170 <col:26> 'int ()' Function 0x1509170b8 'zend_strndup' 'int ()'
|   | |   | |-ImplicitCastExpr 0x150917360 <col:39> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x150917190 <col:39> 'const char *' lvalue ParmVar 0x1508fd2a8 'value' 'const char *'
|   | |   | `-ImplicitCastExpr 0x150917378 <col:46> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1509171b0 <col:46> 'int' lvalue Var 0x1508fd538 'len' 'int'
|   | |   |-DeclRefExpr 0x150917278 <col:52> 'int' lvalue Var 0x1508fd538 'len' 'int'
|   | |   `-IntegerLiteral 0x150917298 <col:57> 'int' 0
|   | `-CompoundStmt 0x1509176b0 <line:9:9, line:12:2>
|   |   |-CallExpr 0x150917550 <line:10:3, col:22> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1509174d0 <col:3> 'int ()' Function 0x150917418 'ALLOC_ZVAL' 'int ()'
|   |   | `-RecoveryExpr 0x150917530 <col:14> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x150917670 <line:11:3, col:39> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x150917578 <col:3> 'int ()' Function 0x150916fa0 'ZVAL_STRINGL' 'int ()'
|   |     |-RecoveryExpr 0x150917650 <col:16> '<dependent type>' contains-errors lvalue
|   |     |-DeclRefExpr 0x1509175b0 <col:26> 'const char *' lvalue ParmVar 0x1508fd2a8 'value' 'const char *'
|   |     |-DeclRefExpr 0x1509175d0 <col:33> 'int' lvalue Var 0x1508fd538 'len' 'int'
|   |     `-IntegerLiteral 0x1509175f0 <col:38> 'int' 1
|   `-CallExpr 0x15101aa60 <line:13:2, col:21> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x1509177e0 <col:2> 'int ()' Function 0x150917728 'INIT_PZVAL' 'int ()'
|     `-RecoveryExpr 0x15101aa40 <col:13> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x150916a10 <line:4:12> col:12 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x150916b10 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x150916ab8 <<invalid sloc>> Implicit 902
