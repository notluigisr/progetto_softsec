TranslationUnitDecl 0x159055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1590564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x159055bd0 '__int128'
|-TypedefDecl 0x159056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x159055bf0 'unsigned __int128'
|-TypedefDecl 0x14900be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14900bc00 'struct __NSConstantString_tag'
|   `-Record 0x159056580 '__NSConstantString_tag'
|-TypedefDecl 0x14900be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x159055d90 '__SVInt8_t'
|-TypedefDecl 0x14900bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x159055db0 '__SVInt16_t'
|-TypedefDecl 0x14900bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x159055dd0 '__SVInt32_t'
|-TypedefDecl 0x14900bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x159055df0 '__SVInt64_t'
|-TypedefDecl 0x14900c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x159055e10 '__SVUint8_t'
|-TypedefDecl 0x14900c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x159055e30 '__SVUint16_t'
|-TypedefDecl 0x14900c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x159055e50 '__SVUint32_t'
|-TypedefDecl 0x14900c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x159055e70 '__SVUint64_t'
|-TypedefDecl 0x14900c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x159055e90 '__SVFloat16_t'
|-TypedefDecl 0x14900c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x159055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14900c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x159055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14900c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x159055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14900c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x159055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14900c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x159055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14900c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x159055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14900c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x159055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14900c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x159055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14900c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x159055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14900c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x159055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14900c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x159055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14900c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x159056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14900c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x159056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14900c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x159056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14900c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x159056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14900c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x159056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14900c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1590560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14900c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1590560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14900c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1590560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14900c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x159056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14900ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x159056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14900cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x159056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14900cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x159056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14900cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x159056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14900d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1590561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14900d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1590561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14900d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1590561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14900d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x159056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14900d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x159056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14900d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x159056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14900d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x159056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14900d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x159056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14900d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1590562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14900d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1590562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14900d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1590562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14900d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x159056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14900d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x159056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14900d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x159056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14900d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x159056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14900da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x159056390 '__SVBool_t'
|-TypedefDecl 0x14900da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1590563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14900dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1590563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14900db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1590563f0 '__SVCount_t'
|-TypedefDecl 0x14900dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1590556b0 'char'
|-TypedefDecl 0x14900dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1590556b0 'char'
|-FunctionDecl 0x149026670 <dataset_diviso_filec/func4256_nonvuln.c:1:1, line:25:1> line:1:13 update_node_properties 'void (struct device_node *, struct device_node *)' static
| |-ParmVarDecl 0x14900e248 <col:36, col:56> col:56 used np 'struct device_node *'
| |-ParmVarDecl 0x14900e338 <line:2:6, col:26> col:26 used dup 'struct device_node *'
| `-CompoundStmt 0x149028e68 <line:3:1, line:25:1>
|   |-DeclStmt 0x149026958 <line:4:2, col:23>
|   | |-RecordDecl 0x149026770 <col:2, col:9> col:9 struct property
|   | `-VarDecl 0x1490268d8 <col:2, col:19> col:19 used prop 'struct property *'
|   |-DeclStmt 0x149026a60 <line:5:2, col:28>
|   | `-VarDecl 0x1490269f8 <col:2, col:19> col:19 used save_next 'struct property *'
|   |-DeclStmt 0x149026b08 <line:6:2, col:27>
|   | `-VarDecl 0x149026aa0 <col:2, col:22> col:22 used child 'struct device_node *'
|   |-DeclStmt 0x149026ba0 <line:7:2, col:9>
|   | `-VarDecl 0x149026b38 <col:2, col:6> col:6 used ret 'int'
|   |-CallExpr 0x149026d88 <line:9:2, col:34> 'int'
|   | |-ImplicitCastExpr 0x149026d70 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x149026ce0 <col:2> 'int ()' Function 0x149026c28 'for_each_child_of_node' 'int ()'
|   | |-ImplicitCastExpr 0x149026db8 <col:25> 'struct device_node *' <LValueToRValue>
|   | | `-DeclRefExpr 0x149026d00 <col:25> 'struct device_node *' lvalue ParmVar 0x14900e248 'np' 'struct device_node *'
|   | `-ImplicitCastExpr 0x149026dd0 <col:29> 'struct device_node *' <LValueToRValue>
|   |   `-DeclRefExpr 0x149026d20 <col:29> 'struct device_node *' lvalue Var 0x149026aa0 'child' 'struct device_node *'
|   |-BinaryOperator 0x149026e68 <line:10:3, col:19> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x149026e20 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x149026de8 <col:3> 'struct device_node *' lvalue Var 0x149026aa0 'child' 'struct device_node *'
|   | `-DeclRefExpr 0x149026e48 <col:19> 'struct device_node *' lvalue ParmVar 0x14900e338 'dup' 'struct device_node *'
|   `-ForStmt 0x149028e30 <line:15:2, line:24:2>
|     |-BinaryOperator 0x149026f08 <line:15:7, col:18> 'struct property *' contains-errors '='
|     | |-DeclRefExpr 0x149026e88 <col:7> 'struct property *' lvalue Var 0x1490268d8 'prop' 'struct property *'
|     | `-RecoveryExpr 0x149026ee0 <col:14, col:18> '<dependent type>' contains-errors lvalue
|     |   `-DeclRefExpr 0x149026ea8 <col:14> 'struct device_node *' lvalue ParmVar 0x14900e248 'np' 'struct device_node *'
|     |-<<<NULL>>>
|     |-BinaryOperator 0x149026fa0 <col:30, col:38> 'int' contains-errors '!='
|     | |-DeclRefExpr 0x149026f28 <col:30> 'struct property *' lvalue Var 0x1490268d8 'prop' 'struct property *'
|     | `-RecoveryExpr 0x149026f80 <col:38> '<dependent type>' contains-errors lvalue
|     |-BinaryOperator 0x149027018 <col:44, col:51> 'struct property *' '='
|     | |-DeclRefExpr 0x149026fc0 <col:44> 'struct property *' lvalue Var 0x1490268d8 'prop' 'struct property *'
|     | `-ImplicitCastExpr 0x149027000 <col:51> 'struct property *' <LValueToRValue>
|     |   `-DeclRefExpr 0x149026fe0 <col:51> 'struct property *' lvalue Var 0x1490269f8 'save_next' 'struct property *'
|     `-CompoundStmt 0x149028e08 <col:62, line:24:2>
|       |-BinaryOperator 0x1490270b8 <line:16:3, col:21> 'struct property *' contains-errors '='
|       | |-DeclRefExpr 0x149027038 <col:3> 'struct property *' lvalue Var 0x1490269f8 'save_next' 'struct property *'
|       | `-RecoveryExpr 0x149027090 <col:15, col:21> '<dependent type>' contains-errors lvalue
|       |   `-DeclRefExpr 0x149027058 <col:15> 'struct property *' lvalue Var 0x1490268d8 'prop' 'struct property *'
|       |-BinaryOperator 0x1490272b0 <line:17:3, col:34> 'int' '='
|       | |-DeclRefExpr 0x1490270d8 <col:3> 'int' lvalue Var 0x149026b38 'ret' 'int'
|       | `-CallExpr 0x149027250 <col:9, col:34> 'int'
|       |   |-ImplicitCastExpr 0x149027238 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1490271d8 <col:9> 'int ()' Function 0x149027120 'of_add_property' 'int ()'
|       |   |-ImplicitCastExpr 0x149027280 <col:25> 'struct device_node *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1490271f8 <col:25> 'struct device_node *' lvalue ParmVar 0x14900e338 'dup' 'struct device_node *'
|       |   `-ImplicitCastExpr 0x149027298 <col:30> 'struct property *' <LValueToRValue>
|       |     `-DeclRefExpr 0x149027218 <col:30> 'struct property *' lvalue Var 0x1490268d8 'prop' 'struct property *'
|       `-IfStmt 0x149028de8 <line:18:3, line:23:3>
|         |-ImplicitCastExpr 0x1490272f0 <line:18:7> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x1490272d0 <col:7> 'int' lvalue Var 0x149026b38 'ret' 'int'
|         `-CompoundStmt 0x149028dc8 <col:12, line:23:3>
|           |-IfStmt 0x149028bd0 <line:19:4, line:20:5>
|           | |-BinaryOperator 0x149028ba8 <line:19:8, col:51> 'int' contains-errors '&&'
|           | | |-BinaryOperator 0x149028b88 <col:8, col:16> 'int' contains-errors '=='
|           | | | |-DeclRefExpr 0x149027308 <col:8> 'int' lvalue Var 0x149026b38 'ret' 'int'
|           | | | `-UnaryOperator 0x149028b70 <col:15, col:16> '<dependent type>' contains-errors prefix '-' cannot overflow
|           | | |   `-ImplicitCastExpr 0x149028b58 <col:16> '<dependent type>' contains-errors <LValueToRValue>
|           | | |     `-RecoveryExpr 0x149028b38 <col:16> '<dependent type>' contains-errors lvalue
|           | | `-UnaryOperator 0x149028b00 <col:26, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow
|           | |   `-CallExpr 0x149028ad0 <col:27, col:51> '<dependent type>' contains-errors
|           | |     |-DeclRefExpr 0x1490275b0 <col:27> 'int (const char *, const char *)' Function 0x1490273d0 'strcmp' 'int (const char *, const char *)'
|           | |     |-RecoveryExpr 0x149028a18 <col:34, col:40> '<dependent type>' contains-errors lvalue
|           | |     | `-DeclRefExpr 0x1490275d0 <col:34> 'struct property *' lvalue Var 0x1490268d8 'prop' 'struct property *'
|           | |     `-StringLiteral 0x149028a80 <col:46> 'char[4]' lvalue "STR"
|           | `-ContinueStmt 0x149028bc8 <line:20:5>
|           `-CallExpr 0x149028d90 <line:21:4, line:22:25> '<dependent type>' contains-errors
|             |-DeclRefExpr 0x149028cd0 <line:21:4> 'int ()' Function 0x149028c18 'pr_err' 'int ()'
|             |-StringLiteral 0x149028cf0 <col:11> 'char[4]' lvalue "STR"
|             |-DeclRefExpr 0x149028d10 <line:22:11> 'struct device_node *' lvalue ParmVar 0x14900e248 'np' 'struct device_node *'
|             `-RecoveryExpr 0x149028d68 <col:15, col:21> '<dependent type>' contains-errors lvalue
|               `-DeclRefExpr 0x149028d30 <col:15> 'struct property *' lvalue Var 0x1490268d8 'prop' 'struct property *'
`-FunctionDecl 0x1490273d0 <line:19:27> col:27 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x1490274d0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x149027538 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x149027478 <<invalid sloc>> Implicit 887
