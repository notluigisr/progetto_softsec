TranslationUnitDecl 0x15b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b055bd0 '__int128'
|-TypedefDecl 0x15b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b055bf0 'unsigned __int128'
|-TypedefDecl 0x15b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x15b056580 '__NSConstantString_tag'
|-TypedefDecl 0x15b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b055d90 '__SVInt8_t'
|-TypedefDecl 0x15b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b055db0 '__SVInt16_t'
|-TypedefDecl 0x15b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b055dd0 '__SVInt32_t'
|-TypedefDecl 0x15b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b055df0 '__SVInt64_t'
|-TypedefDecl 0x15b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b055e10 '__SVUint8_t'
|-TypedefDecl 0x15b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b055e30 '__SVUint16_t'
|-TypedefDecl 0x15b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b055e50 '__SVUint32_t'
|-TypedefDecl 0x15b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b055e70 '__SVUint64_t'
|-TypedefDecl 0x15b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b055e90 '__SVFloat16_t'
|-TypedefDecl 0x15b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b056390 '__SVBool_t'
|-TypedefDecl 0x15b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b0563f0 '__SVCount_t'
|-TypedefDecl 0x15b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b80dbb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-TypedefDecl 0x15b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b80dbb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-FunctionDecl 0x15b82ac58 <dataset_diviso_filec/func3729_vuln.c:1:1, line:91:1> line:1:12 translate_compat_table 'int (struct net *, struct xt_table_info **, void **, const struct compat_arpt_replace *)' static
| |-ParmVarDecl 0x15b80e248 <col:35, col:47> col:47 used net 'struct net *'
| |-ParmVarDecl 0x15b82a888 <line:2:7, col:30> col:30 used pinfo 'struct xt_table_info **'
| |-ParmVarDecl 0x15b82a938 <line:3:7, col:14> col:14 used pentry0 'void **'
| |-ParmVarDecl 0x15b82ab08 <line:4:7, col:41> col:41 used compatr 'const struct compat_arpt_replace *'
| `-CompoundStmt 0x15b831270 <line:5:1, line:91:1>
|   |-DeclStmt 0x15b82ae80 <line:6:2, col:19>
|   | |-VarDecl 0x15b82ad80 <col:2, col:15> col:15 used i 'unsigned int'
|   | `-VarDecl 0x15b82ae00 <col:2, col:18> col:18 used j 'unsigned int'
|   |-DeclStmt 0x15b82b038 <line:7:2, col:38>
|   | |-VarDecl 0x15b82af28 <col:2, col:24> col:24 used newinfo 'struct xt_table_info *'
|   | `-VarDecl 0x15b82afb8 <col:2, col:34> col:34 used info 'struct xt_table_info *'
|   |-DeclStmt 0x15b82b1f0 <line:8:2, col:29>
|   | |-VarDecl 0x15b82b068 <col:2, col:8> col:8 used pos 'void *'
|   | |-VarDecl 0x15b82b0e8 <col:2, col:14> col:14 used entry0 'void *'
|   | `-VarDecl 0x15b82b168 <col:2, col:23> col:23 used entry1 'void *'
|   |-DeclStmt 0x15b82b3f8 <line:9:2, col:33>
|   | |-RecordDecl 0x15b82b208 <col:2, col:9> col:9 struct compat_arpt_entry
|   | `-VarDecl 0x15b82b378 <col:2, col:28> col:28 used iter0 'struct compat_arpt_entry *'
|   |-DeclStmt 0x15b82b588 <line:10:2, col:26>
|   | |-RecordDecl 0x15b82b410 <col:2, col:9> col:9 struct arpt_replace
|   | `-VarDecl 0x15b82b508 <col:2, col:22> col:22 referenced invalid repl 'struct arpt_replace'
|   |-DeclStmt 0x15b82b620 <line:11:2, col:19>
|   | `-VarDecl 0x15b82b5b8 <col:2, col:15> col:15 used size 'unsigned int'
|   |-DeclStmt 0x15b82b6b8 <line:12:2, col:9>
|   | `-VarDecl 0x15b82b650 <col:2, col:6> col:6 used ret 'int'
|   |-BinaryOperator 0x15b82b758 <line:14:2, col:10> 'struct xt_table_info *' '='
|   | |-DeclRefExpr 0x15b82b6d0 <col:2> 'struct xt_table_info *' lvalue Var 0x15b82afb8 'info' 'struct xt_table_info *'
|   | `-ImplicitCastExpr 0x15b82b740 <col:9, col:10> 'struct xt_table_info *' <LValueToRValue>
|   |   `-UnaryOperator 0x15b82b728 <col:9, col:10> 'struct xt_table_info *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x15b82b710 <col:10> 'struct xt_table_info **' <LValueToRValue>
|   |       `-DeclRefExpr 0x15b82b6f0 <col:10> 'struct xt_table_info **' lvalue ParmVar 0x15b82a888 'pinfo' 'struct xt_table_info **'
|   |-BinaryOperator 0x15b82bc00 <line:15:2, col:12> 'void *' '='
|   | |-DeclRefExpr 0x15b82b778 <col:2> 'void *' lvalue Var 0x15b82b0e8 'entry0' 'void *'
|   | `-ImplicitCastExpr 0x15b82b7e8 <col:11, col:12> 'void *' <LValueToRValue>
|   |   `-UnaryOperator 0x15b82b7d0 <col:11, col:12> 'void *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x15b82b7b8 <col:12> 'void **' <LValueToRValue>
|   |       `-DeclRefExpr 0x15b82b798 <col:12> 'void **' lvalue ParmVar 0x15b82a938 'pentry0' 'void **'
|   |-BinaryOperator 0x15b82bca0 <line:16:2, col:18> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x15b82bc20 <col:2> 'unsigned int' lvalue Var 0x15b82b5b8 'size' 'unsigned int'
|   | `-RecoveryExpr 0x15b82bc78 <col:9, col:18> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15b82bc40 <col:9> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   |-BinaryOperator 0x15b82bd80 <line:17:2, col:26> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15b82bcf8 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15b82bcc0 <col:2> 'struct xt_table_info *' lvalue Var 0x15b82afb8 'info' 'struct xt_table_info *'
|   | `-RecoveryExpr 0x15b82bd58 <col:17, col:26> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15b82bd20 <col:17> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   |-BinaryOperator 0x15b82bdf8 <line:19:2, col:6> 'unsigned int' '='
|   | |-DeclRefExpr 0x15b82bda0 <col:2> 'unsigned int' lvalue Var 0x15b82ae00 'j' 'unsigned int'
|   | `-ImplicitCastExpr 0x15b82bde0 <col:6> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x15b82bdc0 <col:6> 'int' 0
|   |-CallExpr 0x15b82bfc0 <line:20:2, col:28> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b82bf40 <col:2> 'int ()' Function 0x15b82be88 'xt_compat_lock' 'int ()'
|   | `-RecoveryExpr 0x15b82bfa0 <col:17> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15b82c220 <line:21:2, col:64> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b82bfe8 <col:2> 'int' lvalue Var 0x15b82b650 'ret' 'int'
|   | `-CallExpr 0x15b82c1f0 <col:8, col:64> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b82c0e8 <col:8> 'int ()' Function 0x15b82c030 'xt_compat_init_offsets' 'int ()'
|   |   |-RecoveryExpr 0x15b82c1d0 <col:31> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x15b82c158 <col:44, col:53> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15b82c120 <col:44> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   |-IfStmt 0x15b82c2e0 <line:22:2, line:23:8>
|   | |-ImplicitCastExpr 0x15b82c260 <line:22:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x15b82c240 <col:6> 'int' lvalue Var 0x15b82b650 'ret' 'int'
|   | `-GotoStmt 0x15b82c2c8 <line:23:3, col:8> 'out_unlock' 0x15b82c278
|   |-CallExpr 0x15b82c4a0 <line:25:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b82c3e0 <col:2> 'int ()' Function 0x15b82c328 'xt_entry_foreach' 'int ()'
|   | |-DeclRefExpr 0x15b82c400 <col:19> 'struct compat_arpt_entry *' lvalue Var 0x15b82b378 'iter0' 'struct compat_arpt_entry *'
|   | |-DeclRefExpr 0x15b82c420 <col:26> 'void *' lvalue Var 0x15b82b0e8 'entry0' 'void *'
|   | `-RecoveryExpr 0x15b82c478 <col:34, col:43> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15b82c440 <col:34> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   |-CompoundStmt 0x15b82c8b8 <col:49, line:32:2>
|   | |-BinaryOperator 0x15b82c7b0 <line:26:3, line:28:30> 'int' contains-errors '='
|   | | |-DeclRefExpr 0x15b82c4d8 <line:26:3> 'int' lvalue Var 0x15b82b650 'ret' 'int'
|   | | `-CallExpr 0x15b82c768 <col:9, line:28:30> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x15b82c5d8 <line:26:9> 'int ()' Function 0x15b82c520 'check_compat_entry_size_and_hooks' 'int ()'
|   | |   |-DeclRefExpr 0x15b82c5f8 <col:43> 'struct compat_arpt_entry *' lvalue Var 0x15b82b378 'iter0' 'struct compat_arpt_entry *'
|   | |   |-DeclRefExpr 0x15b82c618 <col:50> 'struct xt_table_info *' lvalue Var 0x15b82afb8 'info' 'struct xt_table_info *'
|   | |   |-UnaryOperator 0x15b82c690 <col:56, col:57> 'unsigned int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x15b82c638 <col:57> 'unsigned int' lvalue Var 0x15b82b5b8 'size' 'unsigned int'
|   | |   |-DeclRefExpr 0x15b82c6a8 <line:27:8> 'void *' lvalue Var 0x15b82b0e8 'entry0' 'void *'
|   | |   `-BinaryOperator 0x15b82c748 <line:28:8, col:26> '<dependent type>' contains-errors '+'
|   | |     |-DeclRefExpr 0x15b82c6c8 <col:8> 'void *' lvalue Var 0x15b82b0e8 'entry0' 'void *'
|   | |     `-RecoveryExpr 0x15b82c720 <col:17, col:26> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x15b82c6e8 <col:17> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   | |-IfStmt 0x15b82c860 <line:29:3, line:30:9>
|   | | |-BinaryOperator 0x15b82c828 <line:29:7, col:14> 'int' '!='
|   | | | |-ImplicitCastExpr 0x15b82c810 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x15b82c7d0 <col:7> 'int' lvalue Var 0x15b82b650 'ret' 'int'
|   | | | `-IntegerLiteral 0x15b82c7f0 <col:14> 'int' 0
|   | | `-GotoStmt 0x15b82c848 <line:30:4, col:9> 'out_unlock' 0x15b82c278
|   | `-UnaryOperator 0x15b82c8a0 <line:31:3, col:5> 'unsigned int' prefix '++'
|   |   `-DeclRefExpr 0x15b82c880 <col:5> 'unsigned int' lvalue Var 0x15b82ae00 'j' 'unsigned int'
|   |-BinaryOperator 0x15b82c9b8 <line:34:2, col:9> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b82c8e0 <col:2> 'int' lvalue Var 0x15b82b650 'ret' 'int'
|   | `-UnaryOperator 0x15b82c9a0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x15b82c988 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x15b82c968 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b82ca90 <line:35:2, line:36:8>
|   | |-BinaryOperator 0x15b82ca58 <line:35:6, col:20> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x15b82c9d8 <col:6> 'unsigned int' lvalue Var 0x15b82ae00 'j' 'unsigned int'
|   | | `-RecoveryExpr 0x15b82ca30 <col:11, col:20> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15b82c9f8 <col:11> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   | `-GotoStmt 0x15b82ca78 <line:36:3, col:8> 'out_unlock' 0x15b82c278
|   |-BinaryOperator 0x15b82cb88 <line:38:2, col:9> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b82cab0 <col:2> 'int' lvalue Var 0x15b82b650 'ret' 'int'
|   | `-UnaryOperator 0x15b82cb70 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x15b82cb58 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x15b82cb38 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15b82efa0 <line:39:2, col:36> 'struct xt_table_info *' '='
|   | |-DeclRefExpr 0x15b82cba8 <col:2> 'struct xt_table_info *' lvalue Var 0x15b82af28 'newinfo' 'struct xt_table_info *'
|   | `-ImplicitCastExpr 0x15b82ef88 <col:12, col:36> 'struct xt_table_info *' <IntegralToPointer>
|   |   `-CallExpr 0x15b82ef48 <col:12, col:36> 'int'
|   |     |-ImplicitCastExpr 0x15b82ef30 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x15b82eeb8 <col:12> 'int ()' Function 0x15b82ee00 'xt_alloc_table_info' 'int ()'
|   |     `-ImplicitCastExpr 0x15b82ef70 <col:32> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x15b82eed8 <col:32> 'unsigned int' lvalue Var 0x15b82b5b8 'size' 'unsigned int'
|   |-IfStmt 0x15b82f028 <line:40:2, line:41:8>
|   | |-UnaryOperator 0x15b82eff8 <line:40:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15b82efe0 <col:7> 'struct xt_table_info *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15b82efc0 <col:7> 'struct xt_table_info *' lvalue Var 0x15b82af28 'newinfo' 'struct xt_table_info *'
|   | `-GotoStmt 0x15b82f010 <line:41:3, col:8> 'out_unlock' 0x15b82c278
|   |-BinaryOperator 0x15b82f108 <line:43:2, col:29> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15b82f080 <col:2, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15b82f048 <col:2> 'struct xt_table_info *' lvalue Var 0x15b82af28 'newinfo' 'struct xt_table_info *'
|   | `-RecoveryExpr 0x15b82f0e0 <col:20, col:29> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15b82f0a8 <col:20> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   |-BinaryOperator 0x15b82f618 <line:48:2, col:20> 'void *' contains-errors '='
|   | |-DeclRefExpr 0x15b82f598 <col:2> 'void *' lvalue Var 0x15b82b168 'entry1' 'void *'
|   | `-RecoveryExpr 0x15b82f5f0 <col:11, col:20> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15b82f5b8 <col:11> 'struct xt_table_info *' lvalue Var 0x15b82af28 'newinfo' 'struct xt_table_info *'
|   |-BinaryOperator 0x15b82f690 <line:49:2, col:8> 'void *' '='
|   | |-DeclRefExpr 0x15b82f638 <col:2> 'void *' lvalue Var 0x15b82b068 'pos' 'void *'
|   | `-ImplicitCastExpr 0x15b82f678 <col:8> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15b82f658 <col:8> 'void *' lvalue Var 0x15b82b168 'entry1' 'void *'
|   |-BinaryOperator 0x15b82f730 <line:50:2, col:18> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x15b82f6b0 <col:2> 'unsigned int' lvalue Var 0x15b82b5b8 'size' 'unsigned int'
|   | `-RecoveryExpr 0x15b82f708 <col:9, col:18> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15b82f6d0 <col:9> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   |-CallExpr 0x15b82f810 <line:51:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b82f750 <col:2> 'int ()' Function 0x15b82c328 'xt_entry_foreach' 'int ()'
|   | |-DeclRefExpr 0x15b82f770 <col:19> 'struct compat_arpt_entry *' lvalue Var 0x15b82b378 'iter0' 'struct compat_arpt_entry *'
|   | |-DeclRefExpr 0x15b82f790 <col:26> 'void *' lvalue Var 0x15b82b0e8 'entry0' 'void *'
|   | `-RecoveryExpr 0x15b82f7e8 <col:34, col:43> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15b82f7b0 <col:34> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   |-CallExpr 0x15b82fa30 <line:52:3, line:53:25> 'int'
|   | |-ImplicitCastExpr 0x15b82fa18 <line:52:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15b82f928 <col:3> 'int ()' Function 0x15b82f870 'compat_copy_entry_from_user' 'int ()'
|   | |-ImplicitCastExpr 0x15b82fa78 <col:31> 'struct compat_arpt_entry *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15b82f948 <col:31> 'struct compat_arpt_entry *' lvalue Var 0x15b82b378 'iter0' 'struct compat_arpt_entry *'
|   | |-UnaryOperator 0x15b82f988 <col:38, col:39> 'void **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x15b82f968 <col:39> 'void *' lvalue Var 0x15b82b068 'pos' 'void *'
|   | |-UnaryOperator 0x15b82f9c0 <col:44, col:45> 'unsigned int *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x15b82f9a0 <col:45> 'unsigned int' lvalue Var 0x15b82b5b8 'size' 'unsigned int'
|   | |-ImplicitCastExpr 0x15b82fa90 <line:53:10> 'struct xt_table_info *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15b82f9d8 <col:10> 'struct xt_table_info *' lvalue Var 0x15b82af28 'newinfo' 'struct xt_table_info *'
|   | `-ImplicitCastExpr 0x15b82faa8 <col:19> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15b82f9f8 <col:19> 'void *' lvalue Var 0x15b82b168 'entry1' 'void *'
|   |-BinaryOperator 0x15b830610 <line:67:2, col:22> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15b8305a8 <col:2, col:7> '<dependent type>' contains-errors lvalue .num_counters
|   | | `-RecoveryExpr 0x15b830580 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15b830560 <col:2> 'struct arpt_replace' lvalue Var 0x15b82b508 'repl' 'struct arpt_replace'
|   | `-IntegerLiteral 0x15b8305f0 <col:22> 'int' 0
|   |-BinaryOperator 0x15b8307b0 <line:69:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15b830708 <col:2, col:7> '<dependent type>' contains-errors lvalue .size
|   | | `-RecoveryExpr 0x15b8306e0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15b8306c0 <col:2> 'struct arpt_replace' lvalue Var 0x15b82b508 'repl' 'struct arpt_replace'
|   | `-RecoveryExpr 0x15b830788 <col:14, col:23> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15b830750 <col:14> 'struct xt_table_info *' lvalue Var 0x15b82af28 'newinfo' 'struct xt_table_info *'
|   |-BinaryOperator 0x15b8309c8 <line:70:2, col:51> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b8307d0 <col:2> 'int' lvalue Var 0x15b82b650 'ret' 'int'
|   | `-CallExpr 0x15b830988 <col:8, col:51> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b8308d0 <col:8> 'int ()' Function 0x15b830818 'translate_table' 'int ()'
|   |   |-DeclRefExpr 0x15b8308f0 <col:24> 'struct net *' lvalue ParmVar 0x15b80e248 'net' 'struct net *'
|   |   |-DeclRefExpr 0x15b830910 <col:29> 'struct xt_table_info *' lvalue Var 0x15b82af28 'newinfo' 'struct xt_table_info *'
|   |   |-DeclRefExpr 0x15b830930 <col:38> 'void *' lvalue Var 0x15b82b168 'entry1' 'void *'
|   |   `-UnaryOperator 0x15b830970 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x15b830950 <col:47> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b830a88 <line:71:2, line:72:8>
|   | |-ImplicitCastExpr 0x15b830a08 <line:71:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x15b8309e8 <col:6> 'int' lvalue Var 0x15b82b650 'ret' 'int'
|   | `-GotoStmt 0x15b830a70 <line:72:3, col:8> 'free_newinfo' 0x15b830a20
|   |-BinaryOperator 0x15b830b30 <line:74:2, col:11> 'struct xt_table_info *' '='
|   | |-UnaryOperator 0x15b830ae0 <col:2, col:3> 'struct xt_table_info *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x15b830ac8 <col:3> 'struct xt_table_info **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15b830aa8 <col:3> 'struct xt_table_info **' lvalue ParmVar 0x15b82a888 'pinfo' 'struct xt_table_info **'
|   | `-ImplicitCastExpr 0x15b830b18 <col:11> 'struct xt_table_info *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15b830af8 <col:11> 'struct xt_table_info *' lvalue Var 0x15b82af28 'newinfo' 'struct xt_table_info *'
|   |-BinaryOperator 0x15b830bd8 <line:75:2, col:13> 'void *' '='
|   | |-UnaryOperator 0x15b830b88 <col:2, col:3> 'void *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x15b830b70 <col:3> 'void **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15b830b50 <col:3> 'void **' lvalue ParmVar 0x15b82a938 'pentry0' 'void **'
|   | `-ImplicitCastExpr 0x15b830bc0 <col:13> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15b830ba0 <col:13> 'void *' lvalue Var 0x15b82b168 'entry1' 'void *'
|   |-CallExpr 0x15b830d30 <line:76:2, col:25> 'int'
|   | |-ImplicitCastExpr 0x15b830d18 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15b830cd8 <col:2> 'int ()' Function 0x15b830c20 'xt_free_table_info' 'int ()'
|   | `-ImplicitCastExpr 0x15b830d58 <col:21> 'struct xt_table_info *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15b830cf8 <col:21> 'struct xt_table_info *' lvalue Var 0x15b82afb8 'info' 'struct xt_table_info *'
|   |-ReturnStmt 0x15b830d90 <line:77:2, col:9>
|   | `-IntegerLiteral 0x15b830d70 <col:9> 'int' 0
|   |-LabelStmt 0x15b830e40 <line:79:1, line:80:28> 'free_newinfo'
|   | `-CallExpr 0x15b830e00 <col:2, col:28> 'int'
|   |   |-ImplicitCastExpr 0x15b830de0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15b830da0 <col:2> 'int ()' Function 0x15b830c20 'xt_free_table_info' 'int ()'
|   |   `-ImplicitCastExpr 0x15b830e28 <col:21> 'struct xt_table_info *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15b830dc0 <col:21> 'struct xt_table_info *' lvalue Var 0x15b82af28 'newinfo' 'struct xt_table_info *'
|   |-ReturnStmt 0x15b830e98 <line:81:2, col:9>
|   | `-ImplicitCastExpr 0x15b830e80 <col:9> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x15b830e60 <col:9> 'int' lvalue Var 0x15b82b650 'ret' 'int'
|   |-LabelStmt 0x15b830ed0 <line:82:1, col:11> 'out_unlock'
|   | `-NullStmt 0x15b830ec8 <col:11>
|   |-CallExpr 0x15b830fd0 <line:85:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b830f10 <col:2> 'int ()' Function 0x15b82c328 'xt_entry_foreach' 'int ()'
|   | |-DeclRefExpr 0x15b830f30 <col:19> 'struct compat_arpt_entry *' lvalue Var 0x15b82b378 'iter0' 'struct compat_arpt_entry *'
|   | |-DeclRefExpr 0x15b830f50 <col:26> 'void *' lvalue Var 0x15b82b0e8 'entry0' 'void *'
|   | `-RecoveryExpr 0x15b830fa8 <col:34, col:43> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15b830f70 <col:34> 'const struct compat_arpt_replace *' lvalue ParmVar 0x15b82ab08 'compatr' 'const struct compat_arpt_replace *'
|   |-CompoundStmt 0x15b831210 <col:49, line:89:2>
|   | `-CallExpr 0x15b8311d0 <line:88:3, col:29> 'int'
|   |   |-ImplicitCastExpr 0x15b8311b8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15b831178 <col:3> 'int ()' Function 0x15b8310c0 'compat_release_entry' 'int ()'
|   |   `-ImplicitCastExpr 0x15b8311f8 <col:24> 'struct compat_arpt_entry *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15b831198 <col:24> 'struct compat_arpt_entry *' lvalue Var 0x15b82b378 'iter0' 'struct compat_arpt_entry *'
|   `-ReturnStmt 0x15b831260 <line:90:2, col:9>
|     `-ImplicitCastExpr 0x15b831248 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15b831228 <col:9> 'int' lvalue Var 0x15b82b650 'ret' 'int'
`-FunctionDecl 0x15b82fd38 <line:60:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x15b82fe58 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x15b82fec0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x15b82ff28 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15b82fe00 <<invalid sloc>> Implicit 882
