TranslationUnitDecl 0x125855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1258564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125855bd0 '__int128'
|-TypedefDecl 0x125856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125855bf0 'unsigned __int128'
|-TypedefDecl 0x125926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x125926000 'struct __NSConstantString_tag'
|   `-Record 0x125856580 '__NSConstantString_tag'
|-TypedefDecl 0x125926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125855d90 '__SVInt8_t'
|-TypedefDecl 0x125926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125855db0 '__SVInt16_t'
|-TypedefDecl 0x125926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125855dd0 '__SVInt32_t'
|-TypedefDecl 0x1259263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125855df0 '__SVInt64_t'
|-TypedefDecl 0x125926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125855e10 '__SVUint8_t'
|-TypedefDecl 0x1259264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125855e30 '__SVUint16_t'
|-TypedefDecl 0x125926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125855e50 '__SVUint32_t'
|-TypedefDecl 0x125926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125855e70 '__SVUint64_t'
|-TypedefDecl 0x1259265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125855e90 '__SVFloat16_t'
|-TypedefDecl 0x125926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1259266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125855ed0 '__SVFloat64_t'
|-TypedefDecl 0x125926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x125926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1259267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x125926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1259268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x125926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x125926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1259269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x125926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x125926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x125926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x125926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x125926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x125926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125856090 '__clang_svint8x3_t'
|-TypedefDecl 0x125926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1258560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x125926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1258560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x125926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1258560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x125926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x125926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x125926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x125926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x125926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x125927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1258561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x125927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1258561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1259278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1258561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x125927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1259279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125856230 '__clang_svint16x4_t'
|-TypedefDecl 0x125927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125856250 '__clang_svint32x4_t'
|-TypedefDecl 0x125927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125856270 '__clang_svint64x4_t'
|-TypedefDecl 0x125927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x125927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1258562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x125927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1258562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x125927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1258562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x125927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x125927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x125927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x125927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x125927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125856390 '__SVBool_t'
|-TypedefDecl 0x125927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1258563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x125927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1258563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x125927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1258563f0 '__SVCount_t'
|-TypedefDecl 0x125927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x125927fb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-TypedefDecl 0x125928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x125927fb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
`-FunctionDecl 0x125928280 <dataset_diviso_filec/func19039_vuln.c:1:1, line:21:1> line:1:13 invalid check_join_failure 'void (int *, const char *)' static
  |-ParmVarDecl 0x125928128 <col:32, col:48> col:48 invalid server 'int *'
  |-ParmVarDecl 0x1259281a8 <col:56, col:68> col:68 used channel 'const char *'
  `-CompoundStmt 0x125943168 <line:2:1, line:21:1>
    |-DeclStmt 0x1259283f0 <line:4:2, col:13>
    | `-VarDecl 0x125928388 <col:2, col:8> col:8 used chan2 'char *'
    |-IfStmt 0x125928620 <line:6:2, line:7:10>
    | |-BinaryOperator 0x1259285c8 <line:6:6, col:41> 'int' '&&'
    | | |-BinaryOperator 0x1259284c8 <col:6, col:20> 'int' '=='
    | | | |-ImplicitCastExpr 0x1259284b0 <col:6, col:15> 'int' <IntegralCast>
    | | | | `-ImplicitCastExpr 0x125928498 <col:6, col:15> 'char' <LValueToRValue>
    | | | |   `-ArraySubscriptExpr 0x125928460 <col:6, col:15> 'const char' lvalue
    | | | |     |-ImplicitCastExpr 0x125928448 <col:6> 'const char *' <LValueToRValue>
    | | | |     | `-DeclRefExpr 0x125928408 <col:6> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
    | | | |     `-IntegerLiteral 0x125928428 <col:14> 'int' 0
    | | | `-CharacterLiteral 0x125928480 <col:20> 'int' 33
    | | `-BinaryOperator 0x1259285a8 <col:27, col:41> 'int' '=='
    | |   |-ImplicitCastExpr 0x125928590 <col:27, col:36> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x125928578 <col:27, col:36> 'char' <LValueToRValue>
    | |   |   `-ArraySubscriptExpr 0x125928540 <col:27, col:36> 'const char' lvalue
    | |   |     |-ImplicitCastExpr 0x125928528 <col:27> 'const char *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x1259284e8 <col:27> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
    | |   |     `-IntegerLiteral 0x125928508 <col:35> 'int' 1
    | |   `-CharacterLiteral 0x125928560 <col:41> 'int' 33
    | `-UnaryOperator 0x125928608 <line:7:3, col:10> 'const char *' postfix '++'
    |   `-DeclRefExpr 0x1259285e8 <col:3> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
    |-BinaryOperator 0x125941998 <line:9:2, col:48> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x125928640 <col:2> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
    | `-CallExpr 0x125941968 <col:12, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1259287c0 <col:12> 'int ()' Function 0x125928708 'channel_find' 'int ()'
    |   |-CallExpr 0x125941920 <col:25, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1259418e0 <col:25> 'int ()' Function 0x125941828 'SERVER' 'int ()'
    |   | `-RecoveryExpr 0x125941900 <col:32> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x125941948 <col:41> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
    |-IfStmt 0x1259425f8 <line:10:2, line:15:2>
    | |-BinaryOperator 0x125941c30 <line:10:6, col:39> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x125941b88 <col:6, col:17> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x125941b48 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x125941b68 <col:17> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x125941c10 <col:25, col:39> 'int' '=='
    | |   |-ImplicitCastExpr 0x125941bf8 <col:25, col:34> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x125941be0 <col:25, col:34> 'char' <LValueToRValue>
    | |   |   `-ArraySubscriptExpr 0x125941bc0 <col:25, col:34> 'const char' lvalue
    | |   |     |-ImplicitCastExpr 0x125941ba8 <col:25> 'const char *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x125941a08 <col:25> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
    | |   |     `-IntegerLiteral 0x125941a28 <col:33> 'int' 0
    | |   `-CharacterLiteral 0x125941a80 <col:39> 'int' 33
    | `-CompoundStmt 0x1259425d0 <col:44, line:15:2>
    |   |-BinaryOperator 0x125942320 <line:12:3, col:43> 'char *' '='
    |   | |-DeclRefExpr 0x125941c50 <col:3> 'char *' lvalue Var 0x125928388 'chan2' 'char *'
    |   | `-ImplicitCastExpr 0x125941ee0 <col:11, col:43> 'char *' <IntegralToPointer>
    |   |   `-CallExpr 0x125941e98 <col:11, col:43> 'int'
    |   |     |-ImplicitCastExpr 0x125941e80 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x125941d50 <col:11> 'int ()' Function 0x125941c98 'g_strdup_printf' 'int ()'
    |   |     |-ImplicitCastExpr 0x125941ec8 <col:27> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x125941db0 <col:27> 'char[4]' lvalue "STR"
    |   |     `-BinaryOperator 0x125941e28 <col:34, col:42> 'const char *' '+'
    |   |       |-ImplicitCastExpr 0x125941e10 <col:34> 'const char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x125941dd0 <col:34> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
    |   |       `-IntegerLiteral 0x125941df0 <col:42> 'int' 6
    |   |-BinaryOperator 0x125942438 <line:13:3, col:47> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x125942340 <col:3> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
    |   | `-CallExpr 0x125942408 <col:13, col:47> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x125942360 <col:13> 'int ()' Function 0x125928708 'channel_find' 'int ()'
    |   |   |-CallExpr 0x1259423c0 <col:26, col:39> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x125942380 <col:26> 'int ()' Function 0x125941828 'SERVER' 'int ()'
    |   |   | `-RecoveryExpr 0x1259423a0 <col:33> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1259423e8 <col:42> 'char *' lvalue Var 0x125928388 'chan2' 'char *'
    |   `-CallExpr 0x125942590 <line:14:3, col:15> 'int'
    |     |-ImplicitCastExpr 0x125942578 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x125942538 <col:3> 'int ()' Function 0x125942480 'g_free' 'int ()'
    |     `-ImplicitCastExpr 0x1259425b8 <col:10> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x125942558 <col:10> 'char *' lvalue Var 0x125928388 'chan2' 'char *'
    `-IfStmt 0x125943148 <line:17:2, line:20:2>
      |-BinaryOperator 0x125942e78 <line:17:6, col:35> 'int' contains-errors '&&'
      | |-BinaryOperator 0x125942798 <col:6, col:17> 'int' contains-errors '!='
      | | |-RecoveryExpr 0x125942758 <col:6> '<dependent type>' contains-errors lvalue
      | | `-RecoveryExpr 0x125942778 <col:17> '<dependent type>' contains-errors lvalue
      | `-UnaryOperator 0x125942e60 <col:25, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   `-ImplicitCastExpr 0x125942e48 <col:26, col:35> '<dependent type>' contains-errors <LValueToRValue>
      |     `-CXXDependentScopeMemberExpr 0x125942e00 <col:26, col:35> '<dependent type>' contains-errors lvalue ->joined
      |       `-RecoveryExpr 0x1259427b8 <col:26> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x125943128 <col:43, line:20:2>
        |-BinaryOperator 0x125942f50 <line:18:3, col:19> '<dependent type>' contains-errors '='
        | |-RecoveryExpr 0x125942ed0 <col:3, col:12> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x125942e98 <col:3> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
        | `-RecoveryExpr 0x125942f30 <col:19> '<dependent type>' contains-errors lvalue
        `-CallExpr 0x1259430e8 <line:19:3, col:26> 'int'
          |-ImplicitCastExpr 0x1259430d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x125943050 <col:3> 'int ()' Function 0x125942f98 'channel_destroy' 'int ()'
          `-ImplicitCastExpr 0x125943110 <col:19> 'const char *' <LValueToRValue>
            `-DeclRefExpr 0x1259430b0 <col:19> 'const char *' lvalue ParmVar 0x1259281a8 'channel' 'const char *'
