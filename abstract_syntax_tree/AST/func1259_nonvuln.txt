TranslationUnitDecl 0x12f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f855bd0 '__int128'
|-TypedefDecl 0x12f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f855bf0 'unsigned __int128'
|-TypedefDecl 0x13800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13800bc00 'struct __NSConstantString_tag'
|   `-Record 0x12f856580 '__NSConstantString_tag'
|-TypedefDecl 0x13800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f855d90 '__SVInt8_t'
|-TypedefDecl 0x13800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f855db0 '__SVInt16_t'
|-TypedefDecl 0x13800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f855dd0 '__SVInt32_t'
|-TypedefDecl 0x13800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f855df0 '__SVInt64_t'
|-TypedefDecl 0x13800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f855e10 '__SVUint8_t'
|-TypedefDecl 0x13800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f855e30 '__SVUint16_t'
|-TypedefDecl 0x13800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f855e50 '__SVUint32_t'
|-TypedefDecl 0x13800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f855e70 '__SVUint64_t'
|-TypedefDecl 0x13800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f855e90 '__SVFloat16_t'
|-TypedefDecl 0x13800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f856390 '__SVBool_t'
|-TypedefDecl 0x13800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f8563f0 '__SVCount_t'
|-TypedefDecl 0x13800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-TypedefDecl 0x13800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-FunctionDecl 0x13800def8 <dataset_diviso_filec/func1259_nonvuln.c:1:1, line:21:1> line:1:12 ecryptfs_crypto_api_algify_cipher_name 'int (char **, char *, char *)' static
| |-ParmVarDecl 0x13800dd08 <col:51, col:58> col:58 used algified_name 'char **'
| |-ParmVarDecl 0x13800dd88 <line:2:9, col:15> col:15 used cipher_name 'char *'
| |-ParmVarDecl 0x13800de08 <line:3:9, col:15> col:15 used chaining_modifier 'char *'
| `-CompoundStmt 0x138029ba0 <line:4:1, line:21:1>
|   |-DeclStmt 0x138026998 <line:5:2, col:43>
|   | `-VarDecl 0x13800e018 <col:2, col:42> col:6 used cipher_name_len 'int' cinit
|   |   `-ImplicitCastExpr 0x138026980 <col:24, col:42> 'int' <IntegralCast>
|   |     `-CallExpr 0x138026928 <col:24, col:42> 'unsigned long'
|   |       |-ImplicitCastExpr 0x138026910 <col:24> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x138026880 <col:24> 'unsigned long (const char *)' Function 0x138026710 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x138026968 <col:31> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x138026950 <col:31> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1380268a0 <col:31> 'char *' lvalue ParmVar 0x13800dd88 'cipher_name' 'char *'
|   |-DeclStmt 0x138026b10 <line:6:2, col:55>
|   | `-VarDecl 0x1380269c8 <col:2, col:54> col:6 used chaining_modifier_len 'int' cinit
|   |   `-ImplicitCastExpr 0x138026af8 <col:30, col:54> 'int' <IntegralCast>
|   |     `-CallExpr 0x138026aa0 <col:30, col:54> 'unsigned long'
|   |       |-ImplicitCastExpr 0x138026a88 <col:30> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x138026a30 <col:30> 'unsigned long (const char *)' Function 0x138026710 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x138026ae0 <col:37> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x138026ac8 <col:37> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x138026a50 <col:37> 'char *' lvalue ParmVar 0x13800de08 'chaining_modifier' 'char *'
|   |-DeclStmt 0x138026ba8 <line:7:2, col:23>
|   | `-VarDecl 0x138026b40 <col:2, col:6> col:6 used algified_name_len 'int'
|   |-DeclStmt 0x138026c40 <line:8:2, col:8>
|   | `-VarDecl 0x138026bd8 <col:2, col:6> col:6 used rc 'int'
|   |-BinaryOperator 0x138026d68 <line:10:2, col:66> 'int' '='
|   | |-DeclRefExpr 0x138026c58 <col:2> 'int' lvalue Var 0x138026b40 'algified_name_len' 'int'
|   | `-ParenExpr 0x138026d48 <col:22, col:66> 'int'
|   |   `-BinaryOperator 0x138026d28 <col:23, col:65> 'int' '+'
|   |     |-BinaryOperator 0x138026ce8 <col:23, col:47> 'int' '+'
|   |     | |-ImplicitCastExpr 0x138026cb8 <col:23> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x138026c78 <col:23> 'int' lvalue Var 0x1380269c8 'chaining_modifier_len' 'int'
|   |     | `-ImplicitCastExpr 0x138026cd0 <col:47> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x138026c98 <col:47> 'int' lvalue Var 0x13800e018 'cipher_name_len' 'int'
|   |     `-IntegerLiteral 0x138026d08 <col:65> 'int' 3
|   |-BinaryOperator 0x1380270b8 <line:11:2, col:58> 'char *' contains-errors '='
|   | |-ParenExpr 0x138027048 <col:2, col:17> 'char *' lvalue
|   | | `-UnaryOperator 0x138027030 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x138027018 <col:4> 'char **' <LValueToRValue>
|   | |     `-DeclRefExpr 0x138026d88 <col:4> 'char **' lvalue ParmVar 0x13800dd08 'algified_name' 'char **'
|   | `-CallExpr 0x138027088 <col:21, col:58> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x138026f20 <col:21> 'int ()' Function 0x138026e68 'kmalloc' 'int ()'
|   |   |-DeclRefExpr 0x138026f40 <col:29> 'int' lvalue Var 0x138026b40 'algified_name_len' 'int'
|   |   `-RecoveryExpr 0x138027068 <col:48> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1380272f8 <line:12:2, line:15:2>
|   | |-UnaryOperator 0x138027160 <line:12:6, col:22> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x138027148 <col:7, col:22> 'char *' <LValueToRValue>
|   | |   `-ParenExpr 0x138027128 <col:7, col:22> 'char *' lvalue
|   | |     `-UnaryOperator 0x138027110 <col:8, col:9> 'char *' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x1380270f8 <col:9> 'char **' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1380270d8 <col:9> 'char **' lvalue ParmVar 0x13800dd08 'algified_name' 'char **'
|   | `-CompoundStmt 0x1380272d8 <col:25, line:15:2>
|   |   |-BinaryOperator 0x138027250 <line:13:3, col:9> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x138027178 <col:3> 'int' lvalue Var 0x138026bd8 'rc' 'int'
|   |   | `-UnaryOperator 0x138027238 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   `-ImplicitCastExpr 0x138027220 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-RecoveryExpr 0x138027200 <col:9> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x1380272c0 <line:14:3, col:8> 'out' 0x138027270
|   |-CallExpr 0x1380299e8 <line:16:2, line:17:34> 'int'
|   | |-ImplicitCastExpr 0x1380299d0 <line:16:2> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x138029800 <col:2> 'int (char *, unsigned long, const char *, ...)' Function 0x138027370 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | |-ImplicitCastExpr 0x138029a30 <col:11, col:26> 'char *' <LValueToRValue>
|   | | `-ParenExpr 0x138029870 <col:11, col:26> 'char *' lvalue
|   | |   `-UnaryOperator 0x138029858 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x138029840 <col:13> 'char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x138029820 <col:13> 'char **' lvalue ParmVar 0x13800dd08 'algified_name' 'char **'
|   | |-ImplicitCastExpr 0x138029a60 <col:29> 'unsigned long' <IntegralCast>
|   | | `-ImplicitCastExpr 0x138029a48 <col:29> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x138029890 <col:29> 'int' lvalue Var 0x138026b40 'algified_name_len' 'int'
|   | |-ImplicitCastExpr 0x138029a90 <col:48> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x138029a78 <col:48> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1380298f0 <col:48> 'char[4]' lvalue "STR"
|   | |-ImplicitCastExpr 0x138029aa8 <line:17:4> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x138029910 <col:4> 'char *' lvalue ParmVar 0x13800de08 'chaining_modifier' 'char *'
|   | `-ImplicitCastExpr 0x138029ac0 <col:23> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x138029930 <col:23> 'char *' lvalue ParmVar 0x13800dd88 'cipher_name' 'char *'
|   |-BinaryOperator 0x138029b18 <line:18:2, col:7> 'int' '='
|   | |-DeclRefExpr 0x138029ad8 <col:2> 'int' lvalue Var 0x138026bd8 'rc' 'int'
|   | `-IntegerLiteral 0x138029af8 <col:7> 'int' 0
|   `-LabelStmt 0x138029b80 <line:19:1, line:20:9> 'out'
|     `-ReturnStmt 0x138029b70 <col:2, col:9>
|       `-ImplicitCastExpr 0x138029b58 <col:9> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x138029b38 <col:9> 'int' lvalue Var 0x138026bd8 'rc' 'int'
|-FunctionDecl 0x138026710 <line:5:24> col:24 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x138026810 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1380267b8 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x138027370 <line:16:2> col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x138027470 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x1380274d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x138027540 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x138027418 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x1380275c0 <col:2> Implicit printf 3 4
