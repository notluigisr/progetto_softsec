TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x1201282e8 <dataset_diviso_filec/func16799_vuln.c:1:1, line:24:1> line:1:8 invalid c_shquote_strncspn 'int (const char *, int, const char *)'
| |-ParmVarDecl 0x1201280f0 <col:27, col:39> col:39 used string 'const char *'
| |-ParmVarDecl 0x120128170 <line:2:27, col:34> col:34 invalid n_string 'int'
| |-ParmVarDecl 0x1201281f0 <line:3:27, col:39> col:39 used reject 'const char *'
| `-CompoundStmt 0x1201425d0 <col:47, line:24:1>
|   |-IfStmt 0x120142170 <line:6:9, line:14:9>
|   | |-BinaryOperator 0x120141ac0 <line:6:13, col:31> 'int' '=='
|   | | |-CallExpr 0x120141a48 <col:13, col:26> 'unsigned long'
|   | | | |-ImplicitCastExpr 0x120141a30 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1201419a0 <col:13> 'unsigned long (const char *)' Function 0x120141830 'strlen' 'unsigned long (const char *)'
|   | | | `-ImplicitCastExpr 0x120141a70 <col:20> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1201419c0 <col:20> 'const char *' lvalue ParmVar 0x1201281f0 'reject' 'const char *'
|   | | `-ImplicitCastExpr 0x120141aa8 <col:31> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x120141a88 <col:31> 'int' 1
|   | `-CompoundStmt 0x120142148 <col:34, line:14:9>
|   |   |-DeclStmt 0x120141b60 <line:7:17, col:30>
|   |   | `-VarDecl 0x120141af8 <col:17, col:29> col:29 used p 'const char *'
|   |   |-BinaryOperator 0x120141fc0 <line:9:17, col:55> 'const char *' contains-errors '='
|   |   | |-DeclRefExpr 0x120141b78 <col:17> 'const char *' lvalue Var 0x120141af8 'p' 'const char *'
|   |   | `-CallExpr 0x120141f88 <col:21, col:55> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x120141e68 <col:21> 'void *(const void *, int, unsigned long)' Function 0x120141c18 'memchr' 'void *(const void *, int, unsigned long)'
|   |   |   |-DeclRefExpr 0x120141e88 <col:28> 'const char *' lvalue ParmVar 0x1201280f0 'string' 'const char *'
|   |   |   |-ArraySubscriptExpr 0x120141f00 <col:36, col:44> 'const char' lvalue
|   |   |   | |-ImplicitCastExpr 0x120141ee8 <col:36> 'const char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x120141ea8 <col:36> 'const char *' lvalue ParmVar 0x1201281f0 'reject' 'const char *'
|   |   |   | `-IntegerLiteral 0x120141ec8 <col:43> 'int' 0
|   |   |   `-RecoveryExpr 0x120141f20 <col:47> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x120142118 <line:10:17, line:13:36> has_else
|   |     |-UnaryOperator 0x120142018 <line:10:21, col:22> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x120142000 <col:22> 'const char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x120141fe0 <col:22> 'const char *' lvalue Var 0x120141af8 'p' 'const char *'
|   |     |-ReturnStmt 0x120142050 <line:11:25, col:32>
|   |     | `-RecoveryExpr 0x120142030 <col:32> '<dependent type>' contains-errors lvalue
|   |     `-ReturnStmt 0x120142108 <line:13:25, col:36>
|   |       `-ImplicitCastExpr 0x1201420f0 <col:32, col:36> 'int' <IntegralCast>
|   |         `-BinaryOperator 0x1201420d0 <col:32, col:36> 'long' '-'
|   |           |-ImplicitCastExpr 0x1201420a0 <col:32> 'const char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x120142060 <col:32> 'const char *' lvalue Var 0x120141af8 'p' 'const char *'
|   |           `-ImplicitCastExpr 0x1201420b8 <col:36> 'const char *' <LValueToRValue>
|   |             `-DeclRefExpr 0x120142080 <col:36> 'const char *' lvalue ParmVar 0x1201280f0 'string' 'const char *'
|   |-ForStmt 0x120142568 <line:19:9, line:21:32>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x120142408 <line:19:28, col:32> 'int' contains-errors '<'
|   | | |-RecoveryExpr 0x1201423e8 <col:28> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1201423a8 <col:32> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x120142478 <col:42, col:44> '<dependent type>' contains-errors prefix '++' cannot overflow
|   | | `-RecoveryExpr 0x120142458 <col:44> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x120142548 <line:20:17, line:21:32>
|   |   |-RecoveryExpr 0x1201424e0 <line:20:21, col:52> '_Bool' contains-errors
|   |   `-ReturnStmt 0x120142538 <line:21:25, col:32>
|   |     `-RecoveryExpr 0x120142518 <col:32> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x1201425c0 <line:23:9, col:16>
|     `-RecoveryExpr 0x1201425a0 <col:16> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x120141830 <line:6:13> col:13 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x120141930 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1201418d8 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x120141c18 <line:9:21> col:21 implicit used memchr 'void *(const void *, int, unsigned long)' extern
  |-ParmVarDecl 0x120141d18 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x120141d80 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x120141de8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x120141cc0 <<invalid sloc>> Implicit 892
