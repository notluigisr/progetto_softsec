TranslationUnitDecl 0x152055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1520564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152055bd0 '__int128'
|-TypedefDecl 0x152056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152055bf0 'unsigned __int128'
|-TypedefDecl 0x15280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15280bc00 'struct __NSConstantString_tag'
|   `-Record 0x152056580 '__NSConstantString_tag'
|-TypedefDecl 0x15280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152055d90 '__SVInt8_t'
|-TypedefDecl 0x15280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152055db0 '__SVInt16_t'
|-TypedefDecl 0x15280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152055dd0 '__SVInt32_t'
|-TypedefDecl 0x15280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152055df0 '__SVInt64_t'
|-TypedefDecl 0x15280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152055e10 '__SVUint8_t'
|-TypedefDecl 0x15280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152055e30 '__SVUint16_t'
|-TypedefDecl 0x15280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152055e50 '__SVUint32_t'
|-TypedefDecl 0x15280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152055e70 '__SVUint64_t'
|-TypedefDecl 0x15280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152055e90 '__SVFloat16_t'
|-TypedefDecl 0x15280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1520560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1520560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1520560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1520561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1520561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1520561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1520562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1520562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1520562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152056390 '__SVBool_t'
|-TypedefDecl 0x15280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1520563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1520563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1520563f0 '__SVCount_t'
|-TypedefDecl 0x15280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-TypedefDecl 0x15280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-FunctionDecl 0x15280e358 <dataset_diviso_filec/func17586_nonvuln.c:1:1, line:38:1> line:1:1 sync_path 'int (struct url *)'
| |-ParmVarDecl 0x15280e248 <col:12, col:24> col:24 used u 'struct url *'
| `-CompoundStmt 0x1521227d0 <line:2:1, line:38:1>
|   |-DeclStmt 0x1528267f0 <line:3:3, col:31>
|   | |-VarDecl 0x152826668 <col:3, col:9> col:9 used newpath 'char *'
|   | |-VarDecl 0x1528266e8 <col:3, col:19> col:19 used efile 'char *'
|   | `-VarDecl 0x152826768 <col:3, col:27> col:27 used edir 'char *'
|   |-CallExpr 0x1528269b0 <line:5:3, col:17> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x152826930 <col:3> 'int ()' Function 0x152826878 'xfree' 'int ()'
|   | `-RecoveryExpr 0x152826988 <col:10, col:13> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x152826950 <col:10> 'struct url *' lvalue ParmVar 0x15280e248 'u' 'struct url *'
|   |-BinaryOperator 0x152826b80 <line:8:3, col:32> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1528269d8 <col:3> 'char *' lvalue Var 0x152826768 'edir' 'char *'
|   | `-CallExpr 0x152826b58 <col:10, col:32> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x152826ad8 <col:10> 'int ()' Function 0x152826a20 'url_escape_dir' 'int ()'
|   |   `-RecoveryExpr 0x152826b30 <col:26, col:29> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x152826af8 <col:26> 'struct url *' lvalue ParmVar 0x15280e248 'u' 'struct url *'
|   |-BinaryOperator 0x152826e80 <line:9:3, col:68> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x152826ba0 <col:3> 'char *' lvalue Var 0x1528266e8 'efile' 'char *'
|   | `-CallExpr 0x152826e48 <col:11, col:68> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x152826ca0 <col:11> 'int ()' Function 0x152826be8 'url_escape_1' 'int ()'
|   |   |-RecoveryExpr 0x152826cf8 <col:25, col:28> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x152826cc0 <col:25> 'struct url *' lvalue ParmVar 0x15280e248 'u' 'struct url *'
|   |   |-BinaryOperator 0x152826e28 <col:34, col:50> '<dependent type>' contains-errors '|'
|   |   | |-RecoveryExpr 0x152826de8 <col:34> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x152826e08 <col:50> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x152826d70 <col:67> 'int' 1
|   |-IfStmt 0x15282b220 <line:11:3, line:26:5> has_else
|   | |-UnaryOperator 0x152826f08 <line:11:7, col:9> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x152826ef0 <col:8, col:9> 'char' <LValueToRValue>
|   | |   `-UnaryOperator 0x152826ed8 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x152826ec0 <col:9> 'char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x152826ea0 <col:9> 'char *' lvalue Var 0x152826768 'edir' 'char *'
|   | |-BinaryOperator 0x152827100 <line:12:5, col:29> 'char *' '='
|   | | |-DeclRefExpr 0x152826f20 <col:5> 'char *' lvalue Var 0x152826668 'newpath' 'char *'
|   | | `-ImplicitCastExpr 0x1528270e8 <col:15, col:29> 'char *' <IntegralToPointer>
|   | |   `-CallExpr 0x1528270a8 <col:15, col:29> 'int'
|   | |     |-ImplicitCastExpr 0x152827090 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x152827020 <col:15> 'int ()' Function 0x152826f68 'xstrdup' 'int ()'
|   | |     `-ImplicitCastExpr 0x1528270d0 <col:24> 'char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x152827040 <col:24> 'char *' lvalue Var 0x1528266e8 'efile' 'char *'
|   | `-CompoundStmt 0x15282b1c8 <line:14:5, line:26:5>
|   |   |-DeclStmt 0x152827458 <line:15:7, col:33>
|   |   | `-VarDecl 0x152827138 <col:7, col:32> col:11 used dirlen 'int' cinit
|   |   |   `-ImplicitCastExpr 0x152827440 <col:20, col:32> 'int' <IntegralCast>
|   |   |     `-CallExpr 0x1528273e8 <col:20, col:32> 'unsigned long'
|   |   |       |-ImplicitCastExpr 0x1528273d0 <col:20> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x152827348 <col:20> 'unsigned long (const char *)' Function 0x1528271d8 'strlen' 'unsigned long (const char *)'
|   |   |       `-ImplicitCastExpr 0x152827428 <col:28> 'const char *' <NoOp>
|   |   |         `-ImplicitCastExpr 0x152827410 <col:28> 'char *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x152827368 <col:28> 'char *' lvalue Var 0x152826768 'edir' 'char *'
|   |   |-DeclStmt 0x1528275d0 <line:16:7, col:35>
|   |   | `-VarDecl 0x152827488 <col:7, col:34> col:11 used filelen 'int' cinit
|   |   |   `-ImplicitCastExpr 0x1528275b8 <col:21, col:34> 'int' <IntegralCast>
|   |   |     `-CallExpr 0x152827560 <col:21, col:34> 'unsigned long'
|   |   |       |-ImplicitCastExpr 0x152827548 <col:21> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1528274f0 <col:21> 'unsigned long (const char *)' Function 0x1528271d8 'strlen' 'unsigned long (const char *)'
|   |   |       `-ImplicitCastExpr 0x1528275a0 <col:29> 'const char *' <NoOp>
|   |   |         `-ImplicitCastExpr 0x152827588 <col:29> 'char *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x152827510 <col:29> 'char *' lvalue Var 0x1528266e8 'efile' 'char *'
|   |   |-DeclStmt 0x15282a910 <line:19:7, col:61>
|   |   | `-VarDecl 0x15282a600 <col:7, col:60> col:13 used p 'char *' cinit
|   |   |   `-BinaryOperator 0x15282a8f0 <col:17, col:60> 'char *' '='
|   |   |     |-DeclRefExpr 0x15282a668 <col:17> 'char *' lvalue Var 0x152826668 'newpath' 'char *'
|   |   |     `-ImplicitCastExpr 0x15282a8d8 <col:27, col:60> 'char *' <IntegralToPointer>
|   |   |       `-CallExpr 0x15282a8b0 <col:27, col:60> 'int'
|   |   |         |-ImplicitCastExpr 0x15282a898 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |   |         | `-DeclRefExpr 0x15282a768 <col:27> 'int ()' Function 0x15282a6b0 'xmalloc' 'int ()'
|   |   |         `-BinaryOperator 0x15282a878 <col:36, col:59> 'int' '+'
|   |   |           |-BinaryOperator 0x15282a838 <col:36, col:49> 'int' '+'
|   |   |           | |-BinaryOperator 0x15282a7e0 <col:36, col:45> 'int' '+'
|   |   |           | | |-ImplicitCastExpr 0x15282a7c8 <col:36> 'int' <LValueToRValue>
|   |   |           | | | `-DeclRefExpr 0x15282a788 <col:36> 'int' lvalue Var 0x152827138 'dirlen' 'int'
|   |   |           | | `-IntegerLiteral 0x15282a7a8 <col:45> 'int' 1
|   |   |           | `-ImplicitCastExpr 0x15282a820 <col:49> 'int' <LValueToRValue>
|   |   |           |   `-DeclRefExpr 0x15282a800 <col:49> 'int' lvalue Var 0x152827488 'filelen' 'int'
|   |   |           `-IntegerLiteral 0x15282a858 <col:59> 'int' 1
|   |   |-CallExpr 0x15282ad08 <line:20:7, col:30> 'void *'
|   |   | |-ImplicitCastExpr 0x15282acf0 <col:7> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15282abf8 <col:7> 'void *(void *, const void *, unsigned long)' Function 0x15282a9a8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x15282ad58 <col:15> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15282ad40 <col:15> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15282ac18 <col:15> 'char *' lvalue Var 0x15282a600 'p' 'char *'
|   |   | |-ImplicitCastExpr 0x15282ad88 <col:18> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15282ad70 <col:18> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15282ac38 <col:18> 'char *' lvalue Var 0x152826768 'edir' 'char *'
|   |   | `-ImplicitCastExpr 0x15282adb8 <col:24> 'unsigned long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x15282ada0 <col:24> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15282ac58 <col:24> 'int' lvalue Var 0x152827138 'dirlen' 'int'
|   |   |-CompoundAssignOperator 0x15282ae28 <line:21:7, col:12> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x15282add0 <col:7> 'char *' lvalue Var 0x15282a600 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x15282ae10 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15282adf0 <col:12> 'int' lvalue Var 0x152827138 'dirlen' 'int'
|   |   |-BinaryOperator 0x15282aed8 <line:22:7, col:14> 'char' '='
|   |   | |-UnaryOperator 0x15282ae90 <col:7, col:9> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x15282ae78 <col:8, col:9> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x15282ae58 <col:8> 'char *' lvalue Var 0x15282a600 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x15282aec0 <col:14> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x15282aea8 <col:14> 'int' 47
|   |   |-CallExpr 0x15282afd8 <line:23:7, col:32> 'void *'
|   |   | |-ImplicitCastExpr 0x15282afc0 <col:7> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15282aef8 <col:7> 'void *(void *, const void *, unsigned long)' Function 0x15282a9a8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x15282b028 <col:15> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15282b010 <col:15> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15282af18 <col:15> 'char *' lvalue Var 0x15282a600 'p' 'char *'
|   |   | |-ImplicitCastExpr 0x15282b058 <col:18> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15282b040 <col:18> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15282af38 <col:18> 'char *' lvalue Var 0x1528266e8 'efile' 'char *'
|   |   | `-ImplicitCastExpr 0x15282b088 <col:25> 'unsigned long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x15282b070 <col:25> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15282af58 <col:25> 'int' lvalue Var 0x152827488 'filelen' 'int'
|   |   |-CompoundAssignOperator 0x15282b0f8 <line:24:7, col:12> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x15282b0a0 <col:7> 'char *' lvalue Var 0x15282a600 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x15282b0e0 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15282b0c0 <col:12> 'int' lvalue Var 0x152827488 'filelen' 'int'
|   |   `-BinaryOperator 0x15282b1a8 <line:25:7, col:12> 'char' '='
|   |     |-UnaryOperator 0x15282b160 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x15282b148 <col:8> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x15282b128 <col:8> 'char *' lvalue Var 0x15282a600 'p' 'char *'
|   |     `-ImplicitCastExpr 0x15282b190 <col:12> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x15282b178 <col:12> 'int' 0
|   |-BinaryOperator 0x15282b2d0 <line:28:3, col:13> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15282b288 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15282b250 <col:3> 'struct url *' lvalue ParmVar 0x15280e248 'u' 'struct url *'
|   | `-DeclRefExpr 0x15282b2b0 <col:13> 'char *' lvalue Var 0x152826668 'newpath' 'char *'
|   |-IfStmt 0x15282b428 <line:30:3, line:31:16>
|   | |-BinaryOperator 0x15282b370 <line:30:7, col:18> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x15282b2f0 <col:7> 'char *' lvalue Var 0x152826768 'edir' 'char *'
|   | | `-RecoveryExpr 0x15282b348 <col:15, col:18> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15282b310 <col:15> 'struct url *' lvalue ParmVar 0x15280e248 'u' 'struct url *'
|   | `-CallExpr 0x15282b3e8 <line:31:5, col:16> 'int'
|   |   |-ImplicitCastExpr 0x15282b3d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15282b390 <col:5> 'int ()' Function 0x152826878 'xfree' 'int ()'
|   |   `-ImplicitCastExpr 0x15282b410 <col:12> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15282b3b0 <col:12> 'char *' lvalue Var 0x152826768 'edir' 'char *'
|   |-IfStmt 0x15282b580 <line:32:3, line:33:17>
|   | |-BinaryOperator 0x15282b4c8 <line:32:7, col:19> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x15282b448 <col:7> 'char *' lvalue Var 0x1528266e8 'efile' 'char *'
|   | | `-RecoveryExpr 0x15282b4a0 <col:16, col:19> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15282b468 <col:16> 'struct url *' lvalue ParmVar 0x15280e248 'u' 'struct url *'
|   | `-CallExpr 0x15282b540 <line:33:5, col:17> 'int'
|   |   |-ImplicitCastExpr 0x15282b528 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15282b4e8 <col:5> 'int ()' Function 0x152826878 'xfree' 'int ()'
|   |   `-ImplicitCastExpr 0x15282b568 <col:12> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15282b508 <col:12> 'char *' lvalue Var 0x1528266e8 'efile' 'char *'
|   `-CallExpr 0x152122628 <line:36:3, col:16> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x15282b5a0 <col:3> 'int ()' Function 0x152826878 'xfree' 'int ()'
|     `-RecoveryExpr 0x152122600 <col:10, col:13> '<dependent type>' contains-errors lvalue
|       `-DeclRefExpr 0x15282b5c0 <col:10> 'struct url *' lvalue ParmVar 0x15280e248 'u' 'struct url *'
|-FunctionDecl 0x1528271d8 <line:15:20> col:20 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1528272d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x152827280 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x15282a9a8 <line:20:7> col:7 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x15282aaa8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x15282ab10 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x15282ab78 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15282aa50 <<invalid sloc>> Implicit 882
