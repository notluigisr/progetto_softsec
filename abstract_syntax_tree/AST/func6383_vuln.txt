TranslationUnitDecl 0x154045808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1540466b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x154045dd0 '__int128'
|-TypedefDecl 0x154046728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x154045df0 'unsigned __int128'
|-TypedefDecl 0x15580c630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15580c400 'struct __NSConstantString_tag'
|   `-Record 0x154046780 '__NSConstantString_tag'
|-TypedefDecl 0x15580c698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x154045f90 '__SVInt8_t'
|-TypedefDecl 0x15580c700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x154045fb0 '__SVInt16_t'
|-TypedefDecl 0x15580c768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x154045fd0 '__SVInt32_t'
|-TypedefDecl 0x15580c7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x154045ff0 '__SVInt64_t'
|-TypedefDecl 0x15580c838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x154046010 '__SVUint8_t'
|-TypedefDecl 0x15580c8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x154046030 '__SVUint16_t'
|-TypedefDecl 0x15580c908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x154046050 '__SVUint32_t'
|-TypedefDecl 0x15580c970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x154046070 '__SVUint64_t'
|-TypedefDecl 0x15580c9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x154046090 '__SVFloat16_t'
|-TypedefDecl 0x15580ca40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1540460b0 '__SVFloat32_t'
|-TypedefDecl 0x15580caa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1540460d0 '__SVFloat64_t'
|-TypedefDecl 0x15580cb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1540460f0 '__SVBfloat16_t'
|-TypedefDecl 0x15580cb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x154046110 '__clang_svint8x2_t'
|-TypedefDecl 0x15580cbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x154046130 '__clang_svint16x2_t'
|-TypedefDecl 0x15580cc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x154046150 '__clang_svint32x2_t'
|-TypedefDecl 0x15580ccb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x154046170 '__clang_svint64x2_t'
|-TypedefDecl 0x15580cd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x154046190 '__clang_svuint8x2_t'
|-TypedefDecl 0x15580cd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1540461b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15580cde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1540461d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15580ce50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1540461f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15580ceb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x154046210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15580cf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x154046230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15580cf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x154046250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15580cff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x154046270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15580d058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x154046290 '__clang_svint8x3_t'
|-TypedefDecl 0x15580d0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1540462b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15580d128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1540462d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15580d190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1540462f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15580d1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x154046310 '__clang_svuint8x3_t'
|-TypedefDecl 0x15580d260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x154046330 '__clang_svuint16x3_t'
|-TypedefDecl 0x15580d2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x154046350 '__clang_svuint32x3_t'
|-TypedefDecl 0x15580d330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x154046370 '__clang_svuint64x3_t'
|-TypedefDecl 0x15580d398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x154046390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x155811800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1540463b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x155811868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1540463d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1558118d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1540463f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x155811938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x154046410 '__clang_svint8x4_t'
|-TypedefDecl 0x1558119a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x154046430 '__clang_svint16x4_t'
|-TypedefDecl 0x155811a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x154046450 '__clang_svint32x4_t'
|-TypedefDecl 0x155811a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x154046470 '__clang_svint64x4_t'
|-TypedefDecl 0x155811ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x154046490 '__clang_svuint8x4_t'
|-TypedefDecl 0x155811b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1540464b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x155811ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1540464d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x155811c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1540464f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x155811c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x154046510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x155811ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x154046530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x155811d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x154046550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x155811db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x154046570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x155811e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x154046590 '__SVBool_t'
|-TypedefDecl 0x155811e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1540465b0 '__clang_svboolx2_t'
|-TypedefDecl 0x155811ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1540465d0 '__clang_svboolx4_t'
|-TypedefDecl 0x155811f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1540465f0 '__SVCount_t'
|-TypedefDecl 0x155811ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x155811fb0 'char *'
|   `-BuiltinType 0x1540458b0 'char'
|-TypedefDecl 0x155812068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x155811fb0 'char *'
|   `-BuiltinType 0x1540458b0 'char'
`-FunctionDecl 0x155835948 <dataset_diviso_filec/func6383_vuln.c:1:1, line:89:1> line:1:12 check_ld_imm 'int (struct bpf_verifier_env *, struct bpf_insn *)' static
  |-ParmVarDecl 0x155812648 <col:25, col:50> col:50 used env 'struct bpf_verifier_env *'
  |-ParmVarDecl 0x155835828 <col:55, col:72> col:72 used insn 'struct bpf_insn *'
  `-CompoundStmt 0x15583ecd8 <line:2:1, line:89:1>
    |-DeclStmt 0x155835e48 <line:3:2, col:46>
    | |-RecordDecl 0x155835a48 <col:2, col:9> col:9 struct bpf_insn_aux_data
    | `-VarDecl 0x155835bb8 <col:2, col:45> col:28 used aux 'struct bpf_insn_aux_data *' cinit
    |   `-ImplicitCastExpr 0x155835e18 <col:34, col:45> 'struct bpf_insn_aux_data *' <IntegralToPointer>
    |     `-CallExpr 0x155835dd8 <col:34, col:45> 'int'
    |       |-ImplicitCastExpr 0x155835dc0 <col:34> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x155835d50 <col:34> 'int ()' Function 0x155835c98 'cur_aux' 'int ()'
    |       `-ImplicitCastExpr 0x155835e00 <col:42> 'struct bpf_verifier_env *' <LValueToRValue>
    |         `-DeclRefExpr 0x155835d70 <col:42> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |-DeclStmt 0x1558361d8 <line:4:2, col:44>
    | |-RecordDecl 0x155835e60 <col:2, col:9> col:9 struct bpf_reg_state
    | `-VarDecl 0x155835fc8 <col:2, col:43> col:24 used regs 'struct bpf_reg_state *' cinit
    |   `-ImplicitCastExpr 0x1558361a8 <col:31, col:43> 'struct bpf_reg_state *' <IntegralToPointer>
    |     `-CallExpr 0x155836168 <col:31, col:43> 'int'
    |       |-ImplicitCastExpr 0x155836150 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x155836110 <col:31> 'int ()' Function 0x155836058 'cur_regs' 'int ()'
    |       `-ImplicitCastExpr 0x155836190 <col:40> 'struct bpf_verifier_env *' <LValueToRValue>
    |         `-DeclRefExpr 0x155836130 <col:40> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |-DeclStmt 0x1558362e0 <line:5:2, col:31>
    | `-VarDecl 0x155836278 <col:2, col:24> col:24 used dst_reg 'struct bpf_reg_state *'
    |-DeclStmt 0x1558364e8 <line:6:2, col:21>
    | |-RecordDecl 0x1558362f8 <col:2, col:9> col:9 struct bpf_map
    | `-VarDecl 0x155836468 <col:2, col:18> col:18 used map 'struct bpf_map *'
    |-DeclStmt 0x155836580 <line:7:2, col:9>
    | `-VarDecl 0x155836518 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x155837ea0 <line:9:2, line:12:2>
    | |-BinaryOperator 0x155836778 <line:9:6, col:30> 'int' contains-errors '!='
    | | |-CallExpr 0x1558366f8 <col:6, col:25> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x155836678 <col:6> 'int ()' Function 0x1558365c0 'BPF_SIZE' 'int ()'
    | | | `-RecoveryExpr 0x1558366d0 <col:15, col:21> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x155836698 <col:15> 'struct bpf_insn *' lvalue ParmVar 0x155835828 'insn' 'struct bpf_insn *'
    | | `-RecoveryExpr 0x155836758 <col:30> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x155837e80 <col:38, line:12:2>
    |   |-CallExpr 0x155837d78 <line:10:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x155837d60 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x155837cb8 <col:3> 'int ()' Function 0x155837c00 'verbose' 'int ()'
    |   | |-ImplicitCastExpr 0x155837da8 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x155837cd8 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |   | `-ImplicitCastExpr 0x155837dc0 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x155837d40 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x155837e70 <line:11:3, col:11>
    |     `-UnaryOperator 0x155837e58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x155837e40 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x155837e20 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x155838100 <line:13:2, line:16:2>
    | |-BinaryOperator 0x155837f40 <line:13:6, col:19> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x155837ef8 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x155837ec0 <col:6> 'struct bpf_insn *' lvalue ParmVar 0x155835828 'insn' 'struct bpf_insn *'
    | | `-IntegerLiteral 0x155837f20 <col:19> 'int' 0
    | `-CompoundStmt 0x1558380e0 <col:22, line:16:2>
    |   |-CallExpr 0x155837fd8 <line:14:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x155837fc0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x155837f60 <col:3> 'int ()' Function 0x155837c00 'verbose' 'int ()'
    |   | |-ImplicitCastExpr 0x155838008 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x155837f80 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |   | `-ImplicitCastExpr 0x155838020 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x155837fa0 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x1558380d0 <line:15:3, col:11>
    |     `-UnaryOperator 0x1558380b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1558380a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x155838080 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x155838388 <line:18:2, col:48> 'int' contains-errors '='
    | |-DeclRefExpr 0x155838120 <col:2> 'int' lvalue Var 0x155836518 'err' 'int'
    | `-CallExpr 0x155838350 <col:8, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x155838220 <col:8> 'int ()' Function 0x155838168 'check_reg_arg' 'int ()'
    |   |-DeclRefExpr 0x155838240 <col:22> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |   |-RecoveryExpr 0x155838298 <col:27, col:33> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x155838260 <col:27> 'struct bpf_insn *' lvalue ParmVar 0x155835828 'insn' 'struct bpf_insn *'
    |   `-RecoveryExpr 0x155838330 <col:42> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x155838428 <line:19:2, line:20:10>
    | |-ImplicitCastExpr 0x1558383c8 <line:19:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1558383a8 <col:6> 'int' lvalue Var 0x155836518 'err' 'int'
    | `-ReturnStmt 0x155838418 <line:20:3, col:10>
    |   `-ImplicitCastExpr 0x155838400 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1558383e0 <col:10> 'int' lvalue Var 0x155836518 'err' 'int'
    |-BinaryOperator 0x155838550 <line:22:2, col:31> 'struct bpf_reg_state *' contains-errors '='
    | |-DeclRefExpr 0x155838448 <col:2> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    | `-UnaryOperator 0x155838538 <col:12, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-ArraySubscriptExpr 0x155838518 <col:13, col:31> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1558384e8 <col:13> 'struct bpf_reg_state *' <LValueToRValue>
    |     | `-DeclRefExpr 0x155838468 <col:13> 'struct bpf_reg_state *' lvalue Var 0x155835fc8 'regs' 'struct bpf_reg_state *'
    |     `-ImplicitCastExpr 0x155838500 <col:18, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1558384c0 <col:18, col:24> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x155838488 <col:18> 'struct bpf_insn *' lvalue ParmVar 0x155835828 'insn' 'struct bpf_insn *'
    |-IfStmt 0x155838920 <line:23:2, line:29:2>
    | |-BinaryOperator 0x1558385f0 <line:23:6, col:23> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1558385a8 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x155838570 <col:6> 'struct bpf_insn *' lvalue ParmVar 0x155835828 'insn' 'struct bpf_insn *'
    | | `-IntegerLiteral 0x1558385d0 <col:23> 'int' 0
    | `-CompoundStmt 0x155838900 <col:26, line:29:2>
    |   |-BinaryOperator 0x1558386c8 <line:26:3, col:19> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x155838648 <col:3, col:12> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x155838610 <col:3> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    |   | `-RecoveryExpr 0x1558386a8 <col:19> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1558388f0 <line:28:3, col:10>
    |     `-IntegerLiteral 0x1558388d0 <col:10> 'int' 0
    |-IfStmt 0x155839888 <line:31:2, line:49:2>
    | |-RecoveryExpr 0x1558389a0 <line:31:6, col:23> '_Bool' contains-errors
    | `-CompoundStmt 0x155839858 <col:42, line:49:2>
    |   |-CallExpr 0x155838b60 <line:32:3, col:47> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x155838aa0 <col:3> 'int ()' Function 0x1558389e8 'mark_reg_known_zero' 'int ()'
    |   | |-DeclRefExpr 0x155838ac0 <col:23> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |   | |-DeclRefExpr 0x155838ae0 <col:28> 'struct bpf_reg_state *' lvalue Var 0x155835fc8 'regs' 'struct bpf_reg_state *'
    |   | `-RecoveryExpr 0x155838b38 <col:34, col:40> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x155838b00 <col:34> 'struct bpf_insn *' lvalue ParmVar 0x155835828 'insn' 'struct bpf_insn *'
    |   |-BinaryOperator 0x1558392a8 <line:34:3, col:32> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x155838bd0 <col:3, col:12> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x155838b98 <col:3> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    |   | `-CXXDependentScopeMemberExpr 0x155839260 <col:19, col:32> '<dependent type>' contains-errors lvalue .reg_type
    |   |   `-RecoveryExpr 0x155839238 <col:19, col:24> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x155839200 <col:19> 'struct bpf_insn_aux_data *' lvalue Var 0x155835bb8 'aux' 'struct bpf_insn_aux_data *'
    |   |-SwitchStmt 0x155839340 <line:35:3, line:47:3>
    |   | |-ImplicitCastExpr 0x155839328 <line:35:11, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   | | `-RecoveryExpr 0x155839300 <col:11, col:20> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x1558392c8 <col:11> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    |   | `-CompoundStmt 0x1558397e8 <col:26, line:47:3>
    |   |   |-BinaryOperator 0x155839470 <line:37:4, col:37> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x1558393a0 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x155839368 <col:4> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    |   |   | `-CXXDependentScopeMemberExpr 0x155839428 <col:24, col:37> '<dependent type>' contains-errors lvalue .mem_size
    |   |   |   `-RecoveryExpr 0x155839400 <col:24, col:29> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x1558393c8 <col:24> 'struct bpf_insn_aux_data *' lvalue Var 0x155835bb8 'aux' 'struct bpf_insn_aux_data *'
    |   |   |-BreakStmt 0x155839490 <line:38:4>
    |   |   |-BinaryOperator 0x1558395a0 <line:41:4, col:32> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x1558394d0 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x155839498 <col:4> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    |   |   | `-CXXDependentScopeMemberExpr 0x155839558 <col:19, col:32> '<dependent type>' contains-errors lvalue .btf
    |   |   |   `-RecoveryExpr 0x155839530 <col:19, col:24> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x1558394f8 <col:19> 'struct bpf_insn_aux_data *' lvalue Var 0x155835bb8 'aux' 'struct bpf_insn_aux_data *'
    |   |   |-BinaryOperator 0x1558396c8 <line:42:4, col:35> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x1558395f8 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x1558395c0 <col:4> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    |   |   | `-CXXDependentScopeMemberExpr 0x155839680 <col:22, col:35> '<dependent type>' contains-errors lvalue .btf_id
    |   |   |   `-RecoveryExpr 0x155839658 <col:22, col:27> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x155839620 <col:22> 'struct bpf_insn_aux_data *' lvalue Var 0x155835bb8 'aux' 'struct bpf_insn_aux_data *'
    |   |   |-BreakStmt 0x1558396e8 <line:43:4>
    |   |   `-DefaultStmt 0x1558397c8 <line:44:3, line:45:22>
    |   |     `-CallExpr 0x155839768 <col:4, col:22> 'int'
    |   |       |-ImplicitCastExpr 0x155839750 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x1558396f0 <col:4> 'int ()' Function 0x155837c00 'verbose' 'int ()'
    |   |       |-ImplicitCastExpr 0x155839798 <col:12> 'struct bpf_verifier_env *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x155839710 <col:12> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |   |       `-ImplicitCastExpr 0x1558397b0 <col:17> 'char *' <ArrayToPointerDecay>
    |   |         `-StringLiteral 0x155839730 <col:17> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x155839848 <line:48:3, col:10>
    |     `-IntegerLiteral 0x155839828 <col:10> 'int' 0
    |-IfStmt 0x15583a028 <line:51:2, line:68:2>
    | |-RecoveryExpr 0x155839908 <line:51:6, col:23> '_Bool' contains-errors
    | `-CompoundStmt 0x155839ff8 <col:40, line:68:2>
    |   |-DeclStmt 0x155839bc0 <line:52:3, col:44>
    |   | |-RecordDecl 0x155839928 <col:3, col:10> col:10 struct bpf_prog_aux
    |   | `-VarDecl 0x155839a98 <col:3, col:41> col:24 used aux 'struct bpf_prog_aux *' cinit
    |   |   `-CXXDependentScopeMemberExpr 0x155839b60 <col:30, col:41> '<dependent type>' contains-errors lvalue ->aux
    |   |     `-RecoveryExpr 0x155839b38 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x155839b00 <col:30> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |   |-IfStmt 0x155839d58 <line:56:3, line:59:3>
    |   | |-UnaryOperator 0x155839c50 <line:56:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x155839c38 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x155839c10 <col:8, col:13> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x155839bd8 <col:8> 'struct bpf_prog_aux *' contains-errors lvalue Var 0x155839a98 'aux' 'struct bpf_prog_aux *'
    |   | `-CompoundStmt 0x155839d40 <col:24, line:59:3>
    |   |   `-CallExpr 0x155839ce0 <line:57:4, col:22> 'int'
    |   |     |-ImplicitCastExpr 0x155839cc8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x155839c68 <col:4> 'int ()' Function 0x155837c00 'verbose' 'int ()'
    |   |     |-ImplicitCastExpr 0x155839d10 <col:12> 'struct bpf_verifier_env *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x155839c88 <col:12> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |   |     `-ImplicitCastExpr 0x155839d28 <col:17> 'char *' <ArrayToPointerDecay>
    |   |       `-StringLiteral 0x155839ca8 <col:17> 'char[4]' lvalue "STR"
    |   |-IfStmt 0x155839ee8 <line:60:3, line:63:3>
    |   | |-RecoveryExpr 0x155839dd8 <line:60:7, col:48> '_Bool' contains-errors
    |   | `-CompoundStmt 0x155839ed0 <col:65, line:63:3>
    |   |   `-CallExpr 0x155839e70 <line:61:4, col:22> 'int'
    |   |     |-ImplicitCastExpr 0x155839e58 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x155839df8 <col:4> 'int ()' Function 0x155837c00 'verbose' 'int ()'
    |   |     |-ImplicitCastExpr 0x155839ea0 <col:12> 'struct bpf_verifier_env *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x155839e18 <col:12> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |   |     `-ImplicitCastExpr 0x155839eb8 <col:17> 'char *' <ArrayToPointerDecay>
    |   |       `-StringLiteral 0x155839e38 <col:17> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x155839fe8 <line:67:3, col:10>
    |     `-IntegerLiteral 0x155839fc8 <col:10> 'int' 0
    |-BinaryOperator 0x15583a178 <line:70:2, col:37> 'struct bpf_map *' contains-errors '='
    | |-DeclRefExpr 0x15583a048 <col:2> 'struct bpf_map *' lvalue Var 0x155836468 'map' 'struct bpf_map *'
    | `-ArraySubscriptExpr 0x15583a158 <col:8, col:37> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x15583a128 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x15583a0a0 <col:8, col:13> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15583a068 <col:8> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |   `-ImplicitCastExpr 0x15583a140 <col:23, col:28> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x15583a100 <col:23, col:28> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x15583a0c8 <col:23> 'struct bpf_insn_aux_data *' lvalue Var 0x155835bb8 'aux' 'struct bpf_insn_aux_data *'
    |-CallExpr 0x15583e460 <line:71:2, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15583a198 <col:2> 'int ()' Function 0x1558389e8 'mark_reg_known_zero' 'int ()'
    | |-DeclRefExpr 0x15583a1b8 <col:22> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    | |-DeclRefExpr 0x15583a1d8 <col:27> 'struct bpf_reg_state *' lvalue Var 0x155835fc8 'regs' 'struct bpf_reg_state *'
    | `-RecoveryExpr 0x15583e438 <col:33, col:39> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15583e400 <col:33> 'struct bpf_insn *' lvalue ParmVar 0x155835828 'insn' 'struct bpf_insn *'
    |-BinaryOperator 0x15583e518 <line:72:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x15583e4d0 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15583e498 <col:2> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    | `-DeclRefExpr 0x15583e4f8 <col:21> 'struct bpf_map *' lvalue Var 0x155836468 'map' 'struct bpf_map *'
    |-IfStmt 0x15583ec78 <line:74:2, line:86:2> has_else
    | |-RecoveryExpr 0x15583e5f8 <line:74:6, line:75:23> '_Bool' contains-errors
    | |-CompoundStmt 0x15583e9e8 <col:49, line:80:2>
    | | |-BinaryOperator 0x15583e738 <line:77:3, col:23> '<dependent type>' contains-errors '='
    | | | |-RecoveryExpr 0x15583e6b0 <col:3, col:12> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x15583e678 <col:3> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    | | | `-RecoveryExpr 0x15583e710 <col:18, col:23> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x15583e6d8 <col:18> 'struct bpf_insn_aux_data *' lvalue Var 0x155835bb8 'aux' 'struct bpf_insn_aux_data *'
    | | `-IfStmt 0x15583e9c8 <line:78:3, line:79:25>
    | |   |-CallExpr 0x15583e890 <line:78:7, col:34> 'int'
    | |   | |-ImplicitCastExpr 0x15583e878 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x15583e838 <col:7> 'int ()' Function 0x15583e780 'map_value_has_spin_lock' 'int ()'
    | |   | `-ImplicitCastExpr 0x15583e8b8 <col:31> 'struct bpf_map *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x15583e858 <col:31> 'struct bpf_map *' lvalue Var 0x155836468 'map' 'struct bpf_map *'
    | |   `-BinaryOperator 0x15583e9a8 <line:79:4, col:25> '<dependent type>' contains-errors '='
    | |     |-RecoveryExpr 0x15583e908 <col:4, col:13> '<dependent type>' contains-errors lvalue
    | |     | `-DeclRefExpr 0x15583e8d0 <col:4> 'struct bpf_reg_state *' lvalue Var 0x155836278 'dst_reg' 'struct bpf_reg_state *'
    | |     `-UnaryOperator 0x15583e990 <col:18, col:25> '<dependent type>' contains-errors prefix '++' cannot overflow
    | |       `-RecoveryExpr 0x15583e968 <col:20, col:25> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x15583e930 <col:20> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    | `-IfStmt 0x15583ec48 <line:80:9, line:86:2> has_else
    |   |-RecoveryExpr 0x15583eac8 <line:80:13, line:81:23> '_Bool' contains-errors
    |   |-CompoundStmt 0x15583eb48 <col:43, line:83:2>
    |   `-CompoundStmt 0x15583ec30 <col:9, line:86:2>
    |     `-CallExpr 0x15583ebd0 <line:84:3, col:21> 'int'
    |       |-ImplicitCastExpr 0x15583ebb8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x15583eb58 <col:3> 'int ()' Function 0x155837c00 'verbose' 'int ()'
    |       |-ImplicitCastExpr 0x15583ec00 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>
    |       | `-DeclRefExpr 0x15583eb78 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x155812648 'env' 'struct bpf_verifier_env *'
    |       `-ImplicitCastExpr 0x15583ec18 <col:16> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x15583eb98 <col:16> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x15583ecc8 <line:88:2, col:9>
      `-IntegerLiteral 0x15583eca8 <col:9> 'int' 0
