TranslationUnitDecl 0x147055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1470564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147055bd0 '__int128'
|-TypedefDecl 0x147056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147055bf0 'unsigned __int128'
|-TypedefDecl 0x14780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14780bc00 'struct __NSConstantString_tag'
|   `-Record 0x147056580 '__NSConstantString_tag'
|-TypedefDecl 0x14780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147055d90 '__SVInt8_t'
|-TypedefDecl 0x14780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147055db0 '__SVInt16_t'
|-TypedefDecl 0x14780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147055dd0 '__SVInt32_t'
|-TypedefDecl 0x14780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147055df0 '__SVInt64_t'
|-TypedefDecl 0x14780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147055e10 '__SVUint8_t'
|-TypedefDecl 0x14780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147055e30 '__SVUint16_t'
|-TypedefDecl 0x14780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147055e50 '__SVUint32_t'
|-TypedefDecl 0x14780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147055e70 '__SVUint64_t'
|-TypedefDecl 0x14780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147055e90 '__SVFloat16_t'
|-TypedefDecl 0x14780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1470560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1470560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1470560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1470561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1470561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1470561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1470562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1470562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1470562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147056390 '__SVBool_t'
|-TypedefDecl 0x14780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1470563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1470563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1470563f0 '__SVCount_t'
|-TypedefDecl 0x14780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14780dbb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
|-TypedefDecl 0x14780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14780dbb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
`-FunctionDecl 0x14780ddc8 <dataset_diviso_filec/func1080_vuln.c:1:1, line:72:1> line:1:1 invalid transcode_utf8 'int (int)'
  |-ParmVarDecl 0x14780dcf0 <col:16, <invalid sloc>> col:19 invalid 'int'
  `-CompoundStmt 0x147828b40 <line:3:1, line:72:1>
    |-IfStmt 0x14780dfa0 <line:6:5, line:9:5>
    | |-BinaryOperator 0x14780df08 <line:6:9, col:21> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x14780dec8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14780dee8 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14780df90 <line:7:5, line:9:5>
    |-BinaryOperator 0x14780e160 <line:10:5, col:34> 'unsigned long' contains-errors '='
    | |-UnaryExprOrTypeTraitExpr 0x14780e0b8 <col:5, col:12> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x14780e098 <col:12> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14780e140 <col:18, col:34> '<dependent type>' contains-errors
    |   `-CXXDependentScopeMemberExpr 0x14780e0f8 <col:18, col:27> '<dependent type>' contains-errors lvalue .length
    |     `-RecoveryExpr 0x14780e0d8 <col:18> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x147828b08 <line:11:5, line:70:5>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x14780e2b0 <line:11:24, col:28> 'int' contains-errors '<'
      | |-RecoveryExpr 0x14780e270 <col:24> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x14780e290 <col:28> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14780e320 <col:33, col:35> '<dependent type>' contains-errors prefix '++' cannot overflow
      | `-RecoveryExpr 0x14780e300 <col:35> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x147828ae8 <line:12:5, line:70:5>
        |-DeclStmt 0x147827648 <line:14:9, col:78>
        | `-VarDecl 0x14780e350 <col:9, col:77> col:23 used codepoint 'unsigned long' cinit
        |   `-CallExpr 0x147827610 <col:35, col:77> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x147827510 <col:35> 'int ()' Function 0x147827458 'get_next_utf8_codepoint' 'int ()'
        |     |-RecoveryExpr 0x1478275b0 <col:59> '<dependent type>' contains-errors lvalue
        |     |-RecoveryExpr 0x1478275d0 <col:69> '<dependent type>' contains-errors lvalue
        |     `-RecoveryExpr 0x1478275f0 <col:72> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x147828ab8 <line:15:9, line:69:9> has_else
          |-RecoveryExpr 0x147827660 <line:15:13> '_Bool' contains-errors
          |-CompoundStmt 0x147827730 <line:16:9, line:26:9>
          | `-IfStmt 0x147827700 <line:18:13, line:25:13> has_else
          |   |-RecoveryExpr 0x147827680 <line:18:17, col:29> '_Bool' contains-errors
          |   |-CompoundStmt 0x1478276c0 <line:19:13, line:21:13>
          |   `-CompoundStmt 0x1478276f0 <line:23:13, line:25:13>
          `-IfStmt 0x147828a88 <line:27:14, line:69:9> has_else
            |-BinaryOperator 0x1478277b8 <line:27:18, col:30> 'int' contains-errors '<'
            | |-ImplicitCastExpr 0x147827788 <col:18> 'unsigned long' contains-errors <LValueToRValue>
            | | `-DeclRefExpr 0x147827748 <col:18> 'unsigned long' contains-errors lvalue Var 0x14780e350 'codepoint' 'unsigned long'
            | `-ImplicitCastExpr 0x1478277a0 <col:30> 'unsigned long' <IntegralCast>
            |   `-IntegerLiteral 0x147827768 <col:30> 'int' 128
            |-CompoundStmt 0x147827918 <line:28:9, line:38:9>
            | |-DeclStmt 0x147827850 <line:29:13, col:51>
            | | `-VarDecl 0x1478277e8 <col:13, col:18> col:18 used ch 'char'
            | `-IfStmt 0x1478278e8 <line:30:13, line:37:13> has_else
            |   |-RecoveryExpr 0x147827868 <line:30:17, col:29> '_Bool' contains-errors
            |   |-CompoundStmt 0x147827888 <line:31:13, line:33:13>
            |   `-CompoundStmt 0x1478278d8 <line:35:13, line:37:13>
            `-IfStmt 0x147828a58 <line:39:14, line:69:9> has_else
              |-RecoveryExpr 0x147827938 <line:39:18, col:30> '_Bool' contains-errors
              |-CompoundStmt 0x147827958 <line:40:9, line:42:9>
              `-IfStmt 0x147828a28 <line:43:14, line:69:9> has_else
                |-RecoveryExpr 0x147827ae8 <line:43:18, line:44:68> '_Bool' contains-errors
                |-CompoundStmt 0x147827b28 <line:45:9, line:47:9>
                `-CompoundStmt 0x147828a00 <line:49:9, line:69:9>
                  |-DeclStmt 0x147827be8 <line:50:13, col:36>
                  | `-VarDecl 0x147827b50 <col:13, col:32> col:27 used ch 'unsigned char' cinit
                  |   `-ImplicitCastExpr 0x147827bd0 <col:32> 'unsigned char' <IntegralCast>
                  |     `-CharacterLiteral 0x147827bb8 <col:32> 'int' 0
                  |-IfStmt 0x147828298 <line:51:13, line:62:13> has_else
                  | |-RecoveryExpr 0x147827c00 <line:51:17, col:29> '_Bool' contains-errors
                  | |-CompoundStmt 0x147827e20 <line:52:13, line:54:13>
                  | | `-BinaryOperator 0x147827e00 <line:53:17, col:46> 'unsigned char' contains-errors '='
                  | |   |-DeclRefExpr 0x147827c20 <col:17> 'unsigned char' lvalue Var 0x147827b50 'ch' 'unsigned char'
                  | |   `-ImplicitCastExpr 0x147827de8 <col:22, col:46> 'unsigned char' contains-errors <IntegralCast>
                  | |     `-CallExpr 0x147827da8 <col:22, col:46> 'int' contains-errors
                  | |       |-ImplicitCastExpr 0x147827d90 <col:22> 'int (*)()' <FunctionToPointerDecay>
                  | |       | `-DeclRefExpr 0x147827d20 <col:22> 'int ()' Function 0x147827c68 'encode_winansi' 'int ()'
                  | |       `-ImplicitCastExpr 0x147827dd0 <col:37> 'unsigned long' contains-errors <LValueToRValue>
                  | |         `-DeclRefExpr 0x147827d40 <col:37> 'unsigned long' contains-errors lvalue Var 0x14780e350 'codepoint' 'unsigned long'
                  | `-IfStmt 0x147828268 <line:55:18, line:62:13> has_else
                  |   |-RecoveryExpr 0x147827e38 <line:55:22, col:34> '_Bool' contains-errors
                  |   |-CompoundStmt 0x147828028 <line:56:13, line:58:13>
                  |   | `-BinaryOperator 0x147828008 <line:57:17, col:47> 'unsigned char' contains-errors '='
                  |   |   |-DeclRefExpr 0x147827e58 <col:17> 'unsigned char' lvalue Var 0x147827b50 'ch' 'unsigned char'
                  |   |   `-ImplicitCastExpr 0x147827ff0 <col:22, col:47> 'unsigned char' contains-errors <IntegralCast>
                  |   |     `-CallExpr 0x147827fb0 <col:22, col:47> 'int' contains-errors
                  |   |       |-ImplicitCastExpr 0x147827f98 <col:22> 'int (*)()' <FunctionToPointerDecay>
                  |   |       | `-DeclRefExpr 0x147827f58 <col:22> 'int ()' Function 0x147827ea0 'encode_macroman' 'int ()'
                  |   |       `-ImplicitCastExpr 0x147827fd8 <col:38> 'unsigned long' contains-errors <LValueToRValue>
                  |   |         `-DeclRefExpr 0x147827f78 <col:38> 'unsigned long' contains-errors lvalue Var 0x14780e350 'codepoint' 'unsigned long'
                  |   `-IfStmt 0x147828248 <line:59:18, line:62:13>
                  |     |-RecoveryExpr 0x147828040 <line:59:22, col:34> '_Bool' contains-errors
                  |     `-CompoundStmt 0x147828230 <line:60:13, line:62:13>
                  |       `-BinaryOperator 0x147828210 <line:61:17, col:45> 'unsigned char' contains-errors '='
                  |         |-DeclRefExpr 0x147828060 <col:17> 'unsigned char' lvalue Var 0x147827b50 'ch' 'unsigned char'
                  |         `-ImplicitCastExpr 0x1478281f8 <col:22, col:45> 'unsigned char' contains-errors <IntegralCast>
                  |           `-CallExpr 0x1478281b8 <col:22, col:45> 'int' contains-errors
                  |             |-ImplicitCastExpr 0x1478281a0 <col:22> 'int (*)()' <FunctionToPointerDecay>
                  |             | `-DeclRefExpr 0x147828160 <col:22> 'int ()' Function 0x1478280a8 'encode_pdfdoc' 'int ()'
                  |             `-ImplicitCastExpr 0x1478281e0 <col:36> 'unsigned long' contains-errors <LValueToRValue>
                  |               `-DeclRefExpr 0x147828180 <col:36> 'unsigned long' contains-errors lvalue Var 0x14780e350 'codepoint' 'unsigned long'
                  `-IfStmt 0x147828380 <line:63:13, line:67:13>
                    |-BinaryOperator 0x147828330 <line:63:17, col:23> 'int' '=='
                    | |-ImplicitCastExpr 0x147828318 <col:17> 'int' <IntegralCast>
                    | | `-ImplicitCastExpr 0x147828300 <col:17> 'unsigned char' <LValueToRValue>
                    | |   `-DeclRefExpr 0x1478282c8 <col:17> 'unsigned char' lvalue Var 0x147827b50 'ch' 'unsigned char'
                    | `-CharacterLiteral 0x1478282e8 <col:23> 'int' 0
                    `-CompoundStmt 0x147828370 <line:64:13, line:67:13>
