TranslationUnitDecl 0x12b844208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b8450b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b8447d0 '__int128'
|-TypedefDecl 0x12b845128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b8447f0 'unsigned __int128'
|-TypedefDecl 0x12b914e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b914c00 'struct __NSConstantString_tag'
|   `-Record 0x12b845180 '__NSConstantString_tag'
|-TypedefDecl 0x12b914e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b844990 '__SVInt8_t'
|-TypedefDecl 0x12b914f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b8449b0 '__SVInt16_t'
|-TypedefDecl 0x12b914f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b8449d0 '__SVInt32_t'
|-TypedefDecl 0x12b914fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b8449f0 '__SVInt64_t'
|-TypedefDecl 0x12b915038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b844a10 '__SVUint8_t'
|-TypedefDecl 0x12b9150a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b844a30 '__SVUint16_t'
|-TypedefDecl 0x12b915108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b844a50 '__SVUint32_t'
|-TypedefDecl 0x12b915170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b844a70 '__SVUint64_t'
|-TypedefDecl 0x12b9151d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b844a90 '__SVFloat16_t'
|-TypedefDecl 0x12b915240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b844ab0 '__SVFloat32_t'
|-TypedefDecl 0x12b9152a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b844ad0 '__SVFloat64_t'
|-TypedefDecl 0x12b915310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b844af0 '__SVBfloat16_t'
|-TypedefDecl 0x12b915378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b844b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b9153e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b844b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b915448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b844b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b9154b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b844b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b915518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b844b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b915580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b844bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b9155e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b844bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b915650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b844bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b9156b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b844c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b915720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b844c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b915788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b844c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b9157f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b844c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b915858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b844c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12b9158c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b844cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b915928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b844cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b915990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b844cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b9159f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b844d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b915a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b844d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b915ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b844d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b915b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b844d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b915b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b844d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b916400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b844db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b916468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b844dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b9164d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b844df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b916538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b844e10 '__clang_svint8x4_t'
|-TypedefDecl 0x12b9165a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b844e30 '__clang_svint16x4_t'
|-TypedefDecl 0x12b916608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b844e50 '__clang_svint32x4_t'
|-TypedefDecl 0x12b916670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b844e70 '__clang_svint64x4_t'
|-TypedefDecl 0x12b9166d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b844e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b916740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b844eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b9167a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b844ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b916810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b844ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b916878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b844f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b9168e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b844f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b916948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b844f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b9169b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b844f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b916a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b844f90 '__SVBool_t'
|-TypedefDecl 0x12b916a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b844fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b916ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b844fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b916b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b844ff0 '__SVCount_t'
|-TypedefDecl 0x12b916bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b916bb0 'char *'
|   `-BuiltinType 0x12b8442b0 'char'
|-TypedefDecl 0x12b916c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b916bb0 'char *'
|   `-BuiltinType 0x12b8442b0 'char'
`-FunctionDecl 0x12b916df8 <dataset_diviso_filec/func16426_vuln.c:1:1, line:25:1> line:1:12 invalid check_trust 'int (int *)' static
  |-ParmVarDecl 0x12b916d28 <col:24, col:40> col:40 referenced invalid ctx 'int *'
  `-CompoundStmt 0x12b931108 <line:2:1, line:25:1>
    |-DeclStmt 0x12b916fc0 <line:6:2, col:11>
    | |-VarDecl 0x12b916ec0 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x12b916f40 <col:2, col:9> col:9 used ok 'int'
    |-DeclStmt 0x12b917270 <line:8:2, col:41>
    | `-VarDecl 0x12b917208 <col:2, col:40> col:8 used cb 'int (*)(int, int *)'
    |-BinaryOperator 0x12b917310 <line:9:2, col:10> 'int (*)(int, int *)' contains-errors '='
    | |-DeclRefExpr 0x12b917288 <col:2> 'int (*)(int, int *)' lvalue Var 0x12b917208 'cb' 'int (*)(int, int *)'
    | `-CXXDependentScopeMemberExpr 0x12b9172c8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->verify_cb
    |   `-RecoveryExpr 0x12b9172a8 <col:5> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b9305a8 <line:11:2, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x12b917330 <col:2> 'int' lvalue Var 0x12b916ec0 'i' 'int'
    | `-BinaryOperator 0x12b930588 <col:6, col:32> '<dependent type>' contains-errors '-'
    |   |-CallExpr 0x12b930540 <col:6, col:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12b9304b8 <col:6> 'int ()' Function 0x12b930400 'sk_X509_num' 'int ()'
    |   | `-CXXDependentScopeMemberExpr 0x12b9304f8 <col:18, col:23> '<dependent type>' contains-errors lvalue ->chain
    |   |   `-RecoveryExpr 0x12b9304d8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x12b930568 <col:32> 'int' 1
    |-BinaryOperator 0x12b930a38 <line:13:2, col:47> 'int' contains-errors '='
    | |-DeclRefExpr 0x12b930780 <col:2> 'int' lvalue Var 0x12b916f40 'ok' 'int'
    | `-CallExpr 0x12b930a00 <col:7, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b930880 <col:7> 'int ()' Function 0x12b9307c8 'X509_check_trust' 'int ()'
    |   |-RecoveryExpr 0x12b9309e0 <col:24> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x12b930920 <col:27, col:39> '<dependent type>' contains-errors lvalue ->trust
    |   | `-CXXDependentScopeMemberExpr 0x12b9308d8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->param
    |   |   `-RecoveryExpr 0x12b9308b8 <col:27> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x12b930968 <col:46> 'int' 0
    |-IfStmt 0x12b930b20 <line:14:2, line:15:10>
    | |-BinaryOperator 0x12b930ad0 <line:14:6, col:12> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12b930a58 <col:6> 'int' lvalue Var 0x12b916f40 'ok' 'int'
    | | `-RecoveryExpr 0x12b930ab0 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12b930b10 <line:15:3, col:10>
    |   `-IntegerLiteral 0x12b930af0 <col:10> 'int' 1
    |-BinaryOperator 0x12b930bf0 <line:16:2, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12b930b88 <col:2, col:7> '<dependent type>' contains-errors lvalue ->error_depth
    | | `-RecoveryExpr 0x12b930b60 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12b930b40 <col:2> 'int *' lvalue ParmVar 0x12b916d28 'ctx' 'int *'
    | `-DeclRefExpr 0x12b930bd0 <col:21> 'int' lvalue Var 0x12b916ec0 'i' 'int'
    |-BinaryOperator 0x12b930cf8 <line:17:2, col:22> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12b930c58 <col:2, col:7> '<dependent type>' contains-errors lvalue ->current_cert
    | | `-RecoveryExpr 0x12b930c30 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12b930c10 <col:2> 'int *' lvalue ParmVar 0x12b916d28 'ctx' 'int *'
    | `-RecoveryExpr 0x12b930cd8 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12b930fc0 <line:18:2, line:21:16> has_else
    | |-BinaryOperator 0x12b930d90 <line:18:6, col:12> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12b930d18 <col:6> 'int' lvalue Var 0x12b916f40 'ok' 'int'
    | | `-RecoveryExpr 0x12b930d70 <col:12> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x12b930e98 <line:19:3, col:16> '<dependent type>' contains-errors '='
    | | |-CXXDependentScopeMemberExpr 0x12b930df8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->error
    | | | `-RecoveryExpr 0x12b930dd0 <col:3> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x12b930db0 <col:3> 'int *' lvalue ParmVar 0x12b916d28 'ctx' 'int *'
    | | `-RecoveryExpr 0x12b930e78 <col:16> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x12b930fa0 <line:21:3, col:16> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x12b930f00 <col:3, col:8> '<dependent type>' contains-errors lvalue ->error
    |   | `-RecoveryExpr 0x12b930ed8 <col:3> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12b930eb8 <col:3> 'int *' lvalue ParmVar 0x12b916d28 'ctx' 'int *'
    |   `-RecoveryExpr 0x12b930f80 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b9310a0 <line:22:2, col:16> 'int' contains-errors '='
    | |-DeclRefExpr 0x12b930ff0 <col:2> 'int' lvalue Var 0x12b916f40 'ok' 'int'
    | `-CallExpr 0x12b931070 <col:7, col:16> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b931010 <col:7> 'int (*)(int, int *)' lvalue Var 0x12b917208 'cb' 'int (*)(int, int *)'
    |   |-IntegerLiteral 0x12b931030 <col:10> 'int' 0
    |   `-RecoveryExpr 0x12b931050 <col:13> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12b9310f8 <line:23:2, col:9>
      `-ImplicitCastExpr 0x12b9310e0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12b9310c0 <col:9> 'int' lvalue Var 0x12b916f40 'ok' 'int'
