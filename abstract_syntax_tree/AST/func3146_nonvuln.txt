TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x12700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12700bc00 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x12700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x12700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x12700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x12700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x12700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x12700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x12700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x12700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x12700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x12700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x12700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x12700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x12700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-FunctionDecl 0x12700de38 <dataset_diviso_filec/func3146_nonvuln.c:1:1, line:25:1> line:1:1 get_word 'int (char *, char *)'
| |-ParmVarDecl 0x12700dcd8 <col:10, col:16> col:16 used s 'char *'
| |-ParmVarDecl 0x12700dd58 <line:2:10, col:16> col:16 used d 'char *'
| `-CompoundStmt 0x127027008 <line:3:1, line:25:1>
|   |-DeclStmt 0x12700e050 <line:4:4, col:17>
|   | |-VarDecl 0x12700df50 <col:4, col:10> col:10 used p1 'char *'
|   | `-VarDecl 0x12700dfd0 <col:4, col:15> col:15 used p2 'char *'
|   |-BinaryOperator 0x12700e0c0 <line:6:4, col:9> 'char *' '='
|   | |-DeclRefExpr 0x12700e068 <col:4> 'char *' lvalue Var 0x12700df50 'p1' 'char *'
|   | `-ImplicitCastExpr 0x12700e0a8 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12700e088 <col:9> 'char *' lvalue ParmVar 0x12700dcd8 's' 'char *'
|   |-BinaryOperator 0x12700e138 <line:7:4, col:9> 'char *' '='
|   | |-DeclRefExpr 0x12700e0e0 <col:4> 'char *' lvalue Var 0x12700dfd0 'p2' 'char *'
|   | `-ImplicitCastExpr 0x12700e120 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12700e100 <col:9> 'char *' lvalue ParmVar 0x12700dd58 'd' 'char *'
|   |-WhileStmt 0x127026ee0 <line:8:4, line:22:6>
|   | |-ImplicitCastExpr 0x12700e1a8 <line:8:11, col:12> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x12700e190 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x12700e178 <col:12> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12700e158 <col:12> 'char *' lvalue Var 0x12700df50 'p1' 'char *'
|   | `-CompoundStmt 0x127026ea8 <line:9:6, line:22:6>
|   |   |-IfStmt 0x127026c38 <line:10:9, line:17:11>
|   |   | |-BinaryOperator 0x12700e230 <line:10:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x12700e200 <col:13> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12700e1c0 <col:13> 'char *' lvalue Var 0x12700dfd0 'p2' 'char *'
|   |   | | `-ImplicitCastExpr 0x12700e218 <col:19> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12700e1e0 <col:19> 'char *' lvalue ParmVar 0x12700dd58 'd' 'char *'
|   |   | `-CompoundStmt 0x127026c20 <line:11:11, line:17:11>
|   |   |   `-IfStmt 0x127026c00 <line:12:14, line:16:16>
|   |   |     |-CallExpr 0x127026b48 <line:12:18, col:29> 'int'
|   |   |     | |-ImplicitCastExpr 0x127026b30 <col:18> 'int (*)(int)' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x127026a90 <col:18> 'int (int)' Function 0x1270268d0 'isspace' 'int (int)'
|   |   |     | `-ImplicitCastExpr 0x127026b88 <col:26, col:27> 'int' <IntegralCast>
|   |   |     |   `-ImplicitCastExpr 0x127026b70 <col:26, col:27> 'char' <LValueToRValue>
|   |   |     |     `-UnaryOperator 0x127026ae8 <col:26, col:27> 'char' lvalue prefix '*' cannot overflow
|   |   |     |       `-ImplicitCastExpr 0x127026ad0 <col:27> 'char *' <LValueToRValue>
|   |   |     |         `-DeclRefExpr 0x127026ab0 <col:27> 'char *' lvalue Var 0x12700df50 'p1' 'char *'
|   |   |     `-CompoundStmt 0x127026be0 <line:13:16, line:16:16>
|   |   |       |-UnaryOperator 0x127026bc0 <line:14:19, col:21> 'char *' postfix '++'
|   |   |       | `-DeclRefExpr 0x127026ba0 <col:19> 'char *' lvalue Var 0x12700df50 'p1' 'char *'
|   |   |       `-ContinueStmt 0x127026bd8 <line:15:19>
|   |   |-IfStmt 0x127026d40 <line:18:9, col:27>
|   |   | |-CallExpr 0x127026ce0 <col:13, col:24> 'int'
|   |   | | |-ImplicitCastExpr 0x127026cc8 <col:13> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x127026c58 <col:13> 'int (int)' Function 0x1270268d0 'isspace' 'int (int)'
|   |   | | `-ImplicitCastExpr 0x127026d20 <col:21, col:22> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x127026d08 <col:21, col:22> 'char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x127026cb0 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x127026c98 <col:22> 'char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x127026c78 <col:22> 'char *' lvalue Var 0x12700df50 'p1' 'char *'
|   |   | `-BreakStmt 0x127026d38 <col:27>
|   |   |-BinaryOperator 0x127026e18 <line:19:9, col:16> 'char' '='
|   |   | |-UnaryOperator 0x127026d98 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x127026d80 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x127026d60 <col:10> 'char *' lvalue Var 0x12700dfd0 'p2' 'char *'
|   |   | `-ImplicitCastExpr 0x127026e00 <col:15, col:16> 'char' <LValueToRValue>
|   |   |   `-UnaryOperator 0x127026de8 <col:15, col:16> 'char' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x127026dd0 <col:16> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x127026db0 <col:16> 'char *' lvalue Var 0x12700df50 'p1' 'char *'
|   |   |-UnaryOperator 0x127026e58 <line:20:9, col:11> 'char *' postfix '++'
|   |   | `-DeclRefExpr 0x127026e38 <col:9> 'char *' lvalue Var 0x12700df50 'p1' 'char *'
|   |   `-UnaryOperator 0x127026e90 <line:21:9, col:11> 'char *' postfix '++'
|   |     `-DeclRefExpr 0x127026e70 <col:9> 'char *' lvalue Var 0x12700dfd0 'p2' 'char *'
|   |-BinaryOperator 0x127026f88 <line:23:4, col:10> 'char' '='
|   | |-UnaryOperator 0x127026f38 <col:4, col:5> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x127026f20 <col:5> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127026f00 <col:5> 'char *' lvalue Var 0x12700dfd0 'p2' 'char *'
|   | `-ImplicitCastExpr 0x127026f70 <col:10> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x127026f50 <col:10> 'int' 0
|   `-ReturnStmt 0x127026ff8 <line:24:4, col:11>
|     `-ImplicitCastExpr 0x127026fe0 <col:11> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x127026fc8 <col:11> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x127026fa8 <col:11> 'char *' lvalue Var 0x12700df50 'p1' 'char *'
`-FunctionDecl 0x1270268d0 <line:12:18> col:18 implicit used isspace 'int (int)' extern
  |-ParmVarDecl 0x1270269d0 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x127026978 <<invalid sloc>> Implicit 929
  |-NoThrowAttr 0x127026a40 <col:18> Implicit
  `-PureAttr 0x127026a68 <col:18> Implicit
