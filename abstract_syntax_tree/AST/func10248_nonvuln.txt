TranslationUnitDecl 0x13e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e055bd0 '__int128'
|-TypedefDecl 0x13e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e055bf0 'unsigned __int128'
|-TypedefDecl 0x13e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e126000 'struct __NSConstantString_tag'
|   `-Record 0x13e056580 '__NSConstantString_tag'
|-TypedefDecl 0x13e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e055d90 '__SVInt8_t'
|-TypedefDecl 0x13e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e055db0 '__SVInt16_t'
|-TypedefDecl 0x13e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e055dd0 '__SVInt32_t'
|-TypedefDecl 0x13e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e055df0 '__SVInt64_t'
|-TypedefDecl 0x13e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e055e10 '__SVUint8_t'
|-TypedefDecl 0x13e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e055e30 '__SVUint16_t'
|-TypedefDecl 0x13e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e055e50 '__SVUint32_t'
|-TypedefDecl 0x13e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e055e70 '__SVUint64_t'
|-TypedefDecl 0x13e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e055e90 '__SVFloat16_t'
|-TypedefDecl 0x13e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e056390 '__SVBool_t'
|-TypedefDecl 0x13e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e0563f0 '__SVCount_t'
|-TypedefDecl 0x13e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
|-TypedefDecl 0x13e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
`-FunctionDecl 0x13e1281a8 <dataset_diviso_filec/func10248_nonvuln.c:1:1, line:23:1> line:1:15 OPENSSL_LH_strhash 'unsigned long (const char *)'
  |-ParmVarDecl 0x13e1280d8 <col:34, col:46> col:46 used c 'const char *'
  `-CompoundStmt 0x13e1411b0 <line:2:1, line:23:1>
    |-DeclStmt 0x13e128358 <line:3:5, col:26>
    | `-VarDecl 0x13e1282b8 <col:5, col:25> col:19 used ret 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x13e128340 <col:25> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x13e128320 <col:25> 'int' 0
    |-DeclStmt 0x13e1283f0 <line:4:5, col:11>
    | `-VarDecl 0x13e128388 <col:5, col:10> col:10 used n 'long'
    |-DeclStmt 0x13e128488 <line:5:5, col:20>
    | `-VarDecl 0x13e128420 <col:5, col:19> col:19 used v 'unsigned long'
    |-DeclStmt 0x13e128520 <line:6:5, col:10>
    | `-VarDecl 0x13e1284b8 <col:5, col:9> col:9 used r 'int'
    |-IfStmt 0x13e1286e8 <line:8:5, line:9:16>
    | |-RecoveryExpr 0x13e128680 <line:8:9, col:35> '_Bool' contains-errors
    | `-ReturnStmt 0x13e1286d8 <line:9:9, col:16>
    |   `-ImplicitCastExpr 0x13e1286c0 <col:16> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x13e1286a0 <col:16> 'unsigned long' lvalue Var 0x13e1282b8 'ret' 'unsigned long'
    |-BinaryOperator 0x13e128760 <line:11:5, col:9> 'long' '='
    | |-DeclRefExpr 0x13e128708 <col:5> 'long' lvalue Var 0x13e128388 'n' 'long'
    | `-ImplicitCastExpr 0x13e128748 <col:9> 'long' <IntegralCast>
    |   `-IntegerLiteral 0x13e128728 <col:9> 'int' 256
    |-WhileStmt 0x13e141090 <line:12:5, line:21:5>
    | |-ImplicitCastExpr 0x13e1287d0 <line:12:12, col:13> 'char' <LValueToRValue>
    | | `-UnaryOperator 0x13e1287b8 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x13e1287a0 <col:13> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13e128780 <col:13> 'const char *' lvalue ParmVar 0x13e1280d8 'c' 'const char *'
    | `-CompoundStmt 0x13e141050 <col:16, line:21:5>
    |   |-BinaryOperator 0x13e140b30 <line:13:9, col:20> 'unsigned long' '='
    |   | |-DeclRefExpr 0x13e140a00 <col:9> 'unsigned long' lvalue Var 0x13e128420 'v' 'unsigned long'
    |   | `-ImplicitCastExpr 0x13e140b18 <col:13, col:20> 'unsigned long' <IntegralCast>
    |   |   `-BinaryOperator 0x13e140af8 <col:13, col:20> 'long' '|'
    |   |     |-ImplicitCastExpr 0x13e140ab0 <col:13> 'long' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x13e140a20 <col:13> 'long' lvalue Var 0x13e128388 'n' 'long'
    |   |     `-ImplicitCastExpr 0x13e140ae0 <col:17, col:20> 'long' <IntegralCast>
    |   |       `-ImplicitCastExpr 0x13e140ac8 <col:17, col:20> 'char' <LValueToRValue>
    |   |         `-ParenExpr 0x13e140a90 <col:17, col:20> 'const char' lvalue
    |   |           `-UnaryOperator 0x13e140a78 <col:18, col:19> 'const char' lvalue prefix '*' cannot overflow
    |   |             `-ImplicitCastExpr 0x13e140a60 <col:19> 'const char *' <LValueToRValue>
    |   |               `-DeclRefExpr 0x13e140a40 <col:19> 'const char *' lvalue ParmVar 0x13e1280d8 'c' 'const char *'
    |   |-CompoundAssignOperator 0x13e140ba8 <line:14:9, col:14> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
    |   | |-DeclRefExpr 0x13e140b50 <col:9> 'long' lvalue Var 0x13e128388 'n' 'long'
    |   | `-ImplicitCastExpr 0x13e140b90 <col:14> 'long' <IntegralCast>
    |   |   `-IntegerLiteral 0x13e140b70 <col:14> 'int' 256
    |   |-BinaryOperator 0x13e140da8 <line:15:9, col:35> 'int' '='
    |   | |-DeclRefExpr 0x13e140bd8 <col:9> 'int' lvalue Var 0x13e1284b8 'r' 'int'
    |   | `-BinaryOperator 0x13e140d88 <col:13, col:35> 'int' '&'
    |   |   |-CStyleCastExpr 0x13e140d40 <col:13, col:31> 'int' <IntegralCast>
    |   |   | `-ParenExpr 0x13e140d20 <col:18, col:31> 'unsigned long'
    |   |   |   `-BinaryOperator 0x13e140cc8 <col:19, col:30> 'unsigned long' '^'
    |   |   |     |-ParenExpr 0x13e140c70 <col:19, col:26> 'unsigned long'
    |   |   |     | `-BinaryOperator 0x13e140c50 <col:20, col:25> 'unsigned long' '>>'
    |   |   |     |   |-ImplicitCastExpr 0x13e140c38 <col:20> 'unsigned long' <LValueToRValue>
    |   |   |     |   | `-DeclRefExpr 0x13e140bf8 <col:20> 'unsigned long' lvalue Var 0x13e128420 'v' 'unsigned long'
    |   |   |     |   `-IntegerLiteral 0x13e140c18 <col:25> 'int' 2
    |   |   |     `-ImplicitCastExpr 0x13e140cb0 <col:30> 'unsigned long' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x13e140c90 <col:30> 'unsigned long' lvalue Var 0x13e128420 'v' 'unsigned long'
    |   |   `-IntegerLiteral 0x13e140d68 <col:35> 'int' 15
    |   |-CompoundAssignOperator 0x13e140f08 <line:18:9, col:16> 'unsigned long' '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   | |-DeclRefExpr 0x13e140eb0 <col:9> 'unsigned long' lvalue Var 0x13e1282b8 'ret' 'unsigned long'
    |   | `-ImplicitCastExpr 0x13e140ef0 <col:16> 'unsigned long' <IntegralCast>
    |   |   `-IntegerLiteral 0x13e140ed0 <col:16> 'long' 4294967295
    |   |-CompoundAssignOperator 0x13e140fe8 <line:19:9, col:20> 'unsigned long' '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   | |-DeclRefExpr 0x13e140f38 <col:9> 'unsigned long' lvalue Var 0x13e1282b8 'ret' 'unsigned long'
    |   | `-BinaryOperator 0x13e140fc8 <col:16, col:20> 'unsigned long' '*'
    |   |   |-ImplicitCastExpr 0x13e140f98 <col:16> 'unsigned long' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x13e140f58 <col:16> 'unsigned long' lvalue Var 0x13e128420 'v' 'unsigned long'
    |   |   `-ImplicitCastExpr 0x13e140fb0 <col:20> 'unsigned long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13e140f78 <col:20> 'unsigned long' lvalue Var 0x13e128420 'v' 'unsigned long'
    |   `-UnaryOperator 0x13e141038 <line:20:9, col:10> 'const char *' postfix '++'
    |     `-DeclRefExpr 0x13e141018 <col:9> 'const char *' lvalue ParmVar 0x13e1280d8 'c' 'const char *'
    `-ReturnStmt 0x13e1411a0 <line:22:5, col:26>
      `-BinaryOperator 0x13e141180 <col:12, col:26> 'unsigned long' '^'
        |-ParenExpr 0x13e141128 <col:12, col:22> 'unsigned long'
        | `-BinaryOperator 0x13e141108 <col:13, col:20> 'unsigned long' '>>'
        |   |-ImplicitCastExpr 0x13e1410f0 <col:13> 'unsigned long' <LValueToRValue>
        |   | `-DeclRefExpr 0x13e1410b0 <col:13> 'unsigned long' lvalue Var 0x13e1282b8 'ret' 'unsigned long'
        |   `-IntegerLiteral 0x13e1410d0 <col:20> 'int' 16
        `-ImplicitCastExpr 0x13e141168 <col:26> 'unsigned long' <LValueToRValue>
          `-DeclRefExpr 0x13e141148 <col:26> 'unsigned long' lvalue Var 0x13e1282b8 'ret' 'unsigned long'
