TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12a926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a926000 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12a926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12a926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12a926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12a9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12a926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12a926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12a9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12a927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12a927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12a928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-FunctionDecl 0x12a940a88 <dataset_diviso_filec/func13815_vuln.c:1:1, line:40:1> line:1:14 ask_new_field 'char *(struct chfn_control *, const char *, char *)' static
| |-ParmVarDecl 0x12a928648 <col:28, col:49> col:49 used ctl 'struct chfn_control *'
| |-ParmVarDecl 0x12a9286c8 <col:54, col:66> col:66 used question 'const char *'
| |-ParmVarDecl 0x12a928748 <line:2:7, col:13> col:13 used def_val 'char *'
| `-CompoundStmt 0x12b00bb20 <line:3:1, line:40:1>
|   |-DeclStmt 0x12a940c10 <line:4:2, col:9>
|   | `-VarDecl 0x12a940ba8 <col:2, col:6> col:6 used len 'int'
|   |-DeclStmt 0x12a940ca8 <line:5:2, col:11>
|   | `-VarDecl 0x12a940c40 <col:2, col:8> col:8 used buf 'char *'
|   |-RecoveryExpr 0x12a940db8 <line:7:2, col:17> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x12a940d98 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x12a940d78 <col:9> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x12a940d10 <col:17> 'int' 0
|   |-IfStmt 0x12a940ef0 <line:10:2, line:11:13>
|   | |-UnaryOperator 0x12a940e20 <line:10:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12a940e08 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12a940de8 <col:7> 'char *' lvalue ParmVar 0x12a928748 'def_val' 'char *'
|   | `-BinaryOperator 0x12a940ed0 <line:11:3, col:13> 'char *' '='
|   |   |-DeclRefExpr 0x12a940e38 <col:3> 'char *' lvalue ParmVar 0x12a928748 'def_val' 'char *'
|   |   `-ImplicitCastExpr 0x12a940eb8 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x12a940ea0 <col:13> 'char[1]' lvalue ""
|   |-WhileStmt 0x12b00ba18 <line:12:2, line:37:2>
|   | |-RecoveryExpr 0x12a940f28 <line:12:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12b00b9c0 <col:15, line:37:2>
|   |   |-CallExpr 0x12a941268 <line:13:3, col:34> 'int'
|   |   | |-ImplicitCastExpr 0x12a941250 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12a941138 <col:3> 'int (const char *, ...)' Function 0x12a940f90 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x12a9412b8 <col:10> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x12a9412a0 <col:10> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x12a9411a0 <col:10> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x12a9412d0 <col:17> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12a9411c0 <col:17> 'const char *' lvalue ParmVar 0x12a9286c8 'question' 'const char *'
|   |   | `-ImplicitCastExpr 0x12a9412e8 <col:27> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12a9411e0 <col:27> 'char *' lvalue ParmVar 0x12a928748 'def_val' 'char *'
|   |   |-CallExpr 0x12a941490 <line:14:3, col:17> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12a941410 <col:3> 'int ()' Function 0x12a941358 '__fpurge' 'int ()'
|   |   | `-RecoveryExpr 0x12a941470 <col:12> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x12a941618 <line:19:3, col:14> 'int'
|   |   | |-ImplicitCastExpr 0x12a941600 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12a941598 <col:3> 'int ()' Function 0x12a9414e0 'putchar' 'int ()'
|   |   | `-CharacterLiteral 0x12a9415b8 <col:11> 'int' 32
|   |   |-IfStmt 0x12b009888 <line:20:3, line:22:31>
|   |   | |-BinaryOperator 0x12a9418f8 <line:20:7, col:38> 'int' contains-errors '<'
|   |   | | |-CallExpr 0x12a9418c0 <col:7, col:34> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x12a941720 <col:7> 'int ()' Function 0x12a941668 'getline' 'int ()'
|   |   | | | |-UnaryOperator 0x12a941790 <col:15, col:16> 'char **' prefix '&' cannot overflow
|   |   | | | | `-DeclRefExpr 0x12a941740 <col:16> 'char *' lvalue Var 0x12a940c40 'buf' 'char *'
|   |   | | | |-UnaryOperator 0x12a941888 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | | | `-RecoveryExpr 0x12a941868 <col:22> '<dependent type>' contains-errors lvalue
|   |   | | | `-RecoveryExpr 0x12a9418a0 <col:29> '<dependent type>' contains-errors lvalue
|   |   | | `-IntegerLiteral 0x12a941828 <col:38> 'int' 0
|   |   | `-CallExpr 0x12b009858 <line:22:4, col:31> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12b009600 <col:4> 'int ()' Function 0x12a941940 'errx' 'int ()'
|   |   |   |-RecoveryExpr 0x12b0097e0 <col:9> '<dependent type>' contains-errors lvalue
|   |   |   `-CallExpr 0x12b009818 <col:23, col:30> 'int'
|   |   |     |-ImplicitCastExpr 0x12b009800 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12b009718 <col:23> 'int ()' Function 0x12b009660 '_' 'int ()'
|   |   |     `-ImplicitCastExpr 0x12b009840 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12b009738 <col:25> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x12b009a70 <line:24:3, col:41> 'int'
|   |   | |-ImplicitCastExpr 0x12b009a58 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12b009988 <col:3> 'int ()' Function 0x12b0098d0 'ltrim_whitespace' 'int ()'
|   |   | `-CStyleCastExpr 0x12b009a30 <col:20, col:38> 'unsigned char *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x12b009a18 <col:38> 'char *' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x12b0099a8 <col:38> 'char *' lvalue Var 0x12a940c40 'buf' 'char *'
|   |   |-BinaryOperator 0x12b009c70 <line:25:3, col:47> 'int' '='
|   |   | |-DeclRefExpr 0x12b009a98 <col:3> 'int' lvalue Var 0x12a940ba8 'len' 'int'
|   |   | `-CallExpr 0x12b009c48 <col:9, col:47> 'int'
|   |   |   |-ImplicitCastExpr 0x12b009c30 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12b009b98 <col:9> 'int ()' Function 0x12b009ae0 'rtrim_whitespace' 'int ()'
|   |   |   `-CStyleCastExpr 0x12b009c08 <col:26, col:44> 'unsigned char *' <BitCast>
|   |   |     `-ImplicitCastExpr 0x12b009bf0 <col:44> 'char *' <LValueToRValue> part_of_explicit_cast
|   |   |       `-DeclRefExpr 0x12b009bb8 <col:44> 'char *' lvalue Var 0x12a940c40 'buf' 'char *'
|   |   |-IfStmt 0x12b00a170 <line:26:3, line:29:3>
|   |   | |-BinaryOperator 0x12b009ce8 <line:26:7, col:14> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x12b009cd0 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12b009c90 <col:7> 'int' lvalue Var 0x12a940ba8 'len' 'int'
|   |   | | `-IntegerLiteral 0x12b009cb0 <col:14> 'int' 0
|   |   | `-CompoundStmt 0x12b00a150 <col:17, line:29:3>
|   |   |   |-CallExpr 0x12b009f58 <line:27:4, col:12> 'void'
|   |   |   | |-ImplicitCastExpr 0x12b009f40 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12b009eb8 <col:4> 'void (void *)' Function 0x12b009d48 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x12b009f98 <col:9> 'void *' <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x12b009f80 <col:9> 'char *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12b009ed8 <col:9> 'char *' lvalue Var 0x12a940c40 'buf' 'char *'
|   |   |   `-ReturnStmt 0x12b00a140 <line:28:4, col:26>
|   |   |     `-ImplicitCastExpr 0x12b00a128 <col:11, col:26> 'char *' <IntegralToPointer>
|   |   |       `-CallExpr 0x12b00a0e8 <col:11, col:26> 'int'
|   |   |         |-ImplicitCastExpr 0x12b00a0d0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   |         | `-DeclRefExpr 0x12b00a090 <col:11> 'int ()' Function 0x12b009fd8 'xstrdup' 'int ()'
|   |   |         `-ImplicitCastExpr 0x12b00a110 <col:19> 'char *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x12b00a0b0 <col:19> 'char *' lvalue ParmVar 0x12a928748 'def_val' 'char *'
|   |   |-IfStmt 0x12b00b780 <line:30:3, line:34:3>
|   |   | |-UnaryOperator 0x12b00a518 <line:30:7, col:29> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x12b00a488 <col:8, col:29> 'int'
|   |   | |   |-ImplicitCastExpr 0x12b00a470 <col:8> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x12b00a3b0 <col:8> 'int (const char *, const char *)' Function 0x12b00a1d0 'strcasecmp' 'int (const char *, const char *)'
|   |   | |   |-ImplicitCastExpr 0x12b00a4d0 <col:19> 'const char *' <NoOp>
|   |   | |   | `-ImplicitCastExpr 0x12b00a4b8 <col:19> 'char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x12b00a3d0 <col:19> 'char *' lvalue Var 0x12a940c40 'buf' 'char *'
|   |   | |   `-ImplicitCastExpr 0x12b00a500 <col:24> 'const char *' <NoOp>
|   |   | |     `-ImplicitCastExpr 0x12b00a4e8 <col:24> 'char *' <ArrayToPointerDecay>
|   |   | |       `-StringLiteral 0x12b00a3f0 <col:24> 'char[4]' lvalue "STR"
|   |   | `-CompoundStmt 0x12b00b758 <col:32, line:34:3>
|   |   |   |-CallExpr 0x12b00a5a0 <line:31:4, col:12> 'void'
|   |   |   | |-ImplicitCastExpr 0x12b00a588 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12b00a530 <col:4> 'void (void *)' Function 0x12b009d48 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x12b00a5e0 <col:9> 'void *' <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x12b00a5c8 <col:9> 'char *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12b00a550 <col:9> 'char *' lvalue Var 0x12a940c40 'buf' 'char *'
|   |   |   |-BinaryOperator 0x12b00b680 <line:32:4, col:19> '<dependent type>' contains-errors '='
|   |   |   | |-RecoveryExpr 0x12b00b638 <col:4, col:9> '<dependent type>' contains-errors lvalue
|   |   |   | | `-DeclRefExpr 0x12b00b600 <col:4> 'struct chfn_control *' lvalue ParmVar 0x12a928648 'ctl' 'struct chfn_control *'
|   |   |   | `-IntegerLiteral 0x12b00b660 <col:19> 'int' 1
|   |   |   `-ReturnStmt 0x12b00b748 <line:33:4, col:21>
|   |   |     `-ImplicitCastExpr 0x12b00b730 <col:11, col:21> 'char *' <IntegralToPointer>
|   |   |       `-CallExpr 0x12b00b6f0 <col:11, col:21> 'int'
|   |   |         |-ImplicitCastExpr 0x12b00b6d8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   |         | `-DeclRefExpr 0x12b00b6a0 <col:11> 'int ()' Function 0x12b009fd8 'xstrdup' 'int ()'
|   |   |         `-ImplicitCastExpr 0x12b00b718 <col:19> 'char *' <ArrayToPointerDecay>
|   |   |           `-StringLiteral 0x12b00b6c0 <col:19> 'char[1]' lvalue ""
|   |   `-IfStmt 0x12b00b9a0 <line:35:3, line:36:4>
|   |     |-BinaryOperator 0x12b00b978 <line:35:7, col:44> 'int' '>='
|   |     | |-CallExpr 0x12b00b8f8 <col:7, col:39> 'int'
|   |     | | |-ImplicitCastExpr 0x12b00b8e0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x12b00b880 <col:7> 'int ()' Function 0x12b00b7c8 'check_gecos_string' 'int ()'
|   |     | | |-ImplicitCastExpr 0x12b00b928 <col:26> 'const char *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x12b00b8a0 <col:26> 'const char *' lvalue ParmVar 0x12a9286c8 'question' 'const char *'
|   |     | | `-ImplicitCastExpr 0x12b00b940 <col:36> 'char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x12b00b8c0 <col:36> 'char *' lvalue Var 0x12a940c40 'buf' 'char *'
|   |     | `-IntegerLiteral 0x12b00b958 <col:44> 'int' 0
|   |     `-BreakStmt 0x12b00b998 <line:36:4>
|   |-BinaryOperator 0x12b00bab8 <line:38:2, col:17> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12b00ba70 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12b00ba38 <col:2> 'struct chfn_control *' lvalue ParmVar 0x12a928648 'ctl' 'struct chfn_control *'
|   | `-IntegerLiteral 0x12b00ba98 <col:17> 'int' 1
|   `-ReturnStmt 0x12b00bb10 <line:39:2, col:9>
|     `-ImplicitCastExpr 0x12b00baf8 <col:9> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x12b00bad8 <col:9> 'char *' lvalue Var 0x12a940c40 'buf' 'char *'
|-FunctionDecl 0x12a940f90 <line:13:3> col:3 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x12a941090 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x12a941038 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x12a941100 <col:3> Implicit printf 1 2
|-FunctionDecl 0x12b009d48 <line:27:4> col:4 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x12b009e48 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x12b009df0 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x12b00a1d0 <line:30:8> col:8 implicit used strcasecmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x12b00a2d0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12b00a338 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12b00a278 <<invalid sloc>> Implicit 957
