TranslationUnitDecl 0x157854e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x157855cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1578553d0 '__int128'
|-TypedefDecl 0x157855d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1578553f0 'unsigned __int128'
|-TypedefDecl 0x14780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14780bc00 'struct __NSConstantString_tag'
|   `-Record 0x157855d80 '__NSConstantString_tag'
|-TypedefDecl 0x14780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157855590 '__SVInt8_t'
|-TypedefDecl 0x14780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1578555b0 '__SVInt16_t'
|-TypedefDecl 0x14780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1578555d0 '__SVInt32_t'
|-TypedefDecl 0x14780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1578555f0 '__SVInt64_t'
|-TypedefDecl 0x14780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157855610 '__SVUint8_t'
|-TypedefDecl 0x14780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157855630 '__SVUint16_t'
|-TypedefDecl 0x14780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157855650 '__SVUint32_t'
|-TypedefDecl 0x14780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157855670 '__SVUint64_t'
|-TypedefDecl 0x14780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157855690 '__SVFloat16_t'
|-TypedefDecl 0x14780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1578556b0 '__SVFloat32_t'
|-TypedefDecl 0x14780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1578556d0 '__SVFloat64_t'
|-TypedefDecl 0x14780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1578556f0 '__SVBfloat16_t'
|-TypedefDecl 0x14780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157855710 '__clang_svint8x2_t'
|-TypedefDecl 0x14780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157855730 '__clang_svint16x2_t'
|-TypedefDecl 0x14780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157855750 '__clang_svint32x2_t'
|-TypedefDecl 0x14780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157855770 '__clang_svint64x2_t'
|-TypedefDecl 0x14780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157855790 '__clang_svuint8x2_t'
|-TypedefDecl 0x14780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1578557b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1578557d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1578557f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157855810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157855830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157855850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157855870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157855890 '__clang_svint8x3_t'
|-TypedefDecl 0x14780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1578558b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1578558d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1578558f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157855910 '__clang_svuint8x3_t'
|-TypedefDecl 0x14780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157855930 '__clang_svuint16x3_t'
|-TypedefDecl 0x14780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157855950 '__clang_svuint32x3_t'
|-TypedefDecl 0x14780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157855970 '__clang_svuint64x3_t'
|-TypedefDecl 0x14780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157855990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1578559b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1578559d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1578559f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157855a10 '__clang_svint8x4_t'
|-TypedefDecl 0x14780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157855a30 '__clang_svint16x4_t'
|-TypedefDecl 0x14780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157855a50 '__clang_svint32x4_t'
|-TypedefDecl 0x14780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157855a70 '__clang_svint64x4_t'
|-TypedefDecl 0x14780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157855a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x157855ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x157855ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x157855af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157855b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157855b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157855b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157855b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157855b90 '__SVBool_t'
|-TypedefDecl 0x14780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x157855bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x14780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x157855bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x157855bf0 '__SVCount_t'
|-TypedefDecl 0x14780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14780dbb0 'char *'
|   `-BuiltinType 0x157854eb0 'char'
|-TypedefDecl 0x14780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14780dbb0 'char *'
|   `-BuiltinType 0x157854eb0 'char'
`-FunctionDecl 0x14780e068 <dataset_diviso_filec/func20548_vuln.c:1:1, line:74:1> line:1:5 invalid gnutls_x509_ext_import_proxy 'int (const int *, int *, char **, char **, int *)'
  |-ParmVarDecl 0x14780dcf0 <col:34, col:57> col:57 invalid ext 'const int *'
  |-ParmVarDecl 0x14780dda8 <col:62, col:67> col:67 used pathlen 'int *'
  |-ParmVarDecl 0x14780de58 <line:2:10, col:17> col:17 used policyLanguage 'char **'
  |-ParmVarDecl 0x14780ded8 <col:33, col:40> col:40 used policy 'char **'
  |-ParmVarDecl 0x14780df58 <line:3:10, col:19> col:19 invalid sizeof_policy 'int *'
  `-CompoundStmt 0x15800afa0 <line:4:1, line:74:1>
    |-DeclStmt 0x14780e1b8 <line:6:2, col:12>
    | `-VarDecl 0x14780e150 <col:2, col:6> col:6 used result 'int'
    |-IfStmt 0x157923188 <line:9:2, line:14:2>
    | |-RecoveryExpr 0x157922e88 <line:9:6, line:11:17> '_Bool' contains-errors
    | `-CompoundStmt 0x157923168 <col:31, line:14:2>
    |   |-CallExpr 0x157922fc0 <line:12:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x157922fa8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x157922f88 <col:3> 'int ()' Function 0x157922ed0 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x157923158 <line:13:3, col:32>
    |     `-CallExpr 0x157923118 <col:10, col:32> 'int'
    |       |-ImplicitCastExpr 0x157923100 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1579230c0 <col:10> 'int ()' Function 0x157923008 '_gnutls_asn2err' 'int ()'
    |       `-ImplicitCastExpr 0x157923140 <col:26> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x1579230e0 <col:26> 'int' lvalue Var 0x14780e150 'result' 'int'
    |-BinaryOperator 0x1579234d8 <line:16:2, col:66> 'int' contains-errors '='
    | |-DeclRefExpr 0x1579231a8 <col:2> 'int' lvalue Var 0x14780e150 'result' 'int'
    | `-CallExpr 0x157923498 <col:11, col:66> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1579232a8 <col:11> 'int ()' Function 0x1579231f0 '_asn1_strict_der_decode' 'int ()'
    |   |-UnaryOperator 0x157923460 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x157923440 <col:36> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x157923318 <col:40, col:45> '<dependent type>' contains-errors lvalue ->data
    |   | `-RecoveryExpr 0x1579232f8 <col:40> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x157923380 <col:51, col:56> '<dependent type>' contains-errors lvalue ->size
    |   | `-RecoveryExpr 0x157923360 <col:51> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x157923478 <col:62> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x157923750 <line:17:2, line:21:2>
    | |-BinaryOperator 0x157923570 <line:17:6, col:16> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x1579234f8 <col:6> 'int' lvalue Var 0x14780e150 'result' 'int'
    | | `-RecoveryExpr 0x157923550 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x157923728 <col:30, line:21:2>
    |   |-CallExpr 0x1579235c8 <line:18:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x1579235b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x157923590 <col:3> 'int ()' Function 0x157922ed0 'gnutls_assert' 'int ()'
    |   |-BinaryOperator 0x1579236a0 <line:19:3, col:34> 'int' '='
    |   | |-DeclRefExpr 0x1579235e8 <col:3> 'int' lvalue Var 0x14780e150 'result' 'int'
    |   | `-CallExpr 0x157923660 <col:12, col:34> 'int'
    |   |   |-ImplicitCastExpr 0x157923648 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x157923608 <col:12> 'int ()' Function 0x157923008 '_gnutls_asn2err' 'int ()'
    |   |   `-ImplicitCastExpr 0x157923688 <col:28> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x157923628 <col:28> 'int' lvalue Var 0x14780e150 'result' 'int'
    |   `-GotoStmt 0x157923710 <line:20:3, col:8> 'cleanup' 0x1579236c0
    |-IfStmt 0x15800a498 <line:23:2, line:34:2>
    | |-ImplicitCastExpr 0x157923790 <line:23:6> 'int *' <LValueToRValue>
    | | `-DeclRefExpr 0x157923770 <col:6> 'int *' lvalue ParmVar 0x14780dda8 'pathlen' 'int *'
    | `-CompoundStmt 0x15800a478 <col:15, line:34:2>
    |   |-BinaryOperator 0x157923ab0 <line:24:3, line:26:14> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1579237a8 <line:24:3> 'int' lvalue Var 0x14780e150 'result' 'int'
    |   | `-CallExpr 0x157923a78 <col:12, line:26:14> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1579238a8 <line:24:12> 'int ()' Function 0x1579237f0 '_gnutls_x509_read_uint' 'int ()'
    |   |   |-RecoveryExpr 0x157923a00 <col:35> '<dependent type>' contains-errors lvalue
    |   |   |-StringLiteral 0x1579238e0 <col:39> 'char[4]' lvalue "STR"
    |   |   `-CStyleCastExpr 0x157923a50 <line:25:7, line:26:7> 'unsigned int *' <BitCast>
    |   |     `-ImplicitCastExpr 0x157923a38 <col:7> 'int *' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x157923900 <col:7> 'int *' lvalue ParmVar 0x14780dda8 'pathlen' 'int *'
    |   `-IfStmt 0x15800a448 <line:27:3, line:33:3> has_else
    |     |-BinaryOperator 0x157923b48 <line:27:7, col:17> 'int' contains-errors '=='
    |     | |-DeclRefExpr 0x157923ad0 <col:7> 'int' lvalue Var 0x14780e150 'result' 'int'
    |     | `-RecoveryExpr 0x157923b28 <col:17> '<dependent type>' contains-errors lvalue
    |     |-BinaryOperator 0x15800a200 <line:28:4, col:16> 'int' '='
    |     | |-UnaryOperator 0x157923ba0 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
    |     | | `-ImplicitCastExpr 0x157923b88 <col:5> 'int *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x157923b68 <col:5> 'int *' lvalue ParmVar 0x14780dda8 'pathlen' 'int *'
    |     | `-UnaryOperator 0x157923bd8 <col:15, col:16> 'int' prefix '-'
    |     |   `-IntegerLiteral 0x157923bb8 <col:16> 'int' 1
    |     `-IfStmt 0x15800a428 <line:29:8, line:33:3>
    |       |-BinaryOperator 0x15800a298 <line:29:12, col:22> 'int' contains-errors '!='
    |       | |-DeclRefExpr 0x15800a220 <col:12> 'int' lvalue Var 0x14780e150 'result' 'int'
    |       | `-RecoveryExpr 0x15800a278 <col:22> '<dependent type>' contains-errors lvalue
    |       `-CompoundStmt 0x15800a400 <col:40, line:33:3>
    |         |-CallExpr 0x15800a2f0 <line:30:4, col:18> 'int'
    |         | `-ImplicitCastExpr 0x15800a2d8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         |   `-DeclRefExpr 0x15800a2b8 <col:4> 'int ()' Function 0x157922ed0 'gnutls_assert' 'int ()'
    |         |-BinaryOperator 0x15800a3c8 <line:31:4, col:35> 'int' '='
    |         | |-DeclRefExpr 0x15800a310 <col:4> 'int' lvalue Var 0x14780e150 'result' 'int'
    |         | `-CallExpr 0x15800a388 <col:13, col:35> 'int'
    |         |   |-ImplicitCastExpr 0x15800a370 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |         |   | `-DeclRefExpr 0x15800a330 <col:13> 'int ()' Function 0x157923008 '_gnutls_asn2err' 'int ()'
    |         |   `-ImplicitCastExpr 0x15800a3b0 <col:29> 'int' <LValueToRValue>
    |         |     `-DeclRefExpr 0x15800a350 <col:29> 'int' lvalue Var 0x14780e150 'result' 'int'
    |         `-GotoStmt 0x15800a3e8 <line:32:4, col:9> 'cleanup' 0x1579236c0
    |-IfStmt 0x15800a700 <line:38:2, line:41:2>
    | |-BinaryOperator 0x15800a650 <line:38:6, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x15800a638 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15800a5f8 <col:6> 'int' lvalue Var 0x14780e150 'result' 'int'
    | | `-IntegerLiteral 0x15800a618 <col:15> 'int' 0
    | `-CompoundStmt 0x15800a6e0 <col:18, line:41:2>
    |   |-CallExpr 0x15800a6a8 <line:39:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x15800a690 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x15800a670 <col:3> 'int ()' Function 0x157922ed0 'gnutls_assert' 'int ()'
    |   `-GotoStmt 0x15800a6c8 <line:40:3, col:8> 'cleanup' 0x1579236c0
    |-IfStmt 0x15800a8c8 <line:43:2, line:48:2> has_else
    | |-ImplicitCastExpr 0x15800a740 <line:43:6> 'char **' <LValueToRValue>
    | | `-DeclRefExpr 0x15800a720 <col:6> 'char **' lvalue ParmVar 0x14780de58 'policyLanguage' 'char **'
    | |-CompoundStmt 0x15800a7a8 <col:22, line:45:2>
    | `-CompoundStmt 0x15800a8b8 <col:9, line:48:2>
    |-IfStmt 0x15800ad80 <line:51:2, line:66:2> has_else
    | |-RecoveryExpr 0x15800a978 <line:51:6, col:16> '_Bool' contains-errors
    | |-CompoundStmt 0x15800aaf0 <col:49, line:56:2>
    | | `-IfStmt 0x15800aad0 <line:54:3, line:55:21>
    | |   |-RecoveryExpr 0x15800aa20 <line:54:7> '<dependent type>' contains-errors lvalue
    | |   `-BinaryOperator 0x15800aab0 <line:55:4, col:21> '<dependent type>' contains-errors '='
    | |     |-UnaryOperator 0x15800aa78 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |     | `-ImplicitCastExpr 0x15800aa60 <col:5> '<dependent type>' contains-errors <LValueToRValue>
    | |     |   `-RecoveryExpr 0x15800aa40 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x15800aa90 <col:21> 'int' 0
    | `-IfStmt 0x15800ad50 <line:56:9, line:66:2> has_else
    |   |-BinaryOperator 0x15800ab60 <line:56:13, col:22> 'int' '<'
    |   | |-ImplicitCastExpr 0x15800ab48 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15800ab08 <col:13> 'int' lvalue Var 0x14780e150 'result' 'int'
    |   | `-IntegerLiteral 0x15800ab28 <col:22> 'int' 0
    |   |-CompoundStmt 0x15800abf0 <col:25, line:59:2>
    |   | |-CallExpr 0x15800abb8 <line:57:3, col:17> 'int'
    |   | | `-ImplicitCastExpr 0x15800aba0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | |   `-DeclRefExpr 0x15800ab80 <col:3> 'int ()' Function 0x157922ed0 'gnutls_assert' 'int ()'
    |   | `-GotoStmt 0x15800abd8 <line:58:3, col:8> 'cleanup' 0x1579236c0
    |   `-CompoundStmt 0x15800ad38 <line:59:9, line:66:2>
    |     `-IfStmt 0x15800aca8 <line:60:3, line:63:3>
    |       |-ImplicitCastExpr 0x15800ac30 <line:60:7> 'char **' <LValueToRValue>
    |       | `-DeclRefExpr 0x15800ac10 <col:7> 'char **' lvalue ParmVar 0x14780ded8 'policy' 'char **'
    |       `-CompoundStmt 0x15800ac98 <col:15, line:63:3>
    |-BinaryOperator 0x15800adf0 <line:68:2, col:11> 'int' '='
    | |-DeclRefExpr 0x15800adb0 <col:2> 'int' lvalue Var 0x14780e150 'result' 'int'
    | `-IntegerLiteral 0x15800add0 <col:11> 'int' 0
    |-LabelStmt 0x15800ae38 <line:69:2, col:9> 'cleanup'
    | `-NullStmt 0x15800ae30 <col:9>
    `-ReturnStmt 0x15800af90 <line:73:2, col:9>
      `-ImplicitCastExpr 0x15800af78 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15800af58 <col:9> 'int' lvalue Var 0x14780e150 'result' 'int'
