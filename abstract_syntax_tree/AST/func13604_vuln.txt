TranslationUnitDecl 0x136855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1368564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136855bd0 '__int128'
|-TypedefDecl 0x136856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136855bf0 'unsigned __int128'
|-TypedefDecl 0x136926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x136926000 'struct __NSConstantString_tag'
|   `-Record 0x136856580 '__NSConstantString_tag'
|-TypedefDecl 0x136926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136855d90 '__SVInt8_t'
|-TypedefDecl 0x136926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136855db0 '__SVInt16_t'
|-TypedefDecl 0x136926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136855dd0 '__SVInt32_t'
|-TypedefDecl 0x1369263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136855df0 '__SVInt64_t'
|-TypedefDecl 0x136926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136855e10 '__SVUint8_t'
|-TypedefDecl 0x1369264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136855e30 '__SVUint16_t'
|-TypedefDecl 0x136926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136855e50 '__SVUint32_t'
|-TypedefDecl 0x136926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136855e70 '__SVUint64_t'
|-TypedefDecl 0x1369265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136855e90 '__SVFloat16_t'
|-TypedefDecl 0x136926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1369266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136855ed0 '__SVFloat64_t'
|-TypedefDecl 0x136926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x136926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1369267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x136926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1369268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x136926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x136926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1369269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x136926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x136926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x136926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x136926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x136926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x136926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136856090 '__clang_svint8x3_t'
|-TypedefDecl 0x136926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1368560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x136926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1368560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x136926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1368560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x136926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x136926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x136926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x136926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x136926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x136927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1368561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x136927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1368561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1369278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1368561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x136927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1369279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136856230 '__clang_svint16x4_t'
|-TypedefDecl 0x136927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136856250 '__clang_svint32x4_t'
|-TypedefDecl 0x136927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136856270 '__clang_svint64x4_t'
|-TypedefDecl 0x136927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x136927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1368562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x136927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1368562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x136927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1368562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x136927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x136927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x136927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x136927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x136927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136856390 '__SVBool_t'
|-TypedefDecl 0x136927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1368563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x136927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1368563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x136927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1368563f0 '__SVCount_t'
|-TypedefDecl 0x136927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x136927fb0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-TypedefDecl 0x136928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x136927fb0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-FunctionDecl 0x136928258 <dataset_diviso_filec/func13604_vuln.c:1:1, line:53:1> line:1:1 invalid check_exec_for_suid 'int (char *, int)'
| |-ParmVarDecl 0x1369280d8 <line:2:5, col:11> col:11 used filename 'char *'
| |-ParmVarDecl 0x136928170 <line:3:5, col:14> col:14 invalid verbose 'int'
| `-CompoundStmt 0x136944750 <line:4:1, line:53:1>
|   |-DeclStmt 0x1369418a8 <line:5:5, col:25>
|   | |-RecordDecl 0x136928310 <col:5, col:12> col:12 struct stat
|   | `-VarDecl 0x136928408 <col:5, col:17> col:17 invalid stat_buf 'struct stat'
|   |-DeclStmt 0x136941b80 <line:6:5, col:42>
|   | `-VarDecl 0x1369418d8 <col:5, col:41> col:11 used quoted 'char *' cinit
|   |   `-ImplicitCastExpr 0x136941b68 <col:20, col:41> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x136941b28 <col:20, col:41> 'int'
|   |       |-ImplicitCastExpr 0x136941b10 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x136941aa0 <col:20> 'int ()' Function 0x1369419e8 'quote_string' 'int ()'
|   |       `-ImplicitCastExpr 0x136941b50 <col:33> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x136941ac0 <col:33> 'char *' lvalue ParmVar 0x1369280d8 'filename' 'char *'
|   |-IfStmt 0x136944688 <line:8:5, line:50:5> has_else
|   | |-UnaryOperator 0x136941d20 <line:8:8, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x136941cf0 <col:9, col:33> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x136941c78 <col:9> 'int ()' Function 0x136941bc0 'stat' 'int ()'
|   | |   |-DeclRefExpr 0x136941c98 <col:14> 'char *' lvalue ParmVar 0x1369280d8 'filename' 'char *'
|   | |   `-UnaryOperator 0x136941cd8 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     `-RecoveryExpr 0x136941cb8 <col:25> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x136944240 <col:36, line:43:5>
|   | | |-DeclStmt 0x136941db8 <line:9:2, col:21>
|   | | | `-VarDecl 0x136941d50 <col:2, col:8> col:8 used copy_filename 'char *'
|   | | |-DeclStmt 0x136941e50 <line:10:2, col:9>
|   | | | `-VarDecl 0x136941de8 <col:2, col:8> col:8 used s 'char *'
|   | | |-IfStmt 0x136942630 <line:12:2, line:18:2>
|   | | | |-BinaryOperator 0x136941ef0 <line:12:6, col:25> 'int' contains-errors '!='
|   | | | | |-CXXDependentScopeMemberExpr 0x136941e88 <col:6, col:15> '<dependent type>' contains-errors lvalue .st_uid
|   | | | | | `-RecoveryExpr 0x136941e68 <col:6> '<dependent type>' contains-errors lvalue
|   | | | | `-IntegerLiteral 0x136941ed0 <col:25> 'int' 0
|   | | | `-CompoundStmt 0x136942600 <col:29, line:18:2>
|   | | |   |-IfStmt 0x136942268 <line:13:6, line:14:28>
|   | | |   | |-RecoveryExpr 0x136941f10 <line:13:10> '<dependent type>' contains-errors lvalue
|   | | |   | `-CallExpr 0x136942220 <line:14:3, col:28> 'int'
|   | | |   |   |-ImplicitCastExpr 0x136942208 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   | `-DeclRefExpr 0x136942010 <col:3> 'int ()' Function 0x136941f58 'g_printf' 'int ()'
|   | | |   |   |-CallExpr 0x1369421a8 <col:12, col:19> 'int'
|   | | |   |   | |-ImplicitCastExpr 0x136942190 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   | | `-DeclRefExpr 0x136942110 <col:12> 'int ()' Function 0x136942058 '_' 'int ()'
|   | | |   |   | `-ImplicitCastExpr 0x1369421d0 <col:14> 'char *' <ArrayToPointerDecay>
|   | | |   |   |   `-StringLiteral 0x136942170 <col:14> 'char[4]' lvalue "STR"
|   | | |   |   `-ImplicitCastExpr 0x136942250 <col:22> 'char *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x1369421e8 <col:22> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |   |-CallExpr 0x1369423e0 <line:15:6, col:27> 'int'
|   | | |   | |-ImplicitCastExpr 0x1369423c8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x136942368 <col:6> 'int ()' Function 0x1369422b0 'g_debug' 'int ()'
|   | | |   | |-ImplicitCastExpr 0x136942410 <col:14> 'char *' <ArrayToPointerDecay>
|   | | |   | | `-StringLiteral 0x136942388 <col:14> 'char[4]' lvalue "STR"
|   | | |   | `-ImplicitCastExpr 0x136942428 <col:21> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x1369423a8 <col:21> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |   |-CallExpr 0x136942578 <line:16:6, col:19> 'int'
|   | | |   | |-ImplicitCastExpr 0x136942560 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x136942520 <col:6> 'int ()' Function 0x136942468 'amfree' 'int ()'
|   | | |   | `-ImplicitCastExpr 0x1369425a0 <col:13> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x136942540 <col:13> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |   `-ReturnStmt 0x1369425f0 <line:17:6, col:13>
|   | | |     `-RecoveryExpr 0x1369425d0 <col:13> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x1369434a0 <line:19:2, line:25:2>
|   | | | |-BinaryOperator 0x136942710 <line:19:6, col:25> '<dependent type>' contains-errors '&'
|   | | | | |-CXXDependentScopeMemberExpr 0x136942670 <col:6, col:15> '<dependent type>' contains-errors lvalue .st_mode
|   | | | | | `-RecoveryExpr 0x136942650 <col:6> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x1369426f0 <col:25> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x136943470 <col:34, line:25:2>
|   | | |   |-IfStmt 0x136943298 <line:20:6, line:21:28>
|   | | |   | |-RecoveryExpr 0x136942730 <line:20:10> '<dependent type>' contains-errors lvalue
|   | | |   | `-CallExpr 0x136943250 <line:21:3, col:28> 'int'
|   | | |   |   |-ImplicitCastExpr 0x136943238 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   | `-DeclRefExpr 0x136942750 <col:3> 'int ()' Function 0x136941f58 'g_printf' 'int ()'
|   | | |   |   |-CallExpr 0x1369427c8 <col:12, col:19> 'int'
|   | | |   |   | |-ImplicitCastExpr 0x1369427b0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   | | `-DeclRefExpr 0x136942770 <col:12> 'int ()' Function 0x136942058 '_' 'int ()'
|   | | |   |   | `-ImplicitCastExpr 0x136943200 <col:14> 'char *' <ArrayToPointerDecay>
|   | | |   |   |   `-StringLiteral 0x136942790 <col:14> 'char[4]' lvalue "STR"
|   | | |   |   `-ImplicitCastExpr 0x136943280 <col:22> 'char *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x136943218 <col:22> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |   |-CallExpr 0x136943330 <line:22:6, col:27> 'int'
|   | | |   | |-ImplicitCastExpr 0x136943318 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x1369432b8 <col:6> 'int ()' Function 0x1369422b0 'g_debug' 'int ()'
|   | | |   | |-ImplicitCastExpr 0x136943360 <col:14> 'char *' <ArrayToPointerDecay>
|   | | |   | | `-StringLiteral 0x1369432d8 <col:14> 'char[4]' lvalue "STR"
|   | | |   | `-ImplicitCastExpr 0x136943378 <col:21> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x1369432f8 <col:21> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |   |-CallExpr 0x1369433e8 <line:23:6, col:19> 'int'
|   | | |   | |-ImplicitCastExpr 0x1369433d0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x136943390 <col:6> 'int ()' Function 0x136942468 'amfree' 'int ()'
|   | | |   | `-ImplicitCastExpr 0x136943410 <col:13> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x1369433b0 <col:13> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |   `-ReturnStmt 0x136943460 <line:24:6, col:13>
|   | | |     `-RecoveryExpr 0x136943440 <col:13> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x1369438b0 <line:26:2, line:32:2>
|   | | | |-BinaryOperator 0x136943580 <line:26:6, col:25> '<dependent type>' contains-errors '&'
|   | | | | |-CXXDependentScopeMemberExpr 0x1369434e0 <col:6, col:15> '<dependent type>' contains-errors lvalue .st_mode
|   | | | | | `-RecoveryExpr 0x1369434c0 <col:6> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x136943560 <col:25> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x136943888 <col:34, line:32:2>
|   | | |   |-IfStmt 0x1369436f8 <line:27:6, line:28:28>
|   | | |   | |-RecoveryExpr 0x1369435a0 <line:27:10> '<dependent type>' contains-errors lvalue
|   | | |   | `-CallExpr 0x1369436b0 <line:28:3, col:28> 'int'
|   | | |   |   |-ImplicitCastExpr 0x136943698 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   | `-DeclRefExpr 0x1369435c0 <col:3> 'int ()' Function 0x136941f58 'g_printf' 'int ()'
|   | | |   |   |-CallExpr 0x136943638 <col:12, col:19> 'int'
|   | | |   |   | |-ImplicitCastExpr 0x136943620 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   | | `-DeclRefExpr 0x1369435e0 <col:12> 'int ()' Function 0x136942058 '_' 'int ()'
|   | | |   |   | `-ImplicitCastExpr 0x136943660 <col:14> 'char *' <ArrayToPointerDecay>
|   | | |   |   |   `-StringLiteral 0x136943600 <col:14> 'char[4]' lvalue "STR"
|   | | |   |   `-ImplicitCastExpr 0x1369436e0 <col:22> 'char *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x136943678 <col:22> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |   |-CallExpr 0x136943790 <line:29:6, col:27> 'int'
|   | | |   | |-ImplicitCastExpr 0x136943778 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x136943718 <col:6> 'int ()' Function 0x1369422b0 'g_debug' 'int ()'
|   | | |   | |-ImplicitCastExpr 0x1369437c0 <col:14> 'char *' <ArrayToPointerDecay>
|   | | |   | | `-StringLiteral 0x136943738 <col:14> 'char[4]' lvalue "STR"
|   | | |   | `-ImplicitCastExpr 0x1369437d8 <col:21> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x136943758 <col:21> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |   `-CallExpr 0x136943848 <line:30:6, col:19> 'int'
|   | | |     |-ImplicitCastExpr 0x136943830 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1369437f0 <col:6> 'int ()' Function 0x136942468 'amfree' 'int ()'
|   | | |     `-ImplicitCastExpr 0x136943870 <col:13> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x136943810 <col:13> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |-BinaryOperator 0x136943a80 <line:33:2, col:35> 'char *' '='
|   | | | |-DeclRefExpr 0x1369438d0 <col:2> 'char *' lvalue Var 0x136941d50 'copy_filename' 'char *'
|   | | | `-ImplicitCastExpr 0x136943a68 <col:18, col:35> 'char *' <IntegralToPointer>
|   | | |   `-CallExpr 0x136943a28 <col:18, col:35> 'int'
|   | | |     |-ImplicitCastExpr 0x136943a10 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1369439d0 <col:18> 'int ()' Function 0x136943918 'g_strdup' 'int ()'
|   | | |     `-ImplicitCastExpr 0x136943a50 <col:27> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1369439f0 <col:27> 'char *' lvalue ParmVar 0x1369280d8 'filename' 'char *'
|   | | |-IfStmt 0x136944180 <line:34:2, line:41:2>
|   | | | |-ParenExpr 0x136943e18 <line:34:6, col:37> 'char *'
|   | | | | `-BinaryOperator 0x136943df8 <col:7, col:36> 'char *' '='
|   | | | |   |-DeclRefExpr 0x136943aa0 <col:7> 'char *' lvalue Var 0x136941de8 's' 'char *'
|   | | | |   `-CallExpr 0x136943d98 <col:11, col:36> 'char *'
|   | | | |     |-ImplicitCastExpr 0x136943d80 <col:11> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | | |     | `-DeclRefExpr 0x136943ce0 <col:11> 'char *(const char *, int)' Function 0x136943b00 'strchr' 'char *(const char *, int)'
|   | | | |     |-ImplicitCastExpr 0x136943de0 <col:18> 'const char *' <NoOp>
|   | | | |     | `-ImplicitCastExpr 0x136943dc8 <col:18> 'char *' <LValueToRValue>
|   | | | |     |   `-DeclRefExpr 0x136943d00 <col:18> 'char *' lvalue Var 0x136941d50 'copy_filename' 'char *'
|   | | | |     `-CharacterLiteral 0x136943d20 <col:33> 'int' 47
|   | | | `-CompoundStmt 0x136944160 <col:40, line:41:2>
|   | | |   |-BinaryOperator 0x136943eb8 <line:35:6, col:11> 'char' '='
|   | | |   | |-UnaryOperator 0x136943e70 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | |   | | `-ImplicitCastExpr 0x136943e58 <col:7> 'char *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x136943e38 <col:7> 'char *' lvalue Var 0x136941de8 's' 'char *'
|   | | |   | `-ImplicitCastExpr 0x136943ea0 <col:11> 'char' <IntegralCast>
|   | | |   |   `-CharacterLiteral 0x136943e88 <col:11> 'int' 0
|   | | |   `-IfStmt 0x136944140 <line:36:6, line:40:6>
|   | | |     |-BinaryOperator 0x136943fd0 <line:36:10, col:71> 'int' contains-errors '&&'
|   | | |     | |-UnaryOperator 0x136943f10 <col:10, col:11> 'char' lvalue prefix '*' cannot overflow
|   | | |     | | `-ImplicitCastExpr 0x136943ef8 <col:11> 'char *' <LValueToRValue>
|   | | |     | |   `-DeclRefExpr 0x136943ed8 <col:11> 'char *' lvalue Var 0x136941d50 'copy_filename' 'char *'
|   | | |     | `-UnaryOperator 0x136943fb8 <col:28, col:71> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | |     |   `-CallExpr 0x136943f88 <col:29, col:71> '<dependent type>' contains-errors
|   | | |     |     |-RecoveryExpr 0x136943f28 <col:29> '<dependent type>' contains-errors lvalue
|   | | |     |     |-DeclRefExpr 0x136943f48 <col:49> 'char *' lvalue Var 0x136941d50 'copy_filename' 'char *'
|   | | |     |     `-RecoveryExpr 0x136943f68 <col:64> '<dependent type>' contains-errors lvalue
|   | | |     `-CompoundStmt 0x136944120 <col:74, line:40:6>
|   | | |       |-CallExpr 0x136944048 <line:37:3, col:16> 'int'
|   | | |       | |-ImplicitCastExpr 0x136944030 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | | `-DeclRefExpr 0x136943ff0 <col:3> 'int ()' Function 0x136942468 'amfree' 'int ()'
|   | | |       | `-ImplicitCastExpr 0x136944070 <col:10> 'char *' <LValueToRValue>
|   | | |       |   `-DeclRefExpr 0x136944010 <col:10> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   | | |       `-CallExpr 0x1369440e0 <line:38:3, col:23> 'int'
|   | | |         |-ImplicitCastExpr 0x1369440c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | |         | `-DeclRefExpr 0x136944088 <col:3> 'int ()' Function 0x136942468 'amfree' 'int ()'
|   | | |         `-ImplicitCastExpr 0x136944108 <col:10> 'char *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x1369440a8 <col:10> 'char *' lvalue Var 0x136941d50 'copy_filename' 'char *'
|   | | `-CallExpr 0x136944200 <line:42:2, col:22> 'int'
|   | |   |-ImplicitCastExpr 0x1369441e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1369441a0 <col:2> 'int ()' Function 0x136942468 'amfree' 'int ()'
|   | |   `-ImplicitCastExpr 0x136944228 <col:9> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1369441c0 <col:9> 'char *' lvalue Var 0x136941d50 'copy_filename' 'char *'
|   | `-CompoundStmt 0x136944670 <line:44:10, line:50:5>
|   |   `-CallExpr 0x136944630 <line:48:2, col:15> 'int'
|   |     |-ImplicitCastExpr 0x136944618 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1369445d8 <col:2> 'int ()' Function 0x136942468 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x136944658 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1369445f8 <col:9> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|   `-CallExpr 0x136944710 <line:51:5, col:18> 'int'
|     |-ImplicitCastExpr 0x1369446f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1369446b8 <col:5> 'int ()' Function 0x136942468 'amfree' 'int ()'
|     `-ImplicitCastExpr 0x136944738 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1369446d8 <col:12> 'char *' lvalue Var 0x1369418d8 'quoted' 'char *'
|-FunctionDecl 0x136943b00 <line:34:11> col:11 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x136943c00 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x136943c68 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x136943ba8 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x1369443c8 <line:46:33> col:33 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x1369444c8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x136944470 <<invalid sloc>> Implicit 901
