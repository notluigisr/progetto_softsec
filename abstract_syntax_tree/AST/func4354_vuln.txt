TranslationUnitDecl 0x127055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1270564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127055bd0 '__int128'
|-TypedefDecl 0x127056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127055bf0 'unsigned __int128'
|-TypedefDecl 0x12780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12780bc00 'struct __NSConstantString_tag'
|   `-Record 0x127056580 '__NSConstantString_tag'
|-TypedefDecl 0x12780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055d90 '__SVInt8_t'
|-TypedefDecl 0x12780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127055db0 '__SVInt16_t'
|-TypedefDecl 0x12780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127055dd0 '__SVInt32_t'
|-TypedefDecl 0x12780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127055df0 '__SVInt64_t'
|-TypedefDecl 0x12780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055e10 '__SVUint8_t'
|-TypedefDecl 0x12780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055e30 '__SVUint16_t'
|-TypedefDecl 0x12780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055e50 '__SVUint32_t'
|-TypedefDecl 0x12780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055e70 '__SVUint64_t'
|-TypedefDecl 0x12780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055e90 '__SVFloat16_t'
|-TypedefDecl 0x12780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1270560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1270560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1270560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1270561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1270561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1270561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1270562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1270562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1270562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127056390 '__SVBool_t'
|-TypedefDecl 0x12780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1270563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1270563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1270563f0 '__SVCount_t'
|-TypedefDecl 0x12780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-TypedefDecl 0x12780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-FunctionDecl 0x12780ddf8 <dataset_diviso_filec/func4354_vuln.c:1:1, line:71:1> line:1:1 invalid parse_attribute_subpkts 'int (int *)'
| |-ParmVarDecl 0x12780dd28 <col:26, col:40> col:40 referenced invalid uid 'int *'
| `-CompoundStmt 0x127829cb0 <line:2:1, line:71:1>
|   |-UnaryExprOrTypeTraitExpr 0x12780df00 <line:3:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x12780dee0 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12780dfc0 <line:4:3, col:16>
|   | `-VarDecl 0x12780df38 <col:3, col:15> col:7 used count 'int' cinit
|   |   `-IntegerLiteral 0x12780dfa0 <col:15> 'int' 0
|   |-DeclStmt 0x12780e200 <line:5:3, col:40>
|   | |-RecordDecl 0x12780dfd8 <col:3, col:10> col:10 struct user_attribute
|   | `-VarDecl 0x12780e148 <col:3, col:36> col:26 used attribs 'struct user_attribute *' cinit
|   |   `-RecoveryExpr 0x12780e1c8 <col:36> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12780e300 <line:6:3, col:40>
|   | `-VarDecl 0x12780e230 <col:3, col:15> col:15 referenced invalid buffer 'const int *'
|   |-DeclStmt 0x127827400 <line:7:3, col:31>
|   | `-VarDecl 0x12780e330 <col:3, col:21> col:7 used buflen 'int' cinit
|   |   `-CXXDependentScopeMemberExpr 0x12780e3b8 <col:16, col:21> '<dependent type>' contains-errors lvalue ->attrib_len
|   |     `-RecoveryExpr 0x12780e398 <col:16> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1278275f8 <line:10:3, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x127827570 <col:3> 'int ()' Function 0x1278274b8 'xfree' 'int ()'
|   | `-CXXDependentScopeMemberExpr 0x1278275b0 <col:10, col:15> '<dependent type>' contains-errors lvalue ->attribs
|   |   `-RecoveryExpr 0x127827590 <col:10> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x1278297c8 <line:12:3, line:59:5>
|   | |-ImplicitCastExpr 0x127827640 <line:12:10> 'int' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x127827620 <col:10> 'int' contains-errors lvalue Var 0x12780e330 'buflen' 'int'
|   | `-CompoundStmt 0x127829780 <line:13:5, line:59:5>
|   |   |-UnaryOperator 0x1278276c8 <line:15:7, col:13> 'int' contains-errors postfix '--'
|   |   | `-DeclRefExpr 0x1278276a8 <col:7> 'int' contains-errors lvalue Var 0x12780e330 'buflen' 'int'
|   |   |-IfStmt 0x127828018 <line:16:7, line:32:2> has_else
|   |   | |-BinaryOperator 0x127827758 <line:16:11, col:16> 'int' contains-errors '=='
|   |   | | |-RecoveryExpr 0x127827738 <col:11> '<dependent type>' contains-errors lvalue
|   |   | | `-IntegerLiteral 0x1278276f8 <col:16> 'int' 255
|   |   | |-CompoundStmt 0x127827ce0 <line:17:2, line:24:2>
|   |   | | |-IfStmt 0x127827858 <line:18:4, line:19:11>
|   |   | | | |-BinaryOperator 0x1278277d0 <line:18:8, col:17> 'int' contains-errors '<'
|   |   | | | | |-ImplicitCastExpr 0x1278277b8 <col:8> 'int' contains-errors <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x127827778 <col:8> 'int' contains-errors lvalue Var 0x12780e330 'buflen' 'int'
|   |   | | | | `-IntegerLiteral 0x127827798 <col:17> 'int' 4
|   |   | | | `-GotoStmt 0x127827840 <line:19:6, col:11> 'too_short' 0x1278277f0
|   |   | | |-CompoundAssignOperator 0x127827c40 <line:22:4, col:14> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | | | |-RecoveryExpr 0x127827bf8 <col:4> '<dependent type>' contains-errors lvalue
|   |   | | | | `-DeclRefExpr 0x127827bd8 <col:4> 'const int *' lvalue Var 0x12780e230 'buffer' 'const int *'
|   |   | | | `-IntegerLiteral 0x127827c20 <col:14> 'int' 4
|   |   | | `-CompoundAssignOperator 0x127827cb0 <line:23:4, col:14> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   |-DeclRefExpr 0x127827c70 <col:4> 'int' contains-errors lvalue Var 0x12780e330 'buflen' 'int'
|   |   | |   `-IntegerLiteral 0x127827c90 <col:14> 'int' 4
|   |   | `-IfStmt 0x127827ff8 <line:25:12, line:32:2>
|   |   |   |-BinaryOperator 0x127827d80 <line:25:16, col:21> 'int' contains-errors '>='
|   |   |   | |-RecoveryExpr 0x127827d60 <col:16> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x127827d20 <col:21> 'int' 192
|   |   |   `-CompoundStmt 0x127827fd0 <line:26:2, line:32:2>
|   |   |     |-IfStmt 0x127827e30 <line:27:4, line:28:11>
|   |   |     | |-BinaryOperator 0x127827df8 <line:27:8, col:17> 'int' contains-errors '<'
|   |   |     | | |-ImplicitCastExpr 0x127827de0 <col:8> 'int' contains-errors <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x127827da0 <col:8> 'int' contains-errors lvalue Var 0x12780e330 'buflen' 'int'
|   |   |     | | `-IntegerLiteral 0x127827dc0 <col:17> 'int' 2
|   |   |     | `-GotoStmt 0x127827e18 <line:28:6, col:11> 'too_short' 0x1278277f0
|   |   |     |-UnaryOperator 0x127827f80 <line:30:4, col:10> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   |     | `-RecoveryExpr 0x127827f58 <col:4> '<dependent type>' contains-errors lvalue
|   |   |     |   `-DeclRefExpr 0x127827f38 <col:4> 'const int *' lvalue Var 0x12780e230 'buffer' 'const int *'
|   |   |     `-UnaryOperator 0x127827fb8 <line:31:4, col:10> 'int' contains-errors postfix '--'
|   |   |       `-DeclRefExpr 0x127827f98 <col:4> 'int' contains-errors lvalue Var 0x12780e330 'buflen' 'int'
|   |   |-IfStmt 0x1278280f8 <line:33:7, line:34:7>
|   |   | |-BinaryOperator 0x1278280c0 <line:33:11, col:20> 'int' contains-errors '<'
|   |   | | |-DeclRefExpr 0x127828048 <col:11> 'int' contains-errors lvalue Var 0x12780e330 'buflen' 'int'
|   |   | | `-RecoveryExpr 0x1278280a0 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-GotoStmt 0x1278280e0 <line:34:2, col:7> 'too_short' 0x1278277f0
|   |   |-IfStmt 0x127828ed0 <line:36:7, line:42:9>
|   |   | |-UnaryOperator 0x127828198 <line:36:11, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x127828180 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x127828160 <col:12> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x127828eb0 <line:37:9, line:42:9>
|   |   |   |-IfStmt 0x127828e88 <line:39:11, line:40:28>
|   |   |   | |-CXXDependentScopeMemberExpr 0x127828230 <line:39:15, col:19> '<dependent type>' contains-errors lvalue .verbose
|   |   |   | | `-RecoveryExpr 0x127828210 <col:15> '<dependent type>' contains-errors lvalue
|   |   |   | `-CallExpr 0x127828e48 <line:40:13, col:28> 'int'
|   |   |   |   |-ImplicitCastExpr 0x127828e30 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x127828358 <col:13> 'int ()' Function 0x1278282a0 'log_info' 'int ()'
|   |   |   |   `-ImplicitCastExpr 0x127828e70 <col:23> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1278283c0 <col:23> 'char[4]' lvalue "STR"
|   |   |   `-BreakStmt 0x127828ea8 <line:41:11>
|   |   |-UnaryOperator 0x127829520 <line:49:7, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   | `-RecoveryExpr 0x1278294f8 <col:7> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x1278294d8 <col:7> 'const int *' lvalue Var 0x12780e230 'buffer' 'const int *'
|   |   |-UnaryOperator 0x127829558 <line:50:7, col:13> 'int' contains-errors postfix '--'
|   |   | `-DeclRefExpr 0x127829538 <col:7> 'int' contains-errors lvalue Var 0x12780e330 'buflen' 'int'
|   |   `-UnaryOperator 0x127829768 <line:58:7, col:12> 'int' postfix '++'
|   |     `-DeclRefExpr 0x127829748 <col:7> 'int' lvalue Var 0x12780df38 'count' 'int'
|   |-BinaryOperator 0x127829898 <line:61:3, col:18> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127829830 <col:3, col:8> '<dependent type>' contains-errors lvalue ->attribs
|   | | `-RecoveryExpr 0x127829808 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1278297e8 <col:3> 'int *' lvalue ParmVar 0x12780dd28 'uid' 'int *'
|   | `-DeclRefExpr 0x127829878 <col:18> 'struct user_attribute *' contains-errors lvalue Var 0x12780e148 'attribs' 'struct user_attribute *'
|   |-BinaryOperator 0x127829968 <line:62:3, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127829900 <col:3, col:8> '<dependent type>' contains-errors lvalue ->numattribs
|   | | `-RecoveryExpr 0x1278298d8 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1278298b8 <col:3> 'int *' lvalue ParmVar 0x12780dd28 'uid' 'int *'
|   | `-DeclRefExpr 0x127829948 <col:21> 'int' lvalue Var 0x12780df38 'count' 'int'
|   |-ReturnStmt 0x1278299c0 <line:63:3, col:10>
|   | `-ImplicitCastExpr 0x1278299a8 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x127829988 <col:10> 'int' lvalue Var 0x12780df38 'count' 'int'
|   |-LabelStmt 0x127829aa8 <line:65:2, line:67:20> 'too_short'
|   | `-IfStmt 0x127829a88 <line:66:3, line:67:20>
|   |   |-RecoveryExpr 0x1278299d0 <line:66:7, col:11> '_Bool' contains-errors
|   |   `-CallExpr 0x127829a48 <line:67:5, col:20> 'int'
|   |     |-ImplicitCastExpr 0x127829a30 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1278299f0 <col:5> 'int ()' Function 0x1278282a0 'log_info' 'int ()'
|   |     `-ImplicitCastExpr 0x127829a70 <col:15> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x127829a10 <col:15> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x127829b78 <line:68:3, col:18> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127829b10 <col:3, col:8> '<dependent type>' contains-errors lvalue ->attribs
|   | | `-RecoveryExpr 0x127829ae8 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x127829ac8 <col:3> 'int *' lvalue ParmVar 0x12780dd28 'uid' 'int *'
|   | `-DeclRefExpr 0x127829b58 <col:18> 'struct user_attribute *' contains-errors lvalue Var 0x12780e148 'attribs' 'struct user_attribute *'
|   |-BinaryOperator 0x127829c48 <line:69:3, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127829be0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->numattribs
|   | | `-RecoveryExpr 0x127829bb8 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x127829b98 <col:3> 'int *' lvalue ParmVar 0x12780dd28 'uid' 'int *'
|   | `-DeclRefExpr 0x127829c28 <col:21> 'int' lvalue Var 0x12780df38 'count' 'int'
|   `-ReturnStmt 0x127829ca0 <line:70:3, col:10>
|     `-ImplicitCastExpr 0x127829c88 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x127829c68 <col:10> 'int' lvalue Var 0x12780df38 'count' 'int'
`-FunctionDecl 0x127829168 <line:46:7> col:7 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x127829268 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1278292d0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x127829338 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x127829210 <<invalid sloc>> Implicit 900
