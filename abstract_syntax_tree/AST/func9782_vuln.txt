TranslationUnitDecl 0x14f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14f055bd0 '__int128'
|-TypedefDecl 0x14f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14f055bf0 'unsigned __int128'
|-TypedefDecl 0x14f80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14f056580 '__NSConstantString_tag'
|-TypedefDecl 0x14f80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14f055d90 '__SVInt8_t'
|-TypedefDecl 0x14f80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14f055db0 '__SVInt16_t'
|-TypedefDecl 0x14f80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14f055dd0 '__SVInt32_t'
|-TypedefDecl 0x14f80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14f055df0 '__SVInt64_t'
|-TypedefDecl 0x14f80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14f055e10 '__SVUint8_t'
|-TypedefDecl 0x14f80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14f055e30 '__SVUint16_t'
|-TypedefDecl 0x14f80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14f055e50 '__SVUint32_t'
|-TypedefDecl 0x14f80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14f055e70 '__SVUint64_t'
|-TypedefDecl 0x14f80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14f055e90 '__SVFloat16_t'
|-TypedefDecl 0x14f80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14f80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14f80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14f80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14f80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14f80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14f80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14f80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14f80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14f80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14f80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14f80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14f80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14f056390 '__SVBool_t'
|-TypedefDecl 0x14f80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14f0563f0 '__SVCount_t'
|-TypedefDecl 0x14f80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f80dbb0 'char *'
|   `-BuiltinType 0x14f0556b0 'char'
|-TypedefDecl 0x14f80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f80dbb0 'char *'
|   `-BuiltinType 0x14f0556b0 'char'
`-FunctionDecl 0x14f80df70 <dataset_diviso_filec/func9782_vuln.c:1:1, line:32:1> line:1:13 invalid build_dirs 'void (char *, char *, int, int)' static
  |-ParmVarDecl 0x14f80dcd8 <col:24, col:30> col:30 used src 'char *'
  |-ParmVarDecl 0x14f80dd58 <col:35, col:41> col:41 used dst 'char *'
  |-ParmVarDecl 0x14f80ddf0 <col:46, col:53> col:53 invalid src_prefix_len 'int'
  |-ParmVarDecl 0x14f80de70 <col:69, col:76> col:76 invalid dst_prefix_len 'int'
  `-CompoundStmt 0x14f829c20 <col:92, line:32:1>
    |-DeclStmt 0x14f80e158 <line:2:2, col:36>
    | `-VarDecl 0x14f80e050 <col:2, col:35> col:8 used p 'char *' cinit
    |   `-BinaryOperator 0x14f80e138 <col:12, col:35> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x14f80e0f8 <col:12, col:18> '<dependent type>' contains-errors '+'
    |     | |-DeclRefExpr 0x14f80e0b8 <col:12> 'char *' lvalue ParmVar 0x14f80dcd8 'src' 'char *'
    |     | `-RecoveryExpr 0x14f80e0d8 <col:18> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x14f80e118 <col:35> 'int' 1
    |-DeclStmt 0x14f80e290 <line:3:2, col:36>
    | `-VarDecl 0x14f80e188 <col:2, col:35> col:8 used q 'char *' cinit
    |   `-BinaryOperator 0x14f80e270 <col:12, col:35> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x14f80e230 <col:12, col:18> '<dependent type>' contains-errors '+'
    |     | |-DeclRefExpr 0x14f80e1f0 <col:12> 'char *' lvalue ParmVar 0x14f80dd58 'dst' 'char *'
    |     | `-RecoveryExpr 0x14f80e210 <col:18> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x14f80e250 <col:35> 'int' 1
    |-DeclStmt 0x14f80e388 <line:4:2, col:32>
    | `-VarDecl 0x14f80e2c0 <col:2, col:18> col:8 used r 'char *' cinit
    |   `-BinaryOperator 0x14f80e368 <col:12, col:18> '<dependent type>' contains-errors '+'
    |     |-DeclRefExpr 0x14f80e328 <col:12> 'char *' lvalue ParmVar 0x14f80dd58 'dst' 'char *'
    |     `-RecoveryExpr 0x14f80e348 <col:18> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14f827998 <line:5:2, col:15>
    | |-RecordDecl 0x14f827400 <col:2, col:9> col:9 struct stat
    | `-VarDecl 0x14f8274f8 <col:2, col:14> col:14 invalid s 'struct stat'
    |-BinaryOperator 0x14f827a30 <line:7:2, col:7> 'char' contains-errors '='
    | |-UnaryOperator 0x14f8279e8 <col:2, col:3> 'char' contains-errors lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14f8279d0 <col:3> 'char *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x14f8279b0 <col:3> 'char *' contains-errors lvalue Var 0x14f80e2c0 'r' 'char *'
    | `-ImplicitCastExpr 0x14f827a18 <col:7> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x14f827a00 <col:7> 'int' 0
    `-ForStmt 0x14f829be8 <line:8:2, line:31:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-UnaryOperator 0x14f827ad0 <line:8:9, col:10> 'int' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x14f827ab8 <col:10> 'char *' <LValueToRValue>
      |   `-DeclRefExpr 0x14f827a98 <col:10> 'char *' lvalue ParmVar 0x14f80dd58 'dst' 'char *'
      |-BinaryOperator 0x14f827b58 <col:16, col:22> 'char *' contains-errors ','
      | |-UnaryOperator 0x14f827b08 <col:16, col:17> 'char *' contains-errors postfix '++'
      | | `-DeclRefExpr 0x14f827ae8 <col:16> 'char *' contains-errors lvalue Var 0x14f80e050 'p' 'char *'
      | `-UnaryOperator 0x14f827b40 <col:21, col:22> 'char *' contains-errors postfix '++'
      |   `-DeclRefExpr 0x14f827b20 <col:21> 'char *' contains-errors lvalue Var 0x14f80e188 'q' 'char *'
      `-CompoundStmt 0x14f829bc8 <col:26, line:31:2>
        |-IfStmt 0x14f827c58 <line:9:3, line:11:3>
        | |-BinaryOperator 0x14f827c10 <line:9:7, col:13> 'int' contains-errors '=='
        | | |-ImplicitCastExpr 0x14f827bf8 <col:7, col:8> 'int' contains-errors <IntegralCast>
        | | | `-ImplicitCastExpr 0x14f827be0 <col:7, col:8> 'char' contains-errors <LValueToRValue>
        | | |   `-UnaryOperator 0x14f827bb0 <col:7, col:8> 'char' contains-errors lvalue prefix '*' cannot overflow
        | | |     `-ImplicitCastExpr 0x14f827b98 <col:8> 'char *' contains-errors <LValueToRValue>
        | | |       `-DeclRefExpr 0x14f827b78 <col:8> 'char *' contains-errors lvalue Var 0x14f80e050 'p' 'char *'
        | | `-CharacterLiteral 0x14f827bc8 <col:13> 'int' 0
        | `-CompoundStmt 0x14f827c48 <col:19, line:11:3>
        `-IfStmt 0x14f829ba8 <line:12:3, line:30:3>
          |-BinaryOperator 0x14f827f40 <line:12:7, col:50> 'int' contains-errors '||'
          | |-BinaryOperator 0x14f827d10 <col:7, col:13> 'int' contains-errors '=='
          | | |-ImplicitCastExpr 0x14f827cf8 <col:7, col:8> 'int' contains-errors <IntegralCast>
          | | | `-ImplicitCastExpr 0x14f827ce0 <col:7, col:8> 'char' contains-errors <LValueToRValue>
          | | |   `-UnaryOperator 0x14f827cb0 <col:7, col:8> 'char' contains-errors lvalue prefix '*' cannot overflow
          | | |     `-ImplicitCastExpr 0x14f827c98 <col:8> 'char *' contains-errors <LValueToRValue>
          | | |       `-DeclRefExpr 0x14f827c78 <col:8> 'char *' contains-errors lvalue Var 0x14f80e050 'p' 'char *'
          | | `-CharacterLiteral 0x14f827cc8 <col:13> 'int' 0
          | `-ParenExpr 0x14f827f20 <col:21, col:50> 'int' contains-errors
          |   `-BinaryOperator 0x14f827f00 <col:22, col:47> 'int' contains-errors '&&'
          |     |-BinaryOperator 0x14f827dc8 <col:22, col:28> 'int' contains-errors '=='
          |     | |-ImplicitCastExpr 0x14f827db0 <col:22, col:23> 'int' contains-errors <IntegralCast>
          |     | | `-ImplicitCastExpr 0x14f827d98 <col:22, col:23> 'char' contains-errors <LValueToRValue>
          |     | |   `-UnaryOperator 0x14f827d68 <col:22, col:23> 'char' contains-errors lvalue prefix '*' cannot overflow
          |     | |     `-ImplicitCastExpr 0x14f827d50 <col:23> 'char *' contains-errors <LValueToRValue>
          |     | |       `-DeclRefExpr 0x14f827d30 <col:23> 'char *' contains-errors lvalue Var 0x14f80e050 'p' 'char *'
          |     | `-CharacterLiteral 0x14f827d80 <col:28> 'int' 47
          |     `-BinaryOperator 0x14f827ee0 <col:35, col:47> 'int' contains-errors '!='
          |       |-ImplicitCastExpr 0x14f827ec8 <col:35, col:42> 'int' contains-errors <IntegralCast>
          |       | `-ImplicitCastExpr 0x14f827eb0 <col:35, col:42> 'char' contains-errors <LValueToRValue>
          |       |   `-UnaryOperator 0x14f827e80 <col:35, col:42> 'char' contains-errors lvalue prefix '*' cannot overflow
          |       |     `-ParenExpr 0x14f827e60 <col:36, col:42> 'char *' contains-errors
          |       |       `-BinaryOperator 0x14f827e40 <col:37, col:41> 'char *' contains-errors '-'
          |       |         |-ImplicitCastExpr 0x14f827e28 <col:37> 'char *' contains-errors <LValueToRValue>
          |       |         | `-DeclRefExpr 0x14f827de8 <col:37> 'char *' contains-errors lvalue Var 0x14f80e050 'p' 'char *'
          |       |         `-IntegerLiteral 0x14f827e08 <col:41> 'int' 1
          |       `-CharacterLiteral 0x14f827e98 <col:47> 'int' 47
          `-CompoundStmt 0x14f829b80 <col:53, line:30:3>
            |-BinaryOperator 0x14f827fe0 <line:16:4, col:9> 'char' contains-errors '='
            | |-UnaryOperator 0x14f827f98 <col:4, col:5> 'char' contains-errors lvalue prefix '*' cannot overflow
            | | `-ImplicitCastExpr 0x14f827f80 <col:5> 'char *' contains-errors <LValueToRValue>
            | |   `-DeclRefExpr 0x14f827f60 <col:5> 'char *' contains-errors lvalue Var 0x14f80e050 'p' 'char *'
            | `-ImplicitCastExpr 0x14f827fc8 <col:9> 'char' <IntegralCast>
            |   `-CharacterLiteral 0x14f827fb0 <col:9> 'int' 0
            |-IfStmt 0x14f8299f0 <line:17:4, line:24:4>
            | |-BinaryOperator 0x14f8283d8 <line:17:8, col:47> 'int' contains-errors '&&'
            | | |-BinaryOperator 0x14f828228 <col:8, col:25> 'int' contains-errors '=='
            | | | |-CallExpr 0x14f8281d8 <col:8, col:20> '<dependent type>' contains-errors
            | | | | |-DeclRefExpr 0x14f828160 <col:8> 'int ()' Function 0x14f8280a8 'stat' 'int ()'
            | | | | |-DeclRefExpr 0x14f828180 <col:13> 'char *' lvalue ParmVar 0x14f80dcd8 'src' 'char *'
            | | | | `-UnaryOperator 0x14f8281c0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
            | | | |   `-RecoveryExpr 0x14f8281a0 <col:19> '<dependent type>' contains-errors lvalue
            | | | `-IntegerLiteral 0x14f828208 <col:25> 'int' 0
            | | `-CallExpr 0x14f8283b0 <col:30, col:47> '<dependent type>' contains-errors
            | |   |-DeclRefExpr 0x14f828328 <col:30> 'int ()' Function 0x14f828270 'S_ISDIR' 'int ()'
            | |   `-CXXDependentScopeMemberExpr 0x14f828368 <col:38, col:40> '<dependent type>' contains-errors lvalue .st_mode
            | |     `-RecoveryExpr 0x14f828348 <col:38> '<dependent type>' contains-errors lvalue
            | `-CompoundStmt 0x14f8299c0 <col:50, line:24:4>
            |   |-BinaryOperator 0x14f829680 <line:20:5, col:10> 'char' contains-errors '='
            |   | |-UnaryOperator 0x14f829638 <col:5, col:6> 'char' contains-errors lvalue prefix '*' cannot overflow
            |   | | `-ImplicitCastExpr 0x14f829620 <col:6> 'char *' contains-errors <LValueToRValue>
            |   | |   `-DeclRefExpr 0x14f829600 <col:6> 'char *' contains-errors lvalue Var 0x14f80e188 'q' 'char *'
            |   | `-ImplicitCastExpr 0x14f829668 <col:10> 'char' <IntegralCast>
            |   |   `-CharacterLiteral 0x14f829650 <col:10> 'int' 0
            |   |-BinaryOperator 0x14f829720 <line:21:5, col:10> 'char' contains-errors '='
            |   | |-UnaryOperator 0x14f8296d8 <col:5, col:6> 'char' contains-errors lvalue prefix '*' cannot overflow
            |   | | `-ImplicitCastExpr 0x14f8296c0 <col:6> 'char *' contains-errors <LValueToRValue>
            |   | |   `-DeclRefExpr 0x14f8296a0 <col:6> 'char *' contains-errors lvalue Var 0x14f80e2c0 'r' 'char *'
            |   | `-ImplicitCastExpr 0x14f829708 <col:10> 'char' <IntegralCast>
            |   |   `-CharacterLiteral 0x14f8296f0 <col:10> 'int' 47
            |   |-BinaryOperator 0x14f829798 <line:22:5, col:9> 'char *' contains-errors '='
            |   | |-DeclRefExpr 0x14f829740 <col:5> 'char *' contains-errors lvalue Var 0x14f80e2c0 'r' 'char *'
            |   | `-ImplicitCastExpr 0x14f829780 <col:9> 'char *' contains-errors <LValueToRValue>
            |   |   `-DeclRefExpr 0x14f829760 <col:9> 'char *' contains-errors lvalue Var 0x14f80e188 'q' 'char *'
            |   `-CallExpr 0x14f829980 <line:23:5, col:36> '<dependent type>' contains-errors
            |     |-DeclRefExpr 0x14f829898 <col:5> 'int ()' Function 0x14f8297e0 'mkdir_attr' 'int ()'
            |     |-DeclRefExpr 0x14f8298b8 <col:16> 'char *' lvalue ParmVar 0x14f80dd58 'dst' 'char *'
            |     |-CXXDependentScopeMemberExpr 0x14f8298f8 <col:21, col:23> '<dependent type>' contains-errors lvalue .st_mode
            |     | `-RecoveryExpr 0x14f8298d8 <col:21> '<dependent type>' contains-errors lvalue
            |     |-IntegerLiteral 0x14f829940 <col:32> 'int' 0
            |     `-IntegerLiteral 0x14f829960 <col:35> 'int' 0
            `-IfStmt 0x14f829b60 <line:25:4, line:29:4>
              |-UnaryOperator 0x14f829a90 <line:25:8, col:9> 'int' prefix '!' cannot overflow
              | `-ImplicitCastExpr 0x14f829a78 <col:9> 'char *' <LValueToRValue>
              |   `-DeclRefExpr 0x14f829a58 <col:9> 'char *' lvalue ParmVar 0x14f80dd58 'dst' 'char *'
              `-CompoundStmt 0x14f829b48 <col:15, line:29:4>
                `-BinaryOperator 0x14f829b28 <line:28:5, col:10> 'char' contains-errors '='
                  |-UnaryOperator 0x14f829ae0 <col:5, col:6> 'char' contains-errors lvalue prefix '*' cannot overflow
                  | `-ImplicitCastExpr 0x14f829ac8 <col:6> 'char *' contains-errors <LValueToRValue>
                  |   `-DeclRefExpr 0x14f829aa8 <col:6> 'char *' contains-errors lvalue Var 0x14f80e050 'p' 'char *'
                  `-ImplicitCastExpr 0x14f829b10 <col:10> 'char' <IntegralCast>
                    `-CharacterLiteral 0x14f829af8 <col:10> 'int' 47
