TranslationUnitDecl 0x122855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122855bd0 '__int128'
|-TypedefDecl 0x122856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122855bf0 'unsigned __int128'
|-TypedefDecl 0x12300be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12300bc00 'struct __NSConstantString_tag'
|   `-Record 0x122856580 '__NSConstantString_tag'
|-TypedefDecl 0x12300be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122855d90 '__SVInt8_t'
|-TypedefDecl 0x12300bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122855db0 '__SVInt16_t'
|-TypedefDecl 0x12300bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122855dd0 '__SVInt32_t'
|-TypedefDecl 0x12300bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122855df0 '__SVInt64_t'
|-TypedefDecl 0x12300c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122855e10 '__SVUint8_t'
|-TypedefDecl 0x12300c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122855e30 '__SVUint16_t'
|-TypedefDecl 0x12300c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122855e50 '__SVUint32_t'
|-TypedefDecl 0x12300c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122855e70 '__SVUint64_t'
|-TypedefDecl 0x12300c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122855e90 '__SVFloat16_t'
|-TypedefDecl 0x12300c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12300c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12300c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12300c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12300c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12300c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12300c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12300c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12300c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12300c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12300c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12300c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12300c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12300c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12300c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12300c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12300c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1228560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12300c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1228560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12300c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1228560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12300c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12300ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12300cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12300cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12300cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12300d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1228561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12300d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1228561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12300d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1228561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12300d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12300d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12300d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12300d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12300d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12300d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12300d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12300d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12300d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12300d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12300d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12300d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12300da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122856390 '__SVBool_t'
|-TypedefDecl 0x12300da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12300dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12300db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228563f0 '__SVCount_t'
|-TypedefDecl 0x12300dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12300dbb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-TypedefDecl 0x12300dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12300dbb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-FunctionDecl 0x12300de88 <dataset_diviso_filec/func11591_nonvuln.c:1:1, line:46:1> line:1:13 invalid parallel_process_irp_create 'int (int *, int *)' static
| |-ParmVarDecl 0x12300dd28 <col:41, col:58> col:58 referenced invalid parallel 'int *'
| |-ParmVarDecl 0x12300dda8 <col:68, col:73> col:73 referenced invalid irp 'int *'
| `-CompoundStmt 0x122924d50 <line:2:1, line:46:1>
|   |-DeclStmt 0x12300dff8 <line:3:2, col:19>
|   | `-VarDecl 0x12300df58 <col:2, col:15> col:8 used path 'char *' cinit
|   |   `-RecoveryExpr 0x12300dfd8 <col:15> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12300e090 <line:4:2, col:12>
|   | `-VarDecl 0x12300e028 <col:2, col:6> col:6 used status 'int'
|   |-IfStmt 0x12300e358 <line:7:2, line:8:10>
|   | |-UnaryOperator 0x12300e2f8 <line:7:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x12300e2c8 <col:7, col:37> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x12300e220 <col:7> 'int ()' Function 0x12300e168 'Stream_SafeSeek' 'int ()'
|   | |   |-CXXDependentScopeMemberExpr 0x12300e260 <col:23, col:28> '<dependent type>' contains-errors lvalue ->input
|   | |   | `-RecoveryExpr 0x12300e240 <col:23> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x12300e2a8 <col:35> 'int' 28
|   | `-ReturnStmt 0x12300e348 <line:8:3, col:10>
|   |   `-RecoveryExpr 0x12300e328 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1230275f0 <line:11:2, line:12:10>
|   | |-BinaryOperator 0x123027588 <line:11:6, col:46> 'int' contains-errors '<'
|   | | |-CallExpr 0x123027540 <col:6, col:42> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x1230274b8 <col:6> 'int ()' Function 0x123027400 'Stream_GetRemainingLength' 'int ()'
|   | | | `-CXXDependentScopeMemberExpr 0x1230274f8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->input
|   | | |   `-RecoveryExpr 0x1230274d8 <col:32> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x123027568 <col:46> 'int' 4
|   | `-ReturnStmt 0x1230275e0 <line:12:3, col:10>
|   |   `-RecoveryExpr 0x1230275c0 <col:10> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1230277e0 <line:13:2, col:43> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1230276f0 <col:2> 'int ()' Function 0x123027638 'Stream_Read_UINT32' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x123027730 <col:21, col:26> '<dependent type>' contains-errors lvalue ->input
|   | | `-RecoveryExpr 0x123027710 <col:21> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x1230277c0 <col:33> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1230279c0 <line:15:2, line:16:10>
|   | |-UnaryOperator 0x123027960 <line:15:6, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x123027930 <col:7, col:45> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x123027828 <col:7> 'int ()' Function 0x12300e168 'Stream_SafeSeek' 'int ()'
|   | |   |-CXXDependentScopeMemberExpr 0x123027868 <col:23, col:28> '<dependent type>' contains-errors lvalue ->input
|   | |   | `-RecoveryExpr 0x123027848 <col:23> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x123027910 <col:35> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1230279b0 <line:16:3, col:10>
|   |   `-RecoveryExpr 0x123027990 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x123027e08 <line:17:2, col:83> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1230279e0 <col:2> 'int' lvalue Var 0x12300e028 'status' 'int'
|   | `-CallExpr 0x123027da8 <col:11, col:83> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x123027ae0 <col:11> 'int ()' Function 0x123027a28 'ConvertFromUnicode' 'int ()'
|   |   |-RecoveryExpr 0x123027ce8 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-IntegerLiteral 0x123027b18 <col:39> 'int' 0
|   |   |-RecoveryExpr 0x123027d08 <col:42> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x123027d48 <col:47, col:60> '<dependent type>' contains-errors '/'
|   |   | |-RecoveryExpr 0x123027d28 <col:47> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x123027b68 <col:60> 'int' 2
|   |   |-UnaryOperator 0x123027c00 <col:63, col:64> 'char **' contains-errors prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x123027ba8 <col:64> 'char *' contains-errors lvalue Var 0x12300df58 'path' 'char *'
|   |   |-IntegerLiteral 0x123027c18 <col:70> 'int' 0
|   |   |-RecoveryExpr 0x123027d68 <col:73> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x123027d88 <col:79> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x122923e50 <line:19:2, line:24:3>
|   | |-BinaryOperator 0x123027e80 <line:19:6, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x123027e68 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x123027e28 <col:6> 'int' lvalue Var 0x12300e028 'status' 'int'
|   | | `-IntegerLiteral 0x123027e48 <col:15> 'int' 1
|   | `-IfStmt 0x122923e30 <line:20:3, line:24:3>
|   |   |-UnaryOperator 0x123028298 <line:20:7, col:35> 'int' contains-errors prefix '!' cannot overflow
|   |   | `-ParenExpr 0x123028278 <col:8, col:35> 'char *' contains-errors
|   |   |   `-BinaryOperator 0x123028258 <col:9, col:34> 'char *' contains-errors '='
|   |   |     |-DeclRefExpr 0x123027ea0 <col:9> 'char *' contains-errors lvalue Var 0x12300df58 'path' 'char *'
|   |   |     `-CStyleCastExpr 0x123028230 <col:16, col:34> 'char *' <BitCast>
|   |   |       `-CallExpr 0x1230281b8 <col:23, col:34> 'void *'
|   |   |         |-ImplicitCastExpr 0x1230281a0 <col:23> 'void *(*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |   |         | `-DeclRefExpr 0x123028110 <col:23> 'void *(unsigned long, unsigned long)' Function 0x123027f00 'calloc' 'void *(unsigned long, unsigned long)'
|   |   |         |-ImplicitCastExpr 0x1230281e8 <col:30> 'unsigned long' <IntegralCast>
|   |   |         | `-IntegerLiteral 0x123028130 <col:30> 'int' 1
|   |   |         `-ImplicitCastExpr 0x123028200 <col:33> 'unsigned long' <IntegralCast>
|   |   |           `-IntegerLiteral 0x123028150 <col:33> 'int' 1
|   |   `-CompoundStmt 0x122923e20 <line:21:3, line:24:3>
|   |-BinaryOperator 0x122923fc8 <line:26:2, col:41> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x122923eb8 <col:2, col:12> '<dependent type>' contains-errors lvalue ->id
|   | | `-RecoveryExpr 0x122923e90 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x122923e70 <col:2> 'int *' lvalue ParmVar 0x12300dd28 'parallel' 'int *'
|   | `-UnaryOperator 0x122923fb0 <col:17, col:41> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x122923f68 <col:17, col:30> '<dependent type>' contains-errors lvalue ->id_sequence
|   |     `-CXXDependentScopeMemberExpr 0x122923f20 <col:17, col:22> '<dependent type>' contains-errors lvalue ->devman
|   |       `-RecoveryExpr 0x122923f00 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x122924608 <line:29:2, line:40:2> has_else
|   | |-BinaryOperator 0x122924268 <line:29:6, col:23> 'int' contains-errors '<'
|   | | |-CXXDependentScopeMemberExpr 0x122924200 <col:6, col:16> '<dependent type>' contains-errors lvalue ->file
|   | | | `-RecoveryExpr 0x1229241e0 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x122924248 <col:23> 'int' 0
|   | |-CompoundStmt 0x1229243e8 <line:30:2, line:33:2>
|   | | `-BinaryOperator 0x1229243c8 <line:32:3, col:18> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x122924360 <col:3, col:13> '<dependent type>' contains-errors lvalue ->id
|   | |   | `-RecoveryExpr 0x122924338 <col:3> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x122924318 <col:3> 'int *' lvalue ParmVar 0x12300dd28 'parallel' 'int *'
|   | |   `-IntegerLiteral 0x1229243a8 <col:18> 'int' 0
|   | `-CompoundStmt 0x1229245f0 <line:35:2, line:40:2>
|   |   `-IfStmt 0x1229245d0 <line:37:3, line:39:3>
|   |     |-RecoveryExpr 0x1229245a0 <line:37:7, col:54> '_Bool' contains-errors
|   |     `-CompoundStmt 0x1229245c0 <line:38:3, line:39:3>
|   |-CallExpr 0x122924808 <line:42:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x122924718 <col:2> 'int ()' Function 0x122924660 'Stream_Write_UINT32' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x122924758 <col:22, col:27> '<dependent type>' contains-errors lvalue ->output
|   | | `-RecoveryExpr 0x122924738 <col:22> '<dependent type>' contains-errors lvalue
|   | `-CXXDependentScopeMemberExpr 0x1229247c0 <col:35, col:45> '<dependent type>' contains-errors lvalue ->id
|   |   `-RecoveryExpr 0x1229247a0 <col:35> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1229249c0 <line:43:2, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x122924918 <col:2> 'int ()' Function 0x122924860 'Stream_Write_UINT8' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x122924958 <col:21, col:26> '<dependent type>' contains-errors lvalue ->output
|   | | `-RecoveryExpr 0x122924938 <col:21> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x1229249a0 <col:34> 'int' 0
|   |-CallExpr 0x122924c38 <line:44:2, col:11> 'void' contains-errors
|   | |-ImplicitCastExpr 0x122924c20 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x122924b98 <col:2> 'void (void *)' Function 0x122924a28 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x122924c78 <col:7> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x122924c60 <col:7> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x122924bb8 <col:7> 'char *' contains-errors lvalue Var 0x12300df58 'path' 'char *'
|   `-ReturnStmt 0x122924d40 <line:45:2, col:26>
|     `-CallExpr 0x122924d18 <col:9, col:26> '<dependent type>' contains-errors
|       |-CXXDependentScopeMemberExpr 0x122924cb0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->Complete
|       | `-RecoveryExpr 0x122924c90 <col:9> '<dependent type>' contains-errors lvalue
|       `-RecoveryExpr 0x122924cf8 <col:23> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x123027f00 <line:20:23> col:23 implicit used calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x123028000 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x123028068 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x123027fa8 <<invalid sloc>> Implicit 868
| `-AllocSizeAttr 0x1230280e0 <col:23> Implicit 1 2
`-FunctionDecl 0x122924a28 <line:44:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x122924b28 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x122924ad0 <<invalid sloc>> Implicit 873
