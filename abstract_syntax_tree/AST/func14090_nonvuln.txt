TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12d926c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d926a00 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d926c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12d926d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12d926d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d926dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12d926e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12d926ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12d926f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12d926f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12d926fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d927040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d9270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d927110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d927178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d9271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d927248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d9272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d927318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d927380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d9273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d927450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d9274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d927520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d927588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d9275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d927658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d9276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d927728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d927790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d9277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d927860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d9278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d927930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d927998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d928200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d928268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d9282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d928338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d9283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d928408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d928470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d9284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d928540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d9285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d928610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d928678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d9286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d928748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d9287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d928818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12d928880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d9288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d928950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12d9289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d9289b0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12d928a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d9289b0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-FunctionDecl 0x12d9414d8 <dataset_diviso_filec/func14090_nonvuln.c:1:1, line:80:1> line:1:12 parseFunctionHeader 'int (struct cli_bc *, unsigned int, unsigned char *)' static
| |-ParmVarDecl 0x12d929048 <col:32, col:47> col:47 used bc 'struct cli_bc *'
| |-ParmVarDecl 0x12d9290c8 <col:51, col:60> col:60 used fn 'unsigned int'
| |-ParmVarDecl 0x12d929178 <col:64, col:79> col:79 used buffer 'unsigned char *'
| `-CompoundStmt 0x12d947800 <line:2:1, line:80:1>
|   |-DeclStmt 0x12d941690 <line:3:5, col:14>
|   | `-VarDecl 0x12d9415f0 <col:5, col:13> col:10 used ok 'char' cinit
|   |   `-ImplicitCastExpr 0x12d941678 <col:13> 'char' <IntegralCast>
|   |     `-IntegerLiteral 0x12d941658 <col:13> 'int' 1
|   |-DeclStmt 0x12d941908 <line:4:5, col:42>
|   | |-VarDecl 0x12d9416c0 <col:5, col:14> col:14 used offset 'unsigned int'
|   | |-VarDecl 0x12d941740 <col:5, col:22> col:22 used len 'unsigned int'
|   | |-VarDecl 0x12d9417c0 <col:5, col:38> col:27 used all_locals 'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x12d941848 <col:38> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x12d941828 <col:38> 'int' 0
|   | `-VarDecl 0x12d941878 <col:5, col:41> col:41 used i 'unsigned int'
|   |-DeclStmt 0x12d941b08 <line:5:5, col:29>
|   | |-RecordDecl 0x12d941920 <col:5, col:12> col:12 struct cli_bc_func
|   | `-VarDecl 0x12d941a88 <col:5, col:25> col:25 used func 'struct cli_bc_func *'
|   |-IfStmt 0x12d941e90 <line:7:5, line:11:5>
|   | |-BinaryOperator 0x12d941ba0 <line:7:9, col:19> 'int' contains-errors '>='
|   | | |-DeclRefExpr 0x12d941b20 <col:9> 'unsigned int' lvalue ParmVar 0x12d9290c8 'fn' 'unsigned int'
|   | | `-RecoveryExpr 0x12d941b78 <col:15, col:19> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12d941b40 <col:15> 'struct cli_bc *' lvalue ParmVar 0x12d929048 'bc' 'struct cli_bc *'
|   | `-CompoundStmt 0x12d941e70 <col:29, line:11:5>
|   |   |-CallExpr 0x12d941df0 <line:8:2, line:9:18> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12d941cf0 <line:8:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |   | |-StringLiteral 0x12d941d50 <col:13> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x12d941d70 <col:20> 'unsigned int' lvalue ParmVar 0x12d9290c8 'fn' 'unsigned int'
|   |   | `-RecoveryExpr 0x12d941dc8 <line:9:6, col:10> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x12d941d90 <col:6> 'struct cli_bc *' lvalue ParmVar 0x12d929048 'bc' 'struct cli_bc *'
|   |   `-ReturnStmt 0x12d941e60 <line:10:2, col:9>
|   |     `-RecoveryExpr 0x12d941e40 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12d941fb8 <line:12:5, col:25> 'struct cli_bc_func *' contains-errors '='
|   | |-DeclRefExpr 0x12d941eb0 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-UnaryOperator 0x12d941fa0 <col:12, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-ArraySubscriptExpr 0x12d941f80 <col:13, col:25> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x12d941f50 <col:13, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-RecoveryExpr 0x12d941f08 <col:13, col:17> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x12d941ed0 <col:13> 'struct cli_bc *' lvalue ParmVar 0x12d929048 'bc' 'struct cli_bc *'
|   |     `-ImplicitCastExpr 0x12d941f68 <col:23> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12d941f30 <col:23> 'unsigned int' lvalue ParmVar 0x12d9290c8 'fn' 'unsigned int'
|   |-BinaryOperator 0x12d9422c8 <line:13:5, col:37> 'unsigned int' '='
|   | |-DeclRefExpr 0x12d941fd8 <col:5> 'unsigned int' lvalue Var 0x12d941740 'len' 'unsigned int'
|   | `-ImplicitCastExpr 0x12d9422b0 <col:11, col:37> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x12d942288 <col:11, col:37> 'unsigned long'
|   |     |-ImplicitCastExpr 0x12d942270 <col:11> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d9421a8 <col:11> 'unsigned long (const char *)' Function 0x12d942038 'strlen' 'unsigned long (const char *)'
|   |     `-CStyleCastExpr 0x12d942218 <col:18, col:31> 'const char *' <BitCast>
|   |       `-ImplicitCastExpr 0x12d942200 <col:31> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x12d9421c8 <col:31> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |-IfStmt 0x12d9449c8 <line:15:5, line:18:5>
|   | |-BinaryOperator 0x12d9423a8 <line:15:9, col:22> 'int' '!='
|   | | |-ImplicitCastExpr 0x12d942390 <col:9, col:17> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x12d942378 <col:9, col:17> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x12d942340 <col:9, col:17> 'unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x12d942328 <col:9> 'unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12d9422e8 <col:9> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   | | |     `-IntegerLiteral 0x12d942308 <col:16> 'int' 0
|   | | `-CharacterLiteral 0x12d942360 <col:22> 'int' 65
|   | `-CompoundStmt 0x12d9449a8 <col:27, line:18:5>
|   |   |-CallExpr 0x12d9448e8 <line:16:2, col:29> 'int'
|   |   | |-ImplicitCastExpr 0x12d9448d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12d9423c8 <col:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |   | |-ImplicitCastExpr 0x12d944918 <col:13> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x12d944800 <col:13> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x12d944948 <col:20, col:28> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x12d944930 <col:20, col:28> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x12d944878 <col:20, col:28> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x12d944860 <col:20> 'unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x12d944820 <col:20> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |   |       `-IntegerLiteral 0x12d944840 <col:27> 'int' 0
|   |   `-ReturnStmt 0x12d944998 <line:17:2, col:9>
|   |     `-RecoveryExpr 0x12d944978 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12d944a40 <line:19:5, col:14> 'unsigned int' '='
|   | |-DeclRefExpr 0x12d9449e8 <col:5> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   | `-ImplicitCastExpr 0x12d944a28 <col:14> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x12d944a08 <col:14> 'int' 1
|   |-BinaryOperator 0x12d944d50 <line:20:5, col:65> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d944a98 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d944a60 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-CallExpr 0x12d944cd8 <col:21, col:65> 'int'
|   |   |-ImplicitCastExpr 0x12d944cc0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12d944ba0 <col:21> 'int ()' Function 0x12d944ae8 'readFixedNumber' 'int ()'
|   |   |-ImplicitCastExpr 0x12d944d20 <col:37> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d944bc0 <col:37> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |   |-UnaryOperator 0x12d944c30 <col:45, col:46> 'unsigned int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x12d944be0 <col:46> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |   |-ImplicitCastExpr 0x12d944d38 <col:54> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d944c48 <col:54> 'unsigned int' lvalue Var 0x12d941740 'len' 'unsigned int'
|   |   |-UnaryOperator 0x12d944c88 <col:59, col:60> 'char *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x12d944c68 <col:60> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   |   `-IntegerLiteral 0x12d944ca0 <col:64> 'int' 1
|   |-BinaryOperator 0x12d945048 <line:21:5, col:64> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d944da8 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d944d70 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-CallExpr 0x12d944fb8 <col:24, col:64> 'int'
|   |   |-ImplicitCastExpr 0x12d944fa0 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12d944eb0 <col:24> 'int ()' Function 0x12d944df8 'readTypeID' 'int ()'
|   |   |-ImplicitCastExpr 0x12d945000 <col:35> 'struct cli_bc *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d944ed0 <col:35> 'struct cli_bc *' lvalue ParmVar 0x12d929048 'bc' 'struct cli_bc *'
|   |   |-ImplicitCastExpr 0x12d945018 <col:39> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d944ef0 <col:39> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |   |-UnaryOperator 0x12d944f30 <col:47, col:48> 'unsigned int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x12d944f10 <col:48> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |   |-ImplicitCastExpr 0x12d945030 <col:56> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d944f48 <col:56> 'unsigned int' lvalue Var 0x12d941740 'len' 'unsigned int'
|   |   `-UnaryOperator 0x12d944f88 <col:61, col:62> 'char *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x12d944f68 <col:62> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   |-IfStmt 0x12d945328 <line:22:5, line:25:5>
|   | |-BinaryOperator 0x12d945140 <line:22:9, col:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x12d945128 <col:9, col:22> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x12d945110 <col:9, col:22> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x12d9450d8 <col:9, col:22> 'unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x12d9450a8 <col:9> 'unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12d945068 <col:9> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   | | |     `-ImplicitCastExpr 0x12d9450c0 <col:16> 'unsigned int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x12d945088 <col:16> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   | | `-CharacterLiteral 0x12d9450f8 <col:27> 'int' 76
|   | `-CompoundStmt 0x12d945308 <col:32, line:25:5>
|   |   |-CallExpr 0x12d945248 <line:23:2, col:34> 'int'
|   |   | |-ImplicitCastExpr 0x12d945230 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12d945160 <col:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |   | |-ImplicitCastExpr 0x12d945278 <col:13> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x12d945180 <col:13> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x12d9452a8 <col:20, col:33> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x12d945290 <col:20, col:33> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x12d945210 <col:20, col:33> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x12d9451e0 <col:20> 'unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x12d9451a0 <col:20> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |   |       `-ImplicitCastExpr 0x12d9451f8 <col:27> 'unsigned int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x12d9451c0 <col:27> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |   `-ReturnStmt 0x12d9452f8 <line:24:2, col:9>
|   |     `-RecoveryExpr 0x12d9452d8 <col:9> '<dependent type>' contains-errors lvalue
|   |-UnaryOperator 0x12d945368 <line:26:5, col:11> 'unsigned int' postfix '++'
|   | `-DeclRefExpr 0x12d945348 <col:5> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |-BinaryOperator 0x12d945618 <line:27:5, col:59> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d9453b8 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d945380 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-CallExpr 0x12d9455a8 <col:23, col:59> 'int'
|   |   |-ImplicitCastExpr 0x12d945590 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12d9454c0 <col:23> 'int ()' Function 0x12d945408 'readNumber' 'int ()'
|   |   |-ImplicitCastExpr 0x12d9455e8 <col:34> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d9454e0 <col:34> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |   |-UnaryOperator 0x12d945520 <col:42, col:43> 'unsigned int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x12d945500 <col:43> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |   |-ImplicitCastExpr 0x12d945600 <col:51> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d945538 <col:51> 'unsigned int' lvalue Var 0x12d941740 'len' 'unsigned int'
|   |   `-UnaryOperator 0x12d945578 <col:56, col:57> 'char *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x12d945558 <col:57> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   |-IfStmt 0x12d945788 <line:28:5, line:31:5>
|   | |-UnaryOperator 0x12d945670 <line:28:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12d945658 <col:10> 'char' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d945638 <col:10> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   | `-CompoundStmt 0x12d945768 <col:14, line:31:5>
|   |   |-CallExpr 0x12d9456e0 <line:29:2, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x12d9456c8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12d945688 <col:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |   | `-ImplicitCastExpr 0x12d945708 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x12d9456a8 <col:13> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x12d945758 <line:30:2, col:9>
|   |     `-RecoveryExpr 0x12d945738 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12d9458a8 <line:32:5, col:40> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x12d9457a8 <col:5> 'unsigned int' lvalue Var 0x12d9417c0 'all_locals' 'unsigned int'
|   | `-BinaryOperator 0x12d945888 <col:18, col:40> '<dependent type>' contains-errors '+'
|   |   |-RecoveryExpr 0x12d945800 <col:18, col:24> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12d9457c8 <col:18> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |   `-RecoveryExpr 0x12d945860 <col:34, col:40> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12d945828 <col:34> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |-IfStmt 0x12d945dd8 <line:33:5, line:41:5> has_else
|   | |-UnaryOperator 0x12d945900 <line:33:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12d9458e8 <col:10> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d9458c8 <col:10> 'unsigned int' lvalue Var 0x12d9417c0 'all_locals' 'unsigned int'
|   | |-CompoundStmt 0x12d945978 <col:22, line:35:5>
|   | `-CompoundStmt 0x12d945db8 <col:12, line:41:5>
|   |   |-BinaryOperator 0x12d945c38 <line:36:2, col:59> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x12d9459c0 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x12d945988 <col:2> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |   | `-CallExpr 0x12d945bf0 <col:16, col:59> 'int' contains-errors
|   |   |   |-ImplicitCastExpr 0x12d945bd8 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12d945ac8 <col:16> 'int ()' Function 0x12d945a10 'cli_calloc' 'int ()'
|   |   |   |-ImplicitCastExpr 0x12d945c20 <col:27> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12d945ae8 <col:27> 'unsigned int' lvalue Var 0x12d9417c0 'all_locals' 'unsigned int'
|   |   |   `-UnaryExprOrTypeTraitExpr 0x12d945bb8 <col:39, col:58> 'unsigned long' contains-errors sizeof
|   |   |     `-ParenExpr 0x12d945b98 <col:45, col:58> '<dependent type>' contains-errors
|   |   |       `-UnaryOperator 0x12d945b80 <col:46, col:53> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |         `-ImplicitCastExpr 0x12d945b68 <col:47, col:53> '<dependent type>' contains-errors <LValueToRValue>
|   |   |           `-RecoveryExpr 0x12d945b40 <col:47, col:53> '<dependent type>' contains-errors lvalue
|   |   |             `-DeclRefExpr 0x12d945b08 <col:47> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *' non_odr_use_unevaluated
|   |   `-IfStmt 0x12d945d98 <line:37:2, line:40:2>
|   |     |-UnaryOperator 0x12d945cd0 <line:37:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x12d945cb8 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   `-RecoveryExpr 0x12d945c90 <col:7, col:13> '<dependent type>' contains-errors lvalue
|   |     |     `-DeclRefExpr 0x12d945c58 <col:7> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |     `-CompoundStmt 0x12d945d80 <col:20, line:40:2>
|   |       `-CallExpr 0x12d945d40 <line:38:6, col:22> 'int'
|   |         |-ImplicitCastExpr 0x12d945d28 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x12d945ce8 <col:6> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |         `-ImplicitCastExpr 0x12d945d68 <col:17> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x12d945d08 <col:17> 'char[4]' lvalue "STR"
|   |-ForStmt 0x12d946470 <line:42:5, line:46:5>
|   | |-BinaryOperator 0x12d945e60 <line:42:10, col:12> 'unsigned int' '='
|   | | |-DeclRefExpr 0x12d945e08 <col:10> 'unsigned int' lvalue Var 0x12d941878 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x12d945e48 <col:12> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x12d945e28 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12d945ef0 <col:14, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x12d945ec0 <col:14> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12d945e80 <col:14> 'unsigned int' lvalue Var 0x12d941878 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x12d945ed8 <col:16> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d945ea0 <col:16> 'unsigned int' lvalue Var 0x12d9417c0 'all_locals' 'unsigned int'
|   | |-UnaryOperator 0x12d945f30 <col:27, col:28> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x12d945f10 <col:27> 'unsigned int' lvalue Var 0x12d941878 'i' 'unsigned int'
|   | `-CompoundStmt 0x12d946450 <col:32, line:46:5>
|   |   |-BinaryOperator 0x12d946170 <line:43:2, col:55> '<dependent type>' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x12d945ff8 <col:2, col:15> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x12d945fc8 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-RecoveryExpr 0x12d945f80 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x12d945f48 <col:2> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |   | | `-ImplicitCastExpr 0x12d945fe0 <col:14> 'unsigned int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12d945fa8 <col:14> 'unsigned int' lvalue Var 0x12d941878 'i' 'unsigned int'
|   |   | `-CallExpr 0x12d946100 <col:19, col:55> 'int'
|   |   |   |-ImplicitCastExpr 0x12d9460e8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12d946018 <col:19> 'int ()' Function 0x12d945408 'readNumber' 'int ()'
|   |   |   |-ImplicitCastExpr 0x12d946140 <col:30> 'unsigned char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12d946038 <col:30> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |   |   |-UnaryOperator 0x12d946078 <col:38, col:39> 'unsigned int *' prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x12d946058 <col:39> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |   |   |-ImplicitCastExpr 0x12d946158 <col:47> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12d946090 <col:47> 'unsigned int' lvalue Var 0x12d941740 'len' 'unsigned int'
|   |   |   `-UnaryOperator 0x12d9460d0 <col:52, col:53> 'char *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x12d9460b0 <col:53> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   |   `-IfStmt 0x12d946430 <line:44:2, line:45:24>
|   |     |-CallExpr 0x12d946298 <line:44:6, col:50> 'int'
|   |     | |-ImplicitCastExpr 0x12d946280 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x12d946190 <col:6> 'int ()' Function 0x12d944ae8 'readFixedNumber' 'int ()'
|   |     | |-ImplicitCastExpr 0x12d9462e0 <col:22> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12d9461b0 <col:22> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |     | |-UnaryOperator 0x12d9461f0 <col:30, col:31> 'unsigned int *' prefix '&' cannot overflow
|   |     | | `-DeclRefExpr 0x12d9461d0 <col:31> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x12d9462f8 <col:39> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12d946208 <col:39> 'unsigned int' lvalue Var 0x12d941740 'len' 'unsigned int'
|   |     | |-UnaryOperator 0x12d946248 <col:44, col:45> 'char *' prefix '&' cannot overflow
|   |     | | `-DeclRefExpr 0x12d946228 <col:45> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   |     | `-IntegerLiteral 0x12d946260 <col:49> 'int' 1
|   |     `-CompoundAssignOperator 0x12d946400 <line:45:6, col:24> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |       |-ArraySubscriptExpr 0x12d9463c0 <col:6, col:19> '<dependent type>' contains-errors lvalue
|   |       | |-ImplicitCastExpr 0x12d946390 <col:6, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |       | | `-RecoveryExpr 0x12d946348 <col:6, col:12> '<dependent type>' contains-errors lvalue
|   |       | |   `-DeclRefExpr 0x12d946310 <col:6> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |       | `-ImplicitCastExpr 0x12d9463a8 <col:18> 'unsigned int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x12d946370 <col:18> 'unsigned int' lvalue Var 0x12d941878 'i' 'unsigned int'
|   |       `-IntegerLiteral 0x12d9463e0 <col:24> 'int' 32768
|   |-IfStmt 0x12d9465a8 <line:47:5, line:50:5>
|   | |-UnaryOperator 0x12d9464e0 <line:47:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12d9464c8 <col:10> 'char' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d9464a8 <col:10> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   | `-CompoundStmt 0x12d946590 <col:14, line:50:5>
|   |   `-CallExpr 0x12d946550 <line:48:2, col:18> 'int'
|   |     |-ImplicitCastExpr 0x12d946538 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d9464f8 <col:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |     `-ImplicitCastExpr 0x12d946578 <col:13> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x12d946518 <col:13> 'char[4]' lvalue "STR"
|   |-IfStmt 0x12d946848 <line:51:5, line:54:5>
|   | |-BinaryOperator 0x12d9466a0 <line:51:9, col:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x12d946688 <col:9, col:22> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x12d946670 <col:9, col:22> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x12d946638 <col:9, col:22> 'unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x12d946608 <col:9> 'unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12d9465c8 <col:9> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   | | |     `-ImplicitCastExpr 0x12d946620 <col:16> 'unsigned int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x12d9465e8 <col:16> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   | | `-CharacterLiteral 0x12d946658 <col:27> 'int' 70
|   | `-CompoundStmt 0x12d946830 <col:32, line:54:5>
|   |   `-CallExpr 0x12d9467a8 <line:52:2, col:34> 'int'
|   |     |-ImplicitCastExpr 0x12d946790 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d9466c0 <col:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |     |-ImplicitCastExpr 0x12d9467d8 <col:13> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x12d9466e0 <col:13> 'char[4]' lvalue "STR"
|   |     `-ImplicitCastExpr 0x12d946818 <col:20, col:33> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x12d946800 <col:20, col:33> 'unsigned char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x12d946770 <col:20, col:33> 'unsigned char' lvalue
|   |           |-ImplicitCastExpr 0x12d946740 <col:20> 'unsigned char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x12d946700 <col:20> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |           `-ImplicitCastExpr 0x12d946758 <col:27> 'unsigned int' <LValueToRValue>
|   |             `-DeclRefExpr 0x12d946720 <col:27> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |-UnaryOperator 0x12d946888 <line:55:5, col:11> 'unsigned int' postfix '++'
|   | `-DeclRefExpr 0x12d946868 <col:5> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |-BinaryOperator 0x12d946a58 <line:56:5, col:58> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d9468d8 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d9468a0 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-CallExpr 0x12d9469e8 <col:22, col:58> 'int'
|   |   |-ImplicitCastExpr 0x12d9469d0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12d946900 <col:22> 'int ()' Function 0x12d945408 'readNumber' 'int ()'
|   |   |-ImplicitCastExpr 0x12d946a28 <col:33> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d946920 <col:33> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |   |-UnaryOperator 0x12d946960 <col:41, col:42> 'unsigned int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x12d946940 <col:42> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |   |-ImplicitCastExpr 0x12d946a40 <col:50> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d946978 <col:50> 'unsigned int' lvalue Var 0x12d941740 'len' 'unsigned int'
|   |   `-UnaryOperator 0x12d9469b8 <col:55, col:56> 'char *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x12d946998 <col:56> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   |-IfStmt 0x12d946b78 <line:57:5, line:60:5>
|   | |-UnaryOperator 0x12d946ab0 <line:57:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12d946a98 <col:10> 'char' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d946a78 <col:10> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   | `-CompoundStmt 0x12d946b60 <col:14, line:60:5>
|   |   `-CallExpr 0x12d946b20 <line:58:2, col:18> 'int'
|   |     |-ImplicitCastExpr 0x12d946b08 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d946ac8 <col:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |     `-ImplicitCastExpr 0x12d946b48 <col:13> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x12d946ae8 <col:13> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x12d946cd8 <line:61:5, col:45> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d946bd0 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d946b98 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-BinaryOperator 0x12d946cb8 <col:23, col:45> '<dependent type>' contains-errors '+'
|   |   |-RecoveryExpr 0x12d946c30 <col:23, col:29> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12d946bf8 <col:23> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |   `-RecoveryExpr 0x12d946c90 <col:39, col:45> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12d946c58 <col:39> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |-BinaryOperator 0x12d946d78 <line:62:5, col:22> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d946d30 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d946cf8 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-IntegerLiteral 0x12d946d58 <col:22> 'int' 0
|   |-BinaryOperator 0x12d946e18 <line:63:5, col:24> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d946dd0 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d946d98 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-IntegerLiteral 0x12d946df8 <col:24> 'int' 0
|   |-BinaryOperator 0x12d947018 <line:64:5, col:72> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d946e70 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d946e38 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-CallExpr 0x12d946fe8 <col:22, col:72> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d946e98 <col:22> 'int ()' Function 0x12d945a10 'cli_calloc' 'int ()'
|   |   |-RecoveryExpr 0x12d946ef0 <col:33, col:39> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12d946eb8 <col:33> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |   `-UnaryExprOrTypeTraitExpr 0x12d946fc8 <col:49, col:71> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x12d946fa8 <col:55, col:71> '<dependent type>' contains-errors
|   |       `-UnaryOperator 0x12d946f90 <col:56, col:63> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x12d946f78 <col:57, col:63> '<dependent type>' contains-errors <LValueToRValue>
|   |           `-RecoveryExpr 0x12d946f50 <col:57, col:63> '<dependent type>' contains-errors lvalue
|   |             `-DeclRefExpr 0x12d946f18 <col:57> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *' non_odr_use_unevaluated
|   |-IfStmt 0x12d947178 <line:65:5, line:68:5>
|   | |-UnaryOperator 0x12d9470b0 <line:65:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12d947098 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12d947070 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12d947038 <col:10> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-CompoundStmt 0x12d947160 <col:26, line:68:5>
|   |   `-CallExpr 0x12d947120 <line:66:2, col:18> 'int'
|   |     |-ImplicitCastExpr 0x12d947108 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d9470c8 <col:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |     `-ImplicitCastExpr 0x12d947148 <col:13> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x12d9470e8 <col:13> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x12d947350 <line:69:5, col:55> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d9471d0 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d947198 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-CallExpr 0x12d9472e0 <col:19, col:55> 'int'
|   |   |-ImplicitCastExpr 0x12d9472c8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12d9471f8 <col:19> 'int ()' Function 0x12d945408 'readNumber' 'int ()'
|   |   |-ImplicitCastExpr 0x12d947320 <col:30> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d947218 <col:30> 'unsigned char *' lvalue ParmVar 0x12d929178 'buffer' 'unsigned char *'
|   |   |-UnaryOperator 0x12d947258 <col:38, col:39> 'unsigned int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x12d947238 <col:39> 'unsigned int' lvalue Var 0x12d9416c0 'offset' 'unsigned int'
|   |   |-ImplicitCastExpr 0x12d947338 <col:47> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12d947270 <col:47> 'unsigned int' lvalue Var 0x12d941740 'len' 'unsigned int'
|   |   `-UnaryOperator 0x12d9472b0 <col:52, col:53> 'char *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x12d947290 <col:53> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   |-IfStmt 0x12d947470 <line:70:5, line:73:5>
|   | |-UnaryOperator 0x12d9473a8 <line:70:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12d947390 <col:10> 'char' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d947370 <col:10> 'char' lvalue Var 0x12d9415f0 'ok' 'char'
|   | `-CompoundStmt 0x12d947458 <col:14, line:73:5>
|   |   `-CallExpr 0x12d947418 <line:71:2, col:18> 'int'
|   |     |-ImplicitCastExpr 0x12d947400 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d9473c0 <col:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|   |     `-ImplicitCastExpr 0x12d947440 <col:13> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x12d9473e0 <col:13> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x12d947670 <line:74:5, col:57> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d9474c8 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d947490 <col:5> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   | `-CallExpr 0x12d947640 <col:16, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d9474f0 <col:16> 'int ()' Function 0x12d945a10 'cli_calloc' 'int ()'
|   |   |-RecoveryExpr 0x12d947548 <col:27, col:33> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12d947510 <col:27> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|   |   `-UnaryExprOrTypeTraitExpr 0x12d947620 <col:40, col:56> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x12d947600 <col:46, col:56> '<dependent type>' contains-errors
|   |       `-UnaryOperator 0x12d9475e8 <col:47, col:54> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x12d9475d0 <col:48, col:54> '<dependent type>' contains-errors <LValueToRValue>
|   |           `-RecoveryExpr 0x12d9475a8 <col:48, col:54> '<dependent type>' contains-errors lvalue
|   |             `-DeclRefExpr 0x12d947570 <col:48> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *' non_odr_use_unevaluated
|   `-IfStmt 0x12d9477d0 <line:75:5, line:78:5>
|     |-UnaryOperator 0x12d947708 <line:75:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x12d9476f0 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
|     |   `-RecoveryExpr 0x12d9476c8 <col:10, col:16> '<dependent type>' contains-errors lvalue
|     |     `-DeclRefExpr 0x12d947690 <col:10> 'struct cli_bc_func *' lvalue Var 0x12d941a88 'func' 'struct cli_bc_func *'
|     `-CompoundStmt 0x12d9477b8 <col:20, line:78:5>
|       `-CallExpr 0x12d947778 <line:76:2, col:18> 'int'
|         |-ImplicitCastExpr 0x12d947760 <col:2> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x12d947720 <col:2> 'int ()' Function 0x12d941c38 'cli_errmsg' 'int ()'
|         `-ImplicitCastExpr 0x12d9477a0 <col:13> 'char *' <ArrayToPointerDecay>
|           `-StringLiteral 0x12d947740 <col:13> 'char[4]' lvalue "STR"
`-FunctionDecl 0x12d942038 <line:13:11> col:11 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x12d942138 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12d9420e0 <<invalid sloc>> Implicit 902
