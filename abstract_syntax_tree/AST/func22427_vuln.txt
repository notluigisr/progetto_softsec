TranslationUnitDecl 0x158038808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1580396b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158038dd0 '__int128'
|-TypedefDecl 0x158039728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158038df0 'unsigned __int128'
|-TypedefDecl 0x14f81d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f81d600 'struct __NSConstantString_tag'
|   `-Record 0x158039780 '__NSConstantString_tag'
|-TypedefDecl 0x14f81d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158038f90 '__SVInt8_t'
|-TypedefDecl 0x14f81d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158038fb0 '__SVInt16_t'
|-TypedefDecl 0x14f81d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158038fd0 '__SVInt32_t'
|-TypedefDecl 0x14f81d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158038ff0 '__SVInt64_t'
|-TypedefDecl 0x14f81da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158039010 '__SVUint8_t'
|-TypedefDecl 0x14f81daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158039030 '__SVUint16_t'
|-TypedefDecl 0x14f81db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158039050 '__SVUint32_t'
|-TypedefDecl 0x14f81db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158039070 '__SVUint64_t'
|-TypedefDecl 0x14f81dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158039090 '__SVFloat16_t'
|-TypedefDecl 0x14f81dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1580390b0 '__SVFloat32_t'
|-TypedefDecl 0x14f81dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1580390d0 '__SVFloat64_t'
|-TypedefDecl 0x14f81dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1580390f0 '__SVBfloat16_t'
|-TypedefDecl 0x14f81dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158039110 '__clang_svint8x2_t'
|-TypedefDecl 0x14f81dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158039130 '__clang_svint16x2_t'
|-TypedefDecl 0x14f81de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158039150 '__clang_svint32x2_t'
|-TypedefDecl 0x14f81deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158039170 '__clang_svint64x2_t'
|-TypedefDecl 0x14f81df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158039190 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f81df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1580391b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f81dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1580391d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f81e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1580391f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f81e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158039210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f81e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158039230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f81e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158039250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f81e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158039270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f81e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158039290 '__clang_svint8x3_t'
|-TypedefDecl 0x14f81e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1580392b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f81e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1580392d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f81e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1580392f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f81e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158039310 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f81e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158039330 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f81e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158039350 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f81e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158039370 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f81e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158039390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f81ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1580393b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f81ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1580393d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f81ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1580393f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f81eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158039410 '__clang_svint8x4_t'
|-TypedefDecl 0x14f81eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158039430 '__clang_svint16x4_t'
|-TypedefDecl 0x14f81ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158039450 '__clang_svint32x4_t'
|-TypedefDecl 0x14f81ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158039470 '__clang_svint64x4_t'
|-TypedefDecl 0x14f81ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158039490 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f81ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1580394b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f81eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1580394d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f81ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1580394f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f81ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158039510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f81eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158039530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f81ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158039550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f81efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158039570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f81f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158039590 '__SVBool_t'
|-TypedefDecl 0x14f81f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1580395b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f81f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1580395d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f81f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1580395f0 '__SVCount_t'
|-TypedefDecl 0x14f81f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f81f1b0 'char *'
|   `-BuiltinType 0x1580388b0 'char'
|-TypedefDecl 0x14f81f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f81f1b0 'char *'
|   `-BuiltinType 0x1580388b0 'char'
`-FunctionDecl 0x14f81f6c8 <dataset_diviso_filec/func22427_vuln.c:1:1, line:17:1> line:1:1 invalid iterate_rc4 'int (unsigned char *, int, unsigned char *, int, int, int)'
  |-ParmVarDecl 0x14f81f308 <col:13, col:28> col:28 used data 'unsigned char *'
  |-ParmVarDecl 0x14f81f388 <col:34, col:38> col:38 used data_len 'int'
  |-ParmVarDecl 0x14f81f408 <line:2:6, col:21> col:21 used okey 'unsigned char *'
  |-ParmVarDecl 0x14f81f488 <col:27, col:31> col:31 used key_len 'int'
  |-ParmVarDecl 0x14f81f508 <line:3:6, col:10> col:10 used iterations 'int'
  |-ParmVarDecl 0x14f81f5a0 <col:22, col:27> col:27 invalid reverse 'int'
  `-CompoundStmt 0x158105e58 <line:4:1, line:17:1>
    |-DeclStmt 0x14f81f858 <line:5:5, col:30>
    | `-VarDecl 0x14f81f7b8 <col:5, col:26> col:20 used key 'unsigned char *' cinit
    |   `-RecoveryExpr 0x14f81f838 <col:26> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x158105e20 <line:6:5, line:15:5>
      |-DeclStmt 0x14f81f930 <line:6:10, col:19>
      | `-VarDecl 0x14f81f8a8 <col:10, col:18> col:14 used i 'int' cinit
      |   `-IntegerLiteral 0x14f81f910 <col:18> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14f81f9b8 <col:21, col:25> 'int' '<'
      | |-ImplicitCastExpr 0x14f81f988 <col:21> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14f81f948 <col:21> 'int' lvalue Var 0x14f81f8a8 'i' 'int'
      | `-ImplicitCastExpr 0x14f81f9a0 <col:25> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x14f81f968 <col:25> 'int' lvalue ParmVar 0x14f81f508 'iterations' 'int'
      |-UnaryOperator 0x158105800 <col:37, col:39> 'int' prefix '++'
      | `-DeclRefExpr 0x14f81f9d8 <col:39> 'int' lvalue Var 0x14f81f8a8 'i' 'int'
      `-CompoundStmt 0x158105e00 <line:7:5, line:15:5>
        |-DeclStmt 0x1581059f8 <line:8:2, col:58>
        | `-VarDecl 0x158105830 <col:2, col:57> col:12 used xor_value 'const int' cinit
        |   `-ParenExpr 0x1581059d8 <col:24, col:57> '<dependent type>' contains-errors
        |     `-ConditionalOperator 0x1581059a8 <col:25, col:56> '<dependent type>' contains-errors
        |       |-RecoveryExpr 0x158105898 <col:25> '<dependent type>' contains-errors lvalue
        |       |-BinaryOperator 0x158105968 <col:35, col:52> 'int' '-'
        |       | |-BinaryOperator 0x158105910 <col:35, col:48> 'int' '-'
        |       | | |-ImplicitCastExpr 0x1581058f8 <col:35> 'int' <LValueToRValue>
        |       | | | `-DeclRefExpr 0x1581058b8 <col:35> 'int' lvalue ParmVar 0x14f81f508 'iterations' 'int'
        |       | | `-IntegerLiteral 0x1581058d8 <col:48> 'int' 1
        |       | `-ImplicitCastExpr 0x158105950 <col:52> 'int' <LValueToRValue>
        |       |   `-DeclRefExpr 0x158105930 <col:52> 'int' lvalue Var 0x14f81f8a8 'i' 'int'
        |       `-DeclRefExpr 0x158105988 <col:56> 'int' lvalue Var 0x14f81f8a8 'i' 'int'
        `-ForStmt 0x158105d88 <line:9:2, line:12:2>
          |-DeclStmt 0x158105ab0 <line:9:7, col:16>
          | `-VarDecl 0x158105a28 <col:7, col:15> col:11 used j 'int' cinit
          |   `-IntegerLiteral 0x158105a90 <col:15> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x158105b38 <col:18, col:22> 'int' '<'
          | |-ImplicitCastExpr 0x158105b08 <col:18> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x158105ac8 <col:18> 'int' lvalue Var 0x158105a28 'j' 'int'
          | `-ImplicitCastExpr 0x158105b20 <col:22> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x158105ae8 <col:22> 'int' lvalue ParmVar 0x14f81f488 'key_len' 'int'
          |-UnaryOperator 0x158105b78 <col:31, col:33> 'int' prefix '++'
          | `-DeclRefExpr 0x158105b58 <col:33> 'int' lvalue Var 0x158105a28 'j' 'int'
          `-CompoundStmt 0x158105d70 <line:10:2, line:12:2>
            `-BinaryOperator 0x158105d50 <line:11:6, col:25> 'unsigned char' contains-errors '='
              |-ArraySubscriptExpr 0x158105c00 <col:6, col:11> 'unsigned char' contains-errors lvalue
              | |-ImplicitCastExpr 0x158105bd0 <col:6> 'unsigned char *' contains-errors <LValueToRValue>
              | | `-DeclRefExpr 0x158105b90 <col:6> 'unsigned char *' contains-errors lvalue Var 0x14f81f7b8 'key' 'unsigned char *'
              | `-ImplicitCastExpr 0x158105be8 <col:10> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x158105bb0 <col:10> 'int' lvalue Var 0x158105a28 'j' 'int'
              `-ImplicitCastExpr 0x158105d38 <col:15, col:25> 'unsigned char' contains-errors <IntegralCast>
                `-BinaryOperator 0x158105d18 <col:15, col:25> 'int' contains-errors '^'
                  |-ImplicitCastExpr 0x158105ce8 <col:15, col:21> 'int' <IntegralCast>
                  | `-ImplicitCastExpr 0x158105cd0 <col:15, col:21> 'unsigned char' <LValueToRValue>
                  |   `-ArraySubscriptExpr 0x158105c90 <col:15, col:21> 'unsigned char' lvalue
                  |     |-ImplicitCastExpr 0x158105c60 <col:15> 'unsigned char *' <LValueToRValue>
                  |     | `-DeclRefExpr 0x158105c20 <col:15> 'unsigned char *' lvalue ParmVar 0x14f81f408 'okey' 'unsigned char *'
                  |     `-ImplicitCastExpr 0x158105c78 <col:20> 'int' <LValueToRValue>
                  |       `-DeclRefExpr 0x158105c40 <col:20> 'int' lvalue Var 0x158105a28 'j' 'int'
                  `-ImplicitCastExpr 0x158105d00 <col:25> 'int' contains-errors <LValueToRValue>
                    `-DeclRefExpr 0x158105cb0 <col:25> 'const int' contains-errors lvalue Var 0x158105830 'xor_value' 'const int'
