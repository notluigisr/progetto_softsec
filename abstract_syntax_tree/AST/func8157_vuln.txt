TranslationUnitDecl 0x12a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a055bd0 '__int128'
|-TypedefDecl 0x12a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a055bf0 'unsigned __int128'
|-TypedefDecl 0x12a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a126000 'struct __NSConstantString_tag'
|   `-Record 0x12a056580 '__NSConstantString_tag'
|-TypedefDecl 0x12a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a055d90 '__SVInt8_t'
|-TypedefDecl 0x12a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a055db0 '__SVInt16_t'
|-TypedefDecl 0x12a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a055dd0 '__SVInt32_t'
|-TypedefDecl 0x12a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a055df0 '__SVInt64_t'
|-TypedefDecl 0x12a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a055e10 '__SVUint8_t'
|-TypedefDecl 0x12a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a055e30 '__SVUint16_t'
|-TypedefDecl 0x12a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a055e50 '__SVUint32_t'
|-TypedefDecl 0x12a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a055e70 '__SVUint64_t'
|-TypedefDecl 0x12a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a055e90 '__SVFloat16_t'
|-TypedefDecl 0x12a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a056390 '__SVBool_t'
|-TypedefDecl 0x12a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a0563f0 '__SVCount_t'
|-TypedefDecl 0x12a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a127fb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-TypedefDecl 0x12a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a127fb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-FunctionDecl 0x12a128370 <dataset_diviso_filec/func8157_vuln.c:1:1, line:32:1> line:1:13 invalid _imap_quote_string 'void (char *, int, const char *, const char *)' static
| |-ParmVarDecl 0x12a1280d8 <col:33, col:39> col:39 used dest 'char *'
| |-ParmVarDecl 0x12a128170 <col:45, col:52> col:52 referenced invalid dlen 'int'
| |-ParmVarDecl 0x12a1281f0 <col:58, col:70> col:70 used src 'const char *'
| |-ParmVarDecl 0x12a128270 <line:2:33, col:45> col:45 used to_quote 'const char *'
| `-CompoundStmt 0x12a1425f8 <line:3:1, line:32:1>
|   |-DeclStmt 0x12a1284b8 <line:4:3, col:11>
|   | `-VarDecl 0x12a128450 <col:3, col:9> col:9 used pt 'char *'
|   |-DeclStmt 0x12a128550 <line:5:3, col:16>
|   | `-VarDecl 0x12a1284e8 <col:3, col:15> col:15 used s 'const char *'
|   |-BinaryOperator 0x12a1285c0 <line:7:3, col:8> 'char *' '='
|   | |-DeclRefExpr 0x12a128568 <col:3> 'char *' lvalue Var 0x12a128450 'pt' 'char *'
|   | `-ImplicitCastExpr 0x12a1285a8 <col:8> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12a128588 <col:8> 'char *' lvalue ParmVar 0x12a1280d8 'dest' 'char *'
|   |-BinaryOperator 0x12a128638 <line:8:3, col:8> 'const char *' '='
|   | |-DeclRefExpr 0x12a1285e0 <col:3> 'const char *' lvalue Var 0x12a1284e8 's' 'const char *'
|   | `-ImplicitCastExpr 0x12a128620 <col:8> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12a128600 <col:8> 'const char *' lvalue ParmVar 0x12a1281f0 'src' 'const char *'
|   |-BinaryOperator 0x12a1286d8 <line:10:3, col:11> 'char' '='
|   | |-UnaryOperator 0x12a128690 <col:3, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x12a128678 <col:4, col:6> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x12a128658 <col:4> 'char *' lvalue Var 0x12a128450 'pt' 'char *'
|   | `-ImplicitCastExpr 0x12a1286c0 <col:11> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x12a1286a8 <col:11> 'int' 34
|   |-CompoundAssignOperator 0x12a128760 <line:12:3, col:11> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-RecoveryExpr 0x12a128718 <col:3> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12a1286f8 <col:3> 'int' lvalue ParmVar 0x12a128170 'dlen' 'int'
|   | `-IntegerLiteral 0x12a128740 <col:11> 'int' 2
|   |-ForStmt 0x12a142478 <line:14:3, line:29:3>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12a141800 <line:14:10, col:16> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x12a1287c8 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x12a1287b0 <col:11> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12a128790 <col:11> 'const char *' lvalue Var 0x12a1284e8 's' 'const char *'
|   | | `-RecoveryExpr 0x12a1287e0 <col:16> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x12a141840 <col:22, col:23> 'const char *' postfix '++'
|   | | `-DeclRefExpr 0x12a141820 <col:22> 'const char *' lvalue Var 0x12a1284e8 's' 'const char *'
|   | `-CompoundStmt 0x12a142460 <line:15:3, line:29:3>
|   |   `-IfStmt 0x12a142430 <line:16:5, line:28:5> has_else
|   |     |-CallExpr 0x12a141fa8 <line:16:9, col:29> 'char *'
|   |     | |-ImplicitCastExpr 0x12a141f90 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x12a141ea0 <col:9> 'char *(const char *, int)' Function 0x12a141cc0 'strchr' 'char *(const char *, int)'
|   |     | |-ImplicitCastExpr 0x12a141fd8 <col:17> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12a141ec0 <col:17> 'const char *' lvalue ParmVar 0x12a128270 'to_quote' 'const char *'
|   |     | `-ImplicitCastExpr 0x12a142008 <col:27, col:28> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x12a141ff0 <col:27, col:28> 'char' <LValueToRValue>
|   |     |     `-UnaryOperator 0x12a141f18 <col:27, col:28> 'const char' lvalue prefix '*' cannot overflow
|   |     |       `-ImplicitCastExpr 0x12a141f00 <col:28> 'const char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x12a141ee0 <col:28> 'const char *' lvalue Var 0x12a1284e8 's' 'const char *'
|   |     |-CompoundStmt 0x12a1422a8 <line:17:5, line:23:5>
|   |     | |-CompoundAssignOperator 0x12a142088 <line:18:7, col:15> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     | | |-RecoveryExpr 0x12a142040 <col:7> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x12a142020 <col:7> 'int' lvalue ParmVar 0x12a128170 'dlen' 'int'
|   |     | | `-IntegerLiteral 0x12a142068 <col:15> 'int' 2
|   |     | |-IfStmt 0x12a142110 <line:19:7, line:20:2>
|   |     | | |-UnaryOperator 0x12a1420f0 <line:19:11, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x12a1420d8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | |   `-RecoveryExpr 0x12a1420b8 <col:12> '<dependent type>' contains-errors lvalue
|   |     | | `-BreakStmt 0x12a142108 <line:20:2>
|   |     | |-BinaryOperator 0x12a1421b0 <line:21:7, col:15> 'char' '='
|   |     | | |-UnaryOperator 0x12a142168 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x12a142150 <col:8, col:10> 'char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x12a142130 <col:8> 'char *' lvalue Var 0x12a128450 'pt' 'char *'
|   |     | | `-ImplicitCastExpr 0x12a142198 <col:15> 'char' <IntegralCast>
|   |     | |   `-CharacterLiteral 0x12a142180 <col:15> 'int' 92
|   |     | `-BinaryOperator 0x12a142288 <line:22:7, col:16> 'char' '='
|   |     |   |-UnaryOperator 0x12a142208 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |     |   | `-UnaryOperator 0x12a1421f0 <col:8, col:10> 'char *' postfix '++'
|   |     |   |   `-DeclRefExpr 0x12a1421d0 <col:8> 'char *' lvalue Var 0x12a128450 'pt' 'char *'
|   |     |   `-ImplicitCastExpr 0x12a142270 <col:15, col:16> 'char' <LValueToRValue>
|   |     |     `-UnaryOperator 0x12a142258 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |     |       `-ImplicitCastExpr 0x12a142240 <col:16> 'const char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x12a142220 <col:16> 'const char *' lvalue Var 0x12a1284e8 's' 'const char *'
|   |     `-CompoundStmt 0x12a142410 <line:25:5, line:28:5>
|   |       |-BinaryOperator 0x12a142390 <line:26:7, col:16> 'char' '='
|   |       | |-UnaryOperator 0x12a142310 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |       | | `-UnaryOperator 0x12a1422f8 <col:8, col:10> 'char *' postfix '++'
|   |       | |   `-DeclRefExpr 0x12a1422d8 <col:8> 'char *' lvalue Var 0x12a128450 'pt' 'char *'
|   |       | `-ImplicitCastExpr 0x12a142378 <col:15, col:16> 'char' <LValueToRValue>
|   |       |   `-UnaryOperator 0x12a142360 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |       |     `-ImplicitCastExpr 0x12a142348 <col:16> 'const char *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x12a142328 <col:16> 'const char *' lvalue Var 0x12a1284e8 's' 'const char *'
|   |       `-UnaryOperator 0x12a1423f8 <line:27:7, col:11> '<dependent type>' contains-errors postfix '--' cannot overflow
|   |         `-RecoveryExpr 0x12a1423d0 <col:7> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x12a1423b0 <col:7> 'int' lvalue ParmVar 0x12a128170 'dlen' 'int'
|   |-BinaryOperator 0x12a142530 <line:30:3, col:11> 'char' '='
|   | |-UnaryOperator 0x12a1424e8 <col:3, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x12a1424d0 <col:4, col:6> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x12a1424b0 <col:4> 'char *' lvalue Var 0x12a128450 'pt' 'char *'
|   | `-ImplicitCastExpr 0x12a142518 <col:11> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x12a142500 <col:11> 'int' 34
|   `-BinaryOperator 0x12a1425d8 <line:31:3, col:9> 'char' '='
|     |-UnaryOperator 0x12a142588 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x12a142570 <col:4> 'char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x12a142550 <col:4> 'char *' lvalue Var 0x12a128450 'pt' 'char *'
|     `-ImplicitCastExpr 0x12a1425c0 <col:9> 'char' <IntegralCast>
|       `-IntegerLiteral 0x12a1425a0 <col:9> 'int' 0
`-FunctionDecl 0x12a141cc0 <line:16:9> col:9 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x12a141dc0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12a141e28 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12a141d68 <<invalid sloc>> Implicit 893
