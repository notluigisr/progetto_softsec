TranslationUnitDecl 0x13f032408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f0332b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f0329d0 '__int128'
|-TypedefDecl 0x13f033328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f0329f0 'unsigned __int128'
|-TypedefDecl 0x13f0afa30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f0af800 'struct __NSConstantString_tag'
|   `-Record 0x13f033380 '__NSConstantString_tag'
|-TypedefDecl 0x13f0afa98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f032b90 '__SVInt8_t'
|-TypedefDecl 0x13f0afb00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f032bb0 '__SVInt16_t'
|-TypedefDecl 0x13f0afb68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f032bd0 '__SVInt32_t'
|-TypedefDecl 0x13f0afbd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f032bf0 '__SVInt64_t'
|-TypedefDecl 0x13f0afc38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f032c10 '__SVUint8_t'
|-TypedefDecl 0x13f0afca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f032c30 '__SVUint16_t'
|-TypedefDecl 0x13f0afd08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f032c50 '__SVUint32_t'
|-TypedefDecl 0x13f0afd70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f032c70 '__SVUint64_t'
|-TypedefDecl 0x13f0afdd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f032c90 '__SVFloat16_t'
|-TypedefDecl 0x13f0afe40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f032cb0 '__SVFloat32_t'
|-TypedefDecl 0x13f0afea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f032cd0 '__SVFloat64_t'
|-TypedefDecl 0x13f0aff10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f032cf0 '__SVBfloat16_t'
|-TypedefDecl 0x13f0aff78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f032d10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f0affe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f032d30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f0b0048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f032d50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f0b00b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f032d70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f0b0118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f032d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f0b0180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f032db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f0b01e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f032dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f0b0250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f032df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f0b02b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f032e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f0b0320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f032e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f0b0388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f032e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f0b03f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f032e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f0b0458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f032e90 '__clang_svint8x3_t'
|-TypedefDecl 0x13f0b04c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f032eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f0b0528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f032ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f0b0590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f032ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f0b05f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f032f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f0b0660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f032f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f0b06c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f032f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f0b0730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f032f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f0b0798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f032f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f0b1000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f032fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f0b1068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f032fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f0b10d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f032ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f0b1138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f033010 '__clang_svint8x4_t'
|-TypedefDecl 0x13f0b11a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f033030 '__clang_svint16x4_t'
|-TypedefDecl 0x13f0b1208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f033050 '__clang_svint32x4_t'
|-TypedefDecl 0x13f0b1270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f033070 '__clang_svint64x4_t'
|-TypedefDecl 0x13f0b12d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f033090 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f0b1340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f0330b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f0b13a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f0330d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f0b1410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f0330f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f0b1478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f033110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f0b14e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f033130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f0b1548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f033150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f0b15b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f033170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f0b1618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f033190 '__SVBool_t'
|-TypedefDecl 0x13f0b1680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f0331b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f0b16e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f0331d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f0b1750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f0331f0 '__SVCount_t'
|-TypedefDecl 0x13f0b17f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f0b17b0 'char *'
|   `-BuiltinType 0x13f0324b0 'char'
|-TypedefDecl 0x13f0b1868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f0b17b0 'char *'
|   `-BuiltinType 0x13f0324b0 'char'
|-FunctionDecl 0x13e032c88 <dataset_diviso_filec/func24534_nonvuln.c:1:1, line:62:1> line:1:12 referenced compat_copy_entry_from_user 'int (struct ipt_entry *, void **, unsigned int *, const char *, struct xt_table_info *, unsigned char *)' static
| |-ParmVarDecl 0x13f0b1e48 <col:40, col:58> col:58 used e 'struct ipt_entry *'
| |-ParmVarDecl 0x13f0b1ef8 <col:61, col:68> col:68 used dstptr 'void **'
| |-ParmVarDecl 0x13e032800 <line:2:2, col:16> col:16 used size 'unsigned int *'
| |-ParmVarDecl 0x13e032880 <col:22, col:34> col:34 used name 'const char *'
| |-ParmVarDecl 0x13e032a58 <line:3:2, col:24> col:24 used newinfo 'struct xt_table_info *'
| |-ParmVarDecl 0x13e032b08 <col:33, col:48> col:48 used base 'unsigned char *'
| `-CompoundStmt 0x13f0cc378 <line:4:1, line:62:1>
|   |-DeclStmt 0x13e032f98 <line:5:2, col:28>
|   | |-RecordDecl 0x13e032da8 <col:2, col:9> col:9 struct ipt_entry_target
|   | `-VarDecl 0x13e032f18 <col:2, col:27> col:27 used t 'struct ipt_entry_target *'
|   |-DeclStmt 0x13e033198 <line:6:2, col:27>
|   | |-RecordDecl 0x13e032fb0 <col:2, col:9> col:9 struct ipt_target
|   | `-VarDecl 0x13e033118 <col:2, col:21> col:21 used target 'struct ipt_target *'
|   |-DeclStmt 0x13e0332a0 <line:7:2, col:22>
|   | `-VarDecl 0x13e033238 <col:2, col:20> col:20 used de 'struct ipt_entry *'
|   |-DeclStmt 0x13e033338 <line:8:2, col:23>
|   | `-VarDecl 0x13e0332d0 <col:2, col:15> col:15 used origsize 'unsigned int'
|   |-DeclStmt 0x13e0334f0 <line:9:2, col:15>
|   | |-VarDecl 0x13e033368 <col:2, col:6> col:6 used ret 'int'
|   | |-VarDecl 0x13e0333e8 <col:2, col:11> col:11 used h 'int'
|   | `-VarDecl 0x13e033468 <col:2, col:14> col:14 used j 'int'
|   |-BinaryOperator 0x13e033548 <line:11:2, col:8> 'int' '='
|   | |-DeclRefExpr 0x13e033508 <col:2> 'int' lvalue Var 0x13e033368 'ret' 'int'
|   | `-IntegerLiteral 0x13e033528 <col:8> 'int' 0
|   |-BinaryOperator 0x13e0335f0 <line:12:2, col:14> 'unsigned int' '='
|   | |-DeclRefExpr 0x13e033568 <col:2> 'unsigned int' lvalue Var 0x13e0332d0 'origsize' 'unsigned int'
|   | `-ImplicitCastExpr 0x13e0335d8 <col:13, col:14> 'unsigned int' <LValueToRValue>
|   |   `-UnaryOperator 0x13e0335c0 <col:13, col:14> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x13e0335a8 <col:14> 'unsigned int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13e033588 <col:14> 'unsigned int *' lvalue ParmVar 0x13e032800 'size' 'unsigned int *'
|   |-BinaryOperator 0x13e0336e8 <line:13:2, col:28> 'struct ipt_entry *' '='
|   | |-DeclRefExpr 0x13e033610 <col:2> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   | `-CStyleCastExpr 0x13e0336c0 <col:7, col:28> 'struct ipt_entry *' <BitCast>
|   |   `-ImplicitCastExpr 0x13e0336a8 <col:27, col:28> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     `-UnaryOperator 0x13e033668 <col:27, col:28> 'void *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x13e033650 <col:28> 'void **' <LValueToRValue>
|   |         `-DeclRefExpr 0x13e033630 <col:28> 'void **' lvalue ParmVar 0x13f0b1ef8 'dstptr' 'void **'
|   |-BinaryOperator 0x13f857110 <line:16:2, col:6> 'int' '='
|   | |-DeclRefExpr 0x13f8570d0 <col:2> 'int' lvalue Var 0x13e033468 'j' 'int'
|   | `-IntegerLiteral 0x13f8570f0 <col:6> 'int' 0
|   |-BinaryOperator 0x13f8576b8 <line:18:2, line:19:35> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13f857278 <line:18:2> 'int' lvalue Var 0x13e033368 'ret' 'int'
|   | `-CallExpr 0x13f857658 <col:8, line:19:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13f8573c0 <line:18:8> 'int ()' Function 0x13f857308 'IPT_MATCH_ITERATE' 'int ()'
|   |   |-DeclRefExpr 0x13f8573e0 <col:26> 'struct ipt_entry *' lvalue ParmVar 0x13f0b1e48 'e' 'struct ipt_entry *'
|   |   |-DeclRefExpr 0x13f857638 <col:29> 'int (struct ipt_entry *, void **, unsigned int *, const char *, struct xt_table_info *, unsigned char *)' Function 0x13e032c88 'compat_copy_entry_from_user' 'int (struct ipt_entry *, void **, unsigned int *, const char *, struct xt_table_info *, unsigned char *)'
|   |   |-DeclRefExpr 0x13f857418 <col:58> 'void **' lvalue ParmVar 0x13f0b1ef8 'dstptr' 'void **'
|   |   |-DeclRefExpr 0x13f857438 <col:66> 'unsigned int *' lvalue ParmVar 0x13e032800 'size' 'unsigned int *'
|   |   |-DeclRefExpr 0x13f857458 <line:19:4> 'const char *' lvalue ParmVar 0x13e032880 'name' 'const char *'
|   |   |-UnaryOperator 0x13f8574d8 <col:10, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x13f8574b0 <col:11, col:15> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x13f857478 <col:11> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   |   |-RecoveryExpr 0x13f857528 <col:19, col:23> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x13f8574f0 <col:19> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   |   `-UnaryOperator 0x13f8575a0 <col:33, col:34> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x13f857550 <col:34> 'int' lvalue Var 0x13e033468 'j' 'int'
|   |-IfStmt 0x13f857778 <line:20:2, line:21:8>
|   | |-ImplicitCastExpr 0x13f8576f8 <line:20:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13f8576d8 <col:6> 'int' lvalue Var 0x13e033368 'ret' 'int'
|   | `-GotoStmt 0x13f857760 <line:21:3, col:8> 'cleanup_matches' 0x13f857710
|   |-BinaryOperator 0x13f857958 <line:22:2, col:58> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x13f8577d0 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13f857798 <col:2> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   | `-BinaryOperator 0x13f857938 <col:22, col:58> '<dependent type>' contains-errors '-'
|   |   |-RecoveryExpr 0x13f857830 <col:22, col:25> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x13f8577f8 <col:22> 'struct ipt_entry *' lvalue ParmVar 0x13f0b1e48 'e' 'struct ipt_entry *'
|   |   `-ParenExpr 0x13f857918 <col:41, col:58> 'unsigned int'
|   |     `-BinaryOperator 0x13f8578f8 <col:42, col:54> 'unsigned int' '-'
|   |       |-ImplicitCastExpr 0x13f8578c8 <col:42> 'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13f857858 <col:42> 'unsigned int' lvalue Var 0x13e0332d0 'origsize' 'unsigned int'
|   |       `-ImplicitCastExpr 0x13f8578e0 <col:53, col:54> 'unsigned int' <LValueToRValue>
|   |         `-UnaryOperator 0x13f8578b0 <col:53, col:54> 'unsigned int' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x13f857898 <col:54> 'unsigned int *' <LValueToRValue>
|   |             `-DeclRefExpr 0x13f857878 <col:54> 'unsigned int *' lvalue ParmVar 0x13e032800 'size' 'unsigned int *'
|   |-BinaryOperator 0x13f857b60 <line:23:2, col:22> 'struct ipt_entry_target *' '='
|   | |-DeclRefExpr 0x13f857978 <col:2> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   | `-ImplicitCastExpr 0x13f857b48 <col:6, col:22> 'struct ipt_entry_target *' <IntegralToPointer>
|   |   `-CallExpr 0x13f857b08 <col:6, col:22> 'int'
|   |     |-ImplicitCastExpr 0x13f857af0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13f857a78 <col:6> 'int ()' Function 0x13f8579c0 'ipt_get_target' 'int ()'
|   |     `-ImplicitCastExpr 0x13f857b30 <col:21> 'struct ipt_entry *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13f857a98 <col:21> 'struct ipt_entry *' lvalue ParmVar 0x13f0b1e48 'e' 'struct ipt_entry *'
|   |-BinaryOperator 0x13f857c90 <line:24:2, col:23> 'struct ipt_target *' contains-errors '='
|   | |-DeclRefExpr 0x13f857b80 <col:2> 'struct ipt_target *' lvalue Var 0x13e033118 'target' 'struct ipt_target *'
|   | `-CXXDependentScopeMemberExpr 0x13f857c48 <col:11, col:23> '<dependent type>' contains-errors lvalue .target
|   |   `-CXXDependentScopeMemberExpr 0x13f857c00 <col:11, col:16> '<dependent type>' contains-errors lvalue .kernel
|   |     `-RecoveryExpr 0x13f857bd8 <col:11, col:14> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13f857ba0 <col:11> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   |-CallExpr 0x13f0ca238 <line:25:2, col:44> 'int'
|   | |-ImplicitCastExpr 0x13f0ca220 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13f857d90 <col:2> 'int ()' Function 0x13f857cd8 'xt_compat_target_from_user' 'int ()'
|   | |-ImplicitCastExpr 0x13f0ca270 <col:29> 'struct ipt_entry_target *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13f857db0 <col:29> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   | |-ImplicitCastExpr 0x13f0ca288 <col:32> 'void **' <LValueToRValue>
|   | | `-DeclRefExpr 0x13f857dd0 <col:32> 'void **' lvalue ParmVar 0x13f0b1ef8 'dstptr' 'void **'
|   | `-ImplicitCastExpr 0x13f0ca2a0 <col:40> 'unsigned int *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13f0ca200 <col:40> 'unsigned int *' lvalue ParmVar 0x13e032800 'size' 'unsigned int *'
|   |-BinaryOperator 0x13f0ca478 <line:27:2, col:54> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x13f0ca2f0 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13f0ca2b8 <col:2> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   | `-BinaryOperator 0x13f0ca458 <col:20, col:54> '<dependent type>' contains-errors '-'
|   |   |-RecoveryExpr 0x13f0ca350 <col:20, col:23> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x13f0ca318 <col:20> 'struct ipt_entry *' lvalue ParmVar 0x13f0b1e48 'e' 'struct ipt_entry *'
|   |   `-ParenExpr 0x13f0ca438 <col:37, col:54> 'unsigned int'
|   |     `-BinaryOperator 0x13f0ca418 <col:38, col:50> 'unsigned int' '-'
|   |       |-ImplicitCastExpr 0x13f0ca3e8 <col:38> 'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13f0ca378 <col:38> 'unsigned int' lvalue Var 0x13e0332d0 'origsize' 'unsigned int'
|   |       `-ImplicitCastExpr 0x13f0ca400 <col:49, col:50> 'unsigned int' <LValueToRValue>
|   |         `-UnaryOperator 0x13f0ca3d0 <col:49, col:50> 'unsigned int' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x13f0ca3b8 <col:50> 'unsigned int *' <LValueToRValue>
|   |             `-DeclRefExpr 0x13f0ca398 <col:50> 'unsigned int *' lvalue ParmVar 0x13e032800 'size' 'unsigned int *'
|   |-ForStmt 0x13f0cad28 <line:28:2, line:33:2>
|   | |-BinaryOperator 0x13f0ca4d8 <line:28:7, col:11> 'int' '='
|   | | |-DeclRefExpr 0x13f0ca498 <col:7> 'int' lvalue Var 0x13e0333e8 'h' 'int'
|   | | `-IntegerLiteral 0x13f0ca4b8 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13f0ca570 <col:14, col:18> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x13f0ca4f8 <col:14> 'int' lvalue Var 0x13e0333e8 'h' 'int'
|   | | `-RecoveryExpr 0x13f0ca550 <col:18> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x13f0ca5b0 <col:34, col:35> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13f0ca590 <col:34> 'int' lvalue Var 0x13e0333e8 'h' 'int'
|   | `-CompoundStmt 0x13f0cad08 <col:39, line:33:2>
|   |   |-IfStmt 0x13f0ca948 <line:29:3, line:30:42>
|   |   | |-BinaryOperator 0x13f0ca768 <line:29:7, col:57> 'int' contains-errors '<'
|   |   | | |-BinaryOperator 0x13f0ca678 <col:7, col:29> 'long' '-'
|   |   | | | |-CStyleCastExpr 0x13f0ca618 <col:7, col:24> 'unsigned char *' <BitCast>
|   |   | | | | `-ImplicitCastExpr 0x13f0ca600 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
|   |   | | | |   `-DeclRefExpr 0x13f0ca5c8 <col:24> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   |   | | | `-ImplicitCastExpr 0x13f0ca660 <col:29> 'unsigned char *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x13f0ca640 <col:29> 'unsigned char *' lvalue ParmVar 0x13e032b08 'base' 'unsigned char *'
|   |   | | `-ArraySubscriptExpr 0x13f0ca748 <col:36, col:57> '<dependent type>' contains-errors lvalue
|   |   | |   |-ImplicitCastExpr 0x13f0ca718 <col:36, col:45> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   | `-RecoveryExpr 0x13f0ca6d0 <col:36, col:45> '<dependent type>' contains-errors lvalue
|   |   | |   |   `-DeclRefExpr 0x13f0ca698 <col:36> 'struct xt_table_info *' lvalue ParmVar 0x13e032a58 'newinfo' 'struct xt_table_info *'
|   |   | |   `-ImplicitCastExpr 0x13f0ca730 <col:56> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x13f0ca6f8 <col:56> 'int' lvalue Var 0x13e0333e8 'h' 'int'
|   |   | `-CompoundAssignOperator 0x13f0ca918 <line:30:4, col:42> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   |-ArraySubscriptExpr 0x13f0ca838 <col:4, col:25> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x13f0ca808 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-RecoveryExpr 0x13f0ca7c0 <col:4, col:13> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x13f0ca788 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x13e032a58 'newinfo' 'struct xt_table_info *'
|   |   |   | `-ImplicitCastExpr 0x13f0ca820 <col:24> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x13f0ca7e8 <col:24> 'int' lvalue Var 0x13e0333e8 'h' 'int'
|   |   |   `-BinaryOperator 0x13f0ca8f8 <col:30, col:42> 'unsigned int' '-'
|   |   |     |-ImplicitCastExpr 0x13f0ca8c8 <col:30> 'unsigned int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x13f0ca858 <col:30> 'unsigned int' lvalue Var 0x13e0332d0 'origsize' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x13f0ca8e0 <col:41, col:42> 'unsigned int' <LValueToRValue>
|   |   |       `-UnaryOperator 0x13f0ca8b0 <col:41, col:42> 'unsigned int' lvalue prefix '*' cannot overflow
|   |   |         `-ImplicitCastExpr 0x13f0ca898 <col:42> 'unsigned int *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x13f0ca878 <col:42> 'unsigned int *' lvalue ParmVar 0x13e032800 'size' 'unsigned int *'
|   |   `-IfStmt 0x13f0cace8 <line:31:3, line:32:41>
|   |     |-BinaryOperator 0x13f0cab08 <line:31:7, col:56> 'int' contains-errors '<'
|   |     | |-BinaryOperator 0x13f0caa18 <col:7, col:29> 'long' '-'
|   |     | | |-CStyleCastExpr 0x13f0ca9b8 <col:7, col:24> 'unsigned char *' <BitCast>
|   |     | | | `-ImplicitCastExpr 0x13f0ca9a0 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
|   |     | | |   `-DeclRefExpr 0x13f0ca968 <col:24> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   |     | | `-ImplicitCastExpr 0x13f0caa00 <col:29> 'unsigned char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x13f0ca9e0 <col:29> 'unsigned char *' lvalue ParmVar 0x13e032b08 'base' 'unsigned char *'
|   |     | `-ArraySubscriptExpr 0x13f0caae8 <col:36, col:56> '<dependent type>' contains-errors lvalue
|   |     |   |-ImplicitCastExpr 0x13f0caab8 <col:36, col:45> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   | `-RecoveryExpr 0x13f0caa70 <col:36, col:45> '<dependent type>' contains-errors lvalue
|   |     |   |   `-DeclRefExpr 0x13f0caa38 <col:36> 'struct xt_table_info *' lvalue ParmVar 0x13e032a58 'newinfo' 'struct xt_table_info *'
|   |     |   `-ImplicitCastExpr 0x13f0caad0 <col:55> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x13f0caa98 <col:55> 'int' lvalue Var 0x13e0333e8 'h' 'int'
|   |     `-CompoundAssignOperator 0x13f0cacb8 <line:32:4, col:41> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |       |-ArraySubscriptExpr 0x13f0cabd8 <col:4, col:24> '<dependent type>' contains-errors lvalue
|   |       | |-ImplicitCastExpr 0x13f0caba8 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |       | | `-RecoveryExpr 0x13f0cab60 <col:4, col:13> '<dependent type>' contains-errors lvalue
|   |       | |   `-DeclRefExpr 0x13f0cab28 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x13e032a58 'newinfo' 'struct xt_table_info *'
|   |       | `-ImplicitCastExpr 0x13f0cabc0 <col:23> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13f0cab88 <col:23> 'int' lvalue Var 0x13e0333e8 'h' 'int'
|   |       `-BinaryOperator 0x13f0cac98 <col:29, col:41> 'unsigned int' '-'
|   |         |-ImplicitCastExpr 0x13f0cac68 <col:29> 'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x13f0cabf8 <col:29> 'unsigned int' lvalue Var 0x13e0332d0 'origsize' 'unsigned int'
|   |         `-ImplicitCastExpr 0x13f0cac80 <col:40, col:41> 'unsigned int' <LValueToRValue>
|   |           `-UnaryOperator 0x13f0cac50 <col:40, col:41> 'unsigned int' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x13f0cac38 <col:41> 'unsigned int *' <LValueToRValue>
|   |               `-DeclRefExpr 0x13f0cac18 <col:41> 'unsigned int *' lvalue ParmVar 0x13e032800 'size' 'unsigned int *'
|   |-BinaryOperator 0x13f0cae30 <line:35:2, col:23> 'struct ipt_entry_target *' '='
|   | |-DeclRefExpr 0x13f0cad60 <col:2> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   | `-ImplicitCastExpr 0x13f0cae18 <col:6, col:23> 'struct ipt_entry_target *' <IntegralToPointer>
|   |   `-CallExpr 0x13f0cadd8 <col:6, col:23> 'int'
|   |     |-ImplicitCastExpr 0x13f0cadc0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13f0cad80 <col:6> 'int ()' Function 0x13f8579c0 'ipt_get_target' 'int ()'
|   |     `-ImplicitCastExpr 0x13f0cae00 <col:21> 'struct ipt_entry *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13f0cada0 <col:21> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   |-BinaryOperator 0x13f0caf60 <line:36:2, col:23> 'struct ipt_target *' contains-errors '='
|   | |-DeclRefExpr 0x13f0cae50 <col:2> 'struct ipt_target *' lvalue Var 0x13e033118 'target' 'struct ipt_target *'
|   | `-CXXDependentScopeMemberExpr 0x13f0caf18 <col:11, col:23> '<dependent type>' contains-errors lvalue .target
|   |   `-CXXDependentScopeMemberExpr 0x13f0caed0 <col:11, col:16> '<dependent type>' contains-errors lvalue .kernel
|   |     `-RecoveryExpr 0x13f0caea8 <col:11, col:14> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13f0cae70 <col:11> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   |-IfStmt 0x13f0cb450 <line:40:2, line:41:8>
|   | |-ImplicitCastExpr 0x13f0cb3d0 <line:40:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13f0cb3b0 <col:6> 'int' lvalue Var 0x13e033368 'ret' 'int'
|   | `-GotoStmt 0x13f0cb438 <line:41:3, col:8> 'err' 0x13f0cb3e8
|   |-IfStmt 0x13f0cbf20 <line:44:2, line:53:2> has_else
|   | |-RecoveryExpr 0x13f0cb580 <line:44:6, col:29> '_Bool' contains-errors
|   | |-CompoundStmt 0x13f0cb7d8 <col:50, line:47:2>
|   | | `-IfStmt 0x13f0cb7b8 <line:45:3, line:46:9>
|   | |   |-UnaryOperator 0x13f0cb788 <line:45:7, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x13f0cb728 <col:8, col:31> 'int'
|   | |   |   |-ImplicitCastExpr 0x13f0cb710 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x13f0cb680 <col:8> 'int ()' Function 0x13f0cb5c8 'standard_check' 'int ()'
|   | |   |   |-ImplicitCastExpr 0x13f0cb758 <col:23> 'struct ipt_entry_target *' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13f0cb6a0 <col:23> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   | |   |   `-ImplicitCastExpr 0x13f0cb770 <col:26, col:27> 'unsigned int' <LValueToRValue>
|   | |   |     `-UnaryOperator 0x13f0cb6f8 <col:26, col:27> 'unsigned int' lvalue prefix '*' cannot overflow
|   | |   |       `-ImplicitCastExpr 0x13f0cb6e0 <col:27> 'unsigned int *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x13f0cb6c0 <col:27> 'unsigned int *' lvalue ParmVar 0x13e032800 'size' 'unsigned int *'
|   | |   `-GotoStmt 0x13f0cb7a0 <line:46:4, col:9> 'err' 0x13f0cb3e8
|   | `-IfStmt 0x13f0cbf00 <line:47:9, line:53:2>
|   |   |-BinaryOperator 0x13f0cbbe0 <line:47:13, line:49:34> 'int' contains-errors '&&'
|   |   | |-CXXDependentScopeMemberExpr 0x13f0cb8e0 <line:47:13, col:33> '<dependent type>' contains-errors lvalue ->checkentry
|   |   | | `-CXXDependentScopeMemberExpr 0x13f0cb898 <col:13, col:25> '<dependent type>' contains-errors lvalue .target
|   |   | |   `-CXXDependentScopeMemberExpr 0x13f0cb850 <col:13, col:18> '<dependent type>' contains-errors lvalue .kernel
|   |   | |     `-RecoveryExpr 0x13f0cb828 <col:13, col:16> '<dependent type>' contains-errors lvalue
|   |   | |       `-DeclRefExpr 0x13f0cb7f0 <col:13> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   |   | `-UnaryOperator 0x13f0cbbc8 <line:48:9, line:49:34> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   |   `-CallExpr 0x13f0cbb80 <line:48:10, line:49:34> '<dependent type>' contains-errors
|   |   |     |-CXXDependentScopeMemberExpr 0x13f0cba18 <line:48:10, col:30> '<dependent type>' contains-errors lvalue ->checkentry
|   |   |     | `-CXXDependentScopeMemberExpr 0x13f0cb9d0 <col:10, col:22> '<dependent type>' contains-errors lvalue .target
|   |   |     |   `-CXXDependentScopeMemberExpr 0x13f0cb988 <col:10, col:15> '<dependent type>' contains-errors lvalue .kernel
|   |   |     |     `-RecoveryExpr 0x13f0cb960 <col:10, col:13> '<dependent type>' contains-errors lvalue
|   |   |     |       `-DeclRefExpr 0x13f0cb928 <col:10> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   |   |     |-DeclRefExpr 0x13f0cba60 <col:41> 'const char *' lvalue ParmVar 0x13e032880 'name' 'const char *'
|   |   |     |-DeclRefExpr 0x13f0cba80 <col:47> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   |   |     |-DeclRefExpr 0x13f0cbaa0 <col:51> 'struct ipt_target *' lvalue Var 0x13e033118 'target' 'struct ipt_target *'
|   |   |     |-RecoveryExpr 0x13f0cbaf8 <line:49:13, col:16> '<dependent type>' contains-errors lvalue
|   |   |     | `-DeclRefExpr 0x13f0cbac0 <col:13> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   |   |     `-RecoveryExpr 0x13f0cbb58 <col:22, col:26> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x13f0cbb20 <col:22> 'struct ipt_entry *' lvalue Var 0x13e033238 'de' 'struct ipt_entry *'
|   |   `-CompoundStmt 0x13f0cbee0 <col:37, line:53:2>
|   |     |-CallExpr 0x13f0cbe98 <line:50:3, line:51:29> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x13f0cbce0 <line:50:3> 'int ()' Function 0x13f0cbc28 'duprintf' 'int ()'
|   |     | |-StringLiteral 0x13f0cbd40 <col:12> 'char[4]' lvalue "STR"
|   |     | `-CXXDependentScopeMemberExpr 0x13f0cbe50 <line:51:5, col:25> '<dependent type>' contains-errors lvalue ->name
|   |     |   `-CXXDependentScopeMemberExpr 0x13f0cbe08 <col:5, col:17> '<dependent type>' contains-errors lvalue .target
|   |     |     `-CXXDependentScopeMemberExpr 0x13f0cbdc0 <col:5, col:10> '<dependent type>' contains-errors lvalue .kernel
|   |     |       `-RecoveryExpr 0x13f0cbd98 <col:5, col:8> '<dependent type>' contains-errors lvalue
|   |     |         `-DeclRefExpr 0x13f0cbd60 <col:5> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   |     `-GotoStmt 0x13f0cbec8 <line:52:3, col:8> 'err' 0x13f0cb3e8
|   |-BinaryOperator 0x13f0cbf90 <line:54:2, col:8> 'int' '='
|   | |-DeclRefExpr 0x13f0cbf50 <col:2> 'int' lvalue Var 0x13e033368 'ret' 'int'
|   | `-IntegerLiteral 0x13f0cbf70 <col:8> 'int' 0
|   |-ReturnStmt 0x13f0cbfe8 <line:55:2, col:9>
|   | `-ImplicitCastExpr 0x13f0cbfd0 <col:9> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x13f0cbfb0 <col:9> 'int' lvalue Var 0x13e033368 'ret' 'int'
|   |-LabelStmt 0x13f0cc270 <line:57:1, line:58:35> 'err'
|   | `-CallExpr 0x13f0cc248 <col:2, col:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13f0cc0d8 <col:2> 'int ()' Function 0x13f0cc020 'module_put' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x13f0cc200 <col:13, col:33> '<dependent type>' contains-errors lvalue ->me
|   |     `-CXXDependentScopeMemberExpr 0x13f0cc1a0 <col:13, col:25> '<dependent type>' contains-errors lvalue .target
|   |       `-CXXDependentScopeMemberExpr 0x13f0cc158 <col:13, col:18> '<dependent type>' contains-errors lvalue .kernel
|   |         `-RecoveryExpr 0x13f0cc130 <col:13, col:16> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x13f0cc0f8 <col:13> 'struct ipt_entry_target *' lvalue Var 0x13e032f18 't' 'struct ipt_entry_target *'
|   |-LabelStmt 0x13f0cc310 <line:59:1, col:16> 'cleanup_matches'
|   | `-NullStmt 0x13f0cc308 <col:16>
|   `-ReturnStmt 0x13f0cc368 <line:61:2, col:9>
|     `-ImplicitCastExpr 0x13f0cc350 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13f0cc330 <col:9> 'int' lvalue Var 0x13e033368 'ret' 'int'
`-FunctionDecl 0x13f856e00 <line:14:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13f856f00 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13f856f68 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13f856fd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13f856ea8 <<invalid sloc>> Implicit 882
