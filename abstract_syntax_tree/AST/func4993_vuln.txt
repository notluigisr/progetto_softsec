TranslationUnitDecl 0x147855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1478564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147855bd0 '__int128'
|-TypedefDecl 0x147856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147855bf0 'unsigned __int128'
|-TypedefDecl 0x15000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15000bc00 'struct __NSConstantString_tag'
|   `-Record 0x147856580 '__NSConstantString_tag'
|-TypedefDecl 0x15000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147855d90 '__SVInt8_t'
|-TypedefDecl 0x15000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147855db0 '__SVInt16_t'
|-TypedefDecl 0x15000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147855dd0 '__SVInt32_t'
|-TypedefDecl 0x15000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147855df0 '__SVInt64_t'
|-TypedefDecl 0x15000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147855e10 '__SVUint8_t'
|-TypedefDecl 0x15000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147855e30 '__SVUint16_t'
|-TypedefDecl 0x15000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147855e50 '__SVUint32_t'
|-TypedefDecl 0x15000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147855e70 '__SVUint64_t'
|-TypedefDecl 0x15000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147855e90 '__SVFloat16_t'
|-TypedefDecl 0x15000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1478560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1478560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1478560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1478561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1478561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1478561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1478562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1478562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1478562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147856390 '__SVBool_t'
|-TypedefDecl 0x15000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1478563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1478563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1478563f0 '__SVCount_t'
|-TypedefDecl 0x15000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-TypedefDecl 0x15000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
`-FunctionDecl 0x15000e038 <dataset_diviso_filec/func4993_vuln.c:1:1, line:66:1> line:1:14 invalid h2_stream_add_header 'int (int *, const char *, int, const char *, int)'
  |-ParmVarDecl 0x15000dd28 <col:35, col:46> col:46 referenced invalid stream 'int *'
  |-ParmVarDecl 0x15000dda8 <line:2:35, col:47> col:47 used name 'const char *'
  |-ParmVarDecl 0x15000de28 <col:53, col:60> col:60 invalid nlen 'int'
  |-ParmVarDecl 0x15000dea8 <line:3:35, col:47> col:47 used value 'const char *'
  |-ParmVarDecl 0x15000df28 <col:54, col:61> col:61 invalid vlen 'int'
  `-CompoundStmt 0x15002a020 <line:4:1, line:66:1>
    |-DeclStmt 0x15000e228 <line:6:5, col:18>
    | `-VarDecl 0x15000e1a0 <col:5, col:17> col:9 used error 'int' cinit
    |   `-IntegerLiteral 0x15000e208 <col:17> 'int' 0
    |-IfStmt 0x15000e308 <line:9:5, line:11:5>
    | |-CXXDependentScopeMemberExpr 0x15000e260 <line:9:9, col:17> '<dependent type>' contains-errors lvalue ->has_response
    | | `-RecoveryExpr 0x15000e240 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15000e2f0 <col:31, line:11:5>
    |   `-ReturnStmt 0x15000e2e0 <line:10:9, col:16>
    |     `-RecoveryExpr 0x15000e2c0 <col:16> '<dependent type>' contains-errors lvalue
    |-UnaryOperator 0x15000e390 <line:12:5, col:15> '<dependent type>' contains-errors prefix '++' cannot overflow
    | `-CXXDependentScopeMemberExpr 0x15000e348 <col:7, col:15> '<dependent type>' contains-errors lvalue ->request_headers_added
    |   `-RecoveryExpr 0x15000e328 <col:7> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x150028610 <line:13:5, line:26:5> has_else
    | |-BinaryOperator 0x150027868 <line:13:9, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x150027850 <col:9, col:15> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x150027838 <col:9, col:15> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x150027800 <col:9, col:15> 'const char' lvalue
    | | |     |-ImplicitCastExpr 0x15000e3e8 <col:9> 'const char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x15000e3a8 <col:9> 'const char *' lvalue ParmVar 0x15000dda8 'name' 'const char *'
    | | |     `-IntegerLiteral 0x15000e3c8 <col:14> 'int' 0
    | | `-CharacterLiteral 0x150027820 <col:20> 'int' 58
    | |-CompoundStmt 0x150028080 <col:25, line:20:5>
    | | `-IfStmt 0x150028060 <line:14:9, line:19:9>
    | |   |-BinaryOperator 0x150027a40 <line:14:13, col:34> 'int' contains-errors '>'
    | |   | |-ParenExpr 0x1500278a8 <col:13, col:18> '<dependent type>' contains-errors lvalue
    | |   | | `-RecoveryExpr 0x150027888 <col:14> '<dependent type>' contains-errors lvalue
    | |   | `-CXXDependentScopeMemberExpr 0x1500279f8 <col:22, col:34> '<dependent type>' contains-errors lvalue ->limit_req_line
    | |   |   `-CXXDependentScopeMemberExpr 0x1500279b0 <col:22, col:31> '<dependent type>' contains-errors lvalue ->s
    | |   |     `-RecoveryExpr 0x150027990 <col:22> '<dependent type>' contains-errors lvalue
    | |   `-CompoundStmt 0x150028040 <col:50, line:19:9>
    | |     |-CallExpr 0x150027f58 <line:16:13, line:17:59> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x150027bc0 <line:16:13> 'int ()' Function 0x150027b08 'ap_log_cerror' 'int ()'
    | |     | |-RecoveryExpr 0x150027eb0 <col:27> '<dependent type>' contains-errors lvalue
    | |     | |-RecoveryExpr 0x150027ed0 <col:39> '<dependent type>' contains-errors lvalue
    | |     | |-IntegerLiteral 0x150027c10 <col:53> 'int' 0
    | |     | |-CXXDependentScopeMemberExpr 0x150027f10 <col:56, col:65> '<dependent type>' contains-errors lvalue ->c
    | |     | | `-RecoveryExpr 0x150027ef0 <col:56> '<dependent type>' contains-errors lvalue
    | |     | |-CallExpr 0x150027e10 <line:17:27, col:52> '<dependent type>' contains-errors
    | |     | | |-DeclRefExpr 0x150027d70 <col:27> 'int ()' Function 0x150027cb8 'H2_STRM_MSG' 'int ()'
    | |     | | |-RecoveryExpr 0x150027d90 <col:39> '<dependent type>' contains-errors lvalue
    | |     | | `-StringLiteral 0x150027df0 <col:47> 'char[4]' lvalue "STR"
    | |     | `-DeclRefExpr 0x150027e40 <col:55> 'const char *' lvalue ParmVar 0x15000dda8 'name' 'const char *'
    | |     `-BinaryOperator 0x150028020 <line:18:13, col:21> 'int' contains-errors '='
    | |       |-DeclRefExpr 0x150027fa8 <col:13> 'int' lvalue Var 0x15000e1a0 'error' 'int'
    | |       `-RecoveryExpr 0x150028000 <col:21> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x1500285f0 <line:21:10, line:26:5>
    |   |-BinaryOperator 0x1500282d0 <line:21:14, col:46> 'int' contains-errors '>'
    |   | |-ParenExpr 0x150028138 <col:14, col:30> '<dependent type>' contains-errors
    |   | | `-BinaryOperator 0x150028118 <col:15, col:26> '<dependent type>' contains-errors '+'
    |   | |   |-BinaryOperator 0x1500280d8 <col:15, col:22> '<dependent type>' contains-errors '+'
    |   | |   | |-RecoveryExpr 0x150028098 <col:15> '<dependent type>' contains-errors lvalue
    |   | |   | `-IntegerLiteral 0x1500280b8 <col:22> 'int' 2
    |   | |   `-RecoveryExpr 0x1500280f8 <col:26> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x150028288 <col:34, col:46> '<dependent type>' contains-errors lvalue ->limit_req_fieldsize
    |   |   `-CXXDependentScopeMemberExpr 0x150028240 <col:34, col:43> '<dependent type>' contains-errors lvalue ->s
    |   |     `-RecoveryExpr 0x150028220 <col:34> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x1500285d8 <col:67, line:26:5>
    |     `-CallExpr 0x150028568 <line:23:9, line:24:55> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1500282f0 <line:23:9> 'int ()' Function 0x150027b08 'ap_log_cerror' 'int ()'
    |       |-RecoveryExpr 0x1500284c0 <col:23> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x1500284e0 <col:35> '<dependent type>' contains-errors lvalue
    |       |-IntegerLiteral 0x150028340 <col:49> 'int' 0
    |       |-CXXDependentScopeMemberExpr 0x150028520 <col:52, col:61> '<dependent type>' contains-errors lvalue ->c
    |       | `-RecoveryExpr 0x150028500 <col:52> '<dependent type>' contains-errors lvalue
    |       |-CallExpr 0x150028420 <line:24:23, col:48> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x1500283c0 <col:23> 'int ()' Function 0x150027cb8 'H2_STRM_MSG' 'int ()'
    |       | |-RecoveryExpr 0x1500283e0 <col:35> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x150028400 <col:43> 'char[4]' lvalue "STR"
    |       `-DeclRefExpr 0x150028450 <col:51> 'const char *' lvalue ParmVar 0x15000dda8 'name' 'const char *'
    |-IfStmt 0x150028a30 <line:28:5, line:39:5>
    | |-RecoveryExpr 0x1500286c8 <line:28:9, col:72> '_Bool' contains-errors
    | `-CompoundStmt 0x150028a18 <col:75, line:39:5>
    |   `-IfStmt 0x150028908 <line:30:9, line:35:9>
    |     |-RecoveryExpr 0x150028790 <line:30:13, line:31:50> '_Bool' contains-errors
    |     `-CompoundStmt 0x1500288f8 <col:55, line:35:9>
    |-IfStmt 0x150029588 <line:41:5, line:58:5> has_else
    | |-ImplicitCastExpr 0x150028a70 <line:41:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x150028a50 <col:9> 'int' lvalue Var 0x15000e1a0 'error' 'int'
    | |-CompoundStmt 0x150028bf8 <col:16, line:44:5>
    | | `-CallExpr 0x150028bc8 <line:42:9, col:41> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x150028b68 <col:9> 'int ()' Function 0x150028ab0 'set_error_response' 'int ()'
    | |   |-RecoveryExpr 0x150028b88 <col:28> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x150028ba8 <col:36> 'int' lvalue Var 0x15000e1a0 'error' 'int'
    | `-IfStmt 0x150029558 <line:45:10, line:58:5> has_else
    |   |-RecoveryExpr 0x150028c78 <line:45:14, col:36> '_Bool' contains-errors
    |   |-CompoundStmt 0x150029280 <col:43, line:52:5>
    |   | `-IfStmt 0x150028fc0 <line:46:9, line:49:9>
    |   |   |-UnaryOperator 0x150028d18 <line:46:13, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x150028d00 <col:14, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   `-CXXDependentScopeMemberExpr 0x150028cb8 <col:14, col:22> '<dependent type>' contains-errors lvalue ->rtmp
    |   |   |     `-RecoveryExpr 0x150028c98 <col:14> '<dependent type>' contains-errors lvalue
    |   |   `-CompoundStmt 0x150028fb0 <col:28, line:49:9>
    |   `-IfStmt 0x150029528 <line:53:10, line:58:5> has_else
    |     |-RecoveryExpr 0x150029300 <line:53:14, col:36> '_Bool' contains-errors
    |     |-CompoundStmt 0x150029508 <col:43, line:55:5>
    |     `-CompoundStmt 0x150029518 <line:56:10, line:58:5>
    `-IfStmt 0x15002a000 <line:60:5, line:64:5>
      |-RecoveryExpr 0x1500295b8 <line:60:9, col:19> '_Bool' contains-errors
      `-CompoundStmt 0x1500297e8 <col:32, line:64:5>
