TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x1201281c8 <dataset_diviso_filec/func6299_nonvuln.c:1:1, line:29:1> line:1:1 invalid tor_log2 'int (int)'
  |-ParmVarDecl 0x1201280f0 <col:10, col:19> col:19 referenced invalid u64 'int'
  `-CompoundStmt 0x107809770 <line:2:1, line:29:1>
    |-DeclStmt 0x120128318 <line:3:3, col:12>
    | `-VarDecl 0x120128290 <col:3, col:11> col:7 used r 'int' cinit
    |   `-IntegerLiteral 0x1201282f8 <col:11> 'int' 0
    |-IfStmt 0x1201286f8 <line:4:3, line:7:3>
    | |-BinaryOperator 0x1201285c0 <line:4:7, col:33> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x120128330 <col:7> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x1201285a0 <col:14, col:33> 'int'
    | |   `-BinaryOperator 0x120128580 <col:15, col:31> 'int' '<<'
    | |     |-CallExpr 0x120128538 <col:15, col:28> 'int'
    | |     | |-ImplicitCastExpr 0x120128520 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x1201284b0 <col:15> 'int ()' Function 0x1201283f8 'U64_LITERAL' 'int ()'
    | |     | `-IntegerLiteral 0x1201284d0 <col:27> 'int' 1
    | |     `-IntegerLiteral 0x120128560 <col:31> 'int' 32
    | `-CompoundStmt 0x1201286d8 <col:36, line:7:3>
    |   |-CompoundAssignOperator 0x120128648 <line:5:5, col:13> '<dependent type>' contains-errors '>>=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x120128600 <col:5> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1201285e0 <col:5> 'int' lvalue ParmVar 0x1201280f0 'u64' 'int'
    |   | `-IntegerLiteral 0x120128628 <col:13> 'int' 32
    |   `-BinaryOperator 0x1201286b8 <line:6:5, col:9> 'int' '='
    |     |-DeclRefExpr 0x120128678 <col:5> 'int' lvalue Var 0x120128290 'r' 'int'
    |     `-IntegerLiteral 0x120128698 <col:9> 'int' 32
    |-IfStmt 0x107808d68 <line:8:3, line:11:3>
    | |-BinaryOperator 0x107808c20 <line:8:7, col:33> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x120128718 <col:7> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x107808c00 <col:14, col:33> 'int'
    | |   `-BinaryOperator 0x1201287d8 <col:15, col:31> 'int' '<<'
    | |     |-CallExpr 0x120128790 <col:15, col:28> 'int'
    | |     | |-ImplicitCastExpr 0x120128778 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x120128738 <col:15> 'int ()' Function 0x1201283f8 'U64_LITERAL' 'int ()'
    | |     | `-IntegerLiteral 0x120128758 <col:27> 'int' 1
    | |     `-IntegerLiteral 0x1201287b8 <col:31> 'int' 16
    | `-CompoundStmt 0x107808d48 <col:36, line:11:3>
    |   |-CompoundAssignOperator 0x107808ca8 <line:9:5, col:13> '<dependent type>' contains-errors '>>=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x107808c60 <col:5> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x107808c40 <col:5> 'int' lvalue ParmVar 0x1201280f0 'u64' 'int'
    |   | `-IntegerLiteral 0x107808c88 <col:13> 'int' 16
    |   `-CompoundAssignOperator 0x107808d18 <line:10:5, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x107808cd8 <col:5> 'int' lvalue Var 0x120128290 'r' 'int'
    |     `-IntegerLiteral 0x107808cf8 <col:10> 'int' 16
    |-IfStmt 0x107808fd0 <line:12:3, line:15:3>
    | |-BinaryOperator 0x107808e88 <line:12:7, col:32> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x107808d88 <col:7> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x107808e68 <col:14, col:32> 'int'
    | |   `-BinaryOperator 0x107808e48 <col:15, col:31> 'int' '<<'
    | |     |-CallExpr 0x107808e00 <col:15, col:28> 'int'
    | |     | |-ImplicitCastExpr 0x107808de8 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x107808da8 <col:15> 'int ()' Function 0x1201283f8 'U64_LITERAL' 'int ()'
    | |     | `-IntegerLiteral 0x107808dc8 <col:27> 'int' 1
    | |     `-IntegerLiteral 0x107808e28 <col:31> 'int' 8
    | `-CompoundStmt 0x107808fb0 <col:35, line:15:3>
    |   |-CompoundAssignOperator 0x107808f10 <line:13:5, col:13> '<dependent type>' contains-errors '>>=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x107808ec8 <col:5> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x107808ea8 <col:5> 'int' lvalue ParmVar 0x1201280f0 'u64' 'int'
    |   | `-IntegerLiteral 0x107808ef0 <col:13> 'int' 8
    |   `-CompoundAssignOperator 0x107808f80 <line:14:5, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x107808f40 <col:5> 'int' lvalue Var 0x120128290 'r' 'int'
    |     `-IntegerLiteral 0x107808f60 <col:10> 'int' 8
    |-IfStmt 0x107809238 <line:16:3, line:19:3>
    | |-BinaryOperator 0x1078090f0 <line:16:7, col:32> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x107808ff0 <col:7> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x1078090d0 <col:14, col:32> 'int'
    | |   `-BinaryOperator 0x1078090b0 <col:15, col:31> 'int' '<<'
    | |     |-CallExpr 0x107809068 <col:15, col:28> 'int'
    | |     | |-ImplicitCastExpr 0x107809050 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x107809010 <col:15> 'int ()' Function 0x1201283f8 'U64_LITERAL' 'int ()'
    | |     | `-IntegerLiteral 0x107809030 <col:27> 'int' 1
    | |     `-IntegerLiteral 0x107809090 <col:31> 'int' 4
    | `-CompoundStmt 0x107809218 <col:35, line:19:3>
    |   |-CompoundAssignOperator 0x107809178 <line:17:5, col:13> '<dependent type>' contains-errors '>>=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x107809130 <col:5> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x107809110 <col:5> 'int' lvalue ParmVar 0x1201280f0 'u64' 'int'
    |   | `-IntegerLiteral 0x107809158 <col:13> 'int' 4
    |   `-CompoundAssignOperator 0x1078091e8 <line:18:5, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x1078091a8 <col:5> 'int' lvalue Var 0x120128290 'r' 'int'
    |     `-IntegerLiteral 0x1078091c8 <col:10> 'int' 4
    |-IfStmt 0x1078094a0 <line:20:3, line:23:3>
    | |-BinaryOperator 0x107809358 <line:20:7, col:32> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x107809258 <col:7> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x107809338 <col:14, col:32> 'int'
    | |   `-BinaryOperator 0x107809318 <col:15, col:31> 'int' '<<'
    | |     |-CallExpr 0x1078092d0 <col:15, col:28> 'int'
    | |     | |-ImplicitCastExpr 0x1078092b8 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x107809278 <col:15> 'int ()' Function 0x1201283f8 'U64_LITERAL' 'int ()'
    | |     | `-IntegerLiteral 0x107809298 <col:27> 'int' 1
    | |     `-IntegerLiteral 0x1078092f8 <col:31> 'int' 2
    | `-CompoundStmt 0x107809480 <col:35, line:23:3>
    |   |-CompoundAssignOperator 0x1078093e0 <line:21:5, col:13> '<dependent type>' contains-errors '>>=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x107809398 <col:5> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x107809378 <col:5> 'int' lvalue ParmVar 0x1201280f0 'u64' 'int'
    |   | `-IntegerLiteral 0x1078093c0 <col:13> 'int' 2
    |   `-CompoundAssignOperator 0x107809450 <line:22:5, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x107809410 <col:5> 'int' lvalue Var 0x120128290 'r' 'int'
    |     `-IntegerLiteral 0x107809430 <col:10> 'int' 2
    |-IfStmt 0x107809708 <line:24:3, line:27:3>
    | |-BinaryOperator 0x1078095c0 <line:24:7, col:32> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x1078094c0 <col:7> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x1078095a0 <col:14, col:32> 'int'
    | |   `-BinaryOperator 0x107809580 <col:15, col:31> 'int' '<<'
    | |     |-CallExpr 0x107809538 <col:15, col:28> 'int'
    | |     | |-ImplicitCastExpr 0x107809520 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x1078094e0 <col:15> 'int ()' Function 0x1201283f8 'U64_LITERAL' 'int ()'
    | |     | `-IntegerLiteral 0x107809500 <col:27> 'int' 1
    | |     `-IntegerLiteral 0x107809560 <col:31> 'int' 1
    | `-CompoundStmt 0x1078096e8 <col:35, line:27:3>
    |   |-CompoundAssignOperator 0x107809648 <line:25:5, col:13> '<dependent type>' contains-errors '>>=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x107809600 <col:5> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1078095e0 <col:5> 'int' lvalue ParmVar 0x1201280f0 'u64' 'int'
    |   | `-IntegerLiteral 0x107809628 <col:13> 'int' 1
    |   `-CompoundAssignOperator 0x1078096b8 <line:26:5, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x107809678 <col:5> 'int' lvalue Var 0x120128290 'r' 'int'
    |     `-IntegerLiteral 0x107809698 <col:10> 'int' 1
    `-ReturnStmt 0x107809760 <line:28:3, col:10>
      `-ImplicitCastExpr 0x107809748 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x107809728 <col:10> 'int' lvalue Var 0x120128290 'r' 'int'
