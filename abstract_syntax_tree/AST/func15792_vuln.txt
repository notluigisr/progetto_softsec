TranslationUnitDecl 0x155055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1550564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x155055bd0 '__int128'
|-TypedefDecl 0x155056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x155055bf0 'unsigned __int128'
|-TypedefDecl 0x155126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x155126800 'struct __NSConstantString_tag'
|   `-Record 0x155056580 '__NSConstantString_tag'
|-TypedefDecl 0x155126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x155055d90 '__SVInt8_t'
|-TypedefDecl 0x155126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x155055db0 '__SVInt16_t'
|-TypedefDecl 0x155126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x155055dd0 '__SVInt32_t'
|-TypedefDecl 0x155126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x155055df0 '__SVInt64_t'
|-TypedefDecl 0x155126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x155055e10 '__SVUint8_t'
|-TypedefDecl 0x155126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x155055e30 '__SVUint16_t'
|-TypedefDecl 0x155126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x155055e50 '__SVUint32_t'
|-TypedefDecl 0x155126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x155055e70 '__SVUint64_t'
|-TypedefDecl 0x155126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x155055e90 '__SVFloat16_t'
|-TypedefDecl 0x155126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x155055eb0 '__SVFloat32_t'
|-TypedefDecl 0x155126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x155055ed0 '__SVFloat64_t'
|-TypedefDecl 0x155126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x155055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x155126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x155055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x155126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x155055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x155127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x155055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1551270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x155055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x155127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x155055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x155127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x155055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1551271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x155055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x155127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x155055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1551272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x155056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x155127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x155056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x155127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x155056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1551273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x155056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x155127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x155056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1551274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1550560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x155127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1550560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x155127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1550560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1551275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x155056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x155127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x155056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1551276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x155056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x155127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x155056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x155127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x155056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x155128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1550561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x155128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1550561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1551280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1550561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x155128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x155056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1551281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x155056230 '__clang_svint16x4_t'
|-TypedefDecl 0x155128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x155056250 '__clang_svint32x4_t'
|-TypedefDecl 0x155128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x155056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1551282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x155056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x155128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1550562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1551283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1550562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x155128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1550562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x155128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x155056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1551284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x155056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x155128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x155056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1551285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x155056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x155128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x155056390 '__SVBool_t'
|-TypedefDecl 0x155128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1550563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1551286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1550563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x155128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1550563f0 '__SVCount_t'
|-TypedefDecl 0x1551287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1551287b0 'char *'
|   `-BuiltinType 0x1550556b0 'char'
|-TypedefDecl 0x155128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1551287b0 'char *'
|   `-BuiltinType 0x1550556b0 'char'
|-FunctionDecl 0x155128ba8 <dataset_diviso_filec/func15792_vuln.c:1:1, line:50:1> line:1:1 invalid tight_filter_gradient24 'int (int *, int *, int, int)'
| |-ParmVarDecl 0x155128928 <col:25, col:35> col:35 invalid vs 'int *'
| |-ParmVarDecl 0x1551289a8 <col:39, col:48> col:48 invalid buf 'int *'
| |-ParmVarDecl 0x155128a28 <col:53, col:57> col:57 used w 'int'
| |-ParmVarDecl 0x155128aa8 <col:60, col:64> col:64 used h 'int'
| `-CompoundStmt 0x155147130 <line:2:1, line:50:1>
|   |-DeclStmt 0x155128da0 <line:5:5, col:17>
|   | `-VarDecl 0x155128d38 <col:5, col:16> col:9 used shift 'int[3]'
|   |-DeclStmt 0x155128e38 <line:6:5, col:14>
|   | `-VarDecl 0x155128dd0 <col:5, col:10> col:10 used prev 'int *'
|   |-DeclStmt 0x1551421c8 <line:7:5, col:49>
|   | |-VarDecl 0x155128eb8 <col:5, col:15> col:9 used here 'int[3]'
|   | |-VarDecl 0x155128f88 <col:5, col:25> col:18 used upper 'int[3]'
|   | |-VarDecl 0x155142068 <col:5, col:34> col:28 used left 'int[3]'
|   | `-VarDecl 0x155142138 <col:5, col:48> col:37 used upperleft 'int[3]'
|   |-DeclStmt 0x155142260 <line:8:5, col:19>
|   | `-VarDecl 0x1551421f8 <col:5, col:9> col:9 used prediction 'int'
|   |-DeclStmt 0x155142418 <line:9:5, col:16>
|   | |-VarDecl 0x155142290 <col:5, col:9> col:9 used x 'int'
|   | |-VarDecl 0x155142310 <col:5, col:12> col:12 used y 'int'
|   | `-VarDecl 0x155142390 <col:5, col:15> col:15 used c 'int'
|   |-CallExpr 0x155142d48 <line:12:5, col:61> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x155142b10 <col:5> 'void *(void *, int, unsigned long)' Function 0x1551428c0 'memset' 'void *(void *, int, unsigned long)'
|   | |-CXXDependentScopeMemberExpr 0x155142be0 <col:12, col:31> '<dependent type>' contains-errors lvalue .buffer
|   | | `-CXXDependentScopeMemberExpr 0x155142b98 <col:12, col:22> '<dependent type>' contains-errors lvalue .gradient
|   | |   `-CXXDependentScopeMemberExpr 0x155142b50 <col:12, col:16> '<dependent type>' contains-errors lvalue ->tight
|   | |     `-RecoveryExpr 0x155142b30 <col:12> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x155142c28 <col:39> 'int' 0
|   | `-BinaryOperator 0x155142d10 <col:42, col:60> 'unsigned long' '*'
|   |   |-ImplicitCastExpr 0x155142cf8 <col:42, col:46> 'unsigned long' <IntegralCast>
|   |   | `-BinaryOperator 0x155142ca0 <col:42, col:46> 'int' '*'
|   |   |   |-ImplicitCastExpr 0x155142c88 <col:42> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x155142c48 <col:42> 'int' lvalue ParmVar 0x155128a28 'w' 'int'
|   |   |   `-IntegerLiteral 0x155142c68 <col:46> 'int' 3
|   |   `-UnaryExprOrTypeTraitExpr 0x155142cd8 <col:50, col:60> 'unsigned long' sizeof 'int'
|   |-IfStmt 0x155145230 <line:14:5, line:23:5> has_else
|   | |-RecoveryExpr 0x155142f98 <line:14:9, line:15:55> '_Bool' contains-errors
|   | |-CompoundStmt 0x155144c70 <col:58, line:19:5>
|   | | |-BinaryOperator 0x155144930 <line:16:9, col:36> 'int' contains-errors '='
|   | | | |-ArraySubscriptExpr 0x155144818 <col:9, col:16> 'int' lvalue
|   | | | | |-ImplicitCastExpr 0x155144800 <col:9> 'int *' <ArrayToPointerDecay>
|   | | | | | `-DeclRefExpr 0x155142fb8 <col:9> 'int[3]' lvalue Var 0x155128d38 'shift' 'int[3]'
|   | | | | `-IntegerLiteral 0x155142fd8 <col:15> 'int' 0
|   | | | `-CXXDependentScopeMemberExpr 0x1551448e8 <col:20, col:36> '<dependent type>' contains-errors lvalue .rshift
|   | | |   `-CXXDependentScopeMemberExpr 0x1551448a0 <col:20, col:33> '<dependent type>' contains-errors lvalue .pf
|   | | |     `-CXXDependentScopeMemberExpr 0x155144858 <col:20, col:24> '<dependent type>' contains-errors lvalue ->clientds
|   | | |       `-RecoveryExpr 0x155144838 <col:20> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x155144ac0 <line:17:9, col:36> 'int' contains-errors '='
|   | | | |-ArraySubscriptExpr 0x1551449a8 <col:9, col:16> 'int' lvalue
|   | | | | |-ImplicitCastExpr 0x155144990 <col:9> 'int *' <ArrayToPointerDecay>
|   | | | | | `-DeclRefExpr 0x155144950 <col:9> 'int[3]' lvalue Var 0x155128d38 'shift' 'int[3]'
|   | | | | `-IntegerLiteral 0x155144970 <col:15> 'int' 1
|   | | | `-CXXDependentScopeMemberExpr 0x155144a78 <col:20, col:36> '<dependent type>' contains-errors lvalue .gshift
|   | | |   `-CXXDependentScopeMemberExpr 0x155144a30 <col:20, col:33> '<dependent type>' contains-errors lvalue .pf
|   | | |     `-CXXDependentScopeMemberExpr 0x1551449e8 <col:20, col:24> '<dependent type>' contains-errors lvalue ->clientds
|   | | |       `-RecoveryExpr 0x1551449c8 <col:20> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x155144c50 <line:18:9, col:36> 'int' contains-errors '='
|   | |   |-ArraySubscriptExpr 0x155144b38 <col:9, col:16> 'int' lvalue
|   | |   | |-ImplicitCastExpr 0x155144b20 <col:9> 'int *' <ArrayToPointerDecay>
|   | |   | | `-DeclRefExpr 0x155144ae0 <col:9> 'int[3]' lvalue Var 0x155128d38 'shift' 'int[3]'
|   | |   | `-IntegerLiteral 0x155144b00 <col:15> 'int' 2
|   | |   `-CXXDependentScopeMemberExpr 0x155144c08 <col:20, col:36> '<dependent type>' contains-errors lvalue .bshift
|   | |     `-CXXDependentScopeMemberExpr 0x155144bc0 <col:20, col:33> '<dependent type>' contains-errors lvalue .pf
|   | |       `-CXXDependentScopeMemberExpr 0x155144b78 <col:20, col:24> '<dependent type>' contains-errors lvalue ->clientds
|   | |         `-RecoveryExpr 0x155144b58 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x155145208 <line:19:12, line:23:5>
|   |   |-BinaryOperator 0x155144e48 <line:20:9, col:41> 'int' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x155144cf0 <col:9, col:16> 'int' lvalue
|   |   | | |-ImplicitCastExpr 0x155144cd8 <col:9> 'int *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x155144c98 <col:9> 'int[3]' lvalue Var 0x155128d38 'shift' 'int[3]'
|   |   | | `-IntegerLiteral 0x155144cb8 <col:15> 'int' 0
|   |   | `-BinaryOperator 0x155144e28 <col:20, col:41> '<dependent type>' contains-errors '-'
|   |   |   |-IntegerLiteral 0x155144d10 <col:20> 'int' 24
|   |   |   `-CXXDependentScopeMemberExpr 0x155144de0 <col:25, col:41> '<dependent type>' contains-errors lvalue .rshift
|   |   |     `-CXXDependentScopeMemberExpr 0x155144d98 <col:25, col:38> '<dependent type>' contains-errors lvalue .pf
|   |   |       `-CXXDependentScopeMemberExpr 0x155144d50 <col:25, col:29> '<dependent type>' contains-errors lvalue ->clientds
|   |   |         `-RecoveryExpr 0x155144d30 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x155145018 <line:21:9, col:41> 'int' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x155144ec0 <col:9, col:16> 'int' lvalue
|   |   | | |-ImplicitCastExpr 0x155144ea8 <col:9> 'int *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x155144e68 <col:9> 'int[3]' lvalue Var 0x155128d38 'shift' 'int[3]'
|   |   | | `-IntegerLiteral 0x155144e88 <col:15> 'int' 1
|   |   | `-BinaryOperator 0x155144ff8 <col:20, col:41> '<dependent type>' contains-errors '-'
|   |   |   |-IntegerLiteral 0x155144ee0 <col:20> 'int' 24
|   |   |   `-CXXDependentScopeMemberExpr 0x155144fb0 <col:25, col:41> '<dependent type>' contains-errors lvalue .gshift
|   |   |     `-CXXDependentScopeMemberExpr 0x155144f68 <col:25, col:38> '<dependent type>' contains-errors lvalue .pf
|   |   |       `-CXXDependentScopeMemberExpr 0x155144f20 <col:25, col:29> '<dependent type>' contains-errors lvalue ->clientds
|   |   |         `-RecoveryExpr 0x155144f00 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x1551451e8 <line:22:9, col:41> 'int' contains-errors '='
|   |     |-ArraySubscriptExpr 0x155145090 <col:9, col:16> 'int' lvalue
|   |     | |-ImplicitCastExpr 0x155145078 <col:9> 'int *' <ArrayToPointerDecay>
|   |     | | `-DeclRefExpr 0x155145038 <col:9> 'int[3]' lvalue Var 0x155128d38 'shift' 'int[3]'
|   |     | `-IntegerLiteral 0x155145058 <col:15> 'int' 2
|   |     `-BinaryOperator 0x1551451c8 <col:20, col:41> '<dependent type>' contains-errors '-'
|   |       |-IntegerLiteral 0x1551450b0 <col:20> 'int' 24
|   |       `-CXXDependentScopeMemberExpr 0x155145180 <col:25, col:41> '<dependent type>' contains-errors lvalue .bshift
|   |         `-CXXDependentScopeMemberExpr 0x155145138 <col:25, col:38> '<dependent type>' contains-errors lvalue .pf
|   |           `-CXXDependentScopeMemberExpr 0x1551450f0 <col:25, col:29> '<dependent type>' contains-errors lvalue ->clientds
|   |             `-RecoveryExpr 0x1551450d0 <col:25> '<dependent type>' contains-errors lvalue
|   `-ForStmt 0x1551470f8 <line:25:5, line:49:5>
|     |-BinaryOperator 0x1551452a0 <line:25:10, col:14> 'int' '='
|     | |-DeclRefExpr 0x155145260 <col:10> 'int' lvalue Var 0x155142310 'y' 'int'
|     | `-IntegerLiteral 0x155145280 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x155145330 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x155145300 <col:17> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1551452c0 <col:17> 'int' lvalue Var 0x155142310 'y' 'int'
|     | `-ImplicitCastExpr 0x155145318 <col:21> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x1551452e0 <col:21> 'int' lvalue ParmVar 0x155128aa8 'h' 'int'
|     |-UnaryOperator 0x155145370 <col:24, col:25> 'int' postfix '++'
|     | `-DeclRefExpr 0x155145350 <col:24> 'int' lvalue Var 0x155142310 'y' 'int'
|     `-CompoundStmt 0x1551470d0 <col:29, line:49:5>
|       |-ForStmt 0x155145658 <line:26:9, line:29:9>
|       | |-BinaryOperator 0x1551453c8 <line:26:14, col:18> 'int' '='
|       | | |-DeclRefExpr 0x155145388 <col:14> 'int' lvalue Var 0x155142390 'c' 'int'
|       | | `-IntegerLiteral 0x1551453a8 <col:18> 'int' 0
|       | |-<<<NULL>>>
|       | |-BinaryOperator 0x155145440 <col:21, col:25> 'int' '<'
|       | | |-ImplicitCastExpr 0x155145428 <col:21> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1551453e8 <col:21> 'int' lvalue Var 0x155142390 'c' 'int'
|       | | `-IntegerLiteral 0x155145408 <col:25> 'int' 3
|       | |-UnaryOperator 0x155145480 <col:28, col:29> 'int' postfix '++'
|       | | `-DeclRefExpr 0x155145460 <col:28> 'int' lvalue Var 0x155142390 'c' 'int'
|       | `-CompoundStmt 0x155145638 <col:33, line:29:9>
|       |   |-BinaryOperator 0x155145548 <line:27:13, col:24> 'int' '='
|       |   | |-ArraySubscriptExpr 0x155145508 <col:13, col:20> 'int' lvalue
|       |   | | |-ImplicitCastExpr 0x1551454d8 <col:13> 'int *' <ArrayToPointerDecay>
|       |   | | | `-DeclRefExpr 0x155145498 <col:13> 'int[3]' lvalue Var 0x155128f88 'upper' 'int[3]'
|       |   | | `-ImplicitCastExpr 0x1551454f0 <col:19> 'int' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1551454b8 <col:19> 'int' lvalue Var 0x155142390 'c' 'int'
|       |   | `-IntegerLiteral 0x155145528 <col:24> 'int' 0
|       |   `-BinaryOperator 0x155145618 <line:28:13, col:23> 'int' '='
|       |     |-ArraySubscriptExpr 0x1551455d8 <col:13, col:19> 'int' lvalue
|       |     | |-ImplicitCastExpr 0x1551455a8 <col:13> 'int *' <ArrayToPointerDecay>
|       |     | | `-DeclRefExpr 0x155145568 <col:13> 'int[3]' lvalue Var 0x155128eb8 'here' 'int[3]'
|       |     | `-ImplicitCastExpr 0x1551455c0 <col:18> 'int' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x155145588 <col:18> 'int' lvalue Var 0x155142390 'c' 'int'
|       |     `-IntegerLiteral 0x1551455f8 <col:23> 'int' 0
|       |-BinaryOperator 0x155146000 <line:30:9, col:42> 'int *' contains-errors '='
|       | |-DeclRefExpr 0x155145690 <col:9> 'int *' lvalue Var 0x155128dd0 'prev' 'int *'
|       | `-CStyleCastExpr 0x1551457c0 <col:16, col:42> 'int *' contains-errors <Dependent>
|       |   `-CXXDependentScopeMemberExpr 0x155145760 <col:23, col:42> '<dependent type>' contains-errors lvalue .buffer
|       |     `-CXXDependentScopeMemberExpr 0x155145718 <col:23, col:33> '<dependent type>' contains-errors lvalue .gradient
|       |       `-CXXDependentScopeMemberExpr 0x1551456d0 <col:23, col:27> '<dependent type>' contains-errors lvalue ->tight
|       |         `-RecoveryExpr 0x1551456b0 <col:23> '<dependent type>' contains-errors lvalue
|       `-ForStmt 0x155147098 <line:31:9, line:48:9>
|         |-BinaryOperator 0x155146060 <line:31:14, col:18> 'int' '='
|         | |-DeclRefExpr 0x155146020 <col:14> 'int' lvalue Var 0x155142290 'x' 'int'
|         | `-IntegerLiteral 0x155146040 <col:18> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x1551460f0 <col:21, col:25> 'int' '<'
|         | |-ImplicitCastExpr 0x1551460c0 <col:21> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x155146080 <col:21> 'int' lvalue Var 0x155142290 'x' 'int'
|         | `-ImplicitCastExpr 0x1551460d8 <col:25> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x1551460a0 <col:25> 'int' lvalue ParmVar 0x155128a28 'w' 'int'
|         |-UnaryOperator 0x155146130 <col:28, col:29> 'int' postfix '++'
|         | `-DeclRefExpr 0x155146110 <col:28> 'int' lvalue Var 0x155142290 'x' 'int'
|         `-CompoundStmt 0x155147080 <col:33, line:48:9>
|           `-ForStmt 0x155147048 <line:33:13, line:47:13>
|             |-BinaryOperator 0x1551461d0 <line:33:18, col:22> 'int' '='
|             | |-DeclRefExpr 0x155146190 <col:18> 'int' lvalue Var 0x155142390 'c' 'int'
|             | `-IntegerLiteral 0x1551461b0 <col:22> 'int' 0
|             |-<<<NULL>>>
|             |-BinaryOperator 0x155146248 <col:25, col:29> 'int' '<'
|             | |-ImplicitCastExpr 0x155146230 <col:25> 'int' <LValueToRValue>
|             | | `-DeclRefExpr 0x1551461f0 <col:25> 'int' lvalue Var 0x155142390 'c' 'int'
|             | `-IntegerLiteral 0x155146210 <col:29> 'int' 3
|             |-UnaryOperator 0x155146288 <col:32, col:33> 'int' postfix '++'
|             | `-DeclRefExpr 0x155146268 <col:32> 'int' lvalue Var 0x155142390 'c' 'int'
|             `-CompoundStmt 0x155147000 <col:37, line:47:13>
|               |-BinaryOperator 0x1551463d8 <line:34:17, col:39> 'int' '='
|               | |-ArraySubscriptExpr 0x155146310 <col:17, col:28> 'int' lvalue
|               | | |-ImplicitCastExpr 0x1551462e0 <col:17> 'int *' <ArrayToPointerDecay>
|               | | | `-DeclRefExpr 0x1551462a0 <col:17> 'int[3]' lvalue Var 0x155142138 'upperleft' 'int[3]'
|               | | `-ImplicitCastExpr 0x1551462f8 <col:27> 'int' <LValueToRValue>
|               | |   `-DeclRefExpr 0x1551462c0 <col:27> 'int' lvalue Var 0x155142390 'c' 'int'
|               | `-ImplicitCastExpr 0x1551463c0 <col:32, col:39> 'int' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x1551463a0 <col:32, col:39> 'int' lvalue
|               |     |-ImplicitCastExpr 0x155146370 <col:32> 'int *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x155146330 <col:32> 'int[3]' lvalue Var 0x155128f88 'upper' 'int[3]'
|               |     `-ImplicitCastExpr 0x155146388 <col:38> 'int' <LValueToRValue>
|               |       `-DeclRefExpr 0x155146350 <col:38> 'int' lvalue Var 0x155142390 'c' 'int'
|               |-BinaryOperator 0x155146530 <line:35:17, col:33> 'int' '='
|               | |-ArraySubscriptExpr 0x155146468 <col:17, col:23> 'int' lvalue
|               | | |-ImplicitCastExpr 0x155146438 <col:17> 'int *' <ArrayToPointerDecay>
|               | | | `-DeclRefExpr 0x1551463f8 <col:17> 'int[3]' lvalue Var 0x155142068 'left' 'int[3]'
|               | | `-ImplicitCastExpr 0x155146450 <col:22> 'int' <LValueToRValue>
|               | |   `-DeclRefExpr 0x155146418 <col:22> 'int' lvalue Var 0x155142390 'c' 'int'
|               | `-ImplicitCastExpr 0x155146518 <col:27, col:33> 'int' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x1551464f8 <col:27, col:33> 'int' lvalue
|               |     |-ImplicitCastExpr 0x1551464c8 <col:27> 'int *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x155146488 <col:27> 'int[3]' lvalue Var 0x155128eb8 'here' 'int[3]'
|               |     `-ImplicitCastExpr 0x1551464e0 <col:32> 'int' <LValueToRValue>
|               |       `-DeclRefExpr 0x1551464a8 <col:32> 'int' lvalue Var 0x155142390 'c' 'int'
|               |-BinaryOperator 0x155146648 <line:36:17, col:29> 'int' '='
|               | |-ArraySubscriptExpr 0x1551465c0 <col:17, col:24> 'int' lvalue
|               | | |-ImplicitCastExpr 0x155146590 <col:17> 'int *' <ArrayToPointerDecay>
|               | | | `-DeclRefExpr 0x155146550 <col:17> 'int[3]' lvalue Var 0x155128f88 'upper' 'int[3]'
|               | | `-ImplicitCastExpr 0x1551465a8 <col:23> 'int' <LValueToRValue>
|               | |   `-DeclRefExpr 0x155146570 <col:23> 'int' lvalue Var 0x155142390 'c' 'int'
|               | `-ImplicitCastExpr 0x155146630 <col:28, col:29> 'int' <LValueToRValue>
|               |   `-UnaryOperator 0x155146618 <col:28, col:29> 'int' lvalue prefix '*' cannot overflow
|               |     `-ImplicitCastExpr 0x155146600 <col:29> 'int *' <LValueToRValue>
|               |       `-DeclRefExpr 0x1551465e0 <col:29> 'int *' lvalue Var 0x155128dd0 'prev' 'int *'
|               |-BinaryOperator 0x155146930 <line:38:17, col:33> 'int' '='
|               | |-UnaryOperator 0x155146870 <col:17, col:22> 'int' lvalue prefix '*' cannot overflow
|               | | `-UnaryOperator 0x155146858 <col:18, col:22> 'int *' postfix '++'
|               | |   `-DeclRefExpr 0x155146838 <col:18> 'int *' lvalue Var 0x155128dd0 'prev' 'int *'
|               | `-ImplicitCastExpr 0x155146918 <col:27, col:33> 'int' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x1551468f8 <col:27, col:33> 'int' lvalue
|               |     |-ImplicitCastExpr 0x1551468c8 <col:27> 'int *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x155146888 <col:27> 'int[3]' lvalue Var 0x155128eb8 'here' 'int[3]'
|               |     `-ImplicitCastExpr 0x1551468e0 <col:32> 'int' <LValueToRValue>
|               |       `-DeclRefExpr 0x1551468a8 <col:32> 'int' lvalue Var 0x155142390 'c' 'int'
|               |-BinaryOperator 0x155146ba8 <line:40:17, col:62> 'int' '='
|               | |-DeclRefExpr 0x155146950 <col:17> 'int' lvalue Var 0x1551421f8 'prediction' 'int'
|               | `-BinaryOperator 0x155146b88 <col:30, col:62> 'int' '-'
|               |   |-BinaryOperator 0x155146ac0 <col:30, col:47> 'int' '+'
|               |   | |-ImplicitCastExpr 0x155146a90 <col:30, col:36> 'int' <LValueToRValue>
|               |   | | `-ArraySubscriptExpr 0x1551469e0 <col:30, col:36> 'int' lvalue
|               |   | |   |-ImplicitCastExpr 0x1551469b0 <col:30> 'int *' <ArrayToPointerDecay>
|               |   | |   | `-DeclRefExpr 0x155146970 <col:30> 'int[3]' lvalue Var 0x155142068 'left' 'int[3]'
|               |   | |   `-ImplicitCastExpr 0x1551469c8 <col:35> 'int' <LValueToRValue>
|               |   | |     `-DeclRefExpr 0x155146990 <col:35> 'int' lvalue Var 0x155142390 'c' 'int'
|               |   | `-ImplicitCastExpr 0x155146aa8 <col:40, col:47> 'int' <LValueToRValue>
|               |   |   `-ArraySubscriptExpr 0x155146a70 <col:40, col:47> 'int' lvalue
|               |   |     |-ImplicitCastExpr 0x155146a40 <col:40> 'int *' <ArrayToPointerDecay>
|               |   |     | `-DeclRefExpr 0x155146a00 <col:40> 'int[3]' lvalue Var 0x155128f88 'upper' 'int[3]'
|               |   |     `-ImplicitCastExpr 0x155146a58 <col:46> 'int' <LValueToRValue>
|               |   |       `-DeclRefExpr 0x155146a20 <col:46> 'int' lvalue Var 0x155142390 'c' 'int'
|               |   `-ImplicitCastExpr 0x155146b70 <col:51, col:62> 'int' <LValueToRValue>
|               |     `-ArraySubscriptExpr 0x155146b50 <col:51, col:62> 'int' lvalue
|               |       |-ImplicitCastExpr 0x155146b20 <col:51> 'int *' <ArrayToPointerDecay>
|               |       | `-DeclRefExpr 0x155146ae0 <col:51> 'int[3]' lvalue Var 0x155142138 'upperleft' 'int[3]'
|               |       `-ImplicitCastExpr 0x155146b38 <col:61> 'int' <LValueToRValue>
|               |         `-DeclRefExpr 0x155146b00 <col:61> 'int' lvalue Var 0x155142390 'c' 'int'
|               |-IfStmt 0x155146dc8 <line:41:17, line:45:17> has_else
|               | |-BinaryOperator 0x155146c20 <line:41:21, col:34> 'int' '<'
|               | | |-ImplicitCastExpr 0x155146c08 <col:21> 'int' <LValueToRValue>
|               | | | `-DeclRefExpr 0x155146bc8 <col:21> 'int' lvalue Var 0x1551421f8 'prediction' 'int'
|               | | `-IntegerLiteral 0x155146be8 <col:34> 'int' 0
|               | |-CompoundStmt 0x155146ca0 <col:37, line:43:17>
|               | | `-BinaryOperator 0x155146c80 <line:42:21, col:34> 'int' '='
|               | |   |-DeclRefExpr 0x155146c40 <col:21> 'int' lvalue Var 0x1551421f8 'prediction' 'int'
|               | |   `-IntegerLiteral 0x155146c60 <col:34> 'int' 0
|               | `-IfStmt 0x155146da8 <line:43:24, line:45:17>
|               |   |-BinaryOperator 0x155146d10 <line:43:28, col:41> 'int' '>'
|               |   | |-ImplicitCastExpr 0x155146cf8 <col:28> 'int' <LValueToRValue>
|               |   | | `-DeclRefExpr 0x155146cb8 <col:28> 'int' lvalue Var 0x1551421f8 'prediction' 'int'
|               |   | `-IntegerLiteral 0x155146cd8 <col:41> 'int' 255
|               |   `-CompoundStmt 0x155146d90 <col:47, line:45:17>
|               |     `-BinaryOperator 0x155146d70 <line:44:21, col:34> 'int' '='
|               |       |-DeclRefExpr 0x155146d30 <col:21> 'int' lvalue Var 0x1551421f8 'prediction' 'int'
|               |       `-IntegerLiteral 0x155146d50 <col:34> 'int' 255
|               `-BinaryOperator 0x155146fc0 <line:46:17, col:53> '<dependent type>' contains-errors '='
|                 |-UnaryOperator 0x155146e30 <col:17, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow
|                 | `-UnaryOperator 0x155146e18 <col:18, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow
|                 |   `-RecoveryExpr 0x155146df8 <col:18> '<dependent type>' contains-errors lvalue
|                 `-CStyleCastExpr 0x155146f98 <col:26, col:53> 'char' <IntegralCast>
|                   `-ParenExpr 0x155146f78 <col:32, col:53> 'int'
|                     `-BinaryOperator 0x155146f28 <col:33, col:43> 'int' '-'
|                       |-ImplicitCastExpr 0x155146ef8 <col:33, col:39> 'int' <LValueToRValue>
|                       | `-ArraySubscriptExpr 0x155146eb8 <col:33, col:39> 'int' lvalue
|                       |   |-ImplicitCastExpr 0x155146e88 <col:33> 'int *' <ArrayToPointerDecay>
|                       |   | `-DeclRefExpr 0x155146e48 <col:33> 'int[3]' lvalue Var 0x155128eb8 'here' 'int[3]'
|                       |   `-ImplicitCastExpr 0x155146ea0 <col:38> 'int' <LValueToRValue>
|                       |     `-DeclRefExpr 0x155146e68 <col:38> 'int' lvalue Var 0x155142390 'c' 'int'
|                       `-ImplicitCastExpr 0x155146f10 <col:43> 'int' <LValueToRValue>
|                         `-DeclRefExpr 0x155146ed8 <col:43> 'int' lvalue Var 0x1551421f8 'prediction' 'int'
`-FunctionDecl 0x1551428c0 <line:12:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x1551429c0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x155142a28 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x155142a90 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x155142968 <<invalid sloc>> Implicit 900
