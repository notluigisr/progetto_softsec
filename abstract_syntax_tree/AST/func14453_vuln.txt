TranslationUnitDecl 0x14a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a855bd0 '__int128'
|-TypedefDecl 0x14a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a855bf0 'unsigned __int128'
|-TypedefDecl 0x14b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14a856580 '__NSConstantString_tag'
|-TypedefDecl 0x14b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a855d90 '__SVInt8_t'
|-TypedefDecl 0x14b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a855db0 '__SVInt16_t'
|-TypedefDecl 0x14b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a855dd0 '__SVInt32_t'
|-TypedefDecl 0x14b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a855df0 '__SVInt64_t'
|-TypedefDecl 0x14b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a855e10 '__SVUint8_t'
|-TypedefDecl 0x14b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a855e30 '__SVUint16_t'
|-TypedefDecl 0x14b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a855e50 '__SVUint32_t'
|-TypedefDecl 0x14b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a855e70 '__SVUint64_t'
|-TypedefDecl 0x14b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a855e90 '__SVFloat16_t'
|-TypedefDecl 0x14b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a856390 '__SVBool_t'
|-TypedefDecl 0x14b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a8563f0 '__SVCount_t'
|-TypedefDecl 0x14b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-TypedefDecl 0x14b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
`-FunctionDecl 0x14b00df48 <dataset_diviso_filec/func14453_vuln.c:1:1, line:23:1> line:1:1 invalid name_len 'int (int *, const unsigned char *, const unsigned char *)'
  |-ParmVarDecl 0x14b00dd28 <col:10, col:30> col:30 invalid ndo 'int *'
  |-ParmVarDecl 0x14b00ddd8 <line:2:10, col:31> col:31 used s 'const unsigned char *'
  |-ParmVarDecl 0x14b00de58 <col:34, col:55> col:55 used maxbuf 'const unsigned char *'
  `-CompoundStmt 0x14b809c20 <line:3:1, line:23:1>
    |-DeclStmt 0x14b00e0c0 <line:4:5, col:32>
    | `-VarDecl 0x14b00e020 <col:5, col:31> col:26 used s0 'const unsigned char *' cinit
    |   `-ImplicitCastExpr 0x14b00e0a8 <col:31> 'const unsigned char *' <LValueToRValue>
    |     `-DeclRefExpr 0x14b00e088 <col:31> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    |-DeclStmt 0x14b00e158 <line:5:5, col:20>
    | `-VarDecl 0x14b00e0f0 <col:5, col:19> col:19 used c 'unsigned char'
    |-IfStmt 0x14b00e268 <line:7:5, line:8:11>
    | |-BinaryOperator 0x14b00e1e0 <line:7:9, col:14> 'int' '>='
    | | |-ImplicitCastExpr 0x14b00e1b0 <col:9> 'const unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b00e170 <col:9> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    | | `-ImplicitCastExpr 0x14b00e1c8 <col:14> 'const unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14b00e190 <col:14> 'const unsigned char *' lvalue ParmVar 0x14b00de58 'maxbuf' 'const unsigned char *'
    | `-ReturnStmt 0x14b00e258 <line:8:2, col:11>
    |   `-ParenExpr 0x14b00e238 <col:8, col:11> 'int'
    |     `-UnaryOperator 0x14b00e220 <col:9, col:10> 'int' prefix '-'
    |       `-IntegerLiteral 0x14b00e200 <col:10> 'int' 1
    |-CallExpr 0x14b8092b8 <line:9:5, col:21> 'int'
    | |-ImplicitCastExpr 0x14b8092a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14b00e3e0 <col:5> 'int ()' Function 0x14b00e328 'ND_TCHECK2' 'int ()'
    | |-ImplicitCastExpr 0x14b809300 <col:16, col:17> 'int' <IntegralCast>
    | | `-ImplicitCastExpr 0x14b8092e8 <col:16, col:17> 'unsigned char' <LValueToRValue>
    | |   `-UnaryOperator 0x14b809238 <col:16, col:17> 'const unsigned char' lvalue prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x14b809220 <col:17> 'const unsigned char *' <LValueToRValue>
    | |       `-DeclRefExpr 0x14b809200 <col:17> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    | `-IntegerLiteral 0x14b809250 <col:20> 'int' 1
    |-BinaryOperator 0x14b8093a0 <line:10:5, col:10> 'unsigned char' '='
    | |-DeclRefExpr 0x14b809318 <col:5> 'unsigned char' lvalue Var 0x14b00e0f0 'c' 'unsigned char'
    | `-ImplicitCastExpr 0x14b809388 <col:9, col:10> 'unsigned char' <LValueToRValue>
    |   `-UnaryOperator 0x14b809370 <col:9, col:10> 'const unsigned char' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x14b809358 <col:10> 'const unsigned char *' <LValueToRValue>
    |       `-DeclRefExpr 0x14b809338 <col:10> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    |-IfStmt 0x14b809500 <line:11:5, line:12:10>
    | |-BinaryOperator 0x14b809490 <line:11:9, col:23> 'int' '=='
    | | |-ParenExpr 0x14b809450 <col:9, col:18> 'int'
    | | | `-BinaryOperator 0x14b809430 <col:10, col:14> 'int' '&'
    | | |   |-ImplicitCastExpr 0x14b809418 <col:10> 'int' <IntegralCast>
    | | |   | `-ImplicitCastExpr 0x14b809400 <col:10> 'unsigned char' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x14b8093c0 <col:10> 'unsigned char' lvalue Var 0x14b00e0f0 'c' 'unsigned char'
    | | |   `-IntegerLiteral 0x14b8093e0 <col:14> 'int' 192
    | | `-IntegerLiteral 0x14b809470 <col:23> 'int' 192
    | `-ReturnStmt 0x14b8094f0 <line:12:2, col:10>
    |   `-ParenExpr 0x14b8094d0 <col:8, col:10> 'int'
    |     `-IntegerLiteral 0x14b8094b0 <col:9> 'int' 2
    |-WhileStmt 0x14b809900 <line:13:5, line:18:5>
    | |-ImplicitCastExpr 0x14b809570 <line:13:12, col:13> 'unsigned char' <LValueToRValue>
    | | `-UnaryOperator 0x14b809558 <col:12, col:13> 'const unsigned char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x14b809540 <col:13> 'const unsigned char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x14b809520 <col:13> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    | `-CompoundStmt 0x14b8098d8 <col:16, line:18:5>
    |   |-IfStmt 0x14b809680 <line:14:2, line:15:15>
    |   | |-BinaryOperator 0x14b8095f8 <line:14:6, col:11> 'int' '>='
    |   | | |-ImplicitCastExpr 0x14b8095c8 <col:6> 'const unsigned char *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14b809588 <col:6> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x14b8095e0 <col:11> 'const unsigned char *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14b8095a8 <col:11> 'const unsigned char *' lvalue ParmVar 0x14b00de58 'maxbuf' 'const unsigned char *'
    |   | `-ReturnStmt 0x14b809670 <line:15:6, col:15>
    |   |   `-ParenExpr 0x14b809650 <col:12, col:15> 'int'
    |   |     `-UnaryOperator 0x14b809638 <col:13, col:14> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x14b809618 <col:14> 'int' 1
    |   |-CallExpr 0x14b809748 <line:16:2, col:18> 'int'
    |   | |-ImplicitCastExpr 0x14b809730 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14b8096a0 <col:2> 'int ()' Function 0x14b00e328 'ND_TCHECK2' 'int ()'
    |   | |-ImplicitCastExpr 0x14b809790 <col:13, col:14> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x14b809778 <col:13, col:14> 'unsigned char' <LValueToRValue>
    |   | |   `-UnaryOperator 0x14b8096f8 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   | |     `-ImplicitCastExpr 0x14b8096e0 <col:14> 'const unsigned char *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x14b8096c0 <col:14> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    |   | `-IntegerLiteral 0x14b809710 <col:17> 'int' 1
    |   `-CompoundAssignOperator 0x14b8098a8 <line:17:2, col:14> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |     |-DeclRefExpr 0x14b8097a8 <col:2> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    |     `-BinaryOperator 0x14b809888 <col:7, col:14> 'int' '+'
    |       |-ImplicitCastExpr 0x14b809870 <col:7, col:10> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x14b809858 <col:7, col:10> 'unsigned char' <LValueToRValue>
    |       |   `-ParenExpr 0x14b809818 <col:7, col:10> 'const unsigned char' lvalue
    |       |     `-UnaryOperator 0x14b809800 <col:8, col:9> 'const unsigned char' lvalue prefix '*' cannot overflow
    |       |       `-ImplicitCastExpr 0x14b8097e8 <col:9> 'const unsigned char *' <LValueToRValue>
    |       |         `-DeclRefExpr 0x14b8097c8 <col:9> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    |       `-IntegerLiteral 0x14b809838 <col:14> 'int' 1
    |-ReturnStmt 0x14b809b38 <line:19:5, col:31>
    | `-ParenExpr 0x14b809b18 <col:11, col:31> 'int'
    |   `-BinaryOperator 0x14b809af8 <col:12, col:30> 'int' '+'
    |     |-CallExpr 0x14b809a78 <col:12, col:26> 'int'
    |     | |-ImplicitCastExpr 0x14b809a60 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x14b809a00 <col:12> 'int ()' Function 0x14b809948 'PTR_DIFF' 'int ()'
    |     | |-ImplicitCastExpr 0x14b809aa8 <col:21> 'const unsigned char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14b809a20 <col:21> 'const unsigned char *' lvalue ParmVar 0x14b00ddd8 's' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x14b809ac0 <col:24> 'const unsigned char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x14b809a40 <col:24> 'const unsigned char *' lvalue Var 0x14b00e020 's0' 'const unsigned char *'
    |     `-IntegerLiteral 0x14b809ad8 <col:30> 'int' 1
    `-LabelStmt 0x14b809c00 <line:21:1, line:22:14> 'trunc'
      `-ReturnStmt 0x14b809ba0 <col:5, col:14>
        `-ParenExpr 0x14b809b80 <col:11, col:14> 'int'
          `-UnaryOperator 0x14b809b68 <col:12, col:13> 'int' prefix '-'
            `-IntegerLiteral 0x14b809b48 <col:13> 'int' 1
