TranslationUnitDecl 0x14c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c055bd0 '__int128'
|-TypedefDecl 0x14c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c055bf0 'unsigned __int128'
|-TypedefDecl 0x14c126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c126000 'struct __NSConstantString_tag'
|   `-Record 0x14c056580 '__NSConstantString_tag'
|-TypedefDecl 0x14c126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c055d90 '__SVInt8_t'
|-TypedefDecl 0x14c126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c055db0 '__SVInt16_t'
|-TypedefDecl 0x14c126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c055dd0 '__SVInt32_t'
|-TypedefDecl 0x14c1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c055df0 '__SVInt64_t'
|-TypedefDecl 0x14c126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c055e10 '__SVUint8_t'
|-TypedefDecl 0x14c1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c055e30 '__SVUint16_t'
|-TypedefDecl 0x14c126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c055e50 '__SVUint32_t'
|-TypedefDecl 0x14c126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c055e70 '__SVUint64_t'
|-TypedefDecl 0x14c1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c055e90 '__SVFloat16_t'
|-TypedefDecl 0x14c126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c056390 '__SVBool_t'
|-TypedefDecl 0x14c127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c0563f0 '__SVCount_t'
|-TypedefDecl 0x14c127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c127fb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-TypedefDecl 0x14c128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c127fb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
`-FunctionDecl 0x14c1283a8 <dataset_diviso_filec/func16158_nonvuln.c:1:1, line:48:1> line:1:1 invalid node_new_backref 'int (int, int *, int, int *)'
  |-ParmVarDecl 0x14c1280d8 <col:18, col:22> col:22 used back_num 'int'
  |-ParmVarDecl 0x14c128188 <col:32, col:37> col:37 used backrefs 'int *'
  |-ParmVarDecl 0x14c128208 <col:47, col:51> col:51 used by_name 'int'
  |-ParmVarDecl 0x14c1282a0 <line:5:18, col:27> col:27 invalid env 'int *'
  `-CompoundStmt 0x14c144bc0 <line:6:1, line:48:1>
    |-DeclStmt 0x14c1284f0 <line:7:3, col:8>
    | `-VarDecl 0x14c128488 <col:3, col:7> col:7 used i 'int'
    |-CallExpr 0x14c141880 <line:10:3, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c141800 <col:3> 'int ()' Function 0x14c128730 'CHECK_NULL_RETURN' 'int ()'
    | `-RecoveryExpr 0x14c141860 <col:21> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c141a48 <line:12:3, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c141988 <col:3> 'int ()' Function 0x14c1418d0 'NODE_SET_TYPE' 'int ()'
    | |-RecoveryExpr 0x14c141a08 <col:17> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x14c141a28 <col:23> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14c141cd0 <line:13:3, col:30> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14c141c88 <col:3, col:19> '<dependent type>' contains-errors lvalue ->back_num
    | | `-CallExpr 0x14c141c60 <col:3, col:16> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14c141b58 <col:3> 'int ()' Function 0x14c141aa0 'BACKREF_' 'int ()'
    | |   `-RecoveryExpr 0x14c141c40 <col:12> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x14c141c00 <col:30> 'int' lvalue ParmVar 0x14c1280d8 'back_num' 'int'
    |-IfStmt 0x14c142010 <line:15:3, line:16:34>
    | |-BinaryOperator 0x14c141e20 <line:15:7, col:18> 'int' '!='
    | | |-ImplicitCastExpr 0x14c141e08 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c141dc8 <col:7> 'int' lvalue ParmVar 0x14c128208 'by_name' 'int'
    | | `-IntegerLiteral 0x14c141de8 <col:18> 'int' 0
    | `-CallExpr 0x14c141fe0 <line:16:5, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c141f20 <col:5> 'int ()' Function 0x14c141e68 'NODE_STATUS_ADD' 'int ()'
    |   |-RecoveryExpr 0x14c141fa0 <col:21> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14c141fc0 <col:27> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x14c142760 <line:25:3, line:31:3>
    | |-BinaryOperator 0x14c142070 <line:25:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x14c142030 <col:8> 'int' lvalue Var 0x14c128488 'i' 'int'
    | | `-IntegerLiteral 0x14c142050 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14c142100 <col:15, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x14c1420d0 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c142090 <col:15> 'int' lvalue Var 0x14c128488 'i' 'int'
    | | `-ImplicitCastExpr 0x14c1420e8 <col:19> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c1420b0 <col:19> 'int' lvalue ParmVar 0x14c1280d8 'back_num' 'int'
    | |-UnaryOperator 0x14c142140 <col:29, col:30> 'int' postfix '++'
    | | `-DeclRefExpr 0x14c142120 <col:29> 'int' lvalue Var 0x14c128488 'i' 'int'
    | `-CompoundStmt 0x14c142748 <col:34, line:31:3>
    |   `-IfStmt 0x14c142728 <line:26:5, line:30:5>
    |     |-BinaryOperator 0x14c1425f0 <line:26:9, line:27:54> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x14c142250 <line:26:9, col:29> 'int' contains-errors '<='
    |     | | |-ArraySubscriptExpr 0x14c1421c8 <col:9, col:19> 'int' lvalue
    |     | | | |-ImplicitCastExpr 0x14c142198 <col:9> 'int *' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x14c142158 <col:9> 'int *' lvalue ParmVar 0x14c128188 'backrefs' 'int *'
    |     | | | `-ImplicitCastExpr 0x14c1421b0 <col:18> 'int' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x14c142178 <col:18> 'int' lvalue Var 0x14c128488 'i' 'int'
    |     | | `-CXXDependentScopeMemberExpr 0x14c142208 <col:24, col:29> '<dependent type>' contains-errors lvalue ->num_mem
    |     | |   `-RecoveryExpr 0x14c1421e8 <col:24> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x14c1425c8 <line:27:9, col:54> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x14c142350 <col:9> 'int ()' Function 0x14c142298 'IS_NULL' 'int ()'
    |     |   `-CXXDependentScopeMemberExpr 0x14c142580 <col:17, col:50> '<dependent type>' contains-errors lvalue .node
    |     |     `-ArraySubscriptExpr 0x14c142560 <col:17, col:48> '<dependent type>' contains-errors lvalue
    |     |       |-CallExpr 0x14c142490 <col:17, col:35> '<dependent type>' contains-errors
    |     |       | |-DeclRefExpr 0x14c142450 <col:17> 'int ()' Function 0x14c142398 'SCANENV_MEMENV' 'int ()'
    |     |       | `-RecoveryExpr 0x14c142470 <col:32> '<dependent type>' contains-errors lvalue
    |     |       `-ImplicitCastExpr 0x14c142548 <col:37, col:47> 'int' <LValueToRValue>
    |     |         `-ArraySubscriptExpr 0x14c142528 <col:37, col:47> 'int' lvalue
    |     |           |-ImplicitCastExpr 0x14c1424f8 <col:37> 'int *' <LValueToRValue>
    |     |           | `-DeclRefExpr 0x14c1424b8 <col:37> 'int *' lvalue ParmVar 0x14c128188 'backrefs' 'int *'
    |     |           `-ImplicitCastExpr 0x14c142510 <col:46> 'int' <LValueToRValue>
    |     |             `-DeclRefExpr 0x14c1424d8 <col:46> 'int' lvalue Var 0x14c128488 'i' 'int'
    |     `-CompoundStmt 0x14c142708 <col:57, line:30:5>
    |       |-CallExpr 0x14c1426d0 <line:28:7, col:38> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x14c142610 <col:7> 'int ()' Function 0x14c141e68 'NODE_STATUS_ADD' 'int ()'
    |       | |-RecoveryExpr 0x14c142690 <col:23> '<dependent type>' contains-errors lvalue
    |       | `-RecoveryExpr 0x14c1426b0 <col:29> '<dependent type>' contains-errors lvalue
    |       `-BreakStmt 0x14c142700 <line:29:7>
    `-IfStmt 0x14c144b90 <line:33:3, line:46:3> has_else
      |-RecoveryExpr 0x14c1427b8 <line:33:7, col:19> '_Bool' contains-errors
      |-CompoundStmt 0x14c1443d8 <col:39, line:36:3>
      `-CompoundStmt 0x14c144b68 <line:37:8, line:46:3>
        |-DeclStmt 0x14c144690 <line:38:5, col:52>
        | `-VarDecl 0x14c144400 <col:5, col:51> col:10 used p 'int *' cinit
        |   `-CStyleCastExpr 0x14c144668 <col:14, col:51> 'int *' <IntegralToPointer>
        |     `-CallExpr 0x14c144628 <col:21, col:51> 'int'
        |       |-ImplicitCastExpr 0x14c144610 <col:21> 'int (*)()' <FunctionToPointerDecay>
        |       | `-DeclRefExpr 0x14c144548 <col:21> 'int ()' Function 0x14c144490 'xmalloc' 'int ()'
        |       `-BinaryOperator 0x14c1445f0 <col:29, col:43> 'unsigned long' '*'
        |         |-UnaryExprOrTypeTraitExpr 0x14c144580 <col:29, col:39> 'unsigned long' sizeof 'int'
        |         `-ImplicitCastExpr 0x14c1445d8 <col:43> 'unsigned long' <IntegralCast>
        |           `-ImplicitCastExpr 0x14c1445c0 <col:43> 'int' <LValueToRValue>
        |             `-DeclRefExpr 0x14c1445a0 <col:43> 'int' lvalue ParmVar 0x14c1280d8 'back_num' 'int'
        |-IfStmt 0x14c144850 <line:39:5, line:42:5>
        | |-CallExpr 0x14c144700 <line:39:9, col:18> 'int'
        | | |-ImplicitCastExpr 0x14c1446e8 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | | | `-DeclRefExpr 0x14c1446a8 <col:9> 'int ()' Function 0x14c142298 'IS_NULL' 'int ()'
        | | `-ImplicitCastExpr 0x14c144728 <col:17> 'int *' <LValueToRValue>
        | |   `-DeclRefExpr 0x14c1446c8 <col:17> 'int *' lvalue Var 0x14c144400 'p' 'int *'
        | `-CompoundStmt 0x14c144840 <col:21, line:42:5>
        `-ForStmt 0x14c144b30 <line:44:5, line:45:24>
          |-BinaryOperator 0x14c1448f0 <line:44:10, col:14> 'int' '='
          | |-DeclRefExpr 0x14c1448b0 <col:10> 'int' lvalue Var 0x14c128488 'i' 'int'
          | `-IntegerLiteral 0x14c1448d0 <col:14> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x14c144980 <col:17, col:21> 'int' '<'
          | |-ImplicitCastExpr 0x14c144950 <col:17> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x14c144910 <col:17> 'int' lvalue Var 0x14c128488 'i' 'int'
          | `-ImplicitCastExpr 0x14c144968 <col:21> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x14c144930 <col:21> 'int' lvalue ParmVar 0x14c1280d8 'back_num' 'int'
          |-UnaryOperator 0x14c1449c0 <col:31, col:32> 'int' postfix '++'
          | `-DeclRefExpr 0x14c1449a0 <col:31> 'int' lvalue Var 0x14c128488 'i' 'int'
          `-BinaryOperator 0x14c144b10 <line:45:7, col:24> 'int' '='
            |-ArraySubscriptExpr 0x14c144a48 <col:7, col:10> 'int' lvalue
            | |-ImplicitCastExpr 0x14c144a18 <col:7> 'int *' <LValueToRValue>
            | | `-DeclRefExpr 0x14c1449d8 <col:7> 'int *' lvalue Var 0x14c144400 'p' 'int *'
            | `-ImplicitCastExpr 0x14c144a30 <col:9> 'int' <LValueToRValue>
            |   `-DeclRefExpr 0x14c1449f8 <col:9> 'int' lvalue Var 0x14c128488 'i' 'int'
            `-ImplicitCastExpr 0x14c144af8 <col:14, col:24> 'int' <LValueToRValue>
              `-ArraySubscriptExpr 0x14c144ad8 <col:14, col:24> 'int' lvalue
                |-ImplicitCastExpr 0x14c144aa8 <col:14> 'int *' <LValueToRValue>
                | `-DeclRefExpr 0x14c144a68 <col:14> 'int *' lvalue ParmVar 0x14c128188 'backrefs' 'int *'
                `-ImplicitCastExpr 0x14c144ac0 <col:23> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x14c144a88 <col:23> 'int' lvalue Var 0x14c128488 'i' 'int'
