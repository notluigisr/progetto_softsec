TranslationUnitDecl 0x148855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1488564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148855bd0 '__int128'
|-TypedefDecl 0x148856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148855bf0 'unsigned __int128'
|-TypedefDecl 0x148926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x148926000 'struct __NSConstantString_tag'
|   `-Record 0x148856580 '__NSConstantString_tag'
|-TypedefDecl 0x148926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148855d90 '__SVInt8_t'
|-TypedefDecl 0x148926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148855db0 '__SVInt16_t'
|-TypedefDecl 0x148926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148855dd0 '__SVInt32_t'
|-TypedefDecl 0x1489263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148855df0 '__SVInt64_t'
|-TypedefDecl 0x148926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148855e10 '__SVUint8_t'
|-TypedefDecl 0x1489264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148855e30 '__SVUint16_t'
|-TypedefDecl 0x148926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148855e50 '__SVUint32_t'
|-TypedefDecl 0x148926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148855e70 '__SVUint64_t'
|-TypedefDecl 0x1489265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148855e90 '__SVFloat16_t'
|-TypedefDecl 0x148926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1489266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148855ed0 '__SVFloat64_t'
|-TypedefDecl 0x148926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x148926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1489267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x148926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1489268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x148926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x148926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1489269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x148926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x148926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x148926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x148926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x148926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x148926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148856090 '__clang_svint8x3_t'
|-TypedefDecl 0x148926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1488560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x148926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1488560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x148926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1488560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x148926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x148926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x148926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x148926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x148926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x148927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1488561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x148927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1488561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1489278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1488561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x148927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1489279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148856230 '__clang_svint16x4_t'
|-TypedefDecl 0x148927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148856250 '__clang_svint32x4_t'
|-TypedefDecl 0x148927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148856270 '__clang_svint64x4_t'
|-TypedefDecl 0x148927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x148927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1488562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x148927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1488562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x148927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1488562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x148927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x148927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x148927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x148927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x148927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148856390 '__SVBool_t'
|-TypedefDecl 0x148927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1488563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x148927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1488563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x148927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1488563f0 '__SVCount_t'
|-TypedefDecl 0x148927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x148927fb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
|-TypedefDecl 0x148928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x148927fb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
`-FunctionDecl 0x148928500 <dataset_diviso_filec/func9234_vuln.c:1:1, line:20:1> line:1:20 ModulateHWB 'void (const double, const double, const double, double *, double *, double *)' static inline
  |-ParmVarDecl 0x1489280d8 <col:32, col:45> col:45 used percent_hue 'const double'
  |-ParmVarDecl 0x148928158 <line:2:3, col:16> col:16 used percent_whiteness 'const double'
  |-ParmVarDecl 0x1489281d8 <col:34, col:47> col:47 used percent_blackness 'const double'
  |-ParmVarDecl 0x148928288 <col:65, col:73> col:73 used red 'double *'
  |-ParmVarDecl 0x148928308 <line:3:3, col:11> col:11 used green 'double *'
  |-ParmVarDecl 0x148928388 <col:17, col:25> col:25 used blue 'double *'
  `-CompoundStmt 0x148942370 <line:4:1, line:20:1>
    |-DeclStmt 0x1489287c0 <line:5:3, line:8:14>
    | |-VarDecl 0x148928638 <line:5:3, line:6:5> col:5 used blackness 'double'
    | |-VarDecl 0x1489286b8 <line:5:3, line:7:5> col:5 used hue 'double'
    | `-VarDecl 0x148928738 <line:5:3, line:8:5> col:5 used whiteness 'double'
    |-CallExpr 0x148941b18 <line:11:3, col:63> 'int'
    | |-ImplicitCastExpr 0x148941b00 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x148941910 <col:3> 'int ()' Function 0x148941858 'ConvertRGBToHWB' 'int ()'
    | |-ImplicitCastExpr 0x148941b68 <col:19, col:20> 'double' <LValueToRValue>
    | | `-UnaryOperator 0x148941968 <col:19, col:20> 'double' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x148941950 <col:20> 'double *' <LValueToRValue>
    | |     `-DeclRefExpr 0x148941930 <col:20> 'double *' lvalue ParmVar 0x148928288 'red' 'double *'
    | |-ImplicitCastExpr 0x148941b80 <col:24, col:25> 'double' <LValueToRValue>
    | | `-UnaryOperator 0x1489419b8 <col:24, col:25> 'double' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x1489419a0 <col:25> 'double *' <LValueToRValue>
    | |     `-DeclRefExpr 0x148941980 <col:25> 'double *' lvalue ParmVar 0x148928308 'green' 'double *'
    | |-ImplicitCastExpr 0x148941b98 <col:31, col:32> 'double' <LValueToRValue>
    | | `-UnaryOperator 0x148941a08 <col:31, col:32> 'double' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x1489419f0 <col:32> 'double *' <LValueToRValue>
    | |     `-DeclRefExpr 0x1489419d0 <col:32> 'double *' lvalue ParmVar 0x148928388 'blue' 'double *'
    | |-UnaryOperator 0x148941a40 <col:37, col:38> 'double *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x148941a20 <col:38> 'double' lvalue Var 0x1489286b8 'hue' 'double'
    | |-UnaryOperator 0x148941a78 <col:42, col:43> 'double *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x148941a58 <col:43> 'double' lvalue Var 0x148928738 'whiteness' 'double'
    | `-UnaryOperator 0x148941ab0 <col:53, col:54> 'double *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x148941a90 <col:54> 'double' lvalue Var 0x148928638 'blackness' 'double'
    |-CompoundAssignOperator 0x148941ce8 <line:12:3, col:33> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x148941bb0 <col:3> 'double' lvalue Var 0x1489286b8 'hue' 'double'
    | `-BinaryOperator 0x148941cc8 <col:8, col:33> 'double' '*'
    |   |-FloatingLiteral 0x148941bd0 <col:8> 'double' 5.000000e-01
    |   `-ParenExpr 0x148941ca8 <col:12, col:33> 'double'
    |     `-BinaryOperator 0x148941c88 <col:13, col:30> 'double' '-'
    |       |-BinaryOperator 0x148941c48 <col:13, col:18> 'double' '*'
    |       | |-FloatingLiteral 0x148941bf0 <col:13> 'double' 1.000000e-02
    |       | `-ImplicitCastExpr 0x148941c30 <col:18> 'double' <LValueToRValue>
    |       |   `-DeclRefExpr 0x148941c10 <col:18> 'const double' lvalue ParmVar 0x1489280d8 'percent_hue' 'const double'
    |       `-FloatingLiteral 0x148941c68 <col:30> 'double' 1.000000e+00
    |-WhileStmt 0x148941e00 <line:13:3, line:14:10>
    | |-BinaryOperator 0x148941d70 <line:13:10, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x148941d58 <col:10> 'double' <LValueToRValue>
    | | | `-DeclRefExpr 0x148941d18 <col:10> 'double' lvalue Var 0x1489286b8 'hue' 'double'
    | | `-FloatingLiteral 0x148941d38 <col:16> 'double' 0.000000e+00
    | `-CompoundAssignOperator 0x148941dd0 <line:14:5, col:10> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
    |   |-DeclRefExpr 0x148941d90 <col:5> 'double' lvalue Var 0x1489286b8 'hue' 'double'
    |   `-FloatingLiteral 0x148941db0 <col:10> 'double' 1.000000e+00
    |-WhileStmt 0x148941f08 <line:15:3, line:16:10>
    | |-BinaryOperator 0x148941e78 <line:15:10, col:17> 'int' '>='
    | | |-ImplicitCastExpr 0x148941e60 <col:10> 'double' <LValueToRValue>
    | | | `-DeclRefExpr 0x148941e20 <col:10> 'double' lvalue Var 0x1489286b8 'hue' 'double'
    | | `-FloatingLiteral 0x148941e40 <col:17> 'double' 1.000000e+00
    | `-CompoundAssignOperator 0x148941ed8 <line:16:5, col:10> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
    |   |-DeclRefExpr 0x148941e98 <col:5> 'double' lvalue Var 0x1489286b8 'hue' 'double'
    |   `-FloatingLiteral 0x148941eb8 <col:10> 'double' 1.000000e+00
    |-CompoundAssignOperator 0x148941fc0 <line:17:3, col:19> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x148941f28 <col:3> 'double' lvalue Var 0x148928638 'blackness' 'double'
    | `-BinaryOperator 0x148941fa0 <col:14, col:19> 'double' '*'
    |   |-FloatingLiteral 0x148941f48 <col:14> 'double' 1.000000e-02
    |   `-ImplicitCastExpr 0x148941f88 <col:19> 'double' <LValueToRValue>
    |     `-DeclRefExpr 0x148941f68 <col:19> 'const double' lvalue ParmVar 0x1489281d8 'percent_blackness' 'const double'
    |-CompoundAssignOperator 0x148942088 <line:18:3, col:19> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x148941ff0 <col:3> 'double' lvalue Var 0x148928738 'whiteness' 'double'
    | `-BinaryOperator 0x148942068 <col:14, col:19> 'double' '*'
    |   |-FloatingLiteral 0x148942010 <col:14> 'double' 1.000000e-02
    |   `-ImplicitCastExpr 0x148942050 <col:19> 'double' <LValueToRValue>
    |     `-DeclRefExpr 0x148942030 <col:19> 'const double' lvalue ParmVar 0x148928158 'percent_whiteness' 'const double'
    `-CallExpr 0x148942290 <line:19:3, col:57> 'int'
      |-ImplicitCastExpr 0x148942278 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x148942198 <col:3> 'int ()' Function 0x1489420e0 'ConvertHWBToRGB' 'int ()'
      |-ImplicitCastExpr 0x1489422e0 <col:19> 'double' <LValueToRValue>
      | `-DeclRefExpr 0x1489421b8 <col:19> 'double' lvalue Var 0x1489286b8 'hue' 'double'
      |-ImplicitCastExpr 0x1489422f8 <col:23> 'double' <LValueToRValue>
      | `-DeclRefExpr 0x1489421d8 <col:23> 'double' lvalue Var 0x148928738 'whiteness' 'double'
      |-ImplicitCastExpr 0x148942310 <col:33> 'double' <LValueToRValue>
      | `-DeclRefExpr 0x1489421f8 <col:33> 'double' lvalue Var 0x148928638 'blackness' 'double'
      |-ImplicitCastExpr 0x148942328 <col:43> 'double *' <LValueToRValue>
      | `-DeclRefExpr 0x148942218 <col:43> 'double *' lvalue ParmVar 0x148928288 'red' 'double *'
      |-ImplicitCastExpr 0x148942340 <col:47> 'double *' <LValueToRValue>
      | `-DeclRefExpr 0x148942238 <col:47> 'double *' lvalue ParmVar 0x148928308 'green' 'double *'
      `-ImplicitCastExpr 0x148942358 <col:53> 'double *' <LValueToRValue>
        `-DeclRefExpr 0x148942258 <col:53> 'double *' lvalue ParmVar 0x148928388 'blue' 'double *'
