TranslationUnitDecl 0x142828008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x142828eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1428285d0 '__int128'
|-TypedefDecl 0x142828f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1428285f0 'unsigned __int128'
|-TypedefDecl 0x14203b630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14203b400 'struct __NSConstantString_tag'
|   `-Record 0x142828f80 '__NSConstantString_tag'
|-TypedefDecl 0x14203b698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x142828790 '__SVInt8_t'
|-TypedefDecl 0x14203b700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1428287b0 '__SVInt16_t'
|-TypedefDecl 0x14203b768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1428287d0 '__SVInt32_t'
|-TypedefDecl 0x14203b7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1428287f0 '__SVInt64_t'
|-TypedefDecl 0x14203b838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x142828810 '__SVUint8_t'
|-TypedefDecl 0x14203b8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x142828830 '__SVUint16_t'
|-TypedefDecl 0x14203b908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x142828850 '__SVUint32_t'
|-TypedefDecl 0x14203b970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x142828870 '__SVUint64_t'
|-TypedefDecl 0x14203b9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x142828890 '__SVFloat16_t'
|-TypedefDecl 0x14203ba40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1428288b0 '__SVFloat32_t'
|-TypedefDecl 0x14203baa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1428288d0 '__SVFloat64_t'
|-TypedefDecl 0x14203bb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1428288f0 '__SVBfloat16_t'
|-TypedefDecl 0x14203bb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x142828910 '__clang_svint8x2_t'
|-TypedefDecl 0x14203bbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x142828930 '__clang_svint16x2_t'
|-TypedefDecl 0x14203bc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x142828950 '__clang_svint32x2_t'
|-TypedefDecl 0x14203bcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x142828970 '__clang_svint64x2_t'
|-TypedefDecl 0x14203bd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x142828990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14203bd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1428289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14203bde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1428289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14203be50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1428289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14203beb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x142828a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14203bf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x142828a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14203bf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x142828a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14203bff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x142828a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14203c058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x142828a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14203c0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x142828ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14203c128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x142828ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14203c190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x142828af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14203c1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x142828b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14203c260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x142828b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14203c2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x142828b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14203c330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x142828b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14203c398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x142828b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14203c400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x142828bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14203c468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x142828bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14203c4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x142828bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14203c538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x142828c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14203c5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x142828c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14203c608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x142828c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14203c670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x142828c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14203c6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x142828c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14203c740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x142828cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14203c7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x142828cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14203c810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x142828cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14203c878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x142828d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14203c8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x142828d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14203c948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x142828d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14203c9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x142828d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14203ca18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x142828d90 '__SVBool_t'
|-TypedefDecl 0x14203ca80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x142828db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14203cae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x142828dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14203cb50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x142828df0 '__SVCount_t'
|-TypedefDecl 0x14203cbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14203cbb0 'char *'
|   `-BuiltinType 0x1428280b0 'char'
|-TypedefDecl 0x14203cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14203cbb0 'char *'
|   `-BuiltinType 0x1428280b0 'char'
|-FunctionDecl 0x14203cec8 <dataset_diviso_filec/func7169_vuln.c:1:1, line:59:1> line:1:5 invalid BN_dec2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x14203cd60 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x14203cde0 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x142059a70 <line:2:1, line:59:1>
|   |-DeclStmt 0x14203d170 <line:5:5, col:22>
|   | |-VarDecl 0x14203cfc8 <col:5, col:15> col:9 used neg 'int' cinit
|   | | `-IntegerLiteral 0x14203d030 <col:15> 'int' 0
|   | |-VarDecl 0x14203d068 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x14203d0e8 <col:5, col:21> col:21 used j 'int'
|   |-DeclStmt 0x14203d208 <line:6:5, col:12>
|   | `-VarDecl 0x14203d1a0 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x14203d3c0 <line:8:5, line:9:18>
|   | |-RecoveryExpr 0x14203d350 <line:8:9, col:35> '_Bool' contains-errors
|   | `-ReturnStmt 0x14203d3b0 <line:9:9, col:18>
|   |   `-ParenExpr 0x14203d390 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x14203d370 <col:17> 'int' 0
|   |-IfStmt 0x142054d50 <line:10:5, line:13:5>
|   | |-BinaryOperator 0x142054c78 <line:10:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x142054c60 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x142054c48 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x142054c18 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x142054c00 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x14203d3e0 <col:10> 'const char *' lvalue ParmVar 0x14203cde0 'a' 'const char *'
|   | | `-CharacterLiteral 0x142054c30 <col:15> 'int' 45
|   | `-CompoundStmt 0x142054d30 <col:20, line:13:5>
|   |   |-BinaryOperator 0x142054cd8 <line:11:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x142054c98 <col:9> 'int' lvalue Var 0x14203cfc8 'neg' 'int'
|   |   | `-IntegerLiteral 0x142054cb8 <col:15> 'int' 1
|   |   `-UnaryOperator 0x142054d18 <line:12:9, col:10> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x142054cf8 <col:9> 'const char *' lvalue ParmVar 0x14203cde0 'a' 'const char *'
|   |-ForStmt 0x1420555c8 <line:15:5, col:52>
|   | |-BinaryOperator 0x142054db0 <col:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x142054d70 <col:10> 'int' lvalue Var 0x14203d068 'i' 'int'
|   | | `-IntegerLiteral 0x142054d90 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-CallExpr 0x142055548 <col:17, col:44> 'int'
|   | | |-ImplicitCastExpr 0x142055530 <col:17> 'int (*)(int)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1420553f0 <col:17> 'int (int)' Function 0x142055230 'isdigit' 'int (int)'
|   | | `-ImplicitCastExpr 0x142055570 <col:25, col:43> 'int' <IntegralCast>
|   | |   `-CStyleCastExpr 0x1420554d0 <col:25, col:43> 'unsigned char' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1420554b8 <col:40, col:43> 'char' <LValueToRValue> part_of_explicit_cast
|   | |       `-ArraySubscriptExpr 0x142055480 <col:40, col:43> 'const char' lvalue
|   | |         |-ImplicitCastExpr 0x142055450 <col:40> 'const char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x142055410 <col:40> 'const char *' lvalue ParmVar 0x14203cde0 'a' 'const char *'
|   | |         `-ImplicitCastExpr 0x142055468 <col:42> 'int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x142055430 <col:42> 'int' lvalue Var 0x14203d068 'i' 'int'
|   | |-UnaryOperator 0x1420555a8 <col:47, col:48> 'int' postfix '++'
|   | | `-DeclRefExpr 0x142055588 <col:47> 'int' lvalue Var 0x14203d068 'i' 'int'
|   | `-NullStmt 0x1420555c0 <col:52>
|   |-BinaryOperator 0x1420556b0 <line:17:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x142055600 <col:5> 'int' lvalue Var 0x14203d1a0 'num' 'int'
|   | `-BinaryOperator 0x142055690 <col:11, col:15> 'int' '+'
|   |   |-ImplicitCastExpr 0x142055660 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142055620 <col:11> 'int' lvalue Var 0x14203d068 'i' 'int'
|   |   `-ImplicitCastExpr 0x142055678 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x142055640 <col:15> 'int' lvalue Var 0x14203cfc8 'neg' 'int'
|   |-IfStmt 0x1420557d0 <line:18:5, line:19:20>
|   | |-BinaryOperator 0x142055748 <line:18:9, col:15> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x1420556d0 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x142055728 <col:15> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1420557c0 <line:19:9, col:20>
|   |   `-ImplicitCastExpr 0x1420557a8 <col:16, col:20> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x142055788 <col:16, col:20> 'int' lvalue
|   |       `-DeclRefExpr 0x142055768 <col:17> 'int' lvalue Var 0x14203d1a0 'num' 'int'
|   |-IfStmt 0x1420581f0 <line:22:5, line:28:5> has_else
|   | |-BinaryOperator 0x1420558f8 <line:22:9, col:16> 'int' contains-errors '=='
|   | | |-UnaryOperator 0x1420558c0 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x1420558a8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x1420557f0 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1420558d8 <col:16> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x142055be0 <col:22, line:25:5>
|   | | `-IfStmt 0x142055bc0 <line:23:9, line:24:22>
|   | |   |-RecoveryExpr 0x142055b50 <line:23:13, col:33> '_Bool' contains-errors
|   | |   `-ReturnStmt 0x142055bb0 <line:24:13, col:22>
|   | |     `-ParenExpr 0x142055b90 <col:20, col:22> 'int'
|   | |       `-IntegerLiteral 0x142055b70 <col:21> 'int' 0
|   | `-CompoundStmt 0x1420581d8 <line:25:12, line:28:5>
|   |   `-CallExpr 0x1420581b0 <line:27:9, col:20> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x142058130 <col:9> 'int ()' Function 0x142058078 'BN_zero' 'int ()'
|   |     `-RecoveryExpr 0x142058190 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x142058548 <line:31:5, line:32:14>
|   | |-BinaryOperator 0x1420584c0 <line:31:9, col:34> 'int' contains-errors '=='
|   | | |-CallExpr 0x142058470 <col:9, col:29> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x142058300 <col:9> 'int ()' Function 0x142058248 'bn_expand' 'int ()'
|   | | | |-RecoveryExpr 0x142058418 <col:19> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x142058450 <col:24, col:28> 'int' '*'
|   | | |   |-ImplicitCastExpr 0x142058438 <col:24> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x142058338 <col:24> 'int' lvalue Var 0x14203d068 'i' 'int'
|   | | |   `-IntegerLiteral 0x142058358 <col:28> 'int' 4
|   | | `-RecoveryExpr 0x1420584a0 <col:34> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x142058530 <line:32:9, col:14> 'err' 0x1420584e0
|   |-IfStmt 0x142058698 <line:35:5, line:36:13>
|   | |-RecoveryExpr 0x142058618 <line:35:9, col:14> '_Bool' contains-errors
|   | `-BinaryOperator 0x142058678 <line:36:9, col:13> 'int' '='
|   |   |-DeclRefExpr 0x142058638 <col:9> 'int' lvalue Var 0x14203d0e8 'j' 'int'
|   |   `-IntegerLiteral 0x142058658 <col:13> 'int' 0
|   |-WhileStmt 0x142058b80 <line:38:5, line:48:5>
|   | |-ImplicitCastExpr 0x142058728 <line:38:12, col:13> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x142058710 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x1420586f8 <col:13> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1420586d8 <col:13> 'const char *' lvalue ParmVar 0x14203cde0 'a' 'const char *'
|   | `-CompoundStmt 0x142058b60 <col:16, line:48:5>
|   |   |-UnaryOperator 0x142058838 <line:41:9, col:10> 'const char *' postfix '++'
|   |   | `-DeclRefExpr 0x142058818 <col:9> 'const char *' lvalue ParmVar 0x14203cde0 'a' 'const char *'
|   |   `-IfStmt 0x142058b40 <line:42:9, line:47:9>
|   |     |-RecoveryExpr 0x142058888 <line:42:13, col:20> '_Bool' contains-errors
|   |     `-CompoundStmt 0x142058b28 <col:32, line:47:9>
|   |       `-BinaryOperator 0x142058b08 <line:46:13, col:17> 'int' '='
|   |         |-DeclRefExpr 0x142058ac8 <col:13> 'int' lvalue Var 0x14203d0e8 'j' 'int'
|   |         `-IntegerLiteral 0x142058ae8 <col:17> 'int' 0
|   |-ReturnStmt 0x142058e68 <line:54:5, col:16>
|   | `-ImplicitCastExpr 0x142058e50 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x142058e30 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x142058e10 <col:13> 'int' lvalue Var 0x14203d1a0 'num' 'int'
|   |-LabelStmt 0x142059a00 <line:55:2, col:5> 'err'
|   | `-NullStmt 0x142058fe8 <col:5>
|   `-ReturnStmt 0x142059a60 <line:58:5, col:14>
|     `-ParenExpr 0x142059a40 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x142059a20 <col:13> 'int' 0
`-FunctionDecl 0x142055230 <line:15:17> col:17 implicit used isdigit 'int (int)' extern
  |-ParmVarDecl 0x142055330 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x1420552d8 <<invalid sloc>> Implicit 924
  |-NoThrowAttr 0x1420553a0 <col:17> Implicit
  `-PureAttr 0x1420553c8 <col:17> Implicit
