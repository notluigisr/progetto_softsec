TranslationUnitDecl 0x14d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d855bd0 '__int128'
|-TypedefDecl 0x14d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d855bf0 'unsigned __int128'
|-TypedefDecl 0x14d926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d926800 'struct __NSConstantString_tag'
|   `-Record 0x14d856580 '__NSConstantString_tag'
|-TypedefDecl 0x14d926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d855d90 '__SVInt8_t'
|-TypedefDecl 0x14d926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d855db0 '__SVInt16_t'
|-TypedefDecl 0x14d926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d855dd0 '__SVInt32_t'
|-TypedefDecl 0x14d926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d855df0 '__SVInt64_t'
|-TypedefDecl 0x14d926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d855e10 '__SVUint8_t'
|-TypedefDecl 0x14d926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d855e30 '__SVUint16_t'
|-TypedefDecl 0x14d926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d855e50 '__SVUint32_t'
|-TypedefDecl 0x14d926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d855e70 '__SVUint64_t'
|-TypedefDecl 0x14d926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d855e90 '__SVFloat16_t'
|-TypedefDecl 0x14d926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d856390 '__SVBool_t'
|-TypedefDecl 0x14d928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d8563f0 '__SVCount_t'
|-TypedefDecl 0x14d9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d9287b0 'char *'
|   `-BuiltinType 0x14d8556b0 'char'
|-TypedefDecl 0x14d928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d9287b0 'char *'
|   `-BuiltinType 0x14d8556b0 'char'
`-FunctionDecl 0x14d928b18 <dataset_diviso_filec/func5926_nonvuln.c:1:1, line:78:1> line:1:1 invalid op_shift 'int (int *, int, int)'
  |-ParmVarDecl 0x14d928928 <col:10, col:19> col:19 invalid oap 'int *'
  |-ParmVarDecl 0x14d9289a8 <col:24, col:28> col:28 used curs_top 'int'
  |-ParmVarDecl 0x14d928a28 <col:38, col:42> col:42 used amount 'int'
  `-CompoundStmt 0x14d943a00 <line:2:1, line:78:1>
    |-DeclStmt 0x14d928c58 <line:3:5, col:15>
    | `-VarDecl 0x14d928bf0 <col:5, col:14> col:14 used i 'long'
    |-DeclStmt 0x14d928cf0 <line:4:5, col:24>
    | `-VarDecl 0x14d928c88 <col:5, col:14> col:14 used first_char 'int'
    |-DeclStmt 0x14d928da8 <line:5:5, col:27>
    | `-VarDecl 0x14d928d20 <col:5, col:26> col:14 used block_col 'int' cinit
    |   `-IntegerLiteral 0x14d928d88 <col:26> 'int' 0
    |-IfStmt 0x14e0083d8 <line:7:5, line:9:2>
    | |-RecoveryExpr 0x14e0083a8 <line:7:9, line:8:46> '_Bool' contains-errors
    | `-ReturnStmt 0x14e0083c8 <line:9:2>
    |-IfStmt 0x14e008618 <line:11:5, line:12:31>
    | |-CXXDependentScopeMemberExpr 0x14e008418 <line:11:9, col:14> '<dependent type>' contains-errors lvalue ->block_mode
    | | `-RecoveryExpr 0x14e0083f8 <col:9> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14e0085f8 <line:12:2, col:31> 'int' contains-errors '='
    |   |-DeclRefExpr 0x14e008460 <col:2> 'int' lvalue Var 0x14d928d20 'block_col' 'int'
    |   `-CXXDependentScopeMemberExpr 0x14e0085b0 <col:14, col:31> '<dependent type>' contains-errors lvalue .col
    |     `-CXXDependentScopeMemberExpr 0x14e008568 <col:14, col:22> '<dependent type>' contains-errors lvalue ->w_cursor
    |       `-RecoveryExpr 0x14e008548 <col:14> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x14d942500 <line:14:5, line:27:5>
    | |-BinaryOperator 0x14e0086c0 <line:14:10, col:19> 'long' contains-errors '='
    | | |-DeclRefExpr 0x14e008638 <col:10> 'long' lvalue Var 0x14d928bf0 'i' 'long'
    | | `-CXXDependentScopeMemberExpr 0x14e008678 <col:14, col:19> '<dependent type>' contains-errors lvalue ->line_count
    | |   `-RecoveryExpr 0x14e008658 <col:14> '<dependent type>' contains-errors lvalue
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14e008750 <col:31, col:38> 'int' '>='
    | | |-UnaryOperator 0x14e008700 <col:31, col:33> 'long' prefix '--'
    | | | `-DeclRefExpr 0x14e0086e0 <col:33> 'long' lvalue Var 0x14d928bf0 'i' 'long'
    | | `-ImplicitCastExpr 0x14e008738 <col:38> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x14e008718 <col:38> 'int' 0
    | |-<<<NULL>>>
    | `-CompoundStmt 0x14d9424d8 <line:15:5, line:27:5>
    |   |-BinaryOperator 0x14e008d48 <line:16:2, col:31> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14e008770 <col:2> 'int' lvalue Var 0x14d928c88 'first_char' 'int'
    |   | `-RecoveryExpr 0x14e008d20 <col:15, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-CallExpr 0x14e0088d8 <col:16, col:31> 'int'
    |   |     `-ImplicitCastExpr 0x14e0088c0 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |   |       `-DeclRefExpr 0x14e008870 <col:16> 'int ()' Function 0x14e0087b8 'ml_get_curline' 'int ()'
    |   |-IfStmt 0x14d942320 <line:17:2, line:25:60> has_else
    |   | |-BinaryOperator 0x14e008de0 <line:17:6, col:20> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x14e008d68 <col:6> 'int' lvalue Var 0x14d928c88 'first_char' 'int'
    |   | | `-RecoveryExpr 0x14e008dc0 <col:20> '<dependent type>' contains-errors lvalue
    |   | |-NullStmt 0x14d942318 <line:18:6>
    |   | `-IfStmt 0x14d9422e8 <line:19:7, line:25:60> has_else
    |   |   |-CXXDependentScopeMemberExpr 0x14e008e40 <line:19:11, col:16> '<dependent type>' contains-errors lvalue ->block_mode
    |   |   | `-RecoveryExpr 0x14e008e20 <col:11> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x14e008fc8 <line:20:6, col:29> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14e008f68 <col:6> 'int ()' Function 0x14e008eb0 'shift_block' 'int ()'
    |   |   | |-RecoveryExpr 0x14e008f88 <col:18> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x14e008fa8 <col:23> 'int' lvalue ParmVar 0x14d928a28 'amount' 'int'
    |   |   `-IfStmt 0x14d9422c8 <line:24:6, line:25:60>
    |   |     |-BinaryOperator 0x14e0091b8 <line:24:10, col:46> 'int' '||'
    |   |     | |-BinaryOperator 0x14e009048 <col:10, col:24> 'int' '!='
    |   |     | | |-ImplicitCastExpr 0x14e009030 <col:10> 'int' <LValueToRValue>
    |   |     | | | `-DeclRefExpr 0x14e008ff8 <col:10> 'int' lvalue Var 0x14d928c88 'first_char' 'int'
    |   |     | | `-CharacterLiteral 0x14e009018 <col:24> 'int' 35
    |   |     | `-UnaryOperator 0x14e0091a0 <col:31, col:46> 'int' prefix '!' cannot overflow
    |   |     |   `-CallExpr 0x14e009180 <col:32, col:46> 'int'
    |   |     |     `-ImplicitCastExpr 0x14e009168 <col:32> 'int (*)()' <FunctionToPointerDecay>
    |   |     |       `-DeclRefExpr 0x14e009148 <col:32> 'int ()' Function 0x14e009090 'preprocs_left' 'int ()'
    |   |     `-CallExpr 0x14d942288 <line:25:3, col:60> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x14d9420b8 <col:3> 'int ()' Function 0x14d942000 'shift_line' 'int ()'
    |   |       |-BinaryOperator 0x14d942228 <col:14, col:30> 'int' contains-errors '=='
    |   |       | |-CXXDependentScopeMemberExpr 0x14d9420f8 <col:14, col:19> '<dependent type>' contains-errors lvalue ->op_type
    |   |       | | `-RecoveryExpr 0x14d9420d8 <col:14> '<dependent type>' contains-errors lvalue
    |   |       | `-RecoveryExpr 0x14d942208 <col:30> '<dependent type>' contains-errors lvalue
    |   |       |-RecoveryExpr 0x14d942248 <col:41> '<dependent type>' contains-errors lvalue
    |   |       |-DeclRefExpr 0x14d942190 <col:47> 'int' lvalue ParmVar 0x14d928a28 'amount' 'int'
    |   |       `-RecoveryExpr 0x14d942268 <col:55> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x14d9424c0 <line:26:2, col:21> '<dependent type>' contains-errors prefix '++' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x14d942478 <col:4, col:21> '<dependent type>' contains-errors lvalue .lnum
    |       `-CXXDependentScopeMemberExpr 0x14d942430 <col:4, col:12> '<dependent type>' contains-errors lvalue ->w_cursor
    |         `-RecoveryExpr 0x14d942410 <col:4> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d942818 <line:29:5, col:60> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d942618 <col:5> 'int ()' Function 0x14d942560 'changed_lines' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x14d9426a0 <col:19, col:30> '<dependent type>' contains-errors lvalue .lnum
    | | `-CXXDependentScopeMemberExpr 0x14d942658 <col:19, col:24> '<dependent type>' contains-errors lvalue ->start
    | |   `-RecoveryExpr 0x14d942638 <col:19> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x14d9426e8 <col:36> 'int' 0
    | |-BinaryOperator 0x14d9427d8 <col:39, col:55> '<dependent type>' contains-errors '+'
    | | |-CXXDependentScopeMemberExpr 0x14d942770 <col:39, col:48> '<dependent type>' contains-errors lvalue .lnum
    | | | `-CXXDependentScopeMemberExpr 0x14d942728 <col:39, col:44> '<dependent type>' contains-errors lvalue ->end
    | | |   `-RecoveryExpr 0x14d942708 <col:39> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14d9427b8 <col:55> 'int' 1
    | `-IntegerLiteral 0x14d9427f8 <col:58> 'long' 0
    |-IfStmt 0x14d942bd0 <line:30:5, line:41:2> has_else
    | |-CXXDependentScopeMemberExpr 0x14d942878 <line:30:9, col:14> '<dependent type>' contains-errors lvalue ->block_mode
    | | `-RecoveryExpr 0x14d942858 <col:9> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x14d942990 <line:31:5, line:34:5>
    | `-IfStmt 0x14d942ba0 <line:35:10, line:41:2> has_else
    |   |-ImplicitCastExpr 0x14d9429c0 <line:35:14> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x14d9429a0 <col:14> 'int' lvalue ParmVar 0x14d9289a8 'curs_top' 'int'
    |   |-CompoundStmt 0x14d942b88 <line:36:5, line:39:5>
    |   `-NullStmt 0x14d942b98 <line:41:2>
    |-IfStmt 0x14d943818 <line:49:5, line:67:5>
    | |-RecoveryExpr 0x14d942c68 <line:49:9, col:27> '_Bool' contains-errors
    | `-CompoundStmt 0x14d9437d8 <line:50:5, line:67:5>
    |   |-DeclStmt 0x14d942d08 <line:51:2, col:14>
    |   | `-VarDecl 0x14d942ca0 <col:2, col:12> col:12 used op 'char *'
    |   |-DeclStmt 0x14d942da0 <line:52:2, col:27>
    |   | `-VarDecl 0x14d942d38 <col:2, col:12> col:12 used msg_line_single 'char *'
    |   |-DeclStmt 0x14d942e38 <line:53:2, col:27>
    |   | `-VarDecl 0x14d942dd0 <col:2, col:12> col:12 used msg_line_plural 'char *'
    |   |-IfStmt 0x14d943020 <line:55:2, line:58:11> has_else
    |   | |-RecoveryExpr 0x14d942eb8 <line:55:6, col:22> '_Bool' contains-errors
    |   | |-BinaryOperator 0x14d942f78 <line:56:6, col:11> 'char *' '='
    |   | | |-DeclRefExpr 0x14d942ed8 <col:6> 'char *' lvalue Var 0x14d942ca0 'op' 'char *'
    |   | | `-ImplicitCastExpr 0x14d942f60 <col:11> 'char *' <ArrayToPointerDecay>
    |   | |   `-StringLiteral 0x14d942f40 <col:11> 'char[4]' lvalue "STR"
    |   | `-BinaryOperator 0x14d943000 <line:58:6, col:11> 'char *' '='
    |   |   |-DeclRefExpr 0x14d942f98 <col:6> 'char *' lvalue Var 0x14d942ca0 'op' 'char *'
    |   |   `-ImplicitCastExpr 0x14d942fd8 <col:11> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x14d942fb8 <col:11> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x14d943280 <line:59:2, line:60:24> 'char *' '='
    |   | |-DeclRefExpr 0x14d943050 <line:59:2> 'char *' lvalue Var 0x14d942d38 'msg_line_single' 'char *'
    |   | `-ImplicitCastExpr 0x14d943268 <col:20, line:60:24> 'char *' <IntegralToPointer>
    |   |   `-CallExpr 0x14d9431e8 <line:59:20, line:60:24> 'int'
    |   |     |-ImplicitCastExpr 0x14d9431d0 <line:59:20> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14d943150 <col:20> 'int ()' Function 0x14d943098 'NGETTEXT' 'int ()'
    |   |     |-ImplicitCastExpr 0x14d943220 <col:29> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x14d943170 <col:29> 'char[4]' lvalue "STR"
    |   |     |-ImplicitCastExpr 0x14d943238 <line:60:11> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x14d943190 <col:11> 'char[4]' lvalue "STR"
    |   |     `-ImplicitCastExpr 0x14d943250 <col:18> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14d9431b0 <col:18> 'int' lvalue ParmVar 0x14d928a28 'amount' 'int'
    |   `-BinaryOperator 0x14d9433f0 <line:61:2, line:62:23> 'char *' '='
    |     |-DeclRefExpr 0x14d9432a0 <line:61:2> 'char *' lvalue Var 0x14d942dd0 'msg_line_plural' 'char *'
    |     `-ImplicitCastExpr 0x14d9433d8 <col:20, line:62:23> 'char *' <IntegralToPointer>
    |       `-CallExpr 0x14d943358 <line:61:20, line:62:23> 'int'
    |         |-ImplicitCastExpr 0x14d943340 <line:61:20> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x14d9432c0 <col:20> 'int ()' Function 0x14d943098 'NGETTEXT' 'int ()'
    |         |-ImplicitCastExpr 0x14d943390 <col:29> 'char *' <ArrayToPointerDecay>
    |         | `-StringLiteral 0x14d9432e0 <col:29> 'char[4]' lvalue "STR"
    |         |-ImplicitCastExpr 0x14d9433a8 <line:62:10> 'char *' <ArrayToPointerDecay>
    |         | `-StringLiteral 0x14d943300 <col:10> 'char[4]' lvalue "STR"
    |         `-ImplicitCastExpr 0x14d9433c0 <col:17> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x14d943320 <col:17> 'int' lvalue ParmVar 0x14d928a28 'amount' 'int'
    `-IfStmt 0x14d9439e0 <line:69:5, line:77:5>
      |-RecoveryExpr 0x14d943858 <line:69:9, col:49> '_Bool' contains-errors
      `-CompoundStmt 0x14d9439d0 <line:70:5, line:77:5>
