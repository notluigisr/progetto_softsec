TranslationUnitDecl 0x144055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1440564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144055bd0 '__int128'
|-TypedefDecl 0x144056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144055bf0 'unsigned __int128'
|-TypedefDecl 0x14480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14480bc00 'struct __NSConstantString_tag'
|   `-Record 0x144056580 '__NSConstantString_tag'
|-TypedefDecl 0x14480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144055d90 '__SVInt8_t'
|-TypedefDecl 0x14480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144055db0 '__SVInt16_t'
|-TypedefDecl 0x14480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144055dd0 '__SVInt32_t'
|-TypedefDecl 0x14480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144055df0 '__SVInt64_t'
|-TypedefDecl 0x14480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144055e10 '__SVUint8_t'
|-TypedefDecl 0x14480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144055e30 '__SVUint16_t'
|-TypedefDecl 0x14480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144055e50 '__SVUint32_t'
|-TypedefDecl 0x14480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144055e70 '__SVUint64_t'
|-TypedefDecl 0x14480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144055e90 '__SVFloat16_t'
|-TypedefDecl 0x14480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1440560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1440560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1440560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1440561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1440561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1440561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1440562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1440562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1440562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144056390 '__SVBool_t'
|-TypedefDecl 0x14480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1440563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1440563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1440563f0 '__SVCount_t'
|-TypedefDecl 0x14480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14480dbb0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
|-TypedefDecl 0x14480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14480dbb0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
`-FunctionDecl 0x14480dee8 <dataset_diviso_filec/func3357_vuln.c:1:1, line:37:1> line:1:1 grub_password_get 'int (char *, unsigned int)'
  |-ParmVarDecl 0x14480dd40 <col:20, col:29> col:25 used buf 'char *'
  |-ParmVarDecl 0x14480ddc0 <col:32, col:41> col:41 used buf_size 'unsigned int'
  `-CompoundStmt 0x144827300 <line:2:1, line:37:1>
    |-DeclStmt 0x14480e0a0 <line:3:3, col:23>
    | `-VarDecl 0x14480e000 <col:3, col:22> col:12 used cur_len 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x14480e088 <col:22> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x14480e068 <col:22> 'int' 0
    |-DeclStmt 0x14480e138 <line:4:3, col:10>
    | `-VarDecl 0x14480e0d0 <col:3, col:7> col:7 used key 'int'
    |-WhileStmt 0x144826cb8 <line:6:3, line:29:5>
    | |-IntegerLiteral 0x14480e150 <line:6:10> 'int' 1
    | `-CompoundStmt 0x144826c78 <line:7:5, line:29:5>
    |   |-BinaryOperator 0x14480e348 <line:8:7, col:26> 'int' '='
    |   | |-DeclRefExpr 0x14480e170 <col:7> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | `-CallExpr 0x14480e328 <col:13, col:26> 'int'
    |   |   `-ImplicitCastExpr 0x14480e310 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x14480e2c0 <col:13> 'int ()' Function 0x14480e208 'grub_getkey' 'int ()'
    |   |-IfStmt 0x144826678 <line:9:7, line:10:2>
    |   | |-BinaryOperator 0x144826650 <line:9:11, col:33> 'int' '||'
    |   | | |-BinaryOperator 0x14480e3b8 <col:11, col:18> 'int' '=='
    |   | | | |-ImplicitCastExpr 0x14480e3a0 <col:11> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x14480e368 <col:11> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | | | `-CharacterLiteral 0x14480e388 <col:18> 'int' 10
    |   | | `-BinaryOperator 0x144826630 <col:26, col:33> 'int' '=='
    |   | |   |-ImplicitCastExpr 0x144826618 <col:26> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x14480e3d8 <col:26> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | |   `-CharacterLiteral 0x144826600 <col:33> 'int' 13
    |   | `-BreakStmt 0x144826670 <line:10:2>
    |   |-IfStmt 0x1448267a8 <line:12:7, line:16:2>
    |   | |-BinaryOperator 0x1448266e8 <line:12:11, col:18> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1448266d0 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x144826698 <col:11> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | | `-CharacterLiteral 0x1448266b8 <col:18> 'int' 27
    |   | `-CompoundStmt 0x144826788 <line:13:2, line:16:2>
    |   |   |-BinaryOperator 0x144826760 <line:14:4, col:14> 'unsigned int' '='
    |   |   | |-DeclRefExpr 0x144826708 <col:4> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |   |   | `-ImplicitCastExpr 0x144826748 <col:14> 'unsigned int' <IntegralCast>
    |   |   |   `-IntegerLiteral 0x144826728 <col:14> 'int' 0
    |   |   `-BreakStmt 0x144826780 <line:15:4>
    |   |-IfStmt 0x144826898 <line:18:7, line:22:2>
    |   | |-BinaryOperator 0x144826818 <line:18:11, col:18> 'int' '=='
    |   | | |-ImplicitCastExpr 0x144826800 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1448267c8 <col:11> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | | `-CharacterLiteral 0x1448267e8 <col:18> 'int' 8
    |   | `-CompoundStmt 0x144826878 <line:19:2, line:22:2>
    |   |   |-UnaryOperator 0x144826858 <line:20:4, col:11> 'unsigned int' postfix '--'
    |   |   | `-DeclRefExpr 0x144826838 <col:4> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |   |   `-ContinueStmt 0x144826870 <line:21:4>
    |   |-IfStmt 0x144826a50 <line:24:7, line:25:2>
    |   | |-UnaryOperator 0x144826a30 <line:24:11, col:29> 'int' prefix '!' cannot overflow
    |   | | `-CallExpr 0x1448269f0 <col:12, col:29> 'int'
    |   | |   |-ImplicitCastExpr 0x1448269d8 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x144826998 <col:12> 'int ()' Function 0x1448268e0 'grub_isprint' 'int ()'
    |   | |   `-ImplicitCastExpr 0x144826a18 <col:26> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x1448269b8 <col:26> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | `-ContinueStmt 0x144826a48 <line:25:2>
    |   `-IfStmt 0x144826c58 <line:27:7, line:28:19>
    |     |-BinaryOperator 0x144826b38 <line:27:11, col:25> 'int' '<'
    |     | |-BinaryOperator 0x144826ae0 <col:11, col:21> 'unsigned int' '+'
    |     | | |-ImplicitCastExpr 0x144826ab0 <col:11> 'unsigned int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x144826a70 <col:11> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |     | | `-ImplicitCastExpr 0x144826ac8 <col:21> 'unsigned int' <IntegralCast>
    |     | |   `-IntegerLiteral 0x144826a90 <col:21> 'int' 2
    |     | `-ImplicitCastExpr 0x144826b20 <col:25> 'unsigned int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x144826b00 <col:25> 'unsigned int' lvalue ParmVar 0x14480ddc0 'buf_size' 'unsigned int'
    |     `-BinaryOperator 0x144826c38 <line:28:2, col:19> 'char' '='
    |       |-ArraySubscriptExpr 0x144826bc8 <col:2, col:15> 'char' lvalue
    |       | |-ImplicitCastExpr 0x144826bb0 <col:2> 'char *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x144826b58 <col:2> 'char *' lvalue ParmVar 0x14480dd40 'buf' 'char *'
    |       | `-UnaryOperator 0x144826b98 <col:6, col:13> 'unsigned int' postfix '++'
    |       |   `-DeclRefExpr 0x144826b78 <col:6> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |       `-ImplicitCastExpr 0x144826c20 <col:19> 'char' <IntegralCast>
    |         `-ImplicitCastExpr 0x144826c08 <col:19> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x144826be8 <col:19> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |-CallExpr 0x144826f30 <line:31:3, col:52> 'int'
    | |-ImplicitCastExpr 0x144826f18 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x144826db8 <col:3> 'int ()' Function 0x144826d00 'grub_memset' 'int ()'
    | |-BinaryOperator 0x144826e48 <col:16, col:22> 'char *' '+'
    | | |-ImplicitCastExpr 0x144826e18 <col:16> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x144826dd8 <col:16> 'char *' lvalue ParmVar 0x14480dd40 'buf' 'char *'
    | | `-ImplicitCastExpr 0x144826e30 <col:22> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x144826df8 <col:22> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    | |-IntegerLiteral 0x144826e68 <col:31> 'int' 0
    | `-BinaryOperator 0x144826ef8 <col:34, col:45> 'unsigned int' '-'
    |   |-ImplicitCastExpr 0x144826ec8 <col:34> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x144826e88 <col:34> 'unsigned int' lvalue ParmVar 0x14480ddc0 'buf_size' 'unsigned int'
    |   `-ImplicitCastExpr 0x144826ee0 <col:45> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x144826ea8 <col:45> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |-CallExpr 0x1448270e8 <line:33:3, col:20> 'int'
    | |-ImplicitCastExpr 0x1448270d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x144827048 <col:3> 'int ()' Function 0x144826f90 'grub_xputs' 'int ()'
    | `-ImplicitCastExpr 0x144827110 <col:15> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x1448270b0 <col:15> 'char[4]' lvalue "STR"
    |-CallExpr 0x144827240 <line:34:3, col:17> 'int'
    | `-ImplicitCastExpr 0x144827228 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x144827208 <col:3> 'int ()' Function 0x144827150 'grub_refresh' 'int ()'
    `-ReturnStmt 0x1448272f0 <line:36:3, col:22>
      `-ParenExpr 0x1448272d0 <col:10, col:22> 'int'
        `-BinaryOperator 0x1448272b0 <col:11, col:18> 'int' '!='
          |-ImplicitCastExpr 0x144827298 <col:11> 'int' <LValueToRValue>
          | `-DeclRefExpr 0x144827260 <col:11> 'int' lvalue Var 0x14480e0d0 'key' 'int'
          `-CharacterLiteral 0x144827280 <col:18> 'int' 27
