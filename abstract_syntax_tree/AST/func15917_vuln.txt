TranslationUnitDecl 0x151055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1510564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151055bd0 '__int128'
|-TypedefDecl 0x151056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151055bf0 'unsigned __int128'
|-TypedefDecl 0x151126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151126000 'struct __NSConstantString_tag'
|   `-Record 0x151056580 '__NSConstantString_tag'
|-TypedefDecl 0x151126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151055d90 '__SVInt8_t'
|-TypedefDecl 0x151126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151055db0 '__SVInt16_t'
|-TypedefDecl 0x151126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151055dd0 '__SVInt32_t'
|-TypedefDecl 0x1511263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151055df0 '__SVInt64_t'
|-TypedefDecl 0x151126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151055e10 '__SVUint8_t'
|-TypedefDecl 0x1511264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151055e30 '__SVUint16_t'
|-TypedefDecl 0x151126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151055e50 '__SVUint32_t'
|-TypedefDecl 0x151126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151055e70 '__SVUint64_t'
|-TypedefDecl 0x1511265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151055e90 '__SVFloat16_t'
|-TypedefDecl 0x151126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1511266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151055ed0 '__SVFloat64_t'
|-TypedefDecl 0x151126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1511267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1511268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1511269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151056090 '__clang_svint8x3_t'
|-TypedefDecl 0x151126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1510560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1510560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1510560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1510561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1510561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1511278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1510561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1511279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151056230 '__clang_svint16x4_t'
|-TypedefDecl 0x151127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151056250 '__clang_svint32x4_t'
|-TypedefDecl 0x151127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151056270 '__clang_svint64x4_t'
|-TypedefDecl 0x151127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1510562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1510562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1510562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151056390 '__SVBool_t'
|-TypedefDecl 0x151127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1510563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1510563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1510563f0 '__SVCount_t'
|-TypedefDecl 0x151127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-TypedefDecl 0x151128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-FunctionDecl 0x151128468 <dataset_diviso_filec/func15917_vuln.c:1:1, line:51:1> line:1:12 invalid pam_get_pwd 'int (int *, char **, char *, int, int)' static
| |-ParmVarDecl 0x151128128 <col:24, col:38> col:38 invalid pamh 'int *'
| |-ParmVarDecl 0x1511281d8 <col:44, col:51> col:51 used pwd 'char **'
| |-ParmVarDecl 0x151128258 <col:56, col:62> col:62 used text 'char *'
| |-ParmVarDecl 0x1511282d8 <col:68, col:72> col:72 used oitem 'int'
| |-ParmVarDecl 0x151128358 <col:79, col:83> col:83 used nitem 'int'
| `-CompoundStmt 0x15180cef0 <line:2:1, line:51:1>
|   |-DeclStmt 0x1511285b8 <line:3:3, col:9>
|   | `-VarDecl 0x151128550 <col:3, col:7> col:7 used rv 'int'
|   |-DeclStmt 0x151128650 <line:4:3, col:22>
|   | `-VarDecl 0x1511285e8 <col:3, col:15> col:15 used old_pwd 'const char *'
|   |-DeclStmt 0x151808880 <line:5:3, col:24>
|   | |-RecordDecl 0x151128668 <col:3, col:10> col:10 struct pam_conv
|   | `-VarDecl 0x151808800 <col:3, col:20> col:20 used conv 'struct pam_conv *'
|   |-DeclStmt 0x151808e38 <line:6:3, col:25>
|   | |-RecordDecl 0x151808898 <col:3, col:10> col:10 struct pam_message
|   | `-VarDecl 0x151808998 <col:3, col:22> col:22 referenced invalid msg 'struct pam_message'
|   |-DeclStmt 0x151809038 <line:7:3, col:28>
|   | |-RecordDecl 0x151808e50 <col:3, col:10> col:10 struct pam_response
|   | `-VarDecl 0x151808fb8 <col:3, col:24> col:24 used resp 'struct pam_response *'
|   |-DeclStmt 0x151809278 <line:9:3, col:38>
|   | `-VarDecl 0x151809210 <col:3, col:37> col:30 used msgp 'const struct pam_message *[1]'
|   |-BinaryOperator 0x1518093a0 <line:10:3, col:14> 'const struct pam_message *' contains-errors '='
|   | |-ArraySubscriptExpr 0x151809348 <col:3, col:9> 'const struct pam_message *' lvalue
|   | | |-ImplicitCastExpr 0x151809330 <col:3> 'const struct pam_message *(*)' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x151809290 <col:3> 'const struct pam_message *[1]' lvalue Var 0x151809210 'msgp' 'const struct pam_message *[1]'
|   | | `-IntegerLiteral 0x1518092b0 <col:8> 'int' 0
|   | `-UnaryOperator 0x151809388 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x151809368 <col:14> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15180b878 <line:13:3, line:22:3>
|   | |-RecoveryExpr 0x151809470 <line:13:7, col:57> '_Bool' contains-errors
|   | `-CompoundStmt 0x15180b850 <col:60, line:22:3>
|   |   |-BinaryOperator 0x151809710 <line:15:5, col:44> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x151809490 <col:5> 'int' lvalue Var 0x151128550 'rv' 'int'
|   |   | `-CallExpr 0x1518096d8 <col:10, col:44> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x151809610 <col:10> 'int ()' Function 0x151809558 'pam_get_item' 'int ()'
|   |   |   |-RecoveryExpr 0x151809630 <col:23> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x151809650 <col:29> 'int' lvalue ParmVar 0x1511282d8 'oitem' 'int'
|   |   |   `-UnaryOperator 0x1518096c0 <col:36, col:37> 'const char **' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x151809670 <col:37> 'const char *' lvalue Var 0x1511285e8 'old_pwd' 'const char *'
|   |   |-IfStmt 0x15180b410 <line:16:5, line:17:14>
|   |   | |-BinaryOperator 0x1518097a8 <line:16:9, col:15> 'int' contains-errors '!='
|   |   | | |-DeclRefExpr 0x151809730 <col:9> 'int' lvalue Var 0x151128550 'rv' 'int'
|   |   | | `-RecoveryExpr 0x151809788 <col:15> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x15180b400 <line:17:7, col:14>
|   |   |   `-ImplicitCastExpr 0x1518097e8 <col:14> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1518097c8 <col:14> 'int' lvalue Var 0x151128550 'rv' 'int'
|   |   `-IfStmt 0x15180b830 <line:18:5, line:21:5>
|   |     |-BinaryOperator 0x15180b4a8 <line:18:9, col:20> 'int' contains-errors '!='
|   |     | |-DeclRefExpr 0x15180b430 <col:9> 'const char *' lvalue Var 0x1511285e8 'old_pwd' 'const char *'
|   |     | `-RecoveryExpr 0x15180b488 <col:20> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x15180b810 <col:26, line:21:5>
|   |       |-BinaryOperator 0x15180b7a8 <line:19:7, col:28> 'char *' '='
|   |       | |-UnaryOperator 0x15180b500 <col:7, col:8> 'char *' lvalue prefix '*' cannot overflow
|   |       | | `-ImplicitCastExpr 0x15180b4e8 <col:8> 'char **' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x15180b4c8 <col:8> 'char **' lvalue ParmVar 0x1511281d8 'pwd' 'char **'
|   |       | `-CallExpr 0x15180b768 <col:14, col:28> 'char *'
|   |       |   |-ImplicitCastExpr 0x15180b750 <col:14> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x15180b6c8 <col:14> 'char *(const char *)' Function 0x15180b558 'strdup' 'char *(const char *)'
|   |       |   `-ImplicitCastExpr 0x15180b790 <col:21> 'const char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x15180b6e8 <col:21> 'const char *' lvalue Var 0x1511285e8 'old_pwd' 'const char *'
|   |       `-ReturnStmt 0x15180b800 <line:20:7, col:14>
|   |         `-RecoveryExpr 0x15180b7e0 <col:14> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x15180ced0 <line:25:3, line:49:3>
|     |-BinaryOperator 0x15180b910 <line:25:7, col:15> 'int' contains-errors '!='
|     | |-DeclRefExpr 0x15180b898 <col:7> 'char *' lvalue ParmVar 0x151128258 'text' 'char *'
|     | `-RecoveryExpr 0x15180b8f0 <col:15> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x15180ce80 <col:21, line:49:3>
|       |-BinaryOperator 0x15180ba18 <line:26:5, col:21> '<dependent type>' contains-errors '='
|       | |-CXXDependentScopeMemberExpr 0x15180b978 <col:5, col:9> '<dependent type>' contains-errors lvalue .msg_style
|       | | `-RecoveryExpr 0x15180b950 <col:5> '<dependent type>' contains-errors lvalue
|       | |   `-DeclRefExpr 0x15180b930 <col:5> 'struct pam_message' lvalue Var 0x151808998 'msg' 'struct pam_message'
|       | `-RecoveryExpr 0x15180b9f8 <col:21> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x15180bae8 <line:27:5, col:15> '<dependent type>' contains-errors '='
|       | |-CXXDependentScopeMemberExpr 0x15180ba80 <col:5, col:9> '<dependent type>' contains-errors lvalue .msg
|       | | `-RecoveryExpr 0x15180ba58 <col:5> '<dependent type>' contains-errors lvalue
|       | |   `-DeclRefExpr 0x15180ba38 <col:5> 'struct pam_message' lvalue Var 0x151808998 'msg' 'struct pam_message'
|       | `-DeclRefExpr 0x15180bac8 <col:15> 'char *' lvalue ParmVar 0x151128258 'text' 'char *'
|       |-BinaryOperator 0x15180bcc8 <line:28:5, col:44> 'int' contains-errors '='
|       | |-DeclRefExpr 0x15180bb08 <col:5> 'int' lvalue Var 0x151128550 'rv' 'int'
|       | `-CallExpr 0x15180bc90 <col:10, col:44> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x15180bb28 <col:10> 'int ()' Function 0x151809558 'pam_get_item' 'int ()'
|       |   |-RecoveryExpr 0x15180bb48 <col:23> '<dependent type>' contains-errors lvalue
|       |   |-RecoveryExpr 0x15180bc70 <col:29> '<dependent type>' contains-errors lvalue
|       |   `-UnaryOperator 0x15180bc00 <col:39, col:40> 'struct pam_conv **' prefix '&' cannot overflow
|       |     `-DeclRefExpr 0x15180bb80 <col:40> 'struct pam_conv *' lvalue Var 0x151808800 'conv' 'struct pam_conv *'
|       |-IfStmt 0x15180bdc8 <line:29:5, line:30:14>
|       | |-BinaryOperator 0x15180bd60 <line:29:9, col:15> 'int' contains-errors '!='
|       | | |-DeclRefExpr 0x15180bce8 <col:9> 'int' lvalue Var 0x151128550 'rv' 'int'
|       | | `-RecoveryExpr 0x15180bd40 <col:15> '<dependent type>' contains-errors lvalue
|       | `-ReturnStmt 0x15180bdb8 <line:30:7, col:14>
|       |   `-ImplicitCastExpr 0x15180bda0 <col:14> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x15180bd80 <col:14> 'int' lvalue Var 0x151128550 'rv' 'int'
|       |-IfStmt 0x15180bf40 <line:31:5, line:32:14>
|       | |-RecoveryExpr 0x15180bed8 <line:31:9, col:46> '_Bool' contains-errors
|       | `-ReturnStmt 0x15180bf30 <line:32:7, col:14>
|       |   `-RecoveryExpr 0x15180bf10 <col:14> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x15180c158 <line:33:5, col:54> 'int' contains-errors '='
|       | |-DeclRefExpr 0x15180bf60 <col:5> 'int' lvalue Var 0x151128550 'rv' 'int'
|       | `-CallExpr 0x15180c118 <col:10, col:54> '<dependent type>' contains-errors
|       |   |-RecoveryExpr 0x15180bfb8 <col:10, col:16> '<dependent type>' contains-errors lvalue
|       |   | `-DeclRefExpr 0x15180bf80 <col:10> 'struct pam_conv *' lvalue Var 0x151808800 'conv' 'struct pam_conv *'
|       |   |-IntegerLiteral 0x15180bfe0 <col:21> 'int' 1
|       |   |-DeclRefExpr 0x15180c000 <col:24> 'const struct pam_message *[1]' lvalue Var 0x151809210 'msgp' 'const struct pam_message *[1]'
|       |   |-UnaryOperator 0x15180c0a0 <col:30, col:31> 'struct pam_response **' prefix '&' cannot overflow
|       |   | `-DeclRefExpr 0x15180c020 <col:31> 'struct pam_response *' lvalue Var 0x151808fb8 'resp' 'struct pam_response *'
|       |   `-RecoveryExpr 0x15180c0f0 <col:37, col:43> '<dependent type>' contains-errors lvalue
|       |     `-DeclRefExpr 0x15180c0b8 <col:37> 'struct pam_conv *' lvalue Var 0x151808800 'conv' 'struct pam_conv *'
|       |-IfStmt 0x15180c200 <line:34:5, line:35:14>
|       | |-RecoveryExpr 0x15180c198 <line:34:9, col:15> '_Bool' contains-errors
|       | `-ReturnStmt 0x15180c1f0 <line:35:7, col:14>
|       |   `-ImplicitCastExpr 0x15180c1d8 <col:14> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x15180c1b8 <col:14> 'int' lvalue Var 0x151128550 'rv' 'int'
|       `-IfStmt 0x15180ce60 <line:43:5, line:47:5>
|         |-RecoveryExpr 0x15180cb70 <line:43:9, col:59> '_Bool' contains-errors
|         `-CompoundStmt 0x15180ce40 <col:62, line:47:5>
|           |-BinaryOperator 0x15180cd78 <line:44:7, col:42> 'int' contains-errors '='
|           | |-DeclRefExpr 0x15180cb90 <col:7> 'int' lvalue Var 0x151128550 'rv' 'int'
|           | `-CallExpr 0x15180cd40 <col:12, col:42> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x15180cc90 <col:12> 'int ()' Function 0x15180cbd8 'pam_set_item' 'int ()'
|           |   |-RecoveryExpr 0x15180ccb0 <col:25> '<dependent type>' contains-errors lvalue
|           |   |-DeclRefExpr 0x15180ccd0 <col:31> 'int' lvalue ParmVar 0x151128358 'nitem' 'int'
|           |   `-UnaryOperator 0x15180cd28 <col:38, col:39> 'char *' lvalue prefix '*' cannot overflow
|           |     `-ImplicitCastExpr 0x15180cd10 <col:39> 'char **' <LValueToRValue>
|           |       `-DeclRefExpr 0x15180ccf0 <col:39> 'char **' lvalue ParmVar 0x1511281d8 'pwd' 'char **'
|           `-IfStmt 0x15180ce20 <line:45:7, line:46:16>
|             |-RecoveryExpr 0x15180cdb8 <line:45:11, col:17> '_Bool' contains-errors
|             `-ReturnStmt 0x15180ce10 <line:46:9, col:16>
|               `-ImplicitCastExpr 0x15180cdf8 <col:16> 'int' <LValueToRValue>
|                 `-DeclRefExpr 0x15180cdd8 <col:16> 'int' lvalue Var 0x151128550 'rv' 'int'
|-FunctionDecl 0x15180b558 <line:19:14> col:14 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x15180b658 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15180b600 <<invalid sloc>> Implicit 950
|-FunctionDecl 0x15180c400 <line:40:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x15180c500 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x15180c568 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x15180c5d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x15180c4a8 <<invalid sloc>> Implicit 900
|-FunctionDecl 0x15180c728 <col:29> col:29 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x15180c828 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15180c7d0 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x15180c948 <line:41:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x15180ca48 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x15180c9f0 <<invalid sloc>> Implicit 873
