TranslationUnitDecl 0x155855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1558564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x155855bd0 '__int128'
|-TypedefDecl 0x155856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x155855bf0 'unsigned __int128'
|-TypedefDecl 0x15600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15600bc00 'struct __NSConstantString_tag'
|   `-Record 0x155856580 '__NSConstantString_tag'
|-TypedefDecl 0x15600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x155855d90 '__SVInt8_t'
|-TypedefDecl 0x15600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x155855db0 '__SVInt16_t'
|-TypedefDecl 0x15600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x155855dd0 '__SVInt32_t'
|-TypedefDecl 0x15600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x155855df0 '__SVInt64_t'
|-TypedefDecl 0x15600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x155855e10 '__SVUint8_t'
|-TypedefDecl 0x15600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x155855e30 '__SVUint16_t'
|-TypedefDecl 0x15600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x155855e50 '__SVUint32_t'
|-TypedefDecl 0x15600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x155855e70 '__SVUint64_t'
|-TypedefDecl 0x15600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x155855e90 '__SVFloat16_t'
|-TypedefDecl 0x15600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x155855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x155855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x155855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x155855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x155855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x155855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x155855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x155855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x155855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x155855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x155855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x155856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x155856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x155856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x155856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x155856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1558560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1558560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1558560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x155856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x155856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x155856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x155856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x155856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1558561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1558561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1558561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x155856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x155856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x155856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x155856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x155856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1558562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1558562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1558562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x155856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x155856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x155856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x155856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x155856390 '__SVBool_t'
|-TypedefDecl 0x15600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1558563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1558563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1558563f0 '__SVCount_t'
|-TypedefDecl 0x15600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15600dbb0 'char *'
|   `-BuiltinType 0x1558556b0 'char'
|-TypedefDecl 0x15600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15600dbb0 'char *'
|   `-BuiltinType 0x1558556b0 'char'
|-FunctionDecl 0x15600de58 <dataset_diviso_filec/func5972_vuln.c:1:1, line:32:1> line:1:1 invalid ephy_string_shorten 'int (char *, int)'
| |-ParmVarDecl 0x15600dcd8 <col:22, col:29> col:29 used str 'char *'
| |-ParmVarDecl 0x15600dd70 <line:2:22, col:29> col:29 invalid target_length 'int'
| `-CompoundStmt 0x15602a1d8 <line:3:1, line:32:1>
|   |-DeclStmt 0x15600df90 <line:4:3, col:16>
|   | `-VarDecl 0x15600df28 <col:3, col:9> col:9 used new_str 'char *'
|   |-DeclStmt 0x15600e028 <line:5:3, col:22>
|   | `-VarDecl 0x15600dfc0 <col:3, col:9> col:9 used actual_length 'long'
|   |-DeclStmt 0x15600e0c0 <line:6:3, col:15>
|   | `-VarDecl 0x15600e058 <col:3, col:10> col:10 used bytes 'long'
|   |-CallExpr 0x15600e2b0 <line:8:3, col:30> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15600e230 <col:3> 'int ()' Function 0x15600e178 'g_assert' 'int ()'
|   | `-BinaryOperator 0x15600e290 <col:13, col:29> 'int' contains-errors '>'
|   |   |-RecoveryExpr 0x15600e250 <col:13> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x15600e270 <col:29> 'int' 0
|   |-IfStmt 0x15600e370 <line:10:3, line:11:12>
|   | |-UnaryOperator 0x15600e310 <line:10:7, col:8> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15600e2f8 <col:8> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15600e2d8 <col:8> 'char *' lvalue ParmVar 0x15600dcd8 'str' 'char *'
|   | `-ReturnStmt 0x15600e360 <line:11:5, col:12>
|   |   `-RecoveryExpr 0x15600e340 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1560279d8 <line:14:3, col:41> 'long' '='
|   | |-DeclRefExpr 0x15600e390 <col:3> 'long' lvalue Var 0x15600dfc0 'actual_length' 'long'
|   | `-ImplicitCastExpr 0x1560279c0 <col:19, col:41> 'long' <IntegralCast>
|   |   `-CallExpr 0x156027978 <col:19, col:41> 'int'
|   |     |-ImplicitCastExpr 0x156027960 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1560278b8 <col:19> 'int ()' Function 0x156027800 'g_utf8_strlen' 'int ()'
|   |     |-ImplicitCastExpr 0x1560279a8 <col:34> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1560278d8 <col:34> 'char *' lvalue ParmVar 0x15600dcd8 'str' 'char *'
|   |     `-UnaryOperator 0x156027918 <col:39, col:40> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1560278f8 <col:40> 'int' 1
|   |-IfStmt 0x156027eb0 <line:17:3, line:18:12>
|   | |-RecoveryExpr 0x156027a10 <line:17:7, col:31> '_Bool' contains-errors
|   | `-ReturnStmt 0x156027ea0 <line:18:5, col:12>
|   |   `-ImplicitCastExpr 0x156027a68 <col:12> 'int' <PointerToIntegral>
|   |     `-ImplicitCastExpr 0x156027a50 <col:12> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x156027a30 <col:12> 'char *' lvalue ParmVar 0x15600dcd8 'str' 'char *'
|   |-BinaryOperator 0x156028208 <line:21:3, col:84> 'long' contains-errors '='
|   | |-DeclRefExpr 0x156027ed0 <col:3> 'long' lvalue Var 0x15600e058 'bytes' 'long'
|   | `-CallExpr 0x1560281e0 <col:11, col:84> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x156027fd0 <col:11> 'int ()' Function 0x156027f18 'GPOINTER_TO_UINT' 'int ()'
|   |   `-BinaryOperator 0x1560281c0 <col:29, col:81> '<dependent type>' contains-errors '-'
|   |     |-CallExpr 0x156028170 <col:29, col:77> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x1560280d0 <col:29> 'int ()' Function 0x156028018 'g_utf8_offset_to_pointer' 'int ()'
|   |     | |-DeclRefExpr 0x1560280f0 <col:55> 'char *' lvalue ParmVar 0x15600dcd8 'str' 'char *'
|   |     | `-BinaryOperator 0x156028150 <col:60, col:76> '<dependent type>' contains-errors '-'
|   |     |   |-RecoveryExpr 0x156028110 <col:60> '<dependent type>' contains-errors lvalue
|   |     |   `-IntegerLiteral 0x156028130 <col:76> 'int' 1
|   |     `-DeclRefExpr 0x1560281a0 <col:81> 'char *' lvalue ParmVar 0x15600dcd8 'str' 'char *'
|   |-BinaryOperator 0x156028570 <line:24:3, col:40> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x156028228 <col:3> 'char *' lvalue Var 0x15600df28 'new_str' 'char *'
|   | `-CallExpr 0x156028540 <col:13, col:40> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x156028328 <col:13> 'int ()' Function 0x156028270 'g_new' 'int ()'
|   |   |-RecoveryExpr 0x156028498 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x156028520 <col:27, col:39> 'long' '+'
|   |     |-BinaryOperator 0x1560284e8 <col:27, col:35> 'long' '+'
|   |     | |-ImplicitCastExpr 0x1560284b8 <col:27> 'long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x156028360 <col:27> 'long' lvalue Var 0x15600e058 'bytes' 'long'
|   |     | `-ImplicitCastExpr 0x1560284d0 <col:35> 'long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x156028380 <col:35> 'int' 1
|   |     `-ImplicitCastExpr 0x156028508 <col:39> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x1560283f0 <col:39> 'int' 1
|   |-CallExpr 0x156029b98 <line:26:3, col:31> 'char *'
|   | |-ImplicitCastExpr 0x156029b80 <col:3> 'char *(*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x156029a80 <col:3> 'char *(char *, const char *, unsigned long)' Function 0x1560285d8 'strncpy' 'char *(char *, const char *, unsigned long)'
|   | |-ImplicitCastExpr 0x156029bd0 <col:12> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x156029aa0 <col:12> 'char *' lvalue Var 0x15600df28 'new_str' 'char *'
|   | |-ImplicitCastExpr 0x156029c00 <col:21> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x156029be8 <col:21> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x156029ac0 <col:21> 'char *' lvalue ParmVar 0x15600dcd8 'str' 'char *'
|   | `-ImplicitCastExpr 0x156029c30 <col:26> 'unsigned long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x156029c18 <col:26> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x156029ae0 <col:26> 'long' lvalue Var 0x15600e058 'bytes' 'long'
|   |-CallExpr 0x156029f88 <line:27:3, col:25> 'char *'
|   | |-ImplicitCastExpr 0x156029f70 <col:3> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x156029e70 <col:3> 'char *(char *, const char *)' Function 0x156029c90 'strcat' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x156029fb8 <col:11> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x156029e90 <col:11> 'char *' lvalue Var 0x15600df28 'new_str' 'char *'
|   | `-ImplicitCastExpr 0x156029fe8 <col:20> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x156029fd0 <col:20> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x156029ef0 <col:20> 'char[4]' lvalue "STR"
|   |-CallExpr 0x15602a138 <line:29:3, col:14> 'int'
|   | |-ImplicitCastExpr 0x15602a120 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15602a0e0 <col:3> 'int ()' Function 0x15602a028 'g_free' 'int ()'
|   | `-ImplicitCastExpr 0x15602a160 <col:11> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15602a100 <col:11> 'char *' lvalue ParmVar 0x15600dcd8 'str' 'char *'
|   `-ReturnStmt 0x15602a1c8 <line:31:3, col:10>
|     `-ImplicitCastExpr 0x15602a1b0 <col:10> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x15602a198 <col:10> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x15602a178 <col:10> 'char *' lvalue Var 0x15600df28 'new_str' 'char *'
|-FunctionDecl 0x1560285d8 <line:26:3> col:3 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x1560286d8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x156028740 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x156029a00 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x156028680 <<invalid sloc>> Implicit 886
`-FunctionDecl 0x156029c90 <line:27:3> col:3 implicit used strcat 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x156029d90 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x156029df8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x156029d38 <<invalid sloc>> Implicit 889
