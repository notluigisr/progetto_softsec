TranslationUnitDecl 0x14c84ea08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c84f8b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c84efd0 '__int128'
|-TypedefDecl 0x14c84f928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c84eff0 'unsigned __int128'
|-TypedefDecl 0x14c91f630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c91f400 'struct __NSConstantString_tag'
|   `-Record 0x14c84f980 '__NSConstantString_tag'
|-TypedefDecl 0x14c91f698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c84f190 '__SVInt8_t'
|-TypedefDecl 0x14c91f700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c84f1b0 '__SVInt16_t'
|-TypedefDecl 0x14c91f768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c84f1d0 '__SVInt32_t'
|-TypedefDecl 0x14c91f7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c84f1f0 '__SVInt64_t'
|-TypedefDecl 0x14c91f838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c84f210 '__SVUint8_t'
|-TypedefDecl 0x14c91f8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c84f230 '__SVUint16_t'
|-TypedefDecl 0x14c91f908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c84f250 '__SVUint32_t'
|-TypedefDecl 0x14c91f970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c84f270 '__SVUint64_t'
|-TypedefDecl 0x14c91f9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c84f290 '__SVFloat16_t'
|-TypedefDecl 0x14c91fa40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c84f2b0 '__SVFloat32_t'
|-TypedefDecl 0x14c91faa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c84f2d0 '__SVFloat64_t'
|-TypedefDecl 0x14c91fb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c84f2f0 '__SVBfloat16_t'
|-TypedefDecl 0x14c91fb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c84f310 '__clang_svint8x2_t'
|-TypedefDecl 0x14c91fbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c84f330 '__clang_svint16x2_t'
|-TypedefDecl 0x14c91fc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c84f350 '__clang_svint32x2_t'
|-TypedefDecl 0x14c91fcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c84f370 '__clang_svint64x2_t'
|-TypedefDecl 0x14c91fd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c84f390 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c91fd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c84f3b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c91fde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c84f3d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c91fe50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c84f3f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c91feb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c84f410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c91ff20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c84f430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c91ff88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c84f450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c91fff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c84f470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c920058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c84f490 '__clang_svint8x3_t'
|-TypedefDecl 0x14c9200c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c84f4b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c920128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c84f4d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c920190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c84f4f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c9201f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c84f510 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c920260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c84f530 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c9202c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c84f550 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c920330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c84f570 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c920398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c84f590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c920c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c84f5b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c920c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c84f5d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c920cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c84f5f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c920d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c84f610 '__clang_svint8x4_t'
|-TypedefDecl 0x14c920da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c84f630 '__clang_svint16x4_t'
|-TypedefDecl 0x14c920e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c84f650 '__clang_svint32x4_t'
|-TypedefDecl 0x14c920e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c84f670 '__clang_svint64x4_t'
|-TypedefDecl 0x14c920ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c84f690 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c920f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c84f6b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c920fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c84f6d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c921010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c84f6f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c921078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c84f710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c9210e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c84f730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c921148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c84f750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c9211b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c84f770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c921218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c84f790 '__SVBool_t'
|-TypedefDecl 0x14c921280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c84f7b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c9212e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c84f7d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c921350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c84f7f0 '__SVCount_t'
|-TypedefDecl 0x14c9213f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c9213b0 'char *'
|   `-BuiltinType 0x14c84eab0 'char'
|-TypedefDecl 0x14c921468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c9213b0 'char *'
|   `-BuiltinType 0x14c84eab0 'char'
|-FunctionDecl 0x14c93e158 <dataset_diviso_filec/func6434_nonvuln.c:1:1, line:45:1> line:1:1 check_user_token 'int (struct cfg *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x14c921a48 <col:19, col:31> col:31 cfg 'struct cfg *'
| |-ParmVarDecl 0x14c921ac8 <line:2:5, col:17> col:17 used authfile 'const char *'
| |-ParmVarDecl 0x14c921b48 <line:3:5, col:17> col:17 used username 'const char *'
| |-ParmVarDecl 0x14c93e000 <line:4:5, col:17> col:17 used otp_id 'const char *'
| `-CompoundStmt 0x14d80a5b8 <line:5:1, line:45:1>
|   |-DeclStmt 0x14c93e378 <line:6:3, col:17>
|   | `-VarDecl 0x14c93e310 <col:3, col:16> col:8 used buf 'char[1024]'
|   |-DeclStmt 0x14c93e4a8 <line:7:3, col:25>
|   | |-VarDecl 0x14c93e3a8 <col:3, col:9> col:9 used s_user 'char *'
|   | `-VarDecl 0x14c93e428 <col:3, col:18> col:18 used s_token 'char *'
|   |-DeclStmt 0x14c93e560 <line:8:3, col:17>
|   | `-VarDecl 0x14c93e4d8 <col:3, col:16> col:7 used retval 'int' cinit
|   |   `-IntegerLiteral 0x14c93e540 <col:16> 'int' 0
|   |-IfStmt 0x14c93ea98 <line:12:3, line:16:5>
|   | |-RecoveryExpr 0x14c93e820 <line:12:7, col:18> '_Bool' contains-errors
|   | `-CompoundStmt 0x14c93ea78 <line:13:5, line:16:5>
|   |   |-CallExpr 0x14c93ea08 <line:14:7, col:29> 'int'
|   |   | |-ImplicitCastExpr 0x14c93e9f0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14c93e920 <col:7> 'int ()' Function 0x14c93e868 'DBG' 'int ()'
|   |   | `-ParenExpr 0x14c93e9d0 <col:12, col:28> 'const char *'
|   |   |   `-BinaryOperator 0x14c93e9b0 <col:13, col:20> 'const char *' ','
|   |   |     |-ImplicitCastExpr 0x14c93e980 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |     | `-StringLiteral 0x14c93e940 <col:13> 'char[4]' lvalue "STR"
|   |   |     `-ImplicitCastExpr 0x14c93e998 <col:20> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14c93e960 <col:20> 'const char *' lvalue ParmVar 0x14c921ac8 'authfile' 'const char *'
|   |   `-ReturnStmt 0x14c93ea68 <line:15:7, col:14>
|   |     `-ImplicitCastExpr 0x14c93ea50 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x14c93ea30 <col:14> 'int' lvalue Var 0x14c93e4d8 'retval' 'int'
|   |-WhileStmt 0x14d80a548 <line:18:3, line:40:5>
|   | |-CallExpr 0x14c93ec68 <line:18:10, col:35> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14c93eb98 <col:10> 'int ()' Function 0x14c93eae0 'fgets' 'int ()'
|   | | |-DeclRefExpr 0x14c93ebb8 <col:17> 'char[1024]' lvalue Var 0x14c93e310 'buf' 'char[1024]'
|   | | |-IntegerLiteral 0x14c93ebd8 <col:22> 'int' 1024
|   | | `-RecoveryExpr 0x14c93ec48 <col:28> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14d80a518 <line:19:5, line:40:5>
|   |   |-IfStmt 0x14d809230 <line:20:7, line:21:26>
|   |   | |-BinaryOperator 0x14d809048 <line:20:11, col:36> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x14d809030 <col:11, col:31> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x14d809018 <col:11, col:31> 'char' <LValueToRValue>
|   |   | | |   `-ArraySubscriptExpr 0x14c93efd0 <col:11, col:31> 'char' lvalue
|   |   | | |     |-ImplicitCastExpr 0x14c93efb8 <col:11> 'char *' <ArrayToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x14c93eca0 <col:11> 'char[1024]' lvalue Var 0x14c93e310 'buf' 'char[1024]'
|   |   | | |     `-BinaryOperator 0x14c93ef98 <col:15, col:30> 'unsigned long' '-'
|   |   | | |       |-CallExpr 0x14c93ef08 <col:15, col:26> 'unsigned long'
|   |   | | |       | |-ImplicitCastExpr 0x14c93eef0 <col:15> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | |       | | `-DeclRefExpr 0x14c93ee68 <col:15> 'unsigned long (const char *)' Function 0x14c93ecf8 'strlen' 'unsigned long (const char *)'
|   |   | | |       | `-ImplicitCastExpr 0x14c93ef48 <col:23> 'const char *' <NoOp>
|   |   | | |       |   `-ImplicitCastExpr 0x14c93ef30 <col:23> 'char *' <ArrayToPointerDecay>
|   |   | | |       |     `-DeclRefExpr 0x14c93ee88 <col:23> 'char[1024]' lvalue Var 0x14c93e310 'buf' 'char[1024]'
|   |   | | |       `-ImplicitCastExpr 0x14c93ef80 <col:30> 'unsigned long' <IntegralCast>
|   |   | | |         `-IntegerLiteral 0x14c93ef60 <col:30> 'int' 1
|   |   | | `-CharacterLiteral 0x14d809000 <col:36> 'int' 10
|   |   | `-BinaryOperator 0x14d809210 <line:21:2, col:26> 'char' '='
|   |   |   |-ArraySubscriptExpr 0x14d8091c0 <col:2, col:22> 'char' lvalue
|   |   |   | |-ImplicitCastExpr 0x14d8091a8 <col:2> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x14d809068 <col:2> 'char[1024]' lvalue Var 0x14c93e310 'buf' 'char[1024]'
|   |   |   | `-BinaryOperator 0x14d809188 <col:6, col:21> 'unsigned long' '-'
|   |   |   |   |-CallExpr 0x14d8090f8 <col:6, col:17> 'unsigned long'
|   |   |   |   | |-ImplicitCastExpr 0x14d8090e0 <col:6> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x14d809088 <col:6> 'unsigned long (const char *)' Function 0x14c93ecf8 'strlen' 'unsigned long (const char *)'
|   |   |   |   | `-ImplicitCastExpr 0x14d809138 <col:14> 'const char *' <NoOp>
|   |   |   |   |   `-ImplicitCastExpr 0x14d809120 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |   |   |     `-DeclRefExpr 0x14d8090a8 <col:14> 'char[1024]' lvalue Var 0x14c93e310 'buf' 'char[1024]'
|   |   |   |   `-ImplicitCastExpr 0x14d809170 <col:21> 'unsigned long' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x14d809150 <col:21> 'int' 1
|   |   |   `-ImplicitCastExpr 0x14d8091f8 <col:26> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x14d8091e0 <col:26> 'int' 0
|   |   |-CallExpr 0x14d809338 <line:22:7, col:24> 'int'
|   |   | |-ImplicitCastExpr 0x14d809320 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14d809250 <col:7> 'int ()' Function 0x14c93e868 'DBG' 'int ()'
|   |   | `-ParenExpr 0x14d809300 <col:12, col:23> 'char *'
|   |   |   `-BinaryOperator 0x14d8092e0 <col:13, col:20> 'char *' ','
|   |   |     |-ImplicitCastExpr 0x14d8092b0 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |     | `-StringLiteral 0x14d809270 <col:13> 'char[4]' lvalue "STR"
|   |   |     `-ImplicitCastExpr 0x14d8092c8 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-DeclRefExpr 0x14d809290 <col:20> 'char[1024]' lvalue Var 0x14c93e310 'buf' 'char[1024]'
|   |   |-BinaryOperator 0x14d8096f0 <line:23:7, col:34> 'char *' '='
|   |   | |-DeclRefExpr 0x14d809360 <col:7> 'char *' lvalue Var 0x14c93e3a8 's_user' 'char *'
|   |   | `-CallExpr 0x14d809678 <col:16, col:34> 'char *'
|   |   |   |-ImplicitCastExpr 0x14d809660 <col:16> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x14d8095a0 <col:16> 'char *(char *, const char *)' Function 0x14d8093c0 'strtok' 'char *(char *, const char *)'
|   |   |   |-ImplicitCastExpr 0x14d8096a8 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x14d8095c0 <col:24> 'char[1024]' lvalue Var 0x14c93e310 'buf' 'char[1024]'
|   |   |   `-ImplicitCastExpr 0x14d8096d8 <col:29> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x14d8096c0 <col:29> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x14d8095e0 <col:29> 'char[4]' lvalue "STR"
|   |   `-IfStmt 0x14d80a4f8 <line:24:7, line:39:2>
|   |     |-BinaryOperator 0x14d809af8 <line:24:11, col:50> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x14d809ae0 <col:11> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x14d809710 <col:11> 'char *' lvalue Var 0x14c93e3a8 's_user' 'char *'
|   |     | `-BinaryOperator 0x14d809ac0 <col:21, col:50> 'int' '=='
|   |     |   |-CallExpr 0x14d809a28 <col:21, col:45> 'int'
|   |     |   | |-ImplicitCastExpr 0x14d809a10 <col:21> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | | `-DeclRefExpr 0x14d809950 <col:21> 'int (const char *, const char *)' Function 0x14d809770 'strcmp' 'int (const char *, const char *)'
|   |     |   | |-ImplicitCastExpr 0x14d809a58 <col:29> 'const char *' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x14d809970 <col:29> 'const char *' lvalue ParmVar 0x14c921b48 'username' 'const char *'
|   |     |   | `-ImplicitCastExpr 0x14d809a88 <col:39> 'const char *' <NoOp>
|   |     |   |   `-ImplicitCastExpr 0x14d809a70 <col:39> 'char *' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x14d809990 <col:39> 'char *' lvalue Var 0x14c93e3a8 's_user' 'char *'
|   |     |   `-IntegerLiteral 0x14d809aa0 <col:50> 'int' 0
|   |     `-CompoundStmt 0x14d80a4d8 <line:25:2, line:39:2>
|   |       |-CallExpr 0x14d809c00 <line:26:4, col:24> 'int'
|   |       | |-ImplicitCastExpr 0x14d809be8 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14d809b18 <col:4> 'int ()' Function 0x14c93e868 'DBG' 'int ()'
|   |       | `-ParenExpr 0x14d809bc8 <col:9, col:23> 'char *'
|   |       |   `-BinaryOperator 0x14d809ba8 <col:10, col:17> 'char *' ','
|   |       |     |-ImplicitCastExpr 0x14d809b78 <col:10> 'char *' <ArrayToPointerDecay>
|   |       |     | `-StringLiteral 0x14d809b38 <col:10> 'char[4]' lvalue "STR"
|   |       |     `-ImplicitCastExpr 0x14d809b90 <col:17> 'char *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x14d809b58 <col:17> 'char *' lvalue Var 0x14c93e3a8 's_user' 'char *'
|   |       `-DoStmt 0x14d80a4b8 <line:27:4, line:38:26>
|   |         |-CompoundStmt 0x14d80a3f8 <line:28:6, line:37:6>
|   |         | |-BinaryOperator 0x14d809da0 <line:29:8, col:37> 'char *' contains-errors '='
|   |         | | |-DeclRefExpr 0x14d809c28 <col:8> 'char *' lvalue Var 0x14c93e428 's_token' 'char *'
|   |         | | `-CallExpr 0x14d809d70 <col:18, col:37> '<dependent type>' contains-errors
|   |         | |   |-DeclRefExpr 0x14d809c48 <col:18> 'char *(char *, const char *)' Function 0x14d8093c0 'strtok' 'char *(char *, const char *)'
|   |         | |   |-RecoveryExpr 0x14d809d20 <col:26> '<dependent type>' contains-errors lvalue
|   |         | |   `-StringLiteral 0x14d809c80 <col:32> 'char[4]' lvalue "STR"
|   |         | |-CallExpr 0x14d809ea8 <line:30:8, col:29> 'int'
|   |         | | |-ImplicitCastExpr 0x14d809e90 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |         | | | `-DeclRefExpr 0x14d809dc0 <col:8> 'int ()' Function 0x14c93e868 'DBG' 'int ()'
|   |         | | `-ParenExpr 0x14d809e70 <col:13, col:28> 'char *'
|   |         | |   `-BinaryOperator 0x14d809e50 <col:14, col:21> 'char *' ','
|   |         | |     |-ImplicitCastExpr 0x14d809e20 <col:14> 'char *' <ArrayToPointerDecay>
|   |         | |     | `-StringLiteral 0x14d809de0 <col:14> 'char[4]' lvalue "STR"
|   |         | |     `-ImplicitCastExpr 0x14d809e38 <col:21> 'char *' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x14d809e00 <col:21> 'char *' lvalue Var 0x14c93e428 's_token' 'char *'
|   |         | `-IfStmt 0x14d80a3d8 <line:31:8, line:36:3>
|   |         |   |-BinaryOperator 0x14d80a070 <line:31:12, col:51> 'int' '&&'
|   |         |   | |-ImplicitCastExpr 0x14d80a058 <col:12> 'char *' <LValueToRValue>
|   |         |   | | `-DeclRefExpr 0x14d809ed0 <col:12> 'char *' lvalue Var 0x14c93e428 's_token' 'char *'
|   |         |   | `-BinaryOperator 0x14d80a038 <col:23, col:51> 'int' '=='
|   |         |   |   |-CallExpr 0x14d809f98 <col:23, col:46> 'int'
|   |         |   |   | |-ImplicitCastExpr 0x14d809f80 <col:23> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |         |   |   | | `-DeclRefExpr 0x14d809ef0 <col:23> 'int (const char *, const char *)' Function 0x14d809770 'strcmp' 'int (const char *, const char *)'
|   |         |   |   | |-ImplicitCastExpr 0x14d809fc8 <col:31> 'const char *' <LValueToRValue>
|   |         |   |   | | `-DeclRefExpr 0x14d809f10 <col:31> 'const char *' lvalue ParmVar 0x14c93e000 'otp_id' 'const char *'
|   |         |   |   | `-ImplicitCastExpr 0x14d80a000 <col:39> 'const char *' <NoOp>
|   |         |   |   |   `-ImplicitCastExpr 0x14d809fe0 <col:39> 'char *' <LValueToRValue>
|   |         |   |   |     `-DeclRefExpr 0x14d809f30 <col:39> 'char *' lvalue Var 0x14c93e428 's_token' 'char *'
|   |         |   |   `-IntegerLiteral 0x14d80a018 <col:51> 'int' 0
|   |         |   `-CompoundStmt 0x14d80a3b0 <line:32:3, line:36:3>
|   |         |     |-CallExpr 0x14d80a1d0 <line:33:5, col:35> 'int'
|   |         |     | |-ImplicitCastExpr 0x14d80a1b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |         |     | | `-DeclRefExpr 0x14d80a090 <col:5> 'int ()' Function 0x14c93e868 'DBG' 'int ()'
|   |         |     | `-ParenExpr 0x14d80a198 <col:10, col:34> 'const char *'
|   |         |     |   `-BinaryOperator 0x14d80a178 <col:11, col:28> 'const char *' ','
|   |         |     |     |-BinaryOperator 0x14d80a120 <col:11, col:18> 'const char *' ','
|   |         |     |     | |-ImplicitCastExpr 0x14d80a0f0 <col:11> 'char *' <ArrayToPointerDecay>
|   |         |     |     | | `-StringLiteral 0x14d80a0b0 <col:11> 'char[4]' lvalue "STR"
|   |         |     |     | `-ImplicitCastExpr 0x14d80a108 <col:18> 'const char *' <LValueToRValue>
|   |         |     |     |   `-DeclRefExpr 0x14d80a0d0 <col:18> 'const char *' lvalue ParmVar 0x14c921b48 'username' 'const char *'
|   |         |     |     `-ImplicitCastExpr 0x14d80a160 <col:28> 'const char *' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x14d80a140 <col:28> 'const char *' lvalue ParmVar 0x14c93e000 'otp_id' 'const char *'
|   |         |     |-CallExpr 0x14d80a358 <line:34:5, col:20> '<dependent type>' contains-errors
|   |         |     | |-DeclRefExpr 0x14d80a2d8 <col:5> 'int ()' Function 0x14d80a220 'fclose' 'int ()'
|   |         |     | `-RecoveryExpr 0x14d80a338 <col:13> '<dependent type>' contains-errors lvalue
|   |         |     `-ReturnStmt 0x14d80a3a0 <line:35:5, col:12>
|   |         |       `-IntegerLiteral 0x14d80a380 <col:12> 'int' 1
|   |         `-BinaryOperator 0x14d80a498 <line:38:11, col:22> 'int' contains-errors '!='
|   |           |-DeclRefExpr 0x14d80a420 <col:11> 'char *' lvalue Var 0x14c93e428 's_token' 'char *'
|   |           `-RecoveryExpr 0x14d80a478 <col:22> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x14d80a5a8 <line:44:3, col:10>
|     `-IntegerLiteral 0x14d80a588 <col:10> 'int' 0
|-FunctionDecl 0x14c93ecf8 <line:20:15> col:15 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x14c93edf8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14c93eda0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x14d8093c0 <line:23:16> col:16 implicit used strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x14d8094c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x14d809528 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14d809468 <<invalid sloc>> Implicit 899
`-FunctionDecl 0x14d809770 <line:24:21> col:21 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x14d809870 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14d8098d8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14d809818 <<invalid sloc>> Implicit 887
