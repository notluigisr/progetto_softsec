TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x10380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10380bc00 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x10380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x10380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x10380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x10380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x10380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x10380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x10380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x10380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x10380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x10380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x10380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x10380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10380dbb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x10380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10380dbb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-FunctionDecl 0x103827438 <dataset_diviso_filec/func21567_vuln.c:1:1, line:60:1> line:1:1 invalid get_principal_2_svc 'int (int *, struct svc_req *)'
| |-ParmVarDecl 0x10380dd28 <col:21, col:33> col:33 invalid arg 'int *'
| |-ParmVarDecl 0x10380e318 <col:38, col:54> col:54 used rqstp 'struct svc_req *'
| `-CompoundStmt 0x105009d70 <line:2:1, line:60:1>
|   |-DeclStmt 0x103827570 <line:3:5, col:40>
|   | `-VarDecl 0x103827508 <col:5, col:37> col:37 referenced invalid ret 'int' static
|   |-DeclStmt 0x1038276a0 <line:4:5, col:58>
|   | |-VarDecl 0x1038275a0 <col:5, col:38> col:38 used prime_arg 'char *'
|   | `-VarDecl 0x103827620 <col:5, col:50> col:50 used funcname 'char *'
|   |-DeclStmt 0x103827770 <line:9:5, col:51>
|   | `-VarDecl 0x1038276d0 <col:5, col:47> col:38 used errmsg 'const char *' cinit
|   |   `-RecoveryExpr 0x103827750 <col:47> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1038279a0 <line:11:5, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1038278e0 <col:5> 'int ()' Function 0x103827828 'xdr_free' 'int ()'
|   | |-RecoveryExpr 0x103827980 <col:14> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x103827938 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x103827918 <col:31> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x103827cd0 <line:13:5, line:14:14>
|   | |-RecoveryExpr 0x103827c48 <line:13:9, col:72> '_Bool' contains-errors
|   | `-GotoStmt 0x103827cb8 <line:14:9, col:14> 'exit_func' 0x103827c68
|   |-IfStmt 0x103827ec0 <line:16:5, line:17:14>
|   | |-RecoveryExpr 0x103827e88 <line:16:9, col:49> '_Bool' contains-errors
|   | `-GotoStmt 0x103827ea8 <line:17:9, col:14> 'exit_func' 0x103827c68
|   |-BinaryOperator 0x103828058 <line:19:5, col:31> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x103827f28 <col:5, col:9> '<dependent type>' contains-errors lvalue .api_version
|   | | `-RecoveryExpr 0x103827f00 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x103827ee0 <col:5> 'int' lvalue Var 0x103827508 'ret' 'int'
|   | `-CXXDependentScopeMemberExpr 0x103828010 <col:23, col:31> '<dependent type>' contains-errors lvalue ->api_version
|   |   `-RecoveryExpr 0x103827ff0 <col:23> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x103828118 <line:21:5, col:16> 'char *' '='
|   | |-DeclRefExpr 0x103828078 <col:5> 'char *' lvalue Var 0x103827620 'funcname' 'char *'
|   | `-ImplicitCastExpr 0x103828100 <col:16> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1038280e0 <col:16> 'char[4]' lvalue "STR"
|   |-IfStmt 0x105808340 <line:23:5, line:26:5>
|   | |-BinaryOperator 0x1038283d8 <line:23:9, col:63> 'int' contains-errors '<'
|   | | |-CallExpr 0x1038283a0 <col:9, col:59> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x103828218 <col:9> 'int ()' Function 0x103828160 'setup_gss_names' 'int ()'
|   | | | |-DeclRefExpr 0x103828238 <col:25> 'struct svc_req *' lvalue ParmVar 0x10380e318 'rqstp' 'struct svc_req *'
|   | | | |-UnaryOperator 0x103828350 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x103828330 <col:33> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x103828388 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x103828368 <col:47> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x1038282f0 <col:63> 'int' 0
|   | `-CompoundStmt 0x105808320 <col:66, line:26:5>
|   |   |-BinaryOperator 0x1058082e8 <line:24:9, col:20> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x105808248 <col:9, col:13> '<dependent type>' contains-errors lvalue .code
|   |   | | `-RecoveryExpr 0x105808220 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x105808200 <col:9> 'int' lvalue Var 0x103827508 'ret' 'int'
|   |   | `-RecoveryExpr 0x1058082c8 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x105808308 <line:25:9, col:14> 'exit_func' 0x103827c68
|   |-IfStmt 0x105808730 <line:27:5, line:30:5>
|   | |-CallExpr 0x105808638 <line:27:9, col:66> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x105808440 <col:9> 'int ()' Function 0x105808388 'krb5_unparse_name' 'int ()'
|   | | |-CXXDependentScopeMemberExpr 0x1058085f0 <col:27, col:35> '<dependent type>' contains-errors lvalue ->context
|   | | | `-RecoveryExpr 0x1058085d0 <col:27> '<dependent type>' contains-errors lvalue
|   | | |-CXXDependentScopeMemberExpr 0x1058084e0 <col:44, col:49> '<dependent type>' contains-errors lvalue ->princ
|   | | | `-RecoveryExpr 0x1058084c0 <col:44> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x105808580 <col:56, col:57> 'char **' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x105808528 <col:57> 'char *' lvalue Var 0x1038275a0 'prime_arg' 'char *'
|   | `-CompoundStmt 0x105808718 <col:69, line:30:5>
|   |   `-GotoStmt 0x105808700 <line:29:9, col:14> 'exit_func' 0x103827c68
|   |-IfStmt 0x105009808 <line:32:5, line:53:5> has_else
|   | |-RecoveryExpr 0x105808dd8 <line:32:9, line:37:62> '_Bool' contains-errors
|   | |-CompoundStmt 0x105808fe8 <col:65, line:41:5>
|   | `-CompoundStmt 0x1050097f8 <col:12, line:53:5>
|   |-CallExpr 0x105009a88 <line:54:5, col:19> 'void'
|   | |-ImplicitCastExpr 0x105009a70 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1050099e8 <col:5> 'void (void *)' Function 0x105009878 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x105009ac8 <col:10> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x105009ab0 <col:10> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x105009a08 <col:10> 'char *' lvalue Var 0x1038275a0 'prime_arg' 'char *'
|   |-LabelStmt 0x105009d08 <line:57:1, col:10> 'exit_func'
|   | `-NullStmt 0x105009d00 <col:10>
|   `-ReturnStmt 0x105009d60 <line:59:5, col:13>
|     `-UnaryOperator 0x105009d48 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|       `-RecoveryExpr 0x105009d28 <col:13> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x105009878 <line:54:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x105009978 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x105009920 <<invalid sloc>> Implicit 873
