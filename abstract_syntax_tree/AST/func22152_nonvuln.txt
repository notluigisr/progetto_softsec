TranslationUnitDecl 0x126055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1260564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126055bd0 '__int128'
|-TypedefDecl 0x126056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126055bf0 'unsigned __int128'
|-TypedefDecl 0x1268d3a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1268d3800 'struct __NSConstantString_tag'
|   `-Record 0x126056580 '__NSConstantString_tag'
|-TypedefDecl 0x1268d3a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126055d90 '__SVInt8_t'
|-TypedefDecl 0x1268d3b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126055db0 '__SVInt16_t'
|-TypedefDecl 0x1268d3b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126055dd0 '__SVInt32_t'
|-TypedefDecl 0x1268d3bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126055df0 '__SVInt64_t'
|-TypedefDecl 0x1268d3c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126055e10 '__SVUint8_t'
|-TypedefDecl 0x1268d3ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126055e30 '__SVUint16_t'
|-TypedefDecl 0x1268d3d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126055e50 '__SVUint32_t'
|-TypedefDecl 0x1268d3d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126055e70 '__SVUint64_t'
|-TypedefDecl 0x1268d3dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126055e90 '__SVFloat16_t'
|-TypedefDecl 0x1268d3e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1268d3ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126055ed0 '__SVFloat64_t'
|-TypedefDecl 0x1268d3f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x1268d3f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1268d3fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x1268d4048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1268d40b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x1268d4118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1268d4180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1268d41e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1268d4250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1268d42b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1268d4320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1268d4388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1268d43f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1268d4458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1268d44c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1260560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x1268d4528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1260560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x1268d4590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1260560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1268d45f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x1268d4660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1268d46c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x1268d4730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x1268d4798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1268d5000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1260561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1268d5068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1260561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1268d50d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1260561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1268d5138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1268d51a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126056230 '__clang_svint16x4_t'
|-TypedefDecl 0x1268d5208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126056250 '__clang_svint32x4_t'
|-TypedefDecl 0x1268d5270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1268d52d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x1268d5340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1260562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1268d53a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1260562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1268d5410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1260562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1268d5478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1268d54e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1268d5548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1268d55b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1268d5618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126056390 '__SVBool_t'
|-TypedefDecl 0x1268d5680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1260563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1268d56e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1260563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1268d5750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1260563f0 '__SVCount_t'
|-TypedefDecl 0x1268d57f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1268d57b0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-TypedefDecl 0x1268d5868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1268d57b0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-FunctionDecl 0x1268d5b58 <dataset_diviso_filec/func22152_nonvuln.c:1:1, line:17:1> line:1:12 lxc_cgroupfs_set 'int (const char *, const char *, const char *, const char *)' static
| |-ParmVarDecl 0x1268d58d8 <col:29, col:41> col:41 used filename 'const char *'
| |-ParmVarDecl 0x1268d5958 <col:51, col:63> col:63 used value 'const char *'
| |-ParmVarDecl 0x1268d59d8 <col:70, col:82> col:82 used name 'const char *'
| |-ParmVarDecl 0x1268d5a58 <col:88, col:100> col:100 used lxcpath 'const char *'
| `-CompoundStmt 0x126042b08 <line:2:1, line:17:1>
|   |-DeclStmt 0x1268d5e58 <line:3:2, col:35>
|   | |-VarDecl 0x1268d5c80 <col:2, col:20> col:8 used subsystem 'char *' cinit
|   | | `-RecoveryExpr 0x1268d5d18 <col:20> '<dependent type>' contains-errors lvalue
|   | |-VarDecl 0x1268d5d50 <col:2, col:27> col:27 used p 'char *'
|   | `-VarDecl 0x1268d5dd0 <col:2, col:31> col:31 used path 'char *'
|   |-DeclStmt 0x1268d5f28 <line:4:2, col:14>
|   | `-VarDecl 0x1268d5e88 <col:2, col:13> col:6 used ret 'int' cinit
|   |   `-UnaryOperator 0x1268d5f10 <col:12, col:13> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1268d5ef0 <col:13> 'int' 1
|   |-BinaryOperator 0x1268eeab8 <line:6:2, col:41> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1268d5f40 <col:2> 'char *' contains-errors lvalue Var 0x1268d5c80 'subsystem' 'char *'
|   | `-ImplicitCastExpr 0x1268eeaa0 <col:14, col:41> 'char *' <BitCast>
|   |   `-CallExpr 0x1268eea78 <col:14, col:41> 'void *'
|   |     |-ImplicitCastExpr 0x1268eea60 <col:14> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1268ee730 <col:14> 'void *(unsigned long)' Function 0x1268ee5c0 'alloca' 'void *(unsigned long)'
|   |     `-BinaryOperator 0x1268eea10 <col:21, col:40> 'unsigned long' '+'
|   |       |-CallExpr 0x1268ee998 <col:21, col:36> 'unsigned long'
|   |       | |-ImplicitCastExpr 0x1268ee980 <col:21> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1268ee8f8 <col:21> 'unsigned long (const char *)' Function 0x1268ee788 'strlen' 'unsigned long (const char *)'
|   |       | `-ImplicitCastExpr 0x1268ee9c0 <col:28> 'const char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1268ee918 <col:28> 'const char *' lvalue ParmVar 0x1268d58d8 'filename' 'const char *'
|   |       `-ImplicitCastExpr 0x1268ee9f8 <col:40> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x1268ee9d8 <col:40> 'int' 1
|   |-CallExpr 0x1268eedd8 <line:7:2, col:28> 'char *' contains-errors
|   | |-ImplicitCastExpr 0x1268eedc0 <col:2> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1268eed00 <col:2> 'char *(char *, const char *)' Function 0x1268eeb20 'strcpy' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x1268eee08 <col:9> 'char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x1268eed20 <col:9> 'char *' contains-errors lvalue Var 0x1268d5c80 'subsystem' 'char *'
|   | `-ImplicitCastExpr 0x1268eee20 <col:20> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1268eed40 <col:20> 'const char *' lvalue ParmVar 0x1268d58d8 'filename' 'const char *'
|   |-IfStmt 0x1260422a0 <line:8:2, line:9:8>
|   | |-BinaryOperator 0x1260421e0 <line:8:6, col:38> 'int' contains-errors '!='
|   | | |-ParenExpr 0x1260421a0 <col:6, col:33> 'char *' contains-errors
|   | | | `-BinaryOperator 0x126042180 <col:7, col:32> 'char *' contains-errors '='
|   | | |   |-DeclRefExpr 0x1268eee38 <col:7> 'char *' lvalue Var 0x1268d5d50 'p' 'char *'
|   | | |   `-CallExpr 0x126042120 <col:11, col:32> 'char *' contains-errors
|   | | |     |-ImplicitCastExpr 0x126042108 <col:11> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1268ef080 <col:11> 'char *(const char *, int)' Function 0x1268eeea0 'strchr' 'char *(const char *, int)'
|   | | |     |-ImplicitCastExpr 0x126042168 <col:18> 'const char *' contains-errors <NoOp>
|   | | |     | `-ImplicitCastExpr 0x126042150 <col:18> 'char *' contains-errors <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x1268ef0a0 <col:18> 'char *' contains-errors lvalue Var 0x1268d5c80 'subsystem' 'char *'
|   | | |     `-CharacterLiteral 0x1268ef0c0 <col:29> 'int' 46
|   | | `-RecoveryExpr 0x1260421c0 <col:38> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x126042280 <line:9:3, col:8> 'char' '='
|   |   |-UnaryOperator 0x126042238 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x126042220 <col:4> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x126042200 <col:4> 'char *' lvalue Var 0x1268d5d50 'p' 'char *'
|   |   `-ImplicitCastExpr 0x126042268 <col:8> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x126042250 <col:8> 'int' 0
|   |-BinaryOperator 0x126042550 <line:11:2, col:67> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1260422c0 <col:2> 'char *' lvalue Var 0x1268d5dd0 'path' 'char *'
|   | `-ImplicitCastExpr 0x126042538 <col:9, col:67> 'char *' contains-errors <IntegralToPointer>
|   |   `-CallExpr 0x1260424b8 <col:9, col:67> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x1260424a0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1260423f0 <col:9> 'int ()' Function 0x126042338 'lxc_cgroup_get_hierarchy_abs_path' 'int ()'
|   |     |-ImplicitCastExpr 0x1260424f0 <col:43> 'char *' contains-errors <LValueToRValue>
|   |     | `-DeclRefExpr 0x126042410 <col:43> 'char *' contains-errors lvalue Var 0x1268d5c80 'subsystem' 'char *'
|   |     |-ImplicitCastExpr 0x126042508 <col:54> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x126042430 <col:54> 'const char *' lvalue ParmVar 0x1268d59d8 'name' 'const char *'
|   |     `-ImplicitCastExpr 0x126042520 <col:60> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x126042450 <col:60> 'const char *' lvalue ParmVar 0x1268d5a58 'lxcpath' 'const char *'
|   |-IfStmt 0x126042aa0 <line:12:2, line:15:2>
|   | |-ImplicitCastExpr 0x126042590 <line:12:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x126042570 <col:6> 'char *' lvalue Var 0x1268d5dd0 'path' 'char *'
|   | `-CompoundStmt 0x126042a80 <col:12, line:15:2>
|   |   |-BinaryOperator 0x1260427c0 <line:13:3, col:44> 'int' '='
|   |   | |-DeclRefExpr 0x1260425a8 <col:3> 'int' lvalue Var 0x1268d5e88 'ret' 'int'
|   |   | `-CallExpr 0x126042740 <col:9, col:44> 'int'
|   |   |   |-ImplicitCastExpr 0x126042728 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1260426a8 <col:9> 'int ()' Function 0x1260425f0 'do_cgroup_set' 'int ()'
|   |   |   |-ImplicitCastExpr 0x126042778 <col:23> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1260426c8 <col:23> 'char *' lvalue Var 0x1268d5dd0 'path' 'char *'
|   |   |   |-ImplicitCastExpr 0x126042790 <col:29> 'const char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1260426e8 <col:29> 'const char *' lvalue ParmVar 0x1268d58d8 'filename' 'const char *'
|   |   |   `-ImplicitCastExpr 0x1260427a8 <col:39> 'const char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x126042708 <col:39> 'const char *' lvalue ParmVar 0x1268d5958 'value' 'const char *'
|   |   `-CallExpr 0x126042a28 <line:14:3, col:12> 'void'
|   |     |-ImplicitCastExpr 0x126042a10 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x126042988 <col:3> 'void (void *)' Function 0x126042818 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x126042a68 <col:8> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x126042a50 <col:8> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1260429a8 <col:8> 'char *' lvalue Var 0x1268d5dd0 'path' 'char *'
|   `-ReturnStmt 0x126042af8 <line:16:2, col:9>
|     `-ImplicitCastExpr 0x126042ae0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x126042ac0 <col:9> 'int' lvalue Var 0x1268d5e88 'ret' 'int'
|-FunctionDecl 0x1268ee5c0 <line:6:14> col:14 implicit used alloca 'void *(unsigned long)' extern
| |-ParmVarDecl 0x1268ee6c0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1268ee668 <<invalid sloc>> Implicit 944
|-FunctionDecl 0x1268ee788 <col:21> col:21 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1268ee888 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1268ee830 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1268eeb20 <line:7:2> col:2 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1268eec20 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1268eec88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1268eebc8 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x1268eeea0 <line:8:11> col:11 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1268eefa0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1268ef008 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1268eef48 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x126042818 <line:14:3> col:3 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x126042918 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1260428c0 <<invalid sloc>> Implicit 873
