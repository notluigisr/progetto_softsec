TranslationUnitDecl 0x11e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e055bd0 '__int128'
|-TypedefDecl 0x11e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e055bf0 'unsigned __int128'
|-TypedefDecl 0x11e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x11e056580 '__NSConstantString_tag'
|-TypedefDecl 0x11e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e055d90 '__SVInt8_t'
|-TypedefDecl 0x11e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e055db0 '__SVInt16_t'
|-TypedefDecl 0x11e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e055dd0 '__SVInt32_t'
|-TypedefDecl 0x11e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e055df0 '__SVInt64_t'
|-TypedefDecl 0x11e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e055e10 '__SVUint8_t'
|-TypedefDecl 0x11e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e055e30 '__SVUint16_t'
|-TypedefDecl 0x11e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e055e50 '__SVUint32_t'
|-TypedefDecl 0x11e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e055e70 '__SVUint64_t'
|-TypedefDecl 0x11e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e055e90 '__SVFloat16_t'
|-TypedefDecl 0x11e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e056390 '__SVBool_t'
|-TypedefDecl 0x11e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e0563f0 '__SVCount_t'
|-TypedefDecl 0x11e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e80dbb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-TypedefDecl 0x11e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e80dbb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
`-FunctionDecl 0x11e80e078 <dataset_diviso_filec/func395_vuln.c:1:1, line:60:1> line:1:14 invalid xml_call_handler 'int *(int *, int *, int *, int, int **)' static
  |-ParmVarDecl 0x11e80dd28 <col:31, col:43> col:43 invalid parser 'int *'
  |-ParmVarDecl 0x11e80dda8 <col:51, col:57> col:57 invalid handler 'int *'
  |-ParmVarDecl 0x11e80de28 <col:66, col:81> col:81 invalid function_ptr 'int *'
  |-ParmVarDecl 0x11e80dea8 <col:95, col:99> col:99 used argc 'int'
  |-ParmVarDecl 0x11e80df60 <col:105, col:112> col:112 referenced invalid argv 'int **'
  `-CompoundStmt 0x11e125f80 <line:2:1, line:60:1>
    |-DeclStmt 0x11e80e1c8 <line:3:2, col:7>
    | `-VarDecl 0x11e80e160 <col:2, col:6> col:6 used i 'int'
    |-CallExpr 0x11e80e3a8 <line:4:2, col:15> 'int'
    | `-ImplicitCastExpr 0x11e80e390 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x11e80e340 <col:2> 'int ()' Function 0x11e80e288 'TSRMLS_FETCH' 'int ()'
    `-IfStmt 0x11e125f50 <line:6:2, line:59:2> has_else
      |-BinaryOperator 0x11e123618 <line:6:6, col:40> 'int' contains-errors '&&'
      | |-BinaryOperator 0x11e123420 <col:6, col:16> 'int' contains-errors '&&'
      | | |-RecoveryExpr 0x11e80e3c8 <col:6> '<dependent type>' contains-errors lvalue
      | | `-RecoveryExpr 0x11e123400 <col:16> '<dependent type>' contains-errors lvalue
      | `-UnaryOperator 0x11e123600 <col:27, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   `-CallExpr 0x11e1235d8 <col:28, col:40> '<dependent type>' contains-errors
      |     |-DeclRefExpr 0x11e123520 <col:28> 'int ()' Function 0x11e123468 'EG' 'int ()'
      |     `-RecoveryExpr 0x11e1235b8 <col:31> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x11e125c98 <col:43, line:54:2>
      | |-DeclStmt 0x11e123788 <line:9:3, col:13>
      | | `-VarDecl 0x11e123720 <col:3, col:7> col:7 used result 'int'
      | |-ForStmt 0x11e123bd8 <line:13:3, line:15:3>
      | | |-BinaryOperator 0x11e123990 <line:13:8, col:12> 'int' '='
      | | | |-DeclRefExpr 0x11e123950 <col:8> 'int' lvalue Var 0x11e80e160 'i' 'int'
      | | | `-IntegerLiteral 0x11e123970 <col:12> 'int' 0
      | | |-<<<NULL>>>
      | | |-BinaryOperator 0x11e123a20 <col:15, col:19> 'int' '<'
      | | | |-ImplicitCastExpr 0x11e1239f0 <col:15> 'int' <LValueToRValue>
      | | | | `-DeclRefExpr 0x11e1239b0 <col:15> 'int' lvalue Var 0x11e80e160 'i' 'int'
      | | | `-ImplicitCastExpr 0x11e123a08 <col:19> 'int' <LValueToRValue>
      | | |   `-DeclRefExpr 0x11e1239d0 <col:19> 'int' lvalue ParmVar 0x11e80dea8 'argc' 'int'
      | | |-UnaryOperator 0x11e123a60 <col:25, col:26> 'int' postfix '++'
      | | | `-DeclRefExpr 0x11e123a40 <col:25> 'int' lvalue Var 0x11e80e160 'i' 'int'
      | | `-CompoundStmt 0x11e123bc8 <col:30, line:15:3>
      | |-IfStmt 0x11e125838 <line:29:3, line:42:3>
      | | |-RecoveryExpr 0x11e123e38 <line:29:7, col:17> '_Bool' contains-errors
      | | `-CompoundStmt 0x11e125820 <col:26, line:42:3>
      | |   `-IfStmt 0x11e1257f0 <line:33:4, line:41:5> has_else
      | |     |-RecoveryExpr 0x11e123fa0 <line:33:8, col:29> '_Bool' contains-errors
      | |     |-CompoundStmt 0x11e124268 <col:40, line:35:4>
      | |     `-IfStmt 0x11e1257c0 <col:11, line:41:5> has_else
      | |       |-RecoveryExpr 0x11e125508 <line:35:15, line:38:30> '_Bool' contains-errors
      | |       |-CompoundStmt 0x11e125768 <col:41, line:40:4>
      | |       `-NullStmt 0x11e1257b8 <line:41:5>
      | |-ForStmt 0x11e125ab0 <line:44:3, line:46:3>
      | | |-BinaryOperator 0x11e125898 <line:44:8, col:12> 'int' '='
      | | | |-DeclRefExpr 0x11e125858 <col:8> 'int' lvalue Var 0x11e80e160 'i' 'int'
      | | | `-IntegerLiteral 0x11e125878 <col:12> 'int' 0
      | | |-<<<NULL>>>
      | | |-BinaryOperator 0x11e125928 <col:15, col:19> 'int' '<'
      | | | |-ImplicitCastExpr 0x11e1258f8 <col:15> 'int' <LValueToRValue>
      | | | | `-DeclRefExpr 0x11e1258b8 <col:15> 'int' lvalue Var 0x11e80e160 'i' 'int'
      | | | `-ImplicitCastExpr 0x11e125910 <col:19> 'int' <LValueToRValue>
      | | |   `-DeclRefExpr 0x11e1258d8 <col:19> 'int' lvalue ParmVar 0x11e80dea8 'argc' 'int'
      | | |-UnaryOperator 0x11e125968 <col:25, col:26> 'int' postfix '++'
      | | | `-DeclRefExpr 0x11e125948 <col:25> 'int' lvalue Var 0x11e80e160 'i' 'int'
      | | `-CompoundStmt 0x11e125aa0 <col:30, line:46:3>
      | `-IfStmt 0x11e125c68 <line:49:3, line:53:3> has_else
      |   |-RecoveryExpr 0x11e125c08 <line:49:7, col:17> '_Bool' contains-errors
      |   |-CompoundStmt 0x11e125c28 <col:26, line:51:3>
      |   `-CompoundStmt 0x11e125c58 <col:10, line:53:3>
      `-CompoundStmt 0x11e125f38 <line:54:9, line:59:2>
        `-ForStmt 0x11e125f00 <line:55:3, line:57:3>
          |-BinaryOperator 0x11e125d10 <line:55:8, col:12> 'int' '='
          | |-DeclRefExpr 0x11e125cd0 <col:8> 'int' lvalue Var 0x11e80e160 'i' 'int'
          | `-IntegerLiteral 0x11e125cf0 <col:12> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x11e125da0 <col:15, col:19> 'int' '<'
          | |-ImplicitCastExpr 0x11e125d70 <col:15> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x11e125d30 <col:15> 'int' lvalue Var 0x11e80e160 'i' 'int'
          | `-ImplicitCastExpr 0x11e125d88 <col:19> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x11e125d50 <col:19> 'int' lvalue ParmVar 0x11e80dea8 'argc' 'int'
          |-UnaryOperator 0x11e125de0 <col:25, col:26> 'int' postfix '++'
          | `-DeclRefExpr 0x11e125dc0 <col:25> 'int' lvalue Var 0x11e80e160 'i' 'int'
          `-CompoundStmt 0x11e125ee8 <col:30, line:57:3>
            `-CallExpr 0x11e125ec0 <line:56:4, col:26> '<dependent type>' contains-errors
              |-DeclRefExpr 0x11e125df8 <col:4> 'int ()' Function 0x11e1259a8 'zval_ptr_dtor' 'int ()'
              `-UnaryOperator 0x11e125ea8 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
                `-ArraySubscriptExpr 0x11e125e88 <col:19, col:25> '<dependent type>' contains-errors lvalue
                  |-ImplicitCastExpr 0x11e125e58 <col:19> '<dependent type>' contains-errors <LValueToRValue>
                  | `-RecoveryExpr 0x11e125e18 <col:19> '<dependent type>' contains-errors lvalue
                  `-ImplicitCastExpr 0x11e125e70 <col:24> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x11e125e38 <col:24> 'int' lvalue Var 0x11e80e160 'i' 'int'
