TranslationUnitDecl 0x12f055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f0555d0 '__int128'
|-TypedefDecl 0x12f055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f0555f0 'unsigned __int128'
|-TypedefDecl 0x12e80c430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e80c200 'struct __NSConstantString_tag'
|   `-Record 0x12f055f80 '__NSConstantString_tag'
|-TypedefDecl 0x12e80c498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f055790 '__SVInt8_t'
|-TypedefDecl 0x12e80c500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f0557b0 '__SVInt16_t'
|-TypedefDecl 0x12e80c568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f0557d0 '__SVInt32_t'
|-TypedefDecl 0x12e80c5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f0557f0 '__SVInt64_t'
|-TypedefDecl 0x12e80c638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f055810 '__SVUint8_t'
|-TypedefDecl 0x12e80c6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f055830 '__SVUint16_t'
|-TypedefDecl 0x12e80c708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f055850 '__SVUint32_t'
|-TypedefDecl 0x12e80c770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f055870 '__SVUint64_t'
|-TypedefDecl 0x12e80c7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f055890 '__SVFloat16_t'
|-TypedefDecl 0x12e80c840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f0558b0 '__SVFloat32_t'
|-TypedefDecl 0x12e80c8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f0558d0 '__SVFloat64_t'
|-TypedefDecl 0x12e80c910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f0558f0 '__SVBfloat16_t'
|-TypedefDecl 0x12e80c978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f055910 '__clang_svint8x2_t'
|-TypedefDecl 0x12e80c9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f055930 '__clang_svint16x2_t'
|-TypedefDecl 0x12e80ca48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f055950 '__clang_svint32x2_t'
|-TypedefDecl 0x12e80cab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f055970 '__clang_svint64x2_t'
|-TypedefDecl 0x12e80cb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e80cb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f0559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e80cbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f0559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e80cc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f0559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e80ccb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e80cd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e80cd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e80cdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e80ce58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12e80cec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e80cf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e80cf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e80cff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e80d060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e80d0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e80d130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e80d198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e80da00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e80da68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e80dad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e80db38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12e80dba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12e80dc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12e80dc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12e80dcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e80dd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e80dda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e80de10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e80de78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e80dee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e80df48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e80dfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e80e018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f055d90 '__SVBool_t'
|-TypedefDecl 0x12e80e080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e80e0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e80e150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f055df0 '__SVCount_t'
|-TypedefDecl 0x12e80e1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e80e1b0 'char *'
|   `-BuiltinType 0x12f0550b0 'char'
|-TypedefDecl 0x12e80e268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e80e1b0 'char *'
|   `-BuiltinType 0x12f0550b0 'char'
`-FunctionDecl 0x12e826d48 <dataset_diviso_filec/func17923_nonvuln.c:1:1, line:38:1> line:1:12 referenced __mmu_unsync_walk 'int (struct kvm_mmu_page *, struct kvm_mmu_pages *)' static
  |-ParmVarDecl 0x12e80e848 <col:30, col:51> col:51 used sp 'struct kvm_mmu_page *'
  |-ParmVarDecl 0x12e826c28 <line:2:7, col:29> col:29 used pvec 'struct kvm_mmu_pages *'
  `-CompoundStmt 0x1380098b8 <line:3:1, line:38:1>
    |-DeclStmt 0x12e827008 <line:4:2, col:32>
    | |-VarDecl 0x12e826e60 <col:2, col:6> col:6 used i 'int'
    | |-VarDecl 0x12e826ee0 <col:2, col:9> col:9 used ret 'int'
    | `-VarDecl 0x12e826f60 <col:2, col:31> col:14 used nr_unsync_leaf 'int' cinit
    |   `-IntegerLiteral 0x12e826fc8 <col:31> 'int' 0
    |-CallExpr 0x12e827210 <line:6:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e827150 <col:2> 'int ()' Function 0x12e827098 'for_each_set_bit' 'int ()'
    | |-DeclRefExpr 0x12e827170 <col:19> 'int' lvalue Var 0x12e826e60 'i' 'int'
    | |-RecoveryExpr 0x12e8271c8 <col:22, col:26> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e827190 <col:22> 'struct kvm_mmu_page *' lvalue ParmVar 0x12e80e848 'sp' 'struct kvm_mmu_page *'
    | `-IntegerLiteral 0x12e8271f0 <col:47> 'int' 512
    |-CompoundStmt 0x138009840 <col:52, line:35:2>
    | |-DeclStmt 0x12e827340 <line:7:3, col:29>
    | | `-VarDecl 0x12e8272d8 <col:3, col:24> col:24 used child 'struct kvm_mmu_page *'
    | |-IfStmt 0x12e8278e0 <line:10:3, line:13:3>
    | | |-BinaryOperator 0x12e8276b8 <line:10:7, col:54> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x12e827658 <col:7, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-CallExpr 0x12e827630 <col:8, col:33> '<dependent type>' contains-errors
    | | | |   |-DeclRefExpr 0x12e827438 <col:8> 'int ()' Function 0x12e827380 'is_shadow_present_pte' 'int ()'
    | | | |   `-RecoveryExpr 0x12e827610 <col:30> '<dependent type>' contains-errors lvalue
    | | | `-CallExpr 0x12e827690 <col:38, col:54> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x12e827590 <col:38> 'int ()' Function 0x12e8274d8 'is_large_pte' 'int ()'
    | | |   `-RecoveryExpr 0x12e827670 <col:51> '<dependent type>' contains-errors lvalue
    | | `-CompoundStmt 0x12e8278c8 <col:57, line:13:3>
    | |   `-CallExpr 0x12e827868 <line:11:4, col:32> 'int'
    | |     |-ImplicitCastExpr 0x12e827850 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x12e8277b8 <col:4> 'int ()' Function 0x12e827700 'clear_unsync_child_bit' 'int ()'
    | |     |-ImplicitCastExpr 0x12e827898 <col:27> 'struct kvm_mmu_page *' <LValueToRValue>
    | |     | `-DeclRefExpr 0x12e8277d8 <col:27> 'struct kvm_mmu_page *' lvalue ParmVar 0x12e80e848 'sp' 'struct kvm_mmu_page *'
    | |     `-ImplicitCastExpr 0x12e8278b0 <col:31> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x12e8277f8 <col:31> 'int' lvalue Var 0x12e826e60 'i' 'int'
    | |-BinaryOperator 0x12e827b40 <line:15:3, col:51> 'struct kvm_mmu_page *' contains-errors '='
    | | |-DeclRefExpr 0x12e827900 <col:3> 'struct kvm_mmu_page *' lvalue Var 0x12e8272d8 'child' 'struct kvm_mmu_page *'
    | | `-CallExpr 0x12e827b18 <col:11, col:51> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12e827a00 <col:11> 'int ()' Function 0x12e827948 'to_shadow_page' 'int ()'
    | |   `-BinaryOperator 0x12e827af8 <col:26, col:32> '<dependent type>' contains-errors '&'
    | |     |-RecoveryExpr 0x12e827ab8 <col:26> '<dependent type>' contains-errors lvalue
    | |     `-RecoveryExpr 0x12e827ad8 <col:32> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x138009810 <line:17:3, line:34:32> has_else
    |   |-RecoveryExpr 0x12e827b98 <line:17:7, col:14> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12e827b60 <col:7> 'struct kvm_mmu_page *' lvalue Var 0x12e8272d8 'child' 'struct kvm_mmu_page *'
    |   |-CompoundStmt 0x138009518 <col:31, line:29:3>
    |   | |-IfStmt 0x138009078 <line:18:4, line:19:13>
    |   | | |-CallExpr 0x138008f50 <line:18:8, col:36> 'int'
    |   | | | |-ImplicitCastExpr 0x138008f38 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | | | | `-DeclRefExpr 0x138008eb8 <col:8> 'int ()' Function 0x138008e00 'mmu_pages_add' 'int ()'
    |   | | | |-ImplicitCastExpr 0x138008f88 <col:22> 'struct kvm_mmu_pages *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x138008ed8 <col:22> 'struct kvm_mmu_pages *' lvalue ParmVar 0x12e826c28 'pvec' 'struct kvm_mmu_pages *'
    |   | | | |-ImplicitCastExpr 0x138008fa0 <col:28> 'struct kvm_mmu_page *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x138008ef8 <col:28> 'struct kvm_mmu_page *' lvalue Var 0x12e8272d8 'child' 'struct kvm_mmu_page *'
    |   | | | `-ImplicitCastExpr 0x138008fb8 <col:35> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x138008f18 <col:35> 'int' lvalue Var 0x12e826e60 'i' 'int'
    |   | | `-ReturnStmt 0x138009068 <line:19:5, col:13>
    |   | |   `-UnaryOperator 0x138009050 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |     `-ImplicitCastExpr 0x138009038 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   | |       `-RecoveryExpr 0x138009018 <col:13> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x1380091f8 <line:21:4, col:39> 'int' '='
    |   | | |-DeclRefExpr 0x138009098 <col:4> 'int' lvalue Var 0x12e826ee0 'ret' 'int'
    |   | | `-CallExpr 0x138009198 <col:10, col:39> 'int'
    |   | |   |-ImplicitCastExpr 0x138009180 <col:10> 'int (*)(struct kvm_mmu_page *, struct kvm_mmu_pages *)' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x1380090b8 <col:10> 'int (struct kvm_mmu_page *, struct kvm_mmu_pages *)' Function 0x12e826d48 '__mmu_unsync_walk' 'int (struct kvm_mmu_page *, struct kvm_mmu_pages *)'
    |   | |   |-ImplicitCastExpr 0x1380091c8 <col:28> 'struct kvm_mmu_page *' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x1380090d8 <col:28> 'struct kvm_mmu_page *' lvalue Var 0x12e8272d8 'child' 'struct kvm_mmu_page *'
    |   | |   `-ImplicitCastExpr 0x1380091e0 <col:35> 'struct kvm_mmu_pages *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x1380090f8 <col:35> 'struct kvm_mmu_pages *' lvalue ParmVar 0x12e826c28 'pvec' 'struct kvm_mmu_pages *'
    |   | `-IfStmt 0x1380094e8 <line:22:4, line:28:12> has_else
    |   |   |-UnaryOperator 0x138009250 <line:22:8, col:9> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x138009238 <col:9> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x138009218 <col:9> 'int' lvalue Var 0x12e826ee0 'ret' 'int'
    |   |   |-CompoundStmt 0x138009340 <col:14, line:25:4>
    |   |   | `-CallExpr 0x1380092e0 <line:23:5, col:33> 'int'
    |   |   |   |-ImplicitCastExpr 0x1380092c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x138009268 <col:5> 'int ()' Function 0x12e827700 'clear_unsync_child_bit' 'int ()'
    |   |   |   |-ImplicitCastExpr 0x138009310 <col:28> 'struct kvm_mmu_page *' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x138009288 <col:28> 'struct kvm_mmu_page *' lvalue ParmVar 0x12e80e848 'sp' 'struct kvm_mmu_page *'
    |   |   |   `-ImplicitCastExpr 0x138009328 <col:32> 'int' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x1380092a8 <col:32> 'int' lvalue Var 0x12e826e60 'i' 'int'
    |   |   `-IfStmt 0x1380094b8 <line:25:11, line:28:12> has_else
    |   |     |-BinaryOperator 0x1380093b0 <line:25:15, col:21> 'int' '>'
    |   |     | |-ImplicitCastExpr 0x138009398 <col:15> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x138009358 <col:15> 'int' lvalue Var 0x12e826ee0 'ret' 'int'
    |   |     | `-IntegerLiteral 0x138009378 <col:21> 'int' 0
    |   |     |-CompoundStmt 0x138009458 <col:24, line:27:4>
    |   |     | `-CompoundAssignOperator 0x138009428 <line:26:5, col:23> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |   |-DeclRefExpr 0x1380093d0 <col:5> 'int' lvalue Var 0x12e826f60 'nr_unsync_leaf' 'int'
    |   |     |   `-ImplicitCastExpr 0x138009410 <col:23> 'int' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x1380093f0 <col:23> 'int' lvalue Var 0x12e826ee0 'ret' 'int'
    |   |     `-ReturnStmt 0x1380094a8 <line:28:5, col:12>
    |   |       `-ImplicitCastExpr 0x138009490 <col:12> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x138009470 <col:12> 'int' lvalue Var 0x12e826ee0 'ret' 'int'
    |   `-IfStmt 0x1380097e0 <line:29:10, line:34:32> has_else
    |     |-RecoveryExpr 0x138009578 <line:29:14, col:21> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x138009540 <col:14> 'struct kvm_mmu_page *' lvalue Var 0x12e8272d8 'child' 'struct kvm_mmu_page *'
    |     |-CompoundStmt 0x1380096f0 <col:29, line:33:3>
    |     | `-UnaryOperator 0x1380095c0 <line:30:4, col:18> 'int' postfix '++'
    |     |   `-DeclRefExpr 0x1380095a0 <col:4> 'int' lvalue Var 0x12e826f60 'nr_unsync_leaf' 'int'
    |     `-CallExpr 0x138009780 <line:34:4, col:32> 'int'
    |       |-ImplicitCastExpr 0x138009768 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x138009708 <col:4> 'int ()' Function 0x12e827700 'clear_unsync_child_bit' 'int ()'
    |       |-ImplicitCastExpr 0x1380097b0 <col:27> 'struct kvm_mmu_page *' <LValueToRValue>
    |       | `-DeclRefExpr 0x138009728 <col:27> 'struct kvm_mmu_page *' lvalue ParmVar 0x12e80e848 'sp' 'struct kvm_mmu_page *'
    |       `-ImplicitCastExpr 0x1380097c8 <col:31> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x138009748 <col:31> 'int' lvalue Var 0x12e826e60 'i' 'int'
    `-ReturnStmt 0x1380098a8 <line:37:2, col:9>
      `-ImplicitCastExpr 0x138009890 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x138009870 <col:9> 'int' lvalue Var 0x12e826f60 'nr_unsync_leaf' 'int'
