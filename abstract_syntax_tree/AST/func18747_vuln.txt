TranslationUnitDecl 0x136855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1368564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136855bd0 '__int128'
|-TypedefDecl 0x136856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136855bf0 'unsigned __int128'
|-TypedefDecl 0x136926c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x136926a00 'struct __NSConstantString_tag'
|   `-Record 0x136856580 '__NSConstantString_tag'
|-TypedefDecl 0x136926c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136855d90 '__SVInt8_t'
|-TypedefDecl 0x136926d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136855db0 '__SVInt16_t'
|-TypedefDecl 0x136926d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136855dd0 '__SVInt32_t'
|-TypedefDecl 0x136926dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136855df0 '__SVInt64_t'
|-TypedefDecl 0x136926e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136855e10 '__SVUint8_t'
|-TypedefDecl 0x136926ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136855e30 '__SVUint16_t'
|-TypedefDecl 0x136926f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136855e50 '__SVUint32_t'
|-TypedefDecl 0x136926f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136855e70 '__SVUint64_t'
|-TypedefDecl 0x136926fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136855e90 '__SVFloat16_t'
|-TypedefDecl 0x136927040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1369270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136855ed0 '__SVFloat64_t'
|-TypedefDecl 0x136927110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x136927178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1369271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x136927248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1369272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x136927318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x136927380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1369273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x136927450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1369274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x136927520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x136927588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1369275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x136927658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1369276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1368560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x136927728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1368560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x136927790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1368560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1369277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x136927860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1369278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x136927930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x136927998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x136928200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1368561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x136928268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1368561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1369282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1368561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x136928338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1369283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136856230 '__clang_svint16x4_t'
|-TypedefDecl 0x136928408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136856250 '__clang_svint32x4_t'
|-TypedefDecl 0x136928470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1369284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x136928540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1368562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1369285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1368562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x136928610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1368562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x136928678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1369286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x136928748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1369287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x136928818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136856390 '__SVBool_t'
|-TypedefDecl 0x136928880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1368563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1369288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1368563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x136928950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1368563f0 '__SVCount_t'
|-TypedefDecl 0x1369289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1369289b0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-TypedefDecl 0x136928a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1369289b0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-FunctionDecl 0x136928bf8 <dataset_diviso_filec/func18747_vuln.c:1:1, line:83:1> line:1:1 invalid amstar_selfcheck 'int (int *)'
| |-ParmVarDecl 0x136928b28 <line:2:5, col:29> col:29 invalid argument 'int *'
| `-CompoundStmt 0x136946ab0 <line:3:1, line:83:1>
|   |-IfStmt 0x136942460 <line:4:5, line:8:5>
|   | |-CXXDependentScopeMemberExpr 0x136928d10 <line:4:9, col:23> '<dependent type>' contains-errors lvalue .disk
|   | | `-CXXDependentScopeMemberExpr 0x136928cc8 <col:9, col:19> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x136928ca8 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x136942438 <col:29, line:8:5>
|   |   |-DeclStmt 0x136929028 <line:5:2, col:48>
|   |   | `-VarDecl 0x136928d70 <col:2, col:47> col:8 used qdisk 'char *' cinit
|   |   |   `-CallExpr 0x136929000 <col:16, col:47> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x136928f30 <col:16> 'int ()' Function 0x136928e78 'quote_string' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x136928fb8 <col:29, col:43> '<dependent type>' contains-errors lvalue .disk
|   |   |       `-CXXDependentScopeMemberExpr 0x136928f70 <col:29, col:39> '<dependent type>' contains-errors lvalue ->dle
|   |   |         `-RecoveryExpr 0x136928f50 <col:29> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x136942258 <line:6:2, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x136929120 <col:2> 'int ()' Function 0x136929068 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x136942238 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x1369291a0 <col:18> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x1369291c0 <col:25> 'char *' contains-errors lvalue Var 0x136928d70 'qdisk' 'char *'
|   |   `-CallExpr 0x1369423f8 <line:7:2, col:14> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x1369423e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x136942370 <col:2> 'int ()' Function 0x1369422b8 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x136942420 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x136942390 <col:9> 'char *' contains-errors lvalue Var 0x136928d70 'qdisk' 'char *'
|   |-CallExpr 0x136942568 <line:10:5, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x136942480 <col:5> 'int ()' Function 0x136929068 'fprintf' 'int ()'
|   | |-RecoveryExpr 0x136942528 <col:13> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x1369424b8 <col:21> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x136942548 <col:28> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x136942648 <line:11:5, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1369425a0 <col:5> 'int ()' Function 0x136929068 'fprintf' 'int ()'
|   | |-RecoveryExpr 0x136942628 <col:13> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x1369425d8 <col:21> 'char[4]' lvalue "STR"
|   |-IfStmt 0x136942a80 <line:13:5, line:17:5>
|   | |-CXXDependentScopeMemberExpr 0x1369426e0 <line:13:9, col:23> '<dependent type>' contains-errors lvalue .device
|   | | `-CXXDependentScopeMemberExpr 0x136942698 <col:9, col:19> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x136942678 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x136942a58 <col:31, line:17:5>
|   |   |-DeclStmt 0x1369428a0 <line:14:2, col:52>
|   |   | `-VarDecl 0x136942740 <col:2, col:51> col:8 used qdevice 'char *' cinit
|   |   |   `-CallExpr 0x136942878 <col:18, col:51> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x1369427a8 <col:18> 'int ()' Function 0x136928e78 'quote_string' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x136942830 <col:31, col:45> '<dependent type>' contains-errors lvalue .device
|   |   |       `-CXXDependentScopeMemberExpr 0x1369427e8 <col:31, col:41> '<dependent type>' contains-errors lvalue ->dle
|   |   |         `-RecoveryExpr 0x1369427c8 <col:31> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x136942988 <line:15:2, col:32> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1369428b8 <col:2> 'int ()' Function 0x136929068 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x136942968 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x1369428f0 <col:18> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x136942910 <col:25> 'char *' contains-errors lvalue Var 0x136942740 'qdevice' 'char *'
|   |   `-CallExpr 0x136942a18 <line:16:2, col:16> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x136942a00 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1369429c0 <col:2> 'int ()' Function 0x1369422b8 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x136942a40 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x1369429e0 <col:9> 'char *' contains-errors lvalue Var 0x136942740 'qdevice' 'char *'
|   |-IfStmt 0x136942de0 <line:18:5, line:22:5>
|   | |-RecoveryExpr 0x136942ab8 <line:18:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x136942db8 <col:25, line:22:5>
|   |   |-DeclStmt 0x136942c00 <line:19:2, col:49>
|   |   | `-VarDecl 0x136942af0 <col:2, col:48> col:8 used qdirectory 'char *' cinit
|   |   |   `-CallExpr 0x136942bd8 <col:21, col:48> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x136942b58 <col:21> 'int ()' Function 0x136928e78 'quote_string' 'int ()'
|   |   |     `-RecoveryExpr 0x136942bb8 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x136942ce8 <line:20:2, col:35> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x136942c18 <col:2> 'int ()' Function 0x136929068 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x136942cc8 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x136942c50 <col:18> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x136942c70 <col:25> 'char *' contains-errors lvalue Var 0x136942af0 'qdirectory' 'char *'
|   |   `-CallExpr 0x136942d78 <line:21:2, col:19> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x136942d60 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x136942d20 <col:2> 'int ()' Function 0x1369422b8 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x136942da0 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x136942d40 <col:9> 'char *' contains-errors lvalue Var 0x136942af0 'qdirectory' 'char *'
|   |-IfStmt 0x136943e40 <line:24:5, line:33:5>
|   | |-BinaryOperator 0x136943d30 <line:24:9, line:31:48> 'int' contains-errors '&&'
|   | | |-ParenExpr 0x136943880 <line:24:9, line:27:48> 'int' contains-errors
|   | | | `-BinaryOperator 0x136943860 <line:24:10, line:27:47> 'int' contains-errors '||'
|   | | |   |-ParenExpr 0x136943008 <line:24:10, line:25:47> 'int' contains-errors
|   | | |   | `-BinaryOperator 0x136942fe8 <line:24:11, line:25:46> 'int' contains-errors '&&'
|   | | |   |   |-CXXDependentScopeMemberExpr 0x136942e68 <line:24:11, col:25> '<dependent type>' contains-errors lvalue .include_list
|   | | |   |   | `-CXXDependentScopeMemberExpr 0x136942e20 <col:11, col:21> '<dependent type>' contains-errors lvalue ->dle
|   | | |   |   |   `-RecoveryExpr 0x136942e00 <col:11> '<dependent type>' contains-errors lvalue
|   | | |   |   `-BinaryOperator 0x136942fc8 <line:25:4, col:46> 'int' contains-errors '>='
|   | | |   |     |-CXXDependentScopeMemberExpr 0x136942f60 <col:4, col:32> '<dependent type>' contains-errors lvalue ->nb_element
|   | | |   |     | `-CXXDependentScopeMemberExpr 0x136942f18 <col:4, col:18> '<dependent type>' contains-errors lvalue .include_list
|   | | |   |     |   `-CXXDependentScopeMemberExpr 0x136942ed0 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | | |   |     |     `-RecoveryExpr 0x136942eb0 <col:4> '<dependent type>' contains-errors lvalue
|   | | |   |     `-IntegerLiteral 0x136942fa8 <col:46> 'int' 0
|   | | |   `-ParenExpr 0x136943840 <line:26:10, line:27:47> 'int' contains-errors
|   | | |     `-BinaryOperator 0x136943820 <line:26:11, line:27:46> 'int' contains-errors '&&'
|   | | |       |-CXXDependentScopeMemberExpr 0x136943090 <line:26:11, col:25> '<dependent type>' contains-errors lvalue .include_file
|   | | |       | `-CXXDependentScopeMemberExpr 0x136943048 <col:11, col:21> '<dependent type>' contains-errors lvalue ->dle
|   | | |       |   `-RecoveryExpr 0x136943028 <col:11> '<dependent type>' contains-errors lvalue
|   | | |       `-BinaryOperator 0x136943800 <line:27:4, col:46> 'int' contains-errors '>='
|   | | |         |-CXXDependentScopeMemberExpr 0x136943188 <col:4, col:32> '<dependent type>' contains-errors lvalue ->nb_element
|   | | |         | `-CXXDependentScopeMemberExpr 0x136943140 <col:4, col:18> '<dependent type>' contains-errors lvalue .include_file
|   | | |         |   `-CXXDependentScopeMemberExpr 0x1369430f8 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | | |         |     `-RecoveryExpr 0x1369430d8 <col:4> '<dependent type>' contains-errors lvalue
|   | | |         `-IntegerLiteral 0x1369431d0 <col:46> 'int' 0
|   | | `-ParenExpr 0x136943d10 <line:28:2, line:31:48> 'int' contains-errors
|   | |   `-BinaryOperator 0x136943cf0 <line:28:3, line:31:47> 'int' contains-errors '||'
|   | |     |-ParenExpr 0x136943aa8 <line:28:3, line:29:47> 'int' contains-errors
|   | |     | `-BinaryOperator 0x136943a88 <line:28:4, line:29:46> 'int' contains-errors '&&'
|   | |     |   |-CXXDependentScopeMemberExpr 0x136943908 <line:28:4, col:18> '<dependent type>' contains-errors lvalue .exclude_list
|   | |     |   | `-CXXDependentScopeMemberExpr 0x1369438c0 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | |     |   |   `-RecoveryExpr 0x1369438a0 <col:4> '<dependent type>' contains-errors lvalue
|   | |     |   `-BinaryOperator 0x136943a68 <line:29:4, col:46> 'int' contains-errors '>='
|   | |     |     |-CXXDependentScopeMemberExpr 0x136943a00 <col:4, col:32> '<dependent type>' contains-errors lvalue ->nb_element
|   | |     |     | `-CXXDependentScopeMemberExpr 0x1369439b8 <col:4, col:18> '<dependent type>' contains-errors lvalue .exclude_list
|   | |     |     |   `-CXXDependentScopeMemberExpr 0x136943970 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | |     |     |     `-RecoveryExpr 0x136943950 <col:4> '<dependent type>' contains-errors lvalue
|   | |     |     `-IntegerLiteral 0x136943a48 <col:46> 'int' 0
|   | |     `-ParenExpr 0x136943cd0 <line:30:10, line:31:47> 'int' contains-errors
|   | |       `-BinaryOperator 0x136943cb0 <line:30:11, line:31:46> 'int' contains-errors '&&'
|   | |         |-CXXDependentScopeMemberExpr 0x136943b30 <line:30:11, col:25> '<dependent type>' contains-errors lvalue .exclude_file
|   | |         | `-CXXDependentScopeMemberExpr 0x136943ae8 <col:11, col:21> '<dependent type>' contains-errors lvalue ->dle
|   | |         |   `-RecoveryExpr 0x136943ac8 <col:11> '<dependent type>' contains-errors lvalue
|   | |         `-BinaryOperator 0x136943c90 <line:31:4, col:46> 'int' contains-errors '>='
|   | |           |-CXXDependentScopeMemberExpr 0x136943c28 <col:4, col:32> '<dependent type>' contains-errors lvalue ->nb_element
|   | |           | `-CXXDependentScopeMemberExpr 0x136943be0 <col:4, col:18> '<dependent type>' contains-errors lvalue .exclude_file
|   | |           |   `-CXXDependentScopeMemberExpr 0x136943b98 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | |           |     `-RecoveryExpr 0x136943b78 <col:4> '<dependent type>' contains-errors lvalue
|   | |           `-IntegerLiteral 0x136943c70 <col:46> 'int' 0
|   | `-CompoundStmt 0x136943e28 <col:51, line:33:5>
|   |   `-CallExpr 0x136943df8 <line:32:2, col:23> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x136943d50 <col:2> 'int ()' Function 0x136929068 'fprintf' 'int ()'
|   |     |-RecoveryExpr 0x136943dd8 <col:10> '<dependent type>' contains-errors lvalue
|   |     `-StringLiteral 0x136943d88 <col:18> 'char[4]' lvalue "STR"
|   |-IfStmt 0x136945500 <line:35:5, line:62:5> has_else
|   | |-UnaryOperator 0x136943ee0 <line:35:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x136943ec8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x136943ea8 <col:10> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x136943f38 <col:21, line:37:5>
|   | `-CompoundStmt 0x1369454e8 <col:12, line:62:5>
|   |   `-IfStmt 0x1369454c8 <line:38:2, line:61:2>
|   |     |-RecoveryExpr 0x136944048 <line:38:6, col:32> '_Bool' contains-errors
|   |     `-CompoundStmt 0x1369454b0 <col:35, line:61:2>
|   |       `-IfStmt 0x136945490 <line:39:6, line:60:6>
|   |         |-RecoveryExpr 0x136944168 <line:39:10, col:45> '_Bool' contains-errors
|   |         `-CompoundStmt 0x136945468 <col:48, line:60:6>
|   |           |-DeclStmt 0x136944208 <line:40:3, col:21>
|   |           | `-VarDecl 0x1369441a0 <col:3, col:9> col:9 used star_version 'char *'
|   |           |-IfStmt 0x1369452a0 <line:49:3, line:57:3> has_else
|   |           | |-ImplicitCastExpr 0x1369445f8 <line:49:7> 'char *' <LValueToRValue>
|   |           | | `-DeclRefExpr 0x1369445d8 <col:7> 'char *' lvalue Var 0x1369441a0 'star_version' 'char *'
|   |           | |-CompoundStmt 0x1369450c0 <col:21, line:55:3>
|   |           | | |-DeclStmt 0x136944728 <line:50:7, col:21>
|   |           | | | |-VarDecl 0x136944628 <col:7, col:13> col:13 used sv 'char *'
|   |           | | | `-VarDecl 0x1369446a8 <col:7, col:18> col:18 used sv1 'char *'
|   |           | | |-ForStmt 0x136944a80 <line:51:7, col:66>
|   |           | | | |-BinaryOperator 0x136944798 <col:12, col:17> 'char *' '='
|   |           | | | | |-DeclRefExpr 0x136944740 <col:12> 'char *' lvalue Var 0x136944628 'sv' 'char *'
|   |           | | | | `-ImplicitCastExpr 0x136944780 <col:17> 'char *' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x136944760 <col:17> 'char *' lvalue Var 0x1369441a0 'star_version' 'char *'
|   |           | | | |-<<<NULL>>>
|   |           | | | |-BinaryOperator 0x136944a20 <col:31, col:58> 'int' '&&'
|   |           | | | | |-ImplicitCastExpr 0x136944a08 <col:31, col:32> 'int' <IntegralCast>
|   |           | | | | | `-ImplicitCastExpr 0x1369449f0 <col:31, col:32> 'char' <LValueToRValue>
|   |           | | | | |   `-UnaryOperator 0x136944800 <col:31, col:32> 'char' lvalue prefix '*' cannot overflow
|   |           | | | | |     `-ImplicitCastExpr 0x1369447d8 <col:32> 'char *' <LValueToRValue>
|   |           | | | | |       `-DeclRefExpr 0x1369447b8 <col:32> 'char *' lvalue Var 0x136944628 'sv' 'char *'
|   |           | | | | `-UnaryOperator 0x1369449d8 <col:38, col:58> 'int' prefix '!' cannot overflow
|   |           | | | |   `-CallExpr 0x136944980 <col:39, col:58> 'int'
|   |           | | | |     |-ImplicitCastExpr 0x136944968 <col:39> 'int (*)()' <FunctionToPointerDecay>
|   |           | | | |     | `-DeclRefExpr 0x1369448f8 <col:39> 'int ()' Function 0x136944840 'g_ascii_isdigit' 'int ()'
|   |           | | | |     `-ImplicitCastExpr 0x1369449c0 <col:55, col:56> 'int' <IntegralCast>
|   |           | | | |       `-ImplicitCastExpr 0x1369449a8 <col:55, col:56> 'char' <LValueToRValue>
|   |           | | | |         `-UnaryOperator 0x136944950 <col:55, col:56> 'char' lvalue prefix '*' cannot overflow
|   |           | | | |           `-ImplicitCastExpr 0x136944938 <col:56> 'char *' <LValueToRValue>
|   |           | | | |             `-DeclRefExpr 0x136944918 <col:56> 'char *' lvalue Var 0x136944628 'sv' 'char *'
|   |           | | | |-UnaryOperator 0x136944a60 <col:61, col:63> 'char *' postfix '++'
|   |           | | | | `-DeclRefExpr 0x136944a40 <col:61> 'char *' lvalue Var 0x136944628 'sv' 'char *'
|   |           | | | `-NullStmt 0x136944a78 <col:66>
|   |           | | |-ForStmt 0x136944cc8 <line:52:7, col:49>
|   |           | | | |-BinaryOperator 0x136944b10 <col:12, col:18> 'char *' '='
|   |           | | | | |-DeclRefExpr 0x136944ab8 <col:12> 'char *' lvalue Var 0x1369446a8 'sv1' 'char *'
|   |           | | | | `-ImplicitCastExpr 0x136944af8 <col:18> 'char *' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x136944ad8 <col:18> 'char *' lvalue Var 0x136944628 'sv' 'char *'
|   |           | | | |-<<<NULL>>>
|   |           | | | |-BinaryOperator 0x136944c68 <col:22, col:38> 'int' '&&'
|   |           | | | | |-ImplicitCastExpr 0x136944c50 <col:22, col:23> 'int' <IntegralCast>
|   |           | | | | | `-ImplicitCastExpr 0x136944c38 <col:22, col:23> 'char' <LValueToRValue>
|   |           | | | | |   `-UnaryOperator 0x136944b68 <col:22, col:23> 'char' lvalue prefix '*' cannot overflow
|   |           | | | | |     `-ImplicitCastExpr 0x136944b50 <col:23> 'char *' <LValueToRValue>
|   |           | | | | |       `-DeclRefExpr 0x136944b30 <col:23> 'char *' lvalue Var 0x1369446a8 'sv1' 'char *'
|   |           | | | | `-BinaryOperator 0x136944c18 <col:30, col:38> 'int' '!='
|   |           | | | |   |-ImplicitCastExpr 0x136944c00 <col:30, col:31> 'int' <IntegralCast>
|   |           | | | |   | `-ImplicitCastExpr 0x136944be8 <col:30, col:31> 'char' <LValueToRValue>
|   |           | | | |   |   `-UnaryOperator 0x136944bb8 <col:30, col:31> 'char' lvalue prefix '*' cannot overflow
|   |           | | | |   |     `-ImplicitCastExpr 0x136944ba0 <col:31> 'char *' <LValueToRValue>
|   |           | | | |   |       `-DeclRefExpr 0x136944b80 <col:31> 'char *' lvalue Var 0x1369446a8 'sv1' 'char *'
|   |           | | | |   `-CharacterLiteral 0x136944bd0 <col:38> 'int' 32
|   |           | | | |-UnaryOperator 0x136944ca8 <col:43, col:46> 'char *' postfix '++'
|   |           | | | | `-DeclRefExpr 0x136944c88 <col:43> 'char *' lvalue Var 0x1369446a8 'sv1' 'char *'
|   |           | | | `-NullStmt 0x136944cc0 <col:49>
|   |           | | |-BinaryOperator 0x136944d80 <line:53:7, col:14> 'char' '='
|   |           | | | |-UnaryOperator 0x136944d38 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |           | | | | `-ImplicitCastExpr 0x136944d20 <col:8> 'char *' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x136944d00 <col:8> 'char *' lvalue Var 0x1369446a8 'sv1' 'char *'
|   |           | | | `-ImplicitCastExpr 0x136944d68 <col:14> 'char' <IntegralCast>
|   |           | | |   `-CharacterLiteral 0x136944d50 <col:14> 'int' 0
|   |           | | `-CallExpr 0x136945048 <line:54:7, col:23> 'int'
|   |           | |   |-ImplicitCastExpr 0x136945030 <col:7> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |           | |   | `-DeclRefExpr 0x136944f88 <col:7> 'int (const char *, ...)' Function 0x136944de0 'printf' 'int (const char *, ...)'
|   |           | |   |-ImplicitCastExpr 0x136945090 <col:14> 'const char *' <NoOp>
|   |           | |   | `-ImplicitCastExpr 0x136945078 <col:14> 'char *' <ArrayToPointerDecay>
|   |           | |   |   `-StringLiteral 0x136944fa8 <col:14> 'char[4]' lvalue "STR"
|   |           | |   `-ImplicitCastExpr 0x1369450a8 <col:21> 'char *' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x136944fc8 <col:21> 'char *' lvalue Var 0x136944628 'sv' 'char *'
|   |           | `-CompoundStmt 0x136945290 <line:55:10, line:57:3>
|   |           `-CallExpr 0x136945428 <line:59:3, col:22> 'int'
|   |             |-ImplicitCastExpr 0x136945410 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x1369453d0 <col:3> 'int ()' Function 0x1369422b8 'amfree' 'int ()'
|   |             `-ImplicitCastExpr 0x136945450 <col:10> 'char *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1369453f0 <col:10> 'char *' lvalue Var 0x1369441a0 'star_version' 'char *'
|   |-IfStmt 0x136946410 <line:64:5, line:70:5>
|   | |-CXXDependentScopeMemberExpr 0x136945550 <line:64:9, col:19> '<dependent type>' contains-errors lvalue ->calcsize
|   | | `-RecoveryExpr 0x136945530 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1369463e8 <col:29, line:70:5>
|   |   |-DeclStmt 0x136945738 <line:65:2, col:61>
|   |   | `-VarDecl 0x1369455b0 <col:2, col:8> col:8 used calcsize 'char *'
|   |   |-CallExpr 0x136946310 <line:68:2, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x1369462f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1369462b8 <col:2> 'int ()' Function 0x136946200 'check_suid' 'int ()'
|   |   | `-ImplicitCastExpr 0x136946338 <col:13> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1369462d8 <col:13> 'char *' lvalue Var 0x1369455b0 'calcsize' 'char *'
|   |   `-CallExpr 0x1369463a8 <line:69:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x136946390 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x136946350 <col:2> 'int ()' Function 0x1369422b8 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x1369463d0 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x136946370 <col:9> 'char *' lvalue Var 0x1369455b0 'calcsize' 'char *'
|   |-CompoundStmt 0x136946628 <line:72:5, line:76:5>
|   | `-DeclStmt 0x1369464b0 <line:73:2, col:22>
|   |   `-VarDecl 0x136946448 <col:2, col:8> col:8 used amandates_file 'char *'
|   |-CallExpr 0x136946778 <line:78:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x136946760 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x136946720 <col:5> 'int ()' Function 0x136946668 'set_root_privs' 'int ()'
|   | `-IntegerLiteral 0x136946740 <col:20> 'int' 1
|   |-IfStmt 0x136946a10 <line:79:5, line:81:5>
|   | |-CXXDependentScopeMemberExpr 0x136946808 <line:79:9, col:23> '<dependent type>' contains-errors lvalue .device
|   | | `-CXXDependentScopeMemberExpr 0x1369467c0 <col:9, col:19> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x1369467a0 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x136946a00 <col:31, line:81:5>
|   `-CallExpr 0x136946a88 <line:82:5, col:21> 'int'
|     |-ImplicitCastExpr 0x136946a70 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x136946a30 <col:5> 'int ()' Function 0x136946668 'set_root_privs' 'int ()'
|     `-IntegerLiteral 0x136946a50 <col:20> 'int' 0
`-FunctionDecl 0x136944de0 <line:54:7> col:7 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x136944ee0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x136944e88 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x136944f50 <col:7> Implicit printf 1 2
