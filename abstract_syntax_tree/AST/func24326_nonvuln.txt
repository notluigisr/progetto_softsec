TranslationUnitDecl 0x139855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1398564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x139855bd0 '__int128'
|-TypedefDecl 0x139856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x139855bf0 'unsigned __int128'
|-TypedefDecl 0x139926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x139926800 'struct __NSConstantString_tag'
|   `-Record 0x139856580 '__NSConstantString_tag'
|-TypedefDecl 0x139926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x139855d90 '__SVInt8_t'
|-TypedefDecl 0x139926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x139855db0 '__SVInt16_t'
|-TypedefDecl 0x139926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x139855dd0 '__SVInt32_t'
|-TypedefDecl 0x139926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x139855df0 '__SVInt64_t'
|-TypedefDecl 0x139926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x139855e10 '__SVUint8_t'
|-TypedefDecl 0x139926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x139855e30 '__SVUint16_t'
|-TypedefDecl 0x139926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x139855e50 '__SVUint32_t'
|-TypedefDecl 0x139926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x139855e70 '__SVUint64_t'
|-TypedefDecl 0x139926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x139855e90 '__SVFloat16_t'
|-TypedefDecl 0x139926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x139855eb0 '__SVFloat32_t'
|-TypedefDecl 0x139926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x139855ed0 '__SVFloat64_t'
|-TypedefDecl 0x139926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x139855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x139926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x139855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x139926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x139855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x139927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x139855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1399270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x139855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x139927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x139855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x139927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x139855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1399271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x139855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x139927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x139855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1399272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x139856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x139927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x139856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x139927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x139856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1399273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x139856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x139927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x139856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1399274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1398560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x139927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1398560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x139927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1398560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1399275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x139856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x139927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x139856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1399276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x139856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x139927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x139856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x139927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x139856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x139928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1398561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x139928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1398561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1399280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1398561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x139928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x139856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1399281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x139856230 '__clang_svint16x4_t'
|-TypedefDecl 0x139928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x139856250 '__clang_svint32x4_t'
|-TypedefDecl 0x139928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x139856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1399282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x139856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x139928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1398562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1399283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1398562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x139928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1398562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x139928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x139856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1399284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x139856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x139928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x139856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1399285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x139856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x139928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x139856390 '__SVBool_t'
|-TypedefDecl 0x139928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1398563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1399286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1398563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x139928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1398563f0 '__SVCount_t'
|-TypedefDecl 0x1399287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1399287b0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
|-TypedefDecl 0x139928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1399287b0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
`-FunctionDecl 0x13a008478 <dataset_diviso_filec/func24326_nonvuln.c:1:1, line:70:1> line:1:21 tree_mod_log_eb_copy 'int (struct extent_buffer *, struct extent_buffer *, unsigned long, unsigned long, int)' static inline
  |-ParmVarDecl 0x139928e68 <col:42, col:64> col:64 used dst 'struct extent_buffer *'
  |-ParmVarDecl 0x139928f58 <line:2:8, col:30> col:30 used src 'struct extent_buffer *'
  |-ParmVarDecl 0x13a008200 <col:35, col:49> col:49 used dst_offset 'unsigned long'
  |-ParmVarDecl 0x13a008280 <line:3:8, col:22> col:22 used src_offset 'unsigned long'
  |-ParmVarDecl 0x13a008300 <col:34, col:38> col:38 used nr_items 'int'
  `-CompoundStmt 0x139944fe8 <line:4:1, line:70:1>
    |-DeclStmt 0x13a0087d8 <line:5:2, col:46>
    | |-RecordDecl 0x13a008590 <col:2, col:9> col:9 struct btrfs_fs_info
    | `-VarDecl 0x13a0086f8 <col:2, col:39> col:24 used fs_info 'struct btrfs_fs_info *' cinit
    |   `-RecoveryExpr 0x13a008798 <col:34, col:39> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13a008760 <col:34> 'struct extent_buffer *' lvalue ParmVar 0x139928e68 'dst' 'struct extent_buffer *'
    |-DeclStmt 0x13a008890 <line:6:2, col:13>
    | `-VarDecl 0x13a008808 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x13a008870 <col:12> 'int' 0
    |-DeclStmt 0x13a008b30 <line:7:2, col:39>
    | |-RecordDecl 0x13a0088a8 <col:2, col:9> col:9 struct tree_mod_elem
    | `-VarDecl 0x13a008a78 <col:2, col:35> col:25 used tm_list 'struct tree_mod_elem **' cinit
    |   `-RecoveryExpr 0x13a008af8 <col:35> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13a008d18 <line:8:2, col:51>
    | |-VarDecl 0x13a008c08 <col:2, col:25> col:25 used tm_list_add 'struct tree_mod_elem **'
    | `-VarDecl 0x13a008c98 <col:2, col:40> col:40 used tm_list_rem 'struct tree_mod_elem **'
    |-DeclStmt 0x13a008db0 <line:9:2, col:7>
    | `-VarDecl 0x13a008d48 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x13a008e68 <line:10:2, col:16>
    | `-VarDecl 0x13a008de0 <col:2, col:15> col:6 used locked 'int' cinit
    |   `-IntegerLiteral 0x13a008e48 <col:15> 'int' 0
    |-IfStmt 0x13a0090c8 <line:12:2, line:13:10>
    | |-UnaryOperator 0x13a009080 <line:12:6, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x13a009050 <col:7, col:38> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13a008f90 <col:7> 'int ()' Function 0x13a008ed8 'tree_mod_need_log' 'int ()'
    | |   |-DeclRefExpr 0x13a008fb0 <col:25> 'struct btrfs_fs_info *' contains-errors lvalue Var 0x13a0086f8 'fs_info' 'struct btrfs_fs_info *'
    | |   `-RecoveryExpr 0x13a009030 <col:34> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13a0090b8 <line:13:3, col:10>
    |   `-IntegerLiteral 0x13a009098 <col:10> 'int' 0
    |-IfStmt 0x139941410 <line:15:2, line:16:10>
    | |-BinaryOperator 0x1399413c0 <line:15:6, col:65> 'int' '&&'
    | | |-BinaryOperator 0x1399412c8 <col:6, col:33> 'int' '=='
    | | | |-CallExpr 0x139941268 <col:6, col:28> 'int'
    | | | | |-ImplicitCastExpr 0x139941250 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | | `-DeclRefExpr 0x13a0091c8 <col:6> 'int ()' Function 0x13a009110 'btrfs_header_level' 'int ()'
    | | | | `-ImplicitCastExpr 0x139941290 <col:25> 'struct extent_buffer *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x139941200 <col:25> 'struct extent_buffer *' lvalue ParmVar 0x139928e68 'dst' 'struct extent_buffer *'
    | | | `-IntegerLiteral 0x1399412a8 <col:33> 'int' 0
    | | `-BinaryOperator 0x1399413a0 <col:38, col:65> 'int' '=='
    | |   |-CallExpr 0x139941340 <col:38, col:60> 'int'
    | |   | |-ImplicitCastExpr 0x139941328 <col:38> 'int (*)()' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x1399412e8 <col:38> 'int ()' Function 0x13a009110 'btrfs_header_level' 'int ()'
    | |   | `-ImplicitCastExpr 0x139941368 <col:57> 'struct extent_buffer *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x139941308 <col:57> 'struct extent_buffer *' lvalue ParmVar 0x139928f58 'src' 'struct extent_buffer *'
    | |   `-IntegerLiteral 0x139941380 <col:65> 'int' 0
    | `-ReturnStmt 0x139941400 <line:16:3, col:10>
    |   `-IntegerLiteral 0x1399413e0 <col:10> 'int' 0
    |-BinaryOperator 0x1399417d8 <line:18:2, line:19:14> 'struct tree_mod_elem **' contains-errors '='
    | |-DeclRefExpr 0x139941430 <line:18:2> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    | `-CallExpr 0x1399417a0 <col:12, line:19:14> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x139941530 <line:18:12> 'int ()' Function 0x139941478 'kcalloc' 'int ()'
    |   |-BinaryOperator 0x139941718 <col:20, col:31> 'int' '*'
    |   | |-ImplicitCastExpr 0x139941700 <col:20> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x139941550 <col:20> 'int' lvalue ParmVar 0x13a008300 'nr_items' 'int'
    |   | `-IntegerLiteral 0x139941570 <col:31> 'int' 2
    |   |-UnaryExprOrTypeTraitExpr 0x139941760 <col:34, col:63> 'unsigned long' sizeof 'struct tree_mod_elem *'
    |   `-RecoveryExpr 0x139941780 <line:19:6> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1399418f0 <line:20:2, line:21:11>
    | |-UnaryOperator 0x139941830 <line:20:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x139941818 <col:7> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x1399417f8 <col:7> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    | `-ReturnStmt 0x1399418e0 <line:21:3, col:11>
    |   `-UnaryOperator 0x1399418c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1399418b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x139941890 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x139941968 <line:23:2, col:16> 'struct tree_mod_elem **' contains-errors '='
    | |-DeclRefExpr 0x139941910 <col:2> 'struct tree_mod_elem **' lvalue Var 0x13a008c08 'tm_list_add' 'struct tree_mod_elem **'
    | `-ImplicitCastExpr 0x139941950 <col:16> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x139941930 <col:16> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    |-BinaryOperator 0x139941a38 <line:24:2, col:26> 'struct tree_mod_elem **' contains-errors '='
    | |-DeclRefExpr 0x139941988 <col:2> 'struct tree_mod_elem **' lvalue Var 0x13a008c98 'tm_list_rem' 'struct tree_mod_elem **'
    | `-BinaryOperator 0x139941a18 <col:16, col:26> 'struct tree_mod_elem **' contains-errors '+'
    |   |-ImplicitCastExpr 0x1399419e8 <col:16> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x1399419a8 <col:16> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    |   `-ImplicitCastExpr 0x139941a00 <col:26> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1399419c8 <col:26> 'int' lvalue ParmVar 0x13a008300 'nr_items' 'int'
    |-ForStmt 0x139943938 <line:25:2, line:39:2>
    | |-BinaryOperator 0x139941a98 <line:25:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x139941a58 <col:7> 'int' lvalue Var 0x13a008d48 'i' 'int'
    | | `-IntegerLiteral 0x139941a78 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x139941b28 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x139941af8 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x139941ab8 <col:14> 'int' lvalue Var 0x13a008d48 'i' 'int'
    | | `-ImplicitCastExpr 0x139941b10 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x139941ad8 <col:18> 'int' lvalue ParmVar 0x13a008300 'nr_items' 'int'
    | |-UnaryOperator 0x139941b68 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0x139941b48 <col:28> 'int' lvalue Var 0x13a008d48 'i' 'int'
    | `-CompoundStmt 0x139943908 <col:33, line:39:2>
    |   |-BinaryOperator 0x139942058 <line:26:3, line:27:35> 'struct tree_mod_elem *' contains-errors '='
    |   | |-ArraySubscriptExpr 0x139941f50 <line:26:3, col:16> 'struct tree_mod_elem *' lvalue
    |   | | |-ImplicitCastExpr 0x139941f20 <col:3> 'struct tree_mod_elem **' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x139941b80 <col:3> 'struct tree_mod_elem **' lvalue Var 0x13a008c98 'tm_list_rem' 'struct tree_mod_elem **'
    |   | | `-ImplicitCastExpr 0x139941f38 <col:15> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x139941ba0 <col:15> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   | `-CallExpr 0x139942018 <col:20, line:27:35> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x139941cf0 <line:26:20> 'int ()' Function 0x139941c38 'alloc_tree_mod_elem' 'int ()'
    |   |   |-DeclRefExpr 0x139941d10 <col:40> 'struct extent_buffer *' lvalue ParmVar 0x139928f58 'src' 'struct extent_buffer *'
    |   |   |-BinaryOperator 0x139941fb8 <col:45, col:49> 'unsigned long' '+'
    |   |   | |-ImplicitCastExpr 0x139941fa0 <col:45> 'unsigned long' <IntegralCast>
    |   |   | | `-ImplicitCastExpr 0x139941f70 <col:45> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x139941d30 <col:45> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   |   | `-ImplicitCastExpr 0x139941f88 <col:49> 'unsigned long' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x139941d50 <col:49> 'unsigned long' lvalue ParmVar 0x13a008280 'src_offset' 'unsigned long'
    |   |   |-RecoveryExpr 0x139941fd8 <line:27:7> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x139941ff8 <col:27> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1399432c0 <line:28:3, line:31:3>
    |   | |-UnaryOperator 0x139942120 <line:28:7, col:21> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x139942108 <col:8, col:21> 'struct tree_mod_elem *' <LValueToRValue>
    |   | |   `-ArraySubscriptExpr 0x1399420e8 <col:8, col:21> 'struct tree_mod_elem *' lvalue
    |   | |     |-ImplicitCastExpr 0x1399420b8 <col:8> 'struct tree_mod_elem **' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x139942078 <col:8> 'struct tree_mod_elem **' lvalue Var 0x13a008c98 'tm_list_rem' 'struct tree_mod_elem **'
    |   | |     `-ImplicitCastExpr 0x1399420d0 <col:20> 'int' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x139942098 <col:20> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   | `-CompoundStmt 0x1399432a0 <col:24, line:31:3>
    |   |   |-BinaryOperator 0x139943218 <line:29:4, col:11> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x139942138 <col:4> 'int' lvalue Var 0x13a008808 'ret' 'int'
    |   |   | `-UnaryOperator 0x139943200 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x1399421e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     `-RecoveryExpr 0x1399421c0 <col:11> '<dependent type>' contains-errors lvalue
    |   |   `-GotoStmt 0x139943288 <line:30:4, col:9> 'free_tms' 0x139943238
    |   |-BinaryOperator 0x1399436d8 <line:33:3, line:34:32> 'struct tree_mod_elem *' contains-errors '='
    |   | |-ArraySubscriptExpr 0x1399435d0 <line:33:3, col:16> 'struct tree_mod_elem *' lvalue
    |   | | |-ImplicitCastExpr 0x1399435a0 <col:3> 'struct tree_mod_elem **' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1399432e0 <col:3> 'struct tree_mod_elem **' lvalue Var 0x13a008c08 'tm_list_add' 'struct tree_mod_elem **'
    |   | | `-ImplicitCastExpr 0x1399435b8 <col:15> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x139943300 <col:15> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   | `-CallExpr 0x139943698 <col:20, line:34:32> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x139943370 <line:33:20> 'int ()' Function 0x139941c38 'alloc_tree_mod_elem' 'int ()'
    |   |   |-DeclRefExpr 0x139943390 <col:40> 'struct extent_buffer *' lvalue ParmVar 0x139928e68 'dst' 'struct extent_buffer *'
    |   |   |-BinaryOperator 0x139943638 <col:45, col:49> 'unsigned long' '+'
    |   |   | |-ImplicitCastExpr 0x139943620 <col:45> 'unsigned long' <IntegralCast>
    |   |   | | `-ImplicitCastExpr 0x1399435f0 <col:45> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x1399433b0 <col:45> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   |   | `-ImplicitCastExpr 0x139943608 <col:49> 'unsigned long' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1399433d0 <col:49> 'unsigned long' lvalue ParmVar 0x13a008200 'dst_offset' 'unsigned long'
    |   |   |-RecoveryExpr 0x139943658 <line:34:7> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x139943678 <col:24> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1399438e8 <line:35:3, line:38:3>
    |     |-UnaryOperator 0x1399437a0 <line:35:7, col:21> 'int' prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x139943788 <col:8, col:21> 'struct tree_mod_elem *' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0x139943768 <col:8, col:21> 'struct tree_mod_elem *' lvalue
    |     |     |-ImplicitCastExpr 0x139943738 <col:8> 'struct tree_mod_elem **' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x1399436f8 <col:8> 'struct tree_mod_elem **' lvalue Var 0x13a008c08 'tm_list_add' 'struct tree_mod_elem **'
    |     |     `-ImplicitCastExpr 0x139943750 <col:20> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x139943718 <col:20> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |     `-CompoundStmt 0x1399438c8 <col:24, line:38:3>
    |       |-BinaryOperator 0x139943890 <line:36:4, col:11> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x1399437b8 <col:4> 'int' lvalue Var 0x13a008808 'ret' 'int'
    |       | `-UnaryOperator 0x139943878 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |   `-ImplicitCastExpr 0x139943860 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       |     `-RecoveryExpr 0x139943840 <col:11> '<dependent type>' contains-errors lvalue
    |       `-GotoStmt 0x1399438b0 <line:37:4, col:9> 'free_tms' 0x139943238
    |-IfStmt 0x139943b40 <line:41:2, line:42:8>
    | |-CallExpr 0x139943af8 <line:41:6, col:37> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x139943a50 <col:6> 'int ()' Function 0x139943998 'tree_mod_dont_log' 'int ()'
    | | |-DeclRefExpr 0x139943a70 <col:24> 'struct btrfs_fs_info *' contains-errors lvalue Var 0x13a0086f8 'fs_info' 'struct btrfs_fs_info *'
    | | `-RecoveryExpr 0x139943ad8 <col:33> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x139943b28 <line:42:3, col:8> 'free_tms' 0x139943238
    |-BinaryOperator 0x139943ba0 <line:43:2, col:11> 'int' '='
    | |-DeclRefExpr 0x139943b60 <col:2> 'int' lvalue Var 0x13a008de0 'locked' 'int'
    | `-IntegerLiteral 0x139943b80 <col:11> 'int' 1
    |-ForStmt 0x139944200 <line:45:2, line:52:2>
    | |-BinaryOperator 0x139943c00 <line:45:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x139943bc0 <col:7> 'int' lvalue Var 0x13a008d48 'i' 'int'
    | | `-IntegerLiteral 0x139943be0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x139943c90 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x139943c60 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x139943c20 <col:14> 'int' lvalue Var 0x13a008d48 'i' 'int'
    | | `-ImplicitCastExpr 0x139943c78 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x139943c40 <col:18> 'int' lvalue ParmVar 0x13a008300 'nr_items' 'int'
    | |-UnaryOperator 0x139943cd0 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0x139943cb0 <col:28> 'int' lvalue Var 0x13a008d48 'i' 'int'
    | `-CompoundStmt 0x1399441b8 <col:33, line:52:2>
    |   |-BinaryOperator 0x139943f30 <line:46:3, col:54> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x139943ce8 <col:3> 'int' lvalue Var 0x13a008808 'ret' 'int'
    |   | `-CallExpr 0x139943ed0 <col:9, col:54> 'int' contains-errors
    |   |   |-ImplicitCastExpr 0x139943eb8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x139943de8 <col:9> 'int ()' Function 0x139943d30 '__tree_mod_log_insert' 'int ()'
    |   |   |-ImplicitCastExpr 0x139943f00 <col:31> 'struct btrfs_fs_info *' contains-errors <LValueToRValue>
    |   |   | `-DeclRefExpr 0x139943e08 <col:31> 'struct btrfs_fs_info *' contains-errors lvalue Var 0x13a0086f8 'fs_info' 'struct btrfs_fs_info *'
    |   |   `-ImplicitCastExpr 0x139943f18 <col:40, col:53> 'struct tree_mod_elem *' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x139943e98 <col:40, col:53> 'struct tree_mod_elem *' lvalue
    |   |       |-ImplicitCastExpr 0x139943e68 <col:40> 'struct tree_mod_elem **' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x139943e28 <col:40> 'struct tree_mod_elem **' lvalue Var 0x13a008c98 'tm_list_rem' 'struct tree_mod_elem **'
    |   |       `-ImplicitCastExpr 0x139943e80 <col:52> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x139943e48 <col:52> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   |-IfStmt 0x139943fa0 <line:47:3, line:48:9>
    |   | |-ImplicitCastExpr 0x139943f70 <line:47:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x139943f50 <col:7> 'int' lvalue Var 0x13a008808 'ret' 'int'
    |   | `-GotoStmt 0x139943f88 <line:48:4, col:9> 'free_tms' 0x139943238
    |   |-BinaryOperator 0x139944128 <line:49:3, col:54> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x139943fc0 <col:3> 'int' lvalue Var 0x13a008808 'ret' 'int'
    |   | `-CallExpr 0x1399440c8 <col:9, col:54> 'int' contains-errors
    |   |   |-ImplicitCastExpr 0x1399440b0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x139943fe0 <col:9> 'int ()' Function 0x139943d30 '__tree_mod_log_insert' 'int ()'
    |   |   |-ImplicitCastExpr 0x1399440f8 <col:31> 'struct btrfs_fs_info *' contains-errors <LValueToRValue>
    |   |   | `-DeclRefExpr 0x139944000 <col:31> 'struct btrfs_fs_info *' contains-errors lvalue Var 0x13a0086f8 'fs_info' 'struct btrfs_fs_info *'
    |   |   `-ImplicitCastExpr 0x139944110 <col:40, col:53> 'struct tree_mod_elem *' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x139944090 <col:40, col:53> 'struct tree_mod_elem *' lvalue
    |   |       |-ImplicitCastExpr 0x139944060 <col:40> 'struct tree_mod_elem **' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x139944020 <col:40> 'struct tree_mod_elem **' lvalue Var 0x13a008c08 'tm_list_add' 'struct tree_mod_elem **'
    |   |       `-ImplicitCastExpr 0x139944078 <col:52> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x139944040 <col:52> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   `-IfStmt 0x139944198 <line:50:3, line:51:9>
    |     |-ImplicitCastExpr 0x139944168 <line:50:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x139944148 <col:7> 'int' lvalue Var 0x13a008808 'ret' 'int'
    |     `-GotoStmt 0x139944180 <line:51:4, col:9> 'free_tms' 0x139943238
    |-CallExpr 0x1399443b0 <line:54:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139944318 <col:2> 'int ()' Function 0x139944260 'write_unlock' 'int ()'
    | `-UnaryOperator 0x139944398 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x139944370 <col:16, col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x139944338 <col:16> 'struct btrfs_fs_info *' contains-errors lvalue Var 0x13a0086f8 'fs_info' 'struct btrfs_fs_info *'
    |-CallExpr 0x139944510 <line:55:2, col:15> 'int' contains-errors
    | |-ImplicitCastExpr 0x1399444f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1399444b8 <col:2> 'int ()' Function 0x139944400 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x139944538 <col:8> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x1399444d8 <col:8> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    |-ReturnStmt 0x139944570 <line:57:2, col:9>
    | `-IntegerLiteral 0x139944550 <col:9> 'int' 0
    |-LabelStmt 0x139944dd0 <line:59:1, line:64:2> 'free_tms'
    | `-ForStmt 0x139944d98 <line:60:2, line:64:2>
    |   |-BinaryOperator 0x1399445c0 <line:60:7, col:11> 'int' '='
    |   | |-DeclRefExpr 0x139944580 <col:7> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   | `-IntegerLiteral 0x1399445a0 <col:11> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x139944690 <col:14, col:29> 'int' '<'
    |   | |-ImplicitCastExpr 0x139944678 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1399445e0 <col:14> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   | `-BinaryOperator 0x139944658 <col:18, col:29> 'int' '*'
    |   |   |-ImplicitCastExpr 0x139944640 <col:18> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x139944600 <col:18> 'int' lvalue ParmVar 0x13a008300 'nr_items' 'int'
    |   |   `-IntegerLiteral 0x139944620 <col:29> 'int' 2
    |   |-UnaryOperator 0x1399446d0 <col:32, col:33> 'int' postfix '++'
    |   | `-DeclRefExpr 0x1399446b0 <col:32> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |   `-CompoundStmt 0x139944d78 <col:37, line:64:2>
    |     |-IfStmt 0x139944c50 <line:61:3, line:62:54>
    |     | |-BinaryOperator 0x1399449a0 <line:61:7, col:53> 'int' contains-errors '&&'
    |     | | |-ArraySubscriptExpr 0x139944758 <col:7, col:16> 'struct tree_mod_elem *' contains-errors lvalue
    |     | | | |-ImplicitCastExpr 0x139944728 <col:7> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x1399446e8 <col:7> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    |     | | | `-ImplicitCastExpr 0x139944740 <col:15> 'int' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x139944708 <col:15> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |     | | `-UnaryOperator 0x139944988 <col:21, col:53> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | |   `-CallExpr 0x139944960 <col:22, col:53> '<dependent type>' contains-errors
    |     | |     |-DeclRefExpr 0x139944858 <col:22> 'int ()' Function 0x1399447a0 'RB_EMPTY_NODE' 'int ()'
    |     | |     `-UnaryOperator 0x139944948 <col:36, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |       `-RecoveryExpr 0x139944920 <col:37, col:49> '<dependent type>' contains-errors lvalue
    |     | |         `-ArraySubscriptExpr 0x1399448e8 <col:37, col:46> 'struct tree_mod_elem *' contains-errors lvalue
    |     | |           |-ImplicitCastExpr 0x1399448b8 <col:37> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |     | |           | `-DeclRefExpr 0x139944878 <col:37> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    |     | |           `-ImplicitCastExpr 0x1399448d0 <col:45> 'int' <LValueToRValue>
    |     | |             `-DeclRefExpr 0x139944898 <col:45> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |     | `-CallExpr 0x139944c20 <line:62:4, col:54> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x139944aa0 <col:4> 'int ()' Function 0x1399449e8 'rb_erase' 'int ()'
    |     |   |-UnaryOperator 0x139944b90 <col:13, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   | `-RecoveryExpr 0x139944b68 <col:14, col:26> '<dependent type>' contains-errors lvalue
    |     |   |   `-ArraySubscriptExpr 0x139944b30 <col:14, col:23> 'struct tree_mod_elem *' contains-errors lvalue
    |     |   |     |-ImplicitCastExpr 0x139944b00 <col:14> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |     |   |     | `-DeclRefExpr 0x139944ac0 <col:14> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    |     |   |     `-ImplicitCastExpr 0x139944b18 <col:22> 'int' <LValueToRValue>
    |     |   |       `-DeclRefExpr 0x139944ae0 <col:22> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |     |   `-UnaryOperator 0x139944c08 <col:32, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |     `-RecoveryExpr 0x139944be0 <col:33, col:42> '<dependent type>' contains-errors lvalue
    |     |       `-DeclRefExpr 0x139944ba8 <col:33> 'struct btrfs_fs_info *' contains-errors lvalue Var 0x13a0086f8 'fs_info' 'struct btrfs_fs_info *'
    |     `-CallExpr 0x139944d38 <line:63:3, col:19> 'int' contains-errors
    |       |-ImplicitCastExpr 0x139944d20 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x139944c70 <col:3> 'int ()' Function 0x139944400 'kfree' 'int ()'
    |       `-ImplicitCastExpr 0x139944d60 <col:9, col:18> 'struct tree_mod_elem *' contains-errors <LValueToRValue>
    |         `-ArraySubscriptExpr 0x139944d00 <col:9, col:18> 'struct tree_mod_elem *' contains-errors lvalue
    |           |-ImplicitCastExpr 0x139944cd0 <col:9> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |           | `-DeclRefExpr 0x139944c90 <col:9> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    |           `-ImplicitCastExpr 0x139944ce8 <col:17> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x139944cb0 <col:17> 'int' lvalue Var 0x13a008d48 'i' 'int'
    |-IfStmt 0x139944ee8 <line:65:2, line:66:43>
    | |-ImplicitCastExpr 0x139944e10 <line:65:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x139944df0 <col:6> 'int' lvalue Var 0x13a008de0 'locked' 'int'
    | `-CallExpr 0x139944ec0 <line:66:3, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x139944e28 <col:3> 'int ()' Function 0x139944260 'write_unlock' 'int ()'
    |   `-UnaryOperator 0x139944ea8 <col:16, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x139944e80 <col:17, col:26> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x139944e48 <col:17> 'struct btrfs_fs_info *' contains-errors lvalue Var 0x13a0086f8 'fs_info' 'struct btrfs_fs_info *'
    |-CallExpr 0x139944f60 <line:67:2, col:15> 'int' contains-errors
    | |-ImplicitCastExpr 0x139944f48 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x139944f08 <col:2> 'int ()' Function 0x139944400 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x139944f88 <col:8> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x139944f28 <col:8> 'struct tree_mod_elem **' contains-errors lvalue Var 0x13a008a78 'tm_list' 'struct tree_mod_elem **'
    `-ReturnStmt 0x139944fd8 <line:69:2, col:9>
      `-ImplicitCastExpr 0x139944fc0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x139944fa0 <col:9> 'int' lvalue Var 0x13a008808 'ret' 'int'
