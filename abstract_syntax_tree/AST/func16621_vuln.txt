TranslationUnitDecl 0x143055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1430564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x143055bd0 '__int128'
|-TypedefDecl 0x143056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x143055bf0 'unsigned __int128'
|-TypedefDecl 0x14380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14380bc00 'struct __NSConstantString_tag'
|   `-Record 0x143056580 '__NSConstantString_tag'
|-TypedefDecl 0x14380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x143055d90 '__SVInt8_t'
|-TypedefDecl 0x14380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x143055db0 '__SVInt16_t'
|-TypedefDecl 0x14380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x143055dd0 '__SVInt32_t'
|-TypedefDecl 0x14380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x143055df0 '__SVInt64_t'
|-TypedefDecl 0x14380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x143055e10 '__SVUint8_t'
|-TypedefDecl 0x14380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x143055e30 '__SVUint16_t'
|-TypedefDecl 0x14380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x143055e50 '__SVUint32_t'
|-TypedefDecl 0x14380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x143055e70 '__SVUint64_t'
|-TypedefDecl 0x14380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x143055e90 '__SVFloat16_t'
|-TypedefDecl 0x14380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x143055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x143055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x143055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x143055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x143055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x143055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x143055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x143055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x143055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x143055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x143055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x143056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x143056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x143056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x143056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x143056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1430560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1430560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1430560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x143056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x143056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x143056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x143056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x143056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1430561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1430561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1430561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x143056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x143056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x143056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x143056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x143056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1430562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1430562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1430562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x143056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x143056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x143056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x143056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x143056390 '__SVBool_t'
|-TypedefDecl 0x14380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1430563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1430563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1430563f0 '__SVCount_t'
|-TypedefDecl 0x14380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14380dbb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-TypedefDecl 0x14380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14380dbb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
`-FunctionDecl 0x14380df18 <dataset_diviso_filec/func16621_vuln.c:1:1, line:42:1> line:1:12 invalid fts3EvalPhraseStart 'int (int *, int, int *)' static
  |-ParmVarDecl 0x14380dd28 <col:32, col:44> col:44 invalid pCsr 'int *'
  |-ParmVarDecl 0x14380dda8 <col:50, col:54> col:54 used bOptOk 'int'
  |-ParmVarDecl 0x14380de28 <col:62, col:74> col:74 referenced invalid p 'int *'
  `-CompoundStmt 0x14382a500 <col:76, line:42:1>
    |-DeclStmt 0x14380e0c0 <line:3:3, col:21>
    | `-VarDecl 0x14380e020 <col:3, col:12> col:7 used rc 'int' cinit
    |   `-RecoveryExpr 0x14380e0a0 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14380e158 <line:4:3, col:8>
    | `-VarDecl 0x14380e0f0 <col:3, col:7> col:7 used i 'int'
    |-DeclStmt 0x14380e210 <line:7:3, col:20>
    | `-VarDecl 0x14380e188 <col:3, col:19> col:7 used bHaveIncr 'int' cinit
    |   `-IntegerLiteral 0x14380e1f0 <col:19> 'int' 0
    |-DeclStmt 0x143827968 <line:8:3, line:14:4>
    | `-VarDecl 0x14380e240 <line:8:3, col:7> col:7 used bIncrOk 'int'
    |-ForStmt 0x143828078 <line:15:3, line:21:3>
    | |-BinaryOperator 0x1438279c0 <line:15:7, col:9> 'int' '='
    | | |-DeclRefExpr 0x143827980 <col:7> 'int' lvalue Var 0x14380e0f0 'i' 'int'
    | | `-IntegerLiteral 0x1438279a0 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x143827b00 <col:12, col:31> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x143827a38 <col:12, col:21> 'int' '=='
    | | | |-ImplicitCastExpr 0x143827a20 <col:12> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1438279e0 <col:12> 'int' lvalue Var 0x14380e240 'bIncrOk' 'int'
    | | | `-IntegerLiteral 0x143827a00 <col:21> 'int' 1
    | | `-BinaryOperator 0x143827ae0 <col:26, col:31> 'int' contains-errors '<'
    | |   |-DeclRefExpr 0x143827a58 <col:26> 'int' lvalue Var 0x14380e0f0 'i' 'int'
    | |   `-CXXDependentScopeMemberExpr 0x143827a98 <col:28, col:31> '<dependent type>' contains-errors lvalue ->nToken
    | |     `-RecoveryExpr 0x143827a78 <col:28> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x143827b40 <col:39, col:40> 'int' postfix '++'
    | | `-DeclRefExpr 0x143827b20 <col:39> 'int' lvalue Var 0x14380e0f0 'i' 'int'
    | `-CompoundStmt 0x143828058 <col:43, line:21:3>
    |   |-IfStmt 0x143827ef0 <line:17:5, line:19:5>
    |   | |-RecoveryExpr 0x143827e58 <line:17:9, col:75> '_Bool' contains-errors
    |   | `-CompoundStmt 0x143827ed8 <col:78, line:19:5>
    |   |   `-BinaryOperator 0x143827eb8 <line:18:7, col:17> 'int' '='
    |   |     |-DeclRefExpr 0x143827e78 <col:7> 'int' lvalue Var 0x14380e240 'bIncrOk' 'int'
    |   |     `-IntegerLiteral 0x143827e98 <col:17> 'int' 0
    |   `-IfStmt 0x143828038 <line:20:5, col:39>
    |     |-CXXDependentScopeMemberExpr 0x143827f90 <col:9, col:17> '<dependent type>' contains-errors lvalue ->pSegcsr
    |     | `-RecoveryExpr 0x143827f70 <col:9> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x143828018 <col:27, col:39> 'int' '='
    |       |-DeclRefExpr 0x143827fd8 <col:27> 'int' lvalue Var 0x14380e188 'bHaveIncr' 'int'
    |       `-IntegerLiteral 0x143827ff8 <col:39> 'int' 1
    |-IfStmt 0x14382a110 <line:23:3, line:38:3> has_else
    | |-BinaryOperator 0x143828120 <line:23:7, col:18> 'int' '&&'
    | | |-ImplicitCastExpr 0x1438280f0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1438280b0 <col:7> 'int' lvalue Var 0x14380e240 'bIncrOk' 'int'
    | | `-ImplicitCastExpr 0x143828108 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1438280d0 <col:18> 'int' lvalue Var 0x14380e188 'bHaveIncr' 'int'
    | |-CompoundStmt 0x143829e48 <col:29, line:34:3>
    | | |-DeclStmt 0x143828378 <line:25:5, col:63>
    | | | `-VarDecl 0x143828158 <col:5, col:9> col:9 used iCol 'int'
    | | |-ForStmt 0x143829d40 <line:26:5, line:32:5>
    | | | |-BinaryOperator 0x1438283d0 <line:26:9, col:11> 'int' '='
    | | | | |-DeclRefExpr 0x143828390 <col:9> 'int' lvalue Var 0x14380e0f0 'i' 'int'
    | | | | `-IntegerLiteral 0x1438283b0 <col:11> 'int' 0
    | | | |-<<<NULL>>>
    | | | |-BinaryOperator 0x143828550 <col:14, col:36> 'int' contains-errors '&&'
    | | | | |-BinaryOperator 0x143828530 <col:14, col:18> 'int' contains-errors '=='
    | | | | | |-DeclRefExpr 0x1438283f0 <col:14> 'int' contains-errors lvalue Var 0x14380e020 'rc' 'int'
    | | | | | `-RecoveryExpr 0x143828510 <col:18> '<dependent type>' contains-errors lvalue
    | | | | `-BinaryOperator 0x1438284d0 <col:31, col:36> 'int' contains-errors '<'
    | | | |   |-DeclRefExpr 0x143828448 <col:31> 'int' lvalue Var 0x14380e0f0 'i' 'int'
    | | | |   `-CXXDependentScopeMemberExpr 0x143828488 <col:33, col:36> '<dependent type>' contains-errors lvalue ->nToken
    | | | |     `-RecoveryExpr 0x143828468 <col:33> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x143828590 <col:44, col:45> 'int' postfix '++'
    | | | | `-DeclRefExpr 0x143828570 <col:44> 'int' lvalue Var 0x14380e0f0 'i' 'int'
    | | | `-CompoundStmt 0x143829d28 <col:48, line:32:5>
    | | |   `-IfStmt 0x143829d08 <line:29:7, line:31:7>
    | | |     |-RecoveryExpr 0x1438286b0 <line:29:11> '_Bool' contains-errors
    | | |     `-CompoundStmt 0x143829cf8 <col:20, line:31:7>
    | | `-BinaryOperator 0x143829e28 <line:33:5, col:16> '<dependent type>' contains-errors '='
    | |   |-CXXDependentScopeMemberExpr 0x143829dc0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->bIncr
    | |   | `-RecoveryExpr 0x143829d98 <col:5> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x143829d78 <col:5> 'int *' lvalue ParmVar 0x14380de28 'p' 'int *'
    | |   `-IntegerLiteral 0x143829e08 <col:16> 'int' 1
    | `-CompoundStmt 0x14382a0f0 <line:34:8, line:38:3>
    |   |-BinaryOperator 0x14382a000 <line:36:5, col:36> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x143829e70 <col:5> 'int' contains-errors lvalue Var 0x14380e020 'rc' 'int'
    |   | `-CallExpr 0x143829fd0 <col:10, col:36> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x143829f70 <col:10> 'int ()' Function 0x143829eb8 'fts3EvalPhraseLoad' 'int ()'
    |   |   |-RecoveryExpr 0x143829f90 <col:29> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x143829fb0 <col:35> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x14382a0d0 <line:37:5, col:16> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x14382a068 <col:5, col:8> '<dependent type>' contains-errors lvalue ->bIncr
    |     | `-RecoveryExpr 0x14382a040 <col:5> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x14382a020 <col:5> 'int *' lvalue ParmVar 0x14380de28 'p' 'int *'
    |     `-IntegerLiteral 0x14382a0b0 <col:16> 'int' 0
    `-ReturnStmt 0x14382a4f0 <line:41:3, col:10>
      `-ImplicitCastExpr 0x14382a4d8 <col:10> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x14382a4b8 <col:10> 'int' contains-errors lvalue Var 0x14380e020 'rc' 'int'
