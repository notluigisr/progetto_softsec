TranslationUnitDecl 0x135855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1358564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135855bd0 '__int128'
|-TypedefDecl 0x135856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135855bf0 'unsigned __int128'
|-TypedefDecl 0x135926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135926000 'struct __NSConstantString_tag'
|   `-Record 0x135856580 '__NSConstantString_tag'
|-TypedefDecl 0x135926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135855d90 '__SVInt8_t'
|-TypedefDecl 0x135926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135855db0 '__SVInt16_t'
|-TypedefDecl 0x135926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135855dd0 '__SVInt32_t'
|-TypedefDecl 0x1359263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135855df0 '__SVInt64_t'
|-TypedefDecl 0x135926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135855e10 '__SVUint8_t'
|-TypedefDecl 0x1359264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135855e30 '__SVUint16_t'
|-TypedefDecl 0x135926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135855e50 '__SVUint32_t'
|-TypedefDecl 0x135926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135855e70 '__SVUint64_t'
|-TypedefDecl 0x1359265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135855e90 '__SVFloat16_t'
|-TypedefDecl 0x135926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1359266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135855ed0 '__SVFloat64_t'
|-TypedefDecl 0x135926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1359267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1359268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1359269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x135926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x135926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135856090 '__clang_svint8x3_t'
|-TypedefDecl 0x135926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1358560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1358560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1358560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x135926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x135926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1358561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1358561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1359278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1358561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1359279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135856230 '__clang_svint16x4_t'
|-TypedefDecl 0x135927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135856250 '__clang_svint32x4_t'
|-TypedefDecl 0x135927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135856270 '__clang_svint64x4_t'
|-TypedefDecl 0x135927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1358562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x135927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1358562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1358562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x135927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x135927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135856390 '__SVBool_t'
|-TypedefDecl 0x135927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1358563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x135927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1358563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1358563f0 '__SVCount_t'
|-TypedefDecl 0x135927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x135927fb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-TypedefDecl 0x135928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x135927fb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
`-FunctionDecl 0x135928750 <dataset_diviso_filec/func17581_vuln.c:1:1, line:64:1> line:1:6 bpf_int_jit_compile 'void (struct bpf_prog *)'
  |-ParmVarDecl 0x135928648 <col:26, col:43> col:43 used prog 'struct bpf_prog *'
  `-CompoundStmt 0x13780aea0 <line:2:1, line:64:1>
    |-DeclStmt 0x136008488 <line:3:2, col:41>
    | |-RecordDecl 0x136008248 <col:2, col:9> col:9 struct bpf_binary_header
    | `-VarDecl 0x1360083b8 <col:2, col:37> col:28 used header 'struct bpf_binary_header *' cinit
    |   `-RecoveryExpr 0x136008450 <col:37> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1360085d8 <line:4:2, col:29>
    | |-VarDecl 0x1360084b8 <col:2, col:6> col:6 used proglen 'int'
    | `-VarDecl 0x136008538 <col:2, col:28> col:15 used oldproglen 'int' cinit
    |   `-IntegerLiteral 0x1360085a0 <col:28> 'int' 0
    |-DeclStmt 0x1360087a8 <line:5:2, col:29>
    | |-RecordDecl 0x1360085f0 <col:2, col:9> col:9 struct jit_context
    | `-VarDecl 0x1360086e8 <col:2, col:21> col:21 referenced invalid ctx 'struct jit_context'
    |-DeclStmt 0x1360088a0 <line:7:2, col:12>
    | `-VarDecl 0x136008838 <col:2, col:7> col:7 used addrs 'int *'
    |-DeclStmt 0x136008938 <line:8:2, col:10>
    | `-VarDecl 0x1360088d0 <col:2, col:6> col:6 used pass 'int'
    |-DeclStmt 0x1360089d0 <line:9:2, col:7>
    | `-VarDecl 0x136008968 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x136008a90 <line:11:2, line:12:3>
    | |-UnaryOperator 0x136008a68 <line:11:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x136008a50 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x136008a30 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x136008a80 <line:12:3>
    |-IfStmt 0x136008bc0 <line:14:2, line:15:3>
    | |-BinaryOperator 0x136008b90 <line:14:6, col:22> 'int' contains-errors '||'
    | | |-UnaryOperator 0x136008ae8 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x136008ad0 <col:7> 'struct bpf_prog *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x136008ab0 <col:7> 'struct bpf_prog *' lvalue ParmVar 0x135928648 'prog' 'struct bpf_prog *'
    | | `-UnaryOperator 0x136008b78 <col:15, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x136008b60 <col:16, col:22> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x136008b38 <col:16, col:22> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x136008b00 <col:16> 'struct bpf_prog *' lvalue ParmVar 0x135928648 'prog' 'struct bpf_prog *'
    | `-ReturnStmt 0x136008bb0 <line:15:3>
    |-BinaryOperator 0x136009018 <line:17:2, col:56> 'int *' contains-errors '='
    | |-DeclRefExpr 0x136008be0 <col:2> 'int *' lvalue Var 0x136008838 'addrs' 'int *'
    | `-CallExpr 0x136008fe8 <col:10, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x136008d10 <col:10> 'int ()' Function 0x136008c58 'kmalloc' 'int ()'
    |   |-BinaryOperator 0x136008fa8 <col:18, col:43> '<dependent type>' contains-errors '*'
    |   | |-RecoveryExpr 0x136008d68 <col:18, col:24> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x136008d30 <col:18> 'struct bpf_prog *' lvalue ParmVar 0x135928648 'prog' 'struct bpf_prog *'
    |   | `-UnaryExprOrTypeTraitExpr 0x136008f88 <col:30, col:43> 'unsigned long' sizeof
    |   |   `-ParenExpr 0x136008f68 <col:36, col:43> 'int' lvalue
    |   |     `-UnaryOperator 0x136008f50 <col:37, col:38> 'int' lvalue prefix '*' cannot overflow
    |   |       `-ImplicitCastExpr 0x136008f38 <col:38> 'int *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x136008d90 <col:38> 'int *' lvalue Var 0x136008838 'addrs' 'int *' non_odr_use_unevaluated
    |   `-RecoveryExpr 0x136008fc8 <col:46> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x136009098 <line:18:2, line:19:3>
    | |-UnaryOperator 0x136009070 <line:18:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x136009058 <col:7> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x136009038 <col:7> 'int *' lvalue Var 0x136008838 'addrs' 'int *'
    | `-ReturnStmt 0x136009088 <line:19:3>
    |-ForStmt 0x1378083f8 <line:22:2, line:25:2>
    | |-BinaryOperator 0x136009178 <line:22:7, col:24> 'int' ','
    | | |-BinaryOperator 0x1360090f8 <col:7, col:17> 'int' '='
    | | | |-DeclRefExpr 0x1360090b8 <col:7> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    | | | `-IntegerLiteral 0x1360090d8 <col:17> 'int' 0
    | | `-BinaryOperator 0x136009158 <col:20, col:24> 'int' '='
    | |   |-DeclRefExpr 0x136009118 <col:20> 'int' lvalue Var 0x136008968 'i' 'int'
    | |   `-IntegerLiteral 0x136009138 <col:24> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x137808228 <col:27, col:37> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x136009198 <col:27> 'int' lvalue Var 0x136008968 'i' 'int'
    | | `-RecoveryExpr 0x137808200 <col:31, col:37> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1360091b8 <col:31> 'struct bpf_prog *' lvalue ParmVar 0x135928648 'prog' 'struct bpf_prog *'
    | |-UnaryOperator 0x137808268 <col:42, col:43> 'int' postfix '++'
    | | `-DeclRefExpr 0x137808248 <col:42> 'int' lvalue Var 0x136008968 'i' 'int'
    | `-CompoundStmt 0x1378083d8 <col:47, line:25:2>
    |   |-CompoundAssignOperator 0x1378082c0 <line:23:3, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x137808280 <col:3> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |   | `-IntegerLiteral 0x1378082a0 <col:14> 'int' 64
    |   `-BinaryOperator 0x1378083b8 <line:24:3, col:14> 'int' '='
    |     |-ArraySubscriptExpr 0x137808360 <col:3, col:10> 'int' lvalue
    |     | |-ImplicitCastExpr 0x137808330 <col:3> 'int *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1378082f0 <col:3> 'int *' lvalue Var 0x136008838 'addrs' 'int *'
    |     | `-ImplicitCastExpr 0x137808348 <col:9> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x137808310 <col:9> 'int' lvalue Var 0x136008968 'i' 'int'
    |     `-ImplicitCastExpr 0x1378083a0 <col:14> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x137808380 <col:14> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |-BinaryOperator 0x1378084e0 <line:26:2, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x137808478 <col:2, col:6> '<dependent type>' contains-errors lvalue .cleanup_addr
    | | `-RecoveryExpr 0x137808450 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x137808430 <col:2> 'struct jit_context' lvalue Var 0x1360086e8 'ctx' 'struct jit_context'
    | `-DeclRefExpr 0x1378084c0 <col:21> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |-ForStmt 0x13780a690 <line:28:2, line:51:2>
    | |-BinaryOperator 0x137808540 <line:28:7, col:14> 'int' '='
    | | |-DeclRefExpr 0x137808500 <col:7> 'int' lvalue Var 0x1360088d0 'pass' 'int'
    | | `-IntegerLiteral 0x137808520 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1378085b8 <col:17, col:24> 'int' '<'
    | | |-ImplicitCastExpr 0x1378085a0 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x137808560 <col:17> 'int' lvalue Var 0x1360088d0 'pass' 'int'
    | | `-IntegerLiteral 0x137808580 <col:24> 'int' 10
    | |-UnaryOperator 0x1378085f8 <col:28, col:32> 'int' postfix '++'
    | | `-DeclRefExpr 0x1378085d8 <col:28> 'int' lvalue Var 0x1360088d0 'pass' 'int'
    | `-CompoundStmt 0x13780a658 <col:36, line:51:2>
    |   |-BinaryOperator 0x1378088b0 <line:29:3, col:56> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x137808610 <col:3> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |   | `-CallExpr 0x137808868 <col:13, col:56> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x137808710 <col:13> 'int ()' Function 0x137808658 'do_jit' 'int ()'
    |   |   |-DeclRefExpr 0x137808730 <col:20> 'struct bpf_prog *' lvalue ParmVar 0x135928648 'prog' 'struct bpf_prog *'
    |   |   |-DeclRefExpr 0x137808750 <col:26> 'int *' lvalue Var 0x136008838 'addrs' 'int *'
    |   |   |-RecoveryExpr 0x137808848 <col:33> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x137808788 <col:40> 'int' lvalue Var 0x136008538 'oldproglen' 'int'
    |   |   `-UnaryOperator 0x1378087c8 <col:52, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x1378087a8 <col:53> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x137808bf0 <line:30:3, line:35:3>
    |   | |-BinaryOperator 0x137808928 <line:30:7, col:18> 'int' '<='
    |   | | |-ImplicitCastExpr 0x137808910 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1378088d0 <col:7> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |   | | `-IntegerLiteral 0x1378088f0 <col:18> 'int' 0
    |   | `-CompoundStmt 0x137808bd0 <col:21, line:35:3>
    |   |   |-IfStmt 0x137808b48 <line:32:4, line:33:31>
    |   |   | |-ImplicitCastExpr 0x137808980 <line:32:8> 'struct bpf_binary_header *' contains-errors <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x137808960 <col:8> 'struct bpf_binary_header *' contains-errors lvalue Var 0x1360083b8 'header' 'struct bpf_binary_header *'
    |   |   | `-CallExpr 0x137808b08 <line:33:5, col:31> 'int' contains-errors
    |   |   |   |-ImplicitCastExpr 0x137808af0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x137808a78 <col:5> 'int ()' Function 0x1378089c0 'bpf_jit_binary_free' 'int ()'
    |   |   |   `-ImplicitCastExpr 0x137808b30 <col:25> 'struct bpf_binary_header *' contains-errors <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x137808a98 <col:25> 'struct bpf_binary_header *' contains-errors lvalue Var 0x1360083b8 'header' 'struct bpf_binary_header *'
    |   |   `-GotoStmt 0x137808bb8 <line:34:4, col:9> 'out' 0x137808b68
    |   |-IfStmt 0x137808f98 <line:36:3, line:43:3>
    |   | |-RecoveryExpr 0x137808c28 <line:36:7> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x137808f78 <col:14, line:43:3>
    |   |   |-IfStmt 0x137808f50 <line:37:4, line:41:4>
    |   |   | |-BinaryOperator 0x137808cb8 <line:37:8, col:19> 'int' '!='
    |   |   | | |-ImplicitCastExpr 0x137808c88 <col:8> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x137808c48 <col:8> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |   |   | | `-ImplicitCastExpr 0x137808ca0 <col:19> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x137808c68 <col:19> 'int' lvalue Var 0x136008538 'oldproglen' 'int'
    |   |   | `-CompoundStmt 0x137808f30 <col:31, line:41:4>
    |   |   |   |-CallExpr 0x137808e98 <line:38:5, line:39:31> 'int'
    |   |   |   | |-ImplicitCastExpr 0x137808e80 <line:38:5> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | | `-DeclRefExpr 0x137808db8 <col:5> 'int ()' Function 0x137808d00 'pr_err' 'int ()'
    |   |   |   | |-ImplicitCastExpr 0x137808ed0 <col:12> 'char *' <ArrayToPointerDecay>
    |   |   |   | | `-StringLiteral 0x137808e20 <col:12> 'char[4]' lvalue "STR"
    |   |   |   | |-ImplicitCastExpr 0x137808ee8 <line:39:12> 'int' <LValueToRValue>
    |   |   |   | | `-DeclRefExpr 0x137808e40 <col:12> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |   |   |   | `-ImplicitCastExpr 0x137808f00 <col:21> 'int' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x137808e60 <col:21> 'int' lvalue Var 0x136008538 'oldproglen' 'int'
    |   |   |   `-GotoStmt 0x137808f18 <line:40:5, col:10> 'out' 0x137808b68
    |   |   `-BreakStmt 0x137808f70 <line:42:4>
    |   |-IfStmt 0x13780a5c0 <line:44:3, line:49:3>
    |   | |-BinaryOperator 0x137809028 <line:44:7, col:18> 'int' '=='
    |   | | |-ImplicitCastExpr 0x137808ff8 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x137808fb8 <col:7> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |   | | `-ImplicitCastExpr 0x137809010 <col:18> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x137808fd8 <col:18> 'int' lvalue Var 0x136008538 'oldproglen' 'int'
    |   | `-CompoundStmt 0x13780a5a0 <col:30, line:49:3>
    |   |   |-BinaryOperator 0x13780a4f8 <line:45:4, line:46:29> 'struct bpf_binary_header *' contains-errors '='
    |   |   | |-DeclRefExpr 0x137809048 <line:45:4> 'struct bpf_binary_header *' contains-errors lvalue Var 0x1360083b8 'header' 'struct bpf_binary_header *'
    |   |   | `-CallExpr 0x13780a4b8 <col:13, line:46:29> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x137809148 <line:45:13> 'int ()' Function 0x137809090 'bpf_jit_binary_alloc' 'int ()'
    |   |   |   |-DeclRefExpr 0x137809168 <col:34> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |   |   |   |-UnaryOperator 0x13780a480 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |   | `-RecoveryExpr 0x13780a460 <col:44> '<dependent type>' contains-errors lvalue
    |   |   |   |-IntegerLiteral 0x1378091b8 <line:46:13> 'int' 1
    |   |   |   `-RecoveryExpr 0x13780a498 <col:16> '<dependent type>' contains-errors lvalue
    |   |   `-IfStmt 0x13780a580 <line:47:4, line:48:10>
    |   |     |-UnaryOperator 0x13780a550 <line:47:8, col:9> 'int' contains-errors prefix '!' cannot overflow
    |   |     | `-ImplicitCastExpr 0x13780a538 <col:9> 'struct bpf_binary_header *' contains-errors <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x13780a518 <col:9> 'struct bpf_binary_header *' contains-errors lvalue Var 0x1360083b8 'header' 'struct bpf_binary_header *'
    |   |     `-GotoStmt 0x13780a568 <line:48:5, col:10> 'out' 0x137808b68
    |   `-BinaryOperator 0x13780a638 <line:50:3, col:16> 'int' '='
    |     |-DeclRefExpr 0x13780a5e0 <col:3> 'int' lvalue Var 0x136008538 'oldproglen' 'int'
    |     `-ImplicitCastExpr 0x13780a620 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x13780a600 <col:16> 'int' lvalue Var 0x1360084b8 'proglen' 'int'
    |-IfStmt 0x13780ace8 <line:56:2, line:61:2>
    | |-RecoveryExpr 0x13780a8a8 <line:56:6> '_Bool' contains-errors
    | `-CompoundStmt 0x13780acd0 <col:13, line:61:2>
    |   `-CallExpr 0x13780abe0 <line:58:3, col:53> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13780aae8 <col:3> 'int ()' Function 0x13780aa30 'set_memory_ro' 'int ()'
    |     |-CStyleCastExpr 0x13780ab58 <col:17, col:32> 'unsigned long' contains-errors <PointerToIntegral>
    |     | `-ImplicitCastExpr 0x13780ab40 <col:32> 'struct bpf_binary_header *' contains-errors <LValueToRValue> part_of_explicit_cast
    |     |   `-DeclRefExpr 0x13780ab08 <col:32> 'struct bpf_binary_header *' contains-errors lvalue Var 0x1360083b8 'header' 'struct bpf_binary_header *'
    |     `-RecoveryExpr 0x13780abb8 <col:40, col:48> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13780ab80 <col:40> 'struct bpf_binary_header *' contains-errors lvalue Var 0x1360083b8 'header' 'struct bpf_binary_header *'
    `-LabelStmt 0x13780ae80 <line:62:1, line:63:13> 'out'
      `-CallExpr 0x13780ae40 <col:2, col:13> 'int'
        |-ImplicitCastExpr 0x13780ae28 <col:2> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x13780ade8 <col:2> 'int ()' Function 0x13780ad30 'kfree' 'int ()'
        `-ImplicitCastExpr 0x13780ae68 <col:8> 'int *' <LValueToRValue>
          `-DeclRefExpr 0x13780ae08 <col:8> 'int *' lvalue Var 0x136008838 'addrs' 'int *'
