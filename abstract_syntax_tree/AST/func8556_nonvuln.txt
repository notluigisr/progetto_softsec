TranslationUnitDecl 0x122055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1220564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122055bd0 '__int128'
|-TypedefDecl 0x122056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122055bf0 'unsigned __int128'
|-TypedefDecl 0x12280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12280bc00 'struct __NSConstantString_tag'
|   `-Record 0x122056580 '__NSConstantString_tag'
|-TypedefDecl 0x12280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122055d90 '__SVInt8_t'
|-TypedefDecl 0x12280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122055db0 '__SVInt16_t'
|-TypedefDecl 0x12280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122055dd0 '__SVInt32_t'
|-TypedefDecl 0x12280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122055df0 '__SVInt64_t'
|-TypedefDecl 0x12280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122055e10 '__SVUint8_t'
|-TypedefDecl 0x12280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122055e30 '__SVUint16_t'
|-TypedefDecl 0x12280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122055e50 '__SVUint32_t'
|-TypedefDecl 0x12280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122055e70 '__SVUint64_t'
|-TypedefDecl 0x12280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122055e90 '__SVFloat16_t'
|-TypedefDecl 0x12280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1220560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1220560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1220560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1220561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1220561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1220561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1220562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1220562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1220562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122056390 '__SVBool_t'
|-TypedefDecl 0x12280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1220563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1220563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1220563f0 '__SVCount_t'
|-TypedefDecl 0x12280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-TypedefDecl 0x12280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-FunctionDecl 0x12280de88 <dataset_diviso_filec/func8556_nonvuln.c:1:1, line:41:1> line:1:1 invalid file_completion_cb 'int (const char *, int *)'
| |-ParmVarDecl 0x12280dcd8 <col:21, col:33> col:33 used buf 'const char *'
| |-ParmVarDecl 0x12280dda8 <col:38, col:60> col:60 invalid lc 'int *'
| `-CompoundStmt 0x12380f260 <line:2:1, line:41:1>
|   |-DeclStmt 0x12280e148 <line:4:2, col:19>
|   | |-RecordDecl 0x12280df58 <col:2, col:9> col:9 struct dirent
|   | `-VarDecl 0x12280e0c8 <col:2, col:17> col:17 used dp 'struct dirent *'
|   |-DeclStmt 0x12280e388 <line:5:2, col:35>
|   | |-VarDecl 0x12280e178 <col:2, col:8> col:8 used basec 'char *'
|   | |-VarDecl 0x12280e1f8 <col:2, col:16> col:16 used basen 'char *'
|   | |-VarDecl 0x12280e278 <col:2, col:24> col:24 used dirc 'char *'
|   | `-VarDecl 0x12280e2f8 <col:2, col:31> col:31 used dirn 'char *'
|   |-DeclStmt 0x122122700 <line:6:2, col:21>
|   | |-VarDecl 0x122122600 <col:2, col:6> col:6 used baselen 'int'
|   | `-VarDecl 0x122122680 <col:2, col:15> col:15 used dirlen 'int'
|   |-DeclStmt 0x122122798 <line:7:2, col:16>
|   | `-VarDecl 0x122122730 <col:2, col:8> col:8 used fullpath 'char *'
|   |-DeclStmt 0x122122d48 <line:8:2, col:22>
|   | |-RecordDecl 0x1221227b0 <col:2, col:9> col:9 struct stat
|   | `-VarDecl 0x1221228a8 <col:2, col:14> col:14 invalid filestat 'struct stat'
|   |-BinaryOperator 0x122123008 <line:10:2, col:20> 'char *' '='
|   | |-DeclRefExpr 0x122122d60 <col:2> 'char *' lvalue Var 0x12280e178 'basec' 'char *'
|   | `-CallExpr 0x122122fc8 <col:10, col:20> 'char *'
|   |   |-ImplicitCastExpr 0x122122fb0 <col:10> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x122122f28 <col:10> 'char *(const char *)' Function 0x122122db8 'strdup' 'char *(const char *)'
|   |   `-ImplicitCastExpr 0x122122ff0 <col:17> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x122122f48 <col:17> 'const char *' lvalue ParmVar 0x12280dcd8 'buf' 'const char *'
|   |-BinaryOperator 0x1221230f8 <line:11:2, col:19> 'char *' '='
|   | |-DeclRefExpr 0x122123028 <col:2> 'char *' lvalue Var 0x12280e278 'dirc' 'char *'
|   | `-CallExpr 0x1221230b8 <col:9, col:19> 'char *'
|   |   |-ImplicitCastExpr 0x1221230a0 <col:9> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x122123048 <col:9> 'char *(const char *)' Function 0x122122db8 'strdup' 'char *(const char *)'
|   |   `-ImplicitCastExpr 0x1221230e0 <col:16> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x122123068 <col:16> 'const char *' lvalue ParmVar 0x12280dcd8 'buf' 'const char *'
|   |-BinaryOperator 0x122123370 <line:12:2, col:21> 'char *' '='
|   | |-DeclRefExpr 0x122123118 <col:2> 'char *' lvalue Var 0x12280e2f8 'dirn' 'char *'
|   | `-ImplicitCastExpr 0x122123358 <col:9, col:21> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x122123318 <col:9, col:21> 'int'
|   |     |-ImplicitCastExpr 0x122123300 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x122123290 <col:9> 'int ()' Function 0x1221231d8 'dirname' 'int ()'
|   |     `-ImplicitCastExpr 0x122123340 <col:17> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1221232b0 <col:17> 'char *' lvalue Var 0x12280e278 'dirc' 'char *'
|   |-BinaryOperator 0x122827470 <line:13:2, col:22> 'int' '='
|   | |-DeclRefExpr 0x122123390 <col:2> 'int' lvalue Var 0x122122680 'dirlen' 'int'
|   | `-ImplicitCastExpr 0x122827458 <col:11, col:22> 'int' <IntegralCast>
|   |   `-CallExpr 0x122827400 <col:11, col:22> 'unsigned long'
|   |     |-ImplicitCastExpr 0x1221235e0 <col:11> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x122123558 <col:11> 'unsigned long (const char *)' Function 0x1221233e8 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x122827440 <col:18> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x122827428 <col:18> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x122123578 <col:18> 'char *' lvalue Var 0x12280e2f8 'dirn' 'char *'
|   |-BinaryOperator 0x122827640 <line:14:2, col:24> 'char *' '='
|   | |-DeclRefExpr 0x122827490 <col:2> 'char *' lvalue Var 0x12280e1f8 'basen' 'char *'
|   | `-ImplicitCastExpr 0x122827628 <col:10, col:24> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1228275e8 <col:10, col:24> 'int'
|   |     |-ImplicitCastExpr 0x1228275d0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x122827590 <col:10> 'int ()' Function 0x1228274d8 'basename' 'int ()'
|   |     `-ImplicitCastExpr 0x122827610 <col:19> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1228275b0 <col:19> 'char *' lvalue Var 0x12280e178 'basec' 'char *'
|   |-BinaryOperator 0x122827760 <line:15:2, col:24> 'int' '='
|   | |-DeclRefExpr 0x122827660 <col:2> 'int' lvalue Var 0x122122600 'baselen' 'int'
|   | `-ImplicitCastExpr 0x122827748 <col:12, col:24> 'int' <IntegralCast>
|   |   `-CallExpr 0x1228276f0 <col:12, col:24> 'unsigned long'
|   |     |-ImplicitCastExpr 0x1228276d8 <col:12> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x122827680 <col:12> 'unsigned long (const char *)' Function 0x1221233e8 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x122827730 <col:19> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x122827718 <col:19> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1228276a0 <col:19> 'char *' lvalue Var 0x12280e1f8 'basen' 'char *'
|   |-BinaryOperator 0x122827b08 <line:16:2, col:21> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x122827a90 <col:2> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x122827ac8 <col:9, col:21> 'int'
|   |   |-ImplicitCastExpr 0x122827ab0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x122827878 <col:9> 'int ()' Function 0x1228277c0 'opendir' 'int ()'
|   |   `-ImplicitCastExpr 0x122827af0 <col:17> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x122827898 <col:17> 'char *' lvalue Var 0x12280e2f8 'dirn' 'char *'
|   |-IfStmt 0x12380f0b0 <line:18:2, line:38:2>
|   | |-RecoveryExpr 0x122827b80 <line:18:6> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12380f098 <col:12, line:38:2>
|   |   `-WhileStmt 0x12380ef78 <line:19:3, line:35:3>
|   |     |-RecoveryExpr 0x122827e98 <line:19:10, col:34> '_Bool' contains-errors
|   |     `-CompoundStmt 0x12380ef60 <col:40, line:35:3>
|   |       `-IfStmt 0x12380ef40 <line:20:4, line:34:4>
|   |         |-BinaryOperator 0x1228282b8 <line:20:8, col:47> 'int' contains-errors '=='
|   |         | |-CallExpr 0x122828260 <col:8, col:42> '<dependent type>' contains-errors
|   |         | | |-DeclRefExpr 0x122828158 <col:8> 'int (const char *, const char *, unsigned long)' Function 0x122827f08 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |         | | |-DeclRefExpr 0x122828178 <col:16> 'char *' lvalue Var 0x12280e1f8 'basen' 'char *'
|   |         | | |-RecoveryExpr 0x1228281d0 <col:23, col:27> '<dependent type>' contains-errors lvalue
|   |         | | | `-DeclRefExpr 0x122828198 <col:23> 'struct dirent *' lvalue Var 0x12280e0c8 'dp' 'struct dirent *'
|   |         | | `-DeclRefExpr 0x1228281f8 <col:35> 'int' lvalue Var 0x122122600 'baselen' 'int'
|   |         | `-IntegerLiteral 0x122828298 <col:47> 'int' 0
|   |         `-CompoundStmt 0x12380ef00 <col:50, line:34:4>
|   |           |-BinaryOperator 0x123808ac0 <line:22:5, col:63> 'char *' contains-errors '='
|   |           | |-DeclRefExpr 0x1228282d8 <col:5> 'char *' lvalue Var 0x122122730 'fullpath' 'char *'
|   |           | `-CStyleCastExpr 0x123808a98 <col:16, col:63> 'char *' contains-errors <Dependent>
|   |           |   `-CallExpr 0x123808a58 <col:25, col:63> '<dependent type>' contains-errors
|   |           |     |-DeclRefExpr 0x1238088f8 <col:25> 'void *(unsigned long)' Function 0x122828338 'malloc' 'void *(unsigned long)'
|   |           |     `-BinaryOperator 0x123808a38 <col:32, col:62> '<dependent type>' contains-errors '+'
|   |           |       |-BinaryOperator 0x1238089f8 <col:32, col:53> '<dependent type>' contains-errors '+'
|   |           |       | |-CallExpr 0x1238089b0 <col:32, col:49> '<dependent type>' contains-errors
|   |           |       | | |-DeclRefExpr 0x123808918 <col:32> 'unsigned long (const char *)' Function 0x1221233e8 'strlen' 'unsigned long (const char *)'
|   |           |       | | `-RecoveryExpr 0x123808970 <col:39, col:43> '<dependent type>' contains-errors lvalue
|   |           |       | |   `-DeclRefExpr 0x123808938 <col:39> 'struct dirent *' lvalue Var 0x12280e0c8 'dp' 'struct dirent *'
|   |           |       | `-DeclRefExpr 0x1238089d8 <col:53> 'int' lvalue Var 0x122122680 'dirlen' 'int'
|   |           |       `-IntegerLiteral 0x123808a18 <col:62> 'int' 3
|   |           |-CallExpr 0x123808dd8 <line:23:5, col:26> 'char *'
|   |           | |-ImplicitCastExpr 0x123808dc0 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x123808d00 <col:5> 'char *(char *, const char *)' Function 0x123808b20 'strcpy' 'char *(char *, const char *)'
|   |           | |-ImplicitCastExpr 0x123808e08 <col:12> 'char *' <LValueToRValue>
|   |           | | `-DeclRefExpr 0x123808d20 <col:12> 'char *' lvalue Var 0x122122730 'fullpath' 'char *'
|   |           | `-ImplicitCastExpr 0x123808e38 <col:22> 'const char *' <NoOp>
|   |           |   `-ImplicitCastExpr 0x123808e20 <col:22> 'char *' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x123808d40 <col:22> 'char *' lvalue Var 0x12280e2f8 'dirn' 'char *'
|   |           |-IfStmt 0x1238092d0 <line:24:5, line:25:28>
|   |           | |-BinaryOperator 0x123808f68 <line:24:9, col:31> 'int' '!='
|   |           | | |-ImplicitCastExpr 0x123808f50 <col:9, col:26> 'int' <IntegralCast>
|   |           | | | `-ImplicitCastExpr 0x123808f38 <col:9, col:26> 'char' <LValueToRValue>
|   |           | | |   `-ArraySubscriptExpr 0x123808f00 <col:9, col:26> 'char' lvalue
|   |           | | |     |-ImplicitCastExpr 0x123808ee8 <col:9> 'char *' <LValueToRValue>
|   |           | | |     | `-DeclRefExpr 0x123808e50 <col:9> 'char *' lvalue Var 0x122122730 'fullpath' 'char *'
|   |           | | |     `-BinaryOperator 0x123808ec8 <col:18, col:25> 'int' '-'
|   |           | | |       |-ImplicitCastExpr 0x123808eb0 <col:18> 'int' <LValueToRValue>
|   |           | | |       | `-DeclRefExpr 0x123808e70 <col:18> 'int' lvalue Var 0x122122680 'dirlen' 'int'
|   |           | | |       `-IntegerLiteral 0x123808e90 <col:25> 'int' 1
|   |           | | `-CharacterLiteral 0x123808f20 <col:31> 'int' 47
|   |           | `-CallExpr 0x123809258 <line:25:6, col:28> 'char *'
|   |           |   |-ImplicitCastExpr 0x123809240 <col:6> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |           |   | `-DeclRefExpr 0x123809168 <col:6> 'char *(char *, const char *)' Function 0x123808f88 'strcat' 'char *(char *, const char *)'
|   |           |   |-ImplicitCastExpr 0x123809288 <col:13> 'char *' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x123809188 <col:13> 'char *' lvalue Var 0x122122730 'fullpath' 'char *'
|   |           |   `-ImplicitCastExpr 0x1238092b8 <col:23> 'const char *' <NoOp>
|   |           |     `-ImplicitCastExpr 0x1238092a0 <col:23> 'char *' <ArrayToPointerDecay>
|   |           |       `-StringLiteral 0x1238091f0 <col:23> 'char[4]' lvalue "STR"
|   |           |-CallExpr 0x1238093c0 <line:26:5, col:32> '<dependent type>' contains-errors
|   |           | |-DeclRefExpr 0x1238092f0 <col:5> 'char *(char *, const char *)' Function 0x123808f88 'strcat' 'char *(char *, const char *)'
|   |           | |-DeclRefExpr 0x123809310 <col:12> 'char *' lvalue Var 0x122122730 'fullpath' 'char *'
|   |           | `-RecoveryExpr 0x123809368 <col:22, col:26> '<dependent type>' contains-errors lvalue
|   |           |   `-DeclRefExpr 0x123809330 <col:22> 'struct dirent *' lvalue Var 0x12280e0c8 'dp' 'struct dirent *'
|   |           |-IfStmt 0x12380ec40 <line:27:5, line:32:5>
|   |           | |-BinaryOperator 0x123809598 <line:27:9, col:38> 'int' contains-errors '=='
|   |           | | |-CallExpr 0x123809548 <col:9, col:33> '<dependent type>' contains-errors
|   |           | | | |-DeclRefExpr 0x1238094d0 <col:9> 'int ()' Function 0x123809418 'stat' 'int ()'
|   |           | | | |-DeclRefExpr 0x1238094f0 <col:14> 'char *' lvalue Var 0x122122730 'fullpath' 'char *'
|   |           | | | `-UnaryOperator 0x123809530 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |           | | |   `-RecoveryExpr 0x123809510 <col:25> '<dependent type>' contains-errors lvalue
|   |           | | `-IntegerLiteral 0x123809578 <col:38> 'int' 0
|   |           | `-CompoundStmt 0x12380ec20 <col:41, line:32:5>
|   |           |   |-IfStmt 0x12380ea90 <line:28:6, line:30:6>
|   |           |   | |-CallExpr 0x123809720 <line:28:10, col:34> '<dependent type>' contains-errors
|   |           |   | | |-DeclRefExpr 0x123809698 <col:10> 'int ()' Function 0x1238095e0 'S_ISDIR' 'int ()'
|   |           |   | | `-CXXDependentScopeMemberExpr 0x1238096d8 <col:18, col:27> '<dependent type>' contains-errors lvalue .st_mode
|   |           |   | |   `-RecoveryExpr 0x1238096b8 <col:18> '<dependent type>' contains-errors lvalue
|   |           |   | `-CompoundStmt 0x12380ea78 <col:37, line:30:6>
|   |           |   |   `-CallExpr 0x12380ea00 <line:29:7, col:29> 'char *'
|   |           |   |     |-ImplicitCastExpr 0x1238097d8 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |           |   |     | `-DeclRefExpr 0x123809748 <col:7> 'char *(char *, const char *)' Function 0x123808f88 'strcat' 'char *(char *, const char *)'
|   |           |   |     |-ImplicitCastExpr 0x12380ea30 <col:14> 'char *' <LValueToRValue>
|   |           |   |     | `-DeclRefExpr 0x123809768 <col:14> 'char *' lvalue Var 0x122122730 'fullpath' 'char *'
|   |           |   |     `-ImplicitCastExpr 0x12380ea60 <col:24> 'const char *' <NoOp>
|   |           |   |       `-ImplicitCastExpr 0x12380ea48 <col:24> 'char *' <ArrayToPointerDecay>
|   |           |   |         `-StringLiteral 0x123809788 <col:24> 'char[4]' lvalue "STR"
|   |           |   `-CallExpr 0x12380ebf0 <line:31:6, col:40> '<dependent type>' contains-errors
|   |           |     |-DeclRefExpr 0x12380eb90 <col:6> 'int ()' Function 0x12380ead8 'linenoiseAddCompletion' 'int ()'
|   |           |     |-RecoveryExpr 0x12380ebb0 <col:29> '<dependent type>' contains-errors lvalue
|   |           |     `-DeclRefExpr 0x12380ebd0 <col:32> 'char *' lvalue Var 0x122122730 'fullpath' 'char *'
|   |           `-CallExpr 0x12380eea8 <line:33:5, col:18> 'void'
|   |             |-ImplicitCastExpr 0x12380ee90 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x12380ee08 <col:5> 'void (void *)' Function 0x12380ec98 'free' 'void (void *)'
|   |             `-ImplicitCastExpr 0x12380eee8 <col:10> 'void *' <BitCast>
|   |               `-ImplicitCastExpr 0x12380eed0 <col:10> 'char *' <LValueToRValue>
|   |                 `-DeclRefExpr 0x12380ee28 <col:10> 'char *' lvalue Var 0x122122730 'fullpath' 'char *'
|   |-CallExpr 0x12380f140 <line:39:2, col:12> 'void'
|   | |-ImplicitCastExpr 0x12380f128 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12380f0d0 <col:2> 'void (void *)' Function 0x12380ec98 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x12380f180 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x12380f168 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12380f0f0 <col:7> 'char *' lvalue Var 0x12280e178 'basec' 'char *'
|   `-CallExpr 0x12380f208 <line:40:2, col:11> 'void'
|     |-ImplicitCastExpr 0x12380f1f0 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x12380f198 <col:2> 'void (void *)' Function 0x12380ec98 'free' 'void (void *)'
|     `-ImplicitCastExpr 0x12380f248 <col:7> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x12380f230 <col:7> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x12380f1b8 <col:7> 'char *' lvalue Var 0x12280e278 'dirc' 'char *'
|-FunctionDecl 0x122122db8 <line:10:10> col:10 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x122122eb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x122122e60 <<invalid sloc>> Implicit 950
|-FunctionDecl 0x1221233e8 <line:13:11> col:11 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1221234e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x122123490 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x122827f08 <line:20:8> col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x122828008 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x122828070 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1228280d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x122827fb0 <<invalid sloc>> Implicit 888
|-FunctionDecl 0x122828338 <line:22:25> col:25 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x123808858 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x123808800 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x1238088c8 <col:25> Implicit 1
|-FunctionDecl 0x123808b20 <line:23:5> col:5 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x123808c20 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x123808c88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x123808bc8 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x123808f88 <line:25:6> col:6 implicit used strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x123809088 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1238090f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x123809030 <<invalid sloc>> Implicit 889
`-FunctionDecl 0x12380ec98 <line:33:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12380ed98 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12380ed40 <<invalid sloc>> Implicit 873
