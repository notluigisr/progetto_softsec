TranslationUnitDecl 0x122855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122855bd0 '__int128'
|-TypedefDecl 0x122856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122855bf0 'unsigned __int128'
|-TypedefDecl 0x122926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x122926000 'struct __NSConstantString_tag'
|   `-Record 0x122856580 '__NSConstantString_tag'
|-TypedefDecl 0x122926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122855d90 '__SVInt8_t'
|-TypedefDecl 0x122926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122855db0 '__SVInt16_t'
|-TypedefDecl 0x122926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122855dd0 '__SVInt32_t'
|-TypedefDecl 0x1229263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122855df0 '__SVInt64_t'
|-TypedefDecl 0x122926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122855e10 '__SVUint8_t'
|-TypedefDecl 0x1229264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122855e30 '__SVUint16_t'
|-TypedefDecl 0x122926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122855e50 '__SVUint32_t'
|-TypedefDecl 0x122926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122855e70 '__SVUint64_t'
|-TypedefDecl 0x1229265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122855e90 '__SVFloat16_t'
|-TypedefDecl 0x122926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1229266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122855ed0 '__SVFloat64_t'
|-TypedefDecl 0x122926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x122926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1229267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x122926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1229268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x122926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x122926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1229269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x122926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x122926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x122926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x122926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x122926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x122926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122856090 '__clang_svint8x3_t'
|-TypedefDecl 0x122926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1228560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x122926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1228560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x122926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1228560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x122926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x122926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x122926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x122926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x122926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x122927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1228561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x122927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1228561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1229278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1228561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x122927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1229279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122856230 '__clang_svint16x4_t'
|-TypedefDecl 0x122927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122856250 '__clang_svint32x4_t'
|-TypedefDecl 0x122927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122856270 '__clang_svint64x4_t'
|-TypedefDecl 0x122927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x122927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x122927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x122927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x122927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x122927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x122927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x122927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x122927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122856390 '__SVBool_t'
|-TypedefDecl 0x122927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x122927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x122927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228563f0 '__SVCount_t'
|-TypedefDecl 0x122927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x122927fb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-TypedefDecl 0x122928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x122927fb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
`-FunctionDecl 0x122928430 <dataset_diviso_filec/func17534_nonvuln.c:1:1, line:20:1> line:1:13 invalid cirrus_invalidate_region 'void (int *, int, int, int, int)' static
  |-ParmVarDecl 0x122928128 <col:38, col:55> col:55 invalid s 'int *'
  |-ParmVarDecl 0x1229281a8 <col:58, col:62> col:62 used off_begin 'int'
  |-ParmVarDecl 0x122928228 <line:2:10, col:14> col:14 used off_pitch 'int'
  |-ParmVarDecl 0x1229282a8 <col:25, col:29> col:29 used bytesperline 'int'
  |-ParmVarDecl 0x122928328 <line:3:10, col:14> col:14 used lines 'int'
  `-CompoundStmt 0x122942248 <line:4:1, line:20:1>
    |-DeclStmt 0x122928580 <line:5:5, col:10>
    | `-VarDecl 0x122928518 <col:5, col:9> col:9 used y 'int'
    |-DeclStmt 0x122928618 <line:6:5, col:16>
    | `-VarDecl 0x1229285b0 <col:5, col:9> col:9 used off_cur 'int'
    |-DeclStmt 0x1229286b0 <line:7:5, col:20>
    | `-VarDecl 0x122928648 <col:5, col:9> col:9 used off_cur_end 'int'
    |-IfStmt 0x122941848 <line:9:5, line:11:5>
    | |-BinaryOperator 0x122928720 <line:9:9, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x122928708 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1229286c8 <col:9> 'int' lvalue ParmVar 0x122928228 'off_pitch' 'int'
    | | `-IntegerLiteral 0x1229286e8 <col:21> 'int' 0
    | `-CompoundStmt 0x122941830 <col:24, line:11:5>
    |   `-CompoundAssignOperator 0x122941800 <line:10:9, col:37> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x122928740 <col:9> 'int' lvalue ParmVar 0x1229281a8 'off_begin' 'int'
    |     `-BinaryOperator 0x1229287b8 <col:22, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x1229287a0 <col:22> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x122928760 <col:22> 'int' lvalue ParmVar 0x1229282a8 'bytesperline' 'int'
    |       `-IntegerLiteral 0x122928780 <col:37> 'int' 1
    `-ForStmt 0x122942210 <line:13:5, line:19:5>
      |-BinaryOperator 0x1229418a8 <line:13:10, col:14> 'int' '='
      | |-DeclRefExpr 0x122941868 <col:10> 'int' lvalue Var 0x122928518 'y' 'int'
      | `-IntegerLiteral 0x122941888 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x122941938 <col:17, col:21> 'int' '<'
      | |-ImplicitCastExpr 0x122941908 <col:17> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1229418c8 <col:17> 'int' lvalue Var 0x122928518 'y' 'int'
      | `-ImplicitCastExpr 0x122941920 <col:21> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x1229418e8 <col:21> 'int' lvalue ParmVar 0x122928328 'lines' 'int'
      |-UnaryOperator 0x122941978 <col:28, col:29> 'int' postfix '++'
      | `-DeclRefExpr 0x122941958 <col:28> 'int' lvalue Var 0x122928518 'y' 'int'
      `-CompoundStmt 0x1229421d8 <col:33, line:19:5>
        |-BinaryOperator 0x1229419e8 <line:14:9, col:19> 'int' '='
        | |-DeclRefExpr 0x122941990 <col:9> 'int' lvalue Var 0x1229285b0 'off_cur' 'int'
        | `-ImplicitCastExpr 0x1229419d0 <col:19> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x1229419b0 <col:19> 'int' lvalue ParmVar 0x1229281a8 'off_begin' 'int'
        |-BinaryOperator 0x122941c00 <line:15:9, col:78> 'int' contains-errors '='
        | |-DeclRefExpr 0x122941a08 <col:9> 'int' lvalue Var 0x122928648 'off_cur_end' 'int'
        | `-BinaryOperator 0x122941be0 <col:23, col:78> '<dependent type>' contains-errors '+'
        |   |-ParenExpr 0x122941ba0 <col:23, col:74> '<dependent type>' contains-errors
        |   | `-BinaryOperator 0x122941b80 <col:24, col:58> '<dependent type>' contains-errors '&'
        |   |   |-ParenExpr 0x122941af8 <col:24, col:51> 'int'
        |   |   | `-BinaryOperator 0x122941ad8 <col:25, col:50> 'int' '-'
        |   |   |   |-BinaryOperator 0x122941a98 <col:25, col:35> 'int' '+'
        |   |   |   | |-ImplicitCastExpr 0x122941a68 <col:25> 'int' <LValueToRValue>
        |   |   |   | | `-DeclRefExpr 0x122941a28 <col:25> 'int' lvalue Var 0x1229285b0 'off_cur' 'int'
        |   |   |   | `-ImplicitCastExpr 0x122941a80 <col:35> 'int' <LValueToRValue>
        |   |   |   |   `-DeclRefExpr 0x122941a48 <col:35> 'int' lvalue ParmVar 0x1229282a8 'bytesperline' 'int'
        |   |   |   `-IntegerLiteral 0x122941ab8 <col:50> 'int' 1
        |   |   `-CXXDependentScopeMemberExpr 0x122941b38 <col:55, col:58> '<dependent type>' contains-errors lvalue ->cirrus_addr_mask
        |   |     `-RecoveryExpr 0x122941b18 <col:55> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x122941bc0 <col:78> 'int' 1
        |-CallExpr 0x122941e78 <line:16:9, col:38> 'int'
        | |-ImplicitCastExpr 0x122941e60 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x122941d80 <col:9> 'int ()' Function 0x122941cc8 'assert' 'int ()'
        | `-BinaryOperator 0x122941e10 <col:16, col:31> 'int' '>='
        |   |-ImplicitCastExpr 0x122941de0 <col:16> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x122941da0 <col:16> 'int' lvalue Var 0x122928648 'off_cur_end' 'int'
        |   `-ImplicitCastExpr 0x122941df8 <col:31> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x122941dc0 <col:31> 'int' lvalue Var 0x1229285b0 'off_cur' 'int'
        |-CallExpr 0x122942118 <line:17:9, col:77> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x122941f80 <col:9> 'int ()' Function 0x122941ec8 'memory_region_set_dirty' 'int ()'
        | |-UnaryOperator 0x122942050 <col:33, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-CXXDependentScopeMemberExpr 0x122942008 <col:34, col:41> '<dependent type>' contains-errors lvalue .vram
        | |   `-CXXDependentScopeMemberExpr 0x122941fc0 <col:34, col:37> '<dependent type>' contains-errors lvalue ->vga
        | |     `-RecoveryExpr 0x122941fa0 <col:34> '<dependent type>' contains-errors lvalue
        | |-DeclRefExpr 0x122942068 <col:47> 'int' lvalue Var 0x1229285b0 'off_cur' 'int'
        | `-BinaryOperator 0x1229420f8 <col:56, col:70> 'int' '-'
        |   |-ImplicitCastExpr 0x1229420c8 <col:56> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x122942088 <col:56> 'int' lvalue Var 0x122928648 'off_cur_end' 'int'
        |   `-ImplicitCastExpr 0x1229420e0 <col:70> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x1229420a8 <col:70> 'int' lvalue Var 0x1229285b0 'off_cur' 'int'
        `-CompoundAssignOperator 0x1229421a8 <line:18:9, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
          |-DeclRefExpr 0x122942150 <col:9> 'int' lvalue ParmVar 0x1229281a8 'off_begin' 'int'
          `-ImplicitCastExpr 0x122942190 <col:22> 'int' <LValueToRValue>
            `-DeclRefExpr 0x122942170 <col:22> 'int' lvalue ParmVar 0x122928228 'off_pitch' 'int'
