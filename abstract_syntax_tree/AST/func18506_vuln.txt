TranslationUnitDecl 0x120855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1208564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120855bd0 '__int128'
|-TypedefDecl 0x120856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120855bf0 'unsigned __int128'
|-TypedefDecl 0x12100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12100bc00 'struct __NSConstantString_tag'
|   `-Record 0x120856580 '__NSConstantString_tag'
|-TypedefDecl 0x12100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120855d90 '__SVInt8_t'
|-TypedefDecl 0x12100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120855db0 '__SVInt16_t'
|-TypedefDecl 0x12100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120855dd0 '__SVInt32_t'
|-TypedefDecl 0x12100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120855df0 '__SVInt64_t'
|-TypedefDecl 0x12100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120855e10 '__SVUint8_t'
|-TypedefDecl 0x12100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120855e30 '__SVUint16_t'
|-TypedefDecl 0x12100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120855e50 '__SVUint32_t'
|-TypedefDecl 0x12100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120855e70 '__SVUint64_t'
|-TypedefDecl 0x12100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120855e90 '__SVFloat16_t'
|-TypedefDecl 0x12100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1208560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1208560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1208560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1208561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1208561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1208561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1208562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1208562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1208562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120856390 '__SVBool_t'
|-TypedefDecl 0x12100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1208563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1208563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1208563f0 '__SVCount_t'
|-TypedefDecl 0x12100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12100dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-TypedefDecl 0x12100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12100dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-FunctionDecl 0x12100ddc8 <dataset_diviso_filec/func18506_vuln.c:1:1, line:54:1> line:1:5 invalid socket_create 'int (int)'
| |-ParmVarDecl 0x12100dcf0 <col:19, col:28> col:28 invalid port 'int'
| `-CompoundStmt 0x12102c718 <line:2:1, line:54:1>
|   |-DeclStmt 0x12100df30 <line:3:2, col:14>
|   | `-VarDecl 0x12100de90 <col:2, col:13> col:6 used sfd 'int' cinit
|   |   `-UnaryOperator 0x12100df18 <col:12, col:13> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12100def8 <col:13> 'int' 1
|   |-DeclStmt 0x12100dfe8 <line:4:2, col:13>
|   | `-VarDecl 0x12100df60 <col:2, col:12> col:6 used yes 'int' cinit
|   |   `-IntegerLiteral 0x12100dfc8 <col:12> 'int' 1
|   |-DeclStmt 0x1210275b8 <line:15:2, col:26>
|   | |-RecordDecl 0x12100e000 <col:2, col:9> col:9 struct sockaddr_in
|   | `-VarDecl 0x12100e0f8 <col:2, col:21> col:21 referenced invalid saddr 'struct sockaddr_in'
|   |-IfStmt 0x121027aa0 <line:17:2, line:20:2>
|   | |-RecoveryExpr 0x121027830 <line:17:6, col:58> '_Bool' contains-errors
|   | `-CompoundStmt 0x121027a80 <col:61, line:20:2>
|   |   |-CallExpr 0x1210279f8 <line:18:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x1210279e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x121027930 <col:3> 'int ()' Function 0x121027878 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x121027a20 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x121027990 <col:10> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x121027a70 <line:19:3, col:11>
|   |     `-UnaryOperator 0x121027a58 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x121027a38 <col:11> 'int' 1
|   |-IfStmt 0x121028130 <line:22:2, line:26:2>
|   | |-BinaryOperator 0x121027e90 <line:22:6, col:78> 'int' contains-errors '=='
|   | | |-CallExpr 0x121027e48 <col:6, col:72> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x121027ba0 <col:6> 'int ()' Function 0x121027ae8 'setsockopt' 'int ()'
|   | | | |-DeclRefExpr 0x121027bc0 <col:17> 'int' lvalue Var 0x12100de90 'sfd' 'int'
|   | | | |-RecoveryExpr 0x121027d90 <col:22> '<dependent type>' contains-errors lvalue
|   | | | |-RecoveryExpr 0x121027db0 <col:34> '<dependent type>' contains-errors lvalue
|   | | | |-CStyleCastExpr 0x121027de8 <col:48, col:56> 'void *' <BitCast>
|   | | | | `-UnaryOperator 0x121027c60 <col:55, col:56> 'int *' prefix '&' cannot overflow
|   | | | |   `-DeclRefExpr 0x121027c10 <col:56> 'int' lvalue Var 0x12100df60 'yes' 'int'
|   | | | `-UnaryExprOrTypeTraitExpr 0x121027e28 <col:61, col:71> 'unsigned long' sizeof 'int'
|   | | `-UnaryOperator 0x121027d58 <col:77, col:78> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x121027d38 <col:78> 'int' 1
|   | `-CompoundStmt 0x121028108 <col:81, line:26:2>
|   |   |-CallExpr 0x121027f08 <line:23:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x121027ef0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x121027eb0 <col:3> 'int ()' Function 0x121027878 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x121027f30 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x121027ed0 <col:10> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x121028080 <line:24:3, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x121028068 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x121028028 <col:3> 'int ()' Function 0x121027f70 'socket_close' 'int ()'
|   |   | `-ImplicitCastExpr 0x1210280a8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x121028048 <col:16> 'int' lvalue Var 0x12100de90 'sfd' 'int'
|   |   `-ReturnStmt 0x1210280f8 <line:25:3, col:11>
|   |     `-UnaryOperator 0x1210280e0 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1210280c0 <col:11> 'int' 1
|   |-CallExpr 0x12102b768 <line:36:2, col:42> 'void *' contains-errors
|   | |-ImplicitCastExpr 0x12102b750 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12102b600 <col:2> 'void *(void *, int, unsigned long)' Function 0x121028198 'memset' 'void *(void *, int, unsigned long)'
|   | |-CStyleCastExpr 0x12102b670 <col:9, col:19> 'void *' contains-errors <Dependent>
|   | | `-UnaryOperator 0x12102b640 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   `-RecoveryExpr 0x12102b620 <col:19> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x12102b698 <col:26> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x12102b6f8 <col:29, col:41> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x12102b6d8 <col:35, col:41> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x12102b6b8 <col:36> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12102b888 <line:37:2, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12102b7e8 <col:2, col:8> '<dependent type>' contains-errors lvalue .sin_family
|   | | `-RecoveryExpr 0x12102b7c0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12102b7a0 <col:2> 'struct sockaddr_in' lvalue Var 0x12100e0f8 'saddr' 'struct sockaddr_in'
|   | `-RecoveryExpr 0x12102b868 <col:21> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12102bb28 <line:38:2, col:42> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12102b938 <col:2, col:17> '<dependent type>' contains-errors lvalue .s_addr
|   | | `-CXXDependentScopeMemberExpr 0x12102b8f0 <col:2, col:8> '<dependent type>' contains-errors lvalue .sin_addr
|   | |   `-RecoveryExpr 0x12102b8c8 <col:2> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12102b8a8 <col:2> 'struct sockaddr_in' lvalue Var 0x12100e0f8 'saddr' 'struct sockaddr_in'
|   | `-CallExpr 0x12102bb00 <col:26, col:42> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12102ba60 <col:26> 'int ()' Function 0x12102b9a8 'htonl' 'int ()'
|   |   `-RecoveryExpr 0x12102bae0 <col:32> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12102bd20 <line:39:2, col:29> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12102bb90 <col:2, col:8> '<dependent type>' contains-errors lvalue .sin_port
|   | | `-RecoveryExpr 0x12102bb68 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12102bb48 <col:2> 'struct sockaddr_in' lvalue Var 0x12100e0f8 'saddr' 'struct sockaddr_in'
|   | `-CallExpr 0x12102bcf8 <col:19, col:29> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12102bcb8 <col:19> 'int ()' Function 0x12102bc00 'htons' 'int ()'
|   |   `-RecoveryExpr 0x12102bcd8 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12102c2d8 <line:41:2, line:45:2>
|   | |-BinaryOperator 0x12102c118 <line:41:6, col:61> 'int' contains-errors '>'
|   | | |-IntegerLiteral 0x12102bd40 <col:6> 'int' 0
|   | | `-CallExpr 0x12102c0c8 <col:10, col:61> 'int' contains-errors
|   | |   |-ImplicitCastExpr 0x12102c0b0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12102be40 <col:10> 'int ()' Function 0x12102bd88 'bind' 'int ()'
|   | |   |-ImplicitCastExpr 0x12102c100 <col:15> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x12102be60 <col:15> 'int' lvalue Var 0x12100de90 'sfd' 'int'
|   | |   |-CStyleCastExpr 0x12102c028 <col:20, col:41> 'struct sockaddr *' contains-errors <Dependent>
|   | |   | `-UnaryOperator 0x12102bf40 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   |   `-RecoveryExpr 0x12102bf20 <col:41> '<dependent type>' contains-errors lvalue
|   | |   `-UnaryExprOrTypeTraitExpr 0x12102c090 <col:48, col:60> 'unsigned long' contains-errors sizeof
|   | |     `-ParenExpr 0x12102c070 <col:54, col:60> '<dependent type>' contains-errors lvalue
|   | |       `-RecoveryExpr 0x12102c050 <col:55> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12102c2b0 <col:64, line:45:2>
|   |   |-CallExpr 0x12102c190 <line:42:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x12102c178 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12102c138 <col:3> 'int ()' Function 0x121027878 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x12102c1b8 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x12102c158 <col:10> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x12102c228 <line:43:3, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x12102c210 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12102c1d0 <col:3> 'int ()' Function 0x121027f70 'socket_close' 'int ()'
|   |   | `-ImplicitCastExpr 0x12102c250 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12102c1f0 <col:16> 'int' lvalue Var 0x12100de90 'sfd' 'int'
|   |   `-ReturnStmt 0x12102c2a0 <line:44:3, col:11>
|   |     `-UnaryOperator 0x12102c288 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x12102c268 <col:11> 'int' 1
|   |-IfStmt 0x12102c6b0 <line:47:2, line:51:2>
|   | |-BinaryOperator 0x12102c4d0 <line:47:6, col:25> 'int' '=='
|   | | |-CallExpr 0x12102c450 <col:6, col:19> 'int'
|   | | | |-ImplicitCastExpr 0x12102c438 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12102c3d8 <col:6> 'int ()' Function 0x12102c320 'listen' 'int ()'
|   | | | |-ImplicitCastExpr 0x12102c480 <col:13> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x12102c3f8 <col:13> 'int' lvalue Var 0x12100de90 'sfd' 'int'
|   | | | `-IntegerLiteral 0x12102c418 <col:18> 'int' 1
|   | | `-UnaryOperator 0x12102c4b8 <col:24, col:25> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x12102c498 <col:25> 'int' 1
|   | `-CompoundStmt 0x12102c688 <col:28, line:51:2>
|   |   |-CallExpr 0x12102c548 <line:48:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x12102c530 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12102c4f0 <col:3> 'int ()' Function 0x121027878 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x12102c570 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x12102c510 <col:10> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x12102c600 <line:49:3, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x12102c5c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12102c588 <col:3> 'int ()' Function 0x121027f70 'socket_close' 'int ()'
|   |   | `-ImplicitCastExpr 0x12102c628 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12102c5a8 <col:16> 'int' lvalue Var 0x12100de90 'sfd' 'int'
|   |   `-ReturnStmt 0x12102c678 <line:50:3, col:11>
|   |     `-UnaryOperator 0x12102c660 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x12102c640 <col:11> 'int' 1
|   `-ReturnStmt 0x12102c708 <line:53:2, col:9>
|     `-ImplicitCastExpr 0x12102c6f0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12102c6d0 <col:9> 'int' lvalue Var 0x12100de90 'sfd' 'int'
`-FunctionDecl 0x121028198 <line:36:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x121028298 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x121028300 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x121028368 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x121028240 <<invalid sloc>> Implicit 900
