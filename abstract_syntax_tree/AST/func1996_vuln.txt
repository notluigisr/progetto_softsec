TranslationUnitDecl 0x13f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f855bd0 '__int128'
|-TypedefDecl 0x13f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f855bf0 'unsigned __int128'
|-TypedefDecl 0x14800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14800bc00 'struct __NSConstantString_tag'
|   `-Record 0x13f856580 '__NSConstantString_tag'
|-TypedefDecl 0x14800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f855d90 '__SVInt8_t'
|-TypedefDecl 0x14800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f855db0 '__SVInt16_t'
|-TypedefDecl 0x14800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f855dd0 '__SVInt32_t'
|-TypedefDecl 0x14800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f855df0 '__SVInt64_t'
|-TypedefDecl 0x14800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f855e10 '__SVUint8_t'
|-TypedefDecl 0x14800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f855e30 '__SVUint16_t'
|-TypedefDecl 0x14800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f855e50 '__SVUint32_t'
|-TypedefDecl 0x14800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f855e70 '__SVUint64_t'
|-TypedefDecl 0x14800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f855e90 '__SVFloat16_t'
|-TypedefDecl 0x14800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f856390 '__SVBool_t'
|-TypedefDecl 0x14800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f8563f0 '__SVCount_t'
|-TypedefDecl 0x14800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14800dbb0 'char *'
|   `-BuiltinType 0x13f8556b0 'char'
|-TypedefDecl 0x14800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14800dbb0 'char *'
|   `-BuiltinType 0x13f8556b0 'char'
|-FunctionDecl 0x14800dee8 <dataset_diviso_filec/func1996_vuln.c:1:1, line:20:1> line:1:1 invalid file_printable 'int (char *, int, const char *)'
| |-ParmVarDecl 0x14800dcd8 <col:16, col:22> col:22 used buf 'char *'
| |-ParmVarDecl 0x14800dd70 <col:27, col:34> col:34 invalid bufsiz 'int'
| |-ParmVarDecl 0x14800ddf0 <col:42, col:54> col:54 used str 'const char *'
| `-CompoundStmt 0x148029e88 <line:2:1, line:20:1>
|   |-DeclStmt 0x14800e0c0 <line:3:2, col:18>
|   | |-VarDecl 0x14800dfc0 <col:2, col:8> col:8 used ptr 'char *'
|   | `-VarDecl 0x14800e040 <col:2, col:14> col:14 used eptr 'char *'
|   |-DeclStmt 0x14800e208 <line:4:2, col:53>
|   | `-VarDecl 0x14800e128 <col:2, col:50> col:23 used s 'const unsigned char *' cinit
|   |   `-CStyleCastExpr 0x14800e1e0 <col:27, col:50> 'const unsigned char *' <BitCast>
|   |     `-ImplicitCastExpr 0x14800e1c8 <col:50> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x14800e190 <col:50> 'const char *' lvalue ParmVar 0x14800ddf0 'str' 'const char *'
|   |-ForStmt 0x148029d50 <line:6:2, line:17:2>
|   | |-BinaryOperator 0x14800e378 <line:6:7, col:40> 'char *' contains-errors ','
|   | | |-BinaryOperator 0x14800e278 <col:7, col:13> 'char *' '='
|   | | | |-DeclRefExpr 0x14800e220 <col:7> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   | | | `-ImplicitCastExpr 0x14800e260 <col:13> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14800e240 <col:13> 'char *' lvalue ParmVar 0x14800dcd8 'buf' 'char *'
|   | | `-BinaryOperator 0x14800e358 <col:18, col:40> 'char *' contains-errors '='
|   | |   |-DeclRefExpr 0x14800e298 <col:18> 'char *' lvalue Var 0x14800e040 'eptr' 'char *'
|   | |   `-BinaryOperator 0x14800e338 <col:25, col:40> '<dependent type>' contains-errors '-'
|   | |     |-BinaryOperator 0x14800e2f8 <col:25, col:31> '<dependent type>' contains-errors '+'
|   | |     | |-DeclRefExpr 0x14800e2b8 <col:25> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   | |     | `-RecoveryExpr 0x14800e2d8 <col:31> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x14800e318 <col:40> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1480284b8 <col:43, col:58> 'int' '&&'
|   | | |-BinaryOperator 0x148028418 <col:43, col:49> 'int' '<'
|   | | | |-ImplicitCastExpr 0x14800e3d8 <col:43> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14800e398 <col:43> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   | | | `-ImplicitCastExpr 0x148028400 <col:49> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14800e3b8 <col:49> 'char *' lvalue Var 0x14800e040 'eptr' 'char *'
|   | | `-ImplicitCastExpr 0x1480284a0 <col:57, col:58> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x148028488 <col:57, col:58> 'unsigned char' <LValueToRValue>
|   | |     `-UnaryOperator 0x148028470 <col:57, col:58> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x148028458 <col:58> 'const unsigned char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x148028438 <col:58> 'const unsigned char *' lvalue Var 0x14800e128 's' 'const unsigned char *'
|   | |-UnaryOperator 0x1480284f8 <col:61, col:62> 'const unsigned char *' postfix '++'
|   | | `-DeclRefExpr 0x1480284d8 <col:61> 'const unsigned char *' lvalue Var 0x14800e128 's' 'const unsigned char *'
|   | `-CompoundStmt 0x148029d10 <col:66, line:17:2>
|   |   |-IfStmt 0x148028d58 <line:7:3, line:10:3>
|   |   | |-CallExpr 0x148028be8 <line:7:7, col:17> 'int'
|   |   | | |-ImplicitCastExpr 0x148028bd0 <col:7> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x148028b30 <col:7> 'int (int)' Function 0x148028970 'isprint' 'int (int)'
|   |   | | `-ImplicitCastExpr 0x148028c28 <col:15, col:16> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x148028c10 <col:15, col:16> 'unsigned char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x148028b88 <col:15, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x148028b70 <col:16> 'const unsigned char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x148028b50 <col:16> 'const unsigned char *' lvalue Var 0x14800e128 's' 'const unsigned char *'
|   |   | `-CompoundStmt 0x148028d38 <col:20, line:10:3>
|   |   |   |-BinaryOperator 0x148028d10 <line:8:4, col:14> 'char' '='
|   |   |   | |-UnaryOperator 0x148028c78 <col:4, col:8> 'char' lvalue prefix '*' cannot overflow
|   |   |   | | `-UnaryOperator 0x148028c60 <col:5, col:8> 'char *' postfix '++'
|   |   |   | |   `-DeclRefExpr 0x148028c40 <col:5> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   |   |   | `-ImplicitCastExpr 0x148028cf8 <col:13, col:14> 'char' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x148028ce0 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x148028cc8 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |       `-ImplicitCastExpr 0x148028cb0 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x148028c90 <col:14> 'const unsigned char *' lvalue Var 0x14800e128 's' 'const unsigned char *'
|   |   |   `-ContinueStmt 0x148028d30 <line:9:4>
|   |   |-IfStmt 0x148028e50 <line:11:3, line:12:4>
|   |   | |-BinaryOperator 0x148028e28 <line:11:7, col:21> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x148028e10 <col:7> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x148028d78 <col:7> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   |   | | `-BinaryOperator 0x148028df0 <col:14, col:21> 'char *' '+'
|   |   | |   |-ImplicitCastExpr 0x148028dd8 <col:14> 'char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x148028d98 <col:14> 'char *' lvalue Var 0x14800e040 'eptr' 'char *'
|   |   | |   `-IntegerLiteral 0x148028db8 <col:21> 'int' 4
|   |   | `-BreakStmt 0x148028e48 <line:12:4>
|   |   |-BinaryOperator 0x148028ef0 <line:13:3, col:12> 'char' '='
|   |   | |-UnaryOperator 0x148028ea8 <col:3, col:7> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x148028e90 <col:4, col:7> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x148028e70 <col:4> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   |   | `-ImplicitCastExpr 0x148028ed8 <col:12> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x148028ec0 <col:12> 'int' 92
|   |   |-BinaryOperator 0x1480290f0 <line:14:3, col:30> 'char' '='
|   |   | |-UnaryOperator 0x148028f48 <col:3, col:7> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x148028f30 <col:4, col:7> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x148028f10 <col:4> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   |   | `-ImplicitCastExpr 0x1480290d8 <col:12, col:30> 'char' <IntegralCast>
|   |   |   `-BinaryOperator 0x1480290b8 <col:12, col:30> 'int' '+'
|   |   |     |-ParenExpr 0x148029080 <col:12, col:26> 'int'
|   |   |     | `-BinaryOperator 0x148029060 <col:13, col:25> 'int' '&'
|   |   |     |   |-ParenExpr 0x148029020 <col:13, col:21> 'int'
|   |   |     |   | `-BinaryOperator 0x148029000 <col:14, col:20> 'int' '>>'
|   |   |     |   |   |-ImplicitCastExpr 0x148028fe8 <col:14, col:15> 'int' <IntegralCast>
|   |   |     |   |   | `-ImplicitCastExpr 0x148028fd0 <col:14, col:15> 'unsigned char' <LValueToRValue>
|   |   |     |   |   |   `-UnaryOperator 0x148028f98 <col:14, col:15> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |   |   |     `-ImplicitCastExpr 0x148028f80 <col:15> 'const unsigned char *' <LValueToRValue>
|   |   |     |   |   |       `-DeclRefExpr 0x148028f60 <col:15> 'const unsigned char *' lvalue Var 0x14800e128 's' 'const unsigned char *'
|   |   |     |   |   `-IntegerLiteral 0x148028fb0 <col:20> 'int' 6
|   |   |     |   `-IntegerLiteral 0x148029040 <col:25> 'int' 7
|   |   |     `-CharacterLiteral 0x1480290a0 <col:30> 'int' 48
|   |   |-BinaryOperator 0x1480292f0 <line:15:3, col:30> 'char' '='
|   |   | |-UnaryOperator 0x148029148 <col:3, col:7> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x148029130 <col:4, col:7> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x148029110 <col:4> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   |   | `-ImplicitCastExpr 0x1480292d8 <col:12, col:30> 'char' <IntegralCast>
|   |   |   `-BinaryOperator 0x1480292b8 <col:12, col:30> 'int' '+'
|   |   |     |-ParenExpr 0x148029280 <col:12, col:26> 'int'
|   |   |     | `-BinaryOperator 0x148029260 <col:13, col:25> 'int' '&'
|   |   |     |   |-ParenExpr 0x148029220 <col:13, col:21> 'int'
|   |   |     |   | `-BinaryOperator 0x148029200 <col:14, col:20> 'int' '>>'
|   |   |     |   |   |-ImplicitCastExpr 0x1480291e8 <col:14, col:15> 'int' <IntegralCast>
|   |   |     |   |   | `-ImplicitCastExpr 0x1480291d0 <col:14, col:15> 'unsigned char' <LValueToRValue>
|   |   |     |   |   |   `-UnaryOperator 0x148029198 <col:14, col:15> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |   |   |     `-ImplicitCastExpr 0x148029180 <col:15> 'const unsigned char *' <LValueToRValue>
|   |   |     |   |   |       `-DeclRefExpr 0x148029160 <col:15> 'const unsigned char *' lvalue Var 0x14800e128 's' 'const unsigned char *'
|   |   |     |   |   `-IntegerLiteral 0x1480291b0 <col:20> 'int' 3
|   |   |     |   `-IntegerLiteral 0x148029240 <col:25> 'int' 7
|   |   |     `-CharacterLiteral 0x1480292a0 <col:30> 'int' 48
|   |   `-BinaryOperator 0x148029cf0 <line:16:3, col:30> 'char' '='
|   |     |-UnaryOperator 0x148029348 <col:3, col:7> 'char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x148029330 <col:4, col:7> 'char *' postfix '++'
|   |     |   `-DeclRefExpr 0x148029310 <col:4> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   |     `-ImplicitCastExpr 0x148029cd8 <col:12, col:30> 'char' <IntegralCast>
|   |       `-BinaryOperator 0x148029cb8 <col:12, col:30> 'int' '+'
|   |         |-ParenExpr 0x148029c80 <col:12, col:26> 'int'
|   |         | `-BinaryOperator 0x148029c60 <col:13, col:25> 'int' '&'
|   |         |   |-ParenExpr 0x148029c20 <col:13, col:21> 'int'
|   |         |   | `-BinaryOperator 0x148029c00 <col:14, col:20> 'int' '>>'
|   |         |   |   |-ImplicitCastExpr 0x1480293e8 <col:14, col:15> 'int' <IntegralCast>
|   |         |   |   | `-ImplicitCastExpr 0x1480293d0 <col:14, col:15> 'unsigned char' <LValueToRValue>
|   |         |   |   |   `-UnaryOperator 0x148029398 <col:14, col:15> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         |   |   |     `-ImplicitCastExpr 0x148029380 <col:15> 'const unsigned char *' <LValueToRValue>
|   |         |   |   |       `-DeclRefExpr 0x148029360 <col:15> 'const unsigned char *' lvalue Var 0x14800e128 's' 'const unsigned char *'
|   |         |   |   `-IntegerLiteral 0x1480293b0 <col:20> 'int' 0
|   |         |   `-IntegerLiteral 0x148029c40 <col:25> 'int' 7
|   |         `-CharacterLiteral 0x148029ca0 <col:30> 'int' 48
|   |-BinaryOperator 0x148029e08 <line:18:2, col:9> 'char' '='
|   | |-UnaryOperator 0x148029dc0 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x148029da8 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x148029d88 <col:3> 'char *' lvalue Var 0x14800dfc0 'ptr' 'char *'
|   | `-ImplicitCastExpr 0x148029df0 <col:9> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x148029dd8 <col:9> 'int' 0
|   `-ReturnStmt 0x148029e78 <line:19:2, col:9>
|     `-ImplicitCastExpr 0x148029e60 <col:9> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x148029e48 <col:9> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x148029e28 <col:9> 'char *' lvalue ParmVar 0x14800dcd8 'buf' 'char *'
`-FunctionDecl 0x148028970 <line:7:7> col:7 implicit used isprint 'int (int)' extern
  |-ParmVarDecl 0x148028a70 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x148028a18 <<invalid sloc>> Implicit 927
  |-NoThrowAttr 0x148028ae0 <col:7> Implicit
  `-PureAttr 0x148028b08 <col:7> Implicit
