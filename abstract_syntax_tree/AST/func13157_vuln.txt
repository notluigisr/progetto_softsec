TranslationUnitDecl 0x150055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150055bd0 '__int128'
|-TypedefDecl 0x150056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150055bf0 'unsigned __int128'
|-TypedefDecl 0x15010d230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15010d000 'struct __NSConstantString_tag'
|   `-Record 0x150056580 '__NSConstantString_tag'
|-TypedefDecl 0x15010d298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150055d90 '__SVInt8_t'
|-TypedefDecl 0x15010d300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150055db0 '__SVInt16_t'
|-TypedefDecl 0x15010d368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150055dd0 '__SVInt32_t'
|-TypedefDecl 0x15010d3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150055df0 '__SVInt64_t'
|-TypedefDecl 0x15010d438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150055e10 '__SVUint8_t'
|-TypedefDecl 0x15010d4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150055e30 '__SVUint16_t'
|-TypedefDecl 0x15010d508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150055e50 '__SVUint32_t'
|-TypedefDecl 0x15010d570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150055e70 '__SVUint64_t'
|-TypedefDecl 0x15010d5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150055e90 '__SVFloat16_t'
|-TypedefDecl 0x15010d640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15010d6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15010d710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15010d778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15010d7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15010d848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15010d8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15010d918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15010d980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15010d9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15010da50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15010dab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15010db20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15010db88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15010dbf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15010dc58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15010dcc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15010dd28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1500560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15010dd90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1500560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15010ddf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15010de60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15010dec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15010df30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15010df98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15010e800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15010e868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1500561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15010e8d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1500561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15010e938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15010e9a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15010ea08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15010ea70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15010ead8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15010eb40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15010eba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1500562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15010ec10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1500562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15010ec78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15010ece0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15010ed48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15010edb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15010ee18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150056390 '__SVBool_t'
|-TypedefDecl 0x15010ee80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15010eee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1500563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15010ef50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1500563f0 '__SVCount_t'
|-TypedefDecl 0x15010eff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15010efb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-TypedefDecl 0x15010f068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15010efb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
`-FunctionDecl 0x1480212d8 <dataset_diviso_filec/func13157_vuln.c:1:1, line:24:1> line:1:1 invalid aodv_extension 'int (int *, const struct aodv_ext *, int)'
  |-ParmVarDecl 0x15010f128 <col:16, col:36> col:36 invalid ndo 'int *'
  |-ParmVarDecl 0x15010f718 <line:2:16, col:39> col:39 used ep 'const struct aodv_ext *'
  |-ParmVarDecl 0x15010f798 <col:43, col:49> col:49 invalid length 'int'
  `-CompoundStmt 0x1480252c8 <line:3:1, line:24:1>
    |-DeclStmt 0x148021588 <line:4:2, col:29>
    | |-RecordDecl 0x148021398 <col:8, col:15> col:15 struct aodv_hello
    | `-VarDecl 0x148021508 <col:2, col:27> col:27 used ah 'const struct aodv_hello *'
    |-SwitchStmt 0x148021618 <line:6:2, line:19:2>
    | |-ImplicitCastExpr 0x148021600 <line:6:10, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x1480215d8 <col:10, col:14> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1480215a0 <col:10> 'const struct aodv_ext *' lvalue ParmVar 0x15010f718 'ep' 'const struct aodv_ext *'
    | `-CompoundStmt 0x148022170 <col:20, line:19:2>
    |   |-BinaryOperator 0x1480217e0 <line:8:3, col:49> 'const struct aodv_hello *' '='
    |   | |-DeclRefExpr 0x148021658 <col:3> 'const struct aodv_hello *' lvalue Var 0x148021508 'ah' 'const struct aodv_hello *'
    |   | `-CStyleCastExpr 0x1480217b8 <col:8, col:49> 'const struct aodv_hello *' <BitCast>
    |   |   `-CStyleCastExpr 0x148021700 <col:35, col:49> 'const void *' <BitCast>
    |   |     `-ImplicitCastExpr 0x1480216e8 <col:49> 'const struct aodv_ext *' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x148021678 <col:49> 'const struct aodv_ext *' lvalue ParmVar 0x15010f718 'ep' 'const struct aodv_ext *'
    |   |-ImplicitCastExpr 0x148021a88 <line:9:3, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x148021a58 <col:3, col:16> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x148021960 <col:3> 'int ()' Function 0x1480218a8 'ND_TCHECK' 'int ()'
    |   |   `-UnaryOperator 0x1480219b8 <col:13, col:14> 'const struct aodv_hello' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x1480219a0 <col:14> 'const struct aodv_hello *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x148021980 <col:14> 'const struct aodv_hello *' lvalue Var 0x148021508 'ah' 'const struct aodv_hello *'
    |   |-IfStmt 0x148021b68 <line:10:3, line:11:9>
    |   | |-RecoveryExpr 0x148021ae0 <line:10:7, col:40> '_Bool' contains-errors
    |   | `-GotoStmt 0x148021b50 <line:11:4, col:9> 'trunc' 0x148021b00
    |   |-CallExpr 0x148021f50 <line:12:3, line:13:52> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x148021c68 <line:12:3> 'int ()' Function 0x148021bb0 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x148021f30 <col:12, line:13:51> 'unsigned long' contains-errors
    |   |   `-BinaryOperator 0x148021f10 <line:12:13, line:13:50> 'unsigned long' contains-errors ','
    |   |     |-BinaryOperator 0x148021d10 <line:12:13, col:18> 'char[4]' contains-errors ','
    |   |     | |-RecoveryExpr 0x148021c88 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x148021cf0 <col:18> 'char[4]' lvalue "STR"
    |   |     `-CStyleCastExpr 0x148021ee8 <line:13:7, col:50> 'unsigned long' contains-errors <Dependent>
    |   |       `-CallExpr 0x148021ea8 <col:22, col:50> '<dependent type>' contains-errors
    |   |         |-DeclRefExpr 0x148021e10 <col:22> 'int ()' Function 0x148021d58 'EXTRACT_32BITS' 'int ()'
    |   |         `-UnaryOperator 0x148021e90 <col:37, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |           `-RecoveryExpr 0x148021e68 <col:38, col:42> '<dependent type>' contains-errors lvalue
    |   |             `-DeclRefExpr 0x148021e30 <col:38> 'const struct aodv_hello *' lvalue Var 0x148021508 'ah' 'const struct aodv_hello *'
    |   |-BreakStmt 0x148021f78 <line:14:3>
    |   |-DefaultStmt 0x148022148 <line:16:2, line:17:46>
    |   | `-CallExpr 0x148022120 <col:3, col:46> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x148021f80 <col:3> 'int ()' Function 0x148021bb0 'ND_PRINT' 'int ()'
    |   |   `-ParenExpr 0x148022100 <col:12, col:45> '<dependent type>' contains-errors
    |   |     `-BinaryOperator 0x1480220e0 <col:13, col:39> '<dependent type>' contains-errors ','
    |   |       |-BinaryOperator 0x148022060 <col:13, col:29> '<dependent type>' contains-errors ','
    |   |       | |-BinaryOperator 0x148021fe0 <col:13, col:18> 'char[4]' contains-errors ','
    |   |       | | |-RecoveryExpr 0x148021fa0 <col:13> '<dependent type>' contains-errors lvalue
    |   |       | | `-StringLiteral 0x148021fc0 <col:18> 'char[4]' lvalue "STR"
    |   |       | `-RecoveryExpr 0x148022038 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |   |       |   `-DeclRefExpr 0x148022000 <col:25> 'const struct aodv_ext *' lvalue ParmVar 0x15010f718 'ep' 'const struct aodv_ext *'
    |   |       `-RecoveryExpr 0x1480220b8 <col:35, col:39> '<dependent type>' contains-errors lvalue
    |   |         `-DeclRefExpr 0x148022080 <col:35> 'const struct aodv_ext *' lvalue ParmVar 0x15010f718 'ep' 'const struct aodv_ext *'
    |   `-BreakStmt 0x148022168 <line:18:3>
    |-ReturnStmt 0x1480221b8 <line:20:2>
    `-LabelStmt 0x1480252a8 <line:22:1, line:23:23> 'trunc'
      `-CallExpr 0x148025280 <col:2, col:23> '<dependent type>' contains-errors
        |-DeclRefExpr 0x1480221c8 <col:2> 'int ()' Function 0x148021bb0 'ND_PRINT' 'int ()'
        `-ParenExpr 0x148025260 <col:11, col:22> 'char[4]' contains-errors
          `-BinaryOperator 0x148025240 <col:12, col:17> 'char[4]' contains-errors ','
            |-RecoveryExpr 0x148025200 <col:12> '<dependent type>' contains-errors lvalue
            `-StringLiteral 0x148025220 <col:17> 'char[4]' lvalue "STR"
