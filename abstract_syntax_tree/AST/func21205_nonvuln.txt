TranslationUnitDecl 0x15b813e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b814cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b8143d0 '__int128'
|-TypedefDecl 0x15b814d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b8143f0 'unsigned __int128'
|-TypedefDecl 0x15b8e5a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b8e5800 'struct __NSConstantString_tag'
|   `-Record 0x15b814d80 '__NSConstantString_tag'
|-TypedefDecl 0x15b8e5a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b814590 '__SVInt8_t'
|-TypedefDecl 0x15b8e5b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b8145b0 '__SVInt16_t'
|-TypedefDecl 0x15b8e5b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b8145d0 '__SVInt32_t'
|-TypedefDecl 0x15b8e5bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b8145f0 '__SVInt64_t'
|-TypedefDecl 0x15b8e5c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b814610 '__SVUint8_t'
|-TypedefDecl 0x15b8e5ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b814630 '__SVUint16_t'
|-TypedefDecl 0x15b8e5d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b814650 '__SVUint32_t'
|-TypedefDecl 0x15b8e5d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b814670 '__SVUint64_t'
|-TypedefDecl 0x15b8e5dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b814690 '__SVFloat16_t'
|-TypedefDecl 0x15b8e5e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b8146b0 '__SVFloat32_t'
|-TypedefDecl 0x15b8e5ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b8146d0 '__SVFloat64_t'
|-TypedefDecl 0x15b8e5f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b8146f0 '__SVBfloat16_t'
|-TypedefDecl 0x15b8e5f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b814710 '__clang_svint8x2_t'
|-TypedefDecl 0x15b8e5fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b814730 '__clang_svint16x2_t'
|-TypedefDecl 0x15b8e6048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b814750 '__clang_svint32x2_t'
|-TypedefDecl 0x15b8e60b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b814770 '__clang_svint64x2_t'
|-TypedefDecl 0x15b8e6118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b814790 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b8e6180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b8147b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b8e61e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b8147d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b8e6250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b8147f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b8e62b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b814810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b8e6320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b814830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b8e6388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b814850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b8e63f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b814870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b8e6458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b814890 '__clang_svint8x3_t'
|-TypedefDecl 0x15b8e64c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b8148b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b8e6528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b8148d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b8e6590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b8148f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b8e65f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b814910 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b8e6660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b814930 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b8e66c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b814950 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b8e6730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b814970 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b8e6798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b814990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b8e7000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b8149b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b8e7068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b8149d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b8e70d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b8149f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b8e7138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b814a10 '__clang_svint8x4_t'
|-TypedefDecl 0x15b8e71a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b814a30 '__clang_svint16x4_t'
|-TypedefDecl 0x15b8e7208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b814a50 '__clang_svint32x4_t'
|-TypedefDecl 0x15b8e7270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b814a70 '__clang_svint64x4_t'
|-TypedefDecl 0x15b8e72d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b814a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b8e7340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b814ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b8e73a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b814ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b8e7410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b814af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b8e7478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b814b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b8e74e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b814b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b8e7548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b814b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b8e75b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b814b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b8e7618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b814b90 '__SVBool_t'
|-TypedefDecl 0x15b8e7680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b814bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b8e76e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b814bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b8e7750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b814bf0 '__SVCount_t'
|-TypedefDecl 0x15b8e77f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b8e77b0 'char *'
|   `-BuiltinType 0x15b813eb0 'char'
|-TypedefDecl 0x15b8e7868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b8e77b0 'char *'
|   `-BuiltinType 0x15b813eb0 'char'
|-FunctionDecl 0x15b8e7a58 <dataset_diviso_filec/func21205_nonvuln.c:1:1, line:17:1> line:1:14 invalid ctime1 'char *(char *, int)' static
| |-ParmVarDecl 0x15b8e78d8 <col:21, col:27> col:27 used buf2 'char *'
| |-ParmVarDecl 0x15b8e7970 <col:33, col:40> col:40 invalid buf_size 'int'
| `-CompoundStmt 0x15b901c98 <line:2:1, line:17:1>
|   |-DeclStmt 0x15b8e7b90 <line:4:5, col:12>
|   | `-VarDecl 0x15b8e7b28 <col:5, col:11> col:11 used p 'char *'
|   |-BinaryOperator 0x15b8e7f58 <line:7:5, col:18> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x15b8e7d60 <col:5> 'char *' lvalue Var 0x15b8e7b28 'p' 'char *'
|   | `-CallExpr 0x15b8e7f30 <col:9, col:18> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b8e7e60 <col:9> 'int ()' Function 0x15b8e7da8 'ctime' 'int ()'
|   |   `-UnaryOperator 0x15b8e7f18 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x15b8e7ef8 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b901170 <line:8:5, line:11:5>
|   | |-BinaryOperator 0x15b901048 <line:8:9, col:17> 'int' '||'
|   | | |-UnaryOperator 0x15b8e7fb0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x15b8e7f98 <col:10> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x15b8e7f78 <col:10> 'char *' lvalue Var 0x15b8e7b28 'p' 'char *'
|   | | `-UnaryOperator 0x15b901030 <col:15, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x15b901018 <col:16, col:17> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x15b901000 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x15b8e7fe8 <col:17> 'char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x15b8e7fc8 <col:17> 'char *' lvalue Var 0x15b8e7b28 'p' 'char *'
|   | `-CompoundStmt 0x15b901150 <col:20, line:11:5>
|   |   |-BinaryOperator 0x15b9010e8 <line:9:9, col:17> 'char' '='
|   |   | |-UnaryOperator 0x15b9010a0 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x15b901088 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15b901068 <col:10> 'char *' lvalue ParmVar 0x15b8e78d8 'buf2' 'char *'
|   |   | `-ImplicitCastExpr 0x15b9010d0 <col:17> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x15b9010b8 <col:17> 'int' 0
|   |   `-ReturnStmt 0x15b901140 <line:10:9, col:16>
|   |     `-ImplicitCastExpr 0x15b901128 <col:16> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x15b901108 <col:16> 'char *' lvalue ParmVar 0x15b8e78d8 'buf2' 'char *'
|   |-CallExpr 0x15b9012f0 <line:12:5, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b901270 <col:5> 'int ()' Function 0x15b9011b8 'av_strlcpy' 'int ()'
|   | |-DeclRefExpr 0x15b901290 <col:16> 'char *' lvalue ParmVar 0x15b8e78d8 'buf2' 'char *'
|   | |-DeclRefExpr 0x15b9012b0 <col:22> 'char *' lvalue Var 0x15b8e7b28 'p' 'char *'
|   | `-RecoveryExpr 0x15b9012d0 <col:25> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15b901ab8 <line:13:5, col:31> 'char *' '='
|   | |-DeclRefExpr 0x15b901328 <col:5> 'char *' lvalue Var 0x15b8e7b28 'p' 'char *'
|   | `-BinaryOperator 0x15b901a98 <col:9, col:31> 'char *' '-'
|   |   |-BinaryOperator 0x15b901a58 <col:9, col:27> 'char *' '+'
|   |   | |-ImplicitCastExpr 0x15b901a40 <col:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15b901348 <col:9> 'char *' lvalue ParmVar 0x15b8e78d8 'buf2' 'char *'
|   |   | `-CallExpr 0x15b9019e8 <col:16, col:27> 'unsigned long'
|   |   |   |-ImplicitCastExpr 0x15b9019d0 <col:16> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x15b901940 <col:16> 'unsigned long (const char *)' Function 0x15b9017d0 'strlen' 'unsigned long (const char *)'
|   |   |   `-ImplicitCastExpr 0x15b901a28 <col:23> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x15b901a10 <col:23> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x15b901960 <col:23> 'char *' lvalue ParmVar 0x15b8e78d8 'buf2' 'char *'
|   |   `-IntegerLiteral 0x15b901a78 <col:31> 'int' 1
|   |-IfStmt 0x15b901c30 <line:14:5, line:15:14>
|   | |-BinaryOperator 0x15b901b70 <line:14:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x15b901b58 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x15b901b40 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x15b901b10 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x15b901af8 <col:10> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x15b901ad8 <col:10> 'char *' lvalue Var 0x15b8e7b28 'p' 'char *'
|   | | `-CharacterLiteral 0x15b901b28 <col:15> 'int' 10
|   | `-BinaryOperator 0x15b901c10 <line:15:9, col:14> 'char' '='
|   |   |-UnaryOperator 0x15b901bc8 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x15b901bb0 <col:10> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15b901b90 <col:10> 'char *' lvalue Var 0x15b8e7b28 'p' 'char *'
|   |   `-ImplicitCastExpr 0x15b901bf8 <col:14> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x15b901be0 <col:14> 'int' 0
|   `-ReturnStmt 0x15b901c88 <line:16:5, col:12>
|     `-ImplicitCastExpr 0x15b901c70 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x15b901c50 <col:12> 'char *' lvalue ParmVar 0x15b8e78d8 'buf2' 'char *'
`-FunctionDecl 0x15b9017d0 <line:13:16> col:16 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x15b9018d0 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15b901878 <<invalid sloc>> Implicit 902
