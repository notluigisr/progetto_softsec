TranslationUnitDecl 0x145055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1450564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145055bd0 '__int128'
|-TypedefDecl 0x145056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145055bf0 'unsigned __int128'
|-TypedefDecl 0x145126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x145126000 'struct __NSConstantString_tag'
|   `-Record 0x145056580 '__NSConstantString_tag'
|-TypedefDecl 0x145126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145055d90 '__SVInt8_t'
|-TypedefDecl 0x145126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145055db0 '__SVInt16_t'
|-TypedefDecl 0x145126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145055dd0 '__SVInt32_t'
|-TypedefDecl 0x1451263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145055df0 '__SVInt64_t'
|-TypedefDecl 0x145126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145055e10 '__SVUint8_t'
|-TypedefDecl 0x1451264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145055e30 '__SVUint16_t'
|-TypedefDecl 0x145126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145055e50 '__SVUint32_t'
|-TypedefDecl 0x145126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145055e70 '__SVUint64_t'
|-TypedefDecl 0x1451265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145055e90 '__SVFloat16_t'
|-TypedefDecl 0x145126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1451266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145055ed0 '__SVFloat64_t'
|-TypedefDecl 0x145126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x145126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1451267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x145126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1451268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x145126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x145126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1451269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x145126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x145126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x145126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x145126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x145126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x145126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145056090 '__clang_svint8x3_t'
|-TypedefDecl 0x145126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1450560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x145126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1450560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x145126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1450560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x145126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x145126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x145126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x145126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x145126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x145127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1450561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x145127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1450561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1451278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1450561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x145127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1451279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145056230 '__clang_svint16x4_t'
|-TypedefDecl 0x145127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145056250 '__clang_svint32x4_t'
|-TypedefDecl 0x145127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145056270 '__clang_svint64x4_t'
|-TypedefDecl 0x145127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x145127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1450562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x145127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1450562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x145127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1450562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x145127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x145127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x145127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x145127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x145127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145056390 '__SVBool_t'
|-TypedefDecl 0x145127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1450563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x145127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1450563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x145127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1450563f0 '__SVCount_t'
|-TypedefDecl 0x145127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x145127fb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-TypedefDecl 0x145128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x145127fb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-FunctionDecl 0x1451282b8 <dataset_diviso_filec/func19758_nonvuln.c:1:1, line:35:1> line:1:19 invalid PHP_HAVAL224Final 'int (unsigned char *, int *)'
| |-ParmVarDecl 0x145128128 <col:37, col:52> col:52 used digest 'unsigned char *'
| |-ParmVarDecl 0x1451281d8 <col:60, col:76> col:76 referenced invalid context 'int *'
| `-CompoundStmt 0x1458098e8 <line:2:1, line:35:1>
|   |-DeclStmt 0x145128480 <line:3:2, col:24>
|   | `-VarDecl 0x145128418 <col:2, col:23> col:16 used bits 'unsigned char[10]'
|   |-DeclStmt 0x1451285b0 <line:4:2, col:28>
|   | |-VarDecl 0x1451284b0 <col:2, col:15> col:15 used index 'unsigned int'
|   | `-VarDecl 0x145128530 <col:2, col:22> col:22 used padLen 'unsigned int'
|   |-BinaryOperator 0x145142048 <line:10:2, col:33> 'unsigned char' contains-errors '='
|   | |-ArraySubscriptExpr 0x145141f60 <col:2, col:8> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x145141f48 <col:2> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x145141f08 <col:2> 'unsigned char[10]' lvalue Var 0x145128418 'bits' 'unsigned char[10]'
|   | | `-IntegerLiteral 0x145141f28 <col:7> 'int' 1
|   | `-ParenExpr 0x145142028 <col:12, col:33> '<dependent type>' contains-errors
|   |   `-BinaryOperator 0x145142008 <col:13, col:32> '<dependent type>' contains-errors '>>'
|   |     |-CXXDependentScopeMemberExpr 0x145141fa0 <col:13, col:22> '<dependent type>' contains-errors lvalue ->output
|   |     | `-RecoveryExpr 0x145141f80 <col:13> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x145141fe8 <col:32> 'int' 2
|   |-CallExpr 0x1451422e0 <line:13:2, col:36> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1451421c0 <col:2> 'int ()' Function 0x145142108 'Encode' 'int ()'
|   | |-BinaryOperator 0x145142238 <col:9, col:16> 'unsigned char *' '+'
|   | | |-ImplicitCastExpr 0x145142220 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1451421e0 <col:9> 'unsigned char[10]' lvalue Var 0x145128418 'bits' 'unsigned char[10]'
|   | | `-IntegerLiteral 0x145142200 <col:16> 'int' 2
|   | |-CXXDependentScopeMemberExpr 0x145142278 <col:19, col:28> '<dependent type>' contains-errors lvalue ->count
|   | | `-RecoveryExpr 0x145142258 <col:19> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x1451422c0 <col:35> 'int' 8
|   |-BinaryOperator 0x145142518 <line:16:2, col:57> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x145142318 <col:2> 'unsigned int' lvalue Var 0x1451284b0 'index' 'unsigned int'
|   | `-CStyleCastExpr 0x1451424f0 <col:10, col:57> 'unsigned int' contains-errors <Dependent>
|   |   `-ParenExpr 0x1451424d0 <col:25, col:57> '<dependent type>' contains-errors
|   |     `-BinaryOperator 0x145142478 <col:26, col:53> '<dependent type>' contains-errors '&'
|   |       |-ParenExpr 0x145142438 <col:26, col:49> '<dependent type>' contains-errors
|   |       | `-BinaryOperator 0x145142418 <col:27, col:48> '<dependent type>' contains-errors '>>'
|   |       |   |-ArraySubscriptExpr 0x1451423d8 <col:27, col:43> '<dependent type>' contains-errors lvalue
|   |       |   | |-ImplicitCastExpr 0x1451423c0 <col:27, col:36> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   | | `-CXXDependentScopeMemberExpr 0x145142358 <col:27, col:36> '<dependent type>' contains-errors lvalue ->count
|   |       |   | |   `-RecoveryExpr 0x145142338 <col:27> '<dependent type>' contains-errors lvalue
|   |       |   | `-IntegerLiteral 0x1451423a0 <col:42> 'int' 0
|   |       |   `-IntegerLiteral 0x1451423f8 <col:48> 'int' 3
|   |       `-IntegerLiteral 0x145142458 <col:53> 'int' 127
|   |-BinaryOperator 0x145142798 <line:17:2, col:55> 'unsigned int' '='
|   | |-DeclRefExpr 0x145142538 <col:2> 'unsigned int' lvalue Var 0x145128530 'padLen' 'unsigned int'
|   | `-ConditionalOperator 0x145142768 <col:11, col:55> 'unsigned int'
|   |   |-ParenExpr 0x1451425e8 <col:11, col:23> 'int'
|   |   | `-BinaryOperator 0x1451425c8 <col:12, col:20> 'int' '<'
|   |   |   |-ImplicitCastExpr 0x145142598 <col:12> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x145142558 <col:12> 'unsigned int' lvalue Var 0x1451284b0 'index' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x1451425b0 <col:20> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x145142578 <col:20> 'int' 118
|   |   |-ParenExpr 0x145142698 <col:27, col:39> 'unsigned int'
|   |   | `-BinaryOperator 0x145142678 <col:28, col:34> 'unsigned int' '-'
|   |   |   |-ImplicitCastExpr 0x145142660 <col:28> 'unsigned int' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x145142608 <col:28> 'int' 118
|   |   |   `-ImplicitCastExpr 0x145142648 <col:34> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x145142628 <col:34> 'unsigned int' lvalue Var 0x1451284b0 'index' 'unsigned int'
|   |   `-ParenExpr 0x145142748 <col:43, col:55> 'unsigned int'
|   |     `-BinaryOperator 0x145142728 <col:44, col:50> 'unsigned int' '-'
|   |       |-ImplicitCastExpr 0x145142710 <col:44> 'unsigned int' <IntegralCast>
|   |       | `-IntegerLiteral 0x1451426b8 <col:44> 'int' 246
|   |       `-ImplicitCastExpr 0x1451426f8 <col:50> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1451426d8 <col:50> 'unsigned int' lvalue Var 0x1451284b0 'index' 'unsigned int'
|   |-CallExpr 0x145142968 <line:18:2, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x145142898 <col:2> 'int ()' Function 0x1451427e0 'PHP_HAVALUpdate' 'int ()'
|   | |-RecoveryExpr 0x1451428b8 <col:18> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x145142948 <col:27> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x1451428f0 <col:36> 'unsigned int' lvalue Var 0x145128530 'padLen' 'unsigned int'
|   |-CallExpr 0x145142a20 <line:21:2, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1451429a0 <col:2> 'int ()' Function 0x1451427e0 'PHP_HAVALUpdate' 'int ()'
|   | |-RecoveryExpr 0x1451429c0 <col:18> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x1451429e0 <col:27> 'unsigned char[10]' lvalue Var 0x145128418 'bits' 'unsigned char[10]'
|   | `-IntegerLiteral 0x145142a00 <col:33> 'int' 10
|   |-CompoundAssignOperator 0x145142c40 <line:24:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x145142b20 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x145142b08 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x145142aa0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x145142a78 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x145142a58 <col:2> 'int *' lvalue ParmVar 0x1451281d8 'context' 'int *'
|   | | `-IntegerLiteral 0x145142ae8 <col:17> 'int' 6
|   | `-BinaryOperator 0x145142c20 <col:24, col:51> '<dependent type>' contains-errors '&'
|   |   |-ArraySubscriptExpr 0x145142be0 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   | |-ImplicitCastExpr 0x145142bc8 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | `-CXXDependentScopeMemberExpr 0x145142b60 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   | |   `-RecoveryExpr 0x145142b40 <col:24> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x145142ba8 <col:39> 'int' 7
|   |   `-IntegerLiteral 0x145142c00 <col:51> 'int' 15
|   |-CompoundAssignOperator 0x1458082c0 <line:25:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x145142d38 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x145142d20 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x145142cb8 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x145142c90 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x145142c70 <col:2> 'int *' lvalue ParmVar 0x1451281d8 'context' 'int *'
|   | | `-IntegerLiteral 0x145142d00 <col:17> 'int' 5
|   | `-BinaryOperator 0x1458082a0 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x145808260 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x145808240 <col:24, col:46> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x145808200 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x145142de0 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x145142d78 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x145142d58 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x145142dc0 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x145808220 <col:46> 'int' 4
|   |   `-IntegerLiteral 0x145808280 <col:51> 'int' 31
|   |-CompoundAssignOperator 0x145808538 <line:26:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x1458083b8 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x1458083a0 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x145808338 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x145808310 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x1458082f0 <col:2> 'int *' lvalue ParmVar 0x1451281d8 'context' 'int *'
|   | | `-IntegerLiteral 0x145808380 <col:17> 'int' 4
|   | `-BinaryOperator 0x145808518 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x1458084d8 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x1458084b8 <col:24, col:46> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x145808478 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x145808460 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x1458083f8 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x1458083d8 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x145808440 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x145808498 <col:46> 'int' 9
|   |   `-IntegerLiteral 0x1458084f8 <col:51> 'int' 15
|   |-CompoundAssignOperator 0x1458087b0 <line:27:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x145808630 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x145808618 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x1458085b0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x145808588 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x145808568 <col:2> 'int *' lvalue ParmVar 0x1451281d8 'context' 'int *'
|   | | `-IntegerLiteral 0x1458085f8 <col:17> 'int' 3
|   | `-BinaryOperator 0x145808790 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x145808750 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x145808730 <col:24, col:45> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x1458086f0 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x1458086d8 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x145808670 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x145808650 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x1458086b8 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x145808710 <col:45> 'int' 13
|   |   `-IntegerLiteral 0x145808770 <col:51> 'int' 31
|   |-CompoundAssignOperator 0x145808a28 <line:28:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x1458088a8 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x145808890 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x145808828 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x145808800 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x1458087e0 <col:2> 'int *' lvalue ParmVar 0x1451281d8 'context' 'int *'
|   | | `-IntegerLiteral 0x145808870 <col:17> 'int' 2
|   | `-BinaryOperator 0x145808a08 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x1458089c8 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x1458089a8 <col:24, col:45> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x145808968 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x145808950 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x1458088e8 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x1458088c8 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x145808930 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x145808988 <col:45> 'int' 18
|   |   `-IntegerLiteral 0x1458089e8 <col:51> 'int' 15
|   |-CompoundAssignOperator 0x145808ca0 <line:29:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x145808b20 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x145808b08 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x145808aa0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x145808a78 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x145808a58 <col:2> 'int *' lvalue ParmVar 0x1451281d8 'context' 'int *'
|   | | `-IntegerLiteral 0x145808ae8 <col:17> 'int' 1
|   | `-BinaryOperator 0x145808c80 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x145808c40 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x145808c20 <col:24, col:45> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x145808be0 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x145808bc8 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x145808b60 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x145808b40 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x145808ba8 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x145808c00 <col:45> 'int' 22
|   |   `-IntegerLiteral 0x145808c60 <col:51> 'int' 31
|   |-CompoundAssignOperator 0x145808f18 <line:30:2, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x145808d98 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x145808d80 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x145808d18 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x145808cf0 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x145808cd0 <col:2> 'int *' lvalue ParmVar 0x1451281d8 'context' 'int *'
|   | | `-IntegerLiteral 0x145808d60 <col:17> 'int' 0
|   | `-BinaryOperator 0x145808ef8 <col:23, col:51> '<dependent type>' contains-errors '&'
|   |   |-ParenExpr 0x145808eb8 <col:23, col:47> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x145808e98 <col:24, col:45> '<dependent type>' contains-errors '>>'
|   |   |   |-ArraySubscriptExpr 0x145808e58 <col:24, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |-ImplicitCastExpr 0x145808e40 <col:24, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | `-CXXDependentScopeMemberExpr 0x145808dd8 <col:24, col:33> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   `-RecoveryExpr 0x145808db8 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x145808e20 <col:39> 'int' 7
|   |   |   `-IntegerLiteral 0x145808e78 <col:45> 'int' 27
|   |   `-IntegerLiteral 0x145808ed8 <col:51> 'int' 31
|   |-CallExpr 0x145809010 <line:31:2, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x145808f48 <col:2> 'int ()' Function 0x145142108 'Encode' 'int ()'
|   | |-DeclRefExpr 0x145808f68 <col:9> 'unsigned char *' lvalue ParmVar 0x145128128 'digest' 'unsigned char *'
|   | |-CXXDependentScopeMemberExpr 0x145808fa8 <col:17, col:26> '<dependent type>' contains-errors lvalue ->state
|   | | `-RecoveryExpr 0x145808f88 <col:17> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x145808ff0 <col:33> 'int' 28
|   `-CallExpr 0x145809898 <line:34:2, col:54> 'void *' contains-errors
|     |-ImplicitCastExpr 0x145809880 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x145809720 <col:2> 'void *(void *, int, unsigned long)' Function 0x1458094d0 'memset' 'void *(void *, int, unsigned long)'
|     |-ImplicitCastExpr 0x1458098d0 <col:9, col:26> 'void *' contains-errors <BitCast>
|     | `-CStyleCastExpr 0x145809778 <col:9, col:26> 'unsigned char *' contains-errors <Dependent>
|     |   `-RecoveryExpr 0x145809740 <col:26> '<dependent type>' contains-errors lvalue
|     |-IntegerLiteral 0x1458097a0 <col:35> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x145809830 <col:38, col:53> 'unsigned long' contains-errors sizeof
|       `-ParenExpr 0x145809810 <col:44, col:53> '<dependent type>' contains-errors
|         `-UnaryOperator 0x1458097f8 <col:45, col:46> '<dependent type>' contains-errors prefix '*' cannot overflow
|           `-ImplicitCastExpr 0x1458097e0 <col:46> '<dependent type>' contains-errors <LValueToRValue>
|             `-RecoveryExpr 0x1458097c0 <col:46> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x1458094d0 <col:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x1458095d0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x145809638 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1458096a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x145809578 <<invalid sloc>> Implicit 900
