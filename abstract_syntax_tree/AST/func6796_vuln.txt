TranslationUnitDecl 0x122855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122855bd0 '__int128'
|-TypedefDecl 0x122856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122855bf0 'unsigned __int128'
|-TypedefDecl 0x12300be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12300bc00 'struct __NSConstantString_tag'
|   `-Record 0x122856580 '__NSConstantString_tag'
|-TypedefDecl 0x12300be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122855d90 '__SVInt8_t'
|-TypedefDecl 0x12300bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122855db0 '__SVInt16_t'
|-TypedefDecl 0x12300bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122855dd0 '__SVInt32_t'
|-TypedefDecl 0x12300bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122855df0 '__SVInt64_t'
|-TypedefDecl 0x12300c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122855e10 '__SVUint8_t'
|-TypedefDecl 0x12300c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122855e30 '__SVUint16_t'
|-TypedefDecl 0x12300c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122855e50 '__SVUint32_t'
|-TypedefDecl 0x12300c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122855e70 '__SVUint64_t'
|-TypedefDecl 0x12300c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122855e90 '__SVFloat16_t'
|-TypedefDecl 0x12300c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12300c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12300c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12300c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12300c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12300c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12300c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12300c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12300c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12300c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12300c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12300c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12300c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12300c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12300c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12300c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12300c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1228560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12300c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1228560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12300c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1228560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12300c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12300ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12300cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12300cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12300cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12300d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1228561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12300d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1228561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12300d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1228561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12300d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12300d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12300d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12300d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12300d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12300d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12300d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12300d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12300d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12300d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12300d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12300d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12300da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122856390 '__SVBool_t'
|-TypedefDecl 0x12300da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12300dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12300db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228563f0 '__SVCount_t'
|-TypedefDecl 0x12300dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12300dbb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-TypedefDecl 0x12300dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12300dbb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-FunctionDecl 0x12300df18 <dataset_diviso_filec/func6796_vuln.c:1:1, line:25:1> line:1:37 invalid ModPlug_InstrumentName 'int (int *, unsigned int, char *)'
| |-ParmVarDecl 0x12300dd28 <col:60, col:73> col:73 invalid file 'int *'
| |-ParmVarDecl 0x12300dda8 <col:79, col:92> col:92 used qual 'unsigned int'
| |-ParmVarDecl 0x12300de28 <col:98, col:104> col:104 used buff 'char *'
| `-CompoundStmt 0x123028cc8 <line:2:1, line:25:1>
|   |-DeclStmt 0x12300e058 <line:3:2, col:17>
|   | `-VarDecl 0x12300dff0 <col:2, col:14> col:14 used str 'const char *'
|   |-DeclStmt 0x12300e0f0 <line:4:2, col:21>
|   | `-VarDecl 0x12300e088 <col:2, col:15> col:15 used retval 'unsigned int'
|   |-UnaryExprOrTypeTraitExpr 0x12300e160 <line:5:2, col:9> 'unsigned long' sizeof
|   | `-DeclRefExpr 0x12300e140 <col:9> 'unsigned int' lvalue Var 0x12300e088 'retval' 'unsigned int' non_odr_use_unevaluated
|   |-IfStmt 0x12300e200 <line:6:2, col:19>
|   | |-UnaryOperator 0x12300e1b8 <col:5, col:6> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12300e1a0 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12300e180 <col:6> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x12300e1f0 <col:12, col:19>
|   |   `-IntegerLiteral 0x12300e1d0 <col:19> 'int' 0
|   |-BinaryOperator 0x123027508 <line:7:2, col:59> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x12300e220 <col:2> 'const char *' lvalue Var 0x12300dff0 'str' 'const char *'
|   | `-CallExpr 0x1230274d8 <col:8, col:59> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12300e3a0 <col:8> 'int ()' Function 0x12300e2e8 'openmpt_module_get_instrument_name' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x123027400 <col:43, col:49> '<dependent type>' contains-errors lvalue ->mod
|   |   | `-RecoveryExpr 0x12300e3c0 <col:43> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x1230274b8 <col:53, col:58> 'unsigned int' '-'
|   |     |-ImplicitCastExpr 0x123027488 <col:53> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x123027448 <col:53> 'unsigned int' lvalue ParmVar 0x12300dda8 'qual' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1230274a0 <col:58> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x123027468 <col:58> 'int' 1
|   |-IfStmt 0x1230276d8 <line:8:2, line:13:2>
|   | |-UnaryOperator 0x123027560 <line:8:5, col:6> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x123027548 <col:6> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x123027528 <col:6> 'const char *' lvalue Var 0x12300dff0 'str' 'const char *'
|   | `-CompoundStmt 0x1230276b8 <col:10, line:13:2>
|   |   |-IfStmt 0x123027668 <line:9:3, line:11:3>
|   |   | |-ImplicitCastExpr 0x123027598 <line:9:6> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x123027578 <col:6> 'char *' lvalue ParmVar 0x12300de28 'buff' 'char *'
|   |   | `-CompoundStmt 0x123027650 <col:11, line:11:3>
|   |   |   `-BinaryOperator 0x123027630 <line:10:4, col:12> 'char' '='
|   |   |     |-UnaryOperator 0x1230275e8 <col:4, col:5> 'char' lvalue prefix '*' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x1230275d0 <col:5> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1230275b0 <col:5> 'char *' lvalue ParmVar 0x12300de28 'buff' 'char *'
|   |   |     `-ImplicitCastExpr 0x123027618 <col:12> 'char' <IntegralCast>
|   |   |       `-CharacterLiteral 0x123027600 <col:12> 'int' 0
|   |   `-ReturnStmt 0x1230276a8 <line:12:3, col:10>
|   |     `-IntegerLiteral 0x123027688 <col:10> 'int' 0
|   |-BinaryOperator 0x123027df0 <line:14:2, col:24> 'unsigned int' '='
|   | |-DeclRefExpr 0x1230276f8 <col:2> 'unsigned int' lvalue Var 0x12300e088 'retval' 'unsigned int'
|   | `-ImplicitCastExpr 0x123027dd8 <col:14, col:24> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x123027d98 <col:14, col:24> 'unsigned long'
|   |     |-ImplicitCastExpr 0x123027d80 <col:14> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x123027cf0 <col:14> 'unsigned long (const char *)' Function 0x123027b80 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x123027dc0 <col:21> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x123027d10 <col:21> 'const char *' lvalue Var 0x12300dff0 'str' 'const char *'
|   |-IfStmt 0x123027ff0 <line:15:2, line:17:2>
|   | |-BinaryOperator 0x123027ec0 <line:15:5, col:16> 'int' contains-errors '>='
|   | | |-RecoveryExpr 0x123027e80 <col:5> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x123027ea0 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x123027fd8 <col:24, line:17:2>
|   |   `-BinaryOperator 0x123027fb8 <line:16:3, col:23> 'unsigned int' contains-errors '='
|   |     |-DeclRefExpr 0x123027ee0 <col:3> 'unsigned int' lvalue Var 0x12300e088 'retval' 'unsigned int'
|   |     `-BinaryOperator 0x123027f98 <col:15, col:23> '<dependent type>' contains-errors '-'
|   |       |-RecoveryExpr 0x123027f78 <col:15> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x123027f18 <col:23> 'int' 1
|   |-IfStmt 0x123028a98 <line:19:2, line:22:2>
|   | |-ImplicitCastExpr 0x123028080 <line:19:5> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x123028060 <col:5> 'char *' lvalue ParmVar 0x12300de28 'buff' 'char *'
|   | `-CompoundStmt 0x123028a78 <col:10, line:22:2>
|   |   |-CallExpr 0x1230288e8 <line:20:3, col:27> 'void *'
|   |   | |-ImplicitCastExpr 0x1230288d0 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x123028368 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x123028118 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x123028938 <col:10> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x123028920 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x123028388 <col:10> 'char *' lvalue ParmVar 0x12300de28 'buff' 'char *'
|   |   | |-ImplicitCastExpr 0x123028968 <col:15> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x123028950 <col:15> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1230283a8 <col:15> 'const char *' lvalue Var 0x12300dff0 'str' 'const char *'
|   |   | `-ImplicitCastExpr 0x123028980 <col:19, col:26> 'unsigned long' <IntegralCast>
|   |   |   `-BinaryOperator 0x123028850 <col:19, col:26> 'unsigned int' '+'
|   |   |     |-ImplicitCastExpr 0x123028820 <col:19> 'unsigned int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1230283c8 <col:19> 'unsigned int' lvalue Var 0x12300e088 'retval' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x123028838 <col:26> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x123028800 <col:26> 'int' 1
|   |   `-BinaryOperator 0x123028a58 <line:21:3, col:18> 'char' '='
|   |     |-ArraySubscriptExpr 0x123028a08 <col:3, col:14> 'char' lvalue
|   |     | |-ImplicitCastExpr 0x1230289d8 <col:3> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x123028998 <col:3> 'char *' lvalue ParmVar 0x12300de28 'buff' 'char *'
|   |     | `-ImplicitCastExpr 0x1230289f0 <col:8> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1230289b8 <col:8> 'unsigned int' lvalue Var 0x12300e088 'retval' 'unsigned int'
|   |     `-ImplicitCastExpr 0x123028a40 <col:18> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x123028a28 <col:18> 'int' 0
|   |-CallExpr 0x123028c28 <line:23:2, col:25> 'int'
|   | |-ImplicitCastExpr 0x123028c10 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x123028b98 <col:2> 'int ()' Function 0x123028ae0 'openmpt_free_string' 'int ()'
|   | `-ImplicitCastExpr 0x123028c50 <col:22> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x123028bb8 <col:22> 'const char *' lvalue Var 0x12300dff0 'str' 'const char *'
|   `-ReturnStmt 0x123028cb8 <line:24:2, col:9>
|     `-ImplicitCastExpr 0x123028ca0 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x123028c88 <col:9> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x123028c68 <col:9> 'unsigned int' lvalue Var 0x12300e088 'retval' 'unsigned int'
|-FunctionDecl 0x123027b80 <line:14:14> col:14 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x123027c80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x123027c28 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x123028118 <line:20:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x123028218 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x123028280 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x1230282e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1230281c0 <<invalid sloc>> Implicit 882
