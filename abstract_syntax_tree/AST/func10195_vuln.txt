TranslationUnitDecl 0x131055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x131055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1310555d0 '__int128'
|-TypedefDecl 0x131055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1310555f0 'unsigned __int128'
|-TypedefDecl 0x13200be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13200bc00 'struct __NSConstantString_tag'
|   `-Record 0x131055f80 '__NSConstantString_tag'
|-TypedefDecl 0x13200be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x131055790 '__SVInt8_t'
|-TypedefDecl 0x13200bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1310557b0 '__SVInt16_t'
|-TypedefDecl 0x13200bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1310557d0 '__SVInt32_t'
|-TypedefDecl 0x13200bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1310557f0 '__SVInt64_t'
|-TypedefDecl 0x13200c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x131055810 '__SVUint8_t'
|-TypedefDecl 0x13200c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x131055830 '__SVUint16_t'
|-TypedefDecl 0x13200c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x131055850 '__SVUint32_t'
|-TypedefDecl 0x13200c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x131055870 '__SVUint64_t'
|-TypedefDecl 0x13200c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x131055890 '__SVFloat16_t'
|-TypedefDecl 0x13200c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1310558b0 '__SVFloat32_t'
|-TypedefDecl 0x13200c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1310558d0 '__SVFloat64_t'
|-TypedefDecl 0x13200c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1310558f0 '__SVBfloat16_t'
|-TypedefDecl 0x13200c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x131055910 '__clang_svint8x2_t'
|-TypedefDecl 0x13200c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x131055930 '__clang_svint16x2_t'
|-TypedefDecl 0x13200c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x131055950 '__clang_svint32x2_t'
|-TypedefDecl 0x13200c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x131055970 '__clang_svint64x2_t'
|-TypedefDecl 0x13200c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x131055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13200c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1310559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13200c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1310559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13200c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1310559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13200c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x131055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13200c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x131055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13200c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x131055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13200c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x131055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13200c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x131055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x13200c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x131055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13200c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x131055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13200c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x131055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x13200c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x131055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13200ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x131055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13200cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x131055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13200cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x131055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13200cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x131055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13200d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x131055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13200d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x131055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13200d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x131055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13200d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x131055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x13200d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x131055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x13200d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x131055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x13200d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x131055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x13200d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x131055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13200d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x131055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13200d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x131055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13200d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x131055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13200d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x131055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13200d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x131055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13200d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x131055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13200d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x131055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13200da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x131055d90 '__SVBool_t'
|-TypedefDecl 0x13200da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x131055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x13200dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x131055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13200db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x131055df0 '__SVCount_t'
|-TypedefDecl 0x13200dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13200dbb0 'char *'
|   `-BuiltinType 0x1310550b0 'char'
|-TypedefDecl 0x13200dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13200dbb0 'char *'
|   `-BuiltinType 0x1310550b0 'char'
|-FunctionDecl 0x132027438 <dataset_diviso_filec/func10195_vuln.c:1:1, line:50:1> line:1:12 invalid deliver_remote 'int (int *, struct dest *)' static
| |-ParmVarDecl 0x13200dd28 <col:27, col:43> col:43 invalid msg 'int *'
| |-ParmVarDecl 0x13200e318 <col:48, col:61> col:61 used dlist 'struct dest *'
| `-CompoundStmt 0x13202ba40 <line:2:1, line:50:1>
|   |-DeclStmt 0x1320275e0 <line:3:5, col:19>
|   | `-VarDecl 0x132027578 <col:5, col:18> col:18 used d 'struct dest *'
|   |-ForStmt 0x13202b9d8 <line:6:5, line:47:5>
|   | |-BinaryOperator 0x132027650 <line:6:10, col:14> 'struct dest *' '='
|   | | |-DeclRefExpr 0x1320275f8 <col:10> 'struct dest *' lvalue Var 0x132027578 'd' 'struct dest *'
|   | | `-ImplicitCastExpr 0x132027638 <col:14> 'struct dest *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x132027618 <col:14> 'struct dest *' lvalue ParmVar 0x13200e318 'dlist' 'struct dest *'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x132027690 <col:21> 'struct dest *' <LValueToRValue>
|   | | `-DeclRefExpr 0x132027670 <col:21> 'struct dest *' lvalue Var 0x132027578 'd' 'struct dest *'
|   | |-BinaryOperator 0x132027728 <col:24, col:31> 'struct dest *' contains-errors '='
|   | | |-DeclRefExpr 0x1320276a8 <col:24> 'struct dest *' lvalue Var 0x132027578 'd' 'struct dest *'
|   | | `-RecoveryExpr 0x132027700 <col:28, col:31> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1320276c8 <col:28> 'struct dest *' lvalue Var 0x132027578 'd' 'struct dest *'
|   | `-CompoundStmt 0x13202b968 <col:37, line:47:5>
|   |   |-DeclStmt 0x132027938 <line:7:2, col:20>
|   |   | |-RecordDecl 0x132027748 <col:2, col:9> col:9 struct backend
|   |   | `-VarDecl 0x1320278b8 <col:2, col:18> col:18 used be 'struct backend *'
|   |   |-DeclStmt 0x132027a58 <line:8:2, col:16>
|   |   | `-VarDecl 0x1320279f0 <col:2, col:15> col:7 used buf 'char[4096]'
|   |   |-BinaryOperator 0x132028018 <line:10:2, line:13:23> 'struct backend *' contains-errors '='
|   |   | |-DeclRefExpr 0x132027a70 <line:10:2> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |   | `-CallExpr 0x132027fc0 <col:7, line:13:23> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x132027bf0 <line:10:7> 'int ()' Function 0x132027b38 'proxy_findserver' 'int ()'
|   |   |   |-RecoveryExpr 0x132027c48 <col:24, col:27> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x132027c10 <col:24> 'struct dest *' lvalue Var 0x132027578 'd' 'struct dest *'
|   |   |   |-UnaryOperator 0x132027e88 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   | `-RecoveryExpr 0x132027e68 <col:36> '<dependent type>' contains-errors lvalue
|   |   |   |-ConditionalOperator 0x132027ee0 <line:11:10, col:38> '<dependent type>' contains-errors
|   |   |   | |-RecoveryExpr 0x132027ea0 <col:10> '<dependent type>' contains-errors lvalue
|   |   |   | |-RecoveryExpr 0x132027ec0 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-StringLiteral 0x132027d10 <col:38> 'char[4]' lvalue "STR"
|   |   |   |-UnaryOperator 0x132027f30 <line:12:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   | `-RecoveryExpr 0x132027f10 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   |-UnaryOperator 0x132027f68 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   | `-RecoveryExpr 0x132027f48 <col:28> '<dependent type>' contains-errors lvalue
|   |   |   |-RecoveryExpr 0x132027f80 <line:13:10> '<dependent type>' contains-errors lvalue
|   |   |   `-RecoveryExpr 0x132027fa0 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x1320280d0 <line:14:2, col:18>
|   |   | |-UnaryOperator 0x132028070 <col:6, col:7> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x132028058 <col:7> 'struct backend *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x132028038 <col:7> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |   | `-ReturnStmt 0x1320280c0 <col:11, col:18>
|   |   |   `-RecoveryExpr 0x1320280a0 <col:18> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x1320282d8 <line:17:2, col:37> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1320281d0 <col:2> 'int ()' Function 0x132028118 'prot_printf' 'int ()'
|   |   | |-RecoveryExpr 0x132028228 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x1320281f0 <col:14> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |   | |-StringLiteral 0x132028250 <col:23> 'char[4]' lvalue "STR"
|   |   | `-CXXDependentScopeMemberExpr 0x132028290 <col:30, col:35> '<dependent type>' contains-errors lvalue ->id
|   |   |   `-RecoveryExpr 0x132028270 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x132029c80 <line:18:2, col:20> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x132029c00 <col:2> 'int ()' Function 0x132028338 'prot_flush' 'int ()'
|   |   | `-RecoveryExpr 0x132029c58 <col:13, col:17> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x132029c20 <col:13> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |   |-IfStmt 0x13202a4f0 <line:20:2, line:24:2>
|   |   | |-BinaryOperator 0x13202a328 <line:20:6, line:21:27> 'int' contains-errors '||'
|   |   | | |-UnaryOperator 0x132029ec0 <line:20:6, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | | `-CallExpr 0x132029e88 <col:7, col:42> '<dependent type>' contains-errors
|   |   | | |   |-DeclRefExpr 0x132029d88 <col:7> 'int ()' Function 0x132029cd0 'prot_fgets' 'int ()'
|   |   | | |   |-DeclRefExpr 0x132029da8 <col:18> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   | | |   |-UnaryExprOrTypeTraitExpr 0x132029e08 <col:23, col:33> 'unsigned long' sizeof
|   |   | | |   | `-ParenExpr 0x132029de8 <col:29, col:33> 'char[4096]' lvalue
|   |   | | |   |   `-DeclRefExpr 0x132029dc8 <col:30> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]' non_odr_use_unevaluated
|   |   | | |   `-RecoveryExpr 0x132029e60 <col:36, col:40> '<dependent type>' contains-errors lvalue
|   |   | | |     `-DeclRefExpr 0x132029e28 <col:36> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |   | | `-CallExpr 0x13202a278 <line:21:6, col:27> 'int'
|   |   | |   |-ImplicitCastExpr 0x13202a260 <col:6> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x13202a178 <col:6> 'int (const char *, const char *, unsigned long)' Function 0x132029f28 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   | |   |-ImplicitCastExpr 0x13202a2c8 <col:14> 'const char *' <NoOp>
|   |   | |   | `-ImplicitCastExpr 0x13202a2b0 <col:14> 'char *' <ArrayToPointerDecay>
|   |   | |   |   `-StringLiteral 0x13202a198 <col:14> 'char[4]' lvalue "STR"
|   |   | |   |-ImplicitCastExpr 0x13202a2f8 <col:21> 'const char *' <NoOp>
|   |   | |   | `-ImplicitCastExpr 0x13202a2e0 <col:21> 'char *' <ArrayToPointerDecay>
|   |   | |   |   `-DeclRefExpr 0x13202a1b8 <col:21> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   | |   `-ImplicitCastExpr 0x13202a310 <col:26> 'unsigned long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x13202a1d8 <col:26> 'int' 3
|   |   | `-CompoundStmt 0x13202a4d8 <col:30, line:24:2>
|   |   |   `-ContinueStmt 0x13202a4d0 <line:23:6>
|   |   |-CallExpr 0x13202a678 <line:27:2, col:15> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13202a5f0 <col:2> 'int ()' Function 0x13202a538 'rewind' 'int ()'
|   |   | `-CXXDependentScopeMemberExpr 0x13202a630 <col:9, col:14> '<dependent type>' contains-errors lvalue ->f
|   |   |   `-RecoveryExpr 0x13202a610 <col:9> '<dependent type>' contains-errors lvalue
|   |   |-WhileStmt 0x13202b1e8 <line:28:2, line:34:2>
|   |   | |-CallExpr 0x13202a888 <line:28:9, col:39> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x13202a780 <col:9> 'int ()' Function 0x13202a6c8 'fgets' 'int ()'
|   |   | | |-DeclRefExpr 0x13202a7a0 <col:15> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   | | |-UnaryExprOrTypeTraitExpr 0x13202a800 <col:20, col:30> 'unsigned long' sizeof
|   |   | | | `-ParenExpr 0x13202a7e0 <col:26, col:30> 'char[4096]' lvalue
|   |   | | |   `-DeclRefExpr 0x13202a7c0 <col:27> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]' non_odr_use_unevaluated
|   |   | | `-CXXDependentScopeMemberExpr 0x13202a840 <col:33, col:38> '<dependent type>' contains-errors lvalue ->f
|   |   | |   `-RecoveryExpr 0x13202a820 <col:33> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x13202b1c8 <col:42, line:34:2>
|   |   |   |-IfStmt 0x13202ab48 <line:29:6, col:47>
|   |   |   | |-BinaryOperator 0x13202a980 <col:10, col:20> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x13202a968 <col:10, col:15> 'int' <IntegralCast>
|   |   |   | | | `-ImplicitCastExpr 0x13202a950 <col:10, col:15> 'char' <LValueToRValue>
|   |   |   | | |   `-ArraySubscriptExpr 0x13202a918 <col:10, col:15> 'char' lvalue
|   |   |   | | |     |-ImplicitCastExpr 0x13202a900 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   | | |     | `-DeclRefExpr 0x13202a8c0 <col:10> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   |   | | |     `-IntegerLiteral 0x13202a8e0 <col:14> 'int' 0
|   |   |   | | `-CharacterLiteral 0x13202a938 <col:20> 'int' 46
|   |   |   | `-CallExpr 0x13202ab18 <col:25, col:47> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x13202aa80 <col:25> 'int ()' Function 0x13202a9c8 'prot_putc' 'int ()'
|   |   |   |   |-CharacterLiteral 0x13202aaa0 <col:35> 'int' 46
|   |   |   |   `-RecoveryExpr 0x13202aaf0 <col:40, col:44> '<dependent type>' contains-errors lvalue
|   |   |   |     `-DeclRefExpr 0x13202aab8 <col:40> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |   |   `-DoStmt 0x13202b1a8 <line:30:6, line:33:39>
|   |   |     |-CompoundStmt 0x13202ac78 <line:30:9, line:32:6>
|   |   |     | `-CallExpr 0x13202ac40 <line:31:3, col:34> '<dependent type>' contains-errors
|   |   |     |   |-DeclRefExpr 0x13202ab68 <col:3> 'int ()' Function 0x132028118 'prot_printf' 'int ()'
|   |   |     |   |-RecoveryExpr 0x13202abc0 <col:15, col:19> '<dependent type>' contains-errors lvalue
|   |   |     |   | `-DeclRefExpr 0x13202ab88 <col:15> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |   |     |   |-StringLiteral 0x13202ac00 <col:24> 'char[4]' lvalue "STR"
|   |   |     |   `-DeclRefExpr 0x13202ac20 <col:31> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   |     `-BinaryOperator 0x13202b188 <line:32:15, line:33:38> 'int' contains-errors '&&'
|   |   |       |-BinaryOperator 0x13202b028 <line:32:15, col:37> 'int' '!='
|   |   |       | |-ImplicitCastExpr 0x13202b010 <col:15, col:32> 'int' <IntegralCast>
|   |   |       | | `-ImplicitCastExpr 0x13202aff8 <col:15, col:32> 'char' <LValueToRValue>
|   |   |       | |   `-ArraySubscriptExpr 0x13202afc0 <col:15, col:32> 'char' lvalue
|   |   |       | |     |-ImplicitCastExpr 0x13202afa8 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |       | |     | `-DeclRefExpr 0x13202ac90 <col:15> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   |       | |     `-BinaryOperator 0x13202af88 <col:19, col:31> 'unsigned long' '-'
|   |   |       | |       |-CallExpr 0x13202aef8 <col:19, col:29> 'unsigned long'
|   |   |       | |       | |-ImplicitCastExpr 0x13202aee0 <col:19> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | |       | | `-DeclRefExpr 0x13202ae58 <col:19> 'unsigned long (const char *)' Function 0x13202ace8 'strlen' 'unsigned long (const char *)'
|   |   |       | |       | `-ImplicitCastExpr 0x13202af38 <col:26> 'const char *' <NoOp>
|   |   |       | |       |   `-ImplicitCastExpr 0x13202af20 <col:26> 'char *' <ArrayToPointerDecay>
|   |   |       | |       |     `-DeclRefExpr 0x13202ae78 <col:26> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   |       | |       `-ImplicitCastExpr 0x13202af70 <col:31> 'unsigned long' <IntegralCast>
|   |   |       | |         `-IntegerLiteral 0x13202af50 <col:31> 'int' 1
|   |   |       | `-CharacterLiteral 0x13202afe0 <col:37> 'int' 10
|   |   |       `-CallExpr 0x13202b150 <line:33:8, col:38> '<dependent type>' contains-errors
|   |   |         |-DeclRefExpr 0x13202b048 <col:8> 'int ()' Function 0x13202a6c8 'fgets' 'int ()'
|   |   |         |-DeclRefExpr 0x13202b068 <col:14> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   |         |-UnaryExprOrTypeTraitExpr 0x13202b0c8 <col:19, col:29> 'unsigned long' sizeof
|   |   |         | `-ParenExpr 0x13202b0a8 <col:25, col:29> 'char[4096]' lvalue
|   |   |         |   `-DeclRefExpr 0x13202b088 <col:26> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]' non_odr_use_unevaluated
|   |   |         `-CXXDependentScopeMemberExpr 0x13202b108 <col:32, col:37> '<dependent type>' contains-errors lvalue ->f
|   |   |           `-RecoveryExpr 0x13202b0e8 <col:32> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x13202b4b8 <line:37:2, col:60>
|   |   | |-BinaryOperator 0x13202b3c8 <col:6, col:28> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x13202b3b0 <col:6, col:23> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x13202b398 <col:6, col:23> 'char' <LValueToRValue>
|   |   | | |   `-ArraySubscriptExpr 0x13202b360 <col:6, col:23> 'char' lvalue
|   |   | | |     |-ImplicitCastExpr 0x13202b348 <col:6> 'char *' <ArrayToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x13202b208 <col:6> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   | | |     `-BinaryOperator 0x13202b328 <col:10, col:22> 'unsigned long' '-'
|   |   | | |       |-CallExpr 0x13202b298 <col:10, col:20> 'unsigned long'
|   |   | | |       | |-ImplicitCastExpr 0x13202b280 <col:10> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | |       | | `-DeclRefExpr 0x13202b228 <col:10> 'unsigned long (const char *)' Function 0x13202ace8 'strlen' 'unsigned long (const char *)'
|   |   | | |       | `-ImplicitCastExpr 0x13202b2d8 <col:17> 'const char *' <NoOp>
|   |   | | |       |   `-ImplicitCastExpr 0x13202b2c0 <col:17> 'char *' <ArrayToPointerDecay>
|   |   | | |       |     `-DeclRefExpr 0x13202b248 <col:17> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |   | | |       `-ImplicitCastExpr 0x13202b310 <col:22> 'unsigned long' <IntegralCast>
|   |   | | |         `-IntegerLiteral 0x13202b2f0 <col:22> 'int' 1
|   |   | | `-CharacterLiteral 0x13202b380 <col:28> 'int' 10
|   |   | `-CallExpr 0x13202b488 <col:34, col:60> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13202b3e8 <col:34> 'int ()' Function 0x132028118 'prot_printf' 'int ()'
|   |   |   |-RecoveryExpr 0x13202b440 <col:46, col:50> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x13202b408 <col:46> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |   |   `-StringLiteral 0x13202b468 <col:55> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x13202b578 <line:39:2, col:28> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13202b4d8 <col:2> 'int ()' Function 0x132028118 'prot_printf' 'int ()'
|   |   | |-RecoveryExpr 0x13202b530 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x13202b4f8 <col:14> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |   | `-StringLiteral 0x13202b558 <col:23> 'char[4]' lvalue "STR"
|   |   `-IfStmt 0x13202b948 <line:41:2, line:46:2>
|   |     |-BinaryOperator 0x13202b870 <line:41:6, line:42:27> 'int' contains-errors '||'
|   |     | |-UnaryOperator 0x13202b6e0 <line:41:6, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | | `-CallExpr 0x13202b6a8 <col:7, col:42> '<dependent type>' contains-errors
|   |     | |   |-DeclRefExpr 0x13202b5a8 <col:7> 'int ()' Function 0x132029cd0 'prot_fgets' 'int ()'
|   |     | |   |-DeclRefExpr 0x13202b5c8 <col:18> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |     | |   |-UnaryExprOrTypeTraitExpr 0x13202b628 <col:23, col:33> 'unsigned long' sizeof
|   |     | |   | `-ParenExpr 0x13202b608 <col:29, col:33> 'char[4096]' lvalue
|   |     | |   |   `-DeclRefExpr 0x13202b5e8 <col:30> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]' non_odr_use_unevaluated
|   |     | |   `-RecoveryExpr 0x13202b680 <col:36, col:40> '<dependent type>' contains-errors lvalue
|   |     | |     `-DeclRefExpr 0x13202b648 <col:36> 'struct backend *' lvalue Var 0x1320278b8 'be' 'struct backend *'
|   |     | `-CallExpr 0x13202b7c0 <line:42:6, col:27> 'int'
|   |     |   |-ImplicitCastExpr 0x13202b7a8 <col:6> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x13202b6f8 <col:6> 'int (const char *, const char *, unsigned long)' Function 0x132029f28 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |     |   |-ImplicitCastExpr 0x13202b810 <col:14> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x13202b7f8 <col:14> 'char *' <ArrayToPointerDecay>
|   |     |   |   `-StringLiteral 0x13202b718 <col:14> 'char[4]' lvalue "STR"
|   |     |   |-ImplicitCastExpr 0x13202b840 <col:21> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x13202b828 <col:21> 'char *' <ArrayToPointerDecay>
|   |     |   |   `-DeclRefExpr 0x13202b738 <col:21> 'char[4096]' lvalue Var 0x1320279f0 'buf' 'char[4096]'
|   |     |   `-ImplicitCastExpr 0x13202b858 <col:26> 'unsigned long' <IntegralCast>
|   |     |     `-IntegerLiteral 0x13202b758 <col:26> 'int' 3
|   |     `-CompoundStmt 0x13202b938 <col:30, line:46:2>
|   `-ReturnStmt 0x13202ba30 <line:49:5, col:12>
|     `-IntegerLiteral 0x13202ba10 <col:12> 'int' 0
|-FunctionDecl 0x132029f28 <line:21:6> col:6 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x13202a028 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13202a090 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13202a0f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x132029fd0 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x13202ace8 <line:32:19> col:19 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13202ade8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13202ad90 <<invalid sloc>> Implicit 902
