TranslationUnitDecl 0x158855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1588564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158855bd0 '__int128'
|-TypedefDecl 0x158856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158855bf0 'unsigned __int128'
|-TypedefDecl 0x158926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x158926000 'struct __NSConstantString_tag'
|   `-Record 0x158856580 '__NSConstantString_tag'
|-TypedefDecl 0x158926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158855d90 '__SVInt8_t'
|-TypedefDecl 0x158926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158855db0 '__SVInt16_t'
|-TypedefDecl 0x158926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158855dd0 '__SVInt32_t'
|-TypedefDecl 0x1589263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158855df0 '__SVInt64_t'
|-TypedefDecl 0x158926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158855e10 '__SVUint8_t'
|-TypedefDecl 0x1589264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158855e30 '__SVUint16_t'
|-TypedefDecl 0x158926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158855e50 '__SVUint32_t'
|-TypedefDecl 0x158926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158855e70 '__SVUint64_t'
|-TypedefDecl 0x1589265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158855e90 '__SVFloat16_t'
|-TypedefDecl 0x158926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1589266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158855ed0 '__SVFloat64_t'
|-TypedefDecl 0x158926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x158926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1589267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x158926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1589268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x158926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x158926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1589269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x158926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x158926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x158926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x158926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x158926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x158926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158856090 '__clang_svint8x3_t'
|-TypedefDecl 0x158926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1588560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x158926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1588560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x158926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1588560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x158926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x158926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x158926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x158926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x158926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x158927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1588561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x158927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1588561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1589278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1588561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x158927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1589279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158856230 '__clang_svint16x4_t'
|-TypedefDecl 0x158927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158856250 '__clang_svint32x4_t'
|-TypedefDecl 0x158927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158856270 '__clang_svint64x4_t'
|-TypedefDecl 0x158927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x158927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1588562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x158927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1588562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x158927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1588562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x158927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x158927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x158927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x158927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x158927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158856390 '__SVBool_t'
|-TypedefDecl 0x158927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1588563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x158927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1588563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x158927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1588563f0 '__SVCount_t'
|-TypedefDecl 0x158927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x158927fb0 'char *'
|   `-BuiltinType 0x1588556b0 'char'
|-TypedefDecl 0x158928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x158927fb0 'char *'
|   `-BuiltinType 0x1588556b0 'char'
`-FunctionDecl 0x158928758 <dataset_diviso_filec/func12512_vuln.c:1:1, line:58:1> line:1:12 gaff_init 'int (struct hid_device *)' static
  |-ParmVarDecl 0x158928648 <col:22, col:41> col:41 used hid 'struct hid_device *'
  `-CompoundStmt 0x15900a8e8 <line:2:1, line:58:1>
    |-DeclStmt 0x158940c38 <line:3:2, col:26>
    | |-RecordDecl 0x158940a50 <col:2, col:9> col:9 struct gaff_device
    | `-VarDecl 0x158940bb8 <col:2, col:22> col:22 used gaff 'struct gaff_device *'
    |-DeclStmt 0x158940e38 <line:4:2, col:27>
    | |-RecordDecl 0x158940c50 <col:2, col:9> col:9 struct hid_report
    | `-VarDecl 0x158940db8 <col:2, col:21> col:21 used report 'struct hid_report *'
    |-DeclStmt 0x158941248 <line:5:2, line:6:30>
    | |-RecordDecl 0x158940e50 <line:5:2, col:9> col:9 struct hid_input
    | `-VarDecl 0x158940fb8 <col:2, col:20> col:20 used hidinput 'struct hid_input *'
    |-DeclStmt 0x1589414c0 <line:7:2, line:8:52>
    | |-RecordDecl 0x158941260 <line:7:2, col:9> col:9 struct list_head
    | `-VarDecl 0x1589413c8 <col:2, col:20> col:20 used report_list 'struct list_head *'
    |-DeclStmt 0x158941608 <line:9:2, col:44>
    | `-VarDecl 0x158941568 <col:2, col:33> col:20 used report_ptr 'struct list_head *' cinit
    |   `-ImplicitCastExpr 0x1589415f0 <col:33> 'struct list_head *' <LValueToRValue>
    |     `-DeclRefExpr 0x1589415d0 <col:33> 'struct list_head *' lvalue Var 0x1589413c8 'report_list' 'struct list_head *'
    |-DeclStmt 0x158941868 <line:10:2, col:41>
    | |-RecordDecl 0x158941620 <col:2, col:9> col:9 struct input_dev
    | `-VarDecl 0x158941788 <col:2, col:36> col:20 used dev 'struct input_dev *' cinit
    |   `-RecoveryExpr 0x158941828 <col:26, col:36> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1589417f0 <col:26> 'struct hid_input *' lvalue Var 0x158940fb8 'hidinput' 'struct hid_input *'
    |-DeclStmt 0x158941900 <line:11:2, col:11>
    | `-VarDecl 0x158941898 <col:2, col:6> col:6 used error 'int'
    |-IfStmt 0x158943190 <line:13:2, line:16:2>
    | |-CallExpr 0x158942e88 <line:13:6, col:28> 'int'
    | | |-ImplicitCastExpr 0x158942e70 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x158942e00 <col:6> 'int ()' Function 0x158941940 'list_empty' 'int ()'
    | | `-ImplicitCastExpr 0x158942eb0 <col:17> 'struct list_head *' <LValueToRValue>
    | |   `-DeclRefExpr 0x158942e20 <col:17> 'struct list_head *' lvalue Var 0x1589413c8 'report_list' 'struct list_head *'
    | `-CompoundStmt 0x158943170 <col:31, line:16:2>
    |   |-CallExpr 0x158943068 <line:14:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x158943050 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x158942fa8 <col:3> 'int ()' Function 0x158942ef0 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x158943098 <col:11> 'struct hid_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x158942fc8 <col:11> 'struct hid_device *' lvalue ParmVar 0x158928648 'hid' 'struct hid_device *'
    |   | `-ImplicitCastExpr 0x1589430b0 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x158943030 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x158943160 <line:15:3, col:11>
    |     `-UnaryOperator 0x158943148 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x158943130 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x158943110 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x158943230 <line:18:2, col:27> 'struct list_head *' contains-errors '='
    | |-DeclRefExpr 0x1589431b0 <col:2> 'struct list_head *' lvalue Var 0x158941568 'report_ptr' 'struct list_head *'
    | `-RecoveryExpr 0x158943208 <col:15, col:27> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1589431d0 <col:15> 'struct list_head *' lvalue Var 0x158941568 'report_ptr' 'struct list_head *'
    |-IfStmt 0x158943508 <line:21:2, line:24:2>
    | |-BinaryOperator 0x158943348 <line:21:6, col:25> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x158943300 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x1589432c8 <col:6> 'struct hid_report *' lvalue Var 0x158940db8 'report' 'struct hid_report *'
    | | `-IntegerLiteral 0x158943328 <col:25> 'int' 1
    | `-CompoundStmt 0x1589434e8 <col:28, line:24:2>
    |   |-CallExpr 0x1589433e0 <line:22:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x1589433c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x158943368 <col:3> 'int ()' Function 0x158942ef0 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x158943410 <col:11> 'struct hid_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x158943388 <col:11> 'struct hid_device *' lvalue ParmVar 0x158928648 'hid' 'struct hid_device *'
    |   | `-ImplicitCastExpr 0x158943428 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x1589433a8 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x1589434d8 <line:23:3, col:11>
    |     `-UnaryOperator 0x1589434c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1589434a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x158943488 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x158943808 <line:26:2, line:29:2>
    | |-BinaryOperator 0x158943648 <line:26:6, col:39> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x1589435e0 <col:6, col:24> '<dependent type>' contains-errors lvalue ->report_count
    | | | `-ArraySubscriptExpr 0x1589435c0 <col:6, col:21> '<dependent type>' contains-errors lvalue
    | | |   |-ImplicitCastExpr 0x1589435a8 <col:6, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | |   | `-RecoveryExpr 0x158943560 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | |   |   `-DeclRefExpr 0x158943528 <col:6> 'struct hid_report *' lvalue Var 0x158940db8 'report' 'struct hid_report *'
    | | |   `-IntegerLiteral 0x158943588 <col:20> 'int' 0
    | | `-IntegerLiteral 0x158943628 <col:39> 'int' 6
    | `-CompoundStmt 0x1589437e8 <col:42, line:29:2>
    |   |-CallExpr 0x1589436e0 <line:27:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x1589436c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x158943668 <col:3> 'int ()' Function 0x158942ef0 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x158943710 <col:11> 'struct hid_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x158943688 <col:11> 'struct hid_device *' lvalue ParmVar 0x158928648 'hid' 'struct hid_device *'
    |   | `-ImplicitCastExpr 0x158943728 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x1589436a8 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x1589437d8 <line:28:3, col:11>
    |     `-UnaryOperator 0x1589437c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1589437a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x158943788 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1590098e0 <line:38:2, line:41:2>
    | |-ImplicitCastExpr 0x158943cd0 <line:38:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x158943cb0 <col:6> 'int' lvalue Var 0x158941898 'error' 'int'
    | `-CompoundStmt 0x1590098c0 <col:13, line:41:2>
    |   |-CallExpr 0x159009838 <line:39:3, col:13> 'int'
    |   | |-ImplicitCastExpr 0x159009820 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x158943dc8 <col:3> 'int ()' Function 0x158943d10 'kfree' 'int ()'
    |   | `-ImplicitCastExpr 0x159009860 <col:9> 'struct gaff_device *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x159009800 <col:9> 'struct gaff_device *' lvalue Var 0x158940bb8 'gaff' 'struct gaff_device *'
    |   `-ReturnStmt 0x1590098b0 <line:40:3, col:10>
    |     `-ImplicitCastExpr 0x159009898 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x159009878 <col:10> 'int' lvalue Var 0x158941898 'error' 'int'
    |-BinaryOperator 0x159009980 <line:43:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x159009938 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x159009900 <col:2> 'struct gaff_device *' lvalue Var 0x158940bb8 'gaff' 'struct gaff_device *'
    | `-DeclRefExpr 0x159009960 <col:17> 'struct hid_report *' lvalue Var 0x158940db8 'report' 'struct hid_report *'
    |-BinaryOperator 0x159009b60 <line:44:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x159009b20 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x159009b08 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x159009aa0 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x159009a80 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x159009a68 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x159009a00 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x1590099d8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x1590099a0 <col:2> 'struct gaff_device *' lvalue Var 0x158940bb8 'gaff' 'struct gaff_device *'
    | | |     `-IntegerLiteral 0x159009a48 <col:22> 'int' 0
    | | `-IntegerLiteral 0x159009ae8 <col:32> 'int' 0
    | `-IntegerLiteral 0x159009b40 <col:37> 'int' 81
    |-BinaryOperator 0x159009d40 <line:45:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x159009d00 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x159009ce8 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x159009c80 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x159009c60 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x159009c48 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x159009be0 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x159009bb8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x159009b80 <col:2> 'struct gaff_device *' lvalue Var 0x158940bb8 'gaff' 'struct gaff_device *'
    | | |     `-IntegerLiteral 0x159009c28 <col:22> 'int' 0
    | | `-IntegerLiteral 0x159009cc8 <col:32> 'int' 1
    | `-IntegerLiteral 0x159009d20 <col:37> 'int' 0
    |-BinaryOperator 0x159009f20 <line:46:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x159009ee0 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x159009ec8 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x159009e60 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x159009e40 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x159009e28 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x159009dc0 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x159009d98 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x159009d60 <col:2> 'struct gaff_device *' lvalue Var 0x158940bb8 'gaff' 'struct gaff_device *'
    | | |     `-IntegerLiteral 0x159009e08 <col:22> 'int' 0
    | | `-IntegerLiteral 0x159009ea8 <col:32> 'int' 2
    | `-IntegerLiteral 0x159009f00 <col:37> 'int' 0
    |-BinaryOperator 0x15900a100 <line:47:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x15900a0c0 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x15900a0a8 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x15900a040 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x15900a020 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x15900a008 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x159009fa0 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x159009f78 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x159009f40 <col:2> 'struct gaff_device *' lvalue Var 0x158940bb8 'gaff' 'struct gaff_device *'
    | | |     `-IntegerLiteral 0x159009fe8 <col:22> 'int' 0
    | | `-IntegerLiteral 0x15900a088 <col:32> 'int' 3
    | `-IntegerLiteral 0x15900a0e0 <col:37> 'int' 0
    |-BinaryOperator 0x15900a460 <line:50:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x15900a420 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x15900a408 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x15900a3a0 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x15900a380 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x15900a368 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x15900a300 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x15900a2d8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x15900a2a0 <col:2> 'struct gaff_device *' lvalue Var 0x158940bb8 'gaff' 'struct gaff_device *'
    | | |     `-IntegerLiteral 0x15900a348 <col:22> 'int' 0
    | | `-IntegerLiteral 0x15900a3e8 <col:32> 'int' 0
    | `-IntegerLiteral 0x15900a440 <col:37> 'int' 250
    |-BinaryOperator 0x15900a640 <line:51:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x15900a600 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x15900a5e8 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x15900a580 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x15900a560 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x15900a548 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x15900a4e0 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x15900a4b8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x15900a480 <col:2> 'struct gaff_device *' lvalue Var 0x158940bb8 'gaff' 'struct gaff_device *'
    | | |     `-IntegerLiteral 0x15900a528 <col:22> 'int' 0
    | | `-IntegerLiteral 0x15900a5c8 <col:32> 'int' 1
    | `-IntegerLiteral 0x15900a620 <col:37> 'int' 254
    |-CallExpr 0x15900a858 <line:55:2, col:21> 'int'
    | |-ImplicitCastExpr 0x15900a840 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15900a7e0 <col:2> 'int ()' Function 0x15900a728 'hid_info' 'int ()'
    | |-ImplicitCastExpr 0x15900a888 <col:11> 'struct hid_device *' <LValueToRValue>
    | | `-DeclRefExpr 0x15900a800 <col:11> 'struct hid_device *' lvalue ParmVar 0x158928648 'hid' 'struct hid_device *'
    | `-ImplicitCastExpr 0x15900a8a0 <col:16> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x15900a820 <col:16> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x15900a8d8 <line:57:2, col:9>
      `-IntegerLiteral 0x15900a8b8 <col:9> 'int' 0
