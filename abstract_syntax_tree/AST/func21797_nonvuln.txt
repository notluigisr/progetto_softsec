TranslationUnitDecl 0x146055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1460564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x146055bd0 '__int128'
|-TypedefDecl 0x146056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x146055bf0 'unsigned __int128'
|-TypedefDecl 0x146126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x146126000 'struct __NSConstantString_tag'
|   `-Record 0x146056580 '__NSConstantString_tag'
|-TypedefDecl 0x146126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146055d90 '__SVInt8_t'
|-TypedefDecl 0x146126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x146055db0 '__SVInt16_t'
|-TypedefDecl 0x146126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x146055dd0 '__SVInt32_t'
|-TypedefDecl 0x1461263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x146055df0 '__SVInt64_t'
|-TypedefDecl 0x146126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146055e10 '__SVUint8_t'
|-TypedefDecl 0x1461264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146055e30 '__SVUint16_t'
|-TypedefDecl 0x146126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146055e50 '__SVUint32_t'
|-TypedefDecl 0x146126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146055e70 '__SVUint64_t'
|-TypedefDecl 0x1461265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146055e90 '__SVFloat16_t'
|-TypedefDecl 0x146126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1461266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146055ed0 '__SVFloat64_t'
|-TypedefDecl 0x146126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x146126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1461267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x146126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1461268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x146126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x146126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1461269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x146126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x146126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x146126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x146126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x146126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x146126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146056090 '__clang_svint8x3_t'
|-TypedefDecl 0x146126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1460560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x146126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1460560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x146126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1460560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x146126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x146126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x146126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x146126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x146126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x146127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1460561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x146127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1460561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1461278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1460561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x146127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1461279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146056230 '__clang_svint16x4_t'
|-TypedefDecl 0x146127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146056250 '__clang_svint32x4_t'
|-TypedefDecl 0x146127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146056270 '__clang_svint64x4_t'
|-TypedefDecl 0x146127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x146127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1460562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x146127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1460562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x146127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1460562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x146127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x146127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x146127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x146127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x146127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146056390 '__SVBool_t'
|-TypedefDecl 0x146127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1460563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x146127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1460563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x146127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1460563f0 '__SVCount_t'
|-TypedefDecl 0x146127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x146127fb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-TypedefDecl 0x146128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x146127fb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-FunctionDecl 0x1461281a8 <dataset_diviso_filec/func21797_nonvuln.c:1:1, line:46:1> line:1:5 rad_dict_load 'int (const char *)'
| |-ParmVarDecl 0x1461280d8 <col:19, col:31> col:31 used fname 'const char *'
| `-CompoundStmt 0x1461430c0 <line:2:1, line:46:1>
|   |-DeclStmt 0x146128358 <line:3:2, col:12>
|   | `-VarDecl 0x1461282b8 <col:2, col:11> col:6 used r 'int' cinit
|   |   `-UnaryOperator 0x146128340 <col:10, col:11> 'int' prefix '-'
|   |     `-IntegerLiteral 0x146128320 <col:11> 'int' 1
|   |-IfStmt 0x1461421a8 <line:5:2, line:14:2>
|   | |-UnaryOperator 0x146128408 <line:5:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1461283f0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1461283d0 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x146142180 <col:13, line:14:2>
|   |   |-IfStmt 0x146141db0 <line:8:3, line:11:3>
|   |   | |-UnaryOperator 0x146141b18 <line:8:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x146141b00 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x146141ae0 <col:8> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x146141d90 <col:14, line:11:3>
|   |   |   |-CallExpr 0x146141d08 <line:9:4, col:19> 'int'
|   |   |   | |-ImplicitCastExpr 0x146141cf0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x146141c40 <col:4> 'int ()' Function 0x146141b88 'log_emerg' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x146141d30 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x146141ca0 <col:14> 'char[4]' lvalue "STR"
|   |   |   `-ReturnStmt 0x146141d80 <line:10:4, col:12>
|   |   |     `-UnaryOperator 0x146141d68 <col:11, col:12> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x146141d48 <col:12> 'int' 1
|   |   |-CallExpr 0x146141ff0 <line:12:3, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x146141eb0 <col:3> 'int ()' Function 0x146141df8 'INIT_LIST_HEAD' 'int ()'
|   |   | `-UnaryOperator 0x146141fd8 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-CXXDependentScopeMemberExpr 0x146141f90 <col:19, col:25> '<dependent type>' contains-errors lvalue ->items
|   |   |     `-RecoveryExpr 0x146141f70 <col:19> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x146142158 <line:13:3, col:32> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x146142018 <col:3> 'int ()' Function 0x146141df8 'INIT_LIST_HEAD' 'int ()'
|   |     `-UnaryOperator 0x146142140 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-CXXDependentScopeMemberExpr 0x1461420f8 <col:19, col:25> '<dependent type>' contains-errors lvalue ->vendors
|   |         `-RecoveryExpr 0x1461420d8 <col:19> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1461424c0 <line:17:2, line:20:2>
|   | |-UnaryOperator 0x146142388 <line:17:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x146142370 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x146142350 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1461424a0 <col:13, line:20:2>
|   |   |-CallExpr 0x1461423f8 <line:18:3, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x1461423e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1461423a0 <col:3> 'int ()' Function 0x146141b88 'log_emerg' 'int ()'
|   |   | `-ImplicitCastExpr 0x146142420 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x1461423c0 <col:13> 'char[4]' lvalue "STR"
|   |   `-GotoStmt 0x146142488 <line:19:3, col:8> 'out_free_dict' 0x146142438
|   |-BinaryOperator 0x1461425c8 <line:22:2, col:27> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x1461424e0 <col:2> 'const char *' lvalue ParmVar 0x1461280d8 'fname' 'const char *'
|   | `-CallExpr 0x1461425a0 <col:11, col:27> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x146142500 <col:11> 'int ()' Function 0x1461421f0 '_malloc' 'int ()'
|   |   `-RecoveryExpr 0x146142580 <col:19> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1461427a0 <line:23:2, line:26:2>
|   | |-UnaryOperator 0x146142668 <line:23:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x146142650 <col:7> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x146142630 <col:7> 'const char *' lvalue ParmVar 0x1461280d8 'fname' 'const char *'
|   | `-CompoundStmt 0x146142780 <col:15, line:26:2>
|   |   |-CallExpr 0x1461426d8 <line:24:3, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x1461426c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x146142680 <col:3> 'int ()' Function 0x146141b88 'log_emerg' 'int ()'
|   |   | `-ImplicitCastExpr 0x146142700 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x1461426a0 <col:13> 'char[4]' lvalue "STR"
|   |   `-GotoStmt 0x146142768 <line:25:3, col:8> 'out_free_path' 0x146142718
|   |-IfStmt 0x146142968 <line:29:2, line:32:2>
|   | |-RecoveryExpr 0x146142828 <line:29:6, col:7> '_Bool' contains-errors
|   | `-CompoundStmt 0x146142948 <col:12, line:32:2>
|   |   |-CallExpr 0x1461428a0 <line:30:3, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x146142888 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x146142848 <col:3> 'int ()' Function 0x146141b88 'log_emerg' 'int ()'
|   |   | `-ImplicitCastExpr 0x1461428c8 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x146142868 <col:13> 'char[4]' lvalue "STR"
|   |   `-GotoStmt 0x146142930 <line:31:3, col:8> 'out_free_fname1' 0x1461428e0
|   |-BinaryOperator 0x146142d88 <line:36:2, col:21> 'int' '='
|   | |-DeclRefExpr 0x146142bf0 <col:2> 'int' lvalue Var 0x1461282b8 'r' 'int'
|   | `-CallExpr 0x146142d48 <col:6, col:21> 'int'
|   |   |-ImplicitCastExpr 0x146142d30 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x146142cf0 <col:6> 'int ()' Function 0x146142c38 'dict_load' 'int ()'
|   |   `-ImplicitCastExpr 0x146142d70 <col:16> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x146142d10 <col:16> 'const char *' lvalue ParmVar 0x1461280d8 'fname' 'const char *'
|   |-LabelStmt 0x146142eb0 <line:38:1, col:16> 'out_free_fname1'
|   | `-NullStmt 0x146142ea8 <col:16>
|   |-LabelStmt 0x146142ef8 <line:40:1, col:14> 'out_free_path'
|   | `-NullStmt 0x146142ef0 <col:14>
|   |-LabelStmt 0x146143058 <line:42:1, col:14> 'out_free_dict'
|   | `-NullStmt 0x146143050 <col:14>
|   `-ReturnStmt 0x1461430b0 <line:45:2, col:9>
|     `-ImplicitCastExpr 0x146143098 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x146143078 <col:9> 'int' lvalue Var 0x1461282b8 'r' 'int'
|-FunctionDecl 0x146141890 <line:6:10> col:10 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x146141990 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x146141938 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x146141a00 <col:10> Implicit 1
`-FunctionDecl 0x1461429d0 <line:34:2> col:2 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x146142ad0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x146142b38 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x146142a78 <<invalid sloc>> Implicit 885
