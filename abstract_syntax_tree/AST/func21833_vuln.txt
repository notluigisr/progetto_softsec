TranslationUnitDecl 0x138855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1388564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x138855bd0 '__int128'
|-TypedefDecl 0x138856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x138855bf0 'unsigned __int128'
|-TypedefDecl 0x138926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x138926000 'struct __NSConstantString_tag'
|   `-Record 0x138856580 '__NSConstantString_tag'
|-TypedefDecl 0x138926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x138855d90 '__SVInt8_t'
|-TypedefDecl 0x138926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x138855db0 '__SVInt16_t'
|-TypedefDecl 0x138926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x138855dd0 '__SVInt32_t'
|-TypedefDecl 0x1389263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x138855df0 '__SVInt64_t'
|-TypedefDecl 0x138926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x138855e10 '__SVUint8_t'
|-TypedefDecl 0x1389264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x138855e30 '__SVUint16_t'
|-TypedefDecl 0x138926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x138855e50 '__SVUint32_t'
|-TypedefDecl 0x138926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x138855e70 '__SVUint64_t'
|-TypedefDecl 0x1389265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x138855e90 '__SVFloat16_t'
|-TypedefDecl 0x138926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x138855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1389266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x138855ed0 '__SVFloat64_t'
|-TypedefDecl 0x138926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x138855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x138926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x138855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1389267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x138855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x138926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x138855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1389268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x138855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x138926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x138855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x138926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x138855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1389269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x138855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x138926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x138855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x138926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x138856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x138926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x138856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x138926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x138856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x138926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x138856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x138926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x138856090 '__clang_svint8x3_t'
|-TypedefDecl 0x138926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1388560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x138926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1388560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x138926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1388560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x138926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x138856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x138926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x138856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x138926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x138856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x138926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x138856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x138926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x138856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x138927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1388561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x138927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1388561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1389278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1388561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x138927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x138856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1389279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x138856230 '__clang_svint16x4_t'
|-TypedefDecl 0x138927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x138856250 '__clang_svint32x4_t'
|-TypedefDecl 0x138927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x138856270 '__clang_svint64x4_t'
|-TypedefDecl 0x138927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x138856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x138927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1388562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x138927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1388562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x138927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1388562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x138927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x138856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x138927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x138856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x138927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x138856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x138927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x138856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x138927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x138856390 '__SVBool_t'
|-TypedefDecl 0x138927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1388563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x138927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1388563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x138927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1388563f0 '__SVCount_t'
|-TypedefDecl 0x138927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x138927fb0 'char *'
|   `-BuiltinType 0x1388556b0 'char'
|-TypedefDecl 0x138928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x138927fb0 'char *'
|   `-BuiltinType 0x1388556b0 'char'
`-FunctionDecl 0x138940a00 <dataset_diviso_filec/func21833_vuln.c:1:1, line:50:1> line:1:5 expand_downwards 'int (struct vm_area_struct *, unsigned long)'
  |-ParmVarDecl 0x138928648 <col:22, col:45> col:45 used vma 'struct vm_area_struct *'
  |-ParmVarDecl 0x1389286c8 <line:2:8, col:22> col:22 used address 'unsigned long'
  `-CompoundStmt 0x138943900 <line:3:1, line:50:1>
    |-DeclStmt 0x138940d48 <line:4:2, col:35>
    | |-RecordDecl 0x138940b00 <col:2, col:9> col:9 struct mm_struct
    | `-VarDecl 0x138940c68 <col:2, col:30> col:20 used mm 'struct mm_struct *' cinit
    |   `-RecoveryExpr 0x138940d08 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x138940cd0 <col:25> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |-DeclStmt 0x138940de0 <line:5:2, col:11>
    | `-VarDecl 0x138940d78 <col:2, col:6> col:6 used error 'int'
    |-CompoundAssignOperator 0x138940e98 <line:7:2, col:13> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x138940df8 <col:2> 'unsigned long' lvalue ParmVar 0x1389286c8 'address' 'unsigned long'
    | `-RecoveryExpr 0x138940e78 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1389410c8 <line:8:2, col:36> 'int' '='
    | |-DeclRefExpr 0x138940ec8 <col:2> 'int' lvalue Var 0x138940d78 'error' 'int'
    | `-CallExpr 0x138941088 <col:10, col:36> 'int'
    |   |-ImplicitCastExpr 0x138941070 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x138941000 <col:10> 'int ()' Function 0x138940f48 'security_mmap_addr' 'int ()'
    |   `-ImplicitCastExpr 0x1389410b0 <col:29> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x138941020 <col:29> 'unsigned long' lvalue ParmVar 0x1389286c8 'address' 'unsigned long'
    |-IfStmt 0x138941168 <line:9:2, line:10:10>
    | |-ImplicitCastExpr 0x138941108 <line:9:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1389410e8 <col:6> 'int' lvalue Var 0x138940d78 'error' 'int'
    | `-ReturnStmt 0x138941158 <line:10:3, col:10>
    |   `-ImplicitCastExpr 0x138941140 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x138941120 <col:10> 'int' lvalue Var 0x138940d78 'error' 'int'
    |-IfStmt 0x1389414e8 <line:13:2, line:14:11>
    | |-CallExpr 0x138941418 <line:13:6, col:36> 'int'
    | | |-ImplicitCastExpr 0x138941400 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x138941268 <col:6> 'int ()' Function 0x1389411b0 'unlikely' 'int ()'
    | | `-CallExpr 0x1389413c0 <col:15, col:35> 'int'
    | |   |-ImplicitCastExpr 0x1389413a8 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x138941368 <col:15> 'int ()' Function 0x1389412b0 'anon_vma_prepare' 'int ()'
    | |   `-ImplicitCastExpr 0x1389413e8 <col:32> 'struct vm_area_struct *' <LValueToRValue>
    | |     `-DeclRefExpr 0x138941388 <col:32> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    | `-ReturnStmt 0x1389414d8 <line:14:3, col:11>
    |   `-UnaryOperator 0x1389414c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1389414a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x138941488 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x138941668 <line:17:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1389415e8 <col:2> 'int ()' Function 0x138941530 'anon_vma_lock_write' 'int ()'
    | `-RecoveryExpr 0x138941640 <col:22, col:27> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x138941608 <col:22> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |-IfStmt 0x1389433e8 <line:20:2, line:45:2>
    | |-BinaryOperator 0x138941710 <line:20:6, col:21> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x138941690 <col:6> 'unsigned long' lvalue ParmVar 0x1389286c8 'address' 'unsigned long'
    | | `-RecoveryExpr 0x1389416e8 <col:16, col:21> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1389416b0 <col:16> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    | `-CompoundStmt 0x1389433b0 <col:31, line:45:2>
    |   |-DeclStmt 0x138941848 <line:21:3, col:27>
    |   | |-VarDecl 0x138941748 <col:3, col:17> col:17 used size 'unsigned long'
    |   | `-VarDecl 0x1389417c8 <col:3, col:23> col:23 used grow 'unsigned long'
    |   |-BinaryOperator 0x138941920 <line:23:3, col:24> 'unsigned long' contains-errors '='
    |   | |-DeclRefExpr 0x138941860 <col:3> 'unsigned long' lvalue Var 0x138941748 'size' 'unsigned long'
    |   | `-BinaryOperator 0x138941900 <col:10, col:24> '<dependent type>' contains-errors '-'
    |   |   |-RecoveryExpr 0x1389418b8 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x138941880 <col:10> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |   |   `-DeclRefExpr 0x1389418e0 <col:24> 'unsigned long' lvalue ParmVar 0x1389286c8 'address' 'unsigned long'
    |   |-BinaryOperator 0x138941ab8 <line:24:3, col:39> 'unsigned long' contains-errors '='
    |   | |-DeclRefExpr 0x138941940 <col:3> 'unsigned long' lvalue Var 0x1389417c8 'grow' 'unsigned long'
    |   | `-BinaryOperator 0x138941a98 <col:10, col:39> '<dependent type>' contains-errors '>>'
    |   |   |-ParenExpr 0x138941a00 <col:10, col:34> '<dependent type>' contains-errors
    |   |   | `-BinaryOperator 0x1389419e0 <col:11, col:27> '<dependent type>' contains-errors '-'
    |   |   |   |-RecoveryExpr 0x138941998 <col:11, col:16> '<dependent type>' contains-errors lvalue
    |   |   |   | `-DeclRefExpr 0x138941960 <col:11> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |   |   |   `-DeclRefExpr 0x1389419c0 <col:27> 'unsigned long' lvalue ParmVar 0x1389286c8 'address' 'unsigned long'
    |   |   `-RecoveryExpr 0x138941a78 <col:39> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x138941bb0 <line:26:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x138941ad8 <col:3> 'int' lvalue Var 0x138940d78 'error' 'int'
    |   | `-UnaryOperator 0x138941b98 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x138941b80 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x138941b60 <col:12> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x138943390 <line:27:3, line:44:3>
    |     |-BinaryOperator 0x138941c50 <line:27:7, col:20> 'int' contains-errors '<='
    |     | |-DeclRefExpr 0x138941bd0 <col:7> 'unsigned long' lvalue Var 0x1389417c8 'grow' 'unsigned long'
    |     | `-RecoveryExpr 0x138941c28 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x138941bf0 <col:15> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |     `-CompoundStmt 0x138943370 <col:30, line:44:3>
    |       |-BinaryOperator 0x138941e88 <line:28:4, col:45> 'int' '='
    |       | |-DeclRefExpr 0x138941c70 <col:4> 'int' lvalue Var 0x138940d78 'error' 'int'
    |       | `-CallExpr 0x138941e08 <col:12, col:45> 'int'
    |       |   |-ImplicitCastExpr 0x138941df0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x138941d70 <col:12> 'int ()' Function 0x138941cb8 'acct_stack_growth' 'int ()'
    |       |   |-ImplicitCastExpr 0x138941e40 <col:30> 'struct vm_area_struct *' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x138941d90 <col:30> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |       |   |-ImplicitCastExpr 0x138941e58 <col:35> 'unsigned long' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x138941db0 <col:35> 'unsigned long' lvalue Var 0x138941748 'size' 'unsigned long'
    |       |   `-ImplicitCastExpr 0x138941e70 <col:41> 'unsigned long' <LValueToRValue>
    |       |     `-DeclRefExpr 0x138941dd0 <col:41> 'unsigned long' lvalue Var 0x1389417c8 'grow' 'unsigned long'
    |       `-IfStmt 0x138943350 <line:29:4, line:43:4>
    |         |-UnaryOperator 0x138941ee0 <line:29:8, col:9> 'int' prefix '!' cannot overflow
    |         | `-ImplicitCastExpr 0x138941ec8 <col:9> 'int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x138941ea8 <col:9> 'int' lvalue Var 0x138940d78 'error' 'int'
    |         `-CompoundStmt 0x1389432f0 <col:16, line:43:4>
    |           |-CallExpr 0x138942070 <line:31:5, col:35> '<dependent type>' contains-errors
    |           | |-DeclRefExpr 0x138941fd8 <col:5> 'int ()' Function 0x138941f20 'spin_lock' 'int ()'
    |           | `-UnaryOperator 0x138942058 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |           |   `-RecoveryExpr 0x138942030 <col:16, col:20> '<dependent type>' contains-errors lvalue
    |           |     `-DeclRefExpr 0x138941ff8 <col:16> 'struct mm_struct *' contains-errors lvalue Var 0x138940c68 'mm' 'struct mm_struct *'
    |           |-IfStmt 0x138942220 <line:32:5, line:33:23>
    |           | |-BinaryOperator 0x138942150 <line:32:9, col:25> '<dependent type>' contains-errors '&'
    |           | | |-RecoveryExpr 0x1389420d0 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |           | | | `-DeclRefExpr 0x138942098 <col:9> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |           | | `-RecoveryExpr 0x138942130 <col:25> '<dependent type>' contains-errors lvalue
    |           | `-CompoundAssignOperator 0x1389421f0 <line:33:6, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |           |   |-RecoveryExpr 0x1389421a8 <col:6, col:10> '<dependent type>' contains-errors lvalue
    |           |   | `-DeclRefExpr 0x138942170 <col:6> 'struct mm_struct *' contains-errors lvalue Var 0x138940c68 'mm' 'struct mm_struct *'
    |           |   `-DeclRefExpr 0x1389421d0 <col:23> 'unsigned long' lvalue Var 0x1389417c8 'grow' 'unsigned long'
    |           |-CallExpr 0x1389423e0 <line:34:5, col:44> '<dependent type>' contains-errors
    |           | |-DeclRefExpr 0x138942320 <col:5> 'int ()' Function 0x138942268 'vm_stat_account' 'int ()'
    |           | |-DeclRefExpr 0x138942340 <col:21> 'struct mm_struct *' contains-errors lvalue Var 0x138940c68 'mm' 'struct mm_struct *'
    |           | |-RecoveryExpr 0x138942398 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |           | | `-DeclRefExpr 0x138942360 <col:25> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |           | `-DeclRefExpr 0x1389423c0 <col:40> 'unsigned long' lvalue Var 0x1389417c8 'grow' 'unsigned long'
    |           |-CallExpr 0x138942550 <line:35:5, col:46> 'int'
    |           | |-ImplicitCastExpr 0x138942538 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |           | | `-DeclRefExpr 0x1389424f8 <col:5> 'int ()' Function 0x138942440 'anon_vma_interval_tree_pre_update_vma' 'int ()'
    |           | `-ImplicitCastExpr 0x138942578 <col:43> 'struct vm_area_struct *' <LValueToRValue>
    |           |   `-DeclRefExpr 0x138942518 <col:43> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |           |-BinaryOperator 0x138942610 <line:36:5, col:21> '<dependent type>' contains-errors '='
    |           | |-RecoveryExpr 0x1389425c8 <col:5, col:10> '<dependent type>' contains-errors lvalue
    |           | | `-DeclRefExpr 0x138942590 <col:5> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |           | `-DeclRefExpr 0x1389425f0 <col:21> 'unsigned long' lvalue ParmVar 0x1389286c8 'address' 'unsigned long'
    |           |-CompoundAssignOperator 0x1389426b0 <line:37:5, col:22> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |           | |-RecoveryExpr 0x138942668 <col:5, col:10> '<dependent type>' contains-errors lvalue
    |           | | `-DeclRefExpr 0x138942630 <col:5> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |           | `-DeclRefExpr 0x138942690 <col:22> 'unsigned long' lvalue Var 0x1389417c8 'grow' 'unsigned long'
    |           |-CallExpr 0x138942818 <line:38:5, col:47> 'int'
    |           | |-ImplicitCastExpr 0x138942800 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |           | | `-DeclRefExpr 0x1389427c0 <col:5> 'int ()' Function 0x138942708 'anon_vma_interval_tree_post_update_vma' 'int ()'
    |           | `-ImplicitCastExpr 0x138942840 <col:44> 'struct vm_area_struct *' <LValueToRValue>
    |           |   `-DeclRefExpr 0x1389427e0 <col:44> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |           |-CallExpr 0x138942990 <line:39:5, col:23> 'int'
    |           | |-ImplicitCastExpr 0x138942978 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |           | | `-DeclRefExpr 0x138942938 <col:5> 'int ()' Function 0x138942880 'vma_gap_update' 'int ()'
    |           | `-ImplicitCastExpr 0x1389429b8 <col:20> 'struct vm_area_struct *' <LValueToRValue>
    |           |   `-DeclRefExpr 0x138942958 <col:20> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |           |-CallExpr 0x138943150 <line:40:5, col:37> '<dependent type>' contains-errors
    |           | |-DeclRefExpr 0x1389430b8 <col:5> 'int ()' Function 0x138943000 'spin_unlock' 'int ()'
    |           | `-UnaryOperator 0x138943138 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |           |   `-RecoveryExpr 0x138943110 <col:18, col:22> '<dependent type>' contains-errors lvalue
    |           |     `-DeclRefExpr 0x1389430d8 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x138940c68 'mm' 'struct mm_struct *'
    |           `-CallExpr 0x1389432b0 <line:42:5, col:24> 'int'
    |             |-ImplicitCastExpr 0x138943298 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x138943258 <col:5> 'int ()' Function 0x1389431a0 'perf_event_mmap' 'int ()'
    |             `-ImplicitCastExpr 0x1389432d8 <col:21> 'struct vm_area_struct *' <LValueToRValue>
    |               `-DeclRefExpr 0x138943278 <col:21> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |-CallExpr 0x138943568 <line:46:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1389434e8 <col:2> 'int ()' Function 0x138943430 'anon_vma_unlock_write' 'int ()'
    | `-RecoveryExpr 0x138943540 <col:24, col:29> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x138943508 <col:24> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |-CallExpr 0x138943710 <line:47:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x138943670 <col:2> 'int ()' Function 0x1389435b8 'khugepaged_enter_vma_merge' 'int ()'
    | |-DeclRefExpr 0x138943690 <col:29> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    | `-RecoveryExpr 0x1389436e8 <col:34, col:39> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1389436b0 <col:34> 'struct vm_area_struct *' lvalue ParmVar 0x138928648 'vma' 'struct vm_area_struct *'
    |-CallExpr 0x138943878 <line:48:2, col:16> 'int' contains-errors
    | |-ImplicitCastExpr 0x138943860 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x138943820 <col:2> 'int ()' Function 0x138943768 'validate_mm' 'int ()'
    | `-ImplicitCastExpr 0x1389438a0 <col:14> 'struct mm_struct *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x138943840 <col:14> 'struct mm_struct *' contains-errors lvalue Var 0x138940c68 'mm' 'struct mm_struct *'
    `-ReturnStmt 0x1389438f0 <line:49:2, col:9>
      `-ImplicitCastExpr 0x1389438d8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1389438b8 <col:9> 'int' lvalue Var 0x138940d78 'error' 'int'
