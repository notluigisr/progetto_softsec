TranslationUnitDecl 0x127055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1270564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127055bd0 '__int128'
|-TypedefDecl 0x127056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127055bf0 'unsigned __int128'
|-TypedefDecl 0x12780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12780bc00 'struct __NSConstantString_tag'
|   `-Record 0x127056580 '__NSConstantString_tag'
|-TypedefDecl 0x12780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055d90 '__SVInt8_t'
|-TypedefDecl 0x12780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127055db0 '__SVInt16_t'
|-TypedefDecl 0x12780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127055dd0 '__SVInt32_t'
|-TypedefDecl 0x12780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127055df0 '__SVInt64_t'
|-TypedefDecl 0x12780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055e10 '__SVUint8_t'
|-TypedefDecl 0x12780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055e30 '__SVUint16_t'
|-TypedefDecl 0x12780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055e50 '__SVUint32_t'
|-TypedefDecl 0x12780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055e70 '__SVUint64_t'
|-TypedefDecl 0x12780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055e90 '__SVFloat16_t'
|-TypedefDecl 0x12780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1270560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1270560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1270560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1270561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1270561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1270561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1270562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1270562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1270562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127056390 '__SVBool_t'
|-TypedefDecl 0x12780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1270563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1270563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1270563f0 '__SVCount_t'
|-TypedefDecl 0x12780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-TypedefDecl 0x12780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
`-FunctionDecl 0x12780df18 <dataset_diviso_filec/func21540_vuln.c:1:1, line:47:1> line:1:1 invalid dissect_ac_if_hdr_body 'int (int *, int, int *)'
  |-ParmVarDecl 0x12780dd28 <col:24, col:34> col:34 invalid tvb 'int *'
  |-ParmVarDecl 0x12780dda8 <col:39, col:44> col:44 used offset 'int'
  |-ParmVarDecl 0x12780de28 <col:52, col:65> col:65 invalid pinfo 'int *'
  `-CompoundStmt 0x127829800 <line:3:1, line:47:1>
    |-DeclStmt 0x12780e058 <line:4:5, col:26>
    | `-VarDecl 0x12780dff0 <col:5, col:14> col:14 used offset_start 'int'
    |-DeclStmt 0x12780e0f0 <line:7:5, col:17>
    | `-VarDecl 0x12780e088 <col:5, col:14> col:14 used ver 'double'
    |-BinaryOperator 0x12780e178 <line:12:5, col:20> 'int' '='
    | |-DeclRefExpr 0x12780e120 <col:5> 'int' lvalue Var 0x12780dff0 'offset_start' 'int'
    | `-ImplicitCastExpr 0x12780e160 <col:20> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12780e140 <col:20> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    |-BinaryOperator 0x127827b78 <line:16:5, col:61> 'double' contains-errors '='
    | |-DeclRefExpr 0x127827958 <col:5> 'double' lvalue Var 0x12780e088 'ver' 'double'
    | `-BinaryOperator 0x127827b58 <col:11, col:61> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x127827ab0 <col:11> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x127827b38 <col:23, col:61> '<dependent type>' contains-errors '/'
    |     |-CallExpr 0x127827b10 <col:23, col:57> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x127827990 <col:23> 'int ()' Function 0x127827800 'USB_AUDIO_BCD44_TO_DEC' 'int ()'
    |     | `-BinaryOperator 0x127827af0 <col:46, col:53> '<dependent type>' contains-errors '&'
    |     |   |-RecoveryExpr 0x127827ad0 <col:46> '<dependent type>' contains-errors lvalue
    |     |   `-IntegerLiteral 0x1278279c8 <col:53> 'int' 255
    |     `-FloatingLiteral 0x127827a30 <col:61> 'double' 1.000000e+02
    |-CallExpr 0x127827e70 <line:18:5, line:19:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x127827c78 <line:18:5> 'int ()' Function 0x127827bc0 'proto_tree_add_double_format_value' 'int ()'
    | |-RecoveryExpr 0x127827e30 <col:40> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x127827e50 <col:46> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x127827cc8 <line:19:13> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x127827ce8 <col:18> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    | |-IntegerLiteral 0x127827d08 <col:26> 'int' 2
    | |-DeclRefExpr 0x127827d28 <col:29> 'double' lvalue Var 0x12780e088 'ver' 'double'
    | |-StringLiteral 0x127827d90 <col:34> 'char[4]' lvalue "STR"
    | `-DeclRefExpr 0x127827db0 <col:41> 'double' lvalue Var 0x12780e088 'ver' 'double'
    |-IfStmt 0x127828168 <line:21:5, line:25:5>
    | |-RecoveryExpr 0x127827ed0 <line:21:8, col:9> '_Bool' contains-errors
    | `-CompoundStmt 0x127828158 <col:26, line:25:5>
    |-CompoundAssignOperator 0x1278281c8 <line:27:5, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x127828188 <col:5> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    | `-IntegerLiteral 0x1278281a8 <col:15> 'int' 2
    |-IfStmt 0x127828740 <line:30:5, line:44:5>
    | |-RecoveryExpr 0x127828218 <line:30:9, col:20> '_Bool' contains-errors
    | `-CompoundStmt 0x127828720 <col:23, line:44:5>
    |   |-CompoundAssignOperator 0x1278283d8 <line:33:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x127828398 <col:9> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    |   | `-IntegerLiteral 0x1278283b8 <col:19> 'int' 2
    |   `-UnaryOperator 0x127828618 <line:37:9, col:15> 'int' postfix '++'
    |     `-DeclRefExpr 0x1278285f8 <col:9> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    `-ReturnStmt 0x1278287f0 <line:46:5, col:19>
      `-BinaryOperator 0x1278287d0 <col:12, col:19> 'int' '-'
        |-ImplicitCastExpr 0x1278287a0 <col:12> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x127828760 <col:12> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
        `-ImplicitCastExpr 0x1278287b8 <col:19> 'int' <LValueToRValue>
          `-DeclRefExpr 0x127828780 <col:19> 'int' lvalue Var 0x12780dff0 'offset_start' 'int'
