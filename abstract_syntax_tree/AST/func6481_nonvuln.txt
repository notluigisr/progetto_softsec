TranslationUnitDecl 0x13e841808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e8426b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e841dd0 '__int128'
|-TypedefDecl 0x13e842728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e841df0 'unsigned __int128'
|-TypedefDecl 0x12e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13e842780 '__NSConstantString_tag'
|-TypedefDecl 0x12e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e841f90 '__SVInt8_t'
|-TypedefDecl 0x12e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e841fb0 '__SVInt16_t'
|-TypedefDecl 0x12e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e841fd0 '__SVInt32_t'
|-TypedefDecl 0x12e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e841ff0 '__SVInt64_t'
|-TypedefDecl 0x12e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e842010 '__SVUint8_t'
|-TypedefDecl 0x12e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e842030 '__SVUint16_t'
|-TypedefDecl 0x12e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e842050 '__SVUint32_t'
|-TypedefDecl 0x12e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e842070 '__SVUint64_t'
|-TypedefDecl 0x12e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e842090 '__SVFloat16_t'
|-TypedefDecl 0x12e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e8420b0 '__SVFloat32_t'
|-TypedefDecl 0x12e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e8420d0 '__SVFloat64_t'
|-TypedefDecl 0x12e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e8420f0 '__SVBfloat16_t'
|-TypedefDecl 0x12e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e842110 '__clang_svint8x2_t'
|-TypedefDecl 0x12e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e842130 '__clang_svint16x2_t'
|-TypedefDecl 0x12e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e842150 '__clang_svint32x2_t'
|-TypedefDecl 0x12e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e842170 '__clang_svint64x2_t'
|-TypedefDecl 0x12e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e842190 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e8421b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e8421d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e8421f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e842210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e842230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e842250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e842270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e842290 '__clang_svint8x3_t'
|-TypedefDecl 0x12e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e8422b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e8422d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e8422f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e842310 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e842330 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e842350 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e842370 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e842390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e8423b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e8423d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e8423f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e842410 '__clang_svint8x4_t'
|-TypedefDecl 0x12e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e842430 '__clang_svint16x4_t'
|-TypedefDecl 0x12e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e842450 '__clang_svint32x4_t'
|-TypedefDecl 0x12e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e842470 '__clang_svint64x4_t'
|-TypedefDecl 0x12e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e842490 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e8424b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e8424d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e8424f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e842510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e842530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e842550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e842570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e842590 '__SVBool_t'
|-TypedefDecl 0x12e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e8425b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e8425d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e8425f0 '__SVCount_t'
|-TypedefDecl 0x12e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e80dbb0 'char *'
|   `-BuiltinType 0x13e8418b0 'char'
|-TypedefDecl 0x12e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e80dbb0 'char *'
|   `-BuiltinType 0x13e8418b0 'char'
`-FunctionDecl 0x12e80dd10 <dataset_diviso_filec/func6481_nonvuln.c:1:2, line:16:2> line:1:7 testUriHostRegname 'void ()'
  `-CompoundStmt 0x14000a600 <col:28, line:16:2>
    |-DeclStmt 0x12e80df60 <line:6:3, col:35>
    | `-VarDecl 0x12e80de60 <col:3, col:30> col:22 used input 'const char *const' cinit
    |   `-ImplicitCastExpr 0x12e80df48 <col:30> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x12e80df30 <col:30> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x12e80df10 <col:30> 'char[4]' lvalue "STR"
    |-CallExpr 0x12e80e320 <line:7:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e80e090 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'
    | `-BinaryOperator 0x12e80e300 <col:15, col:47> 'int' contains-errors '=='
    |   |-IntegerLiteral 0x12e80e0b0 <col:15> 'int' 0
    |   `-CallExpr 0x12e80e2d0 <col:20, col:47> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12e80e1b0 <col:20> 'int ()' Function 0x12e80e0f8 'uriParseUriA' 'int ()'
    |     |-UnaryOperator 0x12e80e2b8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-RecoveryExpr 0x12e80e298 <col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e80e200 <col:42> 'const char *const' lvalue Var 0x12e80de60 'input' 'const char *const'
    |-CallExpr 0x12e827a70 <line:9:3, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e80e348 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'
    | `-BinaryOperator 0x12e827a50 <col:15, col:50> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x12e8279b0 <col:15, col:29> '<dependent type>' contains-errors lvalue .first
    |   | `-CXXDependentScopeMemberExpr 0x12e827968 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostText
    |   |   `-RecoveryExpr 0x12e827948 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x12e827a30 <col:38, col:50> 'const char *' '+'
    |     |-BinaryOperator 0x12e827a10 <col:38, col:46> 'const char *' '+'
    |     | |-ImplicitCastExpr 0x12e8279f8 <col:38> 'const char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12e827848 <col:38> 'const char *const' lvalue Var 0x12e80de60 'input' 'const char *const'
    |     | `-IntegerLiteral 0x12e827868 <col:46> 'int' 4
    |     `-IntegerLiteral 0x12e8278c0 <col:50> 'int' 3
    |-CallExpr 0x12e827de8 <line:10:3, col:60> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e827a98 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'
    | `-BinaryOperator 0x12e827dc8 <col:15, col:58> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x12e827d08 <col:15, col:29> '<dependent type>' contains-errors lvalue .afterLast
    |   | `-CXXDependentScopeMemberExpr 0x12e827cc0 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostText
    |   |   `-RecoveryExpr 0x12e827ca0 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x12e827da8 <col:42, col:58> 'const char *' '+'
    |     |-BinaryOperator 0x12e827d88 <col:42, col:54> 'const char *' '+'
    |     | |-BinaryOperator 0x12e827d68 <col:42, col:50> 'const char *' '+'
    |     | | |-ImplicitCastExpr 0x12e827d50 <col:42> 'const char *' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x12e827b60 <col:42> 'const char *const' lvalue Var 0x12e80de60 'input' 'const char *const'
    |     | | `-IntegerLiteral 0x12e827b80 <col:50> 'int' 4
    |     | `-IntegerLiteral 0x12e827bd8 <col:54> 'int' 3
    |     `-IntegerLiteral 0x12e827c18 <col:58> 'int' 11
    |-CallExpr 0x12e828028 <line:11:3, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e827e10 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'
    | `-BinaryOperator 0x12e828008 <col:15, col:36> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x12e827fa0 <col:15, col:29> '<dependent type>' contains-errors lvalue .ip4
    |   | `-CXXDependentScopeMemberExpr 0x12e827f58 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostData
    |   |   `-RecoveryExpr 0x12e827f38 <col:15> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12e827fe8 <col:36> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12e828268 <line:12:3, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e828050 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'
    | `-BinaryOperator 0x12e828248 <col:15, col:36> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x12e8281e0 <col:15, col:29> '<dependent type>' contains-errors lvalue .ip6
    |   | `-CXXDependentScopeMemberExpr 0x12e828198 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostData
    |   |   `-RecoveryExpr 0x12e828178 <col:15> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12e828228 <col:36> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12e828538 <line:13:3, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e828290 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'
    | `-BinaryOperator 0x12e828518 <col:15, col:47> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x12e8284b0 <col:15, col:38> '<dependent type>' contains-errors lvalue .first
    |   | `-CXXDependentScopeMemberExpr 0x12e828468 <col:15, col:29> '<dependent type>' contains-errors lvalue .ipFuture
    |   |   `-CXXDependentScopeMemberExpr 0x12e828420 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostData
    |   |     `-RecoveryExpr 0x12e828400 <col:15> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12e8284f8 <col:47> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14000a420 <line:14:3, col:55> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e828560 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'
    | `-BinaryOperator 0x14000a400 <col:15, col:51> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x12e828780 <col:15, col:38> '<dependent type>' contains-errors lvalue .afterLast
    |   | `-CXXDependentScopeMemberExpr 0x12e828738 <col:15, col:29> '<dependent type>' contains-errors lvalue .ipFuture
    |   |   `-CXXDependentScopeMemberExpr 0x12e8286f0 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostData
    |   |     `-RecoveryExpr 0x12e8286d0 <col:15> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12e8287c8 <col:51> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x14000a5d8 <line:15:3, col:27> '<dependent type>' contains-errors
      |-DeclRefExpr 0x14000a528 <col:3> 'int ()' Function 0x14000a470 'uriFreeUriMembersA' 'int ()'
      `-UnaryOperator 0x14000a5c0 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-RecoveryExpr 0x14000a5a0 <col:23> '<dependent type>' contains-errors lvalue
