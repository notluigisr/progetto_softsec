TranslationUnitDecl 0x136855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1368564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136855bd0 '__int128'
|-TypedefDecl 0x136856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136855bf0 'unsigned __int128'
|-TypedefDecl 0x137083430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137083200 'struct __NSConstantString_tag'
|   `-Record 0x136856580 '__NSConstantString_tag'
|-TypedefDecl 0x137083498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136855d90 '__SVInt8_t'
|-TypedefDecl 0x137083500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136855db0 '__SVInt16_t'
|-TypedefDecl 0x137083568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136855dd0 '__SVInt32_t'
|-TypedefDecl 0x1370835d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136855df0 '__SVInt64_t'
|-TypedefDecl 0x137083638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136855e10 '__SVUint8_t'
|-TypedefDecl 0x1370836a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136855e30 '__SVUint16_t'
|-TypedefDecl 0x137083708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136855e50 '__SVUint32_t'
|-TypedefDecl 0x137083770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136855e70 '__SVUint64_t'
|-TypedefDecl 0x1370837d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136855e90 '__SVFloat16_t'
|-TypedefDecl 0x137083840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1370838a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136855ed0 '__SVFloat64_t'
|-TypedefDecl 0x137083910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x137083978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1370839e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x137083a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x137083ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x137083b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x137083b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x137083be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137083c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x137083cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137083d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137083d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x137083df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137083e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136856090 '__clang_svint8x3_t'
|-TypedefDecl 0x137083ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1368560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137083f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1368560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137083f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1368560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x137083ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x137084060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1370840c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x137084130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x137084198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137084a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1368561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137084a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1368561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x137084ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1368561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137084b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136856210 '__clang_svint8x4_t'
|-TypedefDecl 0x137084ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136856230 '__clang_svint16x4_t'
|-TypedefDecl 0x137084c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136856250 '__clang_svint32x4_t'
|-TypedefDecl 0x137084c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136856270 '__clang_svint64x4_t'
|-TypedefDecl 0x137084cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x137084d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1368562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x137084da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1368562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137084e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1368562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137084e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x137084ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137084f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x137084fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137085018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136856390 '__SVBool_t'
|-TypedefDecl 0x137085080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1368563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1370850e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1368563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137085150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1368563f0 '__SVCount_t'
|-TypedefDecl 0x1370851f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1370851b0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-TypedefDecl 0x137085268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1370851b0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
`-FunctionDecl 0x1400085e8 <dataset_diviso_filec/func20170_nonvuln.c:1:1, line:39:1> line:1:5 invalid kill_pid_info_as_uid 'int (int, struct siginfo *, struct pid *, int, int, int)'
  |-ParmVarDecl 0x1370852d8 <col:26, col:30> col:30 used sig 'int'
  |-ParmVarDecl 0x1370858c8 <col:35, col:51> col:51 used info 'struct siginfo *'
  |-ParmVarDecl 0x1400082c8 <col:57, col:69> col:69 used pid 'struct pid *'
  |-ParmVarDecl 0x140008360 <line:2:9, col:15> col:15 invalid uid 'int'
  |-ParmVarDecl 0x1400083e0 <col:20, col:26> col:26 invalid euid 'int'
  |-ParmVarDecl 0x140008460 <col:32, col:36> col:36 invalid secid 'int'
  `-CompoundStmt 0x140011550 <line:3:1, line:39:1>
    |-DeclStmt 0x1400087d8 <line:4:2, col:19>
    | `-VarDecl 0x1400086d8 <col:2, col:13> col:6 used ret 'int' cinit
    |   `-UnaryOperator 0x1400087c0 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1400087a8 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x140008788 <col:13> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1400089d8 <line:5:2, col:23>
    | |-RecordDecl 0x1400087f0 <col:2, col:9> col:9 struct task_struct
    | `-VarDecl 0x140008958 <col:2, col:22> col:22 used p 'struct task_struct *'
    |-DeclStmt 0x140008bd8 <line:6:2, col:26>
    | |-RecordDecl 0x1400089f0 <col:8, col:15> col:15 struct cred
    | `-VarDecl 0x140008b58 <col:2, col:21> col:21 used pcred 'const struct cred *'
    |-DeclStmt 0x140008c70 <line:7:2, col:21>
    | `-VarDecl 0x140008c08 <col:2, col:16> col:16 used flags 'unsigned long'
    |-IfStmt 0x140008f08 <line:9:2, line:10:10>
    | |-UnaryOperator 0x140008ea8 <line:9:6, col:23> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x140008e68 <col:7, col:23> 'int'
    | |   |-ImplicitCastExpr 0x140008e50 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x140008de0 <col:7> 'int ()' Function 0x140008d28 'valid_signal' 'int ()'
    | |   `-ImplicitCastExpr 0x140008e90 <col:20> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x140008e00 <col:20> 'int' lvalue ParmVar 0x1370852d8 'sig' 'int'
    | `-ReturnStmt 0x140008ef8 <line:10:3, col:10>
    |   `-ImplicitCastExpr 0x140008ee0 <col:10> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x140008ec0 <col:10> 'int' contains-errors lvalue Var 0x1400086d8 'ret' 'int'
    |-CallExpr 0x140009040 <line:12:2, col:16> 'int'
    | `-ImplicitCastExpr 0x140009028 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x140009008 <col:2> 'int ()' Function 0x140008f50 'rcu_read_lock' 'int ()'
    |-BinaryOperator 0x140010070 <line:13:2, col:31> 'struct task_struct *' contains-errors '='
    | |-DeclRefExpr 0x140009060 <col:2> 'struct task_struct *' lvalue Var 0x140008958 'p' 'struct task_struct *'
    | `-CallExpr 0x140010040 <col:6, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x140009160 <col:6> 'int ()' Function 0x1400090a8 'pid_task' 'int ()'
    |   |-DeclRefExpr 0x140009180 <col:15> 'struct pid *' lvalue ParmVar 0x1400082c8 'pid' 'struct pid *'
    |   `-RecoveryExpr 0x140010020 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140010260 <line:14:2, line:17:2>
    | |-UnaryOperator 0x1400100c8 <line:14:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1400100b0 <col:7> 'struct task_struct *' <LValueToRValue>
    | |   `-DeclRefExpr 0x140010090 <col:7> 'struct task_struct *' lvalue Var 0x140008958 'p' 'struct task_struct *'
    | `-CompoundStmt 0x140010240 <col:10, line:17:2>
    |   |-BinaryOperator 0x1400101b8 <line:15:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1400100e0 <col:3> 'int' contains-errors lvalue Var 0x1400086d8 'ret' 'int'
    |   | `-UnaryOperator 0x1400101a0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x140010188 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x140010168 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x140010228 <line:16:3, col:8> 'out_unlock' 0x1400101d8
    |-BinaryOperator 0x140010430 <line:18:2, col:23> 'const struct cred *' '='
    | |-DeclRefExpr 0x140010280 <col:2> 'const struct cred *' lvalue Var 0x140008b58 'pcred' 'const struct cred *'
    | `-ImplicitCastExpr 0x140010418 <col:10, col:23> 'const struct cred *' <IntegralToPointer>
    |   `-CallExpr 0x1400103d8 <col:10, col:23> 'int'
    |     |-ImplicitCastExpr 0x1400103c0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x140010380 <col:10> 'int ()' Function 0x1400102c8 '__task_cred' 'int ()'
    |     `-ImplicitCastExpr 0x140010400 <col:22> 'struct task_struct *' <LValueToRValue>
    |       `-DeclRefExpr 0x1400103a0 <col:22> 'struct task_struct *' lvalue Var 0x140008958 'p' 'struct task_struct *'
    |-IfStmt 0x1400109f8 <line:19:2, line:24:2>
    | |-BinaryOperator 0x1400108a8 <line:19:6, line:21:44> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x1400107e8 <line:19:6, line:21:21> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x140010728 <line:19:6, line:20:44> 'int' contains-errors '&&'
    | | | | |-BinaryOperator 0x140010668 <line:19:6, line:20:21> 'int' contains-errors '&&'
    | | | | | |-CallExpr 0x140010588 <line:19:6, col:22> 'int'
    | | | | | | |-ImplicitCastExpr 0x140010570 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | | | | `-DeclRefExpr 0x140010530 <col:6> 'int ()' Function 0x140010478 'si_fromuser' 'int ()'
    | | | | | | `-ImplicitCastExpr 0x1400105b0 <col:18> 'struct siginfo *' <LValueToRValue>
    | | | | | |   `-DeclRefExpr 0x140010550 <col:18> 'struct siginfo *' lvalue ParmVar 0x1370858c8 'info' 'struct siginfo *'
    | | | | | `-BinaryOperator 0x140010648 <line:20:6, col:21> 'int' contains-errors '!='
    | | | | |   |-RecoveryExpr 0x1400105c8 <col:6> '<dependent type>' contains-errors lvalue
    | | | | |   `-RecoveryExpr 0x140010620 <col:14, col:21> '<dependent type>' contains-errors lvalue
    | | | | |     `-DeclRefExpr 0x1400105e8 <col:14> 'const struct cred *' lvalue Var 0x140008b58 'pcred' 'const struct cred *'
    | | | | `-BinaryOperator 0x140010708 <col:29, col:44> 'int' contains-errors '!='
    | | | |   |-RecoveryExpr 0x140010688 <col:29> '<dependent type>' contains-errors lvalue
    | | | |   `-RecoveryExpr 0x1400106e0 <col:37, col:44> '<dependent type>' contains-errors lvalue
    | | | |     `-DeclRefExpr 0x1400106a8 <col:37> 'const struct cred *' lvalue Var 0x140008b58 'pcred' 'const struct cred *'
    | | | `-BinaryOperator 0x1400107c8 <line:21:6, col:21> 'int' contains-errors '!='
    | | |   |-RecoveryExpr 0x140010748 <col:6> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x1400107a0 <col:14, col:21> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x140010768 <col:14> 'const struct cred *' lvalue Var 0x140008b58 'pcred' 'const struct cred *'
    | | `-BinaryOperator 0x140010888 <col:29, col:44> 'int' contains-errors '!='
    | |   |-RecoveryExpr 0x140010808 <col:29> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x140010860 <col:37, col:44> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x140010828 <col:37> 'const struct cred *' lvalue Var 0x140008b58 'pcred' 'const struct cred *'
    | `-CompoundStmt 0x1400109d8 <col:49, line:24:2>
    |   |-BinaryOperator 0x1400109a0 <line:22:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1400108c8 <col:3> 'int' contains-errors lvalue Var 0x1400086d8 'ret' 'int'
    |   | `-UnaryOperator 0x140010988 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x140010970 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x140010950 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x1400109c0 <line:23:3, col:8> 'out_unlock' 0x1400101d8
    |-BinaryOperator 0x140010bf8 <line:25:2, col:46> 'int' contains-errors '='
    | |-DeclRefExpr 0x140010a18 <col:2> 'int' contains-errors lvalue Var 0x1400086d8 'ret' 'int'
    | `-CallExpr 0x140010bb8 <col:8, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x140010b18 <col:8> 'int ()' Function 0x140010a60 'security_task_kill' 'int ()'
    |   |-DeclRefExpr 0x140010b38 <col:27> 'struct task_struct *' lvalue Var 0x140008958 'p' 'struct task_struct *'
    |   |-DeclRefExpr 0x140010b58 <col:30> 'struct siginfo *' lvalue ParmVar 0x1370858c8 'info' 'struct siginfo *'
    |   |-DeclRefExpr 0x140010b78 <col:36> 'int' lvalue ParmVar 0x1370852d8 'sig' 'int'
    |   `-RecoveryExpr 0x140010b98 <col:41> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140010c68 <line:26:2, line:27:8>
    | |-ImplicitCastExpr 0x140010c38 <line:26:6> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x140010c18 <col:6> 'int' contains-errors lvalue Var 0x1400086d8 'ret' 'int'
    | `-GotoStmt 0x140010c50 <line:27:3, col:8> 'out_unlock' 0x1400101d8
    |-IfStmt 0x140011390 <line:29:2, line:35:2>
    | |-ImplicitCastExpr 0x140010ca8 <line:29:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x140010c88 <col:6> 'int' lvalue ParmVar 0x1370852d8 'sig' 'int'
    | `-CompoundStmt 0x140011378 <col:11, line:35:2>
    |   `-IfStmt 0x140011348 <line:30:3, line:34:4> has_else
    |     |-CallExpr 0x140010e60 <line:30:7, col:34> 'int'
    |     | |-ImplicitCastExpr 0x140010e48 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x140010da0 <col:7> 'int ()' Function 0x140010ce8 'lock_task_sighand' 'int ()'
    |     | |-ImplicitCastExpr 0x140010e90 <col:25> 'struct task_struct *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x140010dc0 <col:25> 'struct task_struct *' lvalue Var 0x140008958 'p' 'struct task_struct *'
    |     | `-UnaryOperator 0x140010e30 <col:28, col:29> 'unsigned long *' prefix '&' cannot overflow
    |     |   `-DeclRefExpr 0x140010de0 <col:29> 'unsigned long' lvalue Var 0x140008c08 'flags' 'unsigned long'
    |     |-CompoundStmt 0x140011300 <col:37, line:33:3>
    |     | |-BinaryOperator 0x140011128 <line:31:4, col:42> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x140010ea8 <col:4> 'int' contains-errors lvalue Var 0x1400086d8 'ret' 'int'
    |     | | `-CallExpr 0x140011098 <col:10, col:42> 'int'
    |     | |   |-ImplicitCastExpr 0x140011080 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | |   | `-DeclRefExpr 0x140010fa8 <col:10> 'int ()' Function 0x140010ef0 '__send_signal' 'int ()'
    |     | |   |-ImplicitCastExpr 0x1400110e0 <col:24> 'int' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x140010fc8 <col:24> 'int' lvalue ParmVar 0x1370852d8 'sig' 'int'
    |     | |   |-ImplicitCastExpr 0x1400110f8 <col:29> 'struct siginfo *' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x140011000 <col:29> 'struct siginfo *' lvalue ParmVar 0x1370858c8 'info' 'struct siginfo *'
    |     | |   |-ImplicitCastExpr 0x140011110 <col:35> 'struct task_struct *' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x140011020 <col:35> 'struct task_struct *' lvalue Var 0x140008958 'p' 'struct task_struct *'
    |     | |   |-IntegerLiteral 0x140011040 <col:38> 'int' 1
    |     | |   `-IntegerLiteral 0x140011060 <col:41> 'int' 0
    |     | `-CallExpr 0x1400112b8 <line:32:4, col:33> 'int'
    |     |   |-ImplicitCastExpr 0x1400112a0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x140011228 <col:4> 'int ()' Function 0x140011170 'unlock_task_sighand' 'int ()'
    |     |   |-ImplicitCastExpr 0x1400112e8 <col:24> 'struct task_struct *' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x140011248 <col:24> 'struct task_struct *' lvalue Var 0x140008958 'p' 'struct task_struct *'
    |     |   `-UnaryOperator 0x140011288 <col:27, col:28> 'unsigned long *' prefix '&' cannot overflow
    |     |     `-DeclRefExpr 0x140011268 <col:28> 'unsigned long' lvalue Var 0x140008c08 'flags' 'unsigned long'
    |     `-NullStmt 0x140011340 <line:34:4>
    |-LabelStmt 0x1400114e8 <line:36:1, line:37:18> 'out_unlock'
    | `-CallExpr 0x1400114c8 <col:2, col:18> 'int'
    |   `-ImplicitCastExpr 0x1400114b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x140011490 <col:2> 'int ()' Function 0x1400113d8 'rcu_read_unlock' 'int ()'
    `-ReturnStmt 0x140011540 <line:38:2, col:9>
      `-ImplicitCastExpr 0x140011528 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x140011508 <col:9> 'int' contains-errors lvalue Var 0x1400086d8 'ret' 'int'
