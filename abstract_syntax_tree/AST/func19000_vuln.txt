TranslationUnitDecl 0x127055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1270564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127055bd0 '__int128'
|-TypedefDecl 0x127056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127055bf0 'unsigned __int128'
|-TypedefDecl 0x127126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x127126000 'struct __NSConstantString_tag'
|   `-Record 0x127056580 '__NSConstantString_tag'
|-TypedefDecl 0x127126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055d90 '__SVInt8_t'
|-TypedefDecl 0x127126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127055db0 '__SVInt16_t'
|-TypedefDecl 0x127126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127055dd0 '__SVInt32_t'
|-TypedefDecl 0x1271263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127055df0 '__SVInt64_t'
|-TypedefDecl 0x127126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055e10 '__SVUint8_t'
|-TypedefDecl 0x1271264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055e30 '__SVUint16_t'
|-TypedefDecl 0x127126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055e50 '__SVUint32_t'
|-TypedefDecl 0x127126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055e70 '__SVUint64_t'
|-TypedefDecl 0x1271265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055e90 '__SVFloat16_t'
|-TypedefDecl 0x127126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1271266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127055ed0 '__SVFloat64_t'
|-TypedefDecl 0x127126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x127126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1271267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x127126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1271268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x127126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x127126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1271269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x127126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x127126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x127126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x127126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x127126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x127126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127056090 '__clang_svint8x3_t'
|-TypedefDecl 0x127126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1270560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x127126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1270560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x127126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1270560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x127126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x127126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x127126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x127126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x127126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x127127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1270561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x127127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1270561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1271278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1270561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x127127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1271279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127056230 '__clang_svint16x4_t'
|-TypedefDecl 0x127127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127056250 '__clang_svint32x4_t'
|-TypedefDecl 0x127127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127056270 '__clang_svint64x4_t'
|-TypedefDecl 0x127127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x127127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1270562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x127127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1270562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x127127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1270562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x127127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x127127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x127127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x127127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x127127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127056390 '__SVBool_t'
|-TypedefDecl 0x127127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1270563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x127127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1270563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x127127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1270563f0 '__SVCount_t'
|-TypedefDecl 0x127127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x127127fb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-TypedefDecl 0x127128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x127127fb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-FunctionDecl 0x1271282f8 <dataset_diviso_filec/func19000_vuln.c:1:1, line:63:1> line:1:1 prtext 'int (const char *, const char *, int *)'
| |-ParmVarDecl 0x1271280d8 <col:9, col:21> col:21 used beg 'const char *'
| |-ParmVarDecl 0x127128158 <col:26, col:38> col:38 used lim 'const char *'
| |-ParmVarDecl 0x127128208 <col:43, col:48> col:48 used nlinesp 'int *'
| `-CompoundStmt 0x127144a60 <line:2:1, line:63:1>
|   |-DeclStmt 0x127128480 <line:3:3, col:18>
|   | `-VarDecl 0x127128418 <col:3, col:14> col:14 used used 'int' static
|   |-DeclStmt 0x1271285b0 <line:4:3, col:21>
|   | |-VarDecl 0x1271284b0 <col:3, col:15> col:15 used bp 'const char *'
|   | `-VarDecl 0x127128530 <col:3, col:20> col:20 used p 'const char *'
|   |-DeclStmt 0x127128690 <line:5:3, col:21>
|   | `-VarDecl 0x1271285d8 <col:3, col:14> col:8 used eol 'char' cinit
|   |   `-RecoveryExpr 0x127128670 <col:14> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1271287c0 <line:6:3, col:11>
|   | |-VarDecl 0x1271286c0 <col:3, col:7> col:7 used i 'int'
|   | `-VarDecl 0x127128740 <col:3, col:10> col:10 used n 'int'
|   |-IfStmt 0x127140d38 <line:8:3, line:9:19>
|   | |-BinaryOperator 0x127140b38 <line:8:7, col:31> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x127140ae0 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x127140ac8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x127140aa8 <col:8> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x127140b18 <col:21, col:31> 'int' contains-errors '>'
|   | |   |-RecoveryExpr 0x127140af8 <col:21> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x127140a48 <col:31> 'int' 0
|   | `-CallExpr 0x127140cf8 <line:9:5, col:19> 'int'
|   |   |-ImplicitCastExpr 0x127140ce0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x127140c70 <col:5> 'int ()' Function 0x127140bb8 'prpending' 'int ()'
|   |   `-ImplicitCastExpr 0x127140d20 <col:16> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x127140c90 <col:16> 'const char *' lvalue ParmVar 0x1271280d8 'beg' 'const char *'
|   |-BinaryOperator 0x127140db0 <line:11:3, col:7> 'const char *' '='
|   | |-DeclRefExpr 0x127140d58 <col:3> 'const char *' lvalue Var 0x127128530 'p' 'const char *'
|   | `-ImplicitCastExpr 0x127140d98 <col:7> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x127140d78 <col:7> 'const char *' lvalue ParmVar 0x1271280d8 'beg' 'const char *'
|   |-IfStmt 0x1271440b0 <line:13:3, line:40:5>
|   | |-UnaryOperator 0x127140e50 <line:13:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x127140e38 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x127140e18 <col:8> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x127144080 <line:14:5, line:40:5>
|   |   |-BinaryOperator 0x127140fb0 <line:17:7, col:32> 'const char *' contains-errors '='
|   |   | |-DeclRefExpr 0x127140e68 <col:7> 'const char *' lvalue Var 0x1271284b0 'bp' 'const char *'
|   |   | `-ConditionalOperator 0x127140f80 <col:12, col:32> '<dependent type>' contains-errors
|   |   |   |-RecoveryExpr 0x127140f20 <col:12> '<dependent type>' contains-errors lvalue
|   |   |   |-RecoveryExpr 0x127140f40 <col:22> '<dependent type>' contains-errors lvalue
|   |   |   `-RecoveryExpr 0x127140f60 <col:32> '<dependent type>' contains-errors lvalue
|   |   |-ForStmt 0x127141338 <line:18:7, line:22:30>
|   |   | |-BinaryOperator 0x127141010 <line:18:12, col:16> 'int' '='
|   |   | | |-DeclRefExpr 0x127140fd0 <col:12> 'int' lvalue Var 0x1271286c0 'i' 'int'
|   |   | | `-IntegerLiteral 0x127140ff0 <col:16> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1271410a8 <col:19, col:23> 'int' contains-errors '<'
|   |   | | |-DeclRefExpr 0x127141030 <col:19> 'int' lvalue Var 0x1271286c0 'i' 'int'
|   |   | | `-RecoveryExpr 0x127141088 <col:23> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x1271410e8 <col:35, col:37> 'int' prefix '++'
|   |   | | `-DeclRefExpr 0x1271410c8 <col:37> 'int' lvalue Var 0x1271286c0 'i' 'int'
|   |   | `-IfStmt 0x127141318 <line:19:9, line:22:30>
|   |   |   |-BinaryOperator 0x127141170 <line:19:13, col:17> 'int' '>'
|   |   |   | |-ImplicitCastExpr 0x127141140 <col:13> 'const char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x127141100 <col:13> 'const char *' lvalue Var 0x127128530 'p' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x127141158 <col:17> 'const char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x127141120 <col:17> 'const char *' lvalue Var 0x1271284b0 'bp' 'const char *'
|   |   |   `-DoStmt 0x1271412f8 <line:20:11, line:22:30>
|   |   |     |-UnaryOperator 0x1271411b0 <line:21:13, col:15> 'const char *' prefix '--'
|   |   |     | `-DeclRefExpr 0x127141190 <col:15> 'const char *' lvalue Var 0x127128530 'p' 'const char *'
|   |   |     `-BinaryOperator 0x1271412d8 <line:22:18, col:27> 'int' contains-errors '!='
|   |   |       |-ImplicitCastExpr 0x1271412a8 <col:18, col:22> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x127141278 <col:18, col:22> 'char' <LValueToRValue>
|   |   |       |   `-ArraySubscriptExpr 0x127141238 <col:18, col:22> 'const char' lvalue
|   |   |       |     |-ImplicitCastExpr 0x127141220 <col:18> 'const char *' <LValueToRValue>
|   |   |       |     | `-DeclRefExpr 0x1271411c8 <col:18> 'const char *' lvalue Var 0x127128530 'p' 'const char *'
|   |   |       |     `-UnaryOperator 0x127141208 <col:20, col:21> 'int' prefix '-'
|   |   |       |       `-IntegerLiteral 0x1271411e8 <col:21> 'int' 1
|   |   |       `-ImplicitCastExpr 0x1271412c0 <col:27> 'int' contains-errors <IntegralCast>
|   |   |         `-ImplicitCastExpr 0x127141290 <col:27> 'char' contains-errors <LValueToRValue>
|   |   |           `-DeclRefExpr 0x127141258 <col:27> 'char' contains-errors lvalue Var 0x1271285d8 'eol' 'char'
|   |   |-IfStmt 0x127143800 <line:25:7, line:31:9>
|   |   | |-RecoveryExpr 0x127141450 <line:25:11, col:64> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x1271419e0 <line:26:9, line:31:9>
|   |   |   |-CallExpr 0x1271415d0 <line:27:11, col:37> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x127141550 <col:11> 'int ()' Function 0x127141498 'pr_sgr_start_if' 'int ()'
|   |   |   | `-RecoveryExpr 0x1271415b0 <col:28> '<dependent type>' contains-errors lvalue
|   |   |   `-CallExpr 0x127141798 <line:28:11, col:41> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x1271416d8 <col:11> 'int ()' Function 0x127141620 'fputs' 'int ()'
|   |   |     |-RecoveryExpr 0x127141758 <col:18> '<dependent type>' contains-errors lvalue
|   |   |     `-RecoveryExpr 0x127141778 <col:35> '<dependent type>' contains-errors lvalue
|   |   `-WhileStmt 0x127144060 <line:33:7, line:39:9>
|   |     |-BinaryOperator 0x127143890 <line:33:14, col:18> 'int' '<'
|   |     | |-ImplicitCastExpr 0x127143860 <col:14> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x127143820 <col:14> 'const char *' lvalue Var 0x127128530 'p' 'const char *'
|   |     | `-ImplicitCastExpr 0x127143878 <col:18> 'const char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x127143840 <col:18> 'const char *' lvalue ParmVar 0x1271280d8 'beg' 'const char *'
|   |     `-CompoundStmt 0x127144038 <line:34:9, line:39:9>
|   |       |-DeclStmt 0x127143e30 <line:35:11, col:52>
|   |       | `-VarDecl 0x1271438c8 <col:11, col:51> col:23 used nl 'const char *' cinit
|   |       |   `-ImplicitCastExpr 0x127143e18 <col:28, col:51> 'const char *' contains-errors <BitCast>
|   |       |     `-CallExpr 0x127143d68 <col:28, col:51> 'void *' contains-errors
|   |       |       |-ImplicitCastExpr 0x127143d50 <col:28> 'void *(*)(const void *, int, unsigned long)' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x127143bf8 <col:28> 'void *(const void *, int, unsigned long)' Function 0x1271439a8 'memchr' 'void *(const void *, int, unsigned long)'
|   |       |       |-ImplicitCastExpr 0x127143db8 <col:36> 'const void *' <BitCast>
|   |       |       | `-ImplicitCastExpr 0x127143da0 <col:36> 'const char *' <LValueToRValue>
|   |       |       |   `-DeclRefExpr 0x127143c18 <col:36> 'const char *' lvalue Var 0x127128530 'p' 'const char *'
|   |       |       |-ImplicitCastExpr 0x127143de8 <col:39> 'int' contains-errors <IntegralCast>
|   |       |       | `-ImplicitCastExpr 0x127143dd0 <col:39> 'char' contains-errors <LValueToRValue>
|   |       |       |   `-DeclRefExpr 0x127143c38 <col:39> 'char' contains-errors lvalue Var 0x1271285d8 'eol' 'char'
|   |       |       `-ImplicitCastExpr 0x127143e00 <col:44, col:50> 'unsigned long' <IntegralCast>
|   |       |         `-BinaryOperator 0x127143cc8 <col:44, col:50> 'long' '-'
|   |       |           |-ImplicitCastExpr 0x127143c98 <col:44> 'const char *' <LValueToRValue>
|   |       |           | `-DeclRefExpr 0x127143c58 <col:44> 'const char *' lvalue ParmVar 0x1271280d8 'beg' 'const char *'
|   |       |           `-ImplicitCastExpr 0x127143cb0 <col:50> 'const char *' <LValueToRValue>
|   |       |             `-DeclRefExpr 0x127143c78 <col:50> 'const char *' lvalue Var 0x127128530 'p' 'const char *'
|   |       |-UnaryOperator 0x127143e68 <line:36:11, col:13> 'const char *' contains-errors postfix '++'
|   |       | `-DeclRefExpr 0x127143e48 <col:11> 'const char *' contains-errors lvalue Var 0x1271438c8 'nl' 'const char *'
|   |       `-BinaryOperator 0x127144018 <line:38:11, col:15> 'const char *' contains-errors '='
|   |         |-DeclRefExpr 0x127143fc0 <col:11> 'const char *' lvalue Var 0x127128530 'p' 'const char *'
|   |         `-ImplicitCastExpr 0x127144000 <col:15> 'const char *' contains-errors <LValueToRValue>
|   |           `-DeclRefExpr 0x127143fe0 <col:15> 'const char *' contains-errors lvalue Var 0x1271438c8 'nl' 'const char *'
|   |-IfStmt 0x1271447a8 <line:42:3, line:58:8> has_else
|   | |-ImplicitCastExpr 0x1271440f0 <line:42:7> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1271440d0 <col:7> 'int *' lvalue ParmVar 0x127128208 'nlinesp' 'int *'
|   | |-CompoundStmt 0x127144708 <line:43:5, line:57:5>
|   | | `-BinaryOperator 0x1271446c8 <line:53:7, col:18> 'int' '='
|   | |   |-UnaryOperator 0x127144678 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x127144660 <col:8> 'int *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x127144640 <col:8> 'int *' lvalue ParmVar 0x127128208 'nlinesp' 'int *'
|   | |   `-ImplicitCastExpr 0x1271446b0 <col:18> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x127144690 <col:18> 'int' lvalue Var 0x127128740 'n' 'int'
|   | `-NullStmt 0x1271447a0 <line:58:8>
|   `-BinaryOperator 0x127144a40 <line:62:3, col:10> 'int' '='
|     |-DeclRefExpr 0x127144a00 <col:3> 'int' lvalue Var 0x127128418 'used' 'int'
|     `-IntegerLiteral 0x127144a20 <col:10> 'int' 1
`-FunctionDecl 0x1271439a8 <line:35:28> col:28 implicit used memchr 'void *(const void *, int, unsigned long)' extern
  |-ParmVarDecl 0x127143aa8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x127143b10 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x127143b78 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x127143a50 <<invalid sloc>> Implicit 892
