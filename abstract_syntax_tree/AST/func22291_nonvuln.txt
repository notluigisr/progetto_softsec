TranslationUnitDecl 0x120855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1208564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120855bd0 '__int128'
|-TypedefDecl 0x120856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120855bf0 'unsigned __int128'
|-TypedefDecl 0x10580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10580bc00 'struct __NSConstantString_tag'
|   `-Record 0x120856580 '__NSConstantString_tag'
|-TypedefDecl 0x10580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120855d90 '__SVInt8_t'
|-TypedefDecl 0x10580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120855db0 '__SVInt16_t'
|-TypedefDecl 0x10580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120855dd0 '__SVInt32_t'
|-TypedefDecl 0x10580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120855df0 '__SVInt64_t'
|-TypedefDecl 0x10580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120855e10 '__SVUint8_t'
|-TypedefDecl 0x10580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120855e30 '__SVUint16_t'
|-TypedefDecl 0x10580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120855e50 '__SVUint32_t'
|-TypedefDecl 0x10580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120855e70 '__SVUint64_t'
|-TypedefDecl 0x10580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120855e90 '__SVFloat16_t'
|-TypedefDecl 0x10580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120855eb0 '__SVFloat32_t'
|-TypedefDecl 0x10580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120855ed0 '__SVFloat64_t'
|-TypedefDecl 0x10580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120856090 '__clang_svint8x3_t'
|-TypedefDecl 0x10580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1208560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1208560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1208560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1208561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1208561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1208561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120856210 '__clang_svint8x4_t'
|-TypedefDecl 0x10580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120856230 '__clang_svint16x4_t'
|-TypedefDecl 0x10580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120856250 '__clang_svint32x4_t'
|-TypedefDecl 0x10580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120856270 '__clang_svint64x4_t'
|-TypedefDecl 0x10580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1208562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1208562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1208562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120856390 '__SVBool_t'
|-TypedefDecl 0x10580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1208563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1208563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1208563f0 '__SVCount_t'
|-TypedefDecl 0x10580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10580dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-TypedefDecl 0x10580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10580dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-FunctionDecl 0x10580de30 <dataset_diviso_filec/func22291_nonvuln.c:1:1, line:68:1> line:1:13 referenced read_fstree 'void (void *, const char *)' static
| |-ParmVarDecl 0x10580dcd8 <col:25, col:31> col:31 used fdt 'void *'
| |-ParmVarDecl 0x10580dd58 <col:36, col:48> col:48 used dirname 'const char *'
| `-CompoundStmt 0x10582bda0 <line:2:1, line:68:1>
|   |-DeclStmt 0x10580e148 <line:4:5, col:22>
|   | |-RecordDecl 0x10580df60 <col:5, col:12> col:12 struct dirent
|   | `-VarDecl 0x10580e0c8 <col:5, col:20> col:20 used de 'struct dirent *'
|   |-DeclStmt 0x105827718 <line:5:5, col:19>
|   | |-RecordDecl 0x10580e160 <col:5, col:12> col:12 struct stat
|   | `-VarDecl 0x10580e258 <col:5, col:17> col:17 invalid st 'struct stat'
|   |-DeclStmt 0x1058277e8 <line:6:5, col:44>
|   | `-VarDecl 0x105827748 <col:5, col:28> col:17 used root_dir 'const char *' cinit
|   |   `-RecoveryExpr 0x1058277c8 <col:28> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x105827880 <line:7:5, col:28>
|   | `-VarDecl 0x105827818 <col:5, col:17> col:17 used parent_node 'const char *'
|   |-IfStmt 0x105828270 <line:9:5, line:13:5>
|   | |-BinaryOperator 0x105827c48 <line:9:9, col:38> 'int' contains-errors '!='
|   | | |-CallExpr 0x105827b98 <col:9, col:33> 'char *' contains-errors
|   | | | |-ImplicitCastExpr 0x105827b80 <col:9> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x105827ac0 <col:9> 'char *(const char *, const char *)' Function 0x1058278e0 'strstr' 'char *(const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x105827bc8 <col:16> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x105827ae0 <col:16> 'const char *' lvalue ParmVar 0x10580dd58 'dirname' 'const char *'
|   | | | `-ImplicitCastExpr 0x105827be0 <col:25> 'const char *' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x105827b00 <col:25> 'const char *' contains-errors lvalue Var 0x105827748 'root_dir' 'const char *'
|   | | `-ImplicitCastExpr 0x105827c30 <col:38> 'char *' <BitCast>
|   | |   `-ImplicitCastExpr 0x105827c18 <col:38> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x105827bf8 <col:38> 'const char *' lvalue ParmVar 0x10580dd58 'dirname' 'const char *'
|   | `-CompoundStmt 0x105828250 <col:47, line:13:5>
|   |   |-CallExpr 0x105827f48 <line:10:9, line:11:49> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x105827f30 <line:10:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x105827d80 <col:9> 'int ()' Function 0x105827cc8 'error_report' 'int ()'
|   |   | |-ImplicitCastExpr 0x105827f88 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x105827de0 <col:22> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x105827fa0 <line:11:22> 'const char *' <ArrayToPointerDecay>
|   |   | | `-PredefinedExpr 0x105827ea8 <col:22> 'const char[12]' lvalue __func__
|   |   | |   `-StringLiteral 0x105827e80 <col:22> 'const char[12]' lvalue "read_fstree"
|   |   | |-ImplicitCastExpr 0x105827fb8 <col:32> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x105827ec0 <col:32> 'const char *' lvalue ParmVar 0x10580dd58 'dirname' 'const char *'
|   |   | `-ImplicitCastExpr 0x105827fd0 <col:41> 'const char *' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x105827ee0 <col:41> 'const char *' contains-errors lvalue Var 0x105827748 'root_dir' 'const char *'
|   |   `-CallExpr 0x105828228 <line:12:9, col:15> 'void'
|   |     |-ImplicitCastExpr 0x105828210 <col:9> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x105828198 <col:9> 'void (int) __attribute__((noreturn))' Function 0x105828028 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x1058281b8 <col:14> 'int' 1
|   |-IfStmt 0x105829b00 <line:17:5, line:20:5>
|   | |-UnaryOperator 0x105829910 <line:17:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1058298f8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1058298d8 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x105829ae0 <col:13, line:20:5>
|   |   |-CallExpr 0x1058299e0 <line:18:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x1058299c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x105829928 <col:9> 'int ()' Function 0x105827cc8 'error_report' 'int ()'
|   |   | |-ImplicitCastExpr 0x105829a18 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x105829948 <col:22> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x105829a30 <col:29> 'const char *' <ArrayToPointerDecay>
|   |   | | `-PredefinedExpr 0x105829990 <col:29> 'const char[12]' lvalue __func__
|   |   | |   `-StringLiteral 0x105829968 <col:29> 'const char[12]' lvalue "read_fstree"
|   |   | `-ImplicitCastExpr 0x105829a48 <col:39> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1058299a8 <col:39> 'const char *' lvalue ParmVar 0x10580dd58 'dirname' 'const char *'
|   |   `-CallExpr 0x105829ab8 <line:19:9, col:15> 'void'
|   |     |-ImplicitCastExpr 0x105829aa0 <col:9> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x105829a60 <col:9> 'void (int) __attribute__((noreturn))' Function 0x105828028 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x105829a80 <col:14> 'int' 1
|   `-WhileStmt 0x10582bc80 <line:22:5, line:65:5>
|     |-RecoveryExpr 0x105829cb8 <line:22:12, col:33> '_Bool' contains-errors
|     `-CompoundStmt 0x10582bc40 <col:39, line:65:5>
|       |-DeclStmt 0x105829d58 <line:23:9, col:21>
|       | `-VarDecl 0x105829cf0 <col:9, col:15> col:15 used tmpnam 'char *'
|       |-IfStmt 0x10582a060 <line:25:9, line:28:9>
|       | |-BinaryOperator 0x10582a020 <line:25:13, line:26:44> 'int' contains-errors '||'
|       | | |-UnaryOperator 0x105829f20 <line:25:13, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
|       | | | `-CallExpr 0x105829ef0 <col:14, col:41> '<dependent type>' contains-errors
|       | | |   |-DeclRefExpr 0x105829e50 <col:14> 'int ()' Function 0x105829d98 'g_strcmp0' 'int ()'
|       | | |   |-RecoveryExpr 0x105829ea8 <col:24, col:28> '<dependent type>' contains-errors lvalue
|       | | |   | `-DeclRefExpr 0x105829e70 <col:24> 'struct dirent *' lvalue Var 0x10580e0c8 'de' 'struct dirent *'
|       | | |   `-StringLiteral 0x105829ed0 <col:36> 'char[4]' lvalue "STR"
|       | | `-UnaryOperator 0x10582a008 <line:26:16, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow
|       | |   `-CallExpr 0x105829fd8 <col:17, col:44> '<dependent type>' contains-errors
|       | |     |-DeclRefExpr 0x105829f38 <col:17> 'int ()' Function 0x105829d98 'g_strcmp0' 'int ()'
|       | |     |-RecoveryExpr 0x105829f90 <col:27, col:31> '<dependent type>' contains-errors lvalue
|       | |     | `-DeclRefExpr 0x105829f58 <col:27> 'struct dirent *' lvalue Var 0x10580e0c8 'de' 'struct dirent *'
|       | |     `-StringLiteral 0x105829fb8 <col:39> 'char[4]' lvalue "STR"
|       | `-CompoundStmt 0x10582a048 <col:47, line:28:9>
|       |   `-ContinueStmt 0x10582a040 <line:27:13>
|       |-BinaryOperator 0x10582a278 <line:30:9, col:60> 'char *' contains-errors '='
|       | |-DeclRefExpr 0x10582a080 <col:9> 'char *' lvalue Var 0x105829cf0 'tmpnam' 'char *'
|       | `-CallExpr 0x10582a240 <col:18, col:60> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x10582a180 <col:18> 'int ()' Function 0x10582a0c8 'g_strdup_printf' 'int ()'
|       |   |-StringLiteral 0x10582a1a0 <col:34> 'char[4]' lvalue "STR"
|       |   |-DeclRefExpr 0x10582a1c0 <col:41> 'const char *' lvalue ParmVar 0x10580dd58 'dirname' 'const char *'
|       |   `-RecoveryExpr 0x10582a218 <col:50, col:54> '<dependent type>' contains-errors lvalue
|       |     `-DeclRefExpr 0x10582a1e0 <col:50> 'struct dirent *' lvalue Var 0x10580e0c8 'de' 'struct dirent *'
|       |-IfStmt 0x10582aa48 <line:32:9, line:35:9>
|       | |-BinaryOperator 0x10582a440 <line:32:13, col:34> 'int' contains-errors '<'
|       | | |-CallExpr 0x10582a3f0 <col:13, col:30> '<dependent type>' contains-errors
|       | | | |-DeclRefExpr 0x10582a378 <col:13> 'int ()' Function 0x10582a2c0 'lstat' 'int ()'
|       | | | |-DeclRefExpr 0x10582a398 <col:19> 'char *' lvalue Var 0x105829cf0 'tmpnam' 'char *'
|       | | | `-UnaryOperator 0x10582a3d8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | | |   `-RecoveryExpr 0x10582a3b8 <col:28> '<dependent type>' contains-errors lvalue
|       | | `-IntegerLiteral 0x10582a420 <col:34> 'int' 0
|       | `-CompoundStmt 0x10582aa28 <col:37, line:35:9>
|       |   |-CallExpr 0x10582a518 <line:33:13, col:49> 'int'
|       |   | |-ImplicitCastExpr 0x10582a500 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x10582a460 <col:13> 'int ()' Function 0x105827cc8 'error_report' 'int ()'
|       |   | |-ImplicitCastExpr 0x10582a550 <col:26> 'char *' <ArrayToPointerDecay>
|       |   | | `-StringLiteral 0x10582a480 <col:26> 'char[4]' lvalue "STR"
|       |   | |-ImplicitCastExpr 0x10582a568 <col:33> 'const char *' <ArrayToPointerDecay>
|       |   | | `-PredefinedExpr 0x10582a4c8 <col:33> 'const char[12]' lvalue __func__
|       |   | |   `-StringLiteral 0x10582a4a0 <col:33> 'const char[12]' lvalue "read_fstree"
|       |   | `-ImplicitCastExpr 0x10582a580 <col:43> 'char *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x10582a4e0 <col:43> 'char *' lvalue Var 0x105829cf0 'tmpnam' 'char *'
|       |   `-CallExpr 0x10582aa00 <line:34:13, col:19> 'void'
|       |     |-ImplicitCastExpr 0x10582a5d8 <col:13> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x10582a598 <col:13> 'void (int) __attribute__((noreturn))' Function 0x105828028 'exit' 'void (int) __attribute__((noreturn))'
|       |     `-IntegerLiteral 0x10582a5b8 <col:18> 'int' 1
|       |-IfStmt 0x10582bb78 <line:37:9, line:62:9> has_else
|       | |-CallExpr 0x10582abd0 <line:37:13, col:31> '<dependent type>' contains-errors
|       | | |-DeclRefExpr 0x10582ab48 <col:13> 'int ()' Function 0x10582aa90 'S_ISREG' 'int ()'
|       | | `-CXXDependentScopeMemberExpr 0x10582ab88 <col:21, col:24> '<dependent type>' contains-errors lvalue .st_mode
|       | |   `-RecoveryExpr 0x10582ab68 <col:21> '<dependent type>' contains-errors lvalue
|       | |-CompoundStmt 0x10582b420 <col:34, line:54:9>
|       | | |-IfStmt 0x10582af10 <line:41:13, line:45:13>
|       | | | |-RecoveryExpr 0x10582ad18 <line:41:17, col:62> '_Bool' contains-errors
|       | | | `-CompoundStmt 0x10582aef0 <col:65, line:45:13>
|       | | |   |-CallExpr 0x10582adf0 <line:42:17, line:43:46> 'int'
|       | | |   | |-ImplicitCastExpr 0x10582add8 <line:42:17> 'int (*)()' <FunctionToPointerDecay>
|       | | |   | | `-DeclRefExpr 0x10582ad38 <col:17> 'int ()' Function 0x105827cc8 'error_report' 'int ()'
|       | | |   | |-ImplicitCastExpr 0x10582ae28 <col:30> 'char *' <ArrayToPointerDecay>
|       | | |   | | `-StringLiteral 0x10582ad58 <col:30> 'char[4]' lvalue "STR"
|       | | |   | |-ImplicitCastExpr 0x10582ae40 <line:43:30> 'const char *' <ArrayToPointerDecay>
|       | | |   | | `-PredefinedExpr 0x10582ada0 <col:30> 'const char[12]' lvalue __func__
|       | | |   | |   `-StringLiteral 0x10582ad78 <col:30> 'const char[12]' lvalue "read_fstree"
|       | | |   | `-ImplicitCastExpr 0x10582ae58 <col:40> 'char *' <LValueToRValue>
|       | | |   |   `-DeclRefExpr 0x10582adb8 <col:40> 'char *' lvalue Var 0x105829cf0 'tmpnam' 'char *'
|       | | |   `-CallExpr 0x10582aec8 <line:44:17, col:23> 'void'
|       | | |     |-ImplicitCastExpr 0x10582aeb0 <col:17> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|       | | |     | `-DeclRefExpr 0x10582ae70 <col:17> 'void (int) __attribute__((noreturn))' Function 0x105828028 'exit' 'void (int) __attribute__((noreturn))'
|       | | |     `-IntegerLiteral 0x10582ae90 <col:22> 'int' 1
|       | | `-IfStmt 0x10582b2f0 <line:47:13, line:52:13> has_else
|       | |   |-BinaryOperator 0x10582b050 <line:47:17, col:39> 'int' '>'
|       | |   | |-CallExpr 0x10582afd8 <col:17, col:35> 'unsigned long'
|       | |   | | |-ImplicitCastExpr 0x10582afc0 <col:17> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|       | |   | | | `-DeclRefExpr 0x10582af30 <col:17> 'unsigned long (const char *)' Function 0x105828308 'strlen' 'unsigned long (const char *)'
|       | |   | | `-ImplicitCastExpr 0x10582b000 <col:24> 'const char *' <LValueToRValue>
|       | |   | |   `-DeclRefExpr 0x10582af50 <col:24> 'const char *' lvalue Var 0x105827818 'parent_node' 'const char *'
|       | |   | `-ImplicitCastExpr 0x10582b038 <col:39> 'unsigned long' <IntegralCast>
|       | |   |   `-IntegerLiteral 0x10582b018 <col:39> 'int' 0
|       | |   |-CompoundStmt 0x10582b210 <col:42, line:50:13>
|       | |   `-CompoundStmt 0x10582b2e0 <col:20, line:52:13>
|       | `-IfStmt 0x10582bb58 <line:54:16, line:62:9>
|       |   |-CallExpr 0x10582b5a8 <line:54:20, col:38> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x10582b520 <col:20> 'int ()' Function 0x10582b468 'S_ISDIR' 'int ()'
|       |   | `-CXXDependentScopeMemberExpr 0x10582b560 <col:28, col:31> '<dependent type>' contains-errors lvalue .st_mode
|       |   |   `-RecoveryExpr 0x10582b540 <col:28> '<dependent type>' contains-errors lvalue
|       |   `-CompoundStmt 0x10582bb20 <col:41, line:62:9>
|       |     |-DeclStmt 0x10582b650 <line:55:13, col:28>
|       |     | `-VarDecl 0x10582b5e8 <col:13, col:19> col:19 used node_name 'char *'
|       |     |-BinaryOperator 0x10582b780 <line:57:13, line:58:64> 'char *' contains-errors '='
|       |     | |-DeclRefExpr 0x10582b668 <line:57:13> 'char *' lvalue Var 0x10582b5e8 'node_name' 'char *'
|       |     | `-CallExpr 0x10582b748 <col:25, line:58:64> '<dependent type>' contains-errors
|       |     |   |-DeclRefExpr 0x10582b688 <line:57:25> 'int ()' Function 0x10582a0c8 'g_strdup_printf' 'int ()'
|       |     |   |-StringLiteral 0x10582b6a8 <col:41> 'char[4]' lvalue "STR"
|       |     |   |-DeclRefExpr 0x10582b6c8 <line:58:41> 'const char *' lvalue Var 0x105827818 'parent_node' 'const char *'
|       |     |   `-RecoveryExpr 0x10582b720 <col:54, col:58> '<dependent type>' contains-errors lvalue
|       |     |     `-DeclRefExpr 0x10582b6e8 <col:54> 'struct dirent *' lvalue Var 0x10580e0c8 'de' 'struct dirent *'
|       |     |-CallExpr 0x10582b8f8 <line:59:13, col:48> 'int'
|       |     | |-ImplicitCastExpr 0x10582b8e0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |     | | `-DeclRefExpr 0x10582b880 <col:13> 'int ()' Function 0x10582b7c8 'qemu_fdt_add_subnode' 'int ()'
|       |     | |-ImplicitCastExpr 0x10582b928 <col:34> 'void *' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x10582b8a0 <col:34> 'void *' lvalue ParmVar 0x10580dcd8 'fdt' 'void *'
|       |     | `-ImplicitCastExpr 0x10582b940 <col:39> 'char *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x10582b8c0 <col:39> 'char *' lvalue Var 0x10582b5e8 'node_name' 'char *'
|       |     |-CallExpr 0x10582b9b0 <line:60:13, col:29> 'int'
|       |     | |-ImplicitCastExpr 0x10582b998 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |     | | `-DeclRefExpr 0x10582b958 <col:13> 'int ()' Function 0x10582b348 'g_free' 'int ()'
|       |     | `-ImplicitCastExpr 0x10582b9d8 <col:20> 'char *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x10582b978 <col:20> 'char *' lvalue Var 0x10582b5e8 'node_name' 'char *'
|       |     `-CallExpr 0x10582baa8 <line:61:13, col:36> 'void'
|       |       |-ImplicitCastExpr 0x10582ba90 <col:13> 'void (*)(void *, const char *)' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x10582ba00 <col:13> 'void (void *, const char *)' Function 0x10580de30 'read_fstree' 'void (void *, const char *)'
|       |       |-ImplicitCastExpr 0x10582bad8 <col:25> 'void *' <LValueToRValue>
|       |       | `-DeclRefExpr 0x10582ba20 <col:25> 'void *' lvalue ParmVar 0x10580dcd8 'fdt' 'void *'
|       |       `-ImplicitCastExpr 0x10582bb08 <col:30> 'const char *' <NoOp>
|       |         `-ImplicitCastExpr 0x10582baf0 <col:30> 'char *' <LValueToRValue>
|       |           `-DeclRefExpr 0x10582ba40 <col:30> 'char *' lvalue Var 0x105829cf0 'tmpnam' 'char *'
|       `-CallExpr 0x10582bc00 <line:64:9, col:22> 'int'
|         |-ImplicitCastExpr 0x10582bbe8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x10582bba8 <col:9> 'int ()' Function 0x10582b348 'g_free' 'int ()'
|         `-ImplicitCastExpr 0x10582bc28 <col:16> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x10582bbc8 <col:16> 'char *' lvalue Var 0x105829cf0 'tmpnam' 'char *'
|-FunctionDecl 0x1058278e0 <line:9:9> col:9 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1058279e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x105827a48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x105827988 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x105828028 <line:12:9> col:9 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x105828128 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1058280d0 <<invalid sloc>> Implicit 869
`-FunctionDecl 0x105828308 <line:14:28> col:28 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x105829630 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1058283b0 <<invalid sloc>> Implicit 902
