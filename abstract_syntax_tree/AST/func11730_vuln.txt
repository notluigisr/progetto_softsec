TranslationUnitDecl 0x122824a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228258b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122824fd0 '__int128'
|-TypedefDecl 0x122825928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122824ff0 'unsigned __int128'
|-TypedefDecl 0x12380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12380bc00 'struct __NSConstantString_tag'
|   `-Record 0x122825980 '__NSConstantString_tag'
|-TypedefDecl 0x12380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122825190 '__SVInt8_t'
|-TypedefDecl 0x12380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1228251b0 '__SVInt16_t'
|-TypedefDecl 0x12380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1228251d0 '__SVInt32_t'
|-TypedefDecl 0x12380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1228251f0 '__SVInt64_t'
|-TypedefDecl 0x12380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122825210 '__SVUint8_t'
|-TypedefDecl 0x12380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122825230 '__SVUint16_t'
|-TypedefDecl 0x12380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122825250 '__SVUint32_t'
|-TypedefDecl 0x12380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122825270 '__SVUint64_t'
|-TypedefDecl 0x12380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122825290 '__SVFloat16_t'
|-TypedefDecl 0x12380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1228252b0 '__SVFloat32_t'
|-TypedefDecl 0x12380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1228252d0 '__SVFloat64_t'
|-TypedefDecl 0x12380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1228252f0 '__SVBfloat16_t'
|-TypedefDecl 0x12380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122825310 '__clang_svint8x2_t'
|-TypedefDecl 0x12380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122825330 '__clang_svint16x2_t'
|-TypedefDecl 0x12380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122825350 '__clang_svint32x2_t'
|-TypedefDecl 0x12380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122825370 '__clang_svint64x2_t'
|-TypedefDecl 0x12380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122825390 '__clang_svuint8x2_t'
|-TypedefDecl 0x12380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1228253b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1228253d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1228253f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122825410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122825430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122825450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122825470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122825490 '__clang_svint8x3_t'
|-TypedefDecl 0x12380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1228254b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1228254d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1228254f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122825510 '__clang_svuint8x3_t'
|-TypedefDecl 0x12380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122825530 '__clang_svuint16x3_t'
|-TypedefDecl 0x12380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122825550 '__clang_svuint32x3_t'
|-TypedefDecl 0x12380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122825570 '__clang_svuint64x3_t'
|-TypedefDecl 0x12380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122825590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1228255b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1228255d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1228255f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122825610 '__clang_svint8x4_t'
|-TypedefDecl 0x12380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122825630 '__clang_svint16x4_t'
|-TypedefDecl 0x12380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122825650 '__clang_svint32x4_t'
|-TypedefDecl 0x12380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122825670 '__clang_svint64x4_t'
|-TypedefDecl 0x12380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122825690 '__clang_svuint8x4_t'
|-TypedefDecl 0x12380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228256b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228256d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228256f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122825710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122825730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122825750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122825770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122825790 '__SVBool_t'
|-TypedefDecl 0x12380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228257b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228257d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228257f0 '__SVCount_t'
|-TypedefDecl 0x12380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x122824ab0 'char'
|-TypedefDecl 0x12380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x122824ab0 'char'
`-FunctionDecl 0x12380df18 <dataset_diviso_filec/func11730_vuln.c:1:1, line:29:1> line:1:1 invalid eval_next_non_blank 'int (char *, int *, int *)'
  |-ParmVarDecl 0x12380dcf0 <col:21, col:29> col:29 used arg 'char *'
  |-ParmVarDecl 0x12380dda8 <col:34, col:45> col:45 invalid evalarg 'int *'
  |-ParmVarDecl 0x12380de28 <col:54, col:59> col:59 used getnext 'int *'
  `-CompoundStmt 0x12382a7e0 <line:2:1, line:29:1>
    |-DeclStmt 0x1238268d0 <line:3:5, col:31>
    | `-VarDecl 0x12380dff0 <col:5, col:30> col:13 used p 'char *' cinit
    |   `-ImplicitCastExpr 0x12380e278 <col:17, col:30> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x12380e238 <col:17, col:30> 'int'
    |       |-ImplicitCastExpr 0x12380e220 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12380e1b0 <col:17> 'int ()' Function 0x12380e0f8 'skipwhite' 'int ()'
    |       `-ImplicitCastExpr 0x12380e260 <col:27> 'char *' <LValueToRValue>
    |         `-DeclRefExpr 0x12380e1d0 <col:27> 'char *' lvalue ParmVar 0x12380dcf0 'arg' 'char *'
    |-BinaryOperator 0x1238269f0 <line:5:5, col:16> 'int' contains-errors '='
    | |-UnaryOperator 0x1238269b8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1238269a0 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1238268e8 <col:6> 'int *' lvalue ParmVar 0x12380de28 'getnext' 'int *'
    | `-RecoveryExpr 0x1238269d0 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12382a760 <line:6:5, line:27:5>
    | |-RecoveryExpr 0x123827338 <line:6:9, line:11:57> '_Bool' contains-errors
    | `-CompoundStmt 0x12382a738 <line:12:5, line:27:5>
    |   |-DeclStmt 0x1238273d8 <line:13:2, col:14>
    |   | `-VarDecl 0x123827370 <col:2, col:10> col:10 used next 'char *'
    |   |-IfStmt 0x12382a598 <line:15:2, line:20:59> has_else
    |   | |-BinaryOperator 0x1238274f8 <line:15:6, col:12> 'int' contains-errors '=='
    |   | | |-UnaryOperator 0x1238274c0 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
    |   | | | `-ImplicitCastExpr 0x1238274a8 <col:7> 'char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x1238273f0 <col:7> 'char *' lvalue Var 0x12380dff0 'p' 'char *'
    |   | | `-RecoveryExpr 0x1238274d8 <col:12> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x12382a168 <line:16:6, col:36> 'char *' '='
    |   | | |-DeclRefExpr 0x123827518 <col:6> 'char *' lvalue Var 0x123827370 'next' 'char *'
    |   | | `-ImplicitCastExpr 0x12382a150 <col:13, col:36> 'char *' <IntegralToPointer>
    |   | |   `-CallExpr 0x12382a110 <col:13, col:36> 'int'
    |   | |     |-ImplicitCastExpr 0x12382a0f8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x12382a0b8 <col:13> 'int ()' Function 0x12382a000 'newline_skip_comments' 'int ()'
    |   | |     `-ImplicitCastExpr 0x12382a138 <col:35> 'char *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x12382a0d8 <col:35> 'char *' lvalue Var 0x12380dff0 'p' 'char *'
    |   | `-IfStmt 0x12382a568 <line:17:7, line:20:59> has_else
    |   |   |-RecoveryExpr 0x12382a1f0 <line:17:11, col:35> '_Bool' contains-errors
    |   |   |-BinaryOperator 0x12382a378 <line:18:6, col:47> 'char *' contains-errors '='
    |   |   | |-DeclRefExpr 0x12382a210 <col:6> 'char *' lvalue Var 0x123827370 'next' 'char *'
    |   |   | `-CallExpr 0x12382a350 <col:13, col:47> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x12382a310 <col:13> 'int ()' Function 0x12382a258 'getline_peek_skip_comments' 'int ()'
    |   |   |   `-RecoveryExpr 0x12382a330 <col:40> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x12382a548 <line:20:6, col:59> 'char *' contains-errors '='
    |   |     |-DeclRefExpr 0x12382a398 <col:6> 'char *' lvalue Var 0x123827370 'next' 'char *'
    |   |     `-CallExpr 0x12382a520 <col:13, col:59> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x12382a498 <col:13> 'int ()' Function 0x12382a3e0 'peek_next_line_from_context' 'int ()'
    |   |       `-CXXDependentScopeMemberExpr 0x12382a4d8 <col:41, col:50> '<dependent type>' contains-errors lvalue ->eval_cctx
    |   |         `-RecoveryExpr 0x12382a4b8 <col:41> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12382a718 <line:22:2, line:26:2>
    |     |-RecoveryExpr 0x12382a5e8 <line:22:6, col:14> '_Bool' contains-errors
    |     `-CompoundStmt 0x12382a700 <line:23:2, line:26:2>
    |       `-ReturnStmt 0x12382a6f0 <line:25:6, col:27>
    |         `-CallExpr 0x12382a6b0 <col:13, col:27> 'int'
    |           |-ImplicitCastExpr 0x12382a698 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x12382a658 <col:13> 'int ()' Function 0x12380e0f8 'skipwhite' 'int ()'
    |           `-ImplicitCastExpr 0x12382a6d8 <col:23> 'char *' <LValueToRValue>
    |             `-DeclRefExpr 0x12382a678 <col:23> 'char *' lvalue Var 0x123827370 'next' 'char *'
    `-ReturnStmt 0x12382a7d0 <line:28:5, col:12>
      `-ImplicitCastExpr 0x12382a7b8 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x12382a7a0 <col:12> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x12382a780 <col:12> 'char *' lvalue Var 0x12380dff0 'p' 'char *'
