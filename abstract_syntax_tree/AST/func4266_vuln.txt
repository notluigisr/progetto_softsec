TranslationUnitDecl 0x151055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1510564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151055bd0 '__int128'
|-TypedefDecl 0x151056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151055bf0 'unsigned __int128'
|-TypedefDecl 0x151126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151126800 'struct __NSConstantString_tag'
|   `-Record 0x151056580 '__NSConstantString_tag'
|-TypedefDecl 0x151126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151055d90 '__SVInt8_t'
|-TypedefDecl 0x151126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151055db0 '__SVInt16_t'
|-TypedefDecl 0x151126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151055dd0 '__SVInt32_t'
|-TypedefDecl 0x151126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151055df0 '__SVInt64_t'
|-TypedefDecl 0x151126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151055e10 '__SVUint8_t'
|-TypedefDecl 0x151126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151055e30 '__SVUint16_t'
|-TypedefDecl 0x151126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151055e50 '__SVUint32_t'
|-TypedefDecl 0x151126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151055e70 '__SVUint64_t'
|-TypedefDecl 0x151126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151055e90 '__SVFloat16_t'
|-TypedefDecl 0x151126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151055eb0 '__SVFloat32_t'
|-TypedefDecl 0x151126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151055ed0 '__SVFloat64_t'
|-TypedefDecl 0x151126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x151126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1511270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1511271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1511272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1511273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1511274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1510560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1510560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1510560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1511275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1511276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1510561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1510561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1511280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1510561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1511281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151056230 '__clang_svint16x4_t'
|-TypedefDecl 0x151128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151056250 '__clang_svint32x4_t'
|-TypedefDecl 0x151128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1511282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1510562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1511283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1510562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1510562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1511284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1511285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151056390 '__SVBool_t'
|-TypedefDecl 0x151128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1510563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1511286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1510563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1510563f0 '__SVCount_t'
|-TypedefDecl 0x1511287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1511287b0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-TypedefDecl 0x151128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1511287b0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-FunctionDecl 0x151128a88 <dataset_diviso_filec/func4266_vuln.c:1:1, line:53:1> line:1:1 invalid cif_print_page 'int (int *, int *)'
| |-ParmVarDecl 0x151128928 <col:16, col:35> col:35 invalid pdev 'int *'
| |-ParmVarDecl 0x1511289a8 <col:41, col:50> col:50 invalid prn_stream 'int *'
| `-CompoundStmt 0x151146aa0 <line:2:1, line:53:1>
|   |-DeclStmt 0x151128d58 <line:2:3, col:66>
|   | `-VarDecl 0x151128b58 <col:3, col:7> col:7 used line_size 'int'
|   |-DeclStmt 0x151128df0 <line:3:9, col:17>
|   | `-VarDecl 0x151128d88 <col:9, col:13> col:13 used lnum 'int'
|   |-DeclStmt 0x151128eb8 <line:5:9, col:16>
|   | `-VarDecl 0x151128e50 <col:9, col:15> col:15 used s 'char *'
|   |-DeclStmt 0x151128fe8 <line:6:9, col:31>
|   | |-VarDecl 0x151128ee8 <col:9, col:13> col:13 used scanline 'int'
|   | `-VarDecl 0x151128f68 <col:9, col:23> col:23 used scanbyte 'int'
|   |-DeclStmt 0x151142118 <line:7:9, col:26>
|   | |-VarDecl 0x151142018 <col:9, col:13> col:13 used length 'int'
|   | `-VarDecl 0x151142098 <col:9, col:21> col:21 used start 'int'
|   |-IfStmt 0x151142350 <line:10:9, line:11:46>
|   | |-BinaryOperator 0x1511421a8 <line:10:13, col:19> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x151142188 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x151142148 <col:19> 'int' 0
|   | `-CallExpr 0x151142328 <line:11:17, col:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1511422a8 <col:17> 'int ()' Function 0x1511421f0 'return_error' 'int ()'
|   |   `-RecoveryExpr 0x151142308 <col:30> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x151142f48 <line:13:9, line:16:36> has_else
|   | |-BinaryOperator 0x151142b50 <line:13:13, col:47> 'int' contains-errors '=='
|   | | |-ParenExpr 0x151142ad8 <col:13, col:42> 'char *' contains-errors
|   | | | `-BinaryOperator 0x151142ab8 <col:14, col:41> 'char *' contains-errors '='
|   | | |   |-DeclRefExpr 0x151142370 <col:14> 'char *' lvalue Var 0x151128e50 's' 'char *'
|   | | |   `-CallExpr 0x151142a88 <col:18, col:41> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x1511429d0 <col:18> 'char *(const char *, int)' Function 0x1511427f0 'strchr' 'char *(const char *, int)'
|   | | |     |-CXXDependentScopeMemberExpr 0x151142a10 <col:25, col:31> '<dependent type>' contains-errors lvalue ->fname
|   | | |     | `-RecoveryExpr 0x1511429f0 <col:25> '<dependent type>' contains-errors lvalue
|   | | |     `-CharacterLiteral 0x151142a58 <col:38> 'int' 46
|   | | `-RecoveryExpr 0x151142b30 <col:47> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x151142e40 <line:14:17, col:48> 'int' contains-errors '='
|   | | |-DeclRefExpr 0x151142b70 <col:17> 'int' lvalue Var 0x151142018 'length' 'int'
|   | | `-BinaryOperator 0x151142e20 <col:26, col:48> '<dependent type>' contains-errors '+'
|   | |   |-CallExpr 0x151142dd8 <col:26, col:44> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x151142d38 <col:26> 'unsigned long (const char *)' Function 0x151142bc8 'strlen' 'unsigned long (const char *)'
|   | |   | `-CXXDependentScopeMemberExpr 0x151142d78 <col:33, col:39> '<dependent type>' contains-errors lvalue ->fname
|   | |   |   `-RecoveryExpr 0x151142d58 <col:33> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x151142e00 <col:48> 'int' 1
|   | `-BinaryOperator 0x151142f28 <line:16:17, col:36> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x151142e60 <col:17> 'int' lvalue Var 0x151142018 'length' 'int'
|   |   `-BinaryOperator 0x151142f08 <col:26, col:36> '<dependent type>' contains-errors '-'
|   |     |-DeclRefExpr 0x151142e80 <col:26> 'char *' lvalue Var 0x151128e50 's' 'char *'
|   |     `-CXXDependentScopeMemberExpr 0x151142ec0 <col:30, col:36> '<dependent type>' contains-errors lvalue ->fname
|   |       `-RecoveryExpr 0x151142ea0 <col:30> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x151143a70 <line:17:9, col:72> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x151142f78 <col:9> 'char *' lvalue Var 0x151128e50 's' 'char *'
|   | `-CStyleCastExpr 0x151143a48 <col:13, col:72> 'char *' contains-errors <Dependent>
|   |   `-CallExpr 0x1511439f0 <col:21, col:72> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1511438b8 <col:21> 'int ()' Function 0x151143800 'gs_malloc' 'int ()'
|   |     |-CXXDependentScopeMemberExpr 0x1511438f8 <col:31, col:37> '<dependent type>' contains-errors lvalue ->memory
|   |     | `-RecoveryExpr 0x1511438d8 <col:31> '<dependent type>' contains-errors lvalue
|   |     |-DeclRefExpr 0x151143940 <col:45> 'int' lvalue Var 0x151142018 'length' 'int'
|   |     |-UnaryExprOrTypeTraitExpr 0x151143970 <col:53, col:64> 'unsigned long' sizeof 'char'
|   |     `-StringLiteral 0x1511439d0 <col:67> 'char[4]' lvalue "STR"
|   |-CallExpr 0x151143e38 <line:19:9, col:39> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x151143d28 <col:9> 'char *(char *, const char *, unsigned long)' Function 0x151143ad8 'strncpy' 'char *(char *, const char *, unsigned long)'
|   | |-DeclRefExpr 0x151143d48 <col:17> 'char *' lvalue Var 0x151128e50 's' 'char *'
|   | |-CXXDependentScopeMemberExpr 0x151143d88 <col:20, col:26> '<dependent type>' contains-errors lvalue ->fname
|   | | `-RecoveryExpr 0x151143d68 <col:20> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x151143dd0 <col:33> 'int' lvalue Var 0x151142018 'length' 'int'
|   |-BinaryOperator 0x151143f68 <line:20:9, col:25> 'char' '='
|   | |-UnaryOperator 0x151143f20 <col:9, col:21> 'char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x151143f00 <col:10, col:21> 'char *'
|   | |   `-BinaryOperator 0x151143ee0 <col:11, col:15> 'char *' '+'
|   | |     |-ImplicitCastExpr 0x151143eb0 <col:11> 'char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x151143e70 <col:11> 'char *' lvalue Var 0x151128e50 's' 'char *'
|   | |     `-ImplicitCastExpr 0x151143ec8 <col:15> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x151143e90 <col:15> 'int' lvalue Var 0x151142018 'length' 'int'
|   | `-ImplicitCastExpr 0x151143f50 <col:25> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x151143f38 <col:25> 'int' 0
|   |-CallExpr 0x1511440e8 <line:21:9, col:40> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x151144068 <col:9> 'int ()' Function 0x151143fb0 'gp_fprintf' 'int ()'
|   | |-RecoveryExpr 0x151144088 <col:20> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x1511440a8 <col:32> 'char[4]' lvalue "STR"
|   | `-DeclRefExpr 0x1511440c8 <col:39> 'char *' lvalue Var 0x151128e50 's' 'char *'
|   |-CallExpr 0x151144308 <line:22:9, col:50> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x151144200 <col:9> 'int ()' Function 0x151144148 'gs_free' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x151144240 <col:17, col:23> '<dependent type>' contains-errors lvalue ->memory
|   | | `-RecoveryExpr 0x151144220 <col:17> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x151144288 <col:31> 'char *' lvalue Var 0x151128e50 's' 'char *'
|   | |-DeclRefExpr 0x1511442a8 <col:34> 'int' lvalue Var 0x151142018 'length' 'int'
|   | |-IntegerLiteral 0x1511442c8 <col:42> 'int' 1
|   | `-StringLiteral 0x1511442e8 <col:45> 'char[4]' lvalue "STR"
|   |-ForStmt 0x1511468c0 <line:24:4, line:49:4>
|   | |-BinaryOperator 0x151144390 <line:24:9, col:16> 'int' '='
|   | | |-DeclRefExpr 0x151144350 <col:9> 'int' lvalue Var 0x151128d88 'lnum' 'int'
|   | | `-IntegerLiteral 0x151144370 <col:16> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x151144438 <col:19, col:32> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x1511443b0 <col:19> 'int' lvalue Var 0x151128d88 'lnum' 'int'
|   | | `-CXXDependentScopeMemberExpr 0x1511443f0 <col:26, col:32> '<dependent type>' contains-errors lvalue ->height
|   | |   `-RecoveryExpr 0x1511443d0 <col:26> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x151144478 <col:40, col:44> 'int' postfix '++'
|   | | `-DeclRefExpr 0x151144458 <col:40> 'int' lvalue Var 0x151128d88 'lnum' 'int'
|   | `-CompoundStmt 0x1511468a0 <col:48, line:49:4>
|   |   |-BinaryOperator 0x151144630 <line:26:7, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x1511445f0 <col:7> 'int' lvalue Var 0x151142018 'length' 'int'
|   |   | `-IntegerLiteral 0x151144610 <col:16> 'int' 0
|   |   `-ForStmt 0x151146868 <line:27:7, line:47:13>
|   |     |-BinaryOperator 0x151144690 <line:27:12, col:23> 'int' '='
|   |     | |-DeclRefExpr 0x151144650 <col:12> 'int' lvalue Var 0x151128ee8 'scanline' 'int'
|   |     | `-IntegerLiteral 0x151144670 <col:23> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x151144720 <col:26, col:37> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1511446f0 <col:26> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1511446b0 <col:26> 'int' lvalue Var 0x151128ee8 'scanline' 'int'
|   |     | `-ImplicitCastExpr 0x151144708 <col:37> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1511446d0 <col:37> 'int' lvalue Var 0x151128b58 'line_size' 'int'
|   |     |-UnaryOperator 0x151144760 <col:48, col:56> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x151144740 <col:48> 'int' lvalue Var 0x151128ee8 'scanline' 'int'
|   |     `-ForStmt 0x151146830 <line:35:10, line:47:13>
|   |       |-BinaryOperator 0x1511447b8 <line:35:15, col:26> 'int' '='
|   |       | |-DeclRefExpr 0x151144778 <col:15> 'int' lvalue Var 0x151128f68 'scanbyte' 'int'
|   |       | `-IntegerLiteral 0x151144798 <col:26> 'int' 7
|   |       |-<<<NULL>>>
|   |       |-BinaryOperator 0x151146038 <col:29, col:41> 'int' '>='
|   |       | |-ImplicitCastExpr 0x151146020 <col:29> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x1511447d8 <col:29> 'int' lvalue Var 0x151128f68 'scanbyte' 'int'
|   |       | `-IntegerLiteral 0x151146000 <col:41> 'int' 0
|   |       |-UnaryOperator 0x151146078 <col:44, col:52> 'int' postfix '--'
|   |       | `-DeclRefExpr 0x151146058 <col:44> 'int' lvalue Var 0x151128f68 'scanbyte' 'int'
|   |       `-IfStmt 0x151146800 <line:37:13, line:47:13> has_else
|   |         |-RecoveryExpr 0x151146110 <line:37:17, col:53> '_Bool' contains-errors
|   |         |-CompoundStmt 0x151146390 <col:56, line:41:13>
|   |         | |-IfStmt 0x151146338 <line:38:16, line:39:57>
|   |         | | |-BinaryOperator 0x151146188 <line:38:20, col:30> 'int' '=='
|   |         | | | |-ImplicitCastExpr 0x151146170 <col:20> 'int' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x151146130 <col:20> 'int' lvalue Var 0x151142018 'length' 'int'
|   |         | | | `-IntegerLiteral 0x151146150 <col:30> 'int' 0
|   |         | | `-BinaryOperator 0x151146318 <line:39:19, col:57> 'int' '='
|   |         | |   |-DeclRefExpr 0x1511461a8 <col:19> 'int' lvalue Var 0x151142098 'start' 'int'
|   |         | |   `-ParenExpr 0x1511462f8 <col:27, col:57> 'int'
|   |         | |     `-BinaryOperator 0x1511462d8 <col:28, col:56> 'int' '+'
|   |         | |       |-BinaryOperator 0x151146220 <col:28, col:39> 'int' '*'
|   |         | |       | |-ImplicitCastExpr 0x151146208 <col:28> 'int' <LValueToRValue>
|   |         | |       | | `-DeclRefExpr 0x1511461c8 <col:28> 'int' lvalue Var 0x151128ee8 'scanline' 'int'
|   |         | |       | `-IntegerLiteral 0x1511461e8 <col:39> 'int' 8
|   |         | |       `-ParenExpr 0x1511462b8 <col:43, col:56> 'int'
|   |         | |         `-BinaryOperator 0x151146298 <col:44, col:48> 'int' '-'
|   |         | |           |-IntegerLiteral 0x151146240 <col:44> 'int' 7
|   |         | |           `-ImplicitCastExpr 0x151146280 <col:48> 'int' <LValueToRValue>
|   |         | |             `-DeclRefExpr 0x151146260 <col:48> 'int' lvalue Var 0x151128f68 'scanbyte' 'int'
|   |         | `-UnaryOperator 0x151146378 <line:40:16, col:22> 'int' postfix '++'
|   |         |   `-DeclRefExpr 0x151146358 <col:16> 'int' lvalue Var 0x151142018 'length' 'int'
|   |         `-CompoundStmt 0x1511467e0 <line:41:20, line:47:13>
|   |           |-IfStmt 0x151146760 <line:42:16, line:45:53>
|   |           | |-BinaryOperator 0x151146408 <line:42:20, col:30> 'int' '!='
|   |           | | |-ImplicitCastExpr 0x1511463f0 <col:20> 'int' <LValueToRValue>
|   |           | | | `-DeclRefExpr 0x1511463b0 <col:20> 'int' lvalue Var 0x151142018 'length' 'int'
|   |           | | `-IntegerLiteral 0x1511463d0 <col:30> 'int' 0
|   |           | `-CallExpr 0x151146718 <line:43:19, line:45:53> '<dependent type>' contains-errors
|   |           |   |-DeclRefExpr 0x151146428 <line:43:19> 'int ()' Function 0x151143fb0 'gp_fprintf' 'int ()'
|   |           |   |-RecoveryExpr 0x151146448 <col:30> '<dependent type>' contains-errors lvalue
|   |           |   |-StringLiteral 0x151146468 <col:42> 'char[4]' lvalue "STR"
|   |           |   |-BinaryOperator 0x1511464e0 <col:49, col:58> 'int' '*'
|   |           |   | |-ImplicitCastExpr 0x1511464c8 <col:49> 'int' <LValueToRValue>
|   |           |   | | `-DeclRefExpr 0x151146488 <col:49> 'int' lvalue Var 0x151142018 'length' 'int'
|   |           |   | `-IntegerLiteral 0x1511464a8 <col:58> 'int' 4
|   |           |   |-BinaryOperator 0x1511465f0 <line:44:28, col:49> 'int' '+'
|   |           |   | |-BinaryOperator 0x151146558 <col:28, col:36> 'int' '*'
|   |           |   | | |-ImplicitCastExpr 0x151146540 <col:28> 'int' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x151146500 <col:28> 'int' lvalue Var 0x151142098 'start' 'int'
|   |           |   | | `-IntegerLiteral 0x151146520 <col:36> 'int' 4
|   |           |   | `-BinaryOperator 0x1511465d0 <col:40, col:49> 'int' '*'
|   |           |   |   |-ImplicitCastExpr 0x1511465b8 <col:40> 'int' <LValueToRValue>
|   |           |   |   | `-DeclRefExpr 0x151146578 <col:40> 'int' lvalue Var 0x151142018 'length' 'int'
|   |           |   |   `-IntegerLiteral 0x151146598 <col:49> 'int' 2
|   |           |   `-BinaryOperator 0x1511466f8 <line:45:28, col:52> '<dependent type>' contains-errors '*'
|   |           |     |-ParenExpr 0x1511466b8 <col:28, col:48> '<dependent type>' contains-errors
|   |           |     | `-BinaryOperator 0x151146698 <col:29, col:44> '<dependent type>' contains-errors '-'
|   |           |     |   |-CXXDependentScopeMemberExpr 0x151146630 <col:29, col:35> '<dependent type>' contains-errors lvalue ->height
|   |           |     |   | `-RecoveryExpr 0x151146610 <col:29> '<dependent type>' contains-errors lvalue
|   |           |     |   `-DeclRefExpr 0x151146678 <col:44> 'int' lvalue Var 0x151128d88 'lnum' 'int'
|   |           |     `-IntegerLiteral 0x1511466d8 <col:52> 'int' 4
|   |           `-BinaryOperator 0x1511467c0 <line:46:16, col:25> 'int' '='
|   |             |-DeclRefExpr 0x151146780 <col:16> 'int' lvalue Var 0x151142018 'length' 'int'
|   |             `-IntegerLiteral 0x1511467a0 <col:25> 'int' 0
|   |-CallExpr 0x151146958 <line:50:9, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1511468f8 <col:9> 'int ()' Function 0x151143fb0 'gp_fprintf' 'int ()'
|   | |-RecoveryExpr 0x151146918 <col:20> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x151146938 <col:32> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x151146a90 <line:52:9, col:16>
|     `-IntegerLiteral 0x151146a70 <col:16> 'int' 0
|-FunctionDecl 0x1511427f0 <line:13:18> col:18 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1511428f0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x151142958 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x151142898 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x151142bc8 <line:14:26> col:26 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x151142cc8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x151142c70 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x151143ad8 <line:19:9> col:9 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x151143bd8 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x151143c40 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x151143ca8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x151143b80 <<invalid sloc>> Implicit 886
