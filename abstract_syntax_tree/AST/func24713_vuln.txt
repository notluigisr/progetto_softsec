TranslationUnitDecl 0x12f830208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f8310b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f8307d0 '__int128'
|-TypedefDecl 0x12f831128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f8307f0 'unsigned __int128'
|-TypedefDecl 0x12f01e230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f01e000 'struct __NSConstantString_tag'
|   `-Record 0x12f831180 '__NSConstantString_tag'
|-TypedefDecl 0x12f01e298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f830990 '__SVInt8_t'
|-TypedefDecl 0x12f01e300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f8309b0 '__SVInt16_t'
|-TypedefDecl 0x12f01e368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f8309d0 '__SVInt32_t'
|-TypedefDecl 0x12f01e3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f8309f0 '__SVInt64_t'
|-TypedefDecl 0x12f01e438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f830a10 '__SVUint8_t'
|-TypedefDecl 0x12f01e4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f830a30 '__SVUint16_t'
|-TypedefDecl 0x12f01e508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f830a50 '__SVUint32_t'
|-TypedefDecl 0x12f01e570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f830a70 '__SVUint64_t'
|-TypedefDecl 0x12f01e5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f830a90 '__SVFloat16_t'
|-TypedefDecl 0x12f01e640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f830ab0 '__SVFloat32_t'
|-TypedefDecl 0x12f01e6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f830ad0 '__SVFloat64_t'
|-TypedefDecl 0x12f01e710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f830af0 '__SVBfloat16_t'
|-TypedefDecl 0x12f01e778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f830b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f01e7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f830b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f01e848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f830b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f01e8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f830b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f01e918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f830b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f01e980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f830bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f01e9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f830bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f01ea50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f830bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f01eab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f830c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f01eb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f830c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f01eb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f830c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f01ebf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f830c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f01ec58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f830c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12f01ecc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f830cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f01ed28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f830cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f01ed90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f830cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f01edf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f830d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f01ee60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f830d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f01eec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f830d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f01ef30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f830d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f01ef98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f830d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f030000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f830db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f030068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f830dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f0300d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f830df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f030138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f830e10 '__clang_svint8x4_t'
|-TypedefDecl 0x12f0301a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f830e30 '__clang_svint16x4_t'
|-TypedefDecl 0x12f030208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f830e50 '__clang_svint32x4_t'
|-TypedefDecl 0x12f030270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f830e70 '__clang_svint64x4_t'
|-TypedefDecl 0x12f0302d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f830e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f030340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f830eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f0303a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f830ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f030410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f830ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f030478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f830f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f0304e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f830f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f030548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f830f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f0305b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f830f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f030618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f830f90 '__SVBool_t'
|-TypedefDecl 0x12f030680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f830fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f0306e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f830fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f030750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f830ff0 '__SVCount_t'
|-TypedefDecl 0x12f0307f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f0307b0 'char *'
|   `-BuiltinType 0x12f8302b0 'char'
|-TypedefDecl 0x12f030868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f0307b0 'char *'
|   `-BuiltinType 0x12f8302b0 'char'
`-FunctionDecl 0x12f030a38 <dataset_diviso_filec/func24713_vuln.c:1:1, line:55:1> line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x12f030958 <col:12> col:12 SplDoublyLinkedList 'int'
  |-ParmVarDecl 0x12f0308d8 <col:33> col:33 unserialize 'int'
  `-CompoundStmt 0x12f04f910 <line:2:1, line:55:1>
    |-DeclStmt 0x12f030c30 <line:5:2, col:11>
    | `-VarDecl 0x12f030bc8 <col:2, col:8> col:8 used buf 'char *'
    |-DeclStmt 0x12f030cc8 <line:6:2, col:13>
    | `-VarDecl 0x12f030c60 <col:2, col:6> col:6 used buf_len 'int'
    |-DeclStmt 0x12f030e28 <line:7:2, col:28>
    | |-VarDecl 0x12f030d28 <col:2, col:23> col:23 used p 'const unsigned char *'
    | `-VarDecl 0x12f030da8 <col:2, col:27> col:27 used s 'const unsigned char *'
    |-IfStmt 0x12f04cda8 <line:10:2, line:12:2>
    | |-RecoveryExpr 0x12f04cd60 <line:10:6, col:81> '_Bool' contains-errors
    | `-CompoundStmt 0x12f04cd90 <col:90, line:12:2>
    |   `-ReturnStmt 0x12f04cd80 <line:11:3>
    |-IfStmt 0x12f04cfa0 <line:14:2, line:17:2>
    | |-BinaryOperator 0x12f04ce20 <line:14:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x12f04ce08 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f04cdc8 <col:6> 'int' lvalue Var 0x12f030c60 'buf_len' 'int'
    | | `-IntegerLiteral 0x12f04cde8 <col:17> 'int' 0
    | `-CompoundStmt 0x12f04cf88 <col:20, line:17:2>
    |   `-ReturnStmt 0x12f04cf78 <line:16:3>
    |-BinaryOperator 0x12f04d098 <line:19:2, col:32> 'const unsigned char *' '='
    | |-DeclRefExpr 0x12f04cfc0 <col:2> 'const unsigned char *' lvalue Var 0x12f030da8 's' 'const unsigned char *'
    | `-BinaryOperator 0x12f04d078 <col:6, col:32> 'const unsigned char *' '='
    |   |-DeclRefExpr 0x12f04cfe0 <col:6> 'const unsigned char *' lvalue Var 0x12f030d28 'p' 'const unsigned char *'
    |   `-CStyleCastExpr 0x12f04d050 <col:10, col:32> 'const unsigned char *' <BitCast>
    |     `-ImplicitCastExpr 0x12f04d038 <col:32> 'char *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x12f04d000 <col:32> 'char *' lvalue Var 0x12f030bc8 'buf' 'char *'
    |-IfStmt 0x12f04d758 <line:24:2, line:27:2>
    | |-RecoveryExpr 0x12f04d5b8 <line:24:6, col:95> '_Bool' contains-errors
    | `-CompoundStmt 0x12f04d740 <col:104, line:27:2>
    |   `-GotoStmt 0x12f04d728 <line:26:3, col:8> 'error' 0x12f04d6d8
    |-WhileStmt 0x12f04f640 <line:32:2, line:41:2>
    | |-BinaryOperator 0x12f04d930 <line:32:8, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x12f04d918 <col:8, col:9> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x12f04d900 <col:8, col:9> 'unsigned char' <LValueToRValue>
    | | |   `-UnaryOperator 0x12f04d8d0 <col:8, col:9> 'const unsigned char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x12f04d8b8 <col:9> 'const unsigned char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x12f04d898 <col:9> 'const unsigned char *' lvalue Var 0x12f030d28 'p' 'const unsigned char *'
    | | `-CharacterLiteral 0x12f04d8e8 <col:14> 'int' 58
    | `-CompoundStmt 0x12f04f620 <col:19, line:41:2>
    |   |-UnaryOperator 0x12f04d970 <line:33:3, col:5> 'const unsigned char *' prefix '++'
    |   | `-DeclRefExpr 0x12f04d950 <col:5> 'const unsigned char *' lvalue Var 0x12f030d28 'p' 'const unsigned char *'
    |   `-IfStmt 0x12f04db00 <line:35:3, line:38:3>
    |     |-RecoveryExpr 0x12f04da90 <line:35:7, col:71> '_Bool' contains-errors
    |     `-CompoundStmt 0x12f04dae8 <col:74, line:38:3>
    |       `-GotoStmt 0x12f04dad0 <line:37:4, col:9> 'error' 0x12f04d6d8
    |-IfStmt 0x12f04f748 <line:43:2, line:45:2>
    | |-BinaryOperator 0x12f04f6f8 <line:43:6, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x12f04f6e0 <col:6, col:7> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x12f04f6c8 <col:6, col:7> 'unsigned char' <LValueToRValue>
    | | |   `-UnaryOperator 0x12f04f698 <col:6, col:7> 'const unsigned char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x12f04f680 <col:7> 'const unsigned char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x12f04f660 <col:7> 'const unsigned char *' lvalue Var 0x12f030d28 'p' 'const unsigned char *'
    | | `-CharacterLiteral 0x12f04f6b0 <col:12> 'int' 0
    | `-CompoundStmt 0x12f04f730 <col:18, line:45:2>
    |   `-GotoStmt 0x12f04f718 <line:44:3, col:8> 'error' 0x12f04d6d8
    |-ReturnStmt 0x12f04f868 <line:48:2>
    |-LabelStmt 0x12f04f8a0 <line:50:1, col:6> 'error'
    | `-NullStmt 0x12f04f898 <col:6>
    `-ReturnStmt 0x12f04f900 <line:53:2>
