TranslationUnitDecl 0x156055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1560564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156055bd0 '__int128'
|-TypedefDecl 0x156056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156055bf0 'unsigned __int128'
|-TypedefDecl 0x15680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15680bc00 'struct __NSConstantString_tag'
|   `-Record 0x156056580 '__NSConstantString_tag'
|-TypedefDecl 0x15680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156055d90 '__SVInt8_t'
|-TypedefDecl 0x15680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156055db0 '__SVInt16_t'
|-TypedefDecl 0x15680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156055dd0 '__SVInt32_t'
|-TypedefDecl 0x15680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156055df0 '__SVInt64_t'
|-TypedefDecl 0x15680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156055e10 '__SVUint8_t'
|-TypedefDecl 0x15680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156055e30 '__SVUint16_t'
|-TypedefDecl 0x15680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156055e50 '__SVUint32_t'
|-TypedefDecl 0x15680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156055e70 '__SVUint64_t'
|-TypedefDecl 0x15680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156055e90 '__SVFloat16_t'
|-TypedefDecl 0x15680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1560560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1560560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1560560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1560561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1560561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1560561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1560562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1560562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1560562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156056390 '__SVBool_t'
|-TypedefDecl 0x15680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1560563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1560563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1560563f0 '__SVCount_t'
|-TypedefDecl 0x15680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-TypedefDecl 0x15680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-FunctionDecl 0x157008288 <dataset_diviso_filec/func19787_nonvuln.c:1:1, line:35:1> line:1:1 respip_action_cfg 'int (struct respip_set *, const char *, const char *)'
| |-ParmVarDecl 0x15680e248 <col:19, col:38> col:38 used set 'struct respip_set *'
| |-ParmVarDecl 0x15680e2c8 <col:43, col:55> col:55 used ipstr 'const char *'
| |-ParmVarDecl 0x15680e348 <line:2:2, col:14> col:14 used actnstr 'const char *'
| `-CompoundStmt 0x156123d78 <line:3:1, line:35:1>
|   |-DeclStmt 0x157008578 <line:4:2, col:24>
|   | |-RecordDecl 0x157008390 <col:2, col:9> col:9 struct resp_addr
|   | `-VarDecl 0x1570084f8 <col:2, col:20> col:20 used node 'struct resp_addr *'
|   |-DeclStmt 0x157008728 <line:5:2, col:27>
|   | |-EnumDecl 0x157008590 <col:2, col:7> col:7 respip_action
|   | `-VarDecl 0x1570086a8 <col:2, col:21> col:21 referenced invalid action 'enum respip_action'
|   |-IfStmt 0x157008a60 <line:7:2, line:8:10>
|   | |-UnaryOperator 0x157008a18 <line:7:5, col:48> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x1570089f8 <col:6, col:48> 'struct resp_addr *'
|   | |   `-BinaryOperator 0x1570089d8 <col:7, col:47> 'struct resp_addr *' '='
|   | |     |-DeclRefExpr 0x157008740 <col:7> 'struct resp_addr *' lvalue Var 0x1570084f8 'node' 'struct resp_addr *'
|   | |     `-ImplicitCastExpr 0x1570089c0 <col:12, col:47> 'struct resp_addr *' <IntegralToPointer>
|   | |       `-CallExpr 0x157008958 <col:12, col:47> 'int'
|   | |         |-ImplicitCastExpr 0x157008940 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | |         | `-DeclRefExpr 0x157008890 <col:12> 'int ()' Function 0x1570087d8 'respip_find_or_create' 'int ()'
|   | |         |-ImplicitCastExpr 0x157008990 <col:34> 'struct respip_set *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x1570088b0 <col:34> 'struct respip_set *' lvalue ParmVar 0x15680e248 'set' 'struct respip_set *'
|   | |         |-ImplicitCastExpr 0x1570089a8 <col:39> 'const char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x1570088d0 <col:39> 'const char *' lvalue ParmVar 0x15680e2c8 'ipstr' 'const char *'
|   | |         `-IntegerLiteral 0x1570088f0 <col:46> 'int' 1
|   | `-ReturnStmt 0x157008a50 <line:8:3, col:10>
|   |   `-IntegerLiteral 0x157008a30 <col:10> 'int' 0
|   |-IfStmt 0x157008d98 <line:9:2, line:12:2>
|   | |-BinaryOperator 0x157008b38 <line:9:5, col:21> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x157008ab8 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x157008a80 <col:5> 'struct resp_addr *' lvalue Var 0x1570084f8 'node' 'struct resp_addr *'
|   | | `-RecoveryExpr 0x157008b18 <col:21> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x157008d80 <col:34, line:12:2>
|   |   `-CallExpr 0x157008d48 <line:10:3, line:11:9> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x157008c38 <line:10:3> 'int ()' Function 0x157008b80 'verbose' 'int ()'
|   |     |-RecoveryExpr 0x157008d28 <col:11> '<dependent type>' contains-errors lvalue
|   |     |-StringLiteral 0x157008cb0 <col:23> 'char[4]' lvalue "STR"
|   |     `-DeclRefExpr 0x157008cd0 <line:11:4> 'const char *' lvalue ParmVar 0x15680e2c8 'ipstr' 'const char *'
|   |-IfStmt 0x156123c78 <line:13:9, line:32:9> has_else
|   | |-BinaryOperator 0x157009150 <line:13:12, col:38> 'int' '=='
|   | | |-CallExpr 0x1570090b8 <col:12, col:33> 'int'
|   | | | |-ImplicitCastExpr 0x1570090a0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x157008fe0 <col:12> 'int (const char *, const char *)' Function 0x157008e00 'strcmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x1570090e8 <col:19> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x157009000 <col:19> 'const char *' lvalue ParmVar 0x15680e348 'actnstr' 'const char *'
|   | | | `-ImplicitCastExpr 0x157009118 <col:28> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x157009100 <col:28> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x157009020 <col:28> 'char[4]' lvalue "STR"
|   | | `-IntegerLiteral 0x157009130 <col:38> 'int' 0
|   | |-BinaryOperator 0x156826c20 <line:14:17, col:26> '<dependent type>' contains-errors '='
|   | | |-RecoveryExpr 0x157009190 <col:17> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x157009170 <col:17> 'enum respip_action' lvalue Var 0x1570086a8 'action' 'enum respip_action'
|   | | `-RecoveryExpr 0x156826c00 <col:26> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x156123c48 <line:15:14, line:32:9> has_else
|   |   |-BinaryOperator 0x156826d80 <line:15:17, col:43> 'int' '=='
|   |   | |-CallExpr 0x156826ce8 <col:17, col:38> 'int'
|   |   | | |-ImplicitCastExpr 0x156826cd0 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x156826c40 <col:17> 'int (const char *, const char *)' Function 0x157008e00 'strcmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x156826d18 <col:24> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x156826c60 <col:24> 'const char *' lvalue ParmVar 0x15680e348 'actnstr' 'const char *'
|   |   | | `-ImplicitCastExpr 0x156826d48 <col:33> 'const char *' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x156826d30 <col:33> 'char *' <ArrayToPointerDecay>
|   |   | |     `-StringLiteral 0x156826c80 <col:33> 'char[4]' lvalue "STR"
|   |   | `-IntegerLiteral 0x156826d60 <col:43> 'int' 0
|   |   |-BinaryOperator 0x156826e40 <line:16:17, col:26> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x156826dc0 <col:17> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x156826da0 <col:17> 'enum respip_action' lvalue Var 0x1570086a8 'action' 'enum respip_action'
|   |   | `-RecoveryExpr 0x156826e20 <col:26> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x156123c18 <line:17:14, line:32:9> has_else
|   |     |-BinaryOperator 0x156826fa0 <line:17:17, col:43> 'int' '=='
|   |     | |-CallExpr 0x156826f08 <col:17, col:38> 'int'
|   |     | | |-ImplicitCastExpr 0x156826ef0 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x156826e60 <col:17> 'int (const char *, const char *)' Function 0x157008e00 'strcmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x156826f38 <col:24> 'const char *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x156826e80 <col:24> 'const char *' lvalue ParmVar 0x15680e348 'actnstr' 'const char *'
|   |     | | `-ImplicitCastExpr 0x156826f68 <col:33> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x156826f50 <col:33> 'char *' <ArrayToPointerDecay>
|   |     | |     `-StringLiteral 0x156826ea0 <col:33> 'char[4]' lvalue "STR"
|   |     | `-IntegerLiteral 0x156826f80 <col:43> 'int' 0
|   |     |-BinaryOperator 0x156827060 <line:18:17, col:26> '<dependent type>' contains-errors '='
|   |     | |-RecoveryExpr 0x156826fe0 <col:17> '<dependent type>' contains-errors lvalue
|   |     | | `-DeclRefExpr 0x156826fc0 <col:17> 'enum respip_action' lvalue Var 0x1570086a8 'action' 'enum respip_action'
|   |     | `-RecoveryExpr 0x156827040 <col:26> '<dependent type>' contains-errors lvalue
|   |     `-IfStmt 0x156123be8 <line:19:14, line:32:9> has_else
|   |       |-BinaryOperator 0x1568271c0 <line:19:17, col:43> 'int' '=='
|   |       | |-CallExpr 0x156827128 <col:17, col:38> 'int'
|   |       | | |-ImplicitCastExpr 0x156827110 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       | | | `-DeclRefExpr 0x156827080 <col:17> 'int (const char *, const char *)' Function 0x157008e00 'strcmp' 'int (const char *, const char *)'
|   |       | | |-ImplicitCastExpr 0x156827158 <col:24> 'const char *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1568270a0 <col:24> 'const char *' lvalue ParmVar 0x15680e348 'actnstr' 'const char *'
|   |       | | `-ImplicitCastExpr 0x156827188 <col:33> 'const char *' <NoOp>
|   |       | |   `-ImplicitCastExpr 0x156827170 <col:33> 'char *' <ArrayToPointerDecay>
|   |       | |     `-StringLiteral 0x1568270c0 <col:33> 'char[4]' lvalue "STR"
|   |       | `-IntegerLiteral 0x1568271a0 <col:43> 'int' 0
|   |       |-BinaryOperator 0x156827280 <line:20:17, col:26> '<dependent type>' contains-errors '='
|   |       | |-RecoveryExpr 0x156827200 <col:17> '<dependent type>' contains-errors lvalue
|   |       | | `-DeclRefExpr 0x1568271e0 <col:17> 'enum respip_action' lvalue Var 0x1570086a8 'action' 'enum respip_action'
|   |       | `-RecoveryExpr 0x156827260 <col:26> '<dependent type>' contains-errors lvalue
|   |       `-IfStmt 0x156123bb8 <line:21:14, line:32:9> has_else
|   |         |-BinaryOperator 0x1568273e0 <line:21:17, col:43> 'int' '=='
|   |         | |-CallExpr 0x156827348 <col:17, col:38> 'int'
|   |         | | |-ImplicitCastExpr 0x156827330 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |         | | | `-DeclRefExpr 0x1568272a0 <col:17> 'int (const char *, const char *)' Function 0x157008e00 'strcmp' 'int (const char *, const char *)'
|   |         | | |-ImplicitCastExpr 0x156827378 <col:24> 'const char *' <LValueToRValue>
|   |         | | | `-DeclRefExpr 0x1568272c0 <col:24> 'const char *' lvalue ParmVar 0x15680e348 'actnstr' 'const char *'
|   |         | | `-ImplicitCastExpr 0x1568273a8 <col:33> 'const char *' <NoOp>
|   |         | |   `-ImplicitCastExpr 0x156827390 <col:33> 'char *' <ArrayToPointerDecay>
|   |         | |     `-StringLiteral 0x1568272e0 <col:33> 'char[4]' lvalue "STR"
|   |         | `-IntegerLiteral 0x1568273c0 <col:43> 'int' 0
|   |         |-BinaryOperator 0x1568274a0 <line:22:17, col:26> '<dependent type>' contains-errors '='
|   |         | |-RecoveryExpr 0x156827420 <col:17> '<dependent type>' contains-errors lvalue
|   |         | | `-DeclRefExpr 0x156827400 <col:17> 'enum respip_action' lvalue Var 0x1570086a8 'action' 'enum respip_action'
|   |         | `-RecoveryExpr 0x156827480 <col:26> '<dependent type>' contains-errors lvalue
|   |         `-IfStmt 0x156123b88 <line:23:14, line:32:9> has_else
|   |           |-BinaryOperator 0x156827600 <line:23:17, col:43> 'int' '=='
|   |           | |-CallExpr 0x156827568 <col:17, col:38> 'int'
|   |           | | |-ImplicitCastExpr 0x156827550 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |           | | | `-DeclRefExpr 0x1568274c0 <col:17> 'int (const char *, const char *)' Function 0x157008e00 'strcmp' 'int (const char *, const char *)'
|   |           | | |-ImplicitCastExpr 0x156827598 <col:24> 'const char *' <LValueToRValue>
|   |           | | | `-DeclRefExpr 0x1568274e0 <col:24> 'const char *' lvalue ParmVar 0x15680e348 'actnstr' 'const char *'
|   |           | | `-ImplicitCastExpr 0x1568275c8 <col:33> 'const char *' <NoOp>
|   |           | |   `-ImplicitCastExpr 0x1568275b0 <col:33> 'char *' <ArrayToPointerDecay>
|   |           | |     `-StringLiteral 0x156827500 <col:33> 'char[4]' lvalue "STR"
|   |           | `-IntegerLiteral 0x1568275e0 <col:43> 'int' 0
|   |           |-BinaryOperator 0x1568276c0 <line:24:17, col:26> '<dependent type>' contains-errors '='
|   |           | |-RecoveryExpr 0x156827640 <col:17> '<dependent type>' contains-errors lvalue
|   |           | | `-DeclRefExpr 0x156827620 <col:17> 'enum respip_action' lvalue Var 0x1570086a8 'action' 'enum respip_action'
|   |           | `-RecoveryExpr 0x1568276a0 <col:26> '<dependent type>' contains-errors lvalue
|   |           `-IfStmt 0x156123b58 <line:25:14, line:32:9> has_else
|   |             |-BinaryOperator 0x156827820 <line:25:17, col:43> 'int' '=='
|   |             | |-CallExpr 0x156827788 <col:17, col:38> 'int'
|   |             | | |-ImplicitCastExpr 0x156827770 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |             | | | `-DeclRefExpr 0x1568276e0 <col:17> 'int (const char *, const char *)' Function 0x157008e00 'strcmp' 'int (const char *, const char *)'
|   |             | | |-ImplicitCastExpr 0x1568277b8 <col:24> 'const char *' <LValueToRValue>
|   |             | | | `-DeclRefExpr 0x156827700 <col:24> 'const char *' lvalue ParmVar 0x15680e348 'actnstr' 'const char *'
|   |             | | `-ImplicitCastExpr 0x1568277e8 <col:33> 'const char *' <NoOp>
|   |             | |   `-ImplicitCastExpr 0x1568277d0 <col:33> 'char *' <ArrayToPointerDecay>
|   |             | |     `-StringLiteral 0x156827720 <col:33> 'char[4]' lvalue "STR"
|   |             | `-IntegerLiteral 0x156827800 <col:43> 'int' 0
|   |             |-BinaryOperator 0x1568278e0 <line:26:17, col:26> '<dependent type>' contains-errors '='
|   |             | |-RecoveryExpr 0x156827860 <col:17> '<dependent type>' contains-errors lvalue
|   |             | | `-DeclRefExpr 0x156827840 <col:17> 'enum respip_action' lvalue Var 0x1570086a8 'action' 'enum respip_action'
|   |             | `-RecoveryExpr 0x1568278c0 <col:26> '<dependent type>' contains-errors lvalue
|   |             `-IfStmt 0x156123b28 <line:27:14, line:32:9> has_else
|   |               |-BinaryOperator 0x156827a40 <line:27:17, col:43> 'int' '=='
|   |               | |-CallExpr 0x1568279a8 <col:17, col:38> 'int'
|   |               | | |-ImplicitCastExpr 0x156827990 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |               | | | `-DeclRefExpr 0x156827900 <col:17> 'int (const char *, const char *)' Function 0x157008e00 'strcmp' 'int (const char *, const char *)'
|   |               | | |-ImplicitCastExpr 0x1568279d8 <col:24> 'const char *' <LValueToRValue>
|   |               | | | `-DeclRefExpr 0x156827920 <col:24> 'const char *' lvalue ParmVar 0x15680e348 'actnstr' 'const char *'
|   |               | | `-ImplicitCastExpr 0x156827a08 <col:33> 'const char *' <NoOp>
|   |               | |   `-ImplicitCastExpr 0x1568279f0 <col:33> 'char *' <ArrayToPointerDecay>
|   |               | |     `-StringLiteral 0x156827940 <col:33> 'char[4]' lvalue "STR"
|   |               | `-IntegerLiteral 0x156827a20 <col:43> 'int' 0
|   |               |-BinaryOperator 0x156827b00 <line:28:17, col:26> '<dependent type>' contains-errors '='
|   |               | |-RecoveryExpr 0x156827a80 <col:17> '<dependent type>' contains-errors lvalue
|   |               | | `-DeclRefExpr 0x156827a60 <col:17> 'enum respip_action' lvalue Var 0x1570086a8 'action' 'enum respip_action'
|   |               | `-RecoveryExpr 0x156827ae0 <col:26> '<dependent type>' contains-errors lvalue
|   |               `-CompoundStmt 0x156123b08 <line:29:14, line:32:9>
|   |                 |-CallExpr 0x156123a78 <line:30:17, col:39> 'int'
|   |                 | |-ImplicitCastExpr 0x156123a60 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |                 | | `-DeclRefExpr 0x156123a00 <col:17> 'int ()' Function 0x156827b48 'log_err' 'int ()'
|   |                 | |-ImplicitCastExpr 0x156123aa8 <col:25> 'char *' <ArrayToPointerDecay>
|   |                 | | `-StringLiteral 0x156123a20 <col:25> 'char[4]' lvalue "STR"
|   |                 | `-ImplicitCastExpr 0x156123ac0 <col:32> 'const char *' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x156123a40 <col:32> 'const char *' lvalue ParmVar 0x15680e348 'actnstr' 'const char *'
|   |                 `-ReturnStmt 0x156123af8 <line:31:17, col:24>
|   |                   `-IntegerLiteral 0x156123ad8 <col:24> 'int' 0
|   |-BinaryOperator 0x156123d28 <line:33:2, col:17> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x156123ce0 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x156123ca8 <col:2> 'struct resp_addr *' lvalue Var 0x1570084f8 'node' 'struct resp_addr *'
|   | `-RecoveryExpr 0x156123d08 <col:17> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x156123d68 <line:34:2, col:9>
|     `-IntegerLiteral 0x156123d48 <col:9> 'int' 1
`-FunctionDecl 0x157008e00 <line:13:12> col:12 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x157008f00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x157008f68 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x157008ea8 <<invalid sloc>> Implicit 887
