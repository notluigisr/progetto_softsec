TranslationUnitDecl 0x135055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x135055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1350555d0 '__int128'
|-TypedefDecl 0x135055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1350555f0 'unsigned __int128'
|-TypedefDecl 0x135125c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135125a00 'struct __NSConstantString_tag'
|   `-Record 0x135055f80 '__NSConstantString_tag'
|-TypedefDecl 0x135125c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135055790 '__SVInt8_t'
|-TypedefDecl 0x135125d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1350557b0 '__SVInt16_t'
|-TypedefDecl 0x135125d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1350557d0 '__SVInt32_t'
|-TypedefDecl 0x135125dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1350557f0 '__SVInt64_t'
|-TypedefDecl 0x135125e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135055810 '__SVUint8_t'
|-TypedefDecl 0x135125ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135055830 '__SVUint16_t'
|-TypedefDecl 0x135125f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135055850 '__SVUint32_t'
|-TypedefDecl 0x135125f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135055870 '__SVUint64_t'
|-TypedefDecl 0x135125fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135055890 '__SVFloat16_t'
|-TypedefDecl 0x135126040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1350558b0 '__SVFloat32_t'
|-TypedefDecl 0x1351260a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1350558d0 '__SVFloat64_t'
|-TypedefDecl 0x135126110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1350558f0 '__SVBfloat16_t'
|-TypedefDecl 0x135126178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135055910 '__clang_svint8x2_t'
|-TypedefDecl 0x1351261e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135055930 '__clang_svint16x2_t'
|-TypedefDecl 0x135126248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135055950 '__clang_svint32x2_t'
|-TypedefDecl 0x1351262b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135055970 '__clang_svint64x2_t'
|-TypedefDecl 0x135126318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x135126380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1350559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1351263e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1350559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135126450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1350559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1351264b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135126520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135126588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1351265f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135126658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1351266c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x135055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x135126728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x135055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x135126790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x135055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1351267f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x135126860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1351268c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x135126930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x135126998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135127200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x135055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135127268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x135055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1351272d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x135055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135127338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1351273a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x135127408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x135127470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1351274d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x135127540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x135055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1351275a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x135055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135127610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x135055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135127678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1351276e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135127748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1351277b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135127818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135055d90 '__SVBool_t'
|-TypedefDecl 0x135127880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x135055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1351278e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x135055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x135127950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x135055df0 '__SVCount_t'
|-TypedefDecl 0x1351279f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1351279b0 'char *'
|   `-BuiltinType 0x1350550b0 'char'
|-TypedefDecl 0x135127a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1351279b0 'char *'
|   `-BuiltinType 0x1350550b0 'char'
|-FunctionDecl 0x135127c58 <dataset_diviso_filec/func9609_vuln.c:1:1, line:29:1> line:1:5 invalid has_handler 'int (int, int)'
| |-ParmVarDecl 0x135127af0 <col:17, col:23> col:23 invalid pid 'int'
| |-ParmVarDecl 0x135127b70 <col:28, col:32> col:32 used signal 'int'
| `-CompoundStmt 0x135142400 <col:40, line:29:1>
|   |-IfStmt 0x1351423b0 <line:2:2, line:27:2>
|   | |-BinaryOperator 0x135127eb0 <line:2:6, col:30> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x135127e50 <col:6, col:15> 'int' '>'
|   | | | |-ImplicitCastExpr 0x135127e38 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x135127d10 <col:6> 'int' lvalue ParmVar 0x135127b70 'signal' 'int'
|   | | | `-IntegerLiteral 0x135127d30 <col:15> 'int' 0
|   | | `-BinaryOperator 0x135127e90 <col:20, col:30> 'int' contains-errors '<='
|   | |   |-DeclRefExpr 0x135127d88 <col:20> 'int' lvalue ParmVar 0x135127b70 'signal' 'int'
|   | |   `-RecoveryExpr 0x135127e70 <col:30> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x135142370 <col:40, line:27:2>
|   |   |-DeclStmt 0x135127f50 <line:3:3, col:14>
|   |   | `-VarDecl 0x135127ee8 <col:3, col:9> col:9 used fname 'char *'
|   |   |-IfStmt 0x135141478 <line:4:3, line:5:17>
|   |   | |-BinaryOperator 0x1351412b0 <line:4:7, col:40> 'int' contains-errors '=='
|   |   | | |-CallExpr 0x135141240 <col:7, col:34> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x135128128 <col:7> 'int ()' Function 0x135128008 'asprintf' 'int ()'
|   |   | | | |-UnaryOperator 0x1351281a0 <col:16, col:17> 'char **' prefix '&' cannot overflow
|   |   | | | | `-DeclRefExpr 0x135128148 <col:17> 'char *' lvalue Var 0x135127ee8 'fname' 'char *'
|   |   | | | |-StringLiteral 0x135141200 <col:24> 'char[4]' lvalue "STR"
|   |   | | | `-RecoveryExpr 0x135141220 <col:31> '<dependent type>' contains-errors lvalue
|   |   | | `-UnaryOperator 0x135141298 <col:39, col:40> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x135141278 <col:40> 'int' 1
|   |   | `-CallExpr 0x135141438 <line:5:4, col:17> 'int'
|   |   |   |-ImplicitCastExpr 0x135141420 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1351413b0 <col:4> 'int ()' Function 0x1351412f8 'errExit' 'int ()'
|   |   |   `-ImplicitCastExpr 0x135141460 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1351413d0 <col:12> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x1351415b0 <line:6:3, col:13> 'int'
|   |   | `-ImplicitCastExpr 0x135141598 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x135141578 <col:3> 'int ()' Function 0x1351414c0 'EUID_ROOT' 'int ()'
|   |   |-CallExpr 0x1351418b8 <line:8:3, col:13> 'int'
|   |   | `-ImplicitCastExpr 0x1351418a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x135141880 <col:3> 'int ()' Function 0x1351417c8 'EUID_USER' 'int ()'
|   |   |-CallExpr 0x135141f58 <line:9:3, col:13> 'void'
|   |   | |-ImplicitCastExpr 0x135141f40 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x135141eb0 <col:3> 'void (void *)' Function 0x135141d40 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x135141f98 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x135141f80 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x135141ed0 <col:8> 'char *' lvalue Var 0x135127ee8 'fname' 'char *'
|   |   `-IfStmt 0x135142350 <line:10:3, line:26:3>
|   |     |-RecoveryExpr 0x135141fc8 <line:10:7> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x135142330 <col:11, line:26:3>
|   |       |-DeclStmt 0x135142078 <line:11:4, col:20>
|   |       | `-VarDecl 0x135142010 <col:4, col:9> col:9 invalid buf 'char'
|   |       `-WhileStmt 0x1351422f0 <line:12:4, line:24:4>
|   |         |-CallExpr 0x13480a078 <line:12:11, col:32> '<dependent type>' contains-errors
|   |         | |-DeclRefExpr 0x135142170 <col:11> 'int ()' Function 0x1351420b8 'fgets' 'int ()'
|   |         | |-RecoveryExpr 0x135142190 <col:17> '<dependent type>' contains-errors lvalue
|   |         | |-RecoveryExpr 0x13480a038 <col:22> '<dependent type>' contains-errors lvalue
|   |         | `-RecoveryExpr 0x13480a058 <col:30> '<dependent type>' contains-errors lvalue
|   |         `-CompoundStmt 0x1351422d8 <col:35, line:24:4>
|   |           `-IfStmt 0x1351422b8 <line:13:5, line:23:5>
|   |             |-BinaryOperator 0x13480a450 <line:13:9, col:35> 'int' contains-errors '=='
|   |             | |-CallExpr 0x13480a3f8 <col:9, col:30> '<dependent type>' contains-errors
|   |             | | |-DeclRefExpr 0x13480a348 <col:9> 'int (const char *, const char *, unsigned long)' Function 0x13480a0f8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |             | | |-RecoveryExpr 0x13480a368 <col:17> '<dependent type>' contains-errors lvalue
|   |             | | |-StringLiteral 0x13480a388 <col:22> 'char[4]' lvalue "STR"
|   |             | | `-IntegerLiteral 0x13480a3a8 <col:29> 'int' 7
|   |             | `-IntegerLiteral 0x13480a430 <col:35> 'int' 0
|   |             `-CompoundStmt 0x135142280 <col:38, line:23:5>
|   |               |-DeclStmt 0x13480a4f0 <line:14:6, col:28>
|   |               | `-VarDecl 0x13480a488 <col:6, col:25> col:25 used val 'unsigned long long'
|   |               |-IfStmt 0x13480ad90 <line:15:6, line:18:6>
|   |               | |-BinaryOperator 0x13480a938 <line:15:10, col:42> 'int' contains-errors '!='
|   |               | | |-CallExpr 0x13480a8e0 <col:10, col:37> '<dependent type>' contains-errors
|   |               | | | |-DeclRefExpr 0x13480a7c0 <col:10> 'int (const char *restrict, const char *restrict, ...)' Function 0x13480a5a8 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |               | | | |-BinaryOperator 0x13480a820 <col:17, col:23> '<dependent type>' contains-errors '+'
|   |               | | | | |-RecoveryExpr 0x13480a7e0 <col:17> '<dependent type>' contains-errors lvalue
|   |               | | | | `-IntegerLiteral 0x13480a800 <col:23> 'int' 7
|   |               | | | |-StringLiteral 0x13480a840 <col:26> 'char[4]' lvalue "STR"
|   |               | | | `-UnaryOperator 0x13480a8b0 <col:33, col:34> 'unsigned long long *' prefix '&' cannot overflow
|   |               | | |   `-DeclRefExpr 0x13480a860 <col:34> 'unsigned long long' lvalue Var 0x13480a488 'val' 'unsigned long long'
|   |               | | `-IntegerLiteral 0x13480a918 <col:42> 'int' 1
|   |               | `-CompoundStmt 0x13480ad70 <col:45, line:18:6>
|   |               |   |-CallExpr 0x13480aae0 <line:16:7, col:28> '<dependent type>' contains-errors
|   |               |   | |-DeclRefExpr 0x13480aa38 <col:7> 'int ()' Function 0x13480a980 'fprintf' 'int ()'
|   |               |   | |-RecoveryExpr 0x13480aac0 <col:15> '<dependent type>' contains-errors lvalue
|   |               |   | `-StringLiteral 0x13480aa70 <col:23> 'char[4]' lvalue "STR"
|   |               |   `-CallExpr 0x13480ad48 <line:17:7, col:13> 'void'
|   |               |     |-ImplicitCastExpr 0x13480ad30 <col:7> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |               |     | `-DeclRefExpr 0x13480acb8 <col:7> 'void (int) __attribute__((noreturn))' Function 0x13480ab48 'exit' 'void (int) __attribute__((noreturn))'
|   |               |     `-IntegerLiteral 0x13480acd8 <col:12> 'int' 1
|   |               |-CompoundAssignOperator 0x13480ae80 <line:19:6, col:25> 'unsigned long long' '>>=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |               | |-DeclRefExpr 0x13480adb0 <col:6> 'unsigned long long' lvalue Var 0x13480a488 'val' 'unsigned long long'
|   |               | `-ParenExpr 0x13480ae48 <col:14, col:25> 'int'
|   |               |   `-BinaryOperator 0x13480ae28 <col:15, col:24> 'int' '-'
|   |               |     |-ImplicitCastExpr 0x13480ae10 <col:15> 'int' <LValueToRValue>
|   |               |     | `-DeclRefExpr 0x13480add0 <col:15> 'int' lvalue ParmVar 0x135127b70 'signal' 'int'
|   |               |     `-IntegerLiteral 0x13480adf0 <col:24> 'int' 1
|   |               |-CompoundAssignOperator 0x13480aef0 <line:20:6, col:13> 'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |               | |-DeclRefExpr 0x13480aeb0 <col:6> 'unsigned long long' lvalue Var 0x13480a488 'val' 'unsigned long long'
|   |               | `-IntegerLiteral 0x13480aed0 <col:13> 'unsigned long long' 1
|   |               `-ReturnStmt 0x135142270 <line:22:6, col:13>
|   |                 `-ImplicitCastExpr 0x135142258 <col:13> 'int' <IntegralCast>
|   |                   `-ImplicitCastExpr 0x135142240 <col:13> 'unsigned long long' <LValueToRValue>
|   |                     `-DeclRefExpr 0x135142220 <col:13> 'unsigned long long' lvalue Var 0x13480a488 'val' 'unsigned long long'
|   `-ReturnStmt 0x1351423f0 <line:28:2, col:9>
|     `-IntegerLiteral 0x1351423d0 <col:9> 'int' 0
|-FunctionDecl 0x135141d40 <line:9:3> col:3 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x135141e40 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x135141de8 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x13480a0f8 <line:13:9> col:9 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x13480a1f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13480a260 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13480a2c8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13480a1a0 <<invalid sloc>> Implicit 888
|-FunctionDecl 0x13480a5a8 <line:15:10> col:10 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x13480a6a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x13480a710 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-BuiltinAttr 0x13480a650 <<invalid sloc>> Implicit 913
| `-FormatAttr 0x13480a788 <col:10> Implicit scanf 2 3
`-FunctionDecl 0x13480ab48 <line:17:7> col:7 implicit used exit 'void (int) __attribute__((noreturn))' extern
  |-ParmVarDecl 0x13480ac48 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x13480abf0 <<invalid sloc>> Implicit 869
