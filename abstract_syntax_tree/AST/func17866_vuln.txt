TranslationUnitDecl 0x15a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a055bd0 '__int128'
|-TypedefDecl 0x15a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a055bf0 'unsigned __int128'
|-TypedefDecl 0x15a126e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a126c00 'struct __NSConstantString_tag'
|   `-Record 0x15a056580 '__NSConstantString_tag'
|-TypedefDecl 0x15a126e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a055d90 '__SVInt8_t'
|-TypedefDecl 0x15a126f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a055db0 '__SVInt16_t'
|-TypedefDecl 0x15a126f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a055dd0 '__SVInt32_t'
|-TypedefDecl 0x15a126fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a055df0 '__SVInt64_t'
|-TypedefDecl 0x15a127038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a055e10 '__SVUint8_t'
|-TypedefDecl 0x15a1270a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a055e30 '__SVUint16_t'
|-TypedefDecl 0x15a127108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a055e50 '__SVUint32_t'
|-TypedefDecl 0x15a127170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a055e70 '__SVUint64_t'
|-TypedefDecl 0x15a1271d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a055e90 '__SVFloat16_t'
|-TypedefDecl 0x15a127240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15a1272a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15a127310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15a127378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15a1273e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15a127448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15a1274b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15a127518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a127580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a1275e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a127650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a1276b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a127720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a127788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a1277f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a127858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15a1278c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a127928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a127990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a1279f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a127a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a127ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a127b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a127b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a128400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a128468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a1284d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a128538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15a1285a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15a128608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15a128670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15a1286d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a128740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a1287a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a128810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a128878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a1288e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a128948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a1289b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a128a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a056390 '__SVBool_t'
|-TypedefDecl 0x15a128a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a128ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a128b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a0563f0 '__SVCount_t'
|-TypedefDecl 0x15a128bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a128bb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-TypedefDecl 0x15a128c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a128bb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-FunctionDecl 0x15a1290c8 <dataset_diviso_filec/func17866_vuln.c:1:1, line:79:1> line:1:12 invalid exif_process_IFD_in_MAKERNOTE 'int (int *, char *, int, char *, int, int)' static
| |-ParmVarDecl 0x15a128d28 <col:42, col:59> col:59 referenced invalid ImageInfo 'int *'
| |-ParmVarDecl 0x15a128da8 <col:70, col:77> col:77 used value_ptr 'char *'
| |-ParmVarDecl 0x15a128e28 <col:88, col:92> col:92 used value_len 'int'
| |-ParmVarDecl 0x15a128ea8 <col:103, col:109> col:109 used offset_base 'char *'
| |-ParmVarDecl 0x15a128f28 <col:122, col:129> col:129 invalid IFDlength 'int'
| |-ParmVarDecl 0x15a128fa8 <col:140, col:147> col:147 invalid displacement 'int'
| `-CompoundStmt 0x15a143400 <line:2:1, line:79:1>
|   |-DeclStmt 0x15a129398 <line:3:2, col:48>
|   | |-VarDecl 0x15a1291b8 <col:2, col:6> col:6 used de 'int'
|   | |-VarDecl 0x15a129238 <col:2, col:12> col:10 used i 'int' cinit
|   | | `-IntegerLiteral 0x15a1292a0 <col:12> 'int' 0
|   | `-VarDecl 0x15a1292d8 <col:2, col:31> col:15 used section_index 'int' cinit
|   |   `-RecoveryExpr 0x15a129358 <col:31> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15b009388 <line:4:2, col:52>
|   | |-VarDecl 0x15b009200 <col:2, col:6> col:6 used NumDirEntries 'int'
|   | |-VarDecl 0x15b009280 <col:2, col:21> col:21 used old_motorola_intel 'int'
|   | `-VarDecl 0x15b009300 <col:2, col:41> col:41 used offset_diff 'int'
|   |-DeclStmt 0x15b009420 <line:5:2, col:35>
|   | `-VarDecl 0x15b0093b8 <col:2, col:25> col:25 referenced invalid maker_note 'const int *'
|   |-DeclStmt 0x15b0094b8 <line:6:2, col:17>
|   | `-VarDecl 0x15b009450 <col:2, col:8> col:8 used dir_start 'char *'
|   |-BinaryOperator 0x15b8089e0 <line:23:2, col:38> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x15b808918 <col:2> 'char *' lvalue Var 0x15b009450 'dir_start' 'char *'
|   | `-BinaryOperator 0x15b8089c0 <col:14, col:38> '<dependent type>' contains-errors '+'
|   |   |-DeclRefExpr 0x15b808938 <col:14> 'char *' lvalue ParmVar 0x15a128da8 'value_ptr' 'char *'
|   |   `-CXXDependentScopeMemberExpr 0x15b808978 <col:26, col:38> '<dependent type>' contains-errors lvalue ->offset
|   |     `-RecoveryExpr 0x15b808958 <col:26> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x15b808af8 <line:29:2, col:31> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x15b808a48 <col:2, col:13> '<dependent type>' contains-errors lvalue ->sections_found
|   | | `-RecoveryExpr 0x15b808a20 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15b808a00 <col:2> 'int *' lvalue ParmVar 0x15a128d28 'ImageInfo' 'int *'
|   | `-RecoveryExpr 0x15b808ad8 <col:31> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15b808bb0 <line:31:2, col:34> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b808b28 <col:2> 'int' lvalue Var 0x15b009280 'old_motorola_intel' 'int'
|   | `-CXXDependentScopeMemberExpr 0x15b808b68 <col:23, col:34> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |   `-RecoveryExpr 0x15b808b48 <col:23> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x15b808c50 <line:32:2, line:42:2>
|   | |-ImplicitCastExpr 0x15b808c38 <line:32:10, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-CXXDependentScopeMemberExpr 0x15b808bf0 <col:10, col:22> '<dependent type>' contains-errors lvalue ->byte_order
|   | |   `-RecoveryExpr 0x15b808bd0 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15b808e98 <col:34, line:42:2>
|   |   |-BinaryOperator 0x15b808d40 <line:34:4, col:32> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x15b808cd8 <col:4, col:15> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |   | | `-RecoveryExpr 0x15b808cb0 <col:4> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x15b808c90 <col:4> 'int *' lvalue ParmVar 0x15a128d28 'ImageInfo' 'int *'
|   |   | `-IntegerLiteral 0x15b808d20 <col:32> 'int' 0
|   |   |-BreakStmt 0x15b808d60 <line:35:4>
|   |   |-BinaryOperator 0x15b808e30 <line:37:4, col:32> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x15b808dc8 <col:4, col:15> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |   | | `-RecoveryExpr 0x15b808da0 <col:4> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x15b808d80 <col:4> 'int *' lvalue ParmVar 0x15a128d28 'ImageInfo' 'int *'
|   |   | `-IntegerLiteral 0x15b808e10 <col:32> 'int' 1
|   |   |-BreakStmt 0x15b808e50 <line:38:4>
|   |   `-DefaultStmt 0x15b808e78 <line:39:3, line:41:4>
|   |     `-BreakStmt 0x15b808e70 <col:4>
|   |-BinaryOperator 0x15b809128 <line:44:2, col:69> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b808ed0 <col:2> 'int' lvalue Var 0x15b009200 'NumDirEntries' 'int'
|   | `-CallExpr 0x15b8090f8 <col:18, col:69> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b809050 <col:18> 'int ()' Function 0x15b808f98 'php_ifd_get16u' 'int ()'
|   |   |-DeclRefExpr 0x15b809070 <col:33> 'char *' lvalue Var 0x15b009450 'dir_start' 'char *'
|   |   `-CXXDependentScopeMemberExpr 0x15b8090b0 <col:44, col:55> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |     `-RecoveryExpr 0x15b809090 <col:44> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x15b8091c8 <line:46:2, line:60:2>
|   | |-ImplicitCastExpr 0x15b8091b0 <line:46:10, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-CXXDependentScopeMemberExpr 0x15b809168 <col:10, col:22> '<dependent type>' contains-errors lvalue ->offset_mode
|   | |   `-RecoveryExpr 0x15b809148 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15a142900 <col:35, line:60:2>
|   |   |-BinaryOperator 0x15a142470 <line:48:4, col:18> 'char *' '='
|   |   | |-DeclRefExpr 0x15a142418 <col:4> 'char *' lvalue ParmVar 0x15a128ea8 'offset_base' 'char *'
|   |   | `-ImplicitCastExpr 0x15a142458 <col:18> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15a142438 <col:18> 'char *' lvalue ParmVar 0x15a128da8 'value_ptr' 'char *'
|   |   |-BreakStmt 0x15a142490 <line:49:4>
|   |   |-BinaryOperator 0x15a1427e0 <line:51:4, col:99> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x15a142498 <col:4> 'int' lvalue Var 0x15b009300 'offset_diff' 'int'
|   |   | `-BinaryOperator 0x15a1427c0 <col:18, col:99> '<dependent type>' contains-errors '-'
|   |   |   |-BinaryOperator 0x15a142590 <col:18, col:41> 'int' '+'
|   |   |   | |-BinaryOperator 0x15a142550 <col:18, col:36> 'int' '+'
|   |   |   | | |-IntegerLiteral 0x15a1424b8 <col:18> 'int' 2
|   |   |   | | `-BinaryOperator 0x15a142530 <col:22, col:36> 'int' '*'
|   |   |   | |   |-ImplicitCastExpr 0x15a142518 <col:22> 'int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x15a1424d8 <col:22> 'int' lvalue Var 0x15b009200 'NumDirEntries' 'int'
|   |   |   | |   `-IntegerLiteral 0x15a1424f8 <col:36> 'int' 12
|   |   |   | `-IntegerLiteral 0x15a142570 <col:41> 'int' 4
|   |   |   `-CallExpr 0x15a142790 <col:45, col:99> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x15a142690 <col:45> 'int ()' Function 0x15a1425d8 'php_ifd_get32u' 'int ()'
|   |   |     |-BinaryOperator 0x15a142708 <col:60, col:70> 'char *' '+'
|   |   |     | |-ImplicitCastExpr 0x15a1426f0 <col:60> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x15a1426b0 <col:60> 'char *' lvalue Var 0x15b009450 'dir_start' 'char *'
|   |   |     | `-IntegerLiteral 0x15a1426d0 <col:70> 'int' 10
|   |   |     `-CXXDependentScopeMemberExpr 0x15a142748 <col:74, col:85> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |   |       `-RecoveryExpr 0x15a142728 <col:74> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x15a1428b0 <line:55:4, col:30> 'char *' '='
|   |   | |-DeclRefExpr 0x15a142800 <col:4> 'char *' lvalue ParmVar 0x15a128ea8 'offset_base' 'char *'
|   |   | `-BinaryOperator 0x15a142890 <col:18, col:30> 'char *' '+'
|   |   |   |-ImplicitCastExpr 0x15a142860 <col:18> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x15a142820 <col:18> 'char *' lvalue ParmVar 0x15a128da8 'value_ptr' 'char *'
|   |   |   `-ImplicitCastExpr 0x15a142878 <col:30> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15a142840 <col:30> 'int' lvalue Var 0x15b009300 'offset_diff' 'int'
|   |   |-BreakStmt 0x15a1428d0 <line:56:4>
|   |   `-DefaultStmt 0x15a1428e0 <line:57:3, line:59:4>
|   |     `-BreakStmt 0x15a1428d8 <col:4>
|   |-IfStmt 0x15a142db8 <line:62:2, line:65:2>
|   | |-BinaryOperator 0x15a142a50 <line:62:6, col:29> 'int' '>'
|   | | |-ParenExpr 0x15a1429f8 <col:6, col:25> 'int'
|   | | | `-BinaryOperator 0x15a1429d8 <col:7, col:23> 'int' '+'
|   | | |   |-IntegerLiteral 0x15a142940 <col:7> 'int' 2
|   | | |   `-BinaryOperator 0x15a1429b8 <col:9, col:23> 'int' '*'
|   | | |     |-ImplicitCastExpr 0x15a1429a0 <col:9> 'int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x15a142960 <col:9> 'int' lvalue Var 0x15b009200 'NumDirEntries' 'int'
|   | | |     `-IntegerLiteral 0x15a142980 <col:23> 'int' 12
|   | | `-ImplicitCastExpr 0x15a142a38 <col:29> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15a142a18 <col:29> 'int' lvalue ParmVar 0x15a128e28 'value_len' 'int'
|   | `-CompoundStmt 0x15a142da0 <col:40, line:65:2>
|   |   `-CallExpr 0x15a142d18 <line:63:3, col:72> 'int'
|   |     |-ImplicitCastExpr 0x15a142d00 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x15a142b50 <col:3> 'int ()' Function 0x15a142a98 'exif_error_docref' 'int ()'
|   |     |-ImplicitCastExpr 0x15a142d58 <col:21> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x15a142bb0 <col:21> 'char[4]' lvalue "STR"
|   |     |-ImplicitCastExpr 0x15a142d70 <col:28> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x15a142bd0 <col:28> 'int' lvalue Var 0x15b009200 'NumDirEntries' 'int'
|   |     |-BinaryOperator 0x15a142c88 <col:43, col:59> 'int' '+'
|   |     | |-IntegerLiteral 0x15a142bf0 <col:43> 'int' 2
|   |     | `-BinaryOperator 0x15a142c68 <col:45, col:59> 'int' '*'
|   |     |   |-ImplicitCastExpr 0x15a142c50 <col:45> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x15a142c10 <col:45> 'int' lvalue Var 0x15b009200 'NumDirEntries' 'int'
|   |     |   `-IntegerLiteral 0x15a142c30 <col:59> 'int' 12
|   |     `-ImplicitCastExpr 0x15a142d88 <col:63> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x15a142ca8 <col:63> 'int' lvalue ParmVar 0x15a128e28 'value_len' 'int'
|   |-ForStmt 0x15a1432a0 <line:67:2, line:72:2>
|   | |-BinaryOperator 0x15a142e18 <line:67:7, col:10> 'int' '='
|   | | |-DeclRefExpr 0x15a142dd8 <col:7> 'int' lvalue Var 0x15a1291b8 'de' 'int'
|   | | `-IntegerLiteral 0x15a142df8 <col:10> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15a142ea8 <col:12, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x15a142e78 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15a142e38 <col:12> 'int' lvalue Var 0x15a1291b8 'de' 'int'
|   | | `-ImplicitCastExpr 0x15a142e90 <col:15> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15a142e58 <col:15> 'int' lvalue Var 0x15b009200 'NumDirEntries' 'int'
|   | |-UnaryOperator 0x15a142ee8 <col:29, col:31> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15a142ec8 <col:29> 'int' lvalue Var 0x15a1291b8 'de' 'int'
|   | `-CompoundStmt 0x15a143288 <col:35, line:72:2>
|   |   `-IfStmt 0x15a143268 <line:68:3, line:71:3>
|   |     |-RecoveryExpr 0x15a143238 <line:68:7, line:69:98> '_Bool' contains-errors
|   |     `-CompoundStmt 0x15a143258 <col:101, line:71:3>
|   `-BinaryOperator 0x15a143388 <line:73:2, col:30> '<dependent type>' contains-errors '='
|     |-CXXDependentScopeMemberExpr 0x15a143320 <col:2, col:13> '<dependent type>' contains-errors lvalue ->motorola_intel
|     | `-RecoveryExpr 0x15a1432f8 <col:2> '<dependent type>' contains-errors lvalue
|     |   `-DeclRefExpr 0x15a1432d8 <col:2> 'int *' lvalue ParmVar 0x15a128d28 'ImageInfo' 'int *'
|     `-DeclRefExpr 0x15a143368 <col:30> 'int' lvalue Var 0x15b009280 'old_motorola_intel' 'int'
|-FunctionDecl 0x15b009d50 <line:14:48> col:48 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x15b009e50 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15b009eb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15b009df8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x15b8084a8 <line:18:32> col:32 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x15b8085a8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15b808610 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15b808678 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15b808550 <<invalid sloc>> Implicit 888
