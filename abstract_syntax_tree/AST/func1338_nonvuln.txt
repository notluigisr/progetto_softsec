TranslationUnitDecl 0x144855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1448564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144855bd0 '__int128'
|-TypedefDecl 0x144856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144855bf0 'unsigned __int128'
|-TypedefDecl 0x14500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14500bc00 'struct __NSConstantString_tag'
|   `-Record 0x144856580 '__NSConstantString_tag'
|-TypedefDecl 0x14500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144855d90 '__SVInt8_t'
|-TypedefDecl 0x14500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144855db0 '__SVInt16_t'
|-TypedefDecl 0x14500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144855dd0 '__SVInt32_t'
|-TypedefDecl 0x14500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144855df0 '__SVInt64_t'
|-TypedefDecl 0x14500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144855e10 '__SVUint8_t'
|-TypedefDecl 0x14500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144855e30 '__SVUint16_t'
|-TypedefDecl 0x14500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144855e50 '__SVUint32_t'
|-TypedefDecl 0x14500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144855e70 '__SVUint64_t'
|-TypedefDecl 0x14500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144855e90 '__SVFloat16_t'
|-TypedefDecl 0x14500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1448560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1448560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1448560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1448561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1448561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1448561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1448562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1448562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1448562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144856390 '__SVBool_t'
|-TypedefDecl 0x14500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1448563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1448563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1448563f0 '__SVCount_t'
|-TypedefDecl 0x14500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
|-TypedefDecl 0x14500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
|-FunctionDecl 0x14500de88 <dataset_diviso_filec/func1338_nonvuln.c:1:1, line:39:1> line:1:1 invalid bgp_vpn_rd_print 'int (int *, const char *)'
| |-ParmVarDecl 0x14500dd28 <col:18, col:38> col:38 invalid ndo 'int *'
| |-ParmVarDecl 0x14500dda8 <line:2:18, col:32> col:32 used pptr 'const char *'
| `-CompoundStmt 0x144927350 <line:3:1, line:39:1>
|   |-DeclStmt 0x14500e088 <line:5:5, col:34>
|   | `-VarDecl 0x14500e020 <col:5, col:33> col:17 used rd 'char[4]' static
|   |-DeclStmt 0x14500e158 <line:6:5, col:19>
|   | `-VarDecl 0x14500e0b8 <col:5, col:17> col:11 used pos 'char *' cinit
|   |   `-ImplicitCastExpr 0x14500e140 <col:17> 'char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x14500e120 <col:17> 'char[4]' lvalue Var 0x14500e020 'rd' 'char[4]'
|   |-SwitchStmt 0x14500e398 <line:9:5, line:35:5>
|   | |-CallExpr 0x14500e358 <line:9:13, col:32> 'int'
|   | | |-ImplicitCastExpr 0x14500e340 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x14500e2d0 <col:13> 'int ()' Function 0x14500e218 'EXTRACT_16BITS' 'int ()'
|   | | `-ImplicitCastExpr 0x14500e380 <col:28> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14500e2f0 <col:28> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   | `-CompoundStmt 0x144926ed0 <col:35, line:35:5>
|   |   |-CaseStmt 0x144922c00 <line:12:5, line:16:60>
|   |   | |-ConstantExpr 0x14500e3e0 <line:12:10> 'int'
|   |   | | `-IntegerLiteral 0x14500e3c0 <col:10> 'int' 0
|   |   | `-CallExpr 0x144923a98 <line:13:9, line:16:60> 'int'
|   |   |   |-ImplicitCastExpr 0x144923a80 <line:13:9> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x144923328 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x1449230a0 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   |   |-ImplicitCastExpr 0x144923b00 <col:18> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x144923348 <col:18> 'char *' lvalue Var 0x14500e0b8 'pos' 'char *'
|   |   |   |-BinaryOperator 0x144923490 <col:23, col:45> 'unsigned long' '-'
|   |   |   | |-UnaryExprOrTypeTraitExpr 0x1449233a8 <col:23, col:32> 'unsigned long' sizeof
|   |   |   | | `-ParenExpr 0x144923388 <col:29, col:32> 'char[4]' lvalue
|   |   |   | |   `-DeclRefExpr 0x144923368 <col:30> 'char[4]' lvalue Var 0x14500e020 'rd' 'char[4]' non_odr_use_unevaluated
|   |   |   | `-ImplicitCastExpr 0x144923478 <col:36, col:45> 'unsigned long' <IntegralCast>
|   |   |   |   `-ParenExpr 0x144923458 <col:36, col:45> 'long'
|   |   |   |     `-BinaryOperator 0x144923438 <col:37, col:43> 'long' '-'
|   |   |   |       |-ImplicitCastExpr 0x144923408 <col:37> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x1449233c8 <col:37> 'char *' lvalue Var 0x14500e0b8 'pos' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x144923420 <col:43> 'char *' <ArrayToPointerDecay>
|   |   |   |         `-DeclRefExpr 0x1449233e8 <col:43> 'char[4]' lvalue Var 0x14500e020 'rd' 'char[4]'
|   |   |   |-ImplicitCastExpr 0x144923b30 <col:48> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x144923b18 <col:48> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x1449234b0 <col:48> 'char[4]' lvalue "STR"
|   |   |   |-CallExpr 0x144923580 <line:14:18, col:39> 'int'
|   |   |   | |-ImplicitCastExpr 0x144923568 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1449234d0 <col:18> 'int ()' Function 0x14500e218 'EXTRACT_16BITS' 'int ()'
|   |   |   | `-BinaryOperator 0x144923548 <col:33, col:38> 'const char *' '+'
|   |   |   |   |-ImplicitCastExpr 0x144923530 <col:33> 'const char *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x1449234f0 <col:33> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |   |   `-IntegerLiteral 0x144923510 <col:38> 'int' 2
|   |   |   |-CallExpr 0x144923738 <line:15:18, col:39> 'int'
|   |   |   | |-ImplicitCastExpr 0x144923720 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x144923688 <col:18> 'int ()' Function 0x1449235d0 'EXTRACT_32BITS' 'int ()'
|   |   |   | `-BinaryOperator 0x144923700 <col:33, col:38> 'const char *' '+'
|   |   |   |   |-ImplicitCastExpr 0x1449236e8 <col:33> 'const char *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x1449236a8 <col:33> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |   |   `-IntegerLiteral 0x1449236c8 <col:38> 'int' 4
|   |   |   |-ImplicitCastExpr 0x144923b60 <line:16:18, col:26> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x144923b48 <col:18, col:26> 'char' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x1449237f8 <col:18, col:26> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |     `-ParenExpr 0x1449237d8 <col:19, col:26> 'const char *'
|   |   |   |       `-BinaryOperator 0x1449237b8 <col:20, col:25> 'const char *' '+'
|   |   |   |         |-ImplicitCastExpr 0x1449237a0 <col:20> 'const char *' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x144923760 <col:20> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |   |         `-IntegerLiteral 0x144923780 <col:25> 'int' 4
|   |   |   |-ImplicitCastExpr 0x144923b90 <col:29, col:37> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x144923b78 <col:29, col:37> 'char' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x1449238a8 <col:29, col:37> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |     `-ParenExpr 0x144923888 <col:30, col:37> 'const char *'
|   |   |   |       `-BinaryOperator 0x144923868 <col:31, col:36> 'const char *' '+'
|   |   |   |         |-ImplicitCastExpr 0x144923850 <col:31> 'const char *' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x144923810 <col:31> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |   |         `-IntegerLiteral 0x144923830 <col:36> 'int' 5
|   |   |   |-ImplicitCastExpr 0x144923bc0 <col:40, col:48> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x144923ba8 <col:40, col:48> 'char' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x144923958 <col:40, col:48> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |     `-ParenExpr 0x144923938 <col:41, col:48> 'const char *'
|   |   |   |       `-BinaryOperator 0x144923918 <col:42, col:47> 'const char *' '+'
|   |   |   |         |-ImplicitCastExpr 0x144923900 <col:42> 'const char *' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x1449238c0 <col:42> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |   |         `-IntegerLiteral 0x1449238e0 <col:47> 'int' 6
|   |   |   `-ImplicitCastExpr 0x144925000 <col:51, col:59> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x144923bd8 <col:51, col:59> 'char' <LValueToRValue>
|   |   |       `-UnaryOperator 0x144923a08 <col:51, col:59> 'const char' lvalue prefix '*' cannot overflow
|   |   |         `-ParenExpr 0x1449239e8 <col:52, col:59> 'const char *'
|   |   |           `-BinaryOperator 0x1449239c8 <col:53, col:58> 'const char *' '+'
|   |   |             |-ImplicitCastExpr 0x1449239b0 <col:53> 'const char *' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x144923970 <col:53> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |             `-IntegerLiteral 0x144923990 <col:58> 'int' 7
|   |   |-BreakStmt 0x144925018 <line:17:9>
|   |   |-CaseStmt 0x144925058 <line:20:5, line:22:79>
|   |   | |-ConstantExpr 0x144925040 <line:20:10> 'int'
|   |   | | `-IntegerLiteral 0x144925020 <col:10> 'int' 1
|   |   | `-CallExpr 0x144925608 <line:21:9, line:22:79> 'int'
|   |   |   |-ImplicitCastExpr 0x1449255f0 <line:21:9> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x144925080 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x1449230a0 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   |   |-ImplicitCastExpr 0x144925668 <col:18> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1449250a0 <col:18> 'char *' lvalue Var 0x14500e0b8 'pos' 'char *'
|   |   |   |-BinaryOperator 0x1449251e8 <col:23, col:45> 'unsigned long' '-'
|   |   |   | |-UnaryExprOrTypeTraitExpr 0x144925100 <col:23, col:32> 'unsigned long' sizeof
|   |   |   | | `-ParenExpr 0x1449250e0 <col:29, col:32> 'char[4]' lvalue
|   |   |   | |   `-DeclRefExpr 0x1449250c0 <col:30> 'char[4]' lvalue Var 0x14500e020 'rd' 'char[4]' non_odr_use_unevaluated
|   |   |   | `-ImplicitCastExpr 0x1449251d0 <col:36, col:45> 'unsigned long' <IntegralCast>
|   |   |   |   `-ParenExpr 0x1449251b0 <col:36, col:45> 'long'
|   |   |   |     `-BinaryOperator 0x144925190 <col:37, col:43> 'long' '-'
|   |   |   |       |-ImplicitCastExpr 0x144925160 <col:37> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x144925120 <col:37> 'char *' lvalue Var 0x14500e0b8 'pos' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x144925178 <col:43> 'char *' <ArrayToPointerDecay>
|   |   |   |         `-DeclRefExpr 0x144925140 <col:43> 'char[4]' lvalue Var 0x14500e020 'rd' 'char[4]'
|   |   |   |-ImplicitCastExpr 0x144925698 <col:48> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x144925680 <col:48> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x144925208 <col:48> 'char[4]' lvalue "STR"
|   |   |   |-ImplicitCastExpr 0x1449256c8 <line:22:13, col:21> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1449256b0 <col:13, col:21> 'char' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x1449252c0 <col:13, col:21> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |     `-ParenExpr 0x1449252a0 <col:14, col:21> 'const char *'
|   |   |   |       `-BinaryOperator 0x144925280 <col:15, col:20> 'const char *' '+'
|   |   |   |         |-ImplicitCastExpr 0x144925268 <col:15> 'const char *' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x144925228 <col:15> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |   |         `-IntegerLiteral 0x144925248 <col:20> 'int' 2
|   |   |   |-ImplicitCastExpr 0x1449256f8 <col:24, col:32> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1449256e0 <col:24, col:32> 'char' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x144925370 <col:24, col:32> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |     `-ParenExpr 0x144925350 <col:25, col:32> 'const char *'
|   |   |   |       `-BinaryOperator 0x144925330 <col:26, col:31> 'const char *' '+'
|   |   |   |         |-ImplicitCastExpr 0x144925318 <col:26> 'const char *' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x1449252d8 <col:26> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |   |         `-IntegerLiteral 0x1449252f8 <col:31> 'int' 3
|   |   |   |-ImplicitCastExpr 0x144925728 <col:35, col:43> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x144925710 <col:35, col:43> 'char' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x144925420 <col:35, col:43> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |     `-ParenExpr 0x144925400 <col:36, col:43> 'const char *'
|   |   |   |       `-BinaryOperator 0x1449253e0 <col:37, col:42> 'const char *' '+'
|   |   |   |         |-ImplicitCastExpr 0x1449253c8 <col:37> 'const char *' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x144925388 <col:37> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |   |         `-IntegerLiteral 0x1449253a8 <col:42> 'int' 4
|   |   |   |-ImplicitCastExpr 0x144925758 <col:46, col:54> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x144925740 <col:46, col:54> 'char' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x1449254d0 <col:46, col:54> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |     `-ParenExpr 0x1449254b0 <col:47, col:54> 'const char *'
|   |   |   |       `-BinaryOperator 0x144925490 <col:48, col:53> 'const char *' '+'
|   |   |   |         |-ImplicitCastExpr 0x144925478 <col:48> 'const char *' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x144925438 <col:48> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |   |         `-IntegerLiteral 0x144925458 <col:53> 'int' 5
|   |   |   `-CallExpr 0x144925598 <col:57, col:78> 'int'
|   |   |     |-ImplicitCastExpr 0x144925580 <col:57> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1449254e8 <col:57> 'int ()' Function 0x14500e218 'EXTRACT_16BITS' 'int ()'
|   |   |     `-BinaryOperator 0x144925560 <col:72, col:77> 'const char *' '+'
|   |   |       |-ImplicitCastExpr 0x144925548 <col:72> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x144925508 <col:72> 'const char *' lvalue ParmVar 0x14500dda8 'pptr' 'const char *'
|   |   |       `-IntegerLiteral 0x144925528 <col:77> 'int' 6
|   |   |-BreakStmt 0x144925770 <line:23:9>
|   |   |-CaseStmt 0x1449257b0 <line:26:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x144925798 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x144925778 <col:10> 'int' 2
|   |   | `-NullStmt 0x144926c28 <<invalid sloc>>
|   |   |-BreakStmt 0x144926c30 <line:31:9>
|   |   |-DefaultStmt 0x144926ea8 <line:32:5, line:33:53>
|   |   | `-CallExpr 0x144926e28 <col:9, col:53> 'int'
|   |   |   |-ImplicitCastExpr 0x144926e10 <col:9> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x144926c38 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x1449230a0 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   |   |-ImplicitCastExpr 0x144926e60 <col:18> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x144926c58 <col:18> 'char *' lvalue Var 0x14500e0b8 'pos' 'char *'
|   |   |   |-BinaryOperator 0x144926da0 <col:23, col:45> 'unsigned long' '-'
|   |   |   | |-UnaryExprOrTypeTraitExpr 0x144926cb8 <col:23, col:32> 'unsigned long' sizeof
|   |   |   | | `-ParenExpr 0x144926c98 <col:29, col:32> 'char[4]' lvalue
|   |   |   | |   `-DeclRefExpr 0x144926c78 <col:30> 'char[4]' lvalue Var 0x14500e020 'rd' 'char[4]' non_odr_use_unevaluated
|   |   |   | `-ImplicitCastExpr 0x144926d88 <col:36, col:45> 'unsigned long' <IntegralCast>
|   |   |   |   `-ParenExpr 0x144926d68 <col:36, col:45> 'long'
|   |   |   |     `-BinaryOperator 0x144926d48 <col:37, col:43> 'long' '-'
|   |   |   |       |-ImplicitCastExpr 0x144926d18 <col:37> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x144926cd8 <col:37> 'char *' lvalue Var 0x14500e0b8 'pos' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x144926d30 <col:43> 'char *' <ArrayToPointerDecay>
|   |   |   |         `-DeclRefExpr 0x144926cf8 <col:43> 'char[4]' lvalue Var 0x14500e020 'rd' 'char[4]'
|   |   |   `-ImplicitCastExpr 0x144926e90 <col:48> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x144926e78 <col:48> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x144926dc0 <col:48> 'char[4]' lvalue "STR"
|   |   `-BreakStmt 0x144926ec8 <line:34:9>
|   |-CompoundAssignOperator 0x1449271e0 <line:36:5, col:22> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x144926f20 <col:5> 'char *' lvalue Var 0x14500e0b8 'pos' 'char *'
|   | `-CallExpr 0x144927188 <col:12, col:22> 'unsigned long'
|   |   |-ImplicitCastExpr 0x144927170 <col:12> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1449270e8 <col:12> 'unsigned long (const char *)' Function 0x144926f78 'strlen' 'unsigned long (const char *)'
|   |   `-ImplicitCastExpr 0x1449271c8 <col:19> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1449271b0 <col:19> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x144927108 <col:19> 'char *' lvalue Var 0x14500e0b8 'pos' 'char *'
|   |-BinaryOperator 0x1449272b0 <line:37:5, col:14> 'char' '='
|   | |-UnaryOperator 0x144927268 <col:5, col:10> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x144927250 <col:6, col:10> 'char *' <LValueToRValue>
|   | |   `-ParenExpr 0x144927230 <col:6, col:10> 'char *' lvalue
|   | |     `-DeclRefExpr 0x144927210 <col:7> 'char *' lvalue Var 0x14500e0b8 'pos' 'char *'
|   | `-ImplicitCastExpr 0x144927298 <col:14> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x144927280 <col:14> 'int' 0
|   `-ReturnStmt 0x144927340 <line:38:5, col:15>
|     `-ImplicitCastExpr 0x144927328 <col:12, col:15> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x144927310 <col:12, col:15> 'char *' <ArrayToPointerDecay>
|         `-ParenExpr 0x1449272f0 <col:12, col:15> 'char[4]' lvalue
|           `-DeclRefExpr 0x1449272d0 <col:13> 'char[4]' lvalue Var 0x14500e020 'rd' 'char[4]'
|-FunctionDecl 0x1449230a0 <line:13:9> col:9 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x1449231a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x144923208 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x144923270 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x144923148 <<invalid sloc>> Implicit 905
| `-FormatAttr 0x1449232f0 <col:9> Implicit printf 3 4
`-FunctionDecl 0x144926f78 <line:36:12> col:12 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x144927078 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x144927020 <<invalid sloc>> Implicit 902
