TranslationUnitDecl 0x154026408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1540272b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1540269d0 '__int128'
|-TypedefDecl 0x154027328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1540269f0 'unsigned __int128'
|-TypedefDecl 0x15500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15500bc00 'struct __NSConstantString_tag'
|   `-Record 0x154027380 '__NSConstantString_tag'
|-TypedefDecl 0x15500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x154026b90 '__SVInt8_t'
|-TypedefDecl 0x15500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x154026bb0 '__SVInt16_t'
|-TypedefDecl 0x15500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x154026bd0 '__SVInt32_t'
|-TypedefDecl 0x15500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x154026bf0 '__SVInt64_t'
|-TypedefDecl 0x15500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x154026c10 '__SVUint8_t'
|-TypedefDecl 0x15500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x154026c30 '__SVUint16_t'
|-TypedefDecl 0x15500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x154026c50 '__SVUint32_t'
|-TypedefDecl 0x15500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x154026c70 '__SVUint64_t'
|-TypedefDecl 0x15500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x154026c90 '__SVFloat16_t'
|-TypedefDecl 0x15500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x154026cb0 '__SVFloat32_t'
|-TypedefDecl 0x15500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x154026cd0 '__SVFloat64_t'
|-TypedefDecl 0x15500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x154026cf0 '__SVBfloat16_t'
|-TypedefDecl 0x15500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x154026d10 '__clang_svint8x2_t'
|-TypedefDecl 0x15500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x154026d30 '__clang_svint16x2_t'
|-TypedefDecl 0x15500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x154026d50 '__clang_svint32x2_t'
|-TypedefDecl 0x15500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x154026d70 '__clang_svint64x2_t'
|-TypedefDecl 0x15500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x154026d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x154026db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x154026dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x154026df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x154026e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x154026e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x154026e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x154026e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x154026e90 '__clang_svint8x3_t'
|-TypedefDecl 0x15500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x154026eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x15500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x154026ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x15500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x154026ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x15500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x154026f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x15500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x154026f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x15500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x154026f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x15500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x154026f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x15500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x154026f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x154026fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x154026fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x154026ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x154027010 '__clang_svint8x4_t'
|-TypedefDecl 0x15500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x154027030 '__clang_svint16x4_t'
|-TypedefDecl 0x15500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x154027050 '__clang_svint32x4_t'
|-TypedefDecl 0x15500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x154027070 '__clang_svint64x4_t'
|-TypedefDecl 0x15500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x154027090 '__clang_svuint8x4_t'
|-TypedefDecl 0x15500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1540270b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1540270d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1540270f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x154027110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x154027130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x154027150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x154027170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x154027190 '__SVBool_t'
|-TypedefDecl 0x15500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1540271b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1540271d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1540271f0 '__SVCount_t'
|-TypedefDecl 0x15500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15500dbb0 'char *'
|   `-BuiltinType 0x1540264b0 'char'
|-TypedefDecl 0x15500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15500dbb0 'char *'
|   `-BuiltinType 0x1540264b0 'char'
|-FunctionDecl 0x15500dd98 <dataset_diviso_filec/func24246_vuln.c:1:1, line:28:1> line:1:5 dsOpen 'int (void)'
| `-CompoundStmt 0x153831f38 <col:18, line:28:1>
|   |-DeclStmt 0x155026648 <line:2:5, col:19>
|   | |-RecordDecl 0x15500de88 <col:5, col:12> col:12 struct stat
|   | `-VarDecl 0x15500df88 <col:5, col:17> col:17 invalid sb 'struct stat'
|   |-DeclStmt 0x1550266e0 <line:3:5, col:15>
|   | `-VarDecl 0x155026678 <col:5, col:9> col:9 used retval 'int'
|   |-DeclStmt 0x155026858 <line:4:5, col:39>
|   | `-VarDecl 0x155026710 <col:5, col:25> col:11 used path 'char *' cinit
|   |   `-CXXDependentScopeMemberExpr 0x155026810 <col:18, col:25> '<dependent type>' contains-errors lvalue .diskstore_path
|   |     `-RecoveryExpr 0x1550267f0 <col:18> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1550270f8 <line:6:5, line:10:5>
|   | |-BinaryOperator 0x155026bb0 <line:6:9, col:53> 'int' contains-errors '&&'
|   | | |-ParenExpr 0x155026ac0 <col:9, col:39> 'int' contains-errors
|   | | | `-BinaryOperator 0x155026aa0 <col:10, col:38> 'int' contains-errors '='
|   | | |   |-DeclRefExpr 0x155026870 <col:10> 'int' lvalue Var 0x155026678 'retval' 'int'
|   | | |   `-BinaryOperator 0x155026a80 <col:19, col:38> 'int' contains-errors '=='
|   | | |     |-CallExpr 0x155026a18 <col:19, col:32> '<dependent type>' contains-errors
|   | | |     | |-DeclRefExpr 0x1550269a0 <col:19> 'int ()' Function 0x1550268e8 'stat' 'int ()'
|   | | |     | |-DeclRefExpr 0x1550269c0 <col:24> 'char *' contains-errors lvalue Var 0x155026710 'path' 'char *'
|   | | |     | `-UnaryOperator 0x155026a00 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |     |   `-RecoveryExpr 0x1550269e0 <col:30> '<dependent type>' contains-errors lvalue
|   | | |     `-UnaryOperator 0x155026a68 <col:37, col:38> 'int' prefix '-'
|   | | |       `-IntegerLiteral 0x155026a48 <col:38> 'int' 1
|   | | `-BinaryOperator 0x155026b90 <col:44, col:53> 'int' contains-errors '!='
|   | |   |-RecoveryExpr 0x155026b50 <col:44> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x155026b70 <col:53> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1550270d8 <col:61, line:10:5>
|   |   |-CallExpr 0x155027050 <line:7:9, line:8:38> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x155026cb0 <line:7:9> 'int ()' Function 0x155026bf8 'redisLog' 'int ()'
|   |   | |-RecoveryExpr 0x155026fd0 <col:18> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x155026d30 <col:33> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x155026d50 <line:8:17> 'char *' contains-errors lvalue Var 0x155026710 'path' 'char *'
|   |   | `-CallExpr 0x155027028 <col:23, col:37> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x155026f18 <col:23> 'char *(int)' Function 0x155026da8 'strerror' 'char *(int)'
|   |   |   `-RecoveryExpr 0x155026ff0 <col:32> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x1550270c8 <line:9:9, col:16>
|   |     `-RecoveryExpr 0x1550270a8 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x155027388 <line:13:5, col:52>
|   | |-BinaryOperator 0x155027320 <col:9, col:42> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x155027170 <col:9, col:19> 'int' '=='
|   | | | |-ImplicitCastExpr 0x155027158 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x155027118 <col:9> 'int' lvalue Var 0x155026678 'retval' 'int'
|   | | | `-IntegerLiteral 0x155027138 <col:19> 'int' 0
|   | | `-CallExpr 0x1550272f8 <col:24, col:42> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x155027270 <col:24> 'int ()' Function 0x1550271b8 'S_ISDIR' 'int ()'
|   | |   `-CXXDependentScopeMemberExpr 0x1550272b0 <col:32, col:35> '<dependent type>' contains-errors lvalue .st_mode
|   | |     `-RecoveryExpr 0x155027290 <col:32> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x155027378 <col:45, col:52>
|   |   `-RecoveryExpr 0x155027358 <col:52> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x153831aa0 <line:16:5, line:19:5>
|   | |-BinaryOperator 0x1550274e8 <line:16:9, col:43> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x155027400 <col:9, col:19> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1550273e8 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1550273a8 <col:9> 'int' lvalue Var 0x155026678 'retval' 'int'
|   | | | `-IntegerLiteral 0x1550273c8 <col:19> 'int' 0
|   | | `-UnaryOperator 0x1550274d0 <col:24, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-CallExpr 0x1550274a8 <col:25, col:43> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x155027420 <col:25> 'int ()' Function 0x1550271b8 'S_ISDIR' 'int ()'
|   | |     `-CXXDependentScopeMemberExpr 0x155027460 <col:33, col:36> '<dependent type>' contains-errors lvalue .st_mode
|   | |       `-RecoveryExpr 0x155027440 <col:33> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x153831a80 <col:46, line:19:5>
|   |   |-CallExpr 0x153831a00 <line:17:9, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x155027508 <col:9> 'int ()' Function 0x155026bf8 'redisLog' 'int ()'
|   |   | |-RecoveryExpr 0x1550275b8 <col:18> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x155027540 <col:32> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x155027560 <col:39> 'char *' contains-errors lvalue Var 0x155026710 'path' 'char *'
|   |   `-ReturnStmt 0x153831a70 <line:18:9, col:16>
|   |     `-RecoveryExpr 0x153831a50 <col:16> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x153831f18 <line:22:5, line:26:5>
|     |-BinaryOperator 0x153831ca0 <line:22:9, col:25> 'int' contains-errors '=='
|     | |-CallExpr 0x153831c28 <col:9, col:19> 'int' contains-errors
|     | | |-ImplicitCastExpr 0x153831c10 <col:9> 'int (*)()' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x153831ba0 <col:9> 'int ()' Function 0x153831ae8 'mkdir' 'int ()'
|     | | `-ImplicitCastExpr 0x153831c50 <col:15> 'char *' contains-errors <LValueToRValue>
|     | |   `-DeclRefExpr 0x153831bc0 <col:15> 'char *' contains-errors lvalue Var 0x155026710 'path' 'char *'
|     | `-UnaryOperator 0x153831c88 <col:24, col:25> 'int' prefix '-'
|     |   `-IntegerLiteral 0x153831c68 <col:25> 'int' 1
|     `-CompoundStmt 0x153831ef8 <col:28, line:26:5>
|       |-CallExpr 0x153831e70 <line:23:9, line:24:34> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x153831cc0 <line:23:9> 'int ()' Function 0x155026bf8 'redisLog' 'int ()'
|       | |-RecoveryExpr 0x153831df0 <col:18> '<dependent type>' contains-errors lvalue
|       | |-StringLiteral 0x153831cf8 <col:32> 'char[4]' lvalue "STR"
|       | |-DeclRefExpr 0x153831d18 <line:24:13> 'char *' contains-errors lvalue Var 0x155026710 'path' 'char *'
|       | `-CallExpr 0x153831e48 <col:19, col:33> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x153831d38 <col:19> 'char *(int)' Function 0x155026da8 'strerror' 'char *(int)'
|       |   `-RecoveryExpr 0x153831e10 <col:28> '<dependent type>' contains-errors lvalue
|       `-ReturnStmt 0x153831ee8 <line:25:9, col:16>
|         `-RecoveryExpr 0x153831ec8 <col:16> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x155026da8 <line:8:23> col:23 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x155026ea8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x155026e50 <<invalid sloc>> Implicit 901
