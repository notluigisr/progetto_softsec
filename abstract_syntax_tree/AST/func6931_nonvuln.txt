TranslationUnitDecl 0x13c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c855bd0 '__int128'
|-TypedefDecl 0x13c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c855bf0 'unsigned __int128'
|-TypedefDecl 0x13c926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c926000 'struct __NSConstantString_tag'
|   `-Record 0x13c856580 '__NSConstantString_tag'
|-TypedefDecl 0x13c926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c855d90 '__SVInt8_t'
|-TypedefDecl 0x13c926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c855db0 '__SVInt16_t'
|-TypedefDecl 0x13c926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c855dd0 '__SVInt32_t'
|-TypedefDecl 0x13c9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c855df0 '__SVInt64_t'
|-TypedefDecl 0x13c926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c855e10 '__SVUint8_t'
|-TypedefDecl 0x13c9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c855e30 '__SVUint16_t'
|-TypedefDecl 0x13c926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c855e50 '__SVUint32_t'
|-TypedefDecl 0x13c926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c855e70 '__SVUint64_t'
|-TypedefDecl 0x13c9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c855e90 '__SVFloat16_t'
|-TypedefDecl 0x13c926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13c9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13c926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13c926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13c9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13c926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13c9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13c926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13c926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13c9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13c927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13c927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13c927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c856390 '__SVBool_t'
|-TypedefDecl 0x13c927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c8563f0 '__SVCount_t'
|-TypedefDecl 0x13c927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c927fb0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
|-TypedefDecl 0x13c928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c927fb0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
|-FunctionDecl 0x13c928558 <dataset_diviso_filec/func6931_nonvuln.c:1:1, line:49:1> line:1:1 invalid get_light_color 'int (int *, int, double, double, double, int *, int *)'
| |-ParmVarDecl 0x13c928128 <col:18, col:40> col:40 invalid source 'int *'
| |-ParmVarDecl 0x13c9281a8 <col:48, col:56> col:56 invalid color 'int'
| |-ParmVarDecl 0x13c928228 <line:2:18, col:26> col:26 used x1 'double'
| |-ParmVarDecl 0x13c9282a8 <col:30, col:38> col:38 used y1 'double'
| |-ParmVarDecl 0x13c928328 <col:42, col:50> col:50 used z 'double'
| |-ParmVarDecl 0x13c9283a8 <col:53, col:69> col:69 invalid affine 'int *'
| |-ParmVarDecl 0x13c928428 <col:77, col:94> col:94 invalid ctx 'int *'
| `-CompoundStmt 0x13c943f98 <line:3:1, line:49:1>
|   |-DeclStmt 0x13c941890 <line:4:5, col:29>
|   | |-VarDecl 0x13c928650 <col:5, col:12> col:12 used base 'double'
|   | |-VarDecl 0x13c9286d0 <col:5, col:18> col:18 used angle 'double'
|   | |-VarDecl 0x13c928750 <col:5, col:25> col:25 used x 'double'
|   | `-VarDecl 0x13c941800 <col:5, col:28> col:28 used y 'double'
|   |-DeclStmt 0x13c941be0 <line:8:5, col:37>
|   | |-VarDecl 0x13c9418c0 <col:5, col:12> col:12 used sx 'double'
|   | |-VarDecl 0x13c941940 <col:5, col:16> col:16 used sy 'double'
|   | |-VarDecl 0x13c9419c0 <col:5, col:20> col:20 used sz 'double'
|   | |-VarDecl 0x13c941a40 <col:5, col:24> col:24 used spx 'double'
|   | |-VarDecl 0x13c941ac0 <col:5, col:29> col:29 used spy 'double'
|   | `-VarDecl 0x13c941b40 <col:5, col:34> col:34 used spz 'double'
|   |-IfStmt 0x13c941d08 <line:10:5, line:11:16>
|   | |-BinaryOperator 0x13c941cb8 <line:10:9, col:25> 'int' contains-errors '!='
|   | | |-CXXDependentScopeMemberExpr 0x13c941c18 <col:9, col:17> '<dependent type>' contains-errors lvalue ->type
|   | | | `-RecoveryExpr 0x13c941bf8 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x13c941c98 <col:25> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13c941cf8 <line:11:9, col:16>
|   |   `-RecoveryExpr 0x13c941cd8 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c941f90 <line:13:5, col:48> 'double' contains-errors '='
|   | |-DeclRefExpr 0x13c941d28 <col:5> 'double' lvalue Var 0x13c9418c0 'sx' 'double'
|   | `-CallExpr 0x13c941f60 <col:10, col:48> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13c941ea0 <col:10> 'int ()' Function 0x13c941de8 'rsvg_length_normalize' 'int ()'
|   |   |-UnaryOperator 0x13c941f28 <col:33, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-CXXDependentScopeMemberExpr 0x13c941ee0 <col:34, col:42> '<dependent type>' contains-errors lvalue ->x
|   |   |   `-RecoveryExpr 0x13c941ec0 <col:34> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x13c941f40 <col:45> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c9420c0 <line:14:5, col:48> 'double' contains-errors '='
|   | |-DeclRefExpr 0x13c941fb0 <col:5> 'double' lvalue Var 0x13c941940 'sy' 'double'
|   | `-CallExpr 0x13c942090 <col:10, col:48> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13c941fd0 <col:10> 'int ()' Function 0x13c941de8 'rsvg_length_normalize' 'int ()'
|   |   |-UnaryOperator 0x13c942058 <col:33, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-CXXDependentScopeMemberExpr 0x13c942010 <col:34, col:42> '<dependent type>' contains-errors lvalue ->y
|   |   |   `-RecoveryExpr 0x13c941ff0 <col:34> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x13c942070 <col:45> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c9421f0 <line:15:5, col:48> 'double' contains-errors '='
|   | |-DeclRefExpr 0x13c9420e0 <col:5> 'double' lvalue Var 0x13c9419c0 'sz' 'double'
|   | `-CallExpr 0x13c9421c0 <col:10, col:48> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13c942100 <col:10> 'int ()' Function 0x13c941de8 'rsvg_length_normalize' 'int ()'
|   |   |-UnaryOperator 0x13c942188 <col:33, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-CXXDependentScopeMemberExpr 0x13c942140 <col:34, col:42> '<dependent type>' contains-errors lvalue ->z
|   |   |   `-RecoveryExpr 0x13c942120 <col:34> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x13c9421a0 <col:45> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c942320 <line:16:5, col:57> 'double' contains-errors '='
|   | |-DeclRefExpr 0x13c942210 <col:5> 'double' lvalue Var 0x13c941a40 'spx' 'double'
|   | `-CallExpr 0x13c9422f0 <col:11, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13c942230 <col:11> 'int ()' Function 0x13c941de8 'rsvg_length_normalize' 'int ()'
|   |   |-UnaryOperator 0x13c9422b8 <col:34, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-CXXDependentScopeMemberExpr 0x13c942270 <col:35, col:43> '<dependent type>' contains-errors lvalue ->pointsAtX
|   |   |   `-RecoveryExpr 0x13c942250 <col:35> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x13c9422d0 <col:54> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c942450 <line:17:5, col:57> 'double' contains-errors '='
|   | |-DeclRefExpr 0x13c942340 <col:5> 'double' lvalue Var 0x13c941ac0 'spy' 'double'
|   | `-CallExpr 0x13c942420 <col:11, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13c942360 <col:11> 'int ()' Function 0x13c941de8 'rsvg_length_normalize' 'int ()'
|   |   |-UnaryOperator 0x13c9423e8 <col:34, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-CXXDependentScopeMemberExpr 0x13c9423a0 <col:35, col:43> '<dependent type>' contains-errors lvalue ->pointsAtY
|   |   |   `-RecoveryExpr 0x13c942380 <col:35> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x13c942400 <col:54> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c942580 <line:18:5, col:57> 'double' contains-errors '='
|   | |-DeclRefExpr 0x13c942470 <col:5> 'double' lvalue Var 0x13c941b40 'spz' 'double'
|   | `-CallExpr 0x13c942550 <col:11, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13c942490 <col:11> 'int ()' Function 0x13c941de8 'rsvg_length_normalize' 'int ()'
|   |   |-UnaryOperator 0x13c942518 <col:34, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-CXXDependentScopeMemberExpr 0x13c9424d0 <col:35, col:43> '<dependent type>' contains-errors lvalue ->pointsAtZ
|   |   |   `-RecoveryExpr 0x13c9424b0 <col:35> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x13c942530 <col:54> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c9427b8 <line:20:5, col:53> 'double' contains-errors '='
|   | |-DeclRefExpr 0x13c9425a0 <col:5> 'double' lvalue Var 0x13c928750 'x' 'double'
|   | `-BinaryOperator 0x13c942798 <col:9, col:53> '<dependent type>' contains-errors '+'
|   |   |-BinaryOperator 0x13c942710 <col:9, col:40> '<dependent type>' contains-errors '+'
|   |   | |-BinaryOperator 0x13c942648 <col:9, col:22> '<dependent type>' contains-errors '*'
|   |   | | |-CXXDependentScopeMemberExpr 0x13c9425e0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->xx
|   |   | | | `-RecoveryExpr 0x13c9425c0 <col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x13c942628 <col:22> 'double' lvalue ParmVar 0x13c928228 'x1' 'double'
|   |   | `-BinaryOperator 0x13c9426f0 <col:27, col:40> '<dependent type>' contains-errors '*'
|   |   |   |-CXXDependentScopeMemberExpr 0x13c942688 <col:27, col:35> '<dependent type>' contains-errors lvalue ->xy
|   |   |   | `-RecoveryExpr 0x13c942668 <col:27> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x13c9426d0 <col:40> 'double' lvalue ParmVar 0x13c9282a8 'y1' 'double'
|   |   `-CXXDependentScopeMemberExpr 0x13c942750 <col:45, col:53> '<dependent type>' contains-errors lvalue ->x0
|   |     `-RecoveryExpr 0x13c942730 <col:45> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c9429f8 <line:21:5, col:53> 'double' contains-errors '='
|   | |-DeclRefExpr 0x13c9427d8 <col:5> 'double' lvalue Var 0x13c941800 'y' 'double'
|   | `-BinaryOperator 0x13c9429d8 <col:9, col:53> '<dependent type>' contains-errors '+'
|   |   |-BinaryOperator 0x13c942950 <col:9, col:40> '<dependent type>' contains-errors '+'
|   |   | |-BinaryOperator 0x13c942888 <col:9, col:22> '<dependent type>' contains-errors '*'
|   |   | | |-CXXDependentScopeMemberExpr 0x13c942820 <col:9, col:17> '<dependent type>' contains-errors lvalue ->yx
|   |   | | | `-RecoveryExpr 0x13c942800 <col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x13c942868 <col:22> 'double' lvalue ParmVar 0x13c928228 'x1' 'double'
|   |   | `-BinaryOperator 0x13c942930 <col:27, col:40> '<dependent type>' contains-errors '*'
|   |   |   |-CXXDependentScopeMemberExpr 0x13c9428c8 <col:27, col:35> '<dependent type>' contains-errors lvalue ->yy
|   |   |   | `-RecoveryExpr 0x13c9428a8 <col:27> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x13c942910 <col:40> 'double' lvalue ParmVar 0x13c9282a8 'y1' 'double'
|   |   `-CXXDependentScopeMemberExpr 0x13c942990 <col:45, col:53> '<dependent type>' contains-errors lvalue ->y0
|   |     `-RecoveryExpr 0x13c942970 <col:45> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13c9432e8 <line:35:5, col:23> 'double' '='
|   | |-DeclRefExpr 0x13c942ff8 <col:5> 'double' lvalue Var 0x13c9286d0 'angle' 'double'
|   | `-CallExpr 0x13c9432a8 <col:13, col:23> 'double'
|   |   |-ImplicitCastExpr 0x13c943290 <col:13> 'double (*)(double)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13c943218 <col:13> 'double (double)' Function 0x13c943058 'acos' 'double (double)'
|   |   `-ImplicitCastExpr 0x13c9432d0 <col:19> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x13c943238 <col:19> 'double' lvalue Var 0x13c928650 'base' 'double'
|   `-IfStmt 0x13c9434d0 <line:37:5, line:42:5>
|     |-BinaryOperator 0x13c943440 <line:37:9, col:37> 'int' contains-errors '||'
|     | |-BinaryOperator 0x13c943378 <col:9, col:16> 'int' '<'
|     | | |-ImplicitCastExpr 0x13c943348 <col:9> 'double' <LValueToRValue>
|     | | | `-DeclRefExpr 0x13c943308 <col:9> 'double' lvalue Var 0x13c928650 'base' 'double'
|     | | `-ImplicitCastExpr 0x13c943360 <col:16> 'double' <IntegralToFloating>
|     | |   `-IntegerLiteral 0x13c943328 <col:16> 'int' 0
|     | `-BinaryOperator 0x13c943420 <col:21, col:37> 'int' contains-errors '>'
|     |   |-DeclRefExpr 0x13c943398 <col:21> 'double' lvalue Var 0x13c9286d0 'angle' 'double'
|     |   `-CXXDependentScopeMemberExpr 0x13c9433d8 <col:29, col:37> '<dependent type>' contains-errors lvalue ->limitingconeAngle
|     |     `-RecoveryExpr 0x13c9433b8 <col:29> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x13c9434c0 <col:56, line:42:5>
|-FunctionDecl 0x13c943058 <line:35:13> col:13 implicit used acos 'double (double)' extern
| |-ParmVarDecl 0x13c943158 <<invalid sloc>> <invalid sloc> 'double'
| |-BuiltinAttr 0x13c943100 <<invalid sloc>> Implicit 1031
| |-ConstAttr 0x13c9431c8 <col:13> Implicit
| `-NoThrowAttr 0x13c9431f0 <col:13> Implicit
`-FunctionDecl 0x13c9435a0 <line:44:26> col:26 implicit used pow 'double (double, double)' extern
  |-ParmVarDecl 0x13c9436a0 <<invalid sloc>> <invalid sloc> 'double'
  |-ParmVarDecl 0x13c943708 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x13c943648 <<invalid sloc>> Implicit 1028
  |-ConstAttr 0x13c943780 <col:26> Implicit
  `-NoThrowAttr 0x13c9437a8 <col:26> Implicit
