TranslationUnitDecl 0x12f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f055bd0 '__int128'
|-TypedefDecl 0x12f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f055bf0 'unsigned __int128'
|-TypedefDecl 0x12f80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12f056580 '__NSConstantString_tag'
|-TypedefDecl 0x12f80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f055d90 '__SVInt8_t'
|-TypedefDecl 0x12f80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f055db0 '__SVInt16_t'
|-TypedefDecl 0x12f80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f055dd0 '__SVInt32_t'
|-TypedefDecl 0x12f80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f055df0 '__SVInt64_t'
|-TypedefDecl 0x12f80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f055e10 '__SVUint8_t'
|-TypedefDecl 0x12f80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f055e30 '__SVUint16_t'
|-TypedefDecl 0x12f80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f055e50 '__SVUint32_t'
|-TypedefDecl 0x12f80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f055e70 '__SVUint64_t'
|-TypedefDecl 0x12f80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f055e90 '__SVFloat16_t'
|-TypedefDecl 0x12f80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12f80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12f80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f056390 '__SVBool_t'
|-TypedefDecl 0x12f80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f0563f0 '__SVCount_t'
|-TypedefDecl 0x12f80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f80dbb0 'char *'
|   `-BuiltinType 0x12f0556b0 'char'
|-TypedefDecl 0x12f80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f80dbb0 'char *'
|   `-BuiltinType 0x12f0556b0 'char'
|-FunctionDecl 0x12f827438 <dataset_diviso_filec/func1914_vuln.c:1:1, line:61:1> line:1:1 invalid setkey_principal3_2_svc 'int (int *, struct svc_req *)'
| |-ParmVarDecl 0x12f80dd28 <col:25, col:38> col:38 invalid arg 'int *'
| |-ParmVarDecl 0x12f80e318 <col:43, col:59> col:59 used rqstp 'struct svc_req *'
| `-CompoundStmt 0x12f82be70 <line:2:1, line:61:1>
|   |-DeclStmt 0x12f827570 <line:3:5, col:40>
|   | `-VarDecl 0x12f827508 <col:5, col:37> col:37 referenced invalid ret 'int' static
|   |-DeclStmt 0x12f827608 <line:4:5, col:47>
|   | `-VarDecl 0x12f8275a0 <col:5, col:38> col:38 used prime_arg 'char *'
|   |-DeclStmt 0x12f8276d8 <line:9:5, col:51>
|   | `-VarDecl 0x12f827638 <col:5, col:47> col:38 used errmsg 'const char *' cinit
|   |   `-RecoveryExpr 0x12f8276b8 <col:47> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12f827910 <line:11:5, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12f827850 <col:5> 'int ()' Function 0x12f827798 'xdr_free' 'int ()'
|   | |-RecoveryExpr 0x12f8278f0 <col:14> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x12f8278a8 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x12f827888 <col:32> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12f827c40 <line:13:5, line:14:14>
|   | |-RecoveryExpr 0x12f827bb8 <line:13:9, col:72> '_Bool' contains-errors
|   | `-GotoStmt 0x12f827c28 <line:14:9, col:14> 'exit_func' 0x12f827bd8
|   |-IfStmt 0x12f827e30 <line:16:5, line:17:14>
|   | |-RecoveryExpr 0x12f827df8 <line:16:9, col:49> '_Bool' contains-errors
|   | `-GotoStmt 0x12f827e18 <line:17:9, col:14> 'exit_func' 0x12f827bd8
|   |-BinaryOperator 0x12f827fc8 <line:19:5, col:31> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12f827e98 <col:5, col:9> '<dependent type>' contains-errors lvalue .api_version
|   | | `-RecoveryExpr 0x12f827e70 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12f827e50 <col:5> 'int' lvalue Var 0x12f827508 'ret' 'int'
|   | `-CXXDependentScopeMemberExpr 0x12f827f80 <col:23, col:31> '<dependent type>' contains-errors lvalue ->api_version
|   |   `-RecoveryExpr 0x12f827f60 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12f829c00 <line:21:5, line:24:5>
|   | |-BinaryOperator 0x12f828288 <line:21:9, col:63> 'int' contains-errors '<'
|   | | |-CallExpr 0x12f828250 <col:9, col:59> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12f8280c8 <col:9> 'int ()' Function 0x12f828010 'setup_gss_names' 'int ()'
|   | | | |-DeclRefExpr 0x12f8280e8 <col:25> 'struct svc_req *' lvalue ParmVar 0x12f80e318 'rqstp' 'struct svc_req *'
|   | | | |-UnaryOperator 0x12f828200 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x12f8281e0 <col:33> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x12f828238 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x12f828218 <col:47> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x12f8281a0 <col:63> 'int' 0
|   | `-CompoundStmt 0x12f8283c8 <col:66, line:24:5>
|   |   |-BinaryOperator 0x12f828390 <line:22:9, col:20> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x12f8282f0 <col:9, col:13> '<dependent type>' contains-errors lvalue .code
|   |   | | `-RecoveryExpr 0x12f8282c8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x12f8282a8 <col:9> 'int' lvalue Var 0x12f827508 'ret' 'int'
|   |   | `-RecoveryExpr 0x12f828370 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x12f8283b0 <line:23:9, col:14> 'exit_func' 0x12f827bd8
|   |-IfStmt 0x12f829ff0 <line:25:5, line:28:5>
|   | |-CallExpr 0x12f829ef8 <line:25:9, col:66> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x12f829d00 <col:9> 'int ()' Function 0x12f829c48 'krb5_unparse_name' 'int ()'
|   | | |-CXXDependentScopeMemberExpr 0x12f829eb0 <col:27, col:35> '<dependent type>' contains-errors lvalue ->context
|   | | | `-RecoveryExpr 0x12f829e90 <col:27> '<dependent type>' contains-errors lvalue
|   | | |-CXXDependentScopeMemberExpr 0x12f829da0 <col:44, col:49> '<dependent type>' contains-errors lvalue ->princ
|   | | | `-RecoveryExpr 0x12f829d80 <col:44> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x12f829e40 <col:56, col:57> 'char **' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x12f829de8 <col:57> 'char *' lvalue Var 0x12f8275a0 'prime_arg' 'char *'
|   | `-CompoundStmt 0x12f829fd8 <col:69, line:28:5>
|   |   `-GotoStmt 0x12f829fc0 <line:27:9, col:14> 'exit_func' 0x12f827bd8
|   |-IfStmt 0x12f82ab40 <line:30:5, line:42:5> has_else
|   | |-RecoveryExpr 0x12f82a4d0 <line:30:9, line:32:56> '_Bool' contains-errors
|   | |-CompoundStmt 0x12f82a8f0 <col:59, line:38:5>
|   | `-CompoundStmt 0x12f82ab30 <col:12, line:42:5>
|   |-IfStmt 0x12f82b920 <line:44:5, line:53:5>
|   | |-RecoveryExpr 0x12f82abd8 <line:44:8, col:20> '_Bool' contains-errors
|   | `-CompoundStmt 0x12f82b910 <col:39, line:53:5>
|   |-CallExpr 0x12f82bb88 <line:55:5, col:19> 'void'
|   | |-ImplicitCastExpr 0x12f82bb70 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12f82bae8 <col:5> 'void (void *)' Function 0x12f82b978 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x12f82bbc8 <col:10> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x12f82bbb0 <col:10> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12f82bb08 <col:10> 'char *' lvalue Var 0x12f8275a0 'prime_arg' 'char *'
|   |-LabelStmt 0x12f82be08 <line:58:1, col:10> 'exit_func'
|   | `-NullStmt 0x12f82be00 <col:10>
|   `-ReturnStmt 0x12f82be60 <line:60:5, col:13>
|     `-UnaryOperator 0x12f82be48 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|       `-RecoveryExpr 0x12f82be28 <col:13> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x12f82b978 <line:55:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12f82ba78 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12f82ba20 <<invalid sloc>> Implicit 873
