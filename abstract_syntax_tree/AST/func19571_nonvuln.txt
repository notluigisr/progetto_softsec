TranslationUnitDecl 0x129055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1290564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129055bd0 '__int128'
|-TypedefDecl 0x129056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129055bf0 'unsigned __int128'
|-TypedefDecl 0x12980be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12980bc00 'struct __NSConstantString_tag'
|   `-Record 0x129056580 '__NSConstantString_tag'
|-TypedefDecl 0x12980be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129055d90 '__SVInt8_t'
|-TypedefDecl 0x12980bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129055db0 '__SVInt16_t'
|-TypedefDecl 0x12980bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129055dd0 '__SVInt32_t'
|-TypedefDecl 0x12980bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129055df0 '__SVInt64_t'
|-TypedefDecl 0x12980c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129055e10 '__SVUint8_t'
|-TypedefDecl 0x12980c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129055e30 '__SVUint16_t'
|-TypedefDecl 0x12980c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129055e50 '__SVUint32_t'
|-TypedefDecl 0x12980c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129055e70 '__SVUint64_t'
|-TypedefDecl 0x12980c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129055e90 '__SVFloat16_t'
|-TypedefDecl 0x12980c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12980c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12980c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12980c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12980c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12980c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12980c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12980c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12980c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12980c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12980c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12980c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12980c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12980c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12980c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12980c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12980c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1290560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12980c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1290560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12980c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1290560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12980c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12980ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12980cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12980cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12980cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12980d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1290561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12980d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1290561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12980d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1290561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12980d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12980d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12980d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12980d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12980d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12980d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1290562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12980d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1290562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12980d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1290562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12980d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12980d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12980d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12980d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12980da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129056390 '__SVBool_t'
|-TypedefDecl 0x12980da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1290563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12980dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1290563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12980db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1290563f0 '__SVCount_t'
|-TypedefDecl 0x12980dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12980dbb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-TypedefDecl 0x12980dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12980dbb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
`-FunctionDecl 0x12980df98 <dataset_diviso_filec/func19571_nonvuln.c:1:1, line:94:1> line:1:15 invalid PCLPackbitsCompressImage 'int (const int, const unsigned char *, unsigned char *)' static
  |-ParmVarDecl 0x12980dcf0 <col:40, col:53> col:53 invalid length 'const int'
  |-ParmVarDecl 0x12980dda8 <line:2:3, col:24> col:24 used pixels 'const unsigned char *'
  |-ParmVarDecl 0x12980de58 <col:31, col:46> col:46 used compress_pixels 'unsigned char *'
  `-CompoundStmt 0x12982c958 <line:3:1, line:94:1>
    |-DeclStmt 0x12980e0d8 <line:4:3, line:5:10>
    | `-VarDecl 0x12980e070 <line:4:3, line:5:5> col:5 used count 'int'
    |-DeclStmt 0x12980e170 <line:7:3, line:8:6>
    | `-VarDecl 0x12980e108 <line:7:3, line:8:5> col:5 referenced invalid x 'int' register
    |-DeclStmt 0x12980e208 <line:10:3, line:11:7>
    | `-VarDecl 0x12980e1a0 <line:10:3, line:11:6> col:6 used q 'unsigned char *' register
    |-DeclStmt 0x12980e330 <line:16:3, line:17:18>
    | `-VarDecl 0x12980e2c8 <line:16:3, line:17:17> col:5 used packbits 'unsigned char[128]'
    |-BinaryOperator 0x12980e3a0 <line:20:3, col:5> 'unsigned char *' '='
    | |-DeclRefExpr 0x12980e348 <col:3> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    | `-ImplicitCastExpr 0x12980e388 <col:5> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x12980e368 <col:5> 'unsigned char *' lvalue ParmVar 0x12980de58 'compress_pixels' 'unsigned char *'
    |-ForStmt 0x12982c7e8 <line:21:3, line:91:3>
    | |-ImplicitCastExpr 0x1298282b0 <line:21:8, col:18> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x129828280 <col:8, col:18> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x12980e3c0 <col:8> '<dependent type>' contains-errors lvalue
    | |   `-ParenExpr 0x129827e40 <col:10, col:18> '<overloaded function type>' lvalue
    | |     `-UnresolvedLookupExpr 0x129827e00 <col:11> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    | |-<<<NULL>>>
    | |-RecoveryExpr 0x1298282c8 <col:20> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x129828328 <col:28, col:33> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x1298282e8 <col:28> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x129828308 <col:33> 'int' 0
    | `-CompoundStmt 0x12982c7d0 <line:22:3, line:91:3>
    |   `-SwitchStmt 0x129828380 <line:23:5, line:90:5>
    |     |-ImplicitCastExpr 0x129828368 <line:23:13> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x129828348 <col:13> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x12982c7a0 <line:24:5, line:90:5>
    |       |-CaseStmt 0x1298283c8 <line:25:7, line:31:7>
    |       | |-IntegerLiteral 0x1298283a8 <line:25:12> 'int' 1
    |       | `-CompoundStmt 0x1298285f8 <line:26:7, line:31:7>
    |       |   |-UnaryOperator 0x129828438 <line:27:9, col:10> '<dependent type>' contains-errors postfix '--' cannot overflow
    |       |   | `-RecoveryExpr 0x129828410 <col:9> '<dependent type>' contains-errors lvalue
    |       |   |   `-DeclRefExpr 0x1298283f0 <col:9> 'int' lvalue Var 0x12980e108 'x' 'int'
    |       |   |-BinaryOperator 0x1298284d8 <line:28:9, col:14> 'unsigned char' '='
    |       |   | |-UnaryOperator 0x129828488 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | `-UnaryOperator 0x129828470 <col:10, col:11> 'unsigned char *' postfix '++'
    |       |   | |   `-DeclRefExpr 0x129828450 <col:10> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   | `-ImplicitCastExpr 0x1298284c0 <col:14> 'unsigned char' <IntegralCast>
    |       |   |   `-IntegerLiteral 0x1298284a0 <col:14> 'int' 0
    |       |   |-BinaryOperator 0x1298285d0 <line:29:9, col:22> 'unsigned char' '='
    |       |   | |-UnaryOperator 0x129828530 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | `-UnaryOperator 0x129828518 <col:10, col:11> 'unsigned char *' postfix '++'
    |       |   | |   `-DeclRefExpr 0x1298284f8 <col:10> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   | `-ImplicitCastExpr 0x1298285b8 <col:14, col:22> 'unsigned char' <LValueToRValue>
    |       |   |   `-ParenExpr 0x129828598 <col:14, col:22> 'const unsigned char' lvalue
    |       |   |     `-UnaryOperator 0x129828580 <col:15, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
    |       |   |       `-ImplicitCastExpr 0x129828568 <col:16> 'const unsigned char *' <LValueToRValue>
    |       |   |         `-DeclRefExpr 0x129828548 <col:16> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   `-BreakStmt 0x1298285f0 <line:30:9>
    |       |-CaseStmt 0x129828648 <line:32:7, line:39:7>
    |       | |-IntegerLiteral 0x129828628 <line:32:12> 'int' 2
    |       | `-CompoundStmt 0x1298289b0 <line:33:7, line:39:7>
    |       |   |-CompoundAssignOperator 0x1298286d8 <line:34:9, col:12> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |   | |-RecoveryExpr 0x129828690 <col:9> '<dependent type>' contains-errors lvalue
    |       |   | | `-DeclRefExpr 0x129828670 <col:9> 'int' lvalue Var 0x12980e108 'x' 'int'
    |       |   | `-IntegerLiteral 0x1298286b8 <col:12> 'int' 2
    |       |   |-BinaryOperator 0x129828790 <line:35:9, col:14> 'unsigned char' '='
    |       |   | |-UnaryOperator 0x129828740 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | `-UnaryOperator 0x129828728 <col:10, col:11> 'unsigned char *' postfix '++'
    |       |   | |   `-DeclRefExpr 0x129828708 <col:10> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   | `-ImplicitCastExpr 0x129828778 <col:14> 'unsigned char' <IntegralCast>
    |       |   |   `-IntegerLiteral 0x129828758 <col:14> 'int' 1
    |       |   |-BinaryOperator 0x129828888 <line:36:9, col:22> 'unsigned char' '='
    |       |   | |-UnaryOperator 0x1298287e8 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | `-UnaryOperator 0x1298287d0 <col:10, col:11> 'unsigned char *' postfix '++'
    |       |   | |   `-DeclRefExpr 0x1298287b0 <col:10> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   | `-ImplicitCastExpr 0x129828870 <col:14, col:22> 'unsigned char' <LValueToRValue>
    |       |   |   `-ParenExpr 0x129828850 <col:14, col:22> 'const unsigned char' lvalue
    |       |   |     `-UnaryOperator 0x129828838 <col:15, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
    |       |   |       `-ImplicitCastExpr 0x129828820 <col:16> 'const unsigned char *' <LValueToRValue>
    |       |   |         `-DeclRefExpr 0x129828800 <col:16> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   |-BinaryOperator 0x129828988 <line:37:9, col:22> 'unsigned char' '='
    |       |   | |-UnaryOperator 0x1298288e0 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | `-UnaryOperator 0x1298288c8 <col:10, col:11> 'unsigned char *' postfix '++'
    |       |   | |   `-DeclRefExpr 0x1298288a8 <col:10> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   | `-ImplicitCastExpr 0x129828970 <col:14, col:22> 'unsigned char' <LValueToRValue>
    |       |   |   `-ArraySubscriptExpr 0x129828950 <col:14, col:22> 'const unsigned char' lvalue
    |       |   |     |-ImplicitCastExpr 0x129828938 <col:14> 'const unsigned char *' <LValueToRValue>
    |       |   |     | `-DeclRefExpr 0x1298288f8 <col:14> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   |     `-IntegerLiteral 0x129828918 <col:21> 'int' 1
    |       |   `-BreakStmt 0x1298289a8 <line:38:9>
    |       |-CaseStmt 0x129828a08 <line:40:7, line:54:7>
    |       | |-IntegerLiteral 0x1298289e8 <line:40:12> 'int' 3
    |       | `-CompoundStmt 0x12982ad30 <line:41:7, line:54:7>
    |       |   |-CompoundAssignOperator 0x129828a98 <line:42:9, col:12> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |   | |-RecoveryExpr 0x129828a50 <col:9> '<dependent type>' contains-errors lvalue
    |       |   | | `-DeclRefExpr 0x129828a30 <col:9> 'int' lvalue Var 0x12980e108 'x' 'int'
    |       |   | `-IntegerLiteral 0x129828a78 <col:12> 'int' 3
    |       |   |-IfStmt 0x12982a968 <line:43:9, line:48:11>
    |       |   | |-BinaryOperator 0x12982a670 <line:43:13, col:68> 'int' '&&'
    |       |   | | |-ParenExpr 0x129828c48 <col:13, col:36> 'int'
    |       |   | | | `-BinaryOperator 0x129828c28 <col:14, col:35> 'int' '=='
    |       |   | | |   |-ImplicitCastExpr 0x129828bf8 <col:14, col:15> 'int' <IntegralCast>
    |       |   | | |   | `-ImplicitCastExpr 0x129828bc8 <col:14, col:15> 'unsigned char' <LValueToRValue>
    |       |   | | |   |   `-UnaryOperator 0x129828b00 <col:14, col:15> 'const unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | |   |     `-ImplicitCastExpr 0x129828ae8 <col:15> 'const unsigned char *' <LValueToRValue>
    |       |   | | |   |       `-DeclRefExpr 0x129828ac8 <col:15> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   | | |   `-ImplicitCastExpr 0x129828c10 <col:25, col:35> 'int' <IntegralCast>
    |       |   | | |     `-ImplicitCastExpr 0x129828be0 <col:25, col:35> 'unsigned char' <LValueToRValue>
    |       |   | | |       `-UnaryOperator 0x129828bb0 <col:25, col:35> 'const unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | |         `-ParenExpr 0x129828b90 <col:26, col:35> 'const unsigned char *'
    |       |   | | |           `-BinaryOperator 0x129828b70 <col:27, col:34> 'const unsigned char *' '+'
    |       |   | | |             |-ImplicitCastExpr 0x129828b58 <col:27> 'const unsigned char *' <LValueToRValue>
    |       |   | | |             | `-DeclRefExpr 0x129828b18 <col:27> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   | | |             `-IntegerLiteral 0x129828b38 <col:34> 'int' 1
    |       |   | | `-ParenExpr 0x12982a650 <col:41, col:68> 'int'
    |       |   | |   `-BinaryOperator 0x12982a630 <col:42, col:67> 'int' '=='
    |       |   | |     |-ImplicitCastExpr 0x12982a600 <col:42, col:52> 'int' <IntegralCast>
    |       |   | |     | `-ImplicitCastExpr 0x129828dc8 <col:42, col:52> 'unsigned char' <LValueToRValue>
    |       |   | |     |   `-UnaryOperator 0x129828d00 <col:42, col:52> 'const unsigned char' lvalue prefix '*' cannot overflow
    |       |   | |     |     `-ParenExpr 0x129828ce0 <col:43, col:52> 'const unsigned char *'
    |       |   | |     |       `-BinaryOperator 0x129828cc0 <col:44, col:51> 'const unsigned char *' '+'
    |       |   | |     |         |-ImplicitCastExpr 0x129828ca8 <col:44> 'const unsigned char *' <LValueToRValue>
    |       |   | |     |         | `-DeclRefExpr 0x129828c68 <col:44> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   | |     |         `-IntegerLiteral 0x129828c88 <col:51> 'int' 1
    |       |   | |     `-ImplicitCastExpr 0x12982a618 <col:57, col:67> 'int' <IntegralCast>
    |       |   | |       `-ImplicitCastExpr 0x129828de0 <col:57, col:67> 'unsigned char' <LValueToRValue>
    |       |   | |         `-UnaryOperator 0x129828db0 <col:57, col:67> 'const unsigned char' lvalue prefix '*' cannot overflow
    |       |   | |           `-ParenExpr 0x129828d90 <col:58, col:67> 'const unsigned char *'
    |       |   | |             `-BinaryOperator 0x129828d70 <col:59, col:66> 'const unsigned char *' '+'
    |       |   | |               |-ImplicitCastExpr 0x129828d58 <col:59> 'const unsigned char *' <LValueToRValue>
    |       |   | |               | `-DeclRefExpr 0x129828d18 <col:59> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   | |               `-IntegerLiteral 0x129828d38 <col:66> 'int' 2
    |       |   | `-CompoundStmt 0x12982a940 <line:44:11, line:48:11>
    |       |   |   |-BinaryOperator 0x12982a820 <line:45:13, col:44> 'unsigned char' '='
    |       |   |   | |-UnaryOperator 0x12982a6c8 <col:13, col:15> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   |   | | `-UnaryOperator 0x12982a6b0 <col:14, col:15> 'unsigned char *' postfix '++'
    |       |   |   | |   `-DeclRefExpr 0x12982a690 <col:14> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   |   | `-CStyleCastExpr 0x12982a7f8 <col:18, col:44> 'unsigned char' <IntegralCast>
    |       |   |   |   `-ParenExpr 0x12982a7d8 <col:34, col:44> 'int'
    |       |   |   |     `-BinaryOperator 0x12982a780 <col:35, col:43> 'int' '+'
    |       |   |   |       |-ParenExpr 0x12982a740 <col:35, col:41> 'int'
    |       |   |   |       | `-BinaryOperator 0x12982a720 <col:36, col:40> 'int' '-'
    |       |   |   |       |   |-IntegerLiteral 0x12982a6e0 <col:36> 'int' 256
    |       |   |   |       |   `-IntegerLiteral 0x12982a700 <col:40> 'int' 3
    |       |   |   |       `-IntegerLiteral 0x12982a760 <col:43> 'int' 1
    |       |   |   |-BinaryOperator 0x12982a918 <line:46:13, col:26> 'unsigned char' '='
    |       |   |   | |-UnaryOperator 0x12982a878 <col:13, col:15> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   |   | | `-UnaryOperator 0x12982a860 <col:14, col:15> 'unsigned char *' postfix '++'
    |       |   |   | |   `-DeclRefExpr 0x12982a840 <col:14> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   |   | `-ImplicitCastExpr 0x12982a900 <col:18, col:26> 'unsigned char' <LValueToRValue>
    |       |   |   |   `-ParenExpr 0x12982a8e0 <col:18, col:26> 'const unsigned char' lvalue
    |       |   |   |     `-UnaryOperator 0x12982a8c8 <col:19, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
    |       |   |   |       `-ImplicitCastExpr 0x12982a8b0 <col:20> 'const unsigned char *' <LValueToRValue>
    |       |   |   |         `-DeclRefExpr 0x12982a890 <col:20> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   |   `-BreakStmt 0x12982a938 <line:47:13>
    |       |   |-BinaryOperator 0x12982aa10 <line:49:9, col:14> 'unsigned char' '='
    |       |   | |-UnaryOperator 0x12982a9c0 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | `-UnaryOperator 0x12982a9a8 <col:10, col:11> 'unsigned char *' postfix '++'
    |       |   | |   `-DeclRefExpr 0x12982a988 <col:10> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   | `-ImplicitCastExpr 0x12982a9f8 <col:14> 'unsigned char' <IntegralCast>
    |       |   |   `-IntegerLiteral 0x12982a9d8 <col:14> 'int' 2
    |       |   |-BinaryOperator 0x12982ab08 <line:50:9, col:22> 'unsigned char' '='
    |       |   | |-UnaryOperator 0x12982aa68 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | `-UnaryOperator 0x12982aa50 <col:10, col:11> 'unsigned char *' postfix '++'
    |       |   | |   `-DeclRefExpr 0x12982aa30 <col:10> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   | `-ImplicitCastExpr 0x12982aaf0 <col:14, col:22> 'unsigned char' <LValueToRValue>
    |       |   |   `-ParenExpr 0x12982aad0 <col:14, col:22> 'const unsigned char' lvalue
    |       |   |     `-UnaryOperator 0x12982aab8 <col:15, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
    |       |   |       `-ImplicitCastExpr 0x12982aaa0 <col:16> 'const unsigned char *' <LValueToRValue>
    |       |   |         `-DeclRefExpr 0x12982aa80 <col:16> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   |-BinaryOperator 0x12982ac08 <line:51:9, col:22> 'unsigned char' '='
    |       |   | |-UnaryOperator 0x12982ab60 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | `-UnaryOperator 0x12982ab48 <col:10, col:11> 'unsigned char *' postfix '++'
    |       |   | |   `-DeclRefExpr 0x12982ab28 <col:10> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   | `-ImplicitCastExpr 0x12982abf0 <col:14, col:22> 'unsigned char' <LValueToRValue>
    |       |   |   `-ArraySubscriptExpr 0x12982abd0 <col:14, col:22> 'const unsigned char' lvalue
    |       |   |     |-ImplicitCastExpr 0x12982abb8 <col:14> 'const unsigned char *' <LValueToRValue>
    |       |   |     | `-DeclRefExpr 0x12982ab78 <col:14> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   |     `-IntegerLiteral 0x12982ab98 <col:21> 'int' 1
    |       |   |-BinaryOperator 0x12982ad08 <line:52:9, col:22> 'unsigned char' '='
    |       |   | |-UnaryOperator 0x12982ac60 <col:9, col:11> 'unsigned char' lvalue prefix '*' cannot overflow
    |       |   | | `-UnaryOperator 0x12982ac48 <col:10, col:11> 'unsigned char *' postfix '++'
    |       |   | |   `-DeclRefExpr 0x12982ac28 <col:10> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |       |   | `-ImplicitCastExpr 0x12982acf0 <col:14, col:22> 'unsigned char' <LValueToRValue>
    |       |   |   `-ArraySubscriptExpr 0x12982acd0 <col:14, col:22> 'const unsigned char' lvalue
    |       |   |     |-ImplicitCastExpr 0x12982acb8 <col:14> 'const unsigned char *' <LValueToRValue>
    |       |   |     | `-DeclRefExpr 0x12982ac78 <col:14> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |       |   |     `-IntegerLiteral 0x12982ac98 <col:21> 'int' 2
    |       |   `-BreakStmt 0x12982ad28 <line:53:9>
    |       `-DefaultStmt 0x12982c780 <line:55:7, line:89:7>
    |         `-CompoundStmt 0x12982c738 <line:56:7, line:89:7>
    |           |-IfStmt 0x12982b948 <line:57:9, line:72:11>
    |           | |-BinaryOperator 0x12982b118 <line:57:13, col:68> 'int' '&&'
    |           | | |-ParenExpr 0x12982aef8 <col:13, col:36> 'int'
    |           | | | `-BinaryOperator 0x12982aed8 <col:14, col:35> 'int' '=='
    |           | | |   |-ImplicitCastExpr 0x12982aea8 <col:14, col:15> 'int' <IntegralCast>
    |           | | |   | `-ImplicitCastExpr 0x12982ae78 <col:14, col:15> 'unsigned char' <LValueToRValue>
    |           | | |   |   `-UnaryOperator 0x12982adb0 <col:14, col:15> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           | | |   |     `-ImplicitCastExpr 0x12982ad98 <col:15> 'const unsigned char *' <LValueToRValue>
    |           | | |   |       `-DeclRefExpr 0x12982ad78 <col:15> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           | | |   `-ImplicitCastExpr 0x12982aec0 <col:25, col:35> 'int' <IntegralCast>
    |           | | |     `-ImplicitCastExpr 0x12982ae90 <col:25, col:35> 'unsigned char' <LValueToRValue>
    |           | | |       `-UnaryOperator 0x12982ae60 <col:25, col:35> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           | | |         `-ParenExpr 0x12982ae40 <col:26, col:35> 'const unsigned char *'
    |           | | |           `-BinaryOperator 0x12982ae20 <col:27, col:34> 'const unsigned char *' '+'
    |           | | |             |-ImplicitCastExpr 0x12982ae08 <col:27> 'const unsigned char *' <LValueToRValue>
    |           | | |             | `-DeclRefExpr 0x12982adc8 <col:27> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           | | |             `-IntegerLiteral 0x12982ade8 <col:34> 'int' 1
    |           | | `-ParenExpr 0x12982b0f8 <col:41, col:68> 'int'
    |           | |   `-BinaryOperator 0x12982b0d8 <col:42, col:67> 'int' '=='
    |           | |     |-ImplicitCastExpr 0x12982b0a8 <col:42, col:52> 'int' <IntegralCast>
    |           | |     | `-ImplicitCastExpr 0x12982b078 <col:42, col:52> 'unsigned char' <LValueToRValue>
    |           | |     |   `-UnaryOperator 0x12982afb0 <col:42, col:52> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           | |     |     `-ParenExpr 0x12982af90 <col:43, col:52> 'const unsigned char *'
    |           | |     |       `-BinaryOperator 0x12982af70 <col:44, col:51> 'const unsigned char *' '+'
    |           | |     |         |-ImplicitCastExpr 0x12982af58 <col:44> 'const unsigned char *' <LValueToRValue>
    |           | |     |         | `-DeclRefExpr 0x12982af18 <col:44> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           | |     |         `-IntegerLiteral 0x12982af38 <col:51> 'int' 1
    |           | |     `-ImplicitCastExpr 0x12982b0c0 <col:57, col:67> 'int' <IntegralCast>
    |           | |       `-ImplicitCastExpr 0x12982b090 <col:57, col:67> 'unsigned char' <LValueToRValue>
    |           | |         `-UnaryOperator 0x12982b060 <col:57, col:67> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           | |           `-ParenExpr 0x12982b040 <col:58, col:67> 'const unsigned char *'
    |           | |             `-BinaryOperator 0x12982b020 <col:59, col:66> 'const unsigned char *' '+'
    |           | |               |-ImplicitCastExpr 0x12982b008 <col:59> 'const unsigned char *' <LValueToRValue>
    |           | |               | `-DeclRefExpr 0x12982afc8 <col:59> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           | |               `-IntegerLiteral 0x12982afe8 <col:66> 'int' 2
    |           | `-CompoundStmt 0x12982b900 <line:58:11, line:72:11>
    |           |   |-BinaryOperator 0x12982b178 <line:60:13, col:19> 'int' '='
    |           |   | |-DeclRefExpr 0x12982b138 <col:13> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   | `-IntegerLiteral 0x12982b158 <col:19> 'int' 3
    |           |   |-WhileStmt 0x12982b4f0 <line:61:13, line:66:13>
    |           |   | |-RecoveryExpr 0x12982b3c8 <line:61:21, col:72> '<dependent type>' contains-errors lvalue
    |           |   | | |-ParenExpr 0x12982b1f0 <col:21, col:29> '<overloaded function type>' lvalue
    |           |   | | | `-UnresolvedLookupExpr 0x12982b1b0 <col:22> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    |           |   | | `-ParenExpr 0x12982b3a8 <col:45, col:72> 'int'
    |           |   | |   `-BinaryOperator 0x12982b388 <col:46, col:71> 'int' '=='
    |           |   | |     |-ImplicitCastExpr 0x12982b358 <col:46, col:47> 'int' <IntegralCast>
    |           |   | |     | `-ImplicitCastExpr 0x12982b328 <col:46, col:47> 'unsigned char' <LValueToRValue>
    |           |   | |     |   `-UnaryOperator 0x12982b248 <col:46, col:47> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           |   | |     |     `-ImplicitCastExpr 0x12982b230 <col:47> 'const unsigned char *' <LValueToRValue>
    |           |   | |     |       `-DeclRefExpr 0x12982b210 <col:47> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           |   | |     `-ImplicitCastExpr 0x12982b370 <col:57, col:71> 'int' <IntegralCast>
    |           |   | |       `-ImplicitCastExpr 0x12982b340 <col:57, col:71> 'unsigned char' <LValueToRValue>
    |           |   | |         `-UnaryOperator 0x12982b310 <col:57, col:71> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           |   | |           `-ParenExpr 0x12982b2f0 <col:58, col:71> 'const unsigned char *'
    |           |   | |             `-BinaryOperator 0x12982b2d0 <col:59, col:66> 'const unsigned char *' '+'
    |           |   | |               |-ImplicitCastExpr 0x12982b2a0 <col:59> 'const unsigned char *' <LValueToRValue>
    |           |   | |               | `-DeclRefExpr 0x12982b260 <col:59> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           |   | |               `-ImplicitCastExpr 0x12982b2b8 <col:66> 'int' <LValueToRValue>
    |           |   | |                 `-DeclRefExpr 0x12982b280 <col:66> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   | `-CompoundStmt 0x12982b4d0 <line:62:13, line:66:13>
    |           |   |   |-UnaryOperator 0x12982b418 <line:63:15, col:20> 'int' postfix '++'
    |           |   |   | `-DeclRefExpr 0x12982b3f8 <col:15> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   |   `-IfStmt 0x12982b4b0 <line:64:15, line:65:17>
    |           |   |     |-BinaryOperator 0x12982b488 <line:64:19, col:28> 'int' '>='
    |           |   |     | |-ImplicitCastExpr 0x12982b470 <col:19> 'int' <LValueToRValue>
    |           |   |     | | `-DeclRefExpr 0x12982b430 <col:19> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   |     | `-IntegerLiteral 0x12982b450 <col:28> 'int' 127
    |           |   |     `-BreakStmt 0x12982b4a8 <line:65:17>
    |           |   |-CompoundAssignOperator 0x12982b578 <line:67:13, col:16> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |           |   | |-RecoveryExpr 0x12982b530 <col:13> '<dependent type>' contains-errors lvalue
    |           |   | | `-DeclRefExpr 0x12982b510 <col:13> 'int' lvalue Var 0x12980e108 'x' 'int'
    |           |   | `-DeclRefExpr 0x12982b558 <col:16> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   |-BinaryOperator 0x12982b758 <line:68:13, col:48> 'unsigned char' '='
    |           |   | |-UnaryOperator 0x12982b5e0 <col:13, col:15> 'unsigned char' lvalue prefix '*' cannot overflow
    |           |   | | `-UnaryOperator 0x12982b5c8 <col:14, col:15> 'unsigned char *' postfix '++'
    |           |   | |   `-DeclRefExpr 0x12982b5a8 <col:14> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |           |   | `-CStyleCastExpr 0x12982b730 <col:18, col:48> 'unsigned char' <IntegralCast>
    |           |   |   `-ParenExpr 0x12982b710 <col:34, col:48> 'int'
    |           |   |     `-BinaryOperator 0x12982b6b8 <col:35, col:47> 'int' '+'
    |           |   |       |-ParenExpr 0x12982b678 <col:35, col:45> 'int'
    |           |   |       | `-BinaryOperator 0x12982b658 <col:36, col:40> 'int' '-'
    |           |   |       |   |-IntegerLiteral 0x12982b600 <col:36> 'int' 256
    |           |   |       |   `-ImplicitCastExpr 0x12982b640 <col:40> 'int' <LValueToRValue>
    |           |   |       |     `-DeclRefExpr 0x12982b620 <col:40> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   |       `-IntegerLiteral 0x12982b698 <col:47> 'int' 1
    |           |   |-BinaryOperator 0x12982b850 <line:69:13, col:26> 'unsigned char' '='
    |           |   | |-UnaryOperator 0x12982b7b0 <col:13, col:15> 'unsigned char' lvalue prefix '*' cannot overflow
    |           |   | | `-UnaryOperator 0x12982b798 <col:14, col:15> 'unsigned char *' postfix '++'
    |           |   | |   `-DeclRefExpr 0x12982b778 <col:14> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
    |           |   | `-ImplicitCastExpr 0x12982b838 <col:18, col:26> 'unsigned char' <LValueToRValue>
    |           |   |   `-ParenExpr 0x12982b818 <col:18, col:26> 'const unsigned char' lvalue
    |           |   |     `-UnaryOperator 0x12982b800 <col:19, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           |   |       `-ImplicitCastExpr 0x12982b7e8 <col:20> 'const unsigned char *' <LValueToRValue>
    |           |   |         `-DeclRefExpr 0x12982b7c8 <col:20> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           |   |-CompoundAssignOperator 0x12982b8c8 <line:70:13, col:21> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |           |   | |-DeclRefExpr 0x12982b870 <col:13> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           |   | `-ImplicitCastExpr 0x12982b8b0 <col:21> 'int' <LValueToRValue>
    |           |   |   `-DeclRefExpr 0x12982b890 <col:21> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   `-BreakStmt 0x12982b8f8 <line:71:13>
    |           |-BinaryOperator 0x12982b9a8 <line:74:9, col:15> 'int' '='
    |           | |-DeclRefExpr 0x12982b968 <col:9> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           | `-IntegerLiteral 0x12982b988 <col:15> 'int' 0
    |           |-WhileStmt 0x12982c268 <line:75:9, line:82:9>
    |           | |-BinaryOperator 0x12982bee8 <line:75:16, line:76:55> 'int' '||'
    |           | | |-ParenExpr 0x12982bc18 <line:75:16, col:53> 'int'
    |           | | | `-BinaryOperator 0x12982bbf8 <col:17, col:52> 'int' '!='
    |           | | |   |-ImplicitCastExpr 0x12982bbc8 <col:17, col:31> 'int' <IntegralCast>
    |           | | |   | `-ImplicitCastExpr 0x12982bb98 <col:17, col:31> 'unsigned char' <LValueToRValue>
    |           | | |   |   `-UnaryOperator 0x12982ba78 <col:17, col:31> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           | | |   |     `-ParenExpr 0x12982ba58 <col:18, col:31> 'const unsigned char *'
    |           | | |   |       `-BinaryOperator 0x12982ba38 <col:19, col:26> 'const unsigned char *' '+'
    |           | | |   |         |-ImplicitCastExpr 0x12982ba08 <col:19> 'const unsigned char *' <LValueToRValue>
    |           | | |   |         | `-DeclRefExpr 0x12982b9c8 <col:19> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           | | |   |         `-ImplicitCastExpr 0x12982ba20 <col:26> 'int' <LValueToRValue>
    |           | | |   |           `-DeclRefExpr 0x12982b9e8 <col:26> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           | | |   `-ImplicitCastExpr 0x12982bbe0 <col:36, col:52> 'int' <IntegralCast>
    |           | | |     `-ImplicitCastExpr 0x12982bbb0 <col:36, col:52> 'unsigned char' <LValueToRValue>
    |           | | |       `-UnaryOperator 0x12982bb80 <col:36, col:52> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           | | |         `-ParenExpr 0x12982bb60 <col:37, col:52> 'const unsigned char *'
    |           | | |           `-BinaryOperator 0x12982bb40 <col:38, col:51> 'const unsigned char *' '+'
    |           | | |             |-BinaryOperator 0x12982bb00 <col:38, col:45> 'const unsigned char *' '+'
    |           | | |             | |-ImplicitCastExpr 0x12982bad0 <col:38> 'const unsigned char *' <LValueToRValue>
    |           | | |             | | `-DeclRefExpr 0x12982ba90 <col:38> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           | | |             | `-ImplicitCastExpr 0x12982bae8 <col:45> 'int' <LValueToRValue>
    |           | | |             |   `-DeclRefExpr 0x12982bab0 <col:45> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           | | |             `-IntegerLiteral 0x12982bb20 <col:51> 'int' 1
    |           | | `-ParenExpr 0x12982bec8 <line:76:16, col:55> 'int'
    |           | |   `-BinaryOperator 0x12982bea8 <col:17, col:54> 'int' '!='
    |           | |     |-ImplicitCastExpr 0x12982be78 <col:17, col:33> 'int' <IntegralCast>
    |           | |     | `-ImplicitCastExpr 0x12982be48 <col:17, col:33> 'unsigned char' <LValueToRValue>
    |           | |     |   `-UnaryOperator 0x12982bd28 <col:17, col:33> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           | |     |     `-ParenExpr 0x12982bd08 <col:18, col:33> 'const unsigned char *'
    |           | |     |       `-BinaryOperator 0x12982bce8 <col:19, col:32> 'const unsigned char *' '+'
    |           | |     |         |-BinaryOperator 0x12982bca8 <col:19, col:26> 'const unsigned char *' '+'
    |           | |     |         | |-ImplicitCastExpr 0x12982bc78 <col:19> 'const unsigned char *' <LValueToRValue>
    |           | |     |         | | `-DeclRefExpr 0x12982bc38 <col:19> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           | |     |         | `-ImplicitCastExpr 0x12982bc90 <col:26> 'int' <LValueToRValue>
    |           | |     |         |   `-DeclRefExpr 0x12982bc58 <col:26> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           | |     |         `-IntegerLiteral 0x12982bcc8 <col:32> 'int' 1
    |           | |     `-ImplicitCastExpr 0x12982be90 <col:38, col:54> 'int' <IntegralCast>
    |           | |       `-ImplicitCastExpr 0x12982be60 <col:38, col:54> 'unsigned char' <LValueToRValue>
    |           | |         `-UnaryOperator 0x12982be30 <col:38, col:54> 'const unsigned char' lvalue prefix '*' cannot overflow
    |           | |           `-ParenExpr 0x12982be10 <col:39, col:54> 'const unsigned char *'
    |           | |             `-BinaryOperator 0x12982bdf0 <col:40, col:53> 'const unsigned char *' '+'
    |           | |               |-BinaryOperator 0x12982bdb0 <col:40, col:47> 'const unsigned char *' '+'
    |           | |               | |-ImplicitCastExpr 0x12982bd80 <col:40> 'const unsigned char *' <LValueToRValue>
    |           | |               | | `-DeclRefExpr 0x12982bd40 <col:40> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           | |               | `-ImplicitCastExpr 0x12982bd98 <col:47> 'int' <LValueToRValue>
    |           | |               |   `-DeclRefExpr 0x12982bd60 <col:47> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           | |               `-IntegerLiteral 0x12982bdd0 <col:53> 'int' 2
    |           | `-CompoundStmt 0x12982c240 <line:77:9, line:82:9>
    |           |   |-BinaryOperator 0x12982c080 <line:78:11, col:41> 'unsigned char' '='
    |           |   | |-ArraySubscriptExpr 0x12982bfb8 <col:11, col:27> 'unsigned char' lvalue
    |           |   | | |-ImplicitCastExpr 0x12982bfa0 <col:11> 'unsigned char *' <ArrayToPointerDecay>
    |           |   | | | `-DeclRefExpr 0x12982bf08 <col:11> 'unsigned char[128]' lvalue Var 0x12980e2c8 'packbits' 'unsigned char[128]'
    |           |   | | `-BinaryOperator 0x12982bf80 <col:20, col:26> 'int' '+'
    |           |   | |   |-ImplicitCastExpr 0x12982bf68 <col:20> 'int' <LValueToRValue>
    |           |   | |   | `-DeclRefExpr 0x12982bf28 <col:20> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   | |   `-IntegerLiteral 0x12982bf48 <col:26> 'int' 1
    |           |   | `-ImplicitCastExpr 0x12982c068 <col:29, col:41> 'unsigned char' <LValueToRValue>
    |           |   |   `-ArraySubscriptExpr 0x12982c048 <col:29, col:41> 'const unsigned char' lvalue
    |           |   |     |-ImplicitCastExpr 0x12982c018 <col:29> 'const unsigned char *' <LValueToRValue>
    |           |   |     | `-DeclRefExpr 0x12982bfd8 <col:29> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           |   |     `-ImplicitCastExpr 0x12982c030 <col:36> 'int' <LValueToRValue>
    |           |   |       `-DeclRefExpr 0x12982bff8 <col:36> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   |-UnaryOperator 0x12982c0c0 <line:79:11, col:16> 'int' postfix '++'
    |           |   | `-DeclRefExpr 0x12982c0a0 <col:11> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |   `-IfStmt 0x12982c220 <line:80:11, line:81:13>
    |           |     |-RecoveryExpr 0x12982c1e8 <line:80:16, col:58> '<dependent type>' contains-errors lvalue
    |           |     | |-ParenExpr 0x12982c130 <col:16, col:24> '<overloaded function type>' lvalue
    |           |     | | `-UnresolvedLookupExpr 0x12982c0f0 <col:17> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    |           |     | `-ParenExpr 0x12982c1c8 <col:45, col:58> 'int'
    |           |     |   `-BinaryOperator 0x12982c1a8 <col:46, col:55> 'int' '>='
    |           |     |     |-ImplicitCastExpr 0x12982c190 <col:46> 'int' <LValueToRValue>
    |           |     |     | `-DeclRefExpr 0x12982c150 <col:46> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |     |     `-IntegerLiteral 0x12982c170 <col:55> 'int' 127
    |           |     `-BreakStmt 0x12982c218 <line:81:13>
    |           |-CompoundAssignOperator 0x12982c2f0 <line:83:9, col:12> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |           | |-RecoveryExpr 0x12982c2a8 <col:9> '<dependent type>' contains-errors lvalue
    |           | | `-DeclRefExpr 0x12982c288 <col:9> 'int' lvalue Var 0x12980e108 'x' 'int'
    |           | `-DeclRefExpr 0x12982c2d0 <col:12> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |-BinaryOperator 0x12982c468 <line:84:9, col:43> 'unsigned char' '='
    |           | |-UnaryOperator 0x12982c358 <col:9, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
    |           | | `-ImplicitCastExpr 0x12982c340 <col:10> 'unsigned char *' <ArrayToPointerDecay>
    |           | |   `-DeclRefExpr 0x12982c320 <col:10> 'unsigned char[128]' lvalue Var 0x12980e2c8 'packbits' 'unsigned char[128]'
    |           | `-CStyleCastExpr 0x12982c440 <col:19, col:43> 'unsigned char' <IntegralCast>
    |           |   `-ParenExpr 0x12982c420 <col:35, col:43> 'int'
    |           |     `-BinaryOperator 0x12982c3c8 <col:36, col:42> 'int' '-'
    |           |       |-ImplicitCastExpr 0x12982c3b0 <col:36> 'int' <LValueToRValue>
    |           |       | `-DeclRefExpr 0x12982c370 <col:36> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           |       `-IntegerLiteral 0x12982c390 <col:42> 'int' 1
    |           |-CompoundAssignOperator 0x12982c700 <line:87:9, col:17> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |           | |-DeclRefExpr 0x12982c6a8 <col:9> 'const unsigned char *' lvalue ParmVar 0x12980dda8 'pixels' 'const unsigned char *'
    |           | `-ImplicitCastExpr 0x12982c6e8 <col:17> 'int' <LValueToRValue>
    |           |   `-DeclRefExpr 0x12982c6c8 <col:17> 'int' lvalue Var 0x12980e070 'count' 'int'
    |           `-BreakStmt 0x12982c730 <line:88:9>
    `-BinaryOperator 0x12982c8a8 <line:92:3, col:8> 'unsigned char' '='
      |-UnaryOperator 0x12982c858 <col:3, col:5> 'unsigned char' lvalue prefix '*' cannot overflow
      | `-UnaryOperator 0x12982c840 <col:4, col:5> 'unsigned char *' postfix '++'
      |   `-DeclRefExpr 0x12982c820 <col:4> 'unsigned char *' lvalue Var 0x12980e1a0 'q' 'unsigned char *'
      `-ImplicitCastExpr 0x12982c890 <col:8> 'unsigned char' <IntegralCast>
        `-IntegerLiteral 0x12982c870 <col:8> 'int' 128
