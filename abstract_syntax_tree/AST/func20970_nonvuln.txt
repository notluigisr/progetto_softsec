TranslationUnitDecl 0x148828008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x148828eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1488285d0 '__int128'
|-TypedefDecl 0x148828f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1488285f0 'unsigned __int128'
|-TypedefDecl 0x14980be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14980bc00 'struct __NSConstantString_tag'
|   `-Record 0x148828f80 '__NSConstantString_tag'
|-TypedefDecl 0x14980be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148828790 '__SVInt8_t'
|-TypedefDecl 0x14980bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1488287b0 '__SVInt16_t'
|-TypedefDecl 0x14980bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1488287d0 '__SVInt32_t'
|-TypedefDecl 0x14980bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1488287f0 '__SVInt64_t'
|-TypedefDecl 0x14980c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148828810 '__SVUint8_t'
|-TypedefDecl 0x14980c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148828830 '__SVUint16_t'
|-TypedefDecl 0x14980c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148828850 '__SVUint32_t'
|-TypedefDecl 0x14980c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148828870 '__SVUint64_t'
|-TypedefDecl 0x14980c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148828890 '__SVFloat16_t'
|-TypedefDecl 0x14980c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1488288b0 '__SVFloat32_t'
|-TypedefDecl 0x14980c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1488288d0 '__SVFloat64_t'
|-TypedefDecl 0x14980c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1488288f0 '__SVBfloat16_t'
|-TypedefDecl 0x14980c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148828910 '__clang_svint8x2_t'
|-TypedefDecl 0x14980c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148828930 '__clang_svint16x2_t'
|-TypedefDecl 0x14980c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148828950 '__clang_svint32x2_t'
|-TypedefDecl 0x14980c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148828970 '__clang_svint64x2_t'
|-TypedefDecl 0x14980c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148828990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14980c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1488289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14980c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1488289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14980c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1488289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14980c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148828a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14980c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148828a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14980c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148828a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14980c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148828a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14980c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148828a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14980c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x148828ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14980c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x148828ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14980c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x148828af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14980c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148828b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14980ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148828b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14980cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148828b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14980cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148828b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14980cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148828b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14980d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x148828bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14980d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x148828bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14980d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x148828bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14980d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148828c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14980d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148828c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14980d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148828c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14980d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148828c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14980d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148828c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14980d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x148828cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14980d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x148828cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14980d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x148828cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14980d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148828d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14980d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148828d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14980d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148828d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14980d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148828d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14980da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148828d90 '__SVBool_t'
|-TypedefDecl 0x14980da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x148828db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14980dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x148828dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14980db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x148828df0 '__SVCount_t'
|-TypedefDecl 0x14980dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1488280b0 'char'
|-TypedefDecl 0x14980dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1488280b0 'char'
`-FunctionDecl 0x14980de90 <dataset_diviso_filec/func20970_nonvuln.c:1:1, line:11:1> line:1:13 hexToDigit 'void (unsigned int *, const unsigned char *)' static
  |-ParmVarDecl 0x14980dd08 <col:24, col:39> col:39 used val 'unsigned int *'
  |-ParmVarDecl 0x14980ddb8 <col:44, col:66> col:66 used hex 'const unsigned char *'
  `-CompoundStmt 0x149826bc8 <line:2:1, line:11:1>
    |-DeclStmt 0x14980e010 <line:3:5, col:19>
    | `-VarDecl 0x14980dfa8 <col:5, col:18> col:18 used i 'unsigned int'
    `-ForStmt 0x149826b90 <line:4:5, line:10:5>
      |-BinaryOperator 0x14980e080 <line:4:10, col:12> 'unsigned int' '='
      | |-DeclRefExpr 0x14980e028 <col:10> 'unsigned int' lvalue Var 0x14980dfa8 'i' 'unsigned int'
      | `-ImplicitCastExpr 0x14980e068 <col:12> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x14980e048 <col:12> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14980e110 <col:14, col:16> 'int' '<'
      | |-ImplicitCastExpr 0x14980e0e0 <col:14> 'unsigned int' <LValueToRValue>
      | | `-DeclRefExpr 0x14980e0a0 <col:14> 'unsigned int' lvalue Var 0x14980dfa8 'i' 'unsigned int'
      | `-ImplicitCastExpr 0x14980e0f8 <col:16> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x14980e0c0 <col:16> 'int' 4
      |-UnaryOperator 0x14980e150 <col:18, col:19> 'unsigned int' postfix '++'
      | `-DeclRefExpr 0x14980e130 <col:18> 'unsigned int' lvalue Var 0x14980dfa8 'i' 'unsigned int'
      `-CompoundStmt 0x149826b58 <col:23, line:10:5>
        |-DeclStmt 0x14980e290 <line:5:9, col:33>
        | `-VarDecl 0x14980e180 <col:9, col:32> col:23 used c 'unsigned char' cinit
        |   `-ImplicitCastExpr 0x14980e278 <col:27, col:32> 'unsigned char' <LValueToRValue>
        |     `-ArraySubscriptExpr 0x14980e258 <col:27, col:32> 'const unsigned char' lvalue
        |       |-ImplicitCastExpr 0x14980e228 <col:27> 'const unsigned char *' <LValueToRValue>
        |       | `-DeclRefExpr 0x14980e1e8 <col:27> 'const unsigned char *' lvalue ParmVar 0x14980ddb8 'hex' 'const unsigned char *'
        |       `-ImplicitCastExpr 0x14980e240 <col:31> 'unsigned int' <LValueToRValue>
        |         `-DeclRefExpr 0x14980e208 <col:31> 'unsigned int' lvalue Var 0x14980dfa8 'i' 'unsigned int'
        |-IfStmt 0x149826698 <line:6:9, col:41>
        | |-BinaryOperator 0x14980e310 <col:13, col:18> 'int' '>='
        | | |-ImplicitCastExpr 0x14980e2f8 <col:13> 'int' <IntegralCast>
        | | | `-ImplicitCastExpr 0x14980e2e0 <col:13> 'unsigned char' <LValueToRValue>
        | | |   `-DeclRefExpr 0x14980e2a8 <col:13> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'
        | | `-CharacterLiteral 0x14980e2c8 <col:18> 'int' 65
        | `-BinaryOperator 0x149826678 <col:23, col:41> 'unsigned char' '='
        |   |-DeclRefExpr 0x14980e330 <col:23> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'
        |   `-ImplicitCastExpr 0x149826660 <col:27, col:41> 'unsigned char' <IntegralCast>
        |     `-BinaryOperator 0x149826640 <col:27, col:41> 'int' '-'
        |       |-ParenExpr 0x149826600 <col:27, col:37> 'int'
        |       | `-BinaryOperator 0x14980e3d8 <col:28, col:33> 'int' '&'
        |       |   |-ImplicitCastExpr 0x14980e3c0 <col:28> 'int' <IntegralCast>
        |       |   | `-ImplicitCastExpr 0x14980e3a8 <col:28> 'unsigned char' <LValueToRValue>
        |       |   |   `-DeclRefExpr 0x14980e350 <col:28> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'
        |       |   `-UnaryOperator 0x14980e390 <col:32, col:33> 'int' prefix '~' cannot overflow
        |       |     `-IntegerLiteral 0x14980e370 <col:33> 'int' 32
        |       `-IntegerLiteral 0x149826620 <col:41> 'int' 7
        |-CompoundAssignOperator 0x1498266f0 <line:7:9, col:14> 'unsigned char' '-=' ComputeLHSTy='int' ComputeResultTy='int'
        | |-DeclRefExpr 0x1498266b8 <col:9> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'
        | `-CharacterLiteral 0x1498266d8 <col:14> 'int' 48
        |-CallExpr 0x149826988 <line:8:9, col:27> 'int'
        | |-ImplicitCastExpr 0x149826970 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x149826850 <col:9> 'int ()' Function 0x149826798 'assert' 'int ()'
        | `-UnaryOperator 0x149826920 <col:16, col:26> 'int' prefix '!' cannot overflow
        |   `-ParenExpr 0x149826900 <col:17, col:26> 'int'
        |     `-BinaryOperator 0x1498268e0 <col:18, col:22> 'int' '&'
        |       |-ImplicitCastExpr 0x1498268c8 <col:18> 'int' <IntegralCast>
        |       | `-ImplicitCastExpr 0x1498268b0 <col:18> 'unsigned char' <LValueToRValue>
        |       |   `-DeclRefExpr 0x149826870 <col:18> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'
        |       `-IntegerLiteral 0x149826890 <col:22> 'int' 240
        `-BinaryOperator 0x149826b38 <line:9:9, col:30> 'unsigned int' '='
          |-UnaryOperator 0x1498269e8 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
          | `-ImplicitCastExpr 0x1498269d0 <col:10> 'unsigned int *' <LValueToRValue>
          |   `-DeclRefExpr 0x1498269b0 <col:10> 'unsigned int *' lvalue ParmVar 0x14980dd08 'val' 'unsigned int *'
          `-BinaryOperator 0x149826b18 <col:16, col:30> 'unsigned int' '|'
            |-ParenExpr 0x149826aa8 <col:16, col:26> 'unsigned int'
            | `-BinaryOperator 0x149826a88 <col:17, col:25> 'unsigned int' '<<'
            |   |-ImplicitCastExpr 0x149826a70 <col:17, col:18> 'unsigned int' <LValueToRValue>
            |   | `-UnaryOperator 0x149826a38 <col:17, col:18> 'unsigned int' lvalue prefix '*' cannot overflow
            |   |   `-ImplicitCastExpr 0x149826a20 <col:18> 'unsigned int *' <LValueToRValue>
            |   |     `-DeclRefExpr 0x149826a00 <col:18> 'unsigned int *' lvalue ParmVar 0x14980dd08 'val' 'unsigned int *'
            |   `-IntegerLiteral 0x149826a50 <col:25> 'int' 4
            `-ImplicitCastExpr 0x149826b00 <col:30> 'unsigned int' <IntegralCast>
              `-ImplicitCastExpr 0x149826ae8 <col:30> 'unsigned char' <LValueToRValue>
                `-DeclRefExpr 0x149826ac8 <col:30> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'
