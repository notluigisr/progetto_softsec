TranslationUnitDecl 0x152055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1520564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152055bd0 '__int128'
|-TypedefDecl 0x152056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152055bf0 'unsigned __int128'
|-TypedefDecl 0x152126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x152126800 'struct __NSConstantString_tag'
|   `-Record 0x152056580 '__NSConstantString_tag'
|-TypedefDecl 0x152126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152055d90 '__SVInt8_t'
|-TypedefDecl 0x152126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152055db0 '__SVInt16_t'
|-TypedefDecl 0x152126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152055dd0 '__SVInt32_t'
|-TypedefDecl 0x152126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152055df0 '__SVInt64_t'
|-TypedefDecl 0x152126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152055e10 '__SVUint8_t'
|-TypedefDecl 0x152126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152055e30 '__SVUint16_t'
|-TypedefDecl 0x152126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152055e50 '__SVUint32_t'
|-TypedefDecl 0x152126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152055e70 '__SVUint64_t'
|-TypedefDecl 0x152126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152055e90 '__SVFloat16_t'
|-TypedefDecl 0x152126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152055eb0 '__SVFloat32_t'
|-TypedefDecl 0x152126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152055ed0 '__SVFloat64_t'
|-TypedefDecl 0x152126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x152126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x152126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x152127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1521270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x152127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x152127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1521271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x152127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1521272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x152127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x152127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1521273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x152127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1521274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1520560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x152127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1520560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x152127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1520560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1521275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x152127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1521276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x152127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x152127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x152128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1520561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x152128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1520561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1521280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1520561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x152128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1521281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152056230 '__clang_svint16x4_t'
|-TypedefDecl 0x152128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152056250 '__clang_svint32x4_t'
|-TypedefDecl 0x152128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1521282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x152128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1520562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1521283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1520562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x152128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1520562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x152128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1521284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x152128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1521285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x152128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152056390 '__SVBool_t'
|-TypedefDecl 0x152128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1520563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1521286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1520563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x152128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1520563f0 '__SVCount_t'
|-TypedefDecl 0x1521287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1521287b0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-TypedefDecl 0x152128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1521287b0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-FunctionDecl 0x152142158 <dataset_diviso_filec/func2561_nonvuln.c:1:1, line:60:1> line:1:1 invalid fstring_compile_expr 'int (const char *, const char *, struct compiling *, const int *)'
| |-ParmVarDecl 0x1521288d8 <col:22, col:34> col:34 used expr_start 'const char *'
| |-ParmVarDecl 0x152128958 <col:46, col:58> col:58 used expr_end 'const char *'
| |-ParmVarDecl 0x152128f48 <line:2:22, col:40> col:40 used c 'struct compiling *'
| |-ParmVarDecl 0x152142000 <col:43, col:55> col:55 invalid n 'const int *'
| `-CompoundStmt 0x152144d88 <line:4:1, line:60:1>
|   |-DeclStmt 0x1521422b8 <line:8:5, col:14>
|   | `-VarDecl 0x152142250 <col:5, col:11> col:11 used str 'char *'
|   |-DeclStmt 0x152142350 <line:10:5, col:18>
|   | `-VarDecl 0x1521422e8 <col:5, col:17> col:17 used s 'const char *'
|   |-CallExpr 0x1521425b8 <line:12:5, col:34> 'int'
|   | |-ImplicitCastExpr 0x1521425a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1521424c0 <col:5> 'int ()' Function 0x152142408 'assert' 'int ()'
|   | `-BinaryOperator 0x152142550 <col:12, col:24> 'int' '>='
|   |   |-ImplicitCastExpr 0x152142520 <col:12> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1521424e0 <col:12> 'const char *' lvalue ParmVar 0x152128958 'expr_end' 'const char *'
|   |   `-ImplicitCastExpr 0x152142538 <col:24> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x152142500 <col:24> 'const char *' lvalue ParmVar 0x1521288d8 'expr_start' 'const char *'
|   |-CallExpr 0x152142730 <line:13:5, col:34> 'int'
|   | |-ImplicitCastExpr 0x152142718 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1521425e0 <col:5> 'int ()' Function 0x152142408 'assert' 'int ()'
|   | `-BinaryOperator 0x1521426f8 <col:12, col:31> 'int' '=='
|   |   |-ImplicitCastExpr 0x1521426e0 <col:12, col:26> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x1521426c8 <col:12, col:26> 'char' <LValueToRValue>
|   |   |   `-UnaryOperator 0x152142698 <col:12, col:26> 'const char' lvalue prefix '*' cannot overflow
|   |   |     `-ParenExpr 0x152142678 <col:13, col:26> 'const char *'
|   |   |       `-BinaryOperator 0x152142658 <col:14, col:25> 'const char *' '-'
|   |   |         |-ImplicitCastExpr 0x152142640 <col:14> 'const char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x152142600 <col:14> 'const char *' lvalue ParmVar 0x1521288d8 'expr_start' 'const char *'
|   |   |         `-IntegerLiteral 0x152142620 <col:25> 'int' 1
|   |   `-CharacterLiteral 0x1521426b0 <col:31> 'int' 123
|   |-CallExpr 0x1521429f8 <line:14:5, col:68> 'int'
|   | |-ImplicitCastExpr 0x1521429e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x152142758 <col:5> 'int ()' Function 0x152142408 'assert' 'int ()'
|   | `-BinaryOperator 0x1521429c0 <col:12, col:65> 'int' '||'
|   |   |-BinaryOperator 0x1521428e8 <col:12, col:45> 'int' '||'
|   |   | |-BinaryOperator 0x152142810 <col:12, col:25> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1521427f8 <col:12, col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1521427e0 <col:12, col:13> 'char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x1521427b0 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x152142798 <col:13> 'const char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x152142778 <col:13> 'const char *' lvalue ParmVar 0x152128958 'expr_end' 'const char *'
|   |   | | `-CharacterLiteral 0x1521427c8 <col:25> 'int' 125
|   |   | `-BinaryOperator 0x1521428c8 <col:32, col:45> 'int' '=='
|   |   |   |-ImplicitCastExpr 0x1521428b0 <col:32, col:33> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x152142898 <col:32, col:33> 'char' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x152142868 <col:32, col:33> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |     `-ImplicitCastExpr 0x152142850 <col:33> 'const char *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x152142830 <col:33> 'const char *' lvalue ParmVar 0x152128958 'expr_end' 'const char *'
|   |   |   `-CharacterLiteral 0x152142880 <col:45> 'int' 33
|   |   `-BinaryOperator 0x1521429a0 <col:52, col:65> 'int' '=='
|   |     |-ImplicitCastExpr 0x152142988 <col:52, col:53> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x152142970 <col:52, col:53> 'char' <LValueToRValue>
|   |     |   `-UnaryOperator 0x152142940 <col:52, col:53> 'const char' lvalue prefix '*' cannot overflow
|   |     |     `-ImplicitCastExpr 0x152142928 <col:53> 'const char *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x152142908 <col:53> 'const char *' lvalue ParmVar 0x152128958 'expr_end' 'const char *'
|   |     `-CharacterLiteral 0x152142958 <col:65> 'int' 58
|   |-ForStmt 0x152142f70 <line:17:5, line:23:5>
|   | |-BinaryOperator 0x152142a78 <line:17:10, col:14> 'const char *' '='
|   | | |-DeclRefExpr 0x152142a20 <col:10> 'const char *' lvalue Var 0x1521422e8 's' 'const char *'
|   | | `-ImplicitCastExpr 0x152142a60 <col:14> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152142a40 <col:14> 'const char *' lvalue ParmVar 0x1521288d8 'expr_start' 'const char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x152142b08 <col:26, col:31> 'int' '!='
|   | | |-ImplicitCastExpr 0x152142ad8 <col:26> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x152142a98 <col:26> 'const char *' lvalue Var 0x1521422e8 's' 'const char *'
|   | | `-ImplicitCastExpr 0x152142af0 <col:31> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152142ab8 <col:31> 'const char *' lvalue ParmVar 0x152128958 'expr_end' 'const char *'
|   | |-UnaryOperator 0x152142b48 <col:41, col:42> 'const char *' postfix '++'
|   | | `-DeclRefExpr 0x152142b28 <col:41> 'const char *' lvalue Var 0x1521422e8 's' 'const char *'
|   | `-CompoundStmt 0x152142f50 <col:46, line:23:5>
|   |   |-DeclStmt 0x152142c40 <line:18:9, col:20>
|   |   | `-VarDecl 0x152142b70 <col:9, col:19> col:14 used c 'char' cinit
|   |   |   `-ImplicitCastExpr 0x152142c28 <col:18, col:19> 'char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x152142c10 <col:18, col:19> 'const char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x152142bf8 <col:19> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x152142bd8 <col:19> 'const char *' lvalue Var 0x1521422e8 's' 'const char *'
|   |   `-IfStmt 0x152142f30 <line:20:9, line:22:9>
|   |     |-UnaryOperator 0x152142ef8 <line:20:13, col:62> 'int' prefix '!' cannot overflow
|   |     | `-ParenExpr 0x152142ed8 <col:14, col:62> 'int'
|   |     |   `-BinaryOperator 0x152142eb8 <col:15, col:58> 'int' '||'
|   |     |     |-BinaryOperator 0x152142e10 <col:15, col:45> 'int' '||'
|   |     |     | |-BinaryOperator 0x152142d68 <col:15, col:32> 'int' '||'
|   |     |     | | |-BinaryOperator 0x152142cc0 <col:15, col:20> 'int' '=='
|   |     |     | | | |-ImplicitCastExpr 0x152142ca8 <col:15> 'int' <IntegralCast>
|   |     |     | | | | `-ImplicitCastExpr 0x152142c90 <col:15> 'char' <LValueToRValue>
|   |     |     | | | |   `-DeclRefExpr 0x152142c58 <col:15> 'char' lvalue Var 0x152142b70 'c' 'char'
|   |     |     | | | `-CharacterLiteral 0x152142c78 <col:20> 'int' 32
|   |     |     | | `-BinaryOperator 0x152142d48 <col:27, col:32> 'int' '=='
|   |     |     | |   |-ImplicitCastExpr 0x152142d30 <col:27> 'int' <IntegralCast>
|   |     |     | |   | `-ImplicitCastExpr 0x152142d18 <col:27> 'char' <LValueToRValue>
|   |     |     | |   |   `-DeclRefExpr 0x152142ce0 <col:27> 'char' lvalue Var 0x152142b70 'c' 'char'
|   |     |     | |   `-CharacterLiteral 0x152142d00 <col:32> 'int' 9
|   |     |     | `-BinaryOperator 0x152142df0 <col:40, col:45> 'int' '=='
|   |     |     |   |-ImplicitCastExpr 0x152142dd8 <col:40> 'int' <IntegralCast>
|   |     |     |   | `-ImplicitCastExpr 0x152142dc0 <col:40> 'char' <LValueToRValue>
|   |     |     |   |   `-DeclRefExpr 0x152142d88 <col:40> 'char' lvalue Var 0x152142b70 'c' 'char'
|   |     |     |   `-CharacterLiteral 0x152142da8 <col:45> 'int' 10
|   |     |     `-BinaryOperator 0x152142e98 <col:53, col:58> 'int' '=='
|   |     |       |-ImplicitCastExpr 0x152142e80 <col:53> 'int' <IntegralCast>
|   |     |       | `-ImplicitCastExpr 0x152142e68 <col:53> 'char' <LValueToRValue>
|   |     |       |   `-DeclRefExpr 0x152142e30 <col:53> 'char' lvalue Var 0x152142b70 'c' 'char'
|   |     |       `-CharacterLiteral 0x152142e50 <col:58> 'int' 12
|   |     `-CompoundStmt 0x152142f18 <col:65, line:22:9>
|   |       `-BreakStmt 0x152142f10 <line:21:13>
|   |-IfStmt 0x152143280 <line:24:5, line:27:5>
|   | |-BinaryOperator 0x152143018 <line:24:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x152142fe8 <col:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x152142fa8 <col:9> 'const char *' lvalue Var 0x1521422e8 's' 'const char *'
|   | | `-ImplicitCastExpr 0x152143000 <col:14> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152142fc8 <col:14> 'const char *' lvalue ParmVar 0x152128958 'expr_end' 'const char *'
|   | `-CompoundStmt 0x152143260 <col:24, line:27:5>
|   |   |-CallExpr 0x1521431e0 <line:25:9, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x152143118 <col:9> 'int ()' Function 0x152143060 'ast_error' 'int ()'
|   |   | |-DeclRefExpr 0x152143138 <col:19> 'struct compiling *' lvalue ParmVar 0x152128f48 'c' 'struct compiling *'
|   |   | |-RecoveryExpr 0x152143158 <col:22> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x1521431c0 <col:25> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x152143250 <line:26:9, col:16>
|   |     `-RecoveryExpr 0x152143230 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x152143558 <line:31:5, col:34> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x152143330 <col:5> 'char *' lvalue Var 0x152142250 'str' 'char *'
|   | `-CallExpr 0x152143530 <col:11, col:34> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x152143430 <col:11> 'int ()' Function 0x152143378 'PyMem_RawMalloc' 'int ()'
|   |   `-BinaryOperator 0x152143510 <col:27, col:33> '<dependent type>' contains-errors '+'
|   |     |-RecoveryExpr 0x1521434f0 <col:27> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x152143468 <col:33> 'int' 3
|   |-IfStmt 0x1521437b0 <line:32:5, line:35:5>
|   | |-BinaryOperator 0x1521435f0 <line:32:9, col:16> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x152143578 <col:9> 'char *' lvalue Var 0x152142250 'str' 'char *'
|   | | `-RecoveryExpr 0x1521435d0 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x152143790 <col:22, line:35:5>
|   |   |-CallExpr 0x152143728 <line:33:9, col:24> 'int'
|   |   | `-ImplicitCastExpr 0x152143710 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x1521436f0 <col:9> 'int ()' Function 0x152143638 'PyErr_NoMemory' 'int ()'
|   |   `-ReturnStmt 0x152143780 <line:34:9, col:16>
|   |     `-RecoveryExpr 0x152143760 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x152143878 <line:37:5, col:14> 'char' '='
|   | |-ArraySubscriptExpr 0x152143828 <col:5, col:10> 'char' lvalue
|   | | |-ImplicitCastExpr 0x152143810 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1521437d0 <col:5> 'char *' lvalue Var 0x152142250 'str' 'char *'
|   | | `-IntegerLiteral 0x1521437f0 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x152143860 <col:14> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x152143848 <col:14> 'int' 40
|   |-CallExpr 0x152143d60 <line:38:5, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x152143b68 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x152143918 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-BinaryOperator 0x152143cf0 <col:12, col:16> 'char *' '+'
|   | | |-ImplicitCastExpr 0x152143cd8 <col:12> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x152143b88 <col:12> 'char *' lvalue Var 0x152142250 'str' 'char *'
|   | | `-IntegerLiteral 0x152143ba8 <col:16> 'int' 1
|   | |-DeclRefExpr 0x152143c00 <col:19> 'const char *' lvalue ParmVar 0x1521288d8 'expr_start' 'const char *'
|   | `-RecoveryExpr 0x152143d10 <col:31> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1521447d0 <line:46:5, line:49:5>
|   | |-RecoveryExpr 0x152144620 <line:46:9, col:10> '_Bool' contains-errors
|   | `-CompoundStmt 0x1521447b8 <col:17, line:49:5>
|   |   `-CallExpr 0x152144778 <line:47:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x152144760 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x152144720 <col:9> 'int ()' Function 0x152144668 'PyMem_RawFree' 'int ()'
|   |     `-ImplicitCastExpr 0x1521447a0 <col:23> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x152144740 <col:23> 'char *' lvalue Var 0x152142250 'str' 'char *'
|   |-BinaryOperator 0x152144898 <line:51:5, col:14> 'char' '='
|   | |-ArraySubscriptExpr 0x152144848 <col:5, col:10> 'char' lvalue
|   | | |-ImplicitCastExpr 0x152144830 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1521447f0 <col:5> 'char *' lvalue Var 0x152142250 'str' 'char *'
|   | | `-IntegerLiteral 0x152144810 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x152144880 <col:14> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x152144868 <col:14> 'int' 123
|   `-CallExpr 0x152144c28 <line:55:5, col:22> 'int'
|     |-ImplicitCastExpr 0x152144c10 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x152144bd0 <col:5> 'int ()' Function 0x152144668 'PyMem_RawFree' 'int ()'
|     `-ImplicitCastExpr 0x152144c50 <col:19> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x152144bf0 <col:19> 'char *' lvalue Var 0x152142250 'str' 'char *'
`-FunctionDecl 0x152143918 <line:38:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x152143a18 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x152143a80 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x152143ae8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1521439c0 <<invalid sloc>> Implicit 882
