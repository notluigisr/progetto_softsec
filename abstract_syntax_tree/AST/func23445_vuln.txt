TranslationUnitDecl 0x123855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1238564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123855bd0 '__int128'
|-TypedefDecl 0x123856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123855bf0 'unsigned __int128'
|-TypedefDecl 0x123926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x123926000 'struct __NSConstantString_tag'
|   `-Record 0x123856580 '__NSConstantString_tag'
|-TypedefDecl 0x123926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123855d90 '__SVInt8_t'
|-TypedefDecl 0x123926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123855db0 '__SVInt16_t'
|-TypedefDecl 0x123926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123855dd0 '__SVInt32_t'
|-TypedefDecl 0x1239263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123855df0 '__SVInt64_t'
|-TypedefDecl 0x123926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123855e10 '__SVUint8_t'
|-TypedefDecl 0x1239264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123855e30 '__SVUint16_t'
|-TypedefDecl 0x123926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123855e50 '__SVUint32_t'
|-TypedefDecl 0x123926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123855e70 '__SVUint64_t'
|-TypedefDecl 0x1239265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123855e90 '__SVFloat16_t'
|-TypedefDecl 0x123926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1239266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123855ed0 '__SVFloat64_t'
|-TypedefDecl 0x123926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x123926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1239267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x123926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1239268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x123926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x123926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1239269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x123926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x123926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x123926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x123926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x123926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x123926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123856090 '__clang_svint8x3_t'
|-TypedefDecl 0x123926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1238560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x123926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1238560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x123926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1238560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x123926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x123926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x123926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x123926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x123926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1238561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1238561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1239278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1238561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1239279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123856230 '__clang_svint16x4_t'
|-TypedefDecl 0x123927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123856250 '__clang_svint32x4_t'
|-TypedefDecl 0x123927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123856270 '__clang_svint64x4_t'
|-TypedefDecl 0x123927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x123927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1238562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x123927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1238562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1238562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x123927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x123927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123856390 '__SVBool_t'
|-TypedefDecl 0x123927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1238563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x123927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1238563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x123927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1238563f0 '__SVCount_t'
|-TypedefDecl 0x123927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x123927fb0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-TypedefDecl 0x123928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x123927fb0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-FunctionDecl 0x123940a00 <dataset_diviso_filec/func23445_vuln.c:1:1, line:38:1> line:1:6 warnf 'void (struct GlobalConfig *, const char *, ...)'
| |-ParmVarDecl 0x123928648 <col:12, col:33> col:33 used config 'struct GlobalConfig *'
| |-ParmVarDecl 0x1239286c8 <col:41, col:53> col:53 used fmt 'const char *'
| `-CompoundStmt 0x123944f40 <line:2:1, line:38:1>
|   `-IfStmt 0x123944f20 <line:3:3, line:37:3>
|     |-UnaryOperator 0x123940b78 <line:3:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x123940b60 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>
|     |   `-RecoveryExpr 0x123940b38 <col:7, col:15> '<dependent type>' contains-errors lvalue
|     |     `-DeclRefExpr 0x123940b00 <col:7> 'struct GlobalConfig *' lvalue ParmVar 0x123928648 'config' 'struct GlobalConfig *'
|     `-CompoundStmt 0x123944ed0 <col:21, line:37:3>
|       |-DeclStmt 0x123940c28 <line:5:5, col:12>
|       | `-VarDecl 0x123940bc0 <col:5, col:9> col:9 used len 'int'
|       |-DeclStmt 0x123940cc0 <line:6:5, col:14>
|       | `-VarDecl 0x123940c58 <col:5, col:11> col:11 used ptr 'char *'
|       |-DeclStmt 0x123940de8 <line:7:5, col:27>
|       | `-VarDecl 0x123940d80 <col:5, col:26> col:10 used print_buffer 'char[256]'
|       |-CallExpr 0x123941120 <line:9:5, col:21> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x123941078 <col:5> 'void (__builtin_va_list &, ...)' Function 0x123940ee0 'va_start' 'void (__builtin_va_list &, ...)'
|       | |-RecoveryExpr 0x123941100 <col:14> '<dependent type>' contains-errors lvalue
|       | `-DeclRefExpr 0x1239410b0 <col:18> 'const char *' lvalue ParmVar 0x1239286c8 'fmt' 'const char *'
|       |-BinaryOperator 0x123941730 <line:10:5, col:64> 'int' contains-errors '='
|       | |-DeclRefExpr 0x123941150 <col:5> 'int' lvalue Var 0x123940bc0 'len' 'int'
|       | `-CallExpr 0x1239416f0 <col:11, col:64> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x123941508 <col:11> 'int (char *, unsigned long, const char *, __builtin_va_list)' Function 0x123941210 'vsnprintf' 'int (char *, unsigned long, const char *, __builtin_va_list)'
|       |   |-DeclRefExpr 0x123941528 <col:21> 'char[256]' lvalue Var 0x123940d80 'print_buffer' 'char[256]'
|       |   |-UnaryExprOrTypeTraitExpr 0x123941588 <col:35, col:54> 'unsigned long' sizeof
|       |   | `-ParenExpr 0x123941568 <col:41, col:54> 'char[256]' lvalue
|       |   |   `-DeclRefExpr 0x123941548 <col:42> 'char[256]' lvalue Var 0x123940d80 'print_buffer' 'char[256]' non_odr_use_unevaluated
|       |   |-DeclRefExpr 0x1239415a8 <col:57> 'const char *' lvalue ParmVar 0x1239286c8 'fmt' 'const char *'
|       |   `-RecoveryExpr 0x123941688 <col:62> '<dependent type>' contains-errors lvalue
|       |-CallExpr 0x123942e00 <line:11:5, col:14> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x123941960 <col:5> 'void (__builtin_va_list &)' Function 0x1239417c8 'va_end' 'void (__builtin_va_list &)'
|       | `-RecoveryExpr 0x1239419c0 <col:12> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x123942e80 <line:13:5, col:11> 'char *' '='
|       | |-DeclRefExpr 0x123942e28 <col:5> 'char *' lvalue Var 0x123940c58 'ptr' 'char *'
|       | `-ImplicitCastExpr 0x123942e68 <col:11> 'char *' <ArrayToPointerDecay>
|       |   `-DeclRefExpr 0x123942e48 <col:11> 'char[256]' lvalue Var 0x123940d80 'print_buffer' 'char[256]'
|       `-WhileStmt 0x123944eb0 <line:14:5, line:36:5>
|         |-BinaryOperator 0x123942ef8 <line:14:11, col:17> 'int' '>'
|         | |-ImplicitCastExpr 0x123942ee0 <col:11> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x123942ea0 <col:11> 'int' lvalue Var 0x123940bc0 'len' 'int'
|         | `-IntegerLiteral 0x123942ec0 <col:17> 'int' 0
|         `-CompoundStmt 0x123944e90 <col:20, line:36:5>
|           |-CallExpr 0x123943118 <line:15:7, col:40> '<dependent type>' contains-errors
|           | |-DeclRefExpr 0x123943030 <col:7> 'int ()' Function 0x123942f78 'fputs' 'int ()'
|           | |-RecoveryExpr 0x1239430f8 <col:13> '<dependent type>' contains-errors lvalue
|           | `-RecoveryExpr 0x1239430a0 <col:26, col:34> '<dependent type>' contains-errors lvalue
|           |   `-DeclRefExpr 0x123943068 <col:26> 'struct GlobalConfig *' lvalue ParmVar 0x123928648 'config' 'struct GlobalConfig *'
|           `-IfStmt 0x123944e60 <line:17:7, line:35:7> has_else
|             |-RecoveryExpr 0x123943198 <line:17:10, col:21> '_Bool' contains-errors
|             |-CompoundStmt 0x123943cb0 <col:37, line:31:7>
|             | |-DeclStmt 0x1239432d0 <line:18:9, col:35>
|             | | `-VarDecl 0x1239431d0 <col:9, col:34> col:13 used cut 'int' cinit
|             | |   `-BinaryOperator 0x1239432b0 <col:19, col:34> '<dependent type>' contains-errors '-'
|             | |     |-RecoveryExpr 0x123943290 <col:19> '<dependent type>' contains-errors lvalue
|             | |     `-IntegerLiteral 0x123943250 <col:34> 'int' 1
|             | |-WhileStmt 0x1239435e0 <line:20:9, line:22:9>
|             | | |-BinaryOperator 0x123943570 <line:20:15, col:37> 'int' contains-errors '&&'
|             | | | |-UnaryOperator 0x123943520 <col:15, col:32> 'int' contains-errors prefix '!' cannot overflow
|             | | | | `-CallExpr 0x1239434c8 <col:16, col:32> 'int' contains-errors
|             | | | |   |-ImplicitCastExpr 0x1239434b0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|             | | | |   | `-DeclRefExpr 0x1239433c8 <col:16> 'int ()' Function 0x123943310 'ISSPACE' 'int ()'
|             | | | |   `-ImplicitCastExpr 0x123943508 <col:24, col:31> 'int' contains-errors <IntegralCast>
|             | | | |     `-ImplicitCastExpr 0x1239434f0 <col:24, col:31> 'char' contains-errors <LValueToRValue>
|             | | | |       `-ArraySubscriptExpr 0x123943458 <col:24, col:31> 'char' contains-errors lvalue
|             | | | |         |-ImplicitCastExpr 0x123943428 <col:24> 'char *' <LValueToRValue>
|             | | | |         | `-DeclRefExpr 0x1239433e8 <col:24> 'char *' lvalue Var 0x123940c58 'ptr' 'char *'
|             | | | |         `-ImplicitCastExpr 0x123943440 <col:28> 'int' contains-errors <LValueToRValue>
|             | | | |           `-DeclRefExpr 0x123943408 <col:28> 'int' contains-errors lvalue Var 0x1239431d0 'cut' 'int'
|             | | | `-ImplicitCastExpr 0x123943558 <col:37> 'int' contains-errors <LValueToRValue>
|             | | |   `-DeclRefExpr 0x123943538 <col:37> 'int' contains-errors lvalue Var 0x1239431d0 'cut' 'int'
|             | | `-CompoundStmt 0x1239435c8 <col:42, line:22:9>
|             | |   `-UnaryOperator 0x1239435b0 <line:21:11, col:14> 'int' contains-errors postfix '--'
|             | |     `-DeclRefExpr 0x123943590 <col:11> 'int' contains-errors lvalue Var 0x1239431d0 'cut' 'int'
|             | |-IfStmt 0x123943770 <line:23:9, line:25:32>
|             | | |-BinaryOperator 0x123943658 <line:23:12, col:17> 'int' contains-errors '=='
|             | | | |-IntegerLiteral 0x123943600 <col:12> 'int' 0
|             | | | `-ImplicitCastExpr 0x123943640 <col:17> 'int' contains-errors <LValueToRValue>
|             | | |   `-DeclRefExpr 0x123943620 <col:17> 'int' contains-errors lvalue Var 0x1239431d0 'cut' 'int'
|             | | `-BinaryOperator 0x123943750 <line:25:11, col:32> 'int' contains-errors '='
|             | |   |-DeclRefExpr 0x123943678 <col:11> 'int' contains-errors lvalue Var 0x1239431d0 'cut' 'int'
|             | |   `-BinaryOperator 0x123943730 <col:17, col:32> '<dependent type>' contains-errors '-'
|             | |     |-RecoveryExpr 0x123943710 <col:17> '<dependent type>' contains-errors lvalue
|             | |     `-IntegerLiteral 0x1239436b0 <col:32> 'int' 1
|             | |-CStyleCastExpr 0x123943a28 <line:27:9, col:53> 'void' contains-errors <ToVoid>
|             | | `-CallExpr 0x1239439d8 <col:15, col:53> '<dependent type>' contains-errors
|             | |   |-DeclRefExpr 0x1239438a0 <col:15> 'int ()' Function 0x1239437e8 'fwrite' 'int ()'
|             | |   |-DeclRefExpr 0x1239438c0 <col:22> 'char *' lvalue Var 0x123940c58 'ptr' 'char *'
|             | |   |-BinaryOperator 0x123943938 <col:27, col:33> 'int' contains-errors '+'
|             | |   | |-ImplicitCastExpr 0x123943920 <col:27> 'int' contains-errors <LValueToRValue>
|             | |   | | `-DeclRefExpr 0x1239438e0 <col:27> 'int' contains-errors lvalue Var 0x1239431d0 'cut' 'int'
|             | |   | `-IntegerLiteral 0x123943900 <col:33> 'int' 1
|             | |   |-IntegerLiteral 0x123943958 <col:36> 'int' 1
|             | |   `-RecoveryExpr 0x1239439b0 <col:39, col:47> '<dependent type>' contains-errors lvalue
|             | |     `-DeclRefExpr 0x123943978 <col:39> 'struct GlobalConfig *' lvalue ParmVar 0x123928648 'config' 'struct GlobalConfig *'
|             | |-CallExpr 0x123943b30 <line:28:9, col:36> '<dependent type>' contains-errors
|             | | |-DeclRefExpr 0x123943a50 <col:9> 'int ()' Function 0x123942f78 'fputs' 'int ()'
|             | | |-StringLiteral 0x123943ab0 <col:15> 'char[4]' lvalue "STR"
|             | | `-RecoveryExpr 0x123943b08 <col:22, col:30> '<dependent type>' contains-errors lvalue
|             | |   `-DeclRefExpr 0x123943ad0 <col:22> 'struct GlobalConfig *' lvalue ParmVar 0x123928648 'config' 'struct GlobalConfig *'
|             | |-CompoundAssignOperator 0x123943bf8 <line:29:9, col:20> 'char *' contains-errors '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|             | | |-DeclRefExpr 0x123943b60 <col:9> 'char *' lvalue Var 0x123940c58 'ptr' 'char *'
|             | | `-BinaryOperator 0x123943bd8 <col:16, col:20> 'int' contains-errors '+'
|             | |   |-ImplicitCastExpr 0x123943bc0 <col:16> 'int' contains-errors <LValueToRValue>
|             | |   | `-DeclRefExpr 0x123943b80 <col:16> 'int' contains-errors lvalue Var 0x1239431d0 'cut' 'int'
|             | |   `-IntegerLiteral 0x123943ba0 <col:20> 'int' 1
|             | `-CompoundAssignOperator 0x123943c80 <line:30:9, col:16> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
|             |   |-DeclRefExpr 0x123943c28 <col:9> 'int' lvalue Var 0x123940bc0 'len' 'int'
|             |   `-ImplicitCastExpr 0x123943c68 <col:16> 'int' contains-errors <LValueToRValue>
|             |     `-DeclRefExpr 0x123943c48 <col:16> 'int' contains-errors lvalue Var 0x1239431d0 'cut' 'int'
|             `-CompoundStmt 0x123944e40 <line:32:12, line:35:7>
|               |-CallExpr 0x123943d98 <line:33:9, col:34> '<dependent type>' contains-errors
|               | |-DeclRefExpr 0x123943cf8 <col:9> 'int ()' Function 0x123942f78 'fputs' 'int ()'
|               | |-DeclRefExpr 0x123943d18 <col:15> 'char *' lvalue Var 0x123940c58 'ptr' 'char *'
|               | `-RecoveryExpr 0x123943d70 <col:20, col:28> '<dependent type>' contains-errors lvalue
|               |   `-DeclRefExpr 0x123943d38 <col:20> 'struct GlobalConfig *' lvalue ParmVar 0x123928648 'config' 'struct GlobalConfig *'
|               `-BinaryOperator 0x123944e20 <line:34:9, col:15> 'int' '='
|                 |-DeclRefExpr 0x123943dc8 <col:9> 'int' lvalue Var 0x123940bc0 'len' 'int'
|                 `-IntegerLiteral 0x123944e00 <col:15> 'int' 0
|-FunctionDecl 0x123940ee0 <line:9:5> col:5 implicit used va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x123940fe0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| |-BuiltinAttr 0x123940f88 <<invalid sloc>> Implicit 864
| `-NoThrowAttr 0x123941050 <col:5> Implicit
|-FunctionDecl 0x123941210 <line:10:11> col:11 implicit used vsnprintf 'int (char *, unsigned long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x123941310 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x123941378 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1239413e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x123941448 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| |-BuiltinAttr 0x1239412b8 <<invalid sloc>> Implicit 909
| `-FormatAttr 0x1239414d0 <col:11> Implicit printf 3 0
`-FunctionDecl 0x1239417c8 <line:11:5> col:5 implicit used va_end 'void (__builtin_va_list &)' extern
  |-ParmVarDecl 0x1239418c8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
  |-BuiltinAttr 0x123941870 <<invalid sloc>> Implicit 865
  `-NoThrowAttr 0x123941938 <col:5> Implicit
