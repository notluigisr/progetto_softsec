TranslationUnitDecl 0x14b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b055bd0 '__int128'
|-TypedefDecl 0x14b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b055bf0 'unsigned __int128'
|-TypedefDecl 0x14b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14b056580 '__NSConstantString_tag'
|-TypedefDecl 0x14b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b055d90 '__SVInt8_t'
|-TypedefDecl 0x14b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b055db0 '__SVInt16_t'
|-TypedefDecl 0x14b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b055dd0 '__SVInt32_t'
|-TypedefDecl 0x14b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b055df0 '__SVInt64_t'
|-TypedefDecl 0x14b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b055e10 '__SVUint8_t'
|-TypedefDecl 0x14b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b055e30 '__SVUint16_t'
|-TypedefDecl 0x14b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b055e50 '__SVUint32_t'
|-TypedefDecl 0x14b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b055e70 '__SVUint64_t'
|-TypedefDecl 0x14b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b055e90 '__SVFloat16_t'
|-TypedefDecl 0x14b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b056390 '__SVBool_t'
|-TypedefDecl 0x14b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b0563f0 '__SVCount_t'
|-TypedefDecl 0x14b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b80dbb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-TypedefDecl 0x14b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b80dbb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
`-FunctionDecl 0x14b80ddf8 <dataset_diviso_filec/func14463_nonvuln.c:1:1, line:42:1> line:1:5 invalid ff_h264_check_intra4x4_pred_mode 'int (int *)'
  |-ParmVarDecl 0x14b80dd28 <col:38, col:51> col:51 referenced invalid h 'int *'
  `-CompoundStmt 0x14b8297a8 <line:2:1, line:42:1>
    |-DeclStmt 0x14b80e1a8 <line:3:5, line:5:6>
    | `-VarDecl 0x14b80df98 <line:3:5, col:31> col:25 invalid top 'const int[12]' static
    |-DeclStmt 0x14b827a50 <line:6:5, line:8:6>
    | `-VarDecl 0x14b80e228 <line:6:5, col:32> col:25 invalid left 'const int[12]' static
    |-DeclStmt 0x14b827ae8 <line:9:5, col:10>
    | `-VarDecl 0x14b827a80 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x14b828568 <line:11:5, line:23:5>
    | |-UnaryOperator 0x14b827bc8 <line:11:9, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ParenExpr 0x14b827ba8 <col:10, col:44> '<dependent type>' contains-errors
    | |   `-BinaryOperator 0x14b827b88 <col:11, col:38> '<dependent type>' contains-errors '&'
    | |     |-CXXDependentScopeMemberExpr 0x14b827b20 <col:11, col:14> '<dependent type>' contains-errors lvalue ->top_samples_available
    | |     | `-RecoveryExpr 0x14b827b00 <col:11> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x14b827b68 <col:38> 'int' 32768
    | `-CompoundStmt 0x14b828550 <col:47, line:23:5>
    |   `-ForStmt 0x14b828518 <line:12:9, line:22:9>
    |     |-BinaryOperator 0x14b827c20 <line:12:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x14b827be0 <col:14> 'int' lvalue Var 0x14b827a80 'i' 'int'
    |     | `-IntegerLiteral 0x14b827c00 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x14b827c98 <col:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x14b827c80 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14b827c40 <col:21> 'int' lvalue Var 0x14b827a80 'i' 'int'
    |     | `-IntegerLiteral 0x14b827c60 <col:25> 'int' 4
    |     |-UnaryOperator 0x14b827cd8 <col:28, col:29> 'int' postfix '++'
    |     | `-DeclRefExpr 0x14b827cb8 <col:28> 'int' lvalue Var 0x14b827a80 'i' 'int'
    |     `-CompoundStmt 0x14b8284f8 <col:33, line:22:9>
    |       |-DeclStmt 0x14b827e50 <line:13:13, col:72>
    |       | `-VarDecl 0x14b827d08 <col:13, col:17> col:17 used status 'int'
    |       `-IfStmt 0x14b8284c8 <line:14:13, line:21:13> has_else
    |         |-BinaryOperator 0x14b827ec0 <line:14:17, col:26> 'int' '<'
    |         | |-ImplicitCastExpr 0x14b827ea8 <col:17> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x14b827e68 <col:17> 'int' lvalue Var 0x14b827d08 'status' 'int'
    |         | `-IntegerLiteral 0x14b827e88 <col:26> 'int' 0
    |         |-CompoundStmt 0x14b828338 <col:29, line:19:13>
    |         | |-CallExpr 0x14b8282a0 <line:15:17, line:17:48> '<dependent type>' contains-errors
    |         | | |-DeclRefExpr 0x14b828040 <line:15:17> 'int ()' Function 0x14b827f88 'av_log' 'int ()'
    |         | | |-CXXDependentScopeMemberExpr 0x14b828080 <col:24, col:27> '<dependent type>' contains-errors lvalue ->avctx
    |         | | | `-RecoveryExpr 0x14b828060 <col:24> '<dependent type>' contains-errors lvalue
    |         | | |-RecoveryExpr 0x14b828280 <col:34> '<dependent type>' contains-errors lvalue
    |         | | |-StringLiteral 0x14b828120 <line:16:24> 'char[4]' lvalue "STR"
    |         | | |-DeclRefExpr 0x14b828140 <line:17:24> 'int' lvalue Var 0x14b827d08 'status' 'int'
    |         | | |-CXXDependentScopeMemberExpr 0x14b828180 <col:32, col:35> '<dependent type>' contains-errors lvalue ->mb_x
    |         | | | `-RecoveryExpr 0x14b828160 <col:32> '<dependent type>' contains-errors lvalue
    |         | | `-CXXDependentScopeMemberExpr 0x14b8281e8 <col:41, col:44> '<dependent type>' contains-errors lvalue ->mb_y
    |         | |   `-RecoveryExpr 0x14b8281c8 <col:41> '<dependent type>' contains-errors lvalue
    |         | `-ReturnStmt 0x14b828328 <line:18:17, col:24>
    |         |   `-RecoveryExpr 0x14b828308 <col:24> '<dependent type>' contains-errors lvalue
    |         `-IfStmt 0x14b8284a8 <line:19:20, line:21:13>
    |           |-ImplicitCastExpr 0x14b828378 <line:19:24> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x14b828358 <col:24> 'int' lvalue Var 0x14b827d08 'status' 'int'
    |           `-CompoundStmt 0x14b828498 <col:32, line:21:13>
    |-IfStmt 0x14b829758 <line:25:5, line:39:5>
    | |-BinaryOperator 0x14b828670 <line:25:9, col:49> 'int' contains-errors '!='
    | | |-ParenExpr 0x14b828630 <col:9, col:44> '<dependent type>' contains-errors
    | | | `-BinaryOperator 0x14b828610 <col:10, col:38> '<dependent type>' contains-errors '&'
    | | |   |-CXXDependentScopeMemberExpr 0x14b8285a8 <col:10, col:13> '<dependent type>' contains-errors lvalue ->left_samples_available
    | | |   | `-RecoveryExpr 0x14b828588 <col:10> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x14b8285f0 <col:38> 'int' 34952
    | | `-IntegerLiteral 0x14b828650 <col:49> 'int' 34952
    | `-CompoundStmt 0x14b829738 <col:57, line:39:5>
    |   |-DeclStmt 0x14b828930 <line:26:9, col:66>
    |   | `-VarDecl 0x14b828778 <col:9, col:65> col:26 used mask 'const int[4]' static cinit
    |   |   `-InitListExpr 0x14b8288d0 <col:36, col:65> 'const int[4]'
    |   |     |-IntegerLiteral 0x14b8287e0 <col:38> 'int' 32768
    |   |     |-IntegerLiteral 0x14b828800 <col:46> 'int' 8192
    |   |     |-IntegerLiteral 0x14b828820 <col:54> 'int' 128
    |   |     `-IntegerLiteral 0x14b828840 <col:60> 'int' 32
    |   `-ForStmt 0x14b829700 <line:27:9, line:38:13>
    |     |-BinaryOperator 0x14b828988 <line:27:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x14b828948 <col:14> 'int' lvalue Var 0x14b827a80 'i' 'int'
    |     | `-IntegerLiteral 0x14b828968 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x14b828e00 <col:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x14b8289e8 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14b8289a8 <col:21> 'int' lvalue Var 0x14b827a80 'i' 'int'
    |     | `-IntegerLiteral 0x14b8289c8 <col:25> 'int' 4
    |     |-UnaryOperator 0x14b828e40 <col:28, col:29> 'int' postfix '++'
    |     | `-DeclRefExpr 0x14b828e20 <col:28> 'int' lvalue Var 0x14b827a80 'i' 'int'
    |     `-IfStmt 0x14b8296e0 <line:28:13, line:38:13>
    |       |-UnaryOperator 0x14b828f90 <line:28:17, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow
    |       | `-ParenExpr 0x14b828f70 <col:18, col:54> '<dependent type>' contains-errors
    |       |   `-BinaryOperator 0x14b828f50 <col:19, col:53> '<dependent type>' contains-errors '&'
    |       |     |-CXXDependentScopeMemberExpr 0x14b828e78 <col:19, col:22> '<dependent type>' contains-errors lvalue ->left_samples_available
    |       |     | `-RecoveryExpr 0x14b828e58 <col:19> '<dependent type>' contains-errors lvalue
    |       |     `-ArraySubscriptExpr 0x14b828f30 <col:47, col:53> 'const int' lvalue
    |       |       |-ImplicitCastExpr 0x14b828f00 <col:47> 'const int *' <ArrayToPointerDecay>
    |       |       | `-DeclRefExpr 0x14b828ec0 <col:47> 'const int[4]' lvalue Var 0x14b828778 'mask' 'const int[4]'
    |       |       `-ImplicitCastExpr 0x14b828f18 <col:52> 'int' <LValueToRValue>
    |       |         `-DeclRefExpr 0x14b828ee0 <col:52> 'int' lvalue Var 0x14b827a80 'i' 'int'
    |       `-CompoundStmt 0x14b8296c0 <col:57, line:38:13>
    |         |-DeclStmt 0x14b829160 <line:29:17, col:81>
    |         | `-VarDecl 0x14b828fc0 <col:17, col:21> col:21 used status 'int'
    |         `-IfStmt 0x14b829690 <line:30:17, line:37:17> has_else
    |           |-BinaryOperator 0x14b8291d0 <line:30:21, col:30> 'int' '<'
    |           | |-ImplicitCastExpr 0x14b8291b8 <col:21> 'int' <LValueToRValue>
    |           | | `-DeclRefExpr 0x14b829178 <col:21> 'int' lvalue Var 0x14b828fc0 'status' 'int'
    |           | `-IntegerLiteral 0x14b829198 <col:30> 'int' 0
    |           |-CompoundStmt 0x14b8294a8 <col:33, line:35:17>
    |           | |-CallExpr 0x14b829410 <line:31:21, line:33:52> '<dependent type>' contains-errors
    |           | | |-DeclRefExpr 0x14b8291f0 <line:31:21> 'int ()' Function 0x14b827f88 'av_log' 'int ()'
    |           | | |-CXXDependentScopeMemberExpr 0x14b829230 <col:28, col:31> '<dependent type>' contains-errors lvalue ->avctx
    |           | | | `-RecoveryExpr 0x14b829210 <col:28> '<dependent type>' contains-errors lvalue
    |           | | |-RecoveryExpr 0x14b8293f0 <col:38> '<dependent type>' contains-errors lvalue
    |           | | |-StringLiteral 0x14b829290 <line:32:28> 'char[4]' lvalue "STR"
    |           | | |-DeclRefExpr 0x14b8292b0 <line:33:28> 'int' lvalue Var 0x14b828fc0 'status' 'int'
    |           | | |-CXXDependentScopeMemberExpr 0x14b8292f0 <col:36, col:39> '<dependent type>' contains-errors lvalue ->mb_x
    |           | | | `-RecoveryExpr 0x14b8292d0 <col:36> '<dependent type>' contains-errors lvalue
    |           | | `-CXXDependentScopeMemberExpr 0x14b829358 <col:45, col:48> '<dependent type>' contains-errors lvalue ->mb_y
    |           | |   `-RecoveryExpr 0x14b829338 <col:45> '<dependent type>' contains-errors lvalue
    |           | `-ReturnStmt 0x14b829498 <line:34:21, col:28>
    |           |   `-RecoveryExpr 0x14b829478 <col:28> '<dependent type>' contains-errors lvalue
    |           `-IfStmt 0x14b829670 <line:35:24, line:37:17>
    |             |-ImplicitCastExpr 0x14b8294e8 <line:35:28> 'int' <LValueToRValue>
    |             | `-DeclRefExpr 0x14b8294c8 <col:28> 'int' lvalue Var 0x14b828fc0 'status' 'int'
    |             `-CompoundStmt 0x14b829660 <col:36, line:37:17>
    `-ReturnStmt 0x14b829798 <line:41:5, col:12>
      `-IntegerLiteral 0x14b829778 <col:12> 'int' 0
