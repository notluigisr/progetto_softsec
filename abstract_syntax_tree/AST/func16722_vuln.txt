TranslationUnitDecl 0x150055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150055bd0 '__int128'
|-TypedefDecl 0x150056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150055bf0 'unsigned __int128'
|-TypedefDecl 0x14800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14800bc00 'struct __NSConstantString_tag'
|   `-Record 0x150056580 '__NSConstantString_tag'
|-TypedefDecl 0x14800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150055d90 '__SVInt8_t'
|-TypedefDecl 0x14800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150055db0 '__SVInt16_t'
|-TypedefDecl 0x14800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150055dd0 '__SVInt32_t'
|-TypedefDecl 0x14800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150055df0 '__SVInt64_t'
|-TypedefDecl 0x14800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150055e10 '__SVUint8_t'
|-TypedefDecl 0x14800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150055e30 '__SVUint16_t'
|-TypedefDecl 0x14800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150055e50 '__SVUint32_t'
|-TypedefDecl 0x14800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150055e70 '__SVUint64_t'
|-TypedefDecl 0x14800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150055e90 '__SVFloat16_t'
|-TypedefDecl 0x14800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1500560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1500560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1500561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1500561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1500562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1500562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150056390 '__SVBool_t'
|-TypedefDecl 0x14800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1500563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1500563f0 '__SVCount_t'
|-TypedefDecl 0x14800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14800dbb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-TypedefDecl 0x14800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14800dbb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
`-FunctionDecl 0x14800dee8 <dataset_diviso_filec/func16722_vuln.c:1:1, line:25:1> line:1:1 spa_bits_to_base64 'int (char *, const char *, int)'
  |-ParmVarDecl 0x14800dcf0 <col:21, col:29> col:29 used out 'char *'
  |-ParmVarDecl 0x14800dd70 <col:34, col:48> col:48 used in 'const char *'
  |-ParmVarDecl 0x14800ddf0 <col:52, col:56> col:56 used inlen 'int'
  `-CompoundStmt 0x148808880 <line:3:1, line:25:1>
    |-ForStmt 0x148026bf8 <line:4:3, line:11:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14800e048 <line:4:10, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x14800e030 <col:10> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14800dff0 <col:10> 'int' lvalue ParmVar 0x14800ddf0 'inlen' 'int'
    | | `-IntegerLiteral 0x14800e010 <col:19> 'int' 3
    | |-CompoundAssignOperator 0x14800e0a8 <col:22, col:31> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    | | |-DeclRefExpr 0x14800e068 <col:22> 'int' lvalue ParmVar 0x14800ddf0 'inlen' 'int'
    | | `-IntegerLiteral 0x14800e088 <col:31> 'int' 3
    | `-CompoundStmt 0x148026be0 <line:5:5, line:11:5>
    |   `-CompoundAssignOperator 0x148026bb0 <line:10:7, col:13> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |     |-DeclRefExpr 0x148026b70 <col:7> 'const char *' lvalue ParmVar 0x14800dd70 'in' 'const char *'
    |     `-IntegerLiteral 0x148026b90 <col:13> 'int' 3
    |-IfStmt 0x1480275b0 <line:12:3, line:23:5>
    | |-BinaryOperator 0x148026c88 <line:12:7, col:15> 'int' '>'
    | | |-ImplicitCastExpr 0x148026c70 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x148026c30 <col:7> 'int' lvalue ParmVar 0x14800ddf0 'inlen' 'int'
    | | `-IntegerLiteral 0x148026c50 <col:15> 'int' 0
    | `-CompoundStmt 0x148027580 <line:13:5, line:23:5>
    |   |-DeclStmt 0x148026d20 <line:14:7, col:22>
    |   | `-VarDecl 0x148026cb8 <col:7, col:14> col:14 used fragment 'char'
    |   |-BinaryOperator 0x148027008 <line:17:7, col:33> 'char' '='
    |   | |-DeclRefExpr 0x148026e88 <col:7> 'char' lvalue Var 0x148026cb8 'fragment' 'char'
    |   | `-ImplicitCastExpr 0x148026ff0 <col:18, col:33> 'char' <IntegralCast>
    |   |   `-BinaryOperator 0x148026fd0 <col:18, col:33> 'int' '&'
    |   |     |-ParenExpr 0x148026f90 <col:18, col:29> 'int'
    |   |     | `-BinaryOperator 0x148026f70 <col:19, col:28> 'int' '<<'
    |   |     |   |-ImplicitCastExpr 0x148026f58 <col:19, col:23> 'int' <IntegralCast>
    |   |     |   | `-ImplicitCastExpr 0x148026f40 <col:19, col:23> 'char' <LValueToRValue>
    |   |     |   |   `-ArraySubscriptExpr 0x148026f00 <col:19, col:23> 'const char' lvalue
    |   |     |   |     |-ImplicitCastExpr 0x148026ee8 <col:19> 'const char *' <LValueToRValue>
    |   |     |   |     | `-DeclRefExpr 0x148026ea8 <col:19> 'const char *' lvalue ParmVar 0x14800dd70 'in' 'const char *'
    |   |     |   |     `-IntegerLiteral 0x148026ec8 <col:22> 'int' 0
    |   |     |   `-IntegerLiteral 0x148026f20 <col:28> 'int' 4
    |   |     `-IntegerLiteral 0x148026fb0 <col:33> 'int' 48
    |   |-IfStmt 0x1480271d8 <line:18:7, line:19:29>
    |   | |-BinaryOperator 0x148027080 <line:18:11, col:19> 'int' '>'
    |   | | |-ImplicitCastExpr 0x148027068 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x148027028 <col:11> 'int' lvalue ParmVar 0x14800ddf0 'inlen' 'int'
    |   | | `-IntegerLiteral 0x148027048 <col:19> 'int' 1
    |   | `-CompoundAssignOperator 0x1480271a8 <line:19:8, col:29> 'char' '|=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |   |-DeclRefExpr 0x1480270a0 <col:8> 'char' lvalue Var 0x148026cb8 'fragment' 'char'
    |   |   `-BinaryOperator 0x148027188 <col:20, col:29> 'int' '>>'
    |   |     |-ImplicitCastExpr 0x148027170 <col:20, col:24> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x148027158 <col:20, col:24> 'char' <LValueToRValue>
    |   |     |   `-ArraySubscriptExpr 0x148027118 <col:20, col:24> 'const char' lvalue
    |   |     |     |-ImplicitCastExpr 0x148027100 <col:20> 'const char *' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x1480270c0 <col:20> 'const char *' lvalue ParmVar 0x14800dd70 'in' 'const char *'
    |   |     |     `-IntegerLiteral 0x1480270e0 <col:23> 'int' 1
    |   |     `-IntegerLiteral 0x148027138 <col:29> 'int' 4
    |   `-BinaryOperator 0x148027560 <line:22:7, col:16> 'char' '='
    |     |-UnaryOperator 0x148027518 <col:7, col:11> 'char' lvalue prefix '*' cannot overflow
    |     | `-UnaryOperator 0x148027500 <col:8, col:11> 'char *' postfix '++'
    |     |   `-DeclRefExpr 0x1480274e0 <col:8> 'char *' lvalue ParmVar 0x14800dcf0 'out' 'char *'
    |     `-ImplicitCastExpr 0x148027548 <col:16> 'char' <IntegralCast>
    |       `-CharacterLiteral 0x148027530 <col:16> 'int' 61
    `-BinaryOperator 0x148808860 <line:24:3, col:10> 'char' '='
      |-UnaryOperator 0x148808818 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x148808800 <col:4> 'char *' <LValueToRValue>
      |   `-DeclRefExpr 0x1480275d0 <col:4> 'char *' lvalue ParmVar 0x14800dcf0 'out' 'char *'
      `-ImplicitCastExpr 0x148808848 <col:10> 'char' <IntegralCast>
        `-CharacterLiteral 0x148808830 <col:10> 'int' 0
