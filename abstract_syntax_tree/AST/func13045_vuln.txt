TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x137126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137126000 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x137126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x137126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x137126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x1371263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x137126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x1371264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x137126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x137126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x1371265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x137126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1371266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x137126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x137126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1371267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x137126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1371268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x137126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x137126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1371269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x137126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x137126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x137126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x137126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x137126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x137126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x137126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x137126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1371278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1371279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x137127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x137127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x137127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x137127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x137127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x137127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x137127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x137127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x137127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x137127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x137128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-FunctionDecl 0x137141ac8 <dataset_diviso_filec/func13045_vuln.c:1:1, line:59:1> line:1:10 invalid Curl_urldecode 'int (struct SessionHandle *, const char *, int, char **, int *, int)'
| |-ParmVarDecl 0x137128668 <col:25, col:47> col:47 used data 'struct SessionHandle *'
| |-ParmVarDecl 0x1371286e8 <line:2:25, col:37> col:37 used string 'const char *'
| |-ParmVarDecl 0x137128768 <col:45, col:52> col:52 invalid length 'int'
| |-ParmVarDecl 0x137141818 <line:3:25, col:32> col:32 used ostring 'char **'
| |-ParmVarDecl 0x1371418c8 <col:41, col:49> col:49 invalid olen 'int *'
| |-ParmVarDecl 0x137141948 <line:4:25, col:30> col:30 invalid reject_ctrl 'int'
| `-CompoundStmt 0x137145008 <line:5:1, line:59:1>
|   |-BinaryOperator 0x137142118 <line:6:3, col:49> 'unsigned long' contains-errors '='
|   | |-UnaryExprOrTypeTraitExpr 0x137142018 <col:3, col:10> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x137141ff8 <col:10> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x1371420f8 <col:18, col:49> '<dependent type>' contains-errors '+'
|   |   |-ParenExpr 0x1371420d8 <col:18, col:47> '<dependent type>' contains-errors
|   |   | `-ConditionalOperator 0x1371420a8 <col:19, col:46> '<dependent type>' contains-errors
|   |   |   |-RecoveryExpr 0x137141bd8 <col:19> '<dependent type>' contains-errors lvalue
|   |   |   |-RecoveryExpr 0x137141bf8 <col:26> '<dependent type>' contains-errors lvalue
|   |   |   `-CallExpr 0x137142068 <col:33, col:46> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x137142050 <col:33> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x137141dc8 <col:33> 'unsigned long (const char *)' Function 0x137141c58 'strlen' 'unsigned long (const char *)'
|   |   |     `-ImplicitCastExpr 0x137142090 <col:40> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x137141de8 <col:40> 'const char *' lvalue ParmVar 0x1371286e8 'string' 'const char *'
|   |   `-IntegerLiteral 0x137141f98 <col:49> 'int' 1
|   |-DeclStmt 0x137142500 <line:7:3, col:27>
|   | `-VarDecl 0x137142150 <col:3, col:26> col:9 used ns 'char *' cinit
|   |   `-ImplicitCastExpr 0x1371424e8 <col:14, col:26> 'char *' <BitCast>
|   |     `-CallExpr 0x137142490 <col:14, col:26> 'void *'
|   |       |-ImplicitCastExpr 0x137142478 <col:14> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x137142398 <col:14> 'void *(unsigned long)' Function 0x1371421f8 'malloc' 'void *(unsigned long)'
|   |       `-ImplicitCastExpr 0x1371424d0 <col:21> 'unsigned long' <PointerToIntegral>
|   |         `-ImplicitCastExpr 0x1371424b8 <col:21> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |           `-DeclRefExpr 0x137142410 <col:21> 'void *(unsigned long)' Function 0x1371421f8 'malloc' 'void *(unsigned long)'
|   |-DeclStmt 0x137142598 <line:8:3, col:19>
|   | `-VarDecl 0x137142530 <col:3, col:17> col:17 used in 'unsigned char'
|   |-RecoveryExpr 0x1371426d0 <line:9:3, col:19> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x1371426b0 <col:3, col:10> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x137142690 <col:10> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x1371425e8 <col:19> 'int' 0
|   |-DeclStmt 0x137142780 <line:10:3, col:20>
|   | `-VarDecl 0x137142718 <col:3, col:17> col:17 used hex 'unsigned long'
|   |-IfStmt 0x137142e30 <line:13:3, line:14:12>
|   | |-UnaryOperator 0x1371427d0 <line:13:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1371427b8 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x137142798 <col:7> 'char *' lvalue Var 0x137142150 'ns' 'char *'
|   | `-ReturnStmt 0x137142e20 <line:14:5, col:12>
|   |   `-RecoveryExpr 0x137142e00 <col:12> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x137144e38 <line:16:3, line:47:3>
|   | |-BinaryOperator 0x137142f18 <line:16:9, col:19> 'int' contains-errors '>'
|   | | |-UnaryOperator 0x137142f00 <col:9, col:11> '<dependent type>' contains-errors prefix '--' cannot overflow
|   | | | `-RecoveryExpr 0x137142ee0 <col:11> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x137142e80 <col:19> 'int' 0
|   | `-CompoundStmt 0x137144e08 <col:22, line:47:3>
|   |   |-BinaryOperator 0x137142fd8 <line:17:5, col:11> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x137142f38 <col:5> 'unsigned char' lvalue Var 0x137142530 'in' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x137142fc0 <col:10, col:11> 'unsigned char' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x137142fa8 <col:10, col:11> 'char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x137142f90 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x137142f78 <col:11> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x137142f58 <col:11> 'const char *' lvalue ParmVar 0x1371286e8 'string' 'const char *'
|   |   |-IfStmt 0x137144b80 <line:18:5, line:39:5>
|   |   | |-BinaryOperator 0x137143468 <line:18:8, col:64> 'int' '&&'
|   |   | | |-BinaryOperator 0x137143340 <col:8, col:41> 'int' '&&'
|   |   | | | |-ParenExpr 0x137143080 <col:8, col:18> 'int'
|   |   | | | | `-BinaryOperator 0x137143060 <col:9, col:16> 'int' '=='
|   |   | | | |   |-CharacterLiteral 0x137142ff8 <col:9> 'int' 37
|   |   | | | |   `-ImplicitCastExpr 0x137143048 <col:16> 'int' <IntegralCast>
|   |   | | | |     `-ImplicitCastExpr 0x137143030 <col:16> 'unsigned char' <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 0x137143010 <col:16> 'unsigned char' lvalue Var 0x137142530 'in' 'unsigned char'
|   |   | | | `-CallExpr 0x1371432e8 <col:23, col:41> 'int'
|   |   | | |   |-ImplicitCastExpr 0x1371432d0 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x137143200 <col:23> 'int ()' Function 0x137143148 'ISXDIGIT' 'int ()'
|   |   | | |   `-ImplicitCastExpr 0x137143328 <col:32, col:40> 'int' <IntegralCast>
|   |   | | |     `-ImplicitCastExpr 0x137143310 <col:32, col:40> 'char' <LValueToRValue>
|   |   | | |       `-ArraySubscriptExpr 0x137143278 <col:32, col:40> 'const char' lvalue
|   |   | | |         |-ImplicitCastExpr 0x137143260 <col:32> 'const char *' <LValueToRValue>
|   |   | | |         | `-DeclRefExpr 0x137143220 <col:32> 'const char *' lvalue ParmVar 0x1371286e8 'string' 'const char *'
|   |   | | |         `-IntegerLiteral 0x137143240 <col:39> 'int' 1
|   |   | | `-CallExpr 0x137143410 <col:46, col:64> 'int'
|   |   | |   |-ImplicitCastExpr 0x1371433f8 <col:46> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x137143360 <col:46> 'int ()' Function 0x137143148 'ISXDIGIT' 'int ()'
|   |   | |   `-ImplicitCastExpr 0x137143450 <col:55, col:63> 'int' <IntegralCast>
|   |   | |     `-ImplicitCastExpr 0x137143438 <col:55, col:63> 'char' <LValueToRValue>
|   |   | |       `-ArraySubscriptExpr 0x1371433d8 <col:55, col:63> 'const char' lvalue
|   |   | |         |-ImplicitCastExpr 0x1371433c0 <col:55> 'const char *' <LValueToRValue>
|   |   | |         | `-DeclRefExpr 0x137143380 <col:55> 'const char *' lvalue ParmVar 0x1371286e8 'string' 'const char *'
|   |   | |         `-IntegerLiteral 0x1371433a0 <col:62> 'int' 2
|   |   | `-CompoundStmt 0x137144b28 <col:67, line:39:5>
|   |   |   |-DeclStmt 0x137143598 <line:20:7, col:21>
|   |   |   | `-VarDecl 0x137143530 <col:7, col:20> col:12 used hexstr 'char[3]'
|   |   |   |-DeclStmt 0x137143630 <line:21:7, col:16>
|   |   |   | `-VarDecl 0x1371435c8 <col:7, col:13> col:13 used ptr 'char *'
|   |   |   |-BinaryOperator 0x137143750 <line:22:7, col:27> 'char' '='
|   |   |   | |-ArraySubscriptExpr 0x1371436a0 <col:7, col:15> 'char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x137143688 <col:7> 'char *' <ArrayToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x137143648 <col:7> 'char[3]' lvalue Var 0x137143530 'hexstr' 'char[3]'
|   |   |   | | `-IntegerLiteral 0x137143668 <col:14> 'int' 0
|   |   |   | `-ImplicitCastExpr 0x137143738 <col:19, col:27> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x137143718 <col:19, col:27> 'const char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x137143700 <col:19> 'const char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x1371436c0 <col:19> 'const char *' lvalue ParmVar 0x1371286e8 'string' 'const char *'
|   |   |   |     `-IntegerLiteral 0x1371436e0 <col:26> 'int' 1
|   |   |   |-BinaryOperator 0x137143878 <line:23:7, col:27> 'char' '='
|   |   |   | |-ArraySubscriptExpr 0x1371437c8 <col:7, col:15> 'char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x1371437b0 <col:7> 'char *' <ArrayToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x137143770 <col:7> 'char[3]' lvalue Var 0x137143530 'hexstr' 'char[3]'
|   |   |   | | `-IntegerLiteral 0x137143790 <col:14> 'int' 1
|   |   |   | `-ImplicitCastExpr 0x137143860 <col:19, col:27> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x137143840 <col:19, col:27> 'const char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x137143828 <col:19> 'const char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x1371437e8 <col:19> 'const char *' lvalue ParmVar 0x1371286e8 'string' 'const char *'
|   |   |   |     `-IntegerLiteral 0x137143808 <col:26> 'int' 2
|   |   |   |-BinaryOperator 0x137143948 <line:24:7, col:19> 'char' '='
|   |   |   | |-ArraySubscriptExpr 0x1371438f0 <col:7, col:15> 'char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x1371438d8 <col:7> 'char *' <ArrayToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x137143898 <col:7> 'char[3]' lvalue Var 0x137143530 'hexstr' 'char[3]'
|   |   |   | | `-IntegerLiteral 0x1371438b8 <col:14> 'int' 2
|   |   |   | `-ImplicitCastExpr 0x137143930 <col:19> 'char' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x137143910 <col:19> 'int' 0
|   |   |   |-BinaryOperator 0x137143d90 <line:26:7, col:37> 'unsigned long' '='
|   |   |   | |-DeclRefExpr 0x137143968 <col:7> 'unsigned long' lvalue Var 0x137142718 'hex' 'unsigned long'
|   |   |   | `-CallExpr 0x137143d28 <col:13, col:37> 'unsigned long'
|   |   |   |   |-ImplicitCastExpr 0x137143d10 <col:13> 'unsigned long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x137143c28 <col:13> 'unsigned long (const char *, char **, int)' Function 0x1371439d8 'strtoul' 'unsigned long (const char *, char **, int)'
|   |   |   |   |-ImplicitCastExpr 0x137143d78 <col:21> 'const char *' <NoOp>
|   |   |   |   | `-ImplicitCastExpr 0x137143d60 <col:21> 'char *' <ArrayToPointerDecay>
|   |   |   |   |   `-DeclRefExpr 0x137143c48 <col:21> 'char[3]' lvalue Var 0x137143530 'hexstr' 'char[3]'
|   |   |   |   |-UnaryOperator 0x137143c88 <col:29, col:30> 'char **' prefix '&' cannot overflow
|   |   |   |   | `-DeclRefExpr 0x137143c68 <col:30> 'char *' lvalue Var 0x1371435c8 'ptr' 'char *'
|   |   |   |   `-IntegerLiteral 0x137143ca0 <col:35> 'int' 16
|   |   |   |-BinaryOperator 0x137144568 <line:28:7, col:28> 'unsigned char' '='
|   |   |   | |-DeclRefExpr 0x137143db0 <col:7> 'unsigned char' lvalue Var 0x137142530 'in' 'unsigned char'
|   |   |   | `-ImplicitCastExpr 0x137144550 <col:12, col:28> 'unsigned char' <IntegralCast>
|   |   |   |   `-CallExpr 0x137144510 <col:12, col:28> 'int'
|   |   |   |     |-ImplicitCastExpr 0x1371444f8 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1371444b8 <col:12> 'int ()' Function 0x137144400 'curlx_ultouc' 'int ()'
|   |   |   |     `-ImplicitCastExpr 0x137144538 <col:25> 'unsigned long' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1371444d8 <col:25> 'unsigned long' lvalue Var 0x137142718 'hex' 'unsigned long'
|   |   |   |-IfStmt 0x137144a78 <line:31:7, line:35:7>
|   |   |   | |-RecoveryExpr 0x1371447a0 <line:31:10> '_Bool' contains-errors
|   |   |   | `-CompoundStmt 0x137144a60 <col:15, line:35:7>
|   |   |   |   `-CallExpr 0x137144a08 <line:33:9, col:16> 'void'
|   |   |   |     |-ImplicitCastExpr 0x1371449f0 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x137144968 <col:9> 'void (void *)' Function 0x1371447f8 'free' 'void (void *)'
|   |   |   |     `-ImplicitCastExpr 0x137144a48 <col:14> 'void *' <BitCast>
|   |   |   |       `-ImplicitCastExpr 0x137144a30 <col:14> 'char *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x137144988 <col:14> 'char *' lvalue Var 0x137142150 'ns' 'char *'
|   |   |   `-CompoundAssignOperator 0x137144ad8 <line:37:7, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   |     |-DeclRefExpr 0x137144a98 <col:7> 'const char *' lvalue ParmVar 0x1371286e8 'string' 'const char *'
|   |   |     `-IntegerLiteral 0x137144ab8 <col:15> 'int' 2
|   |   |-IfStmt 0x137144d70 <line:40:5, line:43:5>
|   |   | |-BinaryOperator 0x137144c70 <line:40:8, col:33> 'int' contains-errors '&&'
|   |   | | |-RecoveryExpr 0x137144ba0 <col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-ParenExpr 0x137144c50 <col:23, col:33> 'int'
|   |   | |   `-BinaryOperator 0x137144c30 <col:24, col:29> 'int' '<'
|   |   | |     |-ImplicitCastExpr 0x137144c18 <col:24> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x137144c00 <col:24> 'unsigned char' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x137144bc0 <col:24> 'unsigned char' lvalue Var 0x137142530 'in' 'unsigned char'
|   |   | |     `-IntegerLiteral 0x137144be0 <col:29> 'int' 32
|   |   | `-CompoundStmt 0x137144d58 <col:36, line:43:5>
|   |   |   `-CallExpr 0x137144d00 <line:41:7, col:14> 'void'
|   |   |     |-ImplicitCastExpr 0x137144ce8 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x137144c90 <col:7> 'void (void *)' Function 0x1371447f8 'free' 'void (void *)'
|   |   |     `-ImplicitCastExpr 0x137144d40 <col:12> 'void *' <BitCast>
|   |   |       `-ImplicitCastExpr 0x137144d28 <col:12> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x137144cb0 <col:12> 'char *' lvalue Var 0x137142150 'ns' 'char *'
|   |   `-UnaryOperator 0x137144df0 <line:46:5, col:11> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x137144dd0 <col:5> 'const char *' lvalue ParmVar 0x1371286e8 'string' 'const char *'
|   `-IfStmt 0x137144fe8 <line:54:3, line:56:16>
|     |-ImplicitCastExpr 0x137144f28 <line:54:6> 'char **' <LValueToRValue>
|     | `-DeclRefExpr 0x137144f08 <col:6> 'char **' lvalue ParmVar 0x137141818 'ostring' 'char **'
|     `-BinaryOperator 0x137144fc8 <line:56:5, col:16> 'char *' '='
|       |-UnaryOperator 0x137144f78 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|       | `-ImplicitCastExpr 0x137144f60 <col:6> 'char **' <LValueToRValue>
|       |   `-DeclRefExpr 0x137144f40 <col:6> 'char **' lvalue ParmVar 0x137141818 'ostring' 'char **'
|       `-ImplicitCastExpr 0x137144fb0 <col:16> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x137144f90 <col:16> 'char *' lvalue Var 0x137142150 'ns' 'char *'
|-FunctionDecl 0x137141c58 <line:6:33> col:33 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x137141d58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x137141d00 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1371421f8 <line:7:14> col:14 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x1371422f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x1371422a0 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x137142368 <col:14> Implicit 1
|-FunctionDecl 0x1371439d8 <line:26:13> col:13 implicit used strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x137143ad8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x137143b40 <<invalid sloc>> <invalid sloc> 'char **'
| |-ParmVarDecl 0x137143ba8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x137143a80 <<invalid sloc>> Implicit 879
`-FunctionDecl 0x1371447f8 <line:33:9> col:9 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x1371448f8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1371448a0 <<invalid sloc>> Implicit 873
