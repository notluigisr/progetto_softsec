TranslationUnitDecl 0x12e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e055bd0 '__int128'
|-TypedefDecl 0x12e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e055bf0 'unsigned __int128'
|-TypedefDecl 0x12e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e126000 'struct __NSConstantString_tag'
|   `-Record 0x12e056580 '__NSConstantString_tag'
|-TypedefDecl 0x12e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e055d90 '__SVInt8_t'
|-TypedefDecl 0x12e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e055db0 '__SVInt16_t'
|-TypedefDecl 0x12e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e055dd0 '__SVInt32_t'
|-TypedefDecl 0x12e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e055df0 '__SVInt64_t'
|-TypedefDecl 0x12e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e055e10 '__SVUint8_t'
|-TypedefDecl 0x12e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e055e30 '__SVUint16_t'
|-TypedefDecl 0x12e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e055e50 '__SVUint32_t'
|-TypedefDecl 0x12e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e055e70 '__SVUint64_t'
|-TypedefDecl 0x12e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e055e90 '__SVFloat16_t'
|-TypedefDecl 0x12e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e056390 '__SVBool_t'
|-TypedefDecl 0x12e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0563f0 '__SVCount_t'
|-TypedefDecl 0x12e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-TypedefDecl 0x12e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
`-FunctionDecl 0x12e1281a8 <dataset_diviso_filec/func9037_nonvuln.c:1:1, line:34:1> line:1:1 sv_histsize 'int (char *)'
  |-ParmVarDecl 0x12e1280d8 <line:2:6, col:12> col:12 used name 'char *'
  `-CompoundStmt 0x12f008548 <line:3:1, line:34:1>
    |-DeclStmt 0x12e128320 <line:4:3, col:13>
    | `-VarDecl 0x12e1282b8 <col:3, col:9> col:9 used temp 'char *'
    |-DeclStmt 0x12e1283d0 <line:6:3, col:11>
    | `-VarDecl 0x12e128368 <col:3, col:7> col:7 used hmax 'int'
    |-BinaryOperator 0x12e140c70 <line:8:3, col:32> 'char *' '='
    | |-DeclRefExpr 0x12e1283e8 <col:3> 'char *' lvalue Var 0x12e1282b8 'temp' 'char *'
    | `-ImplicitCastExpr 0x12e1285e8 <col:10, col:32> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x12e1285a8 <col:10, col:32> 'int'
    |     |-ImplicitCastExpr 0x12e128590 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12e128520 <col:10> 'int ()' Function 0x12e128468 'get_string_value' 'int ()'
    |     `-ImplicitCastExpr 0x12e1285d0 <col:28> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x12e128540 <col:28> 'char *' lvalue ParmVar 0x12e1280d8 'name' 'char *'
    `-IfStmt 0x12f008518 <line:10:3, line:33:23> has_else
      |-BinaryOperator 0x12e140d48 <line:10:7, col:16> 'int' '&&'
      | |-ImplicitCastExpr 0x12e140d00 <col:7> 'char *' <LValueToRValue>
      | | `-DeclRefExpr 0x12e140c90 <col:7> 'char *' lvalue Var 0x12e1282b8 'temp' 'char *'
      | `-ImplicitCastExpr 0x12e140d30 <col:15, col:16> 'int' <IntegralCast>
      |   `-ImplicitCastExpr 0x12e140d18 <col:15, col:16> 'char' <LValueToRValue>
      |     `-UnaryOperator 0x12e140ce8 <col:15, col:16> 'char' lvalue prefix '*' cannot overflow
      |       `-ImplicitCastExpr 0x12e140cd0 <col:16> 'char *' <LValueToRValue>
      |         `-DeclRefExpr 0x12e140cb0 <col:16> 'char *' lvalue Var 0x12e1282b8 'temp' 'char *'
      |-CompoundStmt 0x12f0083a8 <line:11:5, line:31:5>
      | `-IfStmt 0x12f008388 <line:12:7, line:30:2>
      |   |-CallExpr 0x12e140f20 <line:12:11, col:35> '<dependent type>' contains-errors
      |   | |-DeclRefExpr 0x12e140e48 <col:11> 'int ()' Function 0x12e140d90 'legal_number' 'int ()'
      |   | |-DeclRefExpr 0x12e140e68 <col:25> 'char *' lvalue Var 0x12e1282b8 'temp' 'char *'
      |   | `-UnaryOperator 0x12e140f08 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   |   `-RecoveryExpr 0x12e140ee8 <col:32> '<dependent type>' contains-errors lvalue
      |   `-CompoundStmt 0x12f008368 <line:13:2, line:30:2>
      |     |-BinaryOperator 0x12e140fc8 <line:14:4, col:11> 'int' contains-errors '='
      |     | |-DeclRefExpr 0x12e140f50 <col:4> 'int' lvalue Var 0x12e128368 'hmax' 'int'
      |     | `-RecoveryExpr 0x12e140fa8 <col:11> '<dependent type>' contains-errors lvalue
      |     `-IfStmt 0x12f008338 <line:15:4, line:29:6> has_else
      |       |-BinaryOperator 0x12e141140 <line:15:8, col:31> 'int' '&&'
      |       | |-BinaryOperator 0x12e141040 <col:8, col:15> 'int' '<'
      |       | | |-ImplicitCastExpr 0x12e141028 <col:8> 'int' <LValueToRValue>
      |       | | | `-DeclRefExpr 0x12e140fe8 <col:8> 'int' lvalue Var 0x12e128368 'hmax' 'int'
      |       | | `-IntegerLiteral 0x12e141008 <col:15> 'int' 0
      |       | `-BinaryOperator 0x12e141120 <col:20, col:31> 'int' '=='
      |       |   |-ImplicitCastExpr 0x12e141108 <col:20, col:26> 'int' <IntegralCast>
      |       |   | `-ImplicitCastExpr 0x12e1410f0 <col:20, col:26> 'char' <LValueToRValue>
      |       |   |   `-ArraySubscriptExpr 0x12e1410b8 <col:20, col:26> 'char' lvalue
      |       |   |     |-ImplicitCastExpr 0x12e1410a0 <col:20> 'char *' <LValueToRValue>
      |       |   |     | `-DeclRefExpr 0x12e141060 <col:20> 'char *' lvalue ParmVar 0x12e1280d8 'name' 'char *'
      |       |   |     `-IntegerLiteral 0x12e141080 <col:25> 'int' 4
      |       |   `-CharacterLiteral 0x12e1410d8 <col:31> 'int' 83
      |       |-CallExpr 0x12e141278 <line:16:6, col:24> 'int'
      |       | `-ImplicitCastExpr 0x12e141260 <col:6> 'int (*)()' <FunctionToPointerDecay>
      |       |   `-DeclRefExpr 0x12e141240 <col:6> 'int ()' Function 0x12e141188 'unstifle_history' 'int ()'
      |       `-IfStmt 0x12f008308 <line:17:9, line:29:6> has_else
      |         |-BinaryOperator 0x12e141358 <line:17:13, col:24> 'int' '=='
      |         | |-ImplicitCastExpr 0x12e141340 <col:13, col:19> 'int' <IntegralCast>
      |         | | `-ImplicitCastExpr 0x12e141328 <col:13, col:19> 'char' <LValueToRValue>
      |         | |   `-ArraySubscriptExpr 0x12e1412f0 <col:13, col:19> 'char' lvalue
      |         | |     |-ImplicitCastExpr 0x12e1412d8 <col:13> 'char *' <LValueToRValue>
      |         | |     | `-DeclRefExpr 0x12e141298 <col:13> 'char *' lvalue ParmVar 0x12e1280d8 'name' 'char *'
      |         | |     `-IntegerLiteral 0x12e1412b8 <col:18> 'int' 4
      |         | `-CharacterLiteral 0x12e141310 <col:24> 'int' 83
      |         |-CompoundStmt 0x12e141720 <line:18:6, line:23:6>
      |         | |-CallExpr 0x12e1414b0 <line:19:8, col:28> 'int'
      |         | | |-ImplicitCastExpr 0x12e141498 <col:8> 'int (*)()' <FunctionToPointerDecay>
      |         | | | `-DeclRefExpr 0x12e141458 <col:8> 'int ()' Function 0x12e1413a0 'stifle_history' 'int ()'
      |         | | `-ImplicitCastExpr 0x12e1414d8 <col:24> 'int' <LValueToRValue>
      |         | |   `-DeclRefExpr 0x12e141478 <col:24> 'int' lvalue Var 0x12e128368 'hmax' 'int'
      |         | `-BinaryOperator 0x12e141648 <line:20:8, col:30> 'int' '='
      |         |   |-DeclRefExpr 0x12e1414f0 <col:8> 'int' lvalue Var 0x12e128368 'hmax' 'int'
      |         |   `-CallExpr 0x12e141628 <col:15, col:30> 'int'
      |         |     `-ImplicitCastExpr 0x12e141610 <col:15> 'int (*)()' <FunctionToPointerDecay>
      |         |       `-DeclRefExpr 0x12e1415f0 <col:15> 'int ()' Function 0x12e141538 'where_history' 'int ()'
      |         `-IfStmt 0x12f0082e8 <line:24:9, line:29:6>
      |           |-BinaryOperator 0x12e141798 <line:24:13, col:21> 'int' '>='
      |           | |-ImplicitCastExpr 0x12e141780 <col:13> 'int' <LValueToRValue>
      |           | | `-DeclRefExpr 0x12e141740 <col:13> 'int' lvalue Var 0x12e128368 'hmax' 'int'
      |           | `-IntegerLiteral 0x12e141760 <col:21> 'int' 0
      |           `-CompoundStmt 0x12f0082d0 <line:25:6, line:29:6>
      |             `-CallExpr 0x12e1419d0 <line:26:8, col:61> 'int'
      |               |-ImplicitCastExpr 0x12e1419b8 <col:8> 'int (*)()' <FunctionToPointerDecay>
      |               | `-DeclRefExpr 0x12e141898 <col:8> 'int ()' Function 0x12e1417e0 'history_truncate_file' 'int ()'
      |               |-CallExpr 0x12e141958 <col:31, col:54> 'int'
      |               | |-ImplicitCastExpr 0x12e141940 <col:31> 'int (*)()' <FunctionToPointerDecay>
      |               | | `-DeclRefExpr 0x12e1418b8 <col:31> 'int ()' Function 0x12e128468 'get_string_value' 'int ()'
      |               | `-ImplicitCastExpr 0x12e141980 <col:49> 'char *' <ArrayToPointerDecay>
      |               |   `-StringLiteral 0x12e141920 <col:49> 'char[4]' lvalue "STR"
      |               `-ImplicitCastExpr 0x12f008200 <col:57> 'int' <LValueToRValue>
      |                 `-DeclRefExpr 0x12e141998 <col:57> 'int' lvalue Var 0x12e128368 'hmax' 'int'
      `-IfStmt 0x12f0084f8 <line:32:8, line:33:23>
        |-BinaryOperator 0x12f008480 <line:32:12, col:23> 'int' '=='
        | |-ImplicitCastExpr 0x12f008468 <col:12, col:18> 'int' <IntegralCast>
        | | `-ImplicitCastExpr 0x12f008450 <col:12, col:18> 'char' <LValueToRValue>
        | |   `-ArraySubscriptExpr 0x12f008418 <col:12, col:18> 'char' lvalue
        | |     |-ImplicitCastExpr 0x12f008400 <col:12> 'char *' <LValueToRValue>
        | |     | `-DeclRefExpr 0x12f0083c0 <col:12> 'char *' lvalue ParmVar 0x12e1280d8 'name' 'char *'
        | |     `-IntegerLiteral 0x12f0083e0 <col:17> 'int' 4
        | `-CharacterLiteral 0x12f008438 <col:23> 'int' 83
        `-CallExpr 0x12f0084d8 <line:33:5, col:23> 'int'
          `-ImplicitCastExpr 0x12f0084c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
            `-DeclRefExpr 0x12f0084a0 <col:5> 'int ()' Function 0x12e141188 'unstifle_history' 'int ()'
