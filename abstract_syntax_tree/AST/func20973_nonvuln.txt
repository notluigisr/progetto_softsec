TranslationUnitDecl 0x12d04f608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0504b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d04fbd0 '__int128'
|-TypedefDecl 0x12d050528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d04fbf0 'unsigned __int128'
|-TypedefDecl 0x12d868230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d868000 'struct __NSConstantString_tag'
|   `-Record 0x12d050580 '__NSConstantString_tag'
|-TypedefDecl 0x12d868298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d04fd90 '__SVInt8_t'
|-TypedefDecl 0x12d868300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d04fdb0 '__SVInt16_t'
|-TypedefDecl 0x12d868368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d04fdd0 '__SVInt32_t'
|-TypedefDecl 0x12d8683d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d04fdf0 '__SVInt64_t'
|-TypedefDecl 0x12d868438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d04fe10 '__SVUint8_t'
|-TypedefDecl 0x12d8684a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d04fe30 '__SVUint16_t'
|-TypedefDecl 0x12d868508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d04fe50 '__SVUint32_t'
|-TypedefDecl 0x12d868570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d04fe70 '__SVUint64_t'
|-TypedefDecl 0x12d8685d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d04fe90 '__SVFloat16_t'
|-TypedefDecl 0x12d868640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d04feb0 '__SVFloat32_t'
|-TypedefDecl 0x12d8686a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d04fed0 '__SVFloat64_t'
|-TypedefDecl 0x12d868710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d04fef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d868778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d04ff10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d8687e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d04ff30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d868848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d04ff50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d8688b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d04ff70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d868918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d04ff90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d868980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d04ffb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d8689e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d04ffd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d868a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d04fff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d868ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d050010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d868b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d050030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d868b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d050050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d868bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d050070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d868c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d050090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d868cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0500b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d868d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0500d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d868d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0500f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d868df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d050110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d868e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d050130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d868ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d050150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d868f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d050170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d868f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d050190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d869800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0501b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d869868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0501d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d8698d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0501f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d869938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d050210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d8699a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d050230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d869a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d050250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d869a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d050270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d869ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d050290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d869b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0502b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d869ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0502d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d869c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0502f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d869c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d050310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d869ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d050330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d869d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d050350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d869db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d050370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d869e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d050390 '__SVBool_t'
|-TypedefDecl 0x12d869e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0503b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d869ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0503d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d869f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0503f0 '__SVCount_t'
|-TypedefDecl 0x12d869ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d869fb0 'char *'
|   `-BuiltinType 0x12d04f6b0 'char'
|-TypedefDecl 0x12d86a068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d869fb0 'char *'
|   `-BuiltinType 0x12d04f6b0 'char'
|-FunctionDecl 0x12d886d48 <dataset_diviso_filec/func20973_nonvuln.c:1:1, line:66:1> line:1:5 kvm_vm_ioctl_get_dirty_log 'int (struct kvm *, struct kvm_dirty_log *)'
| |-ParmVarDecl 0x12d86a648 <col:32, col:44> col:44 used kvm 'struct kvm *'
| |-ParmVarDecl 0x12d886c28 <line:2:11, col:33> col:33 used log 'struct kvm_dirty_log *'
| `-CompoundStmt 0x12d88d8b0 <line:3:1, line:66:1>
|   |-DeclStmt 0x12d886f60 <line:4:2, col:10>
|   | |-VarDecl 0x12d886e60 <col:2, col:6> col:6 used r 'int'
|   | `-VarDecl 0x12d886ee0 <col:2, col:9> col:9 used i 'int'
|   |-DeclStmt 0x12d887168 <line:5:2, col:33>
|   | |-RecordDecl 0x12d886f78 <col:2, col:9> col:9 struct kvm_memory_slot
|   | `-VarDecl 0x12d8870e8 <col:2, col:26> col:26 used memslot 'struct kvm_memory_slot *'
|   |-DeclStmt 0x12d887200 <line:6:2, col:17>
|   | `-VarDecl 0x12d887198 <col:2, col:16> col:16 used n 'unsigned long'
|   |-DeclStmt 0x12d8872d0 <line:7:2, col:28>
|   | `-VarDecl 0x12d887230 <col:2, col:27> col:16 used is_dirty 'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x12d8872b8 <col:27> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x12d887298 <col:27> 'int' 0
|   |-CallExpr 0x12d8874a8 <line:9:2, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12d887410 <col:2> 'int ()' Function 0x12d887358 'mutex_lock' 'int ()'
|   | `-UnaryOperator 0x12d887490 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x12d887468 <col:14, col:19> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12d887430 <col:14> 'struct kvm *' lvalue ParmVar 0x12d86a648 'kvm' 'struct kvm *'
|   |-BinaryOperator 0x12d8875a8 <line:11:2, col:7> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12d8874d0 <col:2> 'int' lvalue Var 0x12d886e60 'r' 'int'
|   | `-UnaryOperator 0x12d887590 <col:6, col:7> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x12d887578 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x12d887558 <col:7> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d887708 <line:12:2, line:13:8>
|   | |-BinaryOperator 0x12d887680 <line:12:6, col:19> 'int' contains-errors '>='
|   | | |-RecoveryExpr 0x12d887600 <col:6, col:11> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x12d8875c8 <col:6> 'struct kvm_dirty_log *' lvalue ParmVar 0x12d886c28 'log' 'struct kvm_dirty_log *'
|   | | `-RecoveryExpr 0x12d887660 <col:19> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x12d8876f0 <line:13:3, col:8> 'out' 0x12d8876a0
|   |-BinaryOperator 0x12d8878b8 <line:15:2, col:46> 'struct kvm_memory_slot *' contains-errors '='
|   | |-DeclRefExpr 0x12d887728 <col:2> 'struct kvm_memory_slot *' lvalue Var 0x12d8870e8 'memslot' 'struct kvm_memory_slot *'
|   | `-UnaryOperator 0x12d8878a0 <col:12, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-ArraySubscriptExpr 0x12d887880 <col:13, col:46> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x12d887850 <col:13, col:28> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x12d8877a8 <col:13, col:28> '<dependent type>' contains-errors lvalue ->memslots
|   |     |   `-RecoveryExpr 0x12d887780 <col:13, col:18> '<dependent type>' contains-errors lvalue
|   |     |     `-DeclRefExpr 0x12d887748 <col:13> 'struct kvm *' lvalue ParmVar 0x12d86a648 'kvm' 'struct kvm *'
|   |     `-ImplicitCastExpr 0x12d887868 <col:37, col:42> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x12d887828 <col:37, col:42> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x12d8877f0 <col:37> 'struct kvm_dirty_log *' lvalue ParmVar 0x12d886c28 'log' 'struct kvm_dirty_log *'
|   |-BinaryOperator 0x12d8879b0 <line:16:2, col:7> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12d8878d8 <col:2> 'int' lvalue Var 0x12d886e60 'r' 'int'
|   | `-UnaryOperator 0x12d887998 <col:6, col:7> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x12d887980 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x12d887960 <col:7> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d887a78 <line:17:2, line:18:8>
|   | |-UnaryOperator 0x12d887a48 <line:17:6, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12d887a30 <col:7, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12d887a08 <col:7, col:16> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12d8879d0 <col:7> 'struct kvm_memory_slot *' lvalue Var 0x12d8870e8 'memslot' 'struct kvm_memory_slot *'
|   | `-GotoStmt 0x12d887a60 <line:18:3, col:8> 'out' 0x12d8876a0
|   |-BinaryOperator 0x12d889aa0 <line:20:2, col:36> 'unsigned long' '='
|   | |-DeclRefExpr 0x12d887a98 <col:2> 'unsigned long' lvalue Var 0x12d887198 'n' 'unsigned long'
|   | `-ImplicitCastExpr 0x12d889a88 <col:6, col:36> 'unsigned long' <IntegralCast>
|   |   `-CallExpr 0x12d889a48 <col:6, col:36> 'int'
|   |     |-ImplicitCastExpr 0x12d889a30 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d887b98 <col:6> 'int ()' Function 0x12d887ae0 'kvm_dirty_bitmap_bytes' 'int ()'
|   |     `-ImplicitCastExpr 0x12d889a70 <col:29> 'struct kvm_memory_slot *' <LValueToRValue>
|   |       `-DeclRefExpr 0x12d887bb8 <col:29> 'struct kvm_memory_slot *' lvalue Var 0x12d8870e8 'memslot' 'struct kvm_memory_slot *'
|   |-ForStmt 0x12d889dd8 <line:22:2, line:23:37>
|   | |-BinaryOperator 0x12d889b00 <line:22:7, col:11> 'int' '='
|   | | |-DeclRefExpr 0x12d889ac0 <col:7> 'int' lvalue Var 0x12d886ee0 'i' 'int'
|   | | `-IntegerLiteral 0x12d889ae0 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12d889c70 <col:14, col:44> 'int' '&&'
|   | | |-UnaryOperator 0x12d889b58 <col:14, col:15> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x12d889b40 <col:15> 'unsigned long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12d889b20 <col:15> 'unsigned long' lvalue Var 0x12d887230 'is_dirty' 'unsigned long'
|   | | `-BinaryOperator 0x12d889c50 <col:27, col:44> 'int' '<'
|   | |   |-ImplicitCastExpr 0x12d889c38 <col:27> 'unsigned long' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x12d889c20 <col:27> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x12d889b70 <col:27> 'int' lvalue Var 0x12d886ee0 'i' 'int'
|   | |   `-BinaryOperator 0x12d889c00 <col:31, col:44> 'unsigned long' '/'
|   | |     |-ImplicitCastExpr 0x12d889be8 <col:31> 'unsigned long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x12d889b90 <col:31> 'unsigned long' lvalue Var 0x12d887198 'n' 'unsigned long'
|   | |     `-UnaryExprOrTypeTraitExpr 0x12d889bc8 <col:33, col:44> 'unsigned long' sizeof 'long'
|   | |-UnaryOperator 0x12d889cb0 <col:47, col:48> 'int' postfix '++'
|   | | `-DeclRefExpr 0x12d889c90 <col:47> 'int' lvalue Var 0x12d886ee0 'i' 'int'
|   | `-BinaryOperator 0x12d889db8 <line:23:3, col:37> 'unsigned long' contains-errors '='
|   |   |-DeclRefExpr 0x12d889cc8 <col:3> 'unsigned long' lvalue Var 0x12d887230 'is_dirty' 'unsigned long'
|   |   `-ArraySubscriptExpr 0x12d889d98 <col:14, col:37> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x12d889d68 <col:14, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-RecoveryExpr 0x12d889d20 <col:14, col:23> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x12d889ce8 <col:14> 'struct kvm_memory_slot *' lvalue Var 0x12d8870e8 'memslot' 'struct kvm_memory_slot *'
|   |     `-ImplicitCastExpr 0x12d889d80 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12d889d48 <col:36> 'int' lvalue Var 0x12d886ee0 'i' 'int'
|   |-IfStmt 0x12d88d618 <line:26:2, line:60:2> has_else
|   | |-ImplicitCastExpr 0x12d889e30 <line:26:6> 'unsigned long' <LValueToRValue>
|   | | `-DeclRefExpr 0x12d889e10 <col:6> 'unsigned long' lvalue Var 0x12d887230 'is_dirty' 'unsigned long'
|   | |-CompoundStmt 0x12d88d358 <col:16, line:56:2>
|   | | |-DeclStmt 0x12d88a0d0 <line:27:3, col:41>
|   | | | |-RecordDecl 0x12d889e48 <col:3, col:10> col:10 struct kvm_memslots
|   | | | |-VarDecl 0x12d889fb8 <col:3, col:24> col:24 used slots 'struct kvm_memslots *'
|   | | | `-VarDecl 0x12d88a048 <col:3, col:32> col:32 used old_slots 'struct kvm_memslots *'
|   | | |-DeclStmt 0x12d88a1a0 <line:28:3, col:30>
|   | | | `-VarDecl 0x12d88a138 <col:3, col:18> col:18 used dirty_bitmap 'unsigned long *'
|   | | |-BinaryOperator 0x12d88a238 <line:30:3, col:27> 'unsigned long *' contains-errors '='
|   | | | |-DeclRefExpr 0x12d88a1b8 <col:3> 'unsigned long *' lvalue Var 0x12d88a138 'dirty_bitmap' 'unsigned long *'
|   | | | `-RecoveryExpr 0x12d88a210 <col:18, col:27> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x12d88a1d8 <col:18> 'struct kvm_memory_slot *' lvalue Var 0x12d8870e8 'memslot' 'struct kvm_memory_slot *'
|   | | |-IfStmt 0x12d88a3d8 <line:31:3, line:32:35>
|   | | | |-BinaryOperator 0x12d88a2d8 <line:31:7, col:32> 'int' contains-errors '=='
|   | | | | |-RecoveryExpr 0x12d88a290 <col:7, col:16> '<dependent type>' contains-errors lvalue
|   | | | | | `-DeclRefExpr 0x12d88a258 <col:7> 'struct kvm_memory_slot *' lvalue Var 0x12d8870e8 'memslot' 'struct kvm_memory_slot *'
|   | | | | `-DeclRefExpr 0x12d88a2b8 <col:32> 'unsigned long *' lvalue Var 0x12d88a138 'dirty_bitmap' 'unsigned long *'
|   | | | `-CompoundAssignOperator 0x12d88a3a8 <line:32:4, col:35> 'unsigned long *' '+=' ComputeLHSTy='unsigned long *' ComputeResultTy='unsigned long *'
|   | | |   |-DeclRefExpr 0x12d88a2f8 <col:4> 'unsigned long *' lvalue Var 0x12d88a138 'dirty_bitmap' 'unsigned long *'
|   | | |   `-BinaryOperator 0x12d88a388 <col:20, col:35> 'unsigned long' '/'
|   | | |     |-ImplicitCastExpr 0x12d88a370 <col:20> 'unsigned long' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12d88a318 <col:20> 'unsigned long' lvalue Var 0x12d887198 'n' 'unsigned long'
|   | | |     `-UnaryExprOrTypeTraitExpr 0x12d88a350 <col:24, col:35> 'unsigned long' sizeof 'long'
|   | | |-CallExpr 0x12d88a798 <line:33:3, col:28> 'void *'
|   | | | |-ImplicitCastExpr 0x12d88a780 <col:3> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12d88a698 <col:3> 'void *(void *, int, unsigned long)' Function 0x12d88a448 'memset' 'void *(void *, int, unsigned long)'
|   | | | |-ImplicitCastExpr 0x12d88a7e8 <col:10> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x12d88a7d0 <col:10> 'unsigned long *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x12d88a6b8 <col:10> 'unsigned long *' lvalue Var 0x12d88a138 'dirty_bitmap' 'unsigned long *'
|   | | | |-IntegerLiteral 0x12d88a6d8 <col:24> 'int' 0
|   | | | `-ImplicitCastExpr 0x12d88a800 <col:27> 'unsigned long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12d88a6f8 <col:27> 'unsigned long' lvalue Var 0x12d887198 'n' 'unsigned long'
|   | | |-BinaryOperator 0x12d88a8f0 <line:35:3, col:8> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x12d88a818 <col:3> 'int' lvalue Var 0x12d886e60 'r' 'int'
|   | | | `-UnaryOperator 0x12d88a8d8 <col:7, col:8> '<dependent type>' contains-errors prefix '-' cannot overflow
|   | | |   `-ImplicitCastExpr 0x12d88a8c0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | | |     `-RecoveryExpr 0x12d88a8a0 <col:8> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x12d88bb00 <line:37:3, line:38:9>
|   | | | |-UnaryOperator 0x12d88bad0 <line:37:7, col:8> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x12d88bab8 <col:8> 'struct kvm_memslots *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x12d88ba98 <col:8> 'struct kvm_memslots *' lvalue Var 0x12d889fb8 'slots' 'struct kvm_memslots *'
|   | | | `-GotoStmt 0x12d88bae8 <line:38:4, col:9> 'out' 0x12d8876a0
|   | | |-BinaryOperator 0x12d88c020 <line:40:3, col:45> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x12d88bfb8 <col:3, col:30> '<dependent type>' contains-errors lvalue .dirty_bitmap
|   | | | | `-ArraySubscriptExpr 0x12d88bf98 <col:3, col:28> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x12d88bf68 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-RecoveryExpr 0x12d88bee0 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   | | | |   |   `-DeclRefExpr 0x12d88bea8 <col:3> 'struct kvm_memslots *' lvalue Var 0x12d889fb8 'slots' 'struct kvm_memslots *'
|   | | | |   `-ImplicitCastExpr 0x12d88bf80 <col:19, col:24> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |     `-RecoveryExpr 0x12d88bf40 <col:19, col:24> '<dependent type>' contains-errors lvalue
|   | | | |       `-DeclRefExpr 0x12d88bf08 <col:19> 'struct kvm_dirty_log *' lvalue ParmVar 0x12d886c28 'log' 'struct kvm_dirty_log *'
|   | | | `-DeclRefExpr 0x12d88c000 <col:45> 'unsigned long *' lvalue Var 0x12d88a138 'dirty_bitmap' 'unsigned long *'
|   | | |-UnaryOperator 0x12d88c0a0 <line:41:3, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow
|   | | | `-RecoveryExpr 0x12d88c078 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x12d88c040 <col:3> 'struct kvm_memslots *' lvalue Var 0x12d889fb8 'slots' 'struct kvm_memslots *'
|   | | |-BinaryOperator 0x12d88c138 <line:43:3, col:20> 'struct kvm_memslots *' contains-errors '='
|   | | | |-DeclRefExpr 0x12d88c0b8 <col:3> 'struct kvm_memslots *' lvalue Var 0x12d88a048 'old_slots' 'struct kvm_memslots *'
|   | | | `-RecoveryExpr 0x12d88c110 <col:15, col:20> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x12d88c0d8 <col:15> 'struct kvm *' lvalue ParmVar 0x12d86a648 'kvm' 'struct kvm *'
|   | | |-CallExpr 0x12d88c2d8 <line:44:3, col:42> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12d88c238 <col:3> 'int ()' Function 0x12d88c180 'rcu_assign_pointer' 'int ()'
|   | | | |-RecoveryExpr 0x12d88c290 <col:22, col:27> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x12d88c258 <col:22> 'struct kvm *' lvalue ParmVar 0x12d86a648 'kvm' 'struct kvm *'
|   | | | `-DeclRefExpr 0x12d88c2b8 <col:37> 'struct kvm_memslots *' lvalue Var 0x12d889fb8 'slots' 'struct kvm_memslots *'
|   | | |-CallExpr 0x12d88c480 <line:45:3, col:40> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12d88c3e8 <col:3> 'int ()' Function 0x12d88c330 'synchronize_srcu_expedited' 'int ()'
|   | | | `-UnaryOperator 0x12d88c468 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x12d88c440 <col:31, col:36> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12d88c408 <col:31> 'struct kvm *' lvalue ParmVar 0x12d86a648 'kvm' 'struct kvm *'
|   | | |-BinaryOperator 0x12d88c620 <line:46:3, col:49> 'unsigned long *' contains-errors '='
|   | | | |-DeclRefExpr 0x12d88c4a8 <col:3> 'unsigned long *' lvalue Var 0x12d88a138 'dirty_bitmap' 'unsigned long *'
|   | | | `-CXXDependentScopeMemberExpr 0x12d88c5d8 <col:18, col:49> '<dependent type>' contains-errors lvalue .dirty_bitmap
|   | | |   `-ArraySubscriptExpr 0x12d88c5b8 <col:18, col:47> '<dependent type>' contains-errors lvalue
|   | | |     |-ImplicitCastExpr 0x12d88c588 <col:18, col:29> '<dependent type>' contains-errors <LValueToRValue>
|   | | |     | `-RecoveryExpr 0x12d88c500 <col:18, col:29> '<dependent type>' contains-errors lvalue
|   | | |     |   `-DeclRefExpr 0x12d88c4c8 <col:18> 'struct kvm_memslots *' lvalue Var 0x12d88a048 'old_slots' 'struct kvm_memslots *'
|   | | |     `-ImplicitCastExpr 0x12d88c5a0 <col:38, col:43> '<dependent type>' contains-errors <LValueToRValue>
|   | | |       `-RecoveryExpr 0x12d88c560 <col:38, col:43> '<dependent type>' contains-errors lvalue
|   | | |         `-DeclRefExpr 0x12d88c528 <col:38> 'struct kvm_dirty_log *' lvalue ParmVar 0x12d886c28 'log' 'struct kvm_dirty_log *'
|   | | |-CallExpr 0x12d88c778 <line:47:3, col:18> 'int'
|   | | | |-ImplicitCastExpr 0x12d88c760 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12d88c720 <col:3> 'int ()' Function 0x12d88c668 'kfree' 'int ()'
|   | | | `-ImplicitCastExpr 0x12d88c7a0 <col:9> 'struct kvm_memslots *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12d88c740 <col:9> 'struct kvm_memslots *' lvalue Var 0x12d88a048 'old_slots' 'struct kvm_memslots *'
|   | | |-CallExpr 0x12d88c930 <line:49:3, col:27> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12d88c898 <col:3> 'int ()' Function 0x12d88c7e0 'spin_lock' 'int ()'
|   | | | `-UnaryOperator 0x12d88c918 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x12d88c8f0 <col:14, col:19> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12d88c8b8 <col:14> 'struct kvm *' lvalue ParmVar 0x12d86a648 'kvm' 'struct kvm *'
|   | | |-CallExpr 0x12d88cf58 <line:50:3, col:50> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12d88ceb8 <col:3> 'int ()' Function 0x12d88ce00 'kvm_mmu_slot_remove_write_access' 'int ()'
|   | | | |-DeclRefExpr 0x12d88ced8 <col:36> 'struct kvm *' lvalue ParmVar 0x12d86a648 'kvm' 'struct kvm *'
|   | | | `-RecoveryExpr 0x12d88cf30 <col:41, col:46> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x12d88cef8 <col:41> 'struct kvm_dirty_log *' lvalue ParmVar 0x12d886c28 'log' 'struct kvm_dirty_log *'
|   | | |-CallExpr 0x12d88d100 <line:51:3, col:29> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12d88d068 <col:3> 'int ()' Function 0x12d88cfb0 'spin_unlock' 'int ()'
|   | | | `-UnaryOperator 0x12d88d0e8 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x12d88d0c0 <col:16, col:21> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12d88d088 <col:16> 'struct kvm *' lvalue ParmVar 0x12d86a648 'kvm' 'struct kvm *'
|   | | `-IfStmt 0x12d88d338 <line:54:3, line:55:9>
|   | |   |-CallExpr 0x12d88d2e8 <line:54:7, col:54> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x12d88d228 <col:7> 'int ()' Function 0x12d88d170 'copy_to_user' 'int ()'
|   | |   | |-RecoveryExpr 0x12d88d280 <col:20, col:25> '<dependent type>' contains-errors lvalue
|   | |   | | `-DeclRefExpr 0x12d88d248 <col:20> 'struct kvm_dirty_log *' lvalue ParmVar 0x12d886c28 'log' 'struct kvm_dirty_log *'
|   | |   | |-DeclRefExpr 0x12d88d2a8 <col:39> 'unsigned long *' lvalue Var 0x12d88a138 'dirty_bitmap' 'unsigned long *'
|   | |   | `-DeclRefExpr 0x12d88d2c8 <col:53> 'unsigned long' lvalue Var 0x12d887198 'n' 'unsigned long'
|   | |   `-GotoStmt 0x12d88d320 <line:55:4, col:9> 'out' 0x12d8876a0
|   | `-CompoundStmt 0x12d88d600 <line:56:9, line:60:2>
|   |   `-IfStmt 0x12d88d5e0 <line:58:3, line:59:9>
|   |     |-CallExpr 0x12d88d598 <line:58:7, col:38> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x12d88d4f8 <col:7> 'int ()' Function 0x12d88d440 'clear_user' 'int ()'
|   |     | |-RecoveryExpr 0x12d88d550 <col:18, col:23> '<dependent type>' contains-errors lvalue
|   |     | | `-DeclRefExpr 0x12d88d518 <col:18> 'struct kvm_dirty_log *' lvalue ParmVar 0x12d886c28 'log' 'struct kvm_dirty_log *'
|   |     | `-DeclRefExpr 0x12d88d578 <col:37> 'unsigned long' lvalue Var 0x12d887198 'n' 'unsigned long'
|   |     `-GotoStmt 0x12d88d5c8 <line:59:4, col:9> 'out' 0x12d8876a0
|   |-BinaryOperator 0x12d88d688 <line:62:2, col:6> 'int' '='
|   | |-DeclRefExpr 0x12d88d648 <col:2> 'int' lvalue Var 0x12d886e60 'r' 'int'
|   | `-IntegerLiteral 0x12d88d668 <col:6> 'int' 0
|   |-LabelStmt 0x12d88d848 <line:63:1, line:64:31> 'out'
|   | `-CallExpr 0x12d88d820 <col:2, col:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d88d788 <col:2> 'int ()' Function 0x12d88d6d0 'mutex_unlock' 'int ()'
|   |   `-UnaryOperator 0x12d88d808 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12d88d7e0 <col:16, col:21> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x12d88d7a8 <col:16> 'struct kvm *' lvalue ParmVar 0x12d86a648 'kvm' 'struct kvm *'
|   `-ReturnStmt 0x12d88d8a0 <line:65:2, col:9>
|     `-ImplicitCastExpr 0x12d88d888 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12d88d868 <col:9> 'int' lvalue Var 0x12d886e60 'r' 'int'
|-FunctionDecl 0x12d88a448 <line:33:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x12d88a548 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12d88a5b0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x12d88a618 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12d88a4f0 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x12d88bb98 <line:39:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12d88bc98 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12d88bd00 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12d88bd68 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12d88bc40 <<invalid sloc>> Implicit 882
