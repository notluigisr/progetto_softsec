TranslationUnitDecl 0x157855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1578564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157855bd0 '__int128'
|-TypedefDecl 0x157856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157855bf0 'unsigned __int128'
|-TypedefDecl 0x16000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x16000bc00 'struct __NSConstantString_tag'
|   `-Record 0x157856580 '__NSConstantString_tag'
|-TypedefDecl 0x16000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157855d90 '__SVInt8_t'
|-TypedefDecl 0x16000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157855db0 '__SVInt16_t'
|-TypedefDecl 0x16000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157855dd0 '__SVInt32_t'
|-TypedefDecl 0x16000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157855df0 '__SVInt64_t'
|-TypedefDecl 0x16000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157855e10 '__SVUint8_t'
|-TypedefDecl 0x16000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157855e30 '__SVUint16_t'
|-TypedefDecl 0x16000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157855e50 '__SVUint32_t'
|-TypedefDecl 0x16000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157855e70 '__SVUint64_t'
|-TypedefDecl 0x16000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157855e90 '__SVFloat16_t'
|-TypedefDecl 0x16000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157855eb0 '__SVFloat32_t'
|-TypedefDecl 0x16000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157855ed0 '__SVFloat64_t'
|-TypedefDecl 0x16000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x16000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x16000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x16000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x16000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x16000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x16000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x16000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x16000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x16000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x16000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x16000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x16000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x16000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157856090 '__clang_svint8x3_t'
|-TypedefDecl 0x16000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1578560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x16000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1578560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x16000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1578560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x16000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x16000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x16000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x16000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x16000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x16000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1578561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x16000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1578561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x16000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1578561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x16000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157856210 '__clang_svint8x4_t'
|-TypedefDecl 0x16000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157856230 '__clang_svint16x4_t'
|-TypedefDecl 0x16000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157856250 '__clang_svint32x4_t'
|-TypedefDecl 0x16000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157856270 '__clang_svint64x4_t'
|-TypedefDecl 0x16000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x16000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1578562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x16000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1578562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x16000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1578562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x16000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x16000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x16000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x16000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x16000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157856390 '__SVBool_t'
|-TypedefDecl 0x16000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1578563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x16000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1578563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x16000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1578563f0 '__SVCount_t'
|-TypedefDecl 0x16000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x16000dbb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-TypedefDecl 0x16000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x16000dbb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
`-FunctionDecl 0x160026948 <dataset_diviso_filec/func5007_nonvuln.c:1:1, line:28:1> line:1:12 compat_calc_entry 'int (const struct arpt_entry *, const struct xt_table_info *, const void *, struct xt_table_info *)' static
  |-ParmVarDecl 0x16000e248 <col:30, col:55> col:55 used e 'const struct arpt_entry *'
  |-ParmVarDecl 0x160026628 <line:2:9, col:37> col:37 used info 'const struct xt_table_info *'
  |-ParmVarDecl 0x1600266d8 <line:3:9, col:21> col:21 used base 'const void *'
  |-ParmVarDecl 0x1600267f8 <col:27, col:49> col:49 used newinfo 'struct xt_table_info *'
  `-CompoundStmt 0x161009678 <line:4:1, line:28:1>
    |-DeclStmt 0x160026c48 <line:5:2, col:33>
    | |-RecordDecl 0x160026a58 <col:8, col:15> col:15 struct xt_entry_target
    | `-VarDecl 0x160026bc8 <col:2, col:32> col:32 used t 'const struct xt_entry_target *'
    |-DeclStmt 0x160026ce0 <line:6:2, col:27>
    | `-VarDecl 0x160026c78 <col:2, col:15> col:15 used entry_offset 'unsigned int'
    |-DeclStmt 0x160026e98 <line:7:2, col:17>
    | |-VarDecl 0x160026d10 <col:2, col:6> col:6 used off 'int'
    | |-VarDecl 0x160026d90 <col:2, col:11> col:11 used i 'int'
    | `-VarDecl 0x160026e10 <col:2, col:14> col:14 used ret 'int'
    |-BinaryOperator 0x160027120 <line:10:2, col:29> 'unsigned int' '='
    | |-DeclRefExpr 0x160027018 <col:2> 'unsigned int' lvalue Var 0x160026c78 'entry_offset' 'unsigned int'
    | `-ImplicitCastExpr 0x160027108 <col:17, col:29> 'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x1600270e8 <col:17, col:29> 'long' '-'
    |     |-CStyleCastExpr 0x160027088 <col:17, col:25> 'void *' <BitCast>
    |     | `-ImplicitCastExpr 0x160027070 <col:25> 'const struct arpt_entry *' <LValueToRValue> part_of_explicit_cast
    |     |   `-DeclRefExpr 0x160027038 <col:25> 'const struct arpt_entry *' lvalue ParmVar 0x16000e248 'e' 'const struct arpt_entry *'
    |     `-ImplicitCastExpr 0x1600270d0 <col:29> 'const void *' <LValueToRValue>
    |       `-DeclRefExpr 0x1600270b0 <col:29> 'const void *' lvalue ParmVar 0x1600266d8 'base' 'const void *'
    |-BinaryOperator 0x160027370 <line:12:2, col:25> 'const struct xt_entry_target *' '='
    | |-DeclRefExpr 0x160027140 <col:2> 'const struct xt_entry_target *' lvalue Var 0x160026bc8 't' 'const struct xt_entry_target *'
    | `-ImplicitCastExpr 0x160027358 <col:6, col:25> 'const struct xt_entry_target *' <IntegralToPointer>
    |   `-CallExpr 0x160027318 <col:6, col:25> 'int'
    |     |-ImplicitCastExpr 0x160027300 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x160027290 <col:6> 'int ()' Function 0x1600271d8 'arpt_get_target_c' 'int ()'
    |     `-ImplicitCastExpr 0x160027340 <col:24> 'const struct arpt_entry *' <LValueToRValue>
    |       `-DeclRefExpr 0x1600272b0 <col:24> 'const struct arpt_entry *' lvalue ParmVar 0x16000e248 'e' 'const struct arpt_entry *'
    |-CompoundAssignOperator 0x1600275c8 <line:13:2, col:51> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x160027390 <col:2> 'int' lvalue Var 0x160026d10 'off' 'int'
    | `-CallExpr 0x1600275a0 <col:9, col:51> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x160027490 <col:9> 'int ()' Function 0x1600273d8 'xt_compat_target_offset' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x160027558 <col:33, col:45> '<dependent type>' contains-errors lvalue .target
    |     `-CXXDependentScopeMemberExpr 0x160027510 <col:33, col:38> '<dependent type>' contains-errors lvalue .kernel
    |       `-RecoveryExpr 0x1600274e8 <col:33, col:36> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x1600274b0 <col:33> 'const struct xt_entry_target *' lvalue Var 0x160026bc8 't' 'const struct xt_entry_target *'
    |-CompoundAssignOperator 0x161008880 <line:14:2, col:19> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x161008838 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x161008800 <col:2> 'struct xt_table_info *' lvalue ParmVar 0x1600267f8 'newinfo' 'struct xt_table_info *'
    | `-DeclRefExpr 0x161008860 <col:19> 'int' lvalue Var 0x160026d10 'off' 'int'
    |-BinaryOperator 0x161008ad8 <line:15:2, col:59> 'int' contains-errors '='
    | |-DeclRefExpr 0x1610088b0 <col:2> 'int' lvalue Var 0x160026e10 'ret' 'int'
    | `-CallExpr 0x161008aa0 <col:8, col:59> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1610089b0 <col:8> 'int ()' Function 0x1610088f8 'xt_compat_add_offset' 'int ()'
    |   |-RecoveryExpr 0x161008a80 <col:29> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x1610089e8 <col:42> 'unsigned int' lvalue Var 0x160026c78 'entry_offset' 'unsigned int'
    |   `-DeclRefExpr 0x161008a08 <col:56> 'int' lvalue Var 0x160026d10 'off' 'int'
    |-IfStmt 0x161008b78 <line:16:2, line:17:10>
    | |-ImplicitCastExpr 0x161008b18 <line:16:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x161008af8 <col:6> 'int' lvalue Var 0x160026e10 'ret' 'int'
    | `-ReturnStmt 0x161008b68 <line:17:3, col:10>
    |   `-ImplicitCastExpr 0x161008b50 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x161008b30 <col:10> 'int' lvalue Var 0x160026e10 'ret' 'int'
    |-ForStmt 0x161009610 <line:19:2, line:26:2>
    | |-BinaryOperator 0x161008bd8 <line:19:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x161008b98 <col:7> 'int' lvalue Var 0x160026d90 'i' 'int'
    | | `-IntegerLiteral 0x161008bb8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x161008c70 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x161008bf8 <col:14> 'int' lvalue Var 0x160026d90 'i' 'int'
    | | `-RecoveryExpr 0x161008c50 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x161008cb0 <col:35, col:36> 'int' postfix '++'
    | | `-DeclRefExpr 0x161008c90 <col:35> 'int' lvalue Var 0x160026d90 'i' 'int'
    | `-CompoundStmt 0x1610095f0 <col:40, line:26:2>
    |   |-IfStmt 0x161009170 <line:20:3, line:22:30>
    |   | |-BinaryOperator 0x161009030 <line:20:7, line:21:61> 'int' contains-errors '&&'
    |   | | |-ArraySubscriptExpr 0x161008d78 <line:20:7, col:25> '<dependent type>' contains-errors lvalue
    |   | | | |-ImplicitCastExpr 0x161008d48 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | | `-RecoveryExpr 0x161008d00 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |   | | | |   `-DeclRefExpr 0x161008cc8 <col:7> 'const struct xt_table_info *' lvalue ParmVar 0x160026628 'info' 'const struct xt_table_info *'
    |   | | | `-ImplicitCastExpr 0x161008d60 <col:24> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x161008d28 <col:24> 'int' lvalue Var 0x160026d90 'i' 'int'
    |   | | `-ParenExpr 0x161009010 <line:21:7, col:61> 'int' contains-errors
    |   | |   `-BinaryOperator 0x161008ff0 <col:8, col:60> 'int' contains-errors '<'
    |   | |     |-ImplicitCastExpr 0x161008fc0 <col:8> 'const struct arpt_entry *' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x161008d98 <col:8> 'const struct arpt_entry *' lvalue ParmVar 0x16000e248 'e' 'const struct arpt_entry *'
    |   | |     `-ImplicitCastExpr 0x161008fd8 <col:12, col:60> 'const struct arpt_entry *' contains-errors <BitCast>
    |   | |       `-CStyleCastExpr 0x161008f98 <col:12, col:60> 'struct arpt_entry *' contains-errors <Dependent>
    |   | |         `-ParenExpr 0x161008f78 <col:33, col:60> '<dependent type>' contains-errors
    |   | |           `-BinaryOperator 0x161008ea8 <col:34, col:59> '<dependent type>' contains-errors '+'
    |   | |             |-DeclRefExpr 0x161008db8 <col:34> 'const void *' lvalue ParmVar 0x1600266d8 'base' 'const void *'
    |   | |             `-ArraySubscriptExpr 0x161008e88 <col:41, col:59> '<dependent type>' contains-errors lvalue
    |   | |               |-ImplicitCastExpr 0x161008e58 <col:41, col:47> '<dependent type>' contains-errors <LValueToRValue>
    |   | |               | `-RecoveryExpr 0x161008e10 <col:41, col:47> '<dependent type>' contains-errors lvalue
    |   | |               |   `-DeclRefExpr 0x161008dd8 <col:41> 'const struct xt_table_info *' lvalue ParmVar 0x160026628 'info' 'const struct xt_table_info *'
    |   | |               `-ImplicitCastExpr 0x161008e70 <col:58> 'int' <LValueToRValue>
    |   | |                 `-DeclRefExpr 0x161008e38 <col:58> 'int' lvalue Var 0x160026d90 'i' 'int'
    |   | `-CompoundAssignOperator 0x161009140 <line:22:4, col:30> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-ArraySubscriptExpr 0x161009100 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x1610090d0 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x161009088 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x161009050 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x1600267f8 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x1610090e8 <col:24> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1610090b0 <col:24> 'int' lvalue Var 0x160026d90 'i' 'int'
    |   |   `-DeclRefExpr 0x161009120 <col:30> 'int' lvalue Var 0x160026d10 'off' 'int'
    |   `-IfStmt 0x1610095d0 <line:23:3, line:25:29>
    |     |-BinaryOperator 0x161009490 <line:23:7, line:24:60> 'int' contains-errors '&&'
    |     | |-ArraySubscriptExpr 0x161009240 <line:23:7, col:24> '<dependent type>' contains-errors lvalue
    |     | | |-ImplicitCastExpr 0x161009210 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | `-RecoveryExpr 0x1610091c8 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |     | | |   `-DeclRefExpr 0x161009190 <col:7> 'const struct xt_table_info *' lvalue ParmVar 0x160026628 'info' 'const struct xt_table_info *'
    |     | | `-ImplicitCastExpr 0x161009228 <col:23> 'int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x1610091f0 <col:23> 'int' lvalue Var 0x160026d90 'i' 'int'
    |     | `-ParenExpr 0x161009470 <line:24:7, col:60> 'int' contains-errors
    |     |   `-BinaryOperator 0x161009450 <col:8, col:59> 'int' contains-errors '<'
    |     |     |-ImplicitCastExpr 0x161009420 <col:8> 'const struct arpt_entry *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x161009260 <col:8> 'const struct arpt_entry *' lvalue ParmVar 0x16000e248 'e' 'const struct arpt_entry *'
    |     |     `-ImplicitCastExpr 0x161009438 <col:12, col:59> 'const struct arpt_entry *' contains-errors <BitCast>
    |     |       `-CStyleCastExpr 0x1610093f8 <col:12, col:59> 'struct arpt_entry *' contains-errors <Dependent>
    |     |         `-ParenExpr 0x1610093d8 <col:33, col:59> '<dependent type>' contains-errors
    |     |           `-BinaryOperator 0x161009370 <col:34, col:58> '<dependent type>' contains-errors '+'
    |     |             |-DeclRefExpr 0x161009280 <col:34> 'const void *' lvalue ParmVar 0x1600266d8 'base' 'const void *'
    |     |             `-ArraySubscriptExpr 0x161009350 <col:41, col:58> '<dependent type>' contains-errors lvalue
    |     |               |-ImplicitCastExpr 0x161009320 <col:41, col:47> '<dependent type>' contains-errors <LValueToRValue>
    |     |               | `-RecoveryExpr 0x1610092d8 <col:41, col:47> '<dependent type>' contains-errors lvalue
    |     |               |   `-DeclRefExpr 0x1610092a0 <col:41> 'const struct xt_table_info *' lvalue ParmVar 0x160026628 'info' 'const struct xt_table_info *'
    |     |               `-ImplicitCastExpr 0x161009338 <col:57> 'int' <LValueToRValue>
    |     |                 `-DeclRefExpr 0x161009300 <col:57> 'int' lvalue Var 0x160026d90 'i' 'int'
    |     `-CompoundAssignOperator 0x1610095a0 <line:25:4, col:29> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |-ArraySubscriptExpr 0x161009560 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |       | |-ImplicitCastExpr 0x161009530 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       | | `-RecoveryExpr 0x1610094e8 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |       | |   `-DeclRefExpr 0x1610094b0 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x1600267f8 'newinfo' 'struct xt_table_info *'
    |       | `-ImplicitCastExpr 0x161009548 <col:23> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x161009510 <col:23> 'int' lvalue Var 0x160026d90 'i' 'int'
    |       `-DeclRefExpr 0x161009580 <col:29> 'int' lvalue Var 0x160026d10 'off' 'int'
    `-ReturnStmt 0x161009668 <line:27:2, col:9>
      `-IntegerLiteral 0x161009648 <col:9> 'int' 0
