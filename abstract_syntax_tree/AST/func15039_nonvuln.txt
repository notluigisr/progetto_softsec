TranslationUnitDecl 0x125855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1258564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125855bd0 '__int128'
|-TypedefDecl 0x125856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125855bf0 'unsigned __int128'
|-TypedefDecl 0x125926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x125926800 'struct __NSConstantString_tag'
|   `-Record 0x125856580 '__NSConstantString_tag'
|-TypedefDecl 0x125926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125855d90 '__SVInt8_t'
|-TypedefDecl 0x125926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125855db0 '__SVInt16_t'
|-TypedefDecl 0x125926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125855dd0 '__SVInt32_t'
|-TypedefDecl 0x125926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125855df0 '__SVInt64_t'
|-TypedefDecl 0x125926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125855e10 '__SVUint8_t'
|-TypedefDecl 0x125926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125855e30 '__SVUint16_t'
|-TypedefDecl 0x125926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125855e50 '__SVUint32_t'
|-TypedefDecl 0x125926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125855e70 '__SVUint64_t'
|-TypedefDecl 0x125926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125855e90 '__SVFloat16_t'
|-TypedefDecl 0x125926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125855eb0 '__SVFloat32_t'
|-TypedefDecl 0x125926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125855ed0 '__SVFloat64_t'
|-TypedefDecl 0x125926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x125926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x125926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x125927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1259270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x125927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x125927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1259271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x125927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1259272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x125927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x125927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1259273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x125927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1259274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1258560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x125927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1258560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x125927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1258560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1259275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x125927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1259276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x125927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x125927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x125928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1258561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x125928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1258561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1259280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1258561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x125928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1259281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125856230 '__clang_svint16x4_t'
|-TypedefDecl 0x125928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125856250 '__clang_svint32x4_t'
|-TypedefDecl 0x125928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1259282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x125928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1258562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1259283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1258562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x125928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1258562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x125928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1259284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x125928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1259285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x125928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125856390 '__SVBool_t'
|-TypedefDecl 0x125928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1258563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1259286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1258563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x125928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1258563f0 '__SVCount_t'
|-TypedefDecl 0x1259287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1259287b0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-TypedefDecl 0x125928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1259287b0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
`-FunctionDecl 0x125928be8 <dataset_diviso_filec/func15039_nonvuln.c:1:1, line:49:1> line:1:1 invalid CheckKeyBehaviors 'int (int, int *, int **, int *)'
  |-ParmVarDecl 0x1259288f0 <col:19, col:30> col:30 invalid xkb 'int'
  |-ParmVarDecl 0x1259289a8 <line:2:19, col:34> col:34 referenced invalid req 'int *'
  |-ParmVarDecl 0x125928a60 <line:3:19, col:42> col:42 invalid wireRtrn 'int **'
  |-ParmVarDecl 0x125928ae0 <col:52, col:57> col:57 used errorRtrn 'int *'
  `-CompoundStmt 0x125944548 <line:4:1, line:49:1>
    |-DeclStmt 0x125928d80 <line:5:5, col:51>
    | `-VarDecl 0x125928cc8 <col:5, col:35> col:35 invalid wire 'int *' register
    |-DeclStmt 0x125928e80 <line:6:5, col:50>
    | `-VarDecl 0x125928db0 <col:5, col:30> col:30 invalid server 'int' register
    |-DeclStmt 0x125928f18 <line:7:5, col:24>
    | `-VarDecl 0x125928eb0 <col:5, col:23> col:23 used i 'unsigned int' register
    |-DeclStmt 0x125942080 <line:8:5, col:25>
    | |-VarDecl 0x125928f48 <col:5, col:14> col:14 used first 'unsigned int'
    | `-VarDecl 0x125942000 <col:5, col:21> col:21 used last 'unsigned int'
    |-IfStmt 0x1259424f0 <line:10:5, line:14:5>
    | |-RecoveryExpr 0x125942220 <line:10:9, col:79> '_Bool' contains-errors
    | `-CompoundStmt 0x1259424c8 <col:82, line:14:5>
    |   |-CompoundAssignOperator 0x125942398 <line:11:9, col:26> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-CXXDependentScopeMemberExpr 0x125942288 <col:9, col:14> '<dependent type>' contains-errors lvalue ->present
    |   | | `-RecoveryExpr 0x125942260 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x125942240 <col:9> 'int *' lvalue ParmVar 0x1259289a8 'req' 'int *'
    |   | `-UnaryOperator 0x125942380 <col:25, col:26> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   |   `-ImplicitCastExpr 0x125942368 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x125942348 <col:26> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x125942478 <line:12:9, col:30> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x125942410 <col:9, col:14> '<dependent type>' contains-errors lvalue ->nKeyBehaviors
    |   | | `-RecoveryExpr 0x1259423e8 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x1259423c8 <col:9> 'int *' lvalue ParmVar 0x1259289a8 'req' 'int *'
    |   | `-IntegerLiteral 0x125942458 <col:30> 'int' 0
    |   `-ReturnStmt 0x1259424b8 <line:13:9, col:16>
    |     `-IntegerLiteral 0x125942498 <col:16> 'int' 1
    |-BinaryOperator 0x125942598 <line:15:5, col:18> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x125942510 <col:5> 'unsigned int' lvalue Var 0x125928f48 'first' 'unsigned int'
    | `-CXXDependentScopeMemberExpr 0x125942550 <col:13, col:18> '<dependent type>' contains-errors lvalue ->firstKeyBehavior
    |   `-RecoveryExpr 0x125942530 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x125942708 <line:16:5, col:57> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x1259425b8 <col:5> 'unsigned int' lvalue Var 0x125942000 'last' 'unsigned int'
    | `-BinaryOperator 0x1259426e8 <col:12, col:57> '<dependent type>' contains-errors '-'
    |   |-BinaryOperator 0x1259426a8 <col:12, col:41> '<dependent type>' contains-errors '+'
    |   | |-CXXDependentScopeMemberExpr 0x1259425f8 <col:12, col:17> '<dependent type>' contains-errors lvalue ->firstKeyBehavior
    |   | | `-RecoveryExpr 0x1259425d8 <col:12> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x125942660 <col:36, col:41> '<dependent type>' contains-errors lvalue ->nKeyBehaviors
    |   |   `-RecoveryExpr 0x125942640 <col:36> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1259426c8 <col:57> 'int' 1
    |-IfStmt 0x125942af0 <line:17:5, line:20:5>
    | |-BinaryOperator 0x1259427b0 <line:17:9, col:22> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x125942728 <col:9> 'unsigned int' lvalue Var 0x125928f48 'first' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x125942768 <col:17, col:22> '<dependent type>' contains-errors lvalue ->minKeyCode
    | |   `-RecoveryExpr 0x125942748 <col:17> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125942ad0 <col:34, line:20:5>
    |   |-BinaryOperator 0x125942a80 <line:18:9, col:63> 'int' contains-errors '='
    |   | |-UnaryOperator 0x125942808 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1259427f0 <col:10> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1259427d0 <col:10> 'int *' lvalue ParmVar 0x125928ae0 'errorRtrn' 'int *'
    |   | `-CallExpr 0x125942a48 <col:22, col:63> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x125942980 <col:22> 'int ()' Function 0x1259428c8 '_XkbErrCode3' 'int ()'
    |   |   |-IntegerLiteral 0x1259429a0 <col:35> 'int' 49
    |   |   |-DeclRefExpr 0x1259429c0 <col:41> 'unsigned int' lvalue Var 0x125928f48 'first' 'unsigned int'
    |   |   `-CXXDependentScopeMemberExpr 0x125942a00 <col:48, col:53> '<dependent type>' contains-errors lvalue ->minKeyCode
    |   |     `-RecoveryExpr 0x1259429e0 <col:48> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x125942ac0 <line:19:9, col:16>
    |     `-IntegerLiteral 0x125942aa0 <col:16> 'int' 0
    |-IfStmt 0x125942d78 <line:21:5, line:24:5>
    | |-BinaryOperator 0x125942b98 <line:21:9, col:21> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x125942b10 <col:9> 'unsigned int' lvalue Var 0x125942000 'last' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x125942b50 <col:16, col:21> '<dependent type>' contains-errors lvalue ->maxKeyCode
    | |   `-RecoveryExpr 0x125942b30 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125942d58 <col:33, line:24:5>
    |   |-BinaryOperator 0x125942d08 <line:22:9, col:62> 'int' contains-errors '='
    |   | |-UnaryOperator 0x125942bf0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x125942bd8 <col:10> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x125942bb8 <col:10> 'int *' lvalue ParmVar 0x125928ae0 'errorRtrn' 'int *'
    |   | `-CallExpr 0x125942cd0 <col:22, col:62> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x125942c08 <col:22> 'int ()' Function 0x1259428c8 '_XkbErrCode3' 'int ()'
    |   |   |-IntegerLiteral 0x125942c28 <col:35> 'int' 50
    |   |   |-DeclRefExpr 0x125942c48 <col:41> 'unsigned int' lvalue Var 0x125942000 'last' 'unsigned int'
    |   |   `-CXXDependentScopeMemberExpr 0x125942c88 <col:47, col:52> '<dependent type>' contains-errors lvalue ->maxKeyCode
    |   |     `-RecoveryExpr 0x125942c68 <col:47> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x125942d48 <line:23:9, col:16>
    |     `-IntegerLiteral 0x125942d28 <col:16> 'int' 0
    |-ForStmt 0x125944450 <line:26:5, line:46:5>
    | |-BinaryOperator 0x125942df0 <line:26:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x125942d98 <col:10> 'unsigned int' lvalue Var 0x125928eb0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x125942dd8 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x125942db8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x125942e98 <col:17, col:26> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x125942e10 <col:17> 'unsigned int' lvalue Var 0x125928eb0 'i' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x125942e50 <col:21, col:26> '<dependent type>' contains-errors lvalue ->totalKeyBehaviors
    | |   `-RecoveryExpr 0x125942e30 <col:21> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x125942f28 <col:45, col:54> '<dependent type>' contains-errors ','
    | | |-UnaryOperator 0x125942ed8 <col:45, col:46> 'unsigned int' postfix '++'
    | | | `-DeclRefExpr 0x125942eb8 <col:45> 'unsigned int' lvalue Var 0x125928eb0 'i' 'unsigned int'
    | | `-UnaryOperator 0x125942f10 <col:50, col:54> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |   `-RecoveryExpr 0x125942ef0 <col:50> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125944420 <col:58, line:46:5>
    |   |-IfStmt 0x1259433d0 <line:27:9, line:30:9>
    |   | |-BinaryOperator 0x1259430e8 <line:27:13, col:53> 'int' contains-errors '||'
    |   | | |-ParenExpr 0x125943000 <col:13, col:31> 'int' contains-errors
    |   | | | `-BinaryOperator 0x125942fd0 <col:14, col:26> 'int' contains-errors '<'
    |   | | |   |-CXXDependentScopeMemberExpr 0x125942f68 <col:14, col:20> '<dependent type>' contains-errors lvalue ->key
    |   | | |   | `-RecoveryExpr 0x125942f48 <col:14> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x125942fb0 <col:26> 'unsigned int' lvalue Var 0x125928f48 'first' 'unsigned int'
    |   | | `-ParenExpr 0x1259430c8 <col:36, col:53> 'int' contains-errors
    |   | |   `-BinaryOperator 0x1259430a8 <col:37, col:49> 'int' contains-errors '>'
    |   | |     |-CXXDependentScopeMemberExpr 0x125943040 <col:37, col:43> '<dependent type>' contains-errors lvalue ->key
    |   | |     | `-RecoveryExpr 0x125943020 <col:37> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x125943088 <col:49> 'unsigned int' lvalue Var 0x125942000 'last' 'unsigned int'
    |   | `-CompoundStmt 0x1259433b0 <col:56, line:30:9>
    |   |   |-BinaryOperator 0x125943360 <line:28:13, col:67> 'int' contains-errors '='
    |   |   | |-UnaryOperator 0x125943140 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x125943128 <col:14> 'int *' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x125943108 <col:14> 'int *' lvalue ParmVar 0x125928ae0 'errorRtrn' 'int *'
    |   |   | `-CallExpr 0x125943320 <col:26, col:67> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x125943238 <col:26> 'int ()' Function 0x125943180 '_XkbErrCode4' 'int ()'
    |   |   |   |-IntegerLiteral 0x125943258 <col:39> 'int' 51
    |   |   |   |-DeclRefExpr 0x125943278 <col:45> 'unsigned int' lvalue Var 0x125928f48 'first' 'unsigned int'
    |   |   |   |-DeclRefExpr 0x125943298 <col:52> 'unsigned int' lvalue Var 0x125942000 'last' 'unsigned int'
    |   |   |   `-CXXDependentScopeMemberExpr 0x1259432d8 <col:58, col:64> '<dependent type>' contains-errors lvalue ->key
    |   |   |     `-RecoveryExpr 0x1259432b8 <col:58> '<dependent type>' contains-errors lvalue
    |   |   `-ReturnStmt 0x1259433a0 <line:29:13, col:20>
    |   |     `-IntegerLiteral 0x125943380 <col:20> 'int' 0
    |   |-IfStmt 0x125943b18 <line:31:9, line:36:9>
    |   | |-RecoveryExpr 0x1259438f0 <line:31:13, line:33:63> '_Bool' contains-errors
    |   | `-CompoundStmt 0x125943af8 <col:66, line:36:9>
    |   |   |-BinaryOperator 0x125943aa8 <line:34:13, col:66> 'int' contains-errors '='
    |   |   | |-UnaryOperator 0x125943948 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x125943930 <col:14> 'int *' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x125943910 <col:14> 'int *' lvalue ParmVar 0x125928ae0 'errorRtrn' 'int *'
    |   |   | `-CallExpr 0x125943a70 <col:26, col:66> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x125943960 <col:26> 'int ()' Function 0x1259428c8 '_XkbErrCode3' 'int ()'
    |   |   |   |-IntegerLiteral 0x125943980 <col:39> 'int' 51
    |   |   |   |-CXXDependentScopeMemberExpr 0x1259439c0 <col:45, col:51> '<dependent type>' contains-errors lvalue ->key
    |   |   |   | `-RecoveryExpr 0x1259439a0 <col:45> '<dependent type>' contains-errors lvalue
    |   |   |   `-CXXDependentScopeMemberExpr 0x125943a28 <col:56, col:62> '<dependent type>' contains-errors lvalue ->type
    |   |   |     `-RecoveryExpr 0x125943a08 <col:56> '<dependent type>' contains-errors lvalue
    |   |   `-ReturnStmt 0x125943ae8 <line:35:13, col:20>
    |   |     `-IntegerLiteral 0x125943ac8 <col:20> 'int' 0
    |   |-IfStmt 0x125943fc8 <line:37:9, line:42:9>
    |   | |-RecoveryExpr 0x125943ca0 <line:37:13, line:38:69> '_Bool' contains-errors
    |   | `-CompoundStmt 0x125943fa8 <col:72, line:42:9>
    |   |   |-BinaryOperator 0x125943f58 <line:39:13, line:40:56> 'int' contains-errors '='
    |   |   | |-UnaryOperator 0x125943ee0 <line:39:13, col:14> 'int' lvalue prefix '*' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x125943ec8 <col:14> 'int *' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x125943cc0 <col:14> 'int *' lvalue ParmVar 0x125928ae0 'errorRtrn' 'int *'
    |   |   | `-CallExpr 0x125943f18 <col:26, line:40:56> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x125943d10 <line:39:26> 'int ()' Function 0x125943180 '_XkbErrCode4' 'int ()'
    |   |   |   |-IntegerLiteral 0x125943d30 <col:39> 'int' 52
    |   |   |   |-CXXDependentScopeMemberExpr 0x125943d70 <col:45, col:51> '<dependent type>' contains-errors lvalue ->key
    |   |   |   | `-RecoveryExpr 0x125943d50 <col:45> '<dependent type>' contains-errors lvalue
    |   |   |   |-CXXDependentScopeMemberExpr 0x125943dd8 <col:56, col:62> '<dependent type>' contains-errors lvalue ->data
    |   |   |   | `-RecoveryExpr 0x125943db8 <col:56> '<dependent type>' contains-errors lvalue
    |   |   |   `-RecoveryExpr 0x125943ef8 <line:40:39> '<dependent type>' contains-errors lvalue
    |   |   `-ReturnStmt 0x125943f98 <line:41:13, col:20>
    |   |     `-IntegerLiteral 0x125943f78 <col:20> 'int' 0
    |   `-IfStmt 0x125944400 <line:43:9, line:45:9>
    |     |-RecoveryExpr 0x125944140 <line:43:13, col:76> '_Bool' contains-errors
    |     `-CompoundStmt 0x1259443e8 <col:79, line:45:9>
    |       `-CallExpr 0x125944398 <line:44:13, col:66> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x125944240 <col:13> 'int ()' Function 0x125944188 'CHK_KEY_RANGE2' 'int ()'
    |         |-IntegerLiteral 0x125944260 <col:28> 'int' 53
    |         |-CXXDependentScopeMemberExpr 0x1259442a0 <col:34, col:40> '<dependent type>' contains-errors lvalue ->key
    |         | `-RecoveryExpr 0x125944280 <col:34> '<dependent type>' contains-errors lvalue
    |         |-IntegerLiteral 0x1259442e8 <col:45> 'int' 1
    |         |-RecoveryExpr 0x125944308 <col:48> '<dependent type>' contains-errors lvalue
    |         |-UnaryOperator 0x125944360 <col:53, col:54> 'int' lvalue prefix '*' cannot overflow
    |         | `-ImplicitCastExpr 0x125944348 <col:54> 'int *' <LValueToRValue>
    |         |   `-DeclRefExpr 0x125944328 <col:54> 'int *' lvalue ParmVar 0x125928ae0 'errorRtrn' 'int *'
    |         `-IntegerLiteral 0x125944378 <col:65> 'int' 0
    |-BinaryOperator 0x1259444f8 <line:47:5, col:17> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x1259444c0 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1259444a8 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x125944488 <col:6> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x1259444d8 <col:17> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x125944538 <line:48:5, col:12>
      `-IntegerLiteral 0x125944518 <col:12> 'int' 1
