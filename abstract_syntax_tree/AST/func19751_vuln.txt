TranslationUnitDecl 0x130855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1308564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130855bd0 '__int128'
|-TypedefDecl 0x130856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130855bf0 'unsigned __int128'
|-TypedefDecl 0x13100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13100bc00 'struct __NSConstantString_tag'
|   `-Record 0x130856580 '__NSConstantString_tag'
|-TypedefDecl 0x13100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130855d90 '__SVInt8_t'
|-TypedefDecl 0x13100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130855db0 '__SVInt16_t'
|-TypedefDecl 0x13100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130855dd0 '__SVInt32_t'
|-TypedefDecl 0x13100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130855df0 '__SVInt64_t'
|-TypedefDecl 0x13100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130855e10 '__SVUint8_t'
|-TypedefDecl 0x13100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130855e30 '__SVUint16_t'
|-TypedefDecl 0x13100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130855e50 '__SVUint32_t'
|-TypedefDecl 0x13100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130855e70 '__SVUint64_t'
|-TypedefDecl 0x13100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130855e90 '__SVFloat16_t'
|-TypedefDecl 0x13100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1308560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1308560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1308560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1308561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1308561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1308561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1308562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1308562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1308562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130856390 '__SVBool_t'
|-TypedefDecl 0x13100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1308563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1308563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1308563f0 '__SVCount_t'
|-TypedefDecl 0x13100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13100dbb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-TypedefDecl 0x13100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13100dbb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
`-FunctionDecl 0x13100e008 <dataset_diviso_filec/func19751_vuln.c:1:1, line:36:1> line:1:1 invalid gdk_pixbuf_new 'int (int, int, int, int, int)'
  |-ParmVarDecl 0x13100dcf0 <col:17, col:31> col:31 invalid colorspace 'int'
  |-ParmVarDecl 0x13100dd70 <line:2:17, col:31> col:31 invalid has_alpha 'int'
  |-ParmVarDecl 0x13100ddf0 <line:3:17, col:31> col:31 used bits_per_sample 'int'
  |-ParmVarDecl 0x13100de70 <line:4:17, col:31> col:31 used width 'int'
  |-ParmVarDecl 0x13100def0 <line:5:17, col:31> col:31 used height 'int'
  `-CompoundStmt 0x131029108 <line:6:1, line:36:1>
    |-DeclStmt 0x13100e158 <line:7:2, col:13>
    | `-VarDecl 0x13100e0f0 <col:2, col:10> col:10 used buf 'char *'
    |-DeclStmt 0x13100e1f0 <line:8:2, col:14>
    | `-VarDecl 0x13100e188 <col:2, col:6> col:6 used channels 'int'
    |-DeclStmt 0x13100e288 <line:9:2, col:15>
    | `-VarDecl 0x13100e220 <col:2, col:6> col:6 used rowstride 'int'
    |-CallExpr 0x131027520 <line:12:2, col:62> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131027400 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x1310274e0 <col:24, col:38> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x131027420 <col:24> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1310274c0 <col:38> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x131027500 <col:58> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1310276c0 <line:13:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131027550 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x131027680 <col:24, col:43> 'int' '=='
    | | |-ImplicitCastExpr 0x131027668 <col:24> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x131027570 <col:24> 'int' lvalue ParmVar 0x13100ddf0 'bits_per_sample' 'int'
    | | `-IntegerLiteral 0x131027590 <col:43> 'int' 8
    | `-RecoveryExpr 0x1310276a0 <col:46> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x131027860 <line:14:2, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1310276f0 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x131027820 <col:24, col:32> 'int' '>'
    | | |-ImplicitCastExpr 0x131027808 <col:24> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x131027710 <col:24> 'int' lvalue ParmVar 0x13100de70 'width' 'int'
    | | `-IntegerLiteral 0x131027730 <col:32> 'int' 0
    | `-RecoveryExpr 0x131027840 <col:35> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x131027a00 <line:15:2, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131027890 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x1310279c0 <col:24, col:33> 'int' '>'
    | | |-ImplicitCastExpr 0x1310279a8 <col:24> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1310278b0 <col:24> 'int' lvalue ParmVar 0x13100def0 'height' 'int'
    | | `-IntegerLiteral 0x1310278d0 <col:33> 'int' 0
    | `-RecoveryExpr 0x1310279e0 <col:36> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x131027ae0 <line:17:2, col:29> 'int' contains-errors '='
    | |-DeclRefExpr 0x131027a30 <col:2> 'int' lvalue Var 0x13100e188 'channels' 'int'
    | `-ConditionalOperator 0x131027ab0 <col:13, col:29> '<dependent type>' contains-errors
    |   |-RecoveryExpr 0x131027a50 <col:13> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x131027a70 <col:25> 'int' 4
    |   `-IntegerLiteral 0x131027a90 <col:29> 'int' 3
    |-BinaryOperator 0x131027bb0 <line:18:9, col:29> 'int' '='
    | |-DeclRefExpr 0x131027b00 <col:9> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | `-BinaryOperator 0x131027b90 <col:21, col:29> 'int' '*'
    |   |-ImplicitCastExpr 0x131027b60 <col:21> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x131027b20 <col:21> 'int' lvalue ParmVar 0x13100de70 'width' 'int'
    |   `-ImplicitCastExpr 0x131027b78 <col:29> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x131027b40 <col:29> 'int' lvalue Var 0x13100e188 'channels' 'int'
    |-IfStmt 0x131027dd8 <line:19:9, line:20:24>
    | |-BinaryOperator 0x131027d70 <line:19:13, col:62> 'int' '||'
    | | |-BinaryOperator 0x131027c98 <col:13, col:37> 'int' '!='
    | | | |-BinaryOperator 0x131027c40 <col:13, col:25> 'int' '/'
    | | | | |-ImplicitCastExpr 0x131027c10 <col:13> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x131027bd0 <col:13> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | | | | `-ImplicitCastExpr 0x131027c28 <col:25> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x131027bf0 <col:25> 'int' lvalue Var 0x13100e188 'channels' 'int'
    | | | `-ImplicitCastExpr 0x131027c80 <col:37> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x131027c60 <col:37> 'int' lvalue ParmVar 0x13100de70 'width' 'int'
    | | `-BinaryOperator 0x131027d50 <col:46, col:62> 'int' '<'
    | |   |-BinaryOperator 0x131027d10 <col:46, col:58> 'int' '+'
    | |   | |-ImplicitCastExpr 0x131027cf8 <col:46> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x131027cb8 <col:46> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | |   | `-IntegerLiteral 0x131027cd8 <col:58> 'int' 3
    | |   `-IntegerLiteral 0x131027d30 <col:62> 'int' 0
    | `-ReturnStmt 0x131027dc8 <line:20:17, col:24>
    |   `-RecoveryExpr 0x131027da8 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x131027f08 <line:23:2, col:33> 'int' '='
    | |-DeclRefExpr 0x131027df8 <col:2> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | `-BinaryOperator 0x131027ee8 <col:14, col:33> 'int' '&'
    |   |-ParenExpr 0x131027e90 <col:14, col:28> 'int'
    |   | `-BinaryOperator 0x131027e70 <col:15, col:27> 'int' '+'
    |   |   |-ImplicitCastExpr 0x131027e58 <col:15> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x131027e18 <col:15> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    |   |   `-IntegerLiteral 0x131027e38 <col:27> 'int' 3
    |   `-UnaryOperator 0x131027ed0 <col:32, col:33> 'int' prefix '~' cannot overflow
    |     `-IntegerLiteral 0x131027eb0 <col:33> 'int' 3
    |-IfStmt 0x1310280f8 <line:26:9, line:27:24>
    | |-BinaryOperator 0x131028090 <line:26:13, col:35> 'int' contains-errors '!='
    | | |-BinaryOperator 0x131028070 <col:13, col:21> '<dependent type>' contains-errors '/'
    | | | |-RecoveryExpr 0x131028050 <col:13> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x131027fd0 <col:21> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | | `-DeclRefExpr 0x131028010 <col:35> 'int' lvalue ParmVar 0x13100def0 'height' 'int'
    | `-ReturnStmt 0x1310280e8 <line:27:17, col:24>
    |   `-RecoveryExpr 0x1310280c8 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1310282e0 <line:29:2, col:27> 'char *' contains-errors '='
    | |-DeclRefExpr 0x131028118 <col:2> 'char *' lvalue Var 0x13100e0f0 'buf' 'char *'
    | `-CallExpr 0x1310282b8 <col:8, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x131028218 <col:8> 'int ()' Function 0x131028160 'g_try_malloc' 'int ()'
    |   `-RecoveryExpr 0x131028298 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x131028398 <line:30:2, line:31:10>
    | |-UnaryOperator 0x131028338 <line:30:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x131028320 <col:7> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x131028300 <col:7> 'char *' lvalue Var 0x13100e0f0 'buf' 'char *'
    | `-ReturnStmt 0x131028388 <line:31:3, col:10>
    |   `-RecoveryExpr 0x131028368 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1310290f8 <line:33:2, line:35:24>
      `-CallExpr 0x131029090 <line:33:9, line:35:24> '<dependent type>' contains-errors
        |-DeclRefExpr 0x131028eb8 <line:33:9> 'int ()' Function 0x131028e00 'gdk_pixbuf_new_from_data' 'int ()'
        |-DeclRefExpr 0x131028ed8 <col:35> 'char *' lvalue Var 0x13100e0f0 'buf' 'char *'
        |-RecoveryExpr 0x131028ef8 <col:40> '<dependent type>' contains-errors lvalue
        |-RecoveryExpr 0x131028f18 <col:52> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x131028f38 <col:63> 'int' lvalue ParmVar 0x13100ddf0 'bits_per_sample' 'int'
        |-DeclRefExpr 0x131028f58 <line:34:7> 'int' lvalue ParmVar 0x13100de70 'width' 'int'
        |-DeclRefExpr 0x131028f78 <col:14> 'int' lvalue ParmVar 0x13100def0 'height' 'int'
        |-DeclRefExpr 0x131028f98 <col:22> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
        |-RecoveryExpr 0x131029050 <line:35:7> '<dependent type>' contains-errors lvalue
        `-RecoveryExpr 0x131029070 <col:20> '<dependent type>' contains-errors lvalue
