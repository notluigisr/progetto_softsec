TranslationUnitDecl 0x152855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1528564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152855bd0 '__int128'
|-TypedefDecl 0x152856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152855bf0 'unsigned __int128'
|-TypedefDecl 0x15300be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15300bc00 'struct __NSConstantString_tag'
|   `-Record 0x152856580 '__NSConstantString_tag'
|-TypedefDecl 0x15300be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152855d90 '__SVInt8_t'
|-TypedefDecl 0x15300bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152855db0 '__SVInt16_t'
|-TypedefDecl 0x15300bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152855dd0 '__SVInt32_t'
|-TypedefDecl 0x15300bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152855df0 '__SVInt64_t'
|-TypedefDecl 0x15300c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152855e10 '__SVUint8_t'
|-TypedefDecl 0x15300c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152855e30 '__SVUint16_t'
|-TypedefDecl 0x15300c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152855e50 '__SVUint32_t'
|-TypedefDecl 0x15300c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152855e70 '__SVUint64_t'
|-TypedefDecl 0x15300c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152855e90 '__SVFloat16_t'
|-TypedefDecl 0x15300c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15300c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15300c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15300c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15300c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15300c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15300c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15300c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15300c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15300c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15300c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15300c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15300c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15300c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15300c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15300c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15300c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1528560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15300c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1528560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15300c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1528560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15300c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15300ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15300cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15300cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15300cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15300d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1528561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15300d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1528561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15300d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1528561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15300d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15300d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15300d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15300d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15300d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15300d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1528562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15300d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1528562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15300d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1528562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15300d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15300d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15300d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15300d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15300da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152856390 '__SVBool_t'
|-TypedefDecl 0x15300da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1528563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15300dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1528563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15300db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1528563f0 '__SVCount_t'
|-TypedefDecl 0x15300dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15300dbb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
|-TypedefDecl 0x15300dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15300dbb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
`-FunctionDecl 0x15300ddf8 <dataset_diviso_filec/func6462_nonvuln.c:1:1, line:34:1> line:1:1 invalid dump_calc_estimates 'int (int *)'
  |-ParmVarDecl 0x15300dd28 <line:2:5, col:24> col:24 invalid est 'int *'
  `-CompoundStmt 0x153029d90 <line:3:1, line:34:1>
    |-DeclStmt 0x15300df28 <line:4:5, col:14>
    | `-VarDecl 0x15300dec0 <col:5, col:9> col:9 used level 'int'
    |-DeclStmt 0x15300e090 <line:6:5, col:32>
    | |-VarDecl 0x15300df58 <col:5, col:18> col:11 used errmsg 'char *' cinit
    | | `-RecoveryExpr 0x15300dfd8 <col:18> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x15300e010 <col:5, col:25> col:25 used qerrmsg 'char *'
    `-ForStmt 0x153029d58 <line:8:5, line:33:5>
      |-BinaryOperator 0x15300e0e8 <line:8:9, col:17> 'int' '='
      | |-DeclRefExpr 0x15300e0a8 <col:9> 'int' lvalue Var 0x15300dec0 'level' 'int'
      | `-IntegerLiteral 0x15300e0c8 <col:17> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x15300e180 <col:20, col:28> 'int' contains-errors '<'
      | |-DeclRefExpr 0x15300e108 <col:20> 'int' lvalue Var 0x15300dec0 'level' 'int'
      | `-RecoveryExpr 0x15300e160 <col:28> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x15300e1c0 <col:41, col:46> 'int' postfix '++'
      | `-DeclRefExpr 0x15300e1a0 <col:41> 'int' lvalue Var 0x15300dec0 'level' 'int'
      `-CompoundStmt 0x153029d40 <col:50, line:33:5>
        `-IfStmt 0x153029d20 <line:9:2, line:32:2>
          |-CXXDependentScopeMemberExpr 0x15300e2b0 <line:9:5, col:21> '<dependent type>' contains-errors lvalue .needestimate
          | `-ArraySubscriptExpr 0x15300e290 <col:5, col:19> '<dependent type>' contains-errors lvalue
          |   |-ImplicitCastExpr 0x15300e260 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
          |   | `-CXXDependentScopeMemberExpr 0x15300e1f8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->est
          |   |   `-RecoveryExpr 0x15300e1d8 <col:5> '<dependent type>' contains-errors lvalue
          |   `-ImplicitCastExpr 0x15300e278 <col:14> 'int' <LValueToRValue>
          |     `-DeclRefExpr 0x15300e240 <col:14> 'int' lvalue Var 0x15300dec0 'level' 'int'
          `-CompoundStmt 0x153029ce8 <col:35, line:32:2>
            |-CallExpr 0x153027b50 <line:10:6, line:11:28> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x1530278b8 <line:10:6> 'int ()' Function 0x153027800 'dbprintf' 'int ()'
            | |-CallExpr 0x153027a88 <col:15, col:22> 'int'
            | | |-ImplicitCastExpr 0x153027a70 <col:15> 'int (*)()' <FunctionToPointerDecay>
            | | | `-DeclRefExpr 0x1530279b8 <col:15> 'int ()' Function 0x153027900 '_' 'int ()'
            | | `-ImplicitCastExpr 0x153027ab0 <col:17> 'char *' <ArrayToPointerDecay>
            | |   `-StringLiteral 0x153027a20 <col:17> 'char[4]' lvalue "STR"
            | |-CXXDependentScopeMemberExpr 0x153027ae8 <line:11:9, col:14> '<dependent type>' contains-errors lvalue ->qamname
            | | `-RecoveryExpr 0x153027ac8 <col:9> '<dependent type>' contains-errors lvalue
            | `-DeclRefExpr 0x153027b30 <col:23> 'int' lvalue Var 0x15300dec0 'level' 'int'
            |-CallExpr 0x153027f08 <line:14:6, col:22> 'int'
            | |-ImplicitCastExpr 0x153027ef0 <col:6> 'int (*)()' <FunctionToPointerDecay>
            | | `-DeclRefExpr 0x153027e90 <col:6> 'int ()' Function 0x153027dd8 'amflock' 'int ()'
            | |-IntegerLiteral 0x153027eb0 <col:14> 'int' 1
            | `-ImplicitCastExpr 0x153027f38 <col:17> 'char *' <ArrayToPointerDecay>
            |   `-StringLiteral 0x153027ed0 <col:17> 'char[4]' lvalue "STR"
            |-IfStmt 0x153029990 <line:18:6, line:27:6>
            | |-BinaryOperator 0x1530282b8 <line:18:10, col:33> 'int' contains-errors '&&'
            | | |-ImplicitCastExpr 0x1530282a0 <col:10> 'char *' contains-errors <LValueToRValue>
            | | | `-DeclRefExpr 0x1530281a0 <col:10> 'char *' contains-errors lvalue Var 0x15300df58 'errmsg' 'char *'
            | | `-BinaryOperator 0x153028280 <col:20, col:33> 'int' contains-errors '!='
            | |   |-ImplicitCastExpr 0x153028268 <col:20, col:28> 'int' contains-errors <IntegralCast>
            | |   | `-ImplicitCastExpr 0x153028250 <col:20, col:28> 'char' contains-errors <LValueToRValue>
            | |   |   `-ArraySubscriptExpr 0x153028218 <col:20, col:28> 'char' contains-errors lvalue
            | |   |     |-ImplicitCastExpr 0x153028200 <col:20> 'char *' contains-errors <LValueToRValue>
            | |   |     | `-DeclRefExpr 0x1530281c0 <col:20> 'char *' contains-errors lvalue Var 0x15300df58 'errmsg' 'char *'
            | |   |     `-IntegerLiteral 0x1530281e0 <col:27> 'int' 0
            | |   `-CharacterLiteral 0x153028238 <col:33> 'int' 0
            | `-CompoundStmt 0x153029978 <col:39, line:27:6>
            |   `-IfStmt 0x153029958 <line:19:3, line:26:3>
            |     |-CallExpr 0x153028508 <line:19:6, line:20:35> '<dependent type>' contains-errors
            |     | |-DeclRefExpr 0x1530283b8 <line:19:6> 'int ()' Function 0x153028300 'am_has_feature' 'int ()'
            |     | |-CXXDependentScopeMemberExpr 0x1530284a0 <col:21, col:32> '<dependent type>' contains-errors lvalue ->features
            |     | | `-RecoveryExpr 0x153028480 <col:21> '<dependent type>' contains-errors lvalue
            |     | `-RecoveryExpr 0x1530284e8 <line:20:7> '<dependent type>' contains-errors lvalue
            |     `-CompoundStmt 0x153029928 <col:38, line:26:3>
            |       |-BinaryOperator 0x153029530 <line:21:7, col:36> 'char *' contains-errors '='
            |       | |-DeclRefExpr 0x153028538 <col:7> 'char *' lvalue Var 0x15300e010 'qerrmsg' 'char *'
            |       | `-ImplicitCastExpr 0x1530286d0 <col:17, col:36> 'char *' contains-errors <IntegralToPointer>
            |       |   `-CallExpr 0x153028690 <col:17, col:36> 'int' contains-errors
            |       |     |-ImplicitCastExpr 0x153028678 <col:17> 'int (*)()' <FunctionToPointerDecay>
            |       |     | `-DeclRefExpr 0x153028638 <col:17> 'int ()' Function 0x153028580 'quote_string' 'int ()'
            |       |     `-ImplicitCastExpr 0x1530286b8 <col:30> 'char *' contains-errors <LValueToRValue>
            |       |       `-DeclRefExpr 0x153028658 <col:30> 'char *' contains-errors lvalue Var 0x15300df58 'errmsg' 'char *'
            |       |-CallExpr 0x153029640 <line:22:7, col:32> 'int' contains-errors
            |       | |-ImplicitCastExpr 0x153029628 <col:7> 'int (*)()' <FunctionToPointerDecay>
            |       | | `-DeclRefExpr 0x153029550 <col:7> 'int ()' Function 0x153027800 'dbprintf' 'int ()'
            |       | |-CallExpr 0x1530295c8 <col:16, col:23> 'int'
            |       | | |-ImplicitCastExpr 0x1530295b0 <col:16> 'int (*)()' <FunctionToPointerDecay>
            |       | | | `-DeclRefExpr 0x153029570 <col:16> 'int ()' Function 0x153027900 '_' 'int ()'
            |       | | `-ImplicitCastExpr 0x1530295f0 <col:18> 'char *' <ArrayToPointerDecay>
            |       | |   `-StringLiteral 0x153029590 <col:18> 'char[4]' lvalue "STR"
            |       | `-ImplicitCastExpr 0x153029670 <col:26> 'char *' contains-errors <LValueToRValue>
            |       |   `-DeclRefExpr 0x153029608 <col:26> 'char *' contains-errors lvalue Var 0x15300df58 'errmsg' 'char *'
            |       |-CallExpr 0x153029770 <line:23:7, line:24:35> '<dependent type>' contains-errors
            |       | |-DeclRefExpr 0x153029688 <line:23:7> 'int ()' Function 0x153027f78 'g_printf' 'int ()'
            |       | |-StringLiteral 0x1530296a8 <col:16> 'char[4]' lvalue "STR"
            |       | |-CXXDependentScopeMemberExpr 0x1530296e8 <line:24:7, col:12> '<dependent type>' contains-errors lvalue ->qamname
            |       | | `-RecoveryExpr 0x1530296c8 <col:7> '<dependent type>' contains-errors lvalue
            |       | |-DeclRefExpr 0x153029730 <col:21> 'int' lvalue Var 0x15300dec0 'level' 'int'
            |       | `-DeclRefExpr 0x153029750 <col:28> 'char *' lvalue Var 0x15300e010 'qerrmsg' 'char *'
            |       `-CallExpr 0x1530298e8 <line:25:7, col:21> 'int'
            |         |-ImplicitCastExpr 0x1530298d0 <col:7> 'int (*)()' <FunctionToPointerDecay>
            |         | `-DeclRefExpr 0x153029890 <col:7> 'int ()' Function 0x1530297d8 'amfree' 'int ()'
            |         `-ImplicitCastExpr 0x153029910 <col:14> 'char *' <LValueToRValue>
            |           `-DeclRefExpr 0x1530298b0 <col:14> 'char *' lvalue Var 0x15300e010 'qerrmsg' 'char *'
            |-CallExpr 0x153029a08 <line:28:6, col:19> 'int' contains-errors
            | |-ImplicitCastExpr 0x1530299f0 <col:6> 'int (*)()' <FunctionToPointerDecay>
            | | `-DeclRefExpr 0x1530299b0 <col:6> 'int ()' Function 0x1530297d8 'amfree' 'int ()'
            | `-ImplicitCastExpr 0x153029a30 <col:13> 'char *' contains-errors <LValueToRValue>
            |   `-DeclRefExpr 0x1530299d0 <col:13> 'char *' contains-errors lvalue Var 0x15300df58 'errmsg' 'char *'
            `-CallExpr 0x153029ca0 <line:31:6, col:24> 'int'
              |-ImplicitCastExpr 0x153029c88 <col:6> 'int (*)()' <FunctionToPointerDecay>
              | `-DeclRefExpr 0x153029c28 <col:6> 'int ()' Function 0x153029b70 'amfunlock' 'int ()'
              |-IntegerLiteral 0x153029c48 <col:16> 'int' 1
              `-ImplicitCastExpr 0x153029cd0 <col:19> 'char *' <ArrayToPointerDecay>
                `-StringLiteral 0x153029c68 <col:19> 'char[4]' lvalue "STR"
