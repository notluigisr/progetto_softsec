TranslationUnitDecl 0x155055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1550564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x155055bd0 '__int128'
|-TypedefDecl 0x155056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x155055bf0 'unsigned __int128'
|-TypedefDecl 0x15580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15580bc00 'struct __NSConstantString_tag'
|   `-Record 0x155056580 '__NSConstantString_tag'
|-TypedefDecl 0x15580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x155055d90 '__SVInt8_t'
|-TypedefDecl 0x15580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x155055db0 '__SVInt16_t'
|-TypedefDecl 0x15580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x155055dd0 '__SVInt32_t'
|-TypedefDecl 0x15580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x155055df0 '__SVInt64_t'
|-TypedefDecl 0x15580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x155055e10 '__SVUint8_t'
|-TypedefDecl 0x15580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x155055e30 '__SVUint16_t'
|-TypedefDecl 0x15580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x155055e50 '__SVUint32_t'
|-TypedefDecl 0x15580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x155055e70 '__SVUint64_t'
|-TypedefDecl 0x15580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x155055e90 '__SVFloat16_t'
|-TypedefDecl 0x15580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x155055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x155055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x155055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x155055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x155055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x155055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x155055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x155055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x155055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x155055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x155055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x155056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x155056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x155056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x155056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x155056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1550560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1550560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1550560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x155056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x155056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x155056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x155056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x155056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1550561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1550561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1550561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x155056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x155056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x155056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x155056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x155056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1550562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1550562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1550562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x155056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x155056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x155056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x155056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x155056390 '__SVBool_t'
|-TypedefDecl 0x15580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1550563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1550563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1550563f0 '__SVCount_t'
|-TypedefDecl 0x15580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15580dbb0 'char *'
|   `-BuiltinType 0x1550556b0 'char'
|-TypedefDecl 0x15580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15580dbb0 'char *'
|   `-BuiltinType 0x1550556b0 'char'
`-FunctionDecl 0x15580dfa8 <dataset_diviso_filec/func370_vuln.c:1:1, line:36:1> line:1:5 diskutil_ch 'int (const char *, const char *, const char *, const int)'
  |-ParmVarDecl 0x15580dcd8 <col:17, col:29> col:29 used path 'const char *'
  |-ParmVarDecl 0x15580dd58 <col:35, col:47> col:47 used user 'const char *'
  |-ParmVarDecl 0x15580ddd8 <col:53, col:65> col:65 used group 'const char *'
  |-ParmVarDecl 0x15580de58 <col:72, col:82> col:82 used perms 'const int'
  `-CompoundStmt 0x155828250 <line:2:1, line:36:1>
    |-DeclStmt 0x15580e188 <line:3:5, col:24>
    | `-VarDecl 0x15580e0d0 <col:5, col:20> col:11 used output 'char *' cinit
    |   `-RecoveryExpr 0x15580e168 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x155827800 <line:5:5, col:22> 'int' ','
    | |-CallExpr 0x15580e378 <col:5, col:19> 'int'
    | | |-ImplicitCastExpr 0x15580e360 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15580e2b0 <col:5> 'int ()' Function 0x15580e1f8 'LOGDEBUG' 'int ()'
    | | `-ImplicitCastExpr 0x15580e3a0 <col:14> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x15580e310 <col:14> 'char[4]' lvalue "STR"
    | `-ImplicitCastExpr 0x15580e3d8 <col:22> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x15580e3b8 <col:22> 'const int' lvalue ParmVar 0x15580de58 'perms' 'const int'
    `-IfStmt 0x155828230 <line:7:5, line:33:5>
      |-ImplicitCastExpr 0x155827840 <line:7:9> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x155827820 <col:9> 'const char *' lvalue ParmVar 0x15580dcd8 'path' 'const char *'
      `-CompoundStmt 0x155828208 <col:15, line:33:5>
        |-IfStmt 0x155827cb8 <line:8:9, line:14:9>
        | |-ImplicitCastExpr 0x155827878 <line:8:13> 'const char *' <LValueToRValue>
        | | `-DeclRefExpr 0x155827858 <col:13> 'const char *' lvalue ParmVar 0x15580dd58 'user' 'const char *'
        | `-CompoundStmt 0x155827c98 <col:19, line:14:9>
        |   |-IfStmt 0x155827b00 <line:10:13, line:12:13>
        |   | |-UnaryOperator 0x155827ac0 <line:10:17, col:18> 'int' contains-errors prefix '!' cannot overflow
        |   | | `-ImplicitCastExpr 0x155827aa8 <col:18> 'char *' contains-errors <LValueToRValue>
        |   | |   `-DeclRefExpr 0x155827a88 <col:18> 'char *' contains-errors lvalue Var 0x15580e0d0 'output' 'char *'
        |   | `-CompoundStmt 0x155827af0 <col:26, line:12:13>
        |   `-CallExpr 0x155827c58 <line:13:13, col:29> 'int' contains-errors
        |     |-ImplicitCastExpr 0x155827c40 <col:13> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x155827c00 <col:13> 'int ()' Function 0x155827b48 'EUCA_FREE' 'int ()'
        |     `-ImplicitCastExpr 0x155827c80 <col:23> 'char *' contains-errors <LValueToRValue>
        |       `-DeclRefExpr 0x155827c20 <col:23> 'char *' contains-errors lvalue Var 0x15580e0d0 'output' 'char *'
        |-IfStmt 0x155827f78 <line:16:9, line:22:9>
        | |-ImplicitCastExpr 0x155827cf8 <line:16:13> 'const char *' <LValueToRValue>
        | | `-DeclRefExpr 0x155827cd8 <col:13> 'const char *' lvalue ParmVar 0x15580ddd8 'group' 'const char *'
        | `-CompoundStmt 0x155827f58 <col:20, line:22:9>
        |   |-IfStmt 0x155827ea0 <line:18:13, line:20:13>
        |   | |-UnaryOperator 0x155827e60 <line:18:17, col:18> 'int' contains-errors prefix '!' cannot overflow
        |   | | `-ImplicitCastExpr 0x155827e48 <col:18> 'char *' contains-errors <LValueToRValue>
        |   | |   `-DeclRefExpr 0x155827e28 <col:18> 'char *' contains-errors lvalue Var 0x15580e0d0 'output' 'char *'
        |   | `-CompoundStmt 0x155827e90 <col:26, line:20:13>
        |   `-CallExpr 0x155827f18 <line:21:13, col:29> 'int' contains-errors
        |     |-ImplicitCastExpr 0x155827f00 <col:13> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x155827ec0 <col:13> 'int ()' Function 0x155827b48 'EUCA_FREE' 'int ()'
        |     `-ImplicitCastExpr 0x155827f40 <col:23> 'char *' contains-errors <LValueToRValue>
        |       `-DeclRefExpr 0x155827ee0 <col:23> 'char *' contains-errors lvalue Var 0x15580e0d0 'output' 'char *'
        `-IfStmt 0x1558281e8 <line:24:9, line:30:9>
          |-BinaryOperator 0x155827ff0 <line:24:13, col:21> 'int' '>'
          | |-ImplicitCastExpr 0x155827fd8 <col:13> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x155827f98 <col:13> 'const int' lvalue ParmVar 0x15580de58 'perms' 'const int'
          | `-IntegerLiteral 0x155827fb8 <col:21> 'int' 0
          `-CompoundStmt 0x1558281c8 <col:24, line:30:9>
            |-IfStmt 0x155828110 <line:26:13, line:28:13>
            | |-UnaryOperator 0x1558280e8 <line:26:17, col:18> 'int' contains-errors prefix '!' cannot overflow
            | | `-ImplicitCastExpr 0x1558280d0 <col:18> 'char *' contains-errors <LValueToRValue>
            | |   `-DeclRefExpr 0x1558280b0 <col:18> 'char *' contains-errors lvalue Var 0x15580e0d0 'output' 'char *'
            | `-CompoundStmt 0x155828100 <col:26, line:28:13>
            `-CallExpr 0x155828188 <line:29:13, col:29> 'int' contains-errors
              |-ImplicitCastExpr 0x155828170 <col:13> 'int (*)()' <FunctionToPointerDecay>
              | `-DeclRefExpr 0x155828130 <col:13> 'int ()' Function 0x155827b48 'EUCA_FREE' 'int ()'
              `-ImplicitCastExpr 0x1558281b0 <col:23> 'char *' contains-errors <LValueToRValue>
                `-DeclRefExpr 0x155828150 <col:23> 'char *' contains-errors lvalue Var 0x15580e0d0 'output' 'char *'
