TranslationUnitDecl 0x158855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1588564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158855bd0 '__int128'
|-TypedefDecl 0x158856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158855bf0 'unsigned __int128'
|-TypedefDecl 0x158926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x158926000 'struct __NSConstantString_tag'
|   `-Record 0x158856580 '__NSConstantString_tag'
|-TypedefDecl 0x158926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158855d90 '__SVInt8_t'
|-TypedefDecl 0x158926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158855db0 '__SVInt16_t'
|-TypedefDecl 0x158926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158855dd0 '__SVInt32_t'
|-TypedefDecl 0x1589263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158855df0 '__SVInt64_t'
|-TypedefDecl 0x158926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158855e10 '__SVUint8_t'
|-TypedefDecl 0x1589264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158855e30 '__SVUint16_t'
|-TypedefDecl 0x158926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158855e50 '__SVUint32_t'
|-TypedefDecl 0x158926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158855e70 '__SVUint64_t'
|-TypedefDecl 0x1589265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158855e90 '__SVFloat16_t'
|-TypedefDecl 0x158926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1589266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158855ed0 '__SVFloat64_t'
|-TypedefDecl 0x158926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x158926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1589267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x158926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1589268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x158926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x158926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1589269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x158926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x158926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x158926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x158926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x158926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x158926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158856090 '__clang_svint8x3_t'
|-TypedefDecl 0x158926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1588560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x158926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1588560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x158926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1588560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x158926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x158926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x158926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x158926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x158926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x158927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1588561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x158927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1588561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1589278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1588561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x158927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1589279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158856230 '__clang_svint16x4_t'
|-TypedefDecl 0x158927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158856250 '__clang_svint32x4_t'
|-TypedefDecl 0x158927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158856270 '__clang_svint64x4_t'
|-TypedefDecl 0x158927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x158927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1588562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x158927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1588562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x158927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1588562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x158927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x158927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x158927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x158927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x158927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158856390 '__SVBool_t'
|-TypedefDecl 0x158927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1588563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x158927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1588563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x158927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1588563f0 '__SVCount_t'
|-TypedefDecl 0x158927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x158927fb0 'char *'
|   `-BuiltinType 0x1588556b0 'char'
|-TypedefDecl 0x158928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x158927fb0 'char *'
|   `-BuiltinType 0x1588556b0 'char'
|-FunctionDecl 0x1589282e0 <dataset_diviso_filec/func1887_vuln.c:1:1, line:29:1> line:1:6 invalid imap_quote_string 'void (char *, int, const char *)'
| |-ParmVarDecl 0x1589280d8 <col:24, col:30> col:30 used dest 'char *'
| |-ParmVarDecl 0x158928170 <col:36, col:43> col:43 referenced invalid dlen 'int'
| |-ParmVarDecl 0x1589281f0 <col:49, col:61> col:61 used src 'const char *'
| `-CompoundStmt 0x1589426a0 <line:2:1, line:29:1>
|   |-DeclStmt 0x158928530 <line:3:3, col:36>
|   | `-VarDecl 0x158928420 <col:3, col:31> col:21 used quote 'const char[4]' static cinit
|   |   `-StringLiteral 0x1589284d0 <col:31> 'const char[4]' "STR"
|   |-DeclStmt 0x158928600 <line:4:3, col:18>
|   | `-VarDecl 0x158928560 <col:3, col:14> col:9 used pt 'char *' cinit
|   |   `-ImplicitCastExpr 0x1589285e8 <col:14> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1589285c8 <col:14> 'char *' lvalue ParmVar 0x1589280d8 'dest' 'char *'
|   |-DeclStmt 0x1589286d0 <line:5:3, col:22>
|   | `-VarDecl 0x158928630 <col:3, col:19> col:15 used s 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1589286b8 <col:19> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x158928698 <col:19> 'const char *' lvalue ParmVar 0x1589281f0 'src' 'const char *'
|   |-BinaryOperator 0x158928768 <line:7:3, col:11> 'char' '='
|   | |-UnaryOperator 0x158928720 <col:3, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x158928708 <col:4, col:6> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x1589286e8 <col:4> 'char *' lvalue Var 0x158928560 'pt' 'char *'
|   | `-ImplicitCastExpr 0x158928750 <col:11> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x158928738 <col:11> 'int' 34
|   |-CompoundAssignOperator 0x158941800 <line:9:3, col:11> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-RecoveryExpr 0x1589287a8 <col:3> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x158928788 <col:3> 'int' lvalue ParmVar 0x158928170 'dlen' 'int'
|   | `-IntegerLiteral 0x1589287d0 <col:11> 'int' 2
|   |-ForStmt 0x158942528 <line:11:3, line:26:3>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1589418a0 <line:11:10, col:16> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x158941868 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x158941850 <col:11> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x158941830 <col:11> 'const char *' lvalue Var 0x158928630 's' 'const char *'
|   | | `-RecoveryExpr 0x158941880 <col:16> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x1589418e0 <col:22, col:23> 'const char *' postfix '++'
|   | | `-DeclRefExpr 0x1589418c0 <col:22> 'const char *' lvalue Var 0x158928630 's' 'const char *'
|   | `-CompoundStmt 0x158942510 <line:12:3, line:26:3>
|   |   `-IfStmt 0x1589424e0 <line:13:5, line:25:5> has_else
|   |     |-CallExpr 0x158942048 <line:13:9, col:25> 'char *'
|   |     | |-ImplicitCastExpr 0x158942030 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x158941f40 <col:9> 'char *(const char *, int)' Function 0x158941d60 'strchr' 'char *(const char *, int)'
|   |     | |-ImplicitCastExpr 0x158942078 <col:16> 'const char *' <ArrayToPointerDecay>
|   |     | | `-DeclRefExpr 0x158941f60 <col:16> 'const char[4]' lvalue Var 0x158928420 'quote' 'const char[4]'
|   |     | `-ImplicitCastExpr 0x1589420a8 <col:23, col:24> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x158942090 <col:23, col:24> 'char' <LValueToRValue>
|   |     |     `-UnaryOperator 0x158941fb8 <col:23, col:24> 'const char' lvalue prefix '*' cannot overflow
|   |     |       `-ImplicitCastExpr 0x158941fa0 <col:24> 'const char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x158941f80 <col:24> 'const char *' lvalue Var 0x158928630 's' 'const char *'
|   |     |-CompoundStmt 0x158942358 <line:14:5, line:20:5>
|   |     | |-CompoundAssignOperator 0x158942128 <line:15:7, col:15> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     | | |-RecoveryExpr 0x1589420e0 <col:7> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x1589420c0 <col:7> 'int' lvalue ParmVar 0x158928170 'dlen' 'int'
|   |     | | `-IntegerLiteral 0x158942108 <col:15> 'int' 2
|   |     | |-IfStmt 0x1589421c0 <line:16:7, line:17:9>
|   |     | | |-BinaryOperator 0x158942198 <line:16:11, col:19> 'int' contains-errors '=='
|   |     | | | |-RecoveryExpr 0x158942158 <col:11> '<dependent type>' contains-errors lvalue
|   |     | | | `-IntegerLiteral 0x158942178 <col:19> 'int' 0
|   |     | | `-BreakStmt 0x1589421b8 <line:17:9>
|   |     | |-BinaryOperator 0x158942260 <line:18:7, col:15> 'char' '='
|   |     | | |-UnaryOperator 0x158942218 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x158942200 <col:8, col:10> 'char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x1589421e0 <col:8> 'char *' lvalue Var 0x158928560 'pt' 'char *'
|   |     | | `-ImplicitCastExpr 0x158942248 <col:15> 'char' <IntegralCast>
|   |     | |   `-CharacterLiteral 0x158942230 <col:15> 'int' 92
|   |     | `-BinaryOperator 0x158942338 <line:19:7, col:16> 'char' '='
|   |     |   |-UnaryOperator 0x1589422b8 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |     |   | `-UnaryOperator 0x1589422a0 <col:8, col:10> 'char *' postfix '++'
|   |     |   |   `-DeclRefExpr 0x158942280 <col:8> 'char *' lvalue Var 0x158928560 'pt' 'char *'
|   |     |   `-ImplicitCastExpr 0x158942320 <col:15, col:16> 'char' <LValueToRValue>
|   |     |     `-UnaryOperator 0x158942308 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |     |       `-ImplicitCastExpr 0x1589422f0 <col:16> 'const char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1589422d0 <col:16> 'const char *' lvalue Var 0x158928630 's' 'const char *'
|   |     `-CompoundStmt 0x1589424c0 <line:22:5, line:25:5>
|   |       |-BinaryOperator 0x158942440 <line:23:7, col:16> 'char' '='
|   |       | |-UnaryOperator 0x1589423c0 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |       | | `-UnaryOperator 0x1589423a8 <col:8, col:10> 'char *' postfix '++'
|   |       | |   `-DeclRefExpr 0x158942388 <col:8> 'char *' lvalue Var 0x158928560 'pt' 'char *'
|   |       | `-ImplicitCastExpr 0x158942428 <col:15, col:16> 'char' <LValueToRValue>
|   |       |   `-UnaryOperator 0x158942410 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |       |     `-ImplicitCastExpr 0x1589423f8 <col:16> 'const char *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1589423d8 <col:16> 'const char *' lvalue Var 0x158928630 's' 'const char *'
|   |       `-UnaryOperator 0x1589424a8 <line:24:7, col:11> '<dependent type>' contains-errors postfix '--' cannot overflow
|   |         `-RecoveryExpr 0x158942480 <col:7> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x158942460 <col:7> 'int' lvalue ParmVar 0x158928170 'dlen' 'int'
|   |-BinaryOperator 0x1589425e0 <line:27:3, col:11> 'char' '='
|   | |-UnaryOperator 0x158942598 <col:3, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x158942580 <col:4, col:6> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x158942560 <col:4> 'char *' lvalue Var 0x158928560 'pt' 'char *'
|   | `-ImplicitCastExpr 0x1589425c8 <col:11> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x1589425b0 <col:11> 'int' 34
|   `-BinaryOperator 0x158942680 <line:28:3, col:9> 'char' '='
|     |-UnaryOperator 0x158942638 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x158942620 <col:4> 'char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x158942600 <col:4> 'char *' lvalue Var 0x158928560 'pt' 'char *'
|     `-ImplicitCastExpr 0x158942668 <col:9> 'char' <IntegralCast>
|       `-CharacterLiteral 0x158942650 <col:9> 'int' 0
`-FunctionDecl 0x158941d60 <line:13:9> col:9 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x158941e60 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x158941ec8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x158941e08 <<invalid sloc>> Implicit 893
