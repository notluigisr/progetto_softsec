TranslationUnitDecl 0x14c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c055bd0 '__int128'
|-TypedefDecl 0x14c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c055bf0 'unsigned __int128'
|-TypedefDecl 0x14c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c056580 '__NSConstantString_tag'
|-TypedefDecl 0x14c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c055d90 '__SVInt8_t'
|-TypedefDecl 0x14c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c055db0 '__SVInt16_t'
|-TypedefDecl 0x14c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c055dd0 '__SVInt32_t'
|-TypedefDecl 0x14c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c055df0 '__SVInt64_t'
|-TypedefDecl 0x14c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c055e10 '__SVUint8_t'
|-TypedefDecl 0x14c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c055e30 '__SVUint16_t'
|-TypedefDecl 0x14c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c055e50 '__SVUint32_t'
|-TypedefDecl 0x14c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c055e70 '__SVUint64_t'
|-TypedefDecl 0x14c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c055e90 '__SVFloat16_t'
|-TypedefDecl 0x14c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c056390 '__SVBool_t'
|-TypedefDecl 0x14c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c0563f0 '__SVCount_t'
|-TypedefDecl 0x14c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c80dbb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-TypedefDecl 0x14c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c80dbb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-FunctionDecl 0x14c80de58 <dataset_diviso_filec/func6823_vuln.c:1:1, line:15:1> line:1:12 invalid is_userinfo_valid 'int (const char *, int)' static
| |-ParmVarDecl 0x14c80dcd8 <col:30, col:42> col:42 used str 'const char *'
| |-ParmVarDecl 0x14c80dd70 <col:47, col:54> col:54 invalid len 'int'
| `-CompoundStmt 0x14c829010 <line:2:1, line:15:1>
|   |-DeclStmt 0x14c80e008 <line:3:2, col:21>
|   | `-VarDecl 0x14c80df28 <col:2, col:16> col:8 used valid 'char *' cinit
|   |   `-ImplicitCastExpr 0x14c80dff0 <col:16> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x14c80dfd0 <col:16> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x14c827510 <line:4:2, col:15>
|   | `-VarDecl 0x14c80e038 <col:2, col:12> col:8 used p 'char *' cinit
|   |   `-ImplicitCastExpr 0x14c80e0d8 <col:12> 'char *' <NoOp>
|   |     `-ImplicitCastExpr 0x14c80e0c0 <col:12> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14c80e0a0 <col:12> 'const char *' lvalue ParmVar 0x14c80dcd8 'str' 'const char *'
|   |-WhileStmt 0x14c828fc0 <line:5:2, line:13:2>
|   | |-BinaryOperator 0x14c8275d8 <line:5:9, col:19> 'int' contains-errors '<'
|   | | |-BinaryOperator 0x14c827598 <col:9, col:13> 'long' '-'
|   | | | |-ImplicitCastExpr 0x14c827568 <col:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14c827528 <col:9> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   | | | `-ImplicitCastExpr 0x14c827580 <col:13> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14c827548 <col:13> 'const char *' lvalue ParmVar 0x14c80dcd8 'str' 'const char *'
|   | | `-RecoveryExpr 0x14c8275b8 <col:19> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14c828fa8 <col:24, line:13:2>
|   |   `-IfStmt 0x14c828f78 <line:6:3, line:12:3> has_else
|   |     |-BinaryOperator 0x14c827f88 <line:6:7, col:53> 'int' '||'
|   |     | |-BinaryOperator 0x14c827bb0 <col:7, col:32> 'int' '||'
|   |     | | |-CallExpr 0x14c8278b8 <col:7, col:17> 'int'
|   |     | | | |-ImplicitCastExpr 0x14c8278a0 <col:7> 'int (*)(int)' <FunctionToPointerDecay>
|   |     | | | | `-DeclRefExpr 0x14c8277f8 <col:7> 'int (int)' Function 0x14c827638 'isalpha' 'int (int)'
|   |     | | | `-ImplicitCastExpr 0x14c8278f8 <col:15, col:16> 'int' <IntegralCast>
|   |     | | |   `-ImplicitCastExpr 0x14c8278e0 <col:15, col:16> 'char' <LValueToRValue>
|   |     | | |     `-UnaryOperator 0x14c827850 <col:15, col:16> 'char' lvalue prefix '*' cannot overflow
|   |     | | |       `-ImplicitCastExpr 0x14c827838 <col:16> 'char *' <LValueToRValue>
|   |     | | |         `-DeclRefExpr 0x14c827818 <col:16> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   |     | | `-CallExpr 0x14c827b58 <col:22, col:32> 'int'
|   |     | |   |-ImplicitCastExpr 0x14c827b40 <col:22> 'int (*)(int)' <FunctionToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x14c827ad0 <col:22> 'int (int)' Function 0x14c827910 'isdigit' 'int (int)'
|   |     | |   `-ImplicitCastExpr 0x14c827b98 <col:30, col:31> 'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x14c827b80 <col:30, col:31> 'char' <LValueToRValue>
|   |     | |       `-UnaryOperator 0x14c827b28 <col:30, col:31> 'char' lvalue prefix '*' cannot overflow
|   |     | |         `-ImplicitCastExpr 0x14c827b10 <col:31> 'char *' <LValueToRValue>
|   |     | |           `-DeclRefExpr 0x14c827af0 <col:31> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   |     | `-CallExpr 0x14c827ef8 <col:37, col:53> 'char *'
|   |     |   |-ImplicitCastExpr 0x14c827ee0 <col:37> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x14c827df0 <col:37> 'char *(const char *, int)' Function 0x14c827c10 'strchr' 'char *(const char *, int)'
|   |     |   |-ImplicitCastExpr 0x14c827f40 <col:44> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x14c827f28 <col:44> 'char *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x14c827e10 <col:44> 'char *' lvalue Var 0x14c80df28 'valid' 'char *'
|   |     |   `-ImplicitCastExpr 0x14c827f70 <col:51, col:52> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x14c827f58 <col:51, col:52> 'char' <LValueToRValue>
|   |     |       `-UnaryOperator 0x14c827e68 <col:51, col:52> 'char' lvalue prefix '*' cannot overflow
|   |     |         `-ImplicitCastExpr 0x14c827e50 <col:52> 'char *' <LValueToRValue>
|   |     |           `-DeclRefExpr 0x14c827e30 <col:52> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   |     |-CompoundStmt 0x14c827fe0 <col:56, line:8:3>
|   |     | `-UnaryOperator 0x14c827fc8 <line:7:4, col:5> 'char *' postfix '++'
|   |     |   `-DeclRefExpr 0x14c827fa8 <col:4> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   |     `-IfStmt 0x14c828f48 <line:8:10, line:12:3> has_else
|   |       |-BinaryOperator 0x14c828e58 <line:8:14, col:83> 'int' contains-errors '&&'
|   |       | |-BinaryOperator 0x14c828320 <col:14, col:63> 'int' contains-errors '&&'
|   |       | | |-BinaryOperator 0x14c8281c0 <col:14, col:44> 'int' contains-errors '&&'
|   |       | | | |-BinaryOperator 0x14c828090 <col:14, col:20> 'int' '=='
|   |       | | | | |-ImplicitCastExpr 0x14c828078 <col:14, col:15> 'int' <IntegralCast>
|   |       | | | | | `-ImplicitCastExpr 0x14c828060 <col:14, col:15> 'char' <LValueToRValue>
|   |       | | | | |   `-UnaryOperator 0x14c828030 <col:14, col:15> 'char' lvalue prefix '*' cannot overflow
|   |       | | | | |     `-ImplicitCastExpr 0x14c828018 <col:15> 'char *' <LValueToRValue>
|   |       | | | | |       `-DeclRefExpr 0x14c827ff8 <col:15> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   |       | | | | `-CharacterLiteral 0x14c828048 <col:20> 'int' 37
|   |       | | | `-BinaryOperator 0x14c8281a0 <col:27, col:44> 'int' contains-errors '<='
|   |       | | |   |-BinaryOperator 0x14c828120 <col:27, col:31> 'long' '-'
|   |       | | |   | |-ImplicitCastExpr 0x14c8280f0 <col:27> 'char *' <LValueToRValue>
|   |       | | |   | | `-DeclRefExpr 0x14c8280b0 <col:27> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   |       | | |   | `-ImplicitCastExpr 0x14c828108 <col:31> 'const char *' <LValueToRValue>
|   |       | | |   |   `-DeclRefExpr 0x14c8280d0 <col:31> 'const char *' lvalue ParmVar 0x14c80dcd8 'str' 'const char *'
|   |       | | |   `-BinaryOperator 0x14c828180 <col:38, col:44> '<dependent type>' contains-errors '-'
|   |       | | |     |-RecoveryExpr 0x14c828140 <col:38> '<dependent type>' contains-errors lvalue
|   |       | | |     `-IntegerLiteral 0x14c828160 <col:44> 'int' 3
|   |       | | `-CallExpr 0x14c8282c8 <col:49, col:63> 'int'
|   |       | |   |-ImplicitCastExpr 0x14c8282b0 <col:49> 'int (*)(int)' <FunctionToPointerDecay>
|   |       | |   | `-DeclRefExpr 0x14c8281e0 <col:49> 'int (int)' Function 0x14c827910 'isdigit' 'int (int)'
|   |       | |   `-ImplicitCastExpr 0x14c828308 <col:57, col:62> 'int' <IntegralCast>
|   |       | |     `-ImplicitCastExpr 0x14c8282f0 <col:57, col:62> 'char' <LValueToRValue>
|   |       | |       `-UnaryOperator 0x14c828298 <col:57, col:62> 'char' lvalue prefix '*' cannot overflow
|   |       | |         `-ParenExpr 0x14c828278 <col:58, col:62> 'char *'
|   |       | |           `-BinaryOperator 0x14c828258 <col:59, col:61> 'char *' '+'
|   |       | |             |-ImplicitCastExpr 0x14c828240 <col:59> 'char *' <LValueToRValue>
|   |       | |             | `-DeclRefExpr 0x14c828200 <col:59> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   |       | |             `-IntegerLiteral 0x14c828220 <col:61> 'int' 1
|   |       | `-CallExpr 0x14c828e00 <col:68, col:83> 'int'
|   |       |   |-ImplicitCastExpr 0x14c828de8 <col:68> 'int (*)(int)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x14c828d18 <col:68> 'int (int)' Function 0x14c828340 'isxdigit' 'int (int)'
|   |       |   `-ImplicitCastExpr 0x14c828e40 <col:77, col:82> 'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x14c828e28 <col:77, col:82> 'char' <LValueToRValue>
|   |       |       `-UnaryOperator 0x14c828dd0 <col:77, col:82> 'char' lvalue prefix '*' cannot overflow
|   |       |         `-ParenExpr 0x14c828db0 <col:78, col:82> 'char *'
|   |       |           `-BinaryOperator 0x14c828d90 <col:79, col:81> 'char *' '+'
|   |       |             |-ImplicitCastExpr 0x14c828d78 <col:79> 'char *' <LValueToRValue>
|   |       |             | `-DeclRefExpr 0x14c828d38 <col:79> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   |       |             `-IntegerLiteral 0x14c828d58 <col:81> 'int' 2
|   |       |-CompoundStmt 0x14c828ee8 <col:86, line:10:3>
|   |       | `-CompoundAssignOperator 0x14c828eb8 <line:9:4, col:9> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |       |   |-DeclRefExpr 0x14c828e78 <col:4> 'char *' lvalue Var 0x14c80e038 'p' 'char *'
|   |       |   `-IntegerLiteral 0x14c828e98 <col:9> 'int' 3
|   |       `-CompoundStmt 0x14c828f30 <line:10:10, line:12:3>
|   |         `-ReturnStmt 0x14c828f20 <line:11:4, col:11>
|   |           `-IntegerLiteral 0x14c828f00 <col:11> 'int' 0
|   `-ReturnStmt 0x14c829000 <line:14:2, col:9>
|     `-IntegerLiteral 0x14c828fe0 <col:9> 'int' 1
|-FunctionDecl 0x14c827638 <line:6:7> col:7 implicit used isalpha 'int (int)' extern
| |-ParmVarDecl 0x14c827738 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x14c8276e0 <<invalid sloc>> Implicit 921
| |-NoThrowAttr 0x14c8277a8 <col:7> Implicit
| `-PureAttr 0x14c8277d0 <col:7> Implicit
|-FunctionDecl 0x14c827910 <col:22> col:22 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x14c827a10 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x14c8279b8 <<invalid sloc>> Implicit 924
| |-NoThrowAttr 0x14c827a80 <col:22> Implicit
| `-PureAttr 0x14c827aa8 <col:22> Implicit
|-FunctionDecl 0x14c827c10 <col:37> col:37 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x14c827d10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14c827d78 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x14c827cb8 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x14c828340 <line:8:68> col:68 implicit used isxdigit 'int (int)' extern
  |-ParmVarDecl 0x14c828c58 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x14c828c00 <<invalid sloc>> Implicit 931
  |-NoThrowAttr 0x14c828cc8 <col:68> Implicit
  `-PureAttr 0x14c828cf0 <col:68> Implicit
