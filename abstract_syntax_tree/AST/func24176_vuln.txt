TranslationUnitDecl 0x126055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1260564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126055bd0 '__int128'
|-TypedefDecl 0x126056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126055bf0 'unsigned __int128'
|-TypedefDecl 0x126126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x126126000 'struct __NSConstantString_tag'
|   `-Record 0x126056580 '__NSConstantString_tag'
|-TypedefDecl 0x126126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126055d90 '__SVInt8_t'
|-TypedefDecl 0x126126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126055db0 '__SVInt16_t'
|-TypedefDecl 0x126126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126055dd0 '__SVInt32_t'
|-TypedefDecl 0x1261263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126055df0 '__SVInt64_t'
|-TypedefDecl 0x126126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126055e10 '__SVUint8_t'
|-TypedefDecl 0x1261264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126055e30 '__SVUint16_t'
|-TypedefDecl 0x126126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126055e50 '__SVUint32_t'
|-TypedefDecl 0x126126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126055e70 '__SVUint64_t'
|-TypedefDecl 0x1261265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126055e90 '__SVFloat16_t'
|-TypedefDecl 0x126126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1261266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126055ed0 '__SVFloat64_t'
|-TypedefDecl 0x126126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x126126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1261267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x126126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1261268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x126126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x126126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1261269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x126126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x126126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x126126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x126126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x126126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x126126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126056090 '__clang_svint8x3_t'
|-TypedefDecl 0x126126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1260560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x126126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1260560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x126126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1260560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x126126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x126126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x126126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x126126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x126126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x126127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1260561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x126127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1260561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1261278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1260561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x126127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1261279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126056230 '__clang_svint16x4_t'
|-TypedefDecl 0x126127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126056250 '__clang_svint32x4_t'
|-TypedefDecl 0x126127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126056270 '__clang_svint64x4_t'
|-TypedefDecl 0x126127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x126127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1260562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x126127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1260562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x126127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1260562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x126127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x126127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x126127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x126127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x126127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126056390 '__SVBool_t'
|-TypedefDecl 0x126127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1260563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x126127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1260563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x126127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1260563f0 '__SVCount_t'
|-TypedefDecl 0x126127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x126127fb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-TypedefDecl 0x126128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x126127fb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-FunctionDecl 0x126128468 <dataset_diviso_filec/func24176_vuln.c:1:1, line:40:1> line:1:1 invalid doapr_outch 'int (char **, char **, int *, int *, int)'
| |-ParmVarDecl 0x126128108 <col:13, col:20> col:20 used sbuffer 'char **'
| |-ParmVarDecl 0x126128188 <line:2:13, col:20> col:20 used buffer 'char **'
| |-ParmVarDecl 0x126128258 <col:28, col:36> col:36 invalid currlen 'int *'
| |-ParmVarDecl 0x1261282d8 <col:45, col:53> col:53 invalid maxlen 'int *'
| |-ParmVarDecl 0x126128358 <col:61, col:65> col:65 used c 'int'
| `-CompoundStmt 0x126144318 <line:3:1, line:40:1>
|   |-CallExpr 0x126141ee8 <line:5:5, col:46> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x126128690 <col:5> 'int ()' Function 0x1261285d8 'assert' 'int ()'
|   | `-BinaryOperator 0x126141ec8 <col:12, col:42> 'int' contains-errors '||'
|   |   |-BinaryOperator 0x126141e68 <col:12, col:24> 'int' contains-errors '!='
|   |   | |-UnaryOperator 0x126141e30 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x126141e18 <col:13> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1261286b0 <col:13> 'char **' lvalue ParmVar 0x126128108 'sbuffer' 'char **'
|   |   | `-RecoveryExpr 0x126141e48 <col:24> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x126141ea8 <col:32, col:42> 'int' contains-errors '!='
|   |     |-DeclRefExpr 0x126128738 <col:32> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   |     `-RecoveryExpr 0x126141e88 <col:42> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x126141ff0 <line:8:5, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x126141f10 <col:5> 'int ()' Function 0x1261285d8 'assert' 'int ()'
|   | `-BinaryOperator 0x126141fd0 <col:12, col:25> 'int' contains-errors '<='
|   |   |-UnaryOperator 0x126141f68 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x126141f50 <col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   `-RecoveryExpr 0x126141f30 <col:13> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x126141fb8 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x126141fa0 <col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x126141f80 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x126143dd8 <line:10:5, line:30:5>
|   | |-BinaryOperator 0x1261420f8 <line:10:9, col:32> 'int' contains-errors '&&'
|   | | |-DeclRefExpr 0x126142018 <col:9> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   | | `-BinaryOperator 0x1261420d8 <col:19, col:32> 'int' contains-errors '=='
|   | |   |-UnaryOperator 0x126142070 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x126142058 <col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |   |   `-RecoveryExpr 0x126142038 <col:20> '<dependent type>' contains-errors lvalue
|   | |   `-UnaryOperator 0x1261420c0 <col:31, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x1261420a8 <col:32> '<dependent type>' contains-errors <LValueToRValue>
|   | |       `-RecoveryExpr 0x126142088 <col:32> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x126143db8 <col:40, line:30:5>
|   |   |-CompoundAssignOperator 0x126142188 <line:11:9, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-UnaryOperator 0x126142150 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x126142138 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x126142118 <col:10> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x126142168 <col:20> 'int' 1024
|   |   `-IfStmt 0x126143d88 <line:12:9, line:29:9> has_else
|   |     |-BinaryOperator 0x1261422c0 <line:12:13, col:24> 'int' contains-errors '=='
|   |     | |-UnaryOperator 0x126142288 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |     | | `-ImplicitCastExpr 0x126142270 <col:14> 'char **' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1261421b8 <col:14> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   |     | `-RecoveryExpr 0x1261422a0 <col:24> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x126143a30 <col:30, line:23:9>
|   |     | |-BinaryOperator 0x1261424a8 <line:13:13, col:45> 'char *' contains-errors '='
|   |     | | |-UnaryOperator 0x126142318 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x126142300 <col:14> 'char **' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x1261422e0 <col:14> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   |     | | `-CallExpr 0x126142480 <col:23, col:45> '<dependent type>' contains-errors
|   |     | |   |-DeclRefExpr 0x126142410 <col:23> 'int ()' Function 0x126142358 'OPENSSL_malloc' 'int ()'
|   |     | |   `-UnaryOperator 0x126142468 <col:38, col:39> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | |     `-ImplicitCastExpr 0x126142450 <col:39> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |       `-RecoveryExpr 0x126142430 <col:39> '<dependent type>' contains-errors lvalue
|   |     | |-IfStmt 0x126142618 <line:14:13, line:17:13>
|   |     | | |-BinaryOperator 0x1261425d0 <line:14:17, col:28> 'int' contains-errors '=='
|   |     | | | |-UnaryOperator 0x126142598 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |     | | | | `-ImplicitCastExpr 0x126142580 <col:18> 'char **' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x1261424c8 <col:18> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   |     | | | `-RecoveryExpr 0x1261425b0 <col:28> '<dependent type>' contains-errors lvalue
|   |     | | `-CompoundStmt 0x126142600 <col:34, line:17:13>
|   |     | |   `-ReturnStmt 0x1261425f0 <line:16:17>
|   |     | |-IfStmt 0x1261438e8 <line:18:13, line:21:13>
|   |     | | |-BinaryOperator 0x1261426a8 <line:18:17, col:28> 'int' contains-errors '>'
|   |     | | | |-UnaryOperator 0x126142670 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | | | | `-ImplicitCastExpr 0x126142658 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | | |   `-RecoveryExpr 0x126142638 <col:18> '<dependent type>' contains-errors lvalue
|   |     | | | `-IntegerLiteral 0x126142688 <col:28> 'int' 0
|   |     | | `-CompoundStmt 0x1261438c8 <col:31, line:21:13>
|   |     | |   |-CallExpr 0x126142838 <line:19:17, col:40> '<dependent type>' contains-errors
|   |     | |   | |-DeclRefExpr 0x1261426c8 <col:17> 'int ()' Function 0x1261285d8 'assert' 'int ()'
|   |     | |   | `-BinaryOperator 0x126142818 <col:24, col:36> 'int' contains-errors '!='
|   |     | |   |   |-UnaryOperator 0x1261427e0 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
|   |     | |   |   | `-ImplicitCastExpr 0x1261427c8 <col:25> 'char **' <LValueToRValue>
|   |     | |   |   |   `-DeclRefExpr 0x1261426e8 <col:25> 'char **' lvalue ParmVar 0x126128108 'sbuffer' 'char **'
|   |     | |   |   `-RecoveryExpr 0x1261427f8 <col:36> '<dependent type>' contains-errors lvalue
|   |     | |   `-CallExpr 0x126143890 <line:20:17, col:51> '<dependent type>' contains-errors
|   |     | |     |-DeclRefExpr 0x126143750 <col:17> 'void *(void *, const void *, unsigned long)' Function 0x126142d00 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |     | |     |-UnaryOperator 0x1261437a8 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
|   |     | |     | `-ImplicitCastExpr 0x126143790 <col:25> 'char **' <LValueToRValue>
|   |     | |     |   `-DeclRefExpr 0x126143770 <col:25> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   |     | |     |-UnaryOperator 0x1261437f8 <col:33, col:34> 'char *' lvalue prefix '*' cannot overflow
|   |     | |     | `-ImplicitCastExpr 0x1261437e0 <col:34> 'char **' <LValueToRValue>
|   |     | |     |   `-DeclRefExpr 0x1261437c0 <col:34> 'char **' lvalue ParmVar 0x126128108 'sbuffer' 'char **'
|   |     | |     `-UnaryOperator 0x126143848 <col:43, col:44> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | |       `-ImplicitCastExpr 0x126143830 <col:44> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |         `-RecoveryExpr 0x126143810 <col:44> '<dependent type>' contains-errors lvalue
|   |     | `-BinaryOperator 0x126143a10 <line:22:13, col:24> 'char *' contains-errors '='
|   |     |   |-UnaryOperator 0x1261439d8 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |     |   | `-ImplicitCastExpr 0x1261439c0 <col:14> 'char **' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x126143908 <col:14> 'char **' lvalue ParmVar 0x126128108 'sbuffer' 'char **'
|   |     |   `-RecoveryExpr 0x1261439f0 <col:24> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x126143d68 <line:23:16, line:29:9>
|   |       |-BinaryOperator 0x126143c80 <line:24:13, col:55> 'char *' contains-errors '='
|   |       | |-UnaryOperator 0x126143a98 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |       | | `-ImplicitCastExpr 0x126143a80 <col:14> 'char **' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x126143a60 <col:14> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   |       | `-CallExpr 0x126143c50 <col:23, col:55> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x126143b90 <col:23> 'int ()' Function 0x126143ad8 'OPENSSL_realloc' 'int ()'
|   |       |   |-UnaryOperator 0x126143be8 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x126143bd0 <col:40> 'char **' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x126143bb0 <col:40> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   |       |   `-UnaryOperator 0x126143c38 <col:48, col:49> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       |     `-ImplicitCastExpr 0x126143c20 <col:49> '<dependent type>' contains-errors <LValueToRValue>
|   |       |       `-RecoveryExpr 0x126143c00 <col:49> '<dependent type>' contains-errors lvalue
|   |       `-IfStmt 0x126143d48 <line:25:13, line:28:13>
|   |         |-UnaryOperator 0x126143d08 <line:25:17, col:19> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x126143cf0 <col:18, col:19> 'char *' <LValueToRValue>
|   |         |   `-UnaryOperator 0x126143cd8 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
|   |         |     `-ImplicitCastExpr 0x126143cc0 <col:19> 'char **' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x126143ca0 <col:19> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   |         `-CompoundStmt 0x126143d30 <col:27, line:28:13>
|   |           `-ReturnStmt 0x126143d20 <line:27:17>
|   |-IfStmt 0x1261442e8 <line:32:5, line:37:5>
|   | |-BinaryOperator 0x126143e98 <line:32:9, col:21> 'int' contains-errors '<'
|   | | |-UnaryOperator 0x126143e30 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x126143e18 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x126143df8 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x126143e80 <col:20, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x126143e68 <col:21> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x126143e48 <col:21> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1261442d0 <col:29, line:37:5>
|   |   `-IfStmt 0x1261442a0 <line:33:9, line:36:45> has_else
|   |     |-ImplicitCastExpr 0x126143f08 <line:33:13, col:14> 'char *' <LValueToRValue>
|   |     | `-UnaryOperator 0x126143ef0 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |     |   `-ImplicitCastExpr 0x126143ed8 <col:14> 'char **' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x126143eb8 <col:14> 'char **' lvalue ParmVar 0x126128108 'sbuffer' 'char **'
|   |     |-BinaryOperator 0x1261440c0 <line:34:13, col:46> '<dependent type>' contains-errors '='
|   |     | |-ArraySubscriptExpr 0x126144030 <col:13, col:36> '<dependent type>' contains-errors lvalue
|   |     | | |-ImplicitCastExpr 0x126144018 <col:13, col:22> 'char *' <LValueToRValue>
|   |     | | | `-ParenExpr 0x126143f70 <col:13, col:22> 'char *' lvalue
|   |     | | |   `-UnaryOperator 0x126143f58 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
|   |     | | |     `-ImplicitCastExpr 0x126143f40 <col:15> 'char **' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x126143f20 <col:15> 'char **' lvalue ParmVar 0x126128108 'sbuffer' 'char **'
|   |     | | `-UnaryOperator 0x126144000 <col:24, col:34> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |     | |   `-ParenExpr 0x126143fe0 <col:24, col:33> '<dependent type>' contains-errors
|   |     | |     `-UnaryOperator 0x126143fc8 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | |       `-ImplicitCastExpr 0x126143fb0 <col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |         `-RecoveryExpr 0x126143f90 <col:26> '<dependent type>' contains-errors lvalue
|   |     | `-CStyleCastExpr 0x126144098 <col:40, col:46> 'char' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x126144080 <col:46> 'int' <LValueToRValue> part_of_explicit_cast
|   |     |     `-DeclRefExpr 0x126144050 <col:46> 'int' lvalue ParmVar 0x126128358 'c' 'int'
|   |     `-BinaryOperator 0x126144280 <line:36:13, col:45> '<dependent type>' contains-errors '='
|   |       |-ArraySubscriptExpr 0x1261441f0 <col:13, col:35> '<dependent type>' contains-errors lvalue
|   |       | |-ImplicitCastExpr 0x1261441d8 <col:13, col:21> 'char *' <LValueToRValue>
|   |       | | `-ParenExpr 0x126144130 <col:13, col:21> 'char *' lvalue
|   |       | |   `-UnaryOperator 0x126144118 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x126144100 <col:15> 'char **' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x1261440e0 <col:15> 'char **' lvalue ParmVar 0x126128188 'buffer' 'char **'
|   |       | `-UnaryOperator 0x1261441c0 <col:23, col:33> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |       |   `-ParenExpr 0x1261441a0 <col:23, col:32> '<dependent type>' contains-errors
|   |       |     `-UnaryOperator 0x126144188 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       |       `-ImplicitCastExpr 0x126144170 <col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |       |         `-RecoveryExpr 0x126144150 <col:25> '<dependent type>' contains-errors lvalue
|   |       `-CStyleCastExpr 0x126144258 <col:39, col:45> 'char' <IntegralCast>
|   |         `-ImplicitCastExpr 0x126144240 <col:45> 'int' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x126144210 <col:45> 'int' lvalue ParmVar 0x126128358 'c' 'int'
|   `-ReturnStmt 0x126144308 <line:39:5>
`-FunctionDecl 0x126142d00 <line:20:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x126143600 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x126143668 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x1261436d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x126142da8 <<invalid sloc>> Implicit 882
