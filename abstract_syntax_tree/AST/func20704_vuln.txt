TranslationUnitDecl 0x137855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1378564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137855bd0 '__int128'
|-TypedefDecl 0x137856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137855bf0 'unsigned __int128'
|-TypedefDecl 0x14000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14000bc00 'struct __NSConstantString_tag'
|   `-Record 0x137856580 '__NSConstantString_tag'
|-TypedefDecl 0x14000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137855d90 '__SVInt8_t'
|-TypedefDecl 0x14000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137855db0 '__SVInt16_t'
|-TypedefDecl 0x14000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137855dd0 '__SVInt32_t'
|-TypedefDecl 0x14000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137855df0 '__SVInt64_t'
|-TypedefDecl 0x14000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137855e10 '__SVUint8_t'
|-TypedefDecl 0x14000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137855e30 '__SVUint16_t'
|-TypedefDecl 0x14000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137855e50 '__SVUint32_t'
|-TypedefDecl 0x14000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137855e70 '__SVUint64_t'
|-TypedefDecl 0x14000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137855e90 '__SVFloat16_t'
|-TypedefDecl 0x14000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1378560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1378560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1378560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1378561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1378561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1378561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1378562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1378562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1378562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137856390 '__SVBool_t'
|-TypedefDecl 0x14000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1378563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1378563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1378563f0 '__SVCount_t'
|-TypedefDecl 0x14000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14000dbb0 'char *'
|   `-BuiltinType 0x1378556b0 'char'
|-TypedefDecl 0x14000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14000dbb0 'char *'
|   `-BuiltinType 0x1378556b0 'char'
|-FunctionDecl 0x14000de88 <dataset_diviso_filec/func20704_vuln.c:1:1, line:52:1> line:1:1 invalid get_multipart_info 'int (int *, int *)'
| |-ParmVarDecl 0x14000dd28 <col:20, col:33> col:33 referenced invalid pinfo 'int *'
| |-ParmVarDecl 0x14000dda8 <col:40, col:61> col:61 invalid message_info 'int *'
| `-CompoundStmt 0x14100ad88 <line:2:1, line:52:1>
|   |-DeclStmt 0x14000e090 <line:3:5, col:49>
|   | |-VarDecl 0x14000df58 <col:5, col:11> col:11 used start_boundary 'char *'
|   | `-VarDecl 0x14000dfd8 <col:5, col:45> col:28 used start_protocol 'char *' cinit
|   |   `-RecoveryExpr 0x14000e058 <col:45> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14000e1e0 <line:5:5, col:43>
|   | `-VarDecl 0x14000e110 <col:5, col:31> col:17 used type 'const char *' cinit
|   |   `-CXXDependentScopeMemberExpr 0x14000e198 <col:24, col:31> '<dependent type>' contains-errors lvalue ->match_string
|   |     `-RecoveryExpr 0x14000e178 <col:24> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14000e278 <line:6:5, col:21>
|   | `-VarDecl 0x14000e210 <col:5, col:11> col:11 used parameters 'char *'
|   |-DeclStmt 0x14000e310 <line:7:5, col:15>
|   | `-VarDecl 0x14000e2a8 <col:5, col:10> col:10 used dummy 'int'
|   |-IfStmt 0x141008628 <line:10:5, line:12:5>
|   | |-BinaryOperator 0x14000e3a0 <line:10:9, col:17> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x14000e328 <col:9> 'const char *' contains-errors lvalue Var 0x14000e110 'type' 'const char *'
|   | | `-RecoveryExpr 0x14000e380 <col:17> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x141008610 <col:23, line:12:5>
|   |   `-ReturnStmt 0x141008600 <line:11:9, col:16>
|   |     `-RecoveryExpr 0x14000e3d8 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x141008740 <line:13:5, line:15:5>
|   | |-BinaryOperator 0x1410086c0 <line:13:9, col:25> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x141008648 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1410086a0 <col:25> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x141008728 <col:31, line:15:5>
|   |   `-ReturnStmt 0x141008718 <line:14:9, col:16>
|   |     `-RecoveryExpr 0x1410086f8 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1410088a0 <line:16:5, line:18:5>
|   | |-BinaryOperator 0x141008820 <line:16:9, col:36> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x141008780 <col:9, col:23> '<dependent type>' contains-errors lvalue ->media_str
|   | | | `-RecoveryExpr 0x141008760 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x141008800 <col:36> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x141008888 <col:42, line:18:5>
|   |   `-ReturnStmt 0x141008878 <line:17:9, col:16>
|   |     `-RecoveryExpr 0x141008858 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x141008b30 <line:21:5, col:80> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1410088c0 <col:5> 'char *' lvalue Var 0x14000e210 'parameters' 'char *'
|   | `-CallExpr 0x141008b00 <col:18, col:80> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x141008a40 <col:18> 'int ()' Function 0x141008988 'unfold_and_compact_mime_header' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x141008a80 <col:49, col:63> '<dependent type>' contains-errors lvalue ->media_str
|   |   | `-RecoveryExpr 0x141008a60 <col:49> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x141008ae8 <col:74, col:75> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x141008ac8 <col:75> 'int' lvalue Var 0x14000e2a8 'dummy' 'int'
|   |-BinaryOperator 0x141009320 <line:23:5, col:89> 'char *' '='
|   | |-DeclRefExpr 0x141008b50 <col:5> 'char *' lvalue Var 0x14000df58 'start_boundary' 'char *'
|   | `-ImplicitCastExpr 0x141008ee0 <col:22, col:89> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x141008e78 <col:22, col:89> 'int'
|   |     |-ImplicitCastExpr 0x141008e60 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x141008c50 <col:22> 'int ()' Function 0x141008b98 'ws_find_media_type_parameter' 'int ()'
|   |     |-CallExpr 0x141008db8 <col:51, col:69> 'int'
|   |     | `-ImplicitCastExpr 0x141008da0 <col:51> 'int (*)()' <FunctionToPointerDecay>
|   |     |   `-DeclRefExpr 0x141008d50 <col:51> 'int ()' Function 0x141008c98 'wmem_packet_scope' 'int ()'
|   |     |-ImplicitCastExpr 0x141008eb0 <col:72> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x141008dd8 <col:72> 'char *' lvalue Var 0x14000e210 'parameters' 'char *'
|   |     `-ImplicitCastExpr 0x141008ec8 <col:84> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x141008e40 <col:84> 'char[4]' lvalue "STR"
|   |-IfStmt 0x1410093f0 <line:25:5, line:27:5>
|   | |-UnaryOperator 0x141009378 <line:25:8, col:9> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x141009360 <col:9> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x141009340 <col:9> 'char *' lvalue Var 0x14000df58 'start_boundary' 'char *'
|   | `-CompoundStmt 0x1410093d8 <col:25, line:27:5>
|   |   `-ReturnStmt 0x1410093c8 <line:26:9, col:16>
|   |     `-RecoveryExpr 0x1410093a8 <col:16> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x14100ad58 <line:41:5, line:47:5> has_else
|     |-ImplicitCastExpr 0x14100acc8 <line:41:8> 'char *' contains-errors <LValueToRValue>
|     | `-DeclRefExpr 0x14100aca8 <col:8> 'char *' contains-errors lvalue Var 0x14000dfd8 'start_protocol' 'char *'
|     |-CompoundStmt 0x14100ad00 <col:24, line:44:5>
|     `-CompoundStmt 0x14100ad48 <col:12, line:47:5>
`-FunctionDecl 0x141009458 <line:28:8> col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x141009558 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14100aa00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14100aa68 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x141009500 <<invalid sloc>> Implicit 888
