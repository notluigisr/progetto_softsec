TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x13000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13000bc00 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x13000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x13000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x13000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x13000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x13000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x13000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x13000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x13000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x13000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x13000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x13000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x13000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x13000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
`-FunctionDecl 0x13000de38 <dataset_diviso_filec/func3005_vuln.c:1:1, line:31:1> line:1:1 _asn1_ltostr 'int (long, char *)'
  |-ParmVarDecl 0x13000dcd8 <col:15, col:20> col:20 used v 'long'
  |-ParmVarDecl 0x13000dd58 <col:23, col:29> col:29 used str 'char *'
  `-CompoundStmt 0x130028b20 <line:2:1, line:31:1>
    |-DeclStmt 0x13000e050 <line:3:3, col:12>
    | |-VarDecl 0x13000df50 <col:3, col:8> col:8 used d 'long'
    | `-VarDecl 0x13000dfd0 <col:3, col:11> col:11 used r 'long'
    |-DeclStmt 0x13000e110 <line:4:3, col:29>
    | `-VarDecl 0x13000e0a8 <col:3, col:8> col:8 referenced invalid temp 'char'
    |-DeclStmt 0x13000e2c8 <line:5:3, col:22>
    | |-VarDecl 0x13000e140 <col:3, col:7> col:7 used count 'int'
    | |-VarDecl 0x13000e1c0 <col:3, col:14> col:14 used k 'int'
    | `-VarDecl 0x13000e240 <col:3, col:17> col:17 used start 'int'
    |-IfStmt 0x130026bb0 <line:7:3, line:14:13> has_else
    | |-BinaryOperator 0x13000e350 <line:7:7, col:11> 'int' '<'
    | | |-ImplicitCastExpr 0x13000e320 <col:7> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x13000e2e0 <col:7> 'long' lvalue ParmVar 0x13000dcd8 'v' 'long'
    | | `-ImplicitCastExpr 0x13000e338 <col:11> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x13000e300 <col:11> 'int' 0
    | |-CompoundStmt 0x130026b28 <line:8:5, line:12:5>
    | | |-BinaryOperator 0x130026a18 <line:9:7, col:16> 'char' '='
    | | | |-ArraySubscriptExpr 0x13000e3c8 <col:7, col:12> 'char' lvalue
    | | | | |-ImplicitCastExpr 0x13000e3b0 <col:7> 'char *' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x13000e370 <col:7> 'char *' lvalue ParmVar 0x13000dd58 'str' 'char *'
    | | | | `-IntegerLiteral 0x13000e390 <col:11> 'int' 0
    | | | `-ImplicitCastExpr 0x130026a00 <col:16> 'char' <IntegralCast>
    | | |   `-CharacterLiteral 0x13000e3e8 <col:16> 'int' 45
    | | |-BinaryOperator 0x130026a78 <line:10:7, col:15> 'int' '='
    | | | |-DeclRefExpr 0x130026a38 <col:7> 'int' lvalue Var 0x13000e240 'start' 'int'
    | | | `-IntegerLiteral 0x130026a58 <col:15> 'int' 1
    | | `-BinaryOperator 0x130026b08 <line:11:7, col:12> 'long' '='
    | |   |-DeclRefExpr 0x130026a98 <col:7> 'long' lvalue ParmVar 0x13000dcd8 'v' 'long'
    | |   `-UnaryOperator 0x130026af0 <col:11, col:12> 'long' prefix '-'
    | |     `-ImplicitCastExpr 0x130026ad8 <col:12> 'long' <LValueToRValue>
    | |       `-DeclRefExpr 0x130026ab8 <col:12> 'long' lvalue ParmVar 0x13000dcd8 'v' 'long'
    | `-BinaryOperator 0x130026b90 <line:14:5, col:13> 'int' '='
    |   |-DeclRefExpr 0x130026b50 <col:5> 'int' lvalue Var 0x13000e240 'start' 'int'
    |   `-IntegerLiteral 0x130026b70 <col:13> 'int' 0
    |-BinaryOperator 0x130026c20 <line:16:3, col:11> 'int' '='
    | |-DeclRefExpr 0x130026be0 <col:3> 'int' lvalue Var 0x13000e140 'count' 'int'
    | `-IntegerLiteral 0x130026c00 <col:11> 'int' 0
    |-DoStmt 0x130027148 <line:17:3, line:25:11>
    | |-CompoundStmt 0x1300270d8 <line:18:5, line:24:5>
    | | |-BinaryOperator 0x130026cf0 <line:19:7, col:15> 'long' '='
    | | | |-DeclRefExpr 0x130026c40 <col:7> 'long' lvalue Var 0x13000df50 'd' 'long'
    | | | `-BinaryOperator 0x130026cd0 <col:11, col:15> 'long' '/'
    | | |   |-ImplicitCastExpr 0x130026ca0 <col:11> 'long' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x130026c60 <col:11> 'long' lvalue ParmVar 0x13000dcd8 'v' 'long'
    | | |   `-ImplicitCastExpr 0x130026cb8 <col:15> 'long' <IntegralCast>
    | | |     `-IntegerLiteral 0x130026c80 <col:15> 'int' 10
    | | |-BinaryOperator 0x130026e18 <line:20:7, col:19> 'long' '='
    | | | |-DeclRefExpr 0x130026d10 <col:7> 'long' lvalue Var 0x13000dfd0 'r' 'long'
    | | | `-BinaryOperator 0x130026df8 <col:11, col:19> 'long' '-'
    | | |   |-ImplicitCastExpr 0x130026de0 <col:11> 'long' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x130026d30 <col:11> 'long' lvalue ParmVar 0x13000dcd8 'v' 'long'
    | | |   `-BinaryOperator 0x130026dc0 <col:15, col:19> 'long' '*'
    | | |     |-ImplicitCastExpr 0x130026d90 <col:15> 'long' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x130026d50 <col:15> 'long' lvalue Var 0x13000df50 'd' 'long'
    | | |     `-ImplicitCastExpr 0x130026da8 <col:19> 'long' <IntegralCast>
    | | |       `-IntegerLiteral 0x130026d70 <col:19> 'int' 10
    | | |-BinaryOperator 0x130027008 <line:21:7, col:42> '<dependent type>' contains-errors '='
    | | | |-ArraySubscriptExpr 0x130026f28 <col:7, col:25> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x130026f10 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-RecoveryExpr 0x130026e58 <col:7> '<dependent type>' contains-errors lvalue
    | | | | |   `-DeclRefExpr 0x130026e38 <col:7> 'char' lvalue Var 0x13000e0a8 'temp' 'char'
    | | | | `-BinaryOperator 0x130026ef0 <col:12, col:20> 'int' '+'
    | | | |   |-ImplicitCastExpr 0x130026ec0 <col:12> 'int' <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x130026e80 <col:12> 'int' lvalue Var 0x13000e240 'start' 'int'
    | | | |   `-ImplicitCastExpr 0x130026ed8 <col:20> 'int' <LValueToRValue>
    | | | |     `-DeclRefExpr 0x130026ea0 <col:20> 'int' lvalue Var 0x13000e140 'count' 'int'
    | | | `-BinaryOperator 0x130026fe8 <col:29, col:42> 'int' '+'
    | | |   |-CharacterLiteral 0x130026f48 <col:29> 'int' 48
    | | |   `-ImplicitCastExpr 0x130026fd0 <col:35, col:42> 'int' <IntegralCast>
    | | |     `-CStyleCastExpr 0x130026fa8 <col:35, col:42> 'char' <IntegralCast>
    | | |       `-ImplicitCastExpr 0x130026f90 <col:42> 'long' <LValueToRValue> part_of_explicit_cast
    | | |         `-DeclRefExpr 0x130026f60 <col:42> 'long' lvalue Var 0x13000dfd0 'r' 'long'
    | | |-UnaryOperator 0x130027048 <line:22:7, col:12> 'int' postfix '++'
    | | | `-DeclRefExpr 0x130027028 <col:7> 'int' lvalue Var 0x13000e140 'count' 'int'
    | | `-BinaryOperator 0x1300270b8 <line:23:7, col:11> 'long' '='
    | |   |-DeclRefExpr 0x130027060 <col:7> 'long' lvalue ParmVar 0x13000dcd8 'v' 'long'
    | |   `-ImplicitCastExpr 0x1300270a0 <col:11> 'long' <LValueToRValue>
    | |     `-DeclRefExpr 0x130027080 <col:11> 'long' lvalue Var 0x13000df50 'd' 'long'
    | `-ImplicitCastExpr 0x130027130 <line:25:10> 'long' <LValueToRValue>
    |   `-DeclRefExpr 0x130027110 <col:10> 'long' lvalue ParmVar 0x13000dcd8 'v' 'long'
    |-ForStmt 0x130027518 <line:27:3, line:28:48>
    | |-BinaryOperator 0x1300271a8 <line:27:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x130027168 <col:8> 'int' lvalue Var 0x13000e1c0 'k' 'int'
    | | `-IntegerLiteral 0x130027188 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x130027238 <col:15, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x130027208 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1300271c8 <col:15> 'int' lvalue Var 0x13000e1c0 'k' 'int'
    | | `-ImplicitCastExpr 0x130027220 <col:19> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1300271e8 <col:19> 'int' lvalue Var 0x13000e140 'count' 'int'
    | |-UnaryOperator 0x130027278 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x130027258 <col:26> 'int' lvalue Var 0x13000e1c0 'k' 'int'
    | `-BinaryOperator 0x1300274f8 <line:28:5, col:48> 'char' contains-errors '='
    |   |-ArraySubscriptExpr 0x130027358 <col:5, col:18> 'char' lvalue
    |   | |-ImplicitCastExpr 0x130027340 <col:5> 'char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x130027290 <col:5> 'char *' lvalue ParmVar 0x13000dd58 'str' 'char *'
    |   | `-BinaryOperator 0x130027320 <col:9, col:13> 'int' '+'
    |   |   |-ImplicitCastExpr 0x1300272f0 <col:9> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x1300272b0 <col:9> 'int' lvalue Var 0x13000e1c0 'k' 'int'
    |   |   `-ImplicitCastExpr 0x130027308 <col:13> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1300272d0 <col:13> 'int' lvalue Var 0x13000e240 'start' 'int'
    |   `-ArraySubscriptExpr 0x1300274d8 <col:22, col:48> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1300274c0 <col:22> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x130027378 <col:22> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x1300274a0 <col:27, col:47> 'int' '-'
    |       |-BinaryOperator 0x130027460 <col:27, col:43> 'int' '-'
    |       | |-BinaryOperator 0x130027408 <col:27, col:35> 'int' '+'
    |       | | |-ImplicitCastExpr 0x1300273d8 <col:27> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x130027398 <col:27> 'int' lvalue Var 0x13000e240 'start' 'int'
    |       | | `-ImplicitCastExpr 0x1300273f0 <col:35> 'int' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x1300273b8 <col:35> 'int' lvalue Var 0x13000e140 'count' 'int'
    |       | `-ImplicitCastExpr 0x130027448 <col:43> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x130027428 <col:43> 'int' lvalue Var 0x13000e1c0 'k' 'int'
    |       `-IntegerLiteral 0x130027480 <col:47> 'int' 1
    |-BinaryOperator 0x130027670 <line:29:3, col:24> 'char' '='
    | |-ArraySubscriptExpr 0x130027618 <col:3, col:20> 'char' lvalue
    | | |-ImplicitCastExpr 0x130027600 <col:3> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x130027550 <col:3> 'char *' lvalue ParmVar 0x13000dd58 'str' 'char *'
    | | `-BinaryOperator 0x1300275e0 <col:7, col:15> 'int' '+'
    | |   |-ImplicitCastExpr 0x1300275b0 <col:7> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x130027570 <col:7> 'int' lvalue Var 0x13000e140 'count' 'int'
    | |   `-ImplicitCastExpr 0x1300275c8 <col:15> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x130027590 <col:15> 'int' lvalue Var 0x13000e240 'start' 'int'
    | `-ImplicitCastExpr 0x130027658 <col:24> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x130027638 <col:24> 'int' 0
    `-ReturnStmt 0x130028b10 <line:30:3, col:10>
      `-ImplicitCastExpr 0x1300276c8 <col:10> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x1300276b0 <col:10> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x130027690 <col:10> 'char *' lvalue ParmVar 0x13000dd58 'str' 'char *'
