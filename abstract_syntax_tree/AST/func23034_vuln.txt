TranslationUnitDecl 0x150055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150055bd0 '__int128'
|-TypedefDecl 0x150056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150055bf0 'unsigned __int128'
|-TypedefDecl 0x150126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x150126000 'struct __NSConstantString_tag'
|   `-Record 0x150056580 '__NSConstantString_tag'
|-TypedefDecl 0x150126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150055d90 '__SVInt8_t'
|-TypedefDecl 0x150126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150055db0 '__SVInt16_t'
|-TypedefDecl 0x150126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150055dd0 '__SVInt32_t'
|-TypedefDecl 0x1501263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150055df0 '__SVInt64_t'
|-TypedefDecl 0x150126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150055e10 '__SVUint8_t'
|-TypedefDecl 0x1501264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150055e30 '__SVUint16_t'
|-TypedefDecl 0x150126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150055e50 '__SVUint32_t'
|-TypedefDecl 0x150126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150055e70 '__SVUint64_t'
|-TypedefDecl 0x1501265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150055e90 '__SVFloat16_t'
|-TypedefDecl 0x150126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1501266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150055ed0 '__SVFloat64_t'
|-TypedefDecl 0x150126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x150126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1501267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x150126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1501268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x150126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x150126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1501269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x150126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x150126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x150126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150056090 '__clang_svint8x3_t'
|-TypedefDecl 0x150126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x150126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1500560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x150126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1500560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x150126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x150126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x150126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x150126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x150126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1500561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1501278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1500561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1501279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150056230 '__clang_svint16x4_t'
|-TypedefDecl 0x150127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150056250 '__clang_svint32x4_t'
|-TypedefDecl 0x150127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150056270 '__clang_svint64x4_t'
|-TypedefDecl 0x150127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x150127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x150127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1500562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x150127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1500562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x150127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x150127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x150127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150056390 '__SVBool_t'
|-TypedefDecl 0x150127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x150127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1500563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x150127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1500563f0 '__SVCount_t'
|-TypedefDecl 0x150127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x150127fb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-TypedefDecl 0x150128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x150127fb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-FunctionDecl 0x150128238 <dataset_diviso_filec/func23034_vuln.c:1:1, line:20:1> line:1:14 build_alias 'char *(char *, const char *)' static
| |-ParmVarDecl 0x1501280d8 <col:26, col:32> col:32 used alias 'char *'
| |-ParmVarDecl 0x150128158 <col:39, col:51> col:51 used device_name 'const char *'
| `-CompoundStmt 0x150141840 <line:2:1, line:20:1>
|   |-DeclStmt 0x1501283b8 <line:3:2, col:12>
|   | `-VarDecl 0x150128350 <col:2, col:8> col:8 used dest 'char *'
|   |-BinaryOperator 0x150140d58 <line:7:2, col:27> 'char *' '='
|   | |-DeclRefExpr 0x1501283d0 <col:2> 'char *' lvalue Var 0x150128350 'dest' 'char *'
|   | `-CallExpr 0x150140cf8 <col:9, col:27> 'char *'
|   |   |-ImplicitCastExpr 0x150140ce0 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x150140c40 <col:9> 'char *(const char *, int)' Function 0x150140a60 'strrchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x150140d40 <col:17> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x150140d28 <col:17> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x150140c60 <col:17> 'char *' lvalue ParmVar 0x1501280d8 'alias' 'char *'
|   |   `-CharacterLiteral 0x150140c80 <col:24> 'int' 47
|   |-IfStmt 0x1501417d8 <line:8:2, line:17:2>
|   | |-ImplicitCastExpr 0x150140d98 <line:8:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x150140d78 <col:6> 'char *' lvalue Var 0x150128350 'dest' 'char *'
|   | `-CompoundStmt 0x1501417a8 <col:12, line:17:2>
|   |   |-BinaryOperator 0x150140e30 <line:9:3, col:11> 'char' '='
|   |   | |-UnaryOperator 0x150140de8 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x150140dd0 <col:4> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x150140db0 <col:4> 'char *' lvalue Var 0x150128350 'dest' 'char *'
|   |   | `-ImplicitCastExpr 0x150140e18 <col:11> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x150140e00 <col:11> 'int' 0
|   |   |-CallExpr 0x150141050 <line:10:3, col:49> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x150140f80 <col:3> 'int ()' Function 0x150140ec8 'bb_make_directory' 'int ()'
|   |   | |-DeclRefExpr 0x150140fa0 <col:21> 'char *' lvalue ParmVar 0x1501280d8 'alias' 'char *'
|   |   | |-IntegerLiteral 0x150140fc0 <col:28> 'int' 493
|   |   | `-RecoveryExpr 0x150141030 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x150141108 <line:11:3, col:11> 'char' '='
|   |   | |-UnaryOperator 0x1501410c0 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1501410a8 <col:4> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x150141088 <col:4> 'char *' lvalue Var 0x150128350 'dest' 'char *'
|   |   | `-ImplicitCastExpr 0x1501410f0 <col:11> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x1501410d8 <col:11> 'int' 47
|   |   `-IfStmt 0x150141788 <line:12:3, line:16:3>
|   |     |-BinaryOperator 0x1501411e8 <line:12:7, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1501411d0 <col:7, col:13> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1501411b8 <col:7, col:13> 'char' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x150141180 <col:7, col:13> 'char' lvalue
|   |     | |     |-ImplicitCastExpr 0x150141168 <col:7> 'char *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x150141128 <col:7> 'char *' lvalue Var 0x150128350 'dest' 'char *'
|   |     | |     `-IntegerLiteral 0x150141148 <col:12> 'int' 1
|   |     | `-CharacterLiteral 0x1501411a0 <col:18> 'int' 0
|   |     `-CompoundStmt 0x150141760 <col:24, line:16:3>
|   |       |-BinaryOperator 0x150141260 <line:13:4, col:11> 'char *' '='
|   |       | |-DeclRefExpr 0x150141208 <col:4> 'char *' lvalue Var 0x150128350 'dest' 'char *'
|   |       | `-ImplicitCastExpr 0x150141248 <col:11> 'char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x150141228 <col:11> 'char *' lvalue ParmVar 0x1501280d8 'alias' 'char *'
|   |       |-BinaryOperator 0x1501414a0 <line:14:4, col:47> 'char *' '='
|   |       | |-DeclRefExpr 0x150141280 <col:4> 'char *' lvalue ParmVar 0x1501280d8 'alias' 'char *'
|   |       | `-ImplicitCastExpr 0x150141488 <col:12, col:47> 'char *' <IntegralToPointer>
|   |       |   `-CallExpr 0x150141428 <col:12, col:47> 'int'
|   |       |     |-ImplicitCastExpr 0x150141410 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x150141380 <col:12> 'int ()' Function 0x1501412c8 'concat_path_file' 'int ()'
|   |       |     |-ImplicitCastExpr 0x150141458 <col:29> 'char *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x1501413a0 <col:29> 'char *' lvalue ParmVar 0x1501280d8 'alias' 'char *'
|   |       |     `-ImplicitCastExpr 0x150141470 <col:36> 'const char *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1501413c0 <col:36> 'const char *' lvalue ParmVar 0x150128158 'device_name' 'const char *'
|   |       `-CallExpr 0x150141708 <line:15:4, col:13> 'void'
|   |         |-ImplicitCastExpr 0x1501416f0 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x150141668 <col:4> 'void (void *)' Function 0x1501414f8 'free' 'void (void *)'
|   |         `-ImplicitCastExpr 0x150141748 <col:9> 'void *' <BitCast>
|   |           `-ImplicitCastExpr 0x150141730 <col:9> 'char *' <LValueToRValue>
|   |             `-DeclRefExpr 0x150141688 <col:9> 'char *' lvalue Var 0x150128350 'dest' 'char *'
|   `-ReturnStmt 0x150141830 <line:19:2, col:9>
|     `-ImplicitCastExpr 0x150141818 <col:9> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1501417f8 <col:9> 'char *' lvalue ParmVar 0x1501280d8 'alias' 'char *'
|-FunctionDecl 0x150140a60 <line:7:9> col:9 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x150140b60 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x150140bc8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x150140b08 <<invalid sloc>> Implicit 896
`-FunctionDecl 0x1501414f8 <line:15:4> col:4 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x1501415f8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1501415a0 <<invalid sloc>> Implicit 873
