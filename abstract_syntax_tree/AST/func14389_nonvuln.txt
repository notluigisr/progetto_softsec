TranslationUnitDecl 0x129855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1298564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129855bd0 '__int128'
|-TypedefDecl 0x129856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129855bf0 'unsigned __int128'
|-TypedefDecl 0x12a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x129856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129855d90 '__SVInt8_t'
|-TypedefDecl 0x12a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129855db0 '__SVInt16_t'
|-TypedefDecl 0x12a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129855df0 '__SVInt64_t'
|-TypedefDecl 0x12a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129855e10 '__SVUint8_t'
|-TypedefDecl 0x12a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129855e30 '__SVUint16_t'
|-TypedefDecl 0x12a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129855e50 '__SVUint32_t'
|-TypedefDecl 0x12a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129855e70 '__SVUint64_t'
|-TypedefDecl 0x12a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1298560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1298560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1298560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1298561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1298561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1298561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1298562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1298562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1298562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129856390 '__SVBool_t'
|-TypedefDecl 0x12a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1298563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1298563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1298563f0 '__SVCount_t'
|-TypedefDecl 0x12a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-TypedefDecl 0x12a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
`-FunctionDecl 0x12a00de80 <dataset_diviso_filec/func14389_nonvuln.c:1:1, line:20:1> line:1:13 invalid vmxnet3_update_interrupt_line_state 'void (int *, int)' static
  |-ParmVarDecl 0x12a00dd28 <col:49, col:63> col:63 referenced invalid s 'int *'
  |-ParmVarDecl 0x12a00dda8 <col:66, col:70> col:70 used lidx 'int'
  `-CompoundStmt 0x12a028d70 <line:2:1, line:20:1>
    |-IfStmt 0x12a027818 <line:3:5, line:9:5>
    | |-BinaryOperator 0x12a00e1a8 <line:3:9, line:4:34> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x12a00e070 <line:3:9, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x12a00e058 <col:10, col:36> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-CXXDependentScopeMemberExpr 0x12a00e010 <col:10, col:36> '<dependent type>' contains-errors lvalue .is_pending
    | | |     `-ArraySubscriptExpr 0x12a00dff0 <col:10, col:34> '<dependent type>' contains-errors lvalue
    | | |       |-ImplicitCastExpr 0x12a00dfc0 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | | |       | `-CXXDependentScopeMemberExpr 0x12a00df58 <col:10, col:13> '<dependent type>' contains-errors lvalue ->interrupt_states
    | | |       |   `-RecoveryExpr 0x12a00df38 <col:10> '<dependent type>' contains-errors lvalue
    | | |       `-ImplicitCastExpr 0x12a00dfd8 <col:30> 'int' <LValueToRValue>
    | | |         `-DeclRefExpr 0x12a00dfa0 <col:30> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
    | | `-CXXDependentScopeMemberExpr 0x12a00e160 <line:4:8, col:34> '<dependent type>' contains-errors lvalue .is_asserted
    | |   `-ArraySubscriptExpr 0x12a00e140 <col:8, col:32> '<dependent type>' contains-errors lvalue
    | |     |-ImplicitCastExpr 0x12a00e110 <col:8, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |     | `-CXXDependentScopeMemberExpr 0x12a00e0a8 <col:8, col:11> '<dependent type>' contains-errors lvalue ->interrupt_states
    | |     |   `-RecoveryExpr 0x12a00e088 <col:8> '<dependent type>' contains-errors lvalue
    | |     `-ImplicitCastExpr 0x12a00e128 <col:28> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x12a00e0f0 <col:28> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
    | `-CompoundStmt 0x12a0277f0 <col:47, line:9:5>
    |   |-CallExpr 0x12a027418 <line:5:9, col:30> 'int'
    |   | |-ImplicitCastExpr 0x12a027400 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12a00e320 <col:9> 'int ()' Function 0x12a00e268 'VMW_IRPRN' 'int ()'
    |   | |-ImplicitCastExpr 0x12a027448 <col:19> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x12a00e380 <col:19> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x12a027460 <col:26> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12a00e3a0 <col:26> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
    |   |-CallExpr 0x12a0275b8 <line:6:9, col:49> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a027558 <col:9> 'int ()' Function 0x12a0274a0 '_vmxnet3_deassert_interrupt_line' 'int ()'
    |   | |-RecoveryExpr 0x12a027578 <col:42> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12a027598 <col:45> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
    |   `-ReturnStmt 0x12a0277e0 <line:8:9>
    `-IfStmt 0x12a028d50 <line:11:5, line:19:5>
      |-BinaryOperator 0x12a027e80 <line:11:9, line:13:35> 'int' contains-errors '&&'
      | |-BinaryOperator 0x12a027d98 <line:11:9, line:12:35> 'int' contains-errors '&&'
      | | |-CXXDependentScopeMemberExpr 0x12a027c88 <line:11:9, col:35> '<dependent type>' contains-errors lvalue .is_pending
      | | | `-ArraySubscriptExpr 0x12a027c68 <col:9, col:33> '<dependent type>' contains-errors lvalue
      | | |   |-ImplicitCastExpr 0x12a027c38 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
      | | |   | `-CXXDependentScopeMemberExpr 0x12a027858 <col:9, col:12> '<dependent type>' contains-errors lvalue ->interrupt_states
      | | |   |   `-RecoveryExpr 0x12a027838 <col:9> '<dependent type>' contains-errors lvalue
      | | |   `-ImplicitCastExpr 0x12a027c50 <col:29> 'int' <LValueToRValue>
      | | |     `-DeclRefExpr 0x12a0278a0 <col:29> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
      | | `-UnaryOperator 0x12a027d80 <line:12:8, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
      | |   `-ImplicitCastExpr 0x12a027d68 <col:9, col:35> '<dependent type>' contains-errors <LValueToRValue>
      | |     `-CXXDependentScopeMemberExpr 0x12a027d20 <col:9, col:35> '<dependent type>' contains-errors lvalue .is_masked
      | |       `-ArraySubscriptExpr 0x12a027d00 <col:9, col:33> '<dependent type>' contains-errors lvalue
      | |         |-ImplicitCastExpr 0x12a027cd0 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
      | |         | `-CXXDependentScopeMemberExpr 0x12a027978 <col:9, col:12> '<dependent type>' contains-errors lvalue ->interrupt_states
      | |         |   `-RecoveryExpr 0x12a027958 <col:9> '<dependent type>' contains-errors lvalue
      | |         `-ImplicitCastExpr 0x12a027ce8 <col:29> 'int' <LValueToRValue>
      | |           `-DeclRefExpr 0x12a0279c0 <col:29> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
      | `-UnaryOperator 0x12a027e68 <line:13:8, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   `-ImplicitCastExpr 0x12a027e50 <col:9, col:35> '<dependent type>' contains-errors <LValueToRValue>
      |     `-CXXDependentScopeMemberExpr 0x12a027e08 <col:9, col:35> '<dependent type>' contains-errors lvalue .is_asserted
      |       `-ArraySubscriptExpr 0x12a027de8 <col:9, col:33> '<dependent type>' contains-errors lvalue
      |         |-ImplicitCastExpr 0x12a027db8 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
      |         | `-CXXDependentScopeMemberExpr 0x12a027ae8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->interrupt_states
      |         |   `-RecoveryExpr 0x12a027ac8 <col:9> '<dependent type>' contains-errors lvalue
      |         `-ImplicitCastExpr 0x12a027dd0 <col:29> 'int' <LValueToRValue>
      |           `-DeclRefExpr 0x12a027b30 <col:29> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
      `-CompoundStmt 0x12a028d28 <col:48, line:19:5>
        |-CallExpr 0x12a027f18 <line:14:9, col:30> 'int'
        | |-ImplicitCastExpr 0x12a027f00 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x12a027ea0 <col:9> 'int ()' Function 0x12a00e268 'VMW_IRPRN' 'int ()'
        | |-ImplicitCastExpr 0x12a027f48 <col:19> 'char *' <ArrayToPointerDecay>
        | | `-StringLiteral 0x12a027ec0 <col:19> 'char[4]' lvalue "STR"
        | `-ImplicitCastExpr 0x12a027f60 <col:26> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x12a027ee0 <col:26> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
        |-BinaryOperator 0x12a0282e8 <line:15:9, line:16:51> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x12a0282a0 <line:15:9, col:35> '<dependent type>' contains-errors lvalue .is_asserted
        | | `-ArraySubscriptExpr 0x12a028280 <col:9, col:33> '<dependent type>' contains-errors lvalue
        | |   |-ImplicitCastExpr 0x12a028250 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
        | |   | `-CXXDependentScopeMemberExpr 0x12a027fc0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->interrupt_states
        | |   |   `-RecoveryExpr 0x12a027f98 <col:9> '<dependent type>' contains-errors lvalue
        | |   |     `-DeclRefExpr 0x12a027f78 <col:9> 'int *' lvalue ParmVar 0x12a00dd28 's' 'int *'
        | |   `-ImplicitCastExpr 0x12a028268 <col:29> 'int' <LValueToRValue>
        | |     `-DeclRefExpr 0x12a028008 <col:29> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
        | `-CallExpr 0x12a028200 <line:16:13, col:51> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x12a0281a0 <col:13> 'int ()' Function 0x12a0280e8 '_vmxnet3_assert_interrupt_line' 'int ()'
        |   |-RecoveryExpr 0x12a0281c0 <col:44> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x12a0281e0 <col:47> 'int' lvalue ParmVar 0x12a00dda8 'lidx' 'int'
        `-ReturnStmt 0x12a028d18 <line:18:9>
