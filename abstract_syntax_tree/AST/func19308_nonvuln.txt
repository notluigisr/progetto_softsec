TranslationUnitDecl 0x124055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1240564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124055bd0 '__int128'
|-TypedefDecl 0x124056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124055bf0 'unsigned __int128'
|-TypedefDecl 0x124126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x124126000 'struct __NSConstantString_tag'
|   `-Record 0x124056580 '__NSConstantString_tag'
|-TypedefDecl 0x124126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124055d90 '__SVInt8_t'
|-TypedefDecl 0x124126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124055db0 '__SVInt16_t'
|-TypedefDecl 0x124126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124055dd0 '__SVInt32_t'
|-TypedefDecl 0x1241263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124055df0 '__SVInt64_t'
|-TypedefDecl 0x124126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124055e10 '__SVUint8_t'
|-TypedefDecl 0x1241264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124055e30 '__SVUint16_t'
|-TypedefDecl 0x124126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124055e50 '__SVUint32_t'
|-TypedefDecl 0x124126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124055e70 '__SVUint64_t'
|-TypedefDecl 0x1241265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124055e90 '__SVFloat16_t'
|-TypedefDecl 0x124126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1241266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124055ed0 '__SVFloat64_t'
|-TypedefDecl 0x124126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x124126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1241267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x124126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1241268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x124126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x124126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1241269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x124126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x124126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x124126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x124126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x124126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x124126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124056090 '__clang_svint8x3_t'
|-TypedefDecl 0x124126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1240560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x124126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1240560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x124126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1240560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x124126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x124126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x124126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x124126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x124126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x124127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1240561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x124127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1240561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1241278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1240561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x124127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1241279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124056230 '__clang_svint16x4_t'
|-TypedefDecl 0x124127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124056250 '__clang_svint32x4_t'
|-TypedefDecl 0x124127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124056270 '__clang_svint64x4_t'
|-TypedefDecl 0x124127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x124127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1240562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x124127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1240562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x124127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1240562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x124127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x124127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x124127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x124127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x124127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124056390 '__SVBool_t'
|-TypedefDecl 0x124127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1240563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x124127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1240563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x124127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1240563f0 '__SVCount_t'
|-TypedefDecl 0x124127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x124127fb0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
|-TypedefDecl 0x124128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x124127fb0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
`-FunctionDecl 0x124128238 <dataset_diviso_filec/func19308_nonvuln.c:1:1, line:37:1> line:1:1 yytnamerr 'int (char *, const char *)'
  |-ParmVarDecl 0x1241280d8 <col:12, col:18> col:18 used yyres 'char *'
  |-ParmVarDecl 0x124128158 <col:25, col:37> col:37 used yystr 'const char *'
  `-CompoundStmt 0x1241416a8 <line:2:1, line:37:1>
    |-IfStmt 0x124141200 <line:3:3, line:31:5>
    | |-BinaryOperator 0x1241283d0 <line:3:7, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x1241283b8 <col:7, col:8> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1241283a0 <col:7, col:8> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x124128370 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x124128358 <col:8> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x124128338 <col:8> 'const char *' lvalue ParmVar 0x124128158 'yystr' 'const char *'
    | | `-CharacterLiteral 0x124128388 <col:17> 'int' 34
    | `-CompoundStmt 0x1241411d8 <line:4:5, line:31:5>
    |   |-DeclStmt 0x1241284c0 <line:6:7, col:30>
    |   | `-VarDecl 0x124128420 <col:7, col:25> col:19 used yyp 'const char *' cinit
    |   |   `-ImplicitCastExpr 0x1241284a8 <col:25> 'const char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x124128488 <col:25> 'const char *' lvalue ParmVar 0x124128158 'yystr' 'const char *'
    |   |-ForStmt 0x124141178 <line:8:7, line:29:4>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | `-SwitchStmt 0x124128558 <line:9:2, line:29:4>
    |   |   |-ImplicitCastExpr 0x124128540 <line:9:10, col:13> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x124128528 <col:10, col:13> 'char' <LValueToRValue>
    |   |   |   `-UnaryOperator 0x124128510 <col:10, col:13> 'const char' lvalue prefix '*' cannot overflow
    |   |   |     `-UnaryOperator 0x1241284f8 <col:11, col:13> 'const char *' prefix '++'
    |   |   |       `-DeclRefExpr 0x1241284d8 <col:13> 'const char *' lvalue Var 0x124128420 'yyp' 'const char *'
    |   |   `-CompoundStmt 0x124141130 <line:10:4, line:29:4>
    |   |     |-CaseStmt 0x1241285b0 <line:11:4, line:13:11>
    |   |     | |-ConstantExpr 0x124128598 <line:11:9> 'int'
    |   |     | | `-CharacterLiteral 0x124128580 <col:9> 'int' 39
    |   |     | `-CaseStmt 0x124128608 <line:12:4, line:13:11>
    |   |     |   |-ConstantExpr 0x1241285f0 <line:12:9> 'int'
    |   |     |   | `-CharacterLiteral 0x1241285d8 <col:9> 'int' 44
    |   |     |   `-GotoStmt 0x124128680 <line:13:6, col:11> 'do_not_strip_quotes' 0x124128630
    |   |     |-CaseStmt 0x1241286c8 <line:15:4, line:17:13>
    |   |     | |-ConstantExpr 0x1241286b0 <line:15:9> 'int'
    |   |     | | `-CharacterLiteral 0x124128698 <col:9> 'int' 92
    |   |     | `-IfStmt 0x1241287c0 <line:16:6, line:17:13>
    |   |     |   |-BinaryOperator 0x124128788 <line:16:10, col:20> 'int' '!='
    |   |     |   | |-ImplicitCastExpr 0x124128770 <col:10, col:13> 'int' <IntegralCast>
    |   |     |   | | `-ImplicitCastExpr 0x124128758 <col:10, col:13> 'char' <LValueToRValue>
    |   |     |   | |   `-UnaryOperator 0x124128728 <col:10, col:13> 'const char' lvalue prefix '*' cannot overflow
    |   |     |   | |     `-UnaryOperator 0x124128710 <col:11, col:13> 'const char *' prefix '++'
    |   |     |   | |       `-DeclRefExpr 0x1241286f0 <col:13> 'const char *' lvalue Var 0x124128420 'yyp' 'const char *'
    |   |     |   | `-CharacterLiteral 0x124128740 <col:20> 'int' 92
    |   |     |   `-GotoStmt 0x1241287a8 <line:17:8, col:13> 'do_not_strip_quotes' 0x124128630
    |   |     |-DefaultStmt 0x124140af8 <line:19:4, col:11>
    |   |     | `-NullStmt 0x124140af0 <col:11>
    |   |     |-UnaryOperator 0x124140b38 <line:22:6, col:9> 'const char *' postfix '++'
    |   |     | `-DeclRefExpr 0x124140b18 <col:6> 'const char *' lvalue Var 0x124128420 'yyp' 'const char *'
    |   |     |-BreakStmt 0x124140b50 <line:23:6>
    |   |     |-CaseStmt 0x124140b88 <line:25:4, <invalid sloc>>
    |   |     | |-ConstantExpr 0x124140b70 <col:9> 'int'
    |   |     | | `-CharacterLiteral 0x124140b58 <col:9> 'int' 34
    |   |     | `-NullStmt 0x124140c88 <<invalid sloc>>
    |   |     `-ReturnStmt 0x124141120 <line:28:6, col:13>
    |   |       `-ImplicitCastExpr 0x124140ce0 <col:13> 'int' <PointerToIntegral>
    |   |         `-ImplicitCastExpr 0x124140cc8 <col:13> 'const char *' <LValueToRValue>
    |   |           `-DeclRefExpr 0x124140ca8 <col:13> 'const char *' lvalue Var 0x124128420 'yyp' 'const char *'
    |   `-LabelStmt 0x1241411b8 <line:30:5, col:26> 'do_not_strip_quotes'
    |     `-NullStmt 0x1241411b0 <col:26>
    |-IfStmt 0x124141458 <line:33:3, line:34:27>
    | |-UnaryOperator 0x124141258 <line:33:7, col:9> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x124141240 <col:9> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x124141220 <col:9> 'char *' lvalue ParmVar 0x1241280d8 'yyres' 'char *'
    | `-ReturnStmt 0x124141448 <line:34:5, col:27>
    |   `-CallExpr 0x124141408 <col:12, col:27> 'int'
    |     |-ImplicitCastExpr 0x1241413f0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x124141380 <col:12> 'int ()' Function 0x1241412c8 'yystrlen' 'int ()'
    |     `-ImplicitCastExpr 0x124141430 <col:22> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x1241413a0 <col:22> 'const char *' lvalue ParmVar 0x124128158 'yystr' 'const char *'
    `-ReturnStmt 0x124141698 <line:36:3, col:36>
      `-RecoveryExpr 0x124141668 <col:10, col:36> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x1241415d0 <col:10, col:32> 'int'
        | |-ImplicitCastExpr 0x1241415b8 <col:10> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x124141558 <col:10> 'int ()' Function 0x1241414a0 'yystpcpy' 'int ()'
        | |-ImplicitCastExpr 0x124141600 <col:20> 'char *' <LValueToRValue>
        | | `-DeclRefExpr 0x124141578 <col:20> 'char *' lvalue ParmVar 0x1241280d8 'yyres' 'char *'
        | `-ImplicitCastExpr 0x124141618 <col:27> 'const char *' <LValueToRValue>
        |   `-DeclRefExpr 0x124141598 <col:27> 'const char *' lvalue ParmVar 0x124128158 'yystr' 'const char *'
        `-DeclRefExpr 0x124141630 <col:36> 'char *' lvalue ParmVar 0x1241280d8 'yyres' 'char *'
