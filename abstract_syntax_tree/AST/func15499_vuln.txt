TranslationUnitDecl 0x11d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d855bd0 '__int128'
|-TypedefDecl 0x11d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d855bf0 'unsigned __int128'
|-TypedefDecl 0x11e061430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e061200 'struct __NSConstantString_tag'
|   `-Record 0x11d856580 '__NSConstantString_tag'
|-TypedefDecl 0x11e061498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d855d90 '__SVInt8_t'
|-TypedefDecl 0x11e061500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d855db0 '__SVInt16_t'
|-TypedefDecl 0x11e061568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d855dd0 '__SVInt32_t'
|-TypedefDecl 0x11e0615d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d855df0 '__SVInt64_t'
|-TypedefDecl 0x11e061638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d855e10 '__SVUint8_t'
|-TypedefDecl 0x11e0616a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d855e30 '__SVUint16_t'
|-TypedefDecl 0x11e061708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d855e50 '__SVUint32_t'
|-TypedefDecl 0x11e061770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d855e70 '__SVUint64_t'
|-TypedefDecl 0x11e0617d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d855e90 '__SVFloat16_t'
|-TypedefDecl 0x11e061840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e0618a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e061910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e061978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e0619e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e061a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e061ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e061b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e061b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e061be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e061c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e061cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e061d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e061d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e061df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e061e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e061ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e061f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e061f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e061ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e062060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e0620c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e062130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e062198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e062a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e062a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e062ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e062b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e062ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e062c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e062c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e062cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e062d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e062da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e062e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e062e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e062ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e062f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e062fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e063018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d856390 '__SVBool_t'
|-TypedefDecl 0x11e063080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e0630e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e063150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d8563f0 '__SVCount_t'
|-TypedefDecl 0x11e0631f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e0631b0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
|-TypedefDecl 0x11e063268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e0631b0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
|-FunctionDecl 0x11e063458 <dataset_diviso_filec/func15499_vuln.c:1:1, line:26:1> line:1:17 invalid key_value_ok 'int (char *, char *)' static
| |-ParmVarDecl 0x11e0632f0 <col:30, col:37> col:37 used key 'char *'
| |-ParmVarDecl 0x11e063370 <col:42, col:49> col:49 used value 'char *'
| `-CompoundStmt 0x11e07f140 <line:2:1, line:26:1>
|   |-DeclStmt 0x11e063590 <line:3:5, col:12>
|   | `-VarDecl 0x11e063528 <col:5, col:11> col:11 used i 'char *'
|   |-ForStmt 0x11e07d1f0 <line:6:5, line:10:5>
|   | |-BinaryOperator 0x11e063600 <line:6:10, col:14> 'char *' '='
|   | | |-DeclRefExpr 0x11e0635a8 <col:10> 'char *' lvalue Var 0x11e063528 'i' 'char *'
|   | | `-ImplicitCastExpr 0x11e0635e8 <col:14> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11e0635c8 <col:14> 'char *' lvalue ParmVar 0x11e0632f0 'key' 'char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x11e0636c0 <col:19, col:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x11e0636a8 <col:19, col:20> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x11e063690 <col:19, col:20> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x11e063658 <col:19, col:20> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x11e063640 <col:20> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x11e063620 <col:20> 'char *' lvalue Var 0x11e063528 'i' 'char *'
|   | | `-IntegerLiteral 0x11e063670 <col:25> 'int' 0
|   | |-UnaryOperator 0x11e063700 <col:28, col:29> 'char *' postfix '++'
|   | | `-DeclRefExpr 0x11e0636e0 <col:28> 'char *' lvalue Var 0x11e063528 'i' 'char *'
|   | `-CompoundStmt 0x11e07d1d8 <line:7:5, line:10:5>
|   |   `-IfStmt 0x11e07d1b8 <line:8:9, line:9:20>
|   |     |-BinaryOperator 0x11e07d150 <line:8:13, col:69> 'int' '&&'
|   |     | |-BinaryOperator 0x11e07d058 <col:13, col:54> 'int' '&&'
|   |     | | |-BinaryOperator 0x11e07cf60 <col:13, col:39> 'int' '&&'
|   |     | | | |-UnaryOperator 0x11e07ce70 <col:13, col:24> 'int' prefix '!' cannot overflow
|   |     | | | | `-CallExpr 0x11e07ce18 <col:14, col:24> 'int'
|   |     | | | |   |-ImplicitCastExpr 0x11e07ce00 <col:14> 'int (*)(int)' <FunctionToPointerDecay>
|   |     | | | |   | `-DeclRefExpr 0x11e07cd60 <col:14> 'int (int)' Function 0x11e07cba0 'isalpha' 'int (int)'
|   |     | | | |   `-ImplicitCastExpr 0x11e07ce58 <col:22, col:23> 'int' <IntegralCast>
|   |     | | | |     `-ImplicitCastExpr 0x11e07ce40 <col:22, col:23> 'char' <LValueToRValue>
|   |     | | | |       `-UnaryOperator 0x11e07cdb8 <col:22, col:23> 'char' lvalue prefix '*' cannot overflow
|   |     | | | |         `-ImplicitCastExpr 0x11e07cda0 <col:23> 'char *' <LValueToRValue>
|   |     | | | |           `-DeclRefExpr 0x11e07cd80 <col:23> 'char *' lvalue Var 0x11e063528 'i' 'char *'
|   |     | | | `-ParenExpr 0x11e07cf40 <col:29, col:39> 'int'
|   |     | | |   `-BinaryOperator 0x11e07cf20 <col:30, col:36> 'int' '!='
|   |     | | |     |-ImplicitCastExpr 0x11e07cf08 <col:30, col:31> 'int' <IntegralCast>
|   |     | | |     | `-ImplicitCastExpr 0x11e07cef0 <col:30, col:31> 'char' <LValueToRValue>
|   |     | | |     |   `-UnaryOperator 0x11e07cec0 <col:30, col:31> 'char' lvalue prefix '*' cannot overflow
|   |     | | |     |     `-ImplicitCastExpr 0x11e07cea8 <col:31> 'char *' <LValueToRValue>
|   |     | | |     |       `-DeclRefExpr 0x11e07ce88 <col:31> 'char *' lvalue Var 0x11e063528 'i' 'char *'
|   |     | | |     `-CharacterLiteral 0x11e07ced8 <col:36> 'int' 45
|   |     | | `-ParenExpr 0x11e07d038 <col:44, col:54> 'int'
|   |     | |   `-BinaryOperator 0x11e07d018 <col:45, col:51> 'int' '!='
|   |     | |     |-ImplicitCastExpr 0x11e07d000 <col:45, col:46> 'int' <IntegralCast>
|   |     | |     | `-ImplicitCastExpr 0x11e07cfe8 <col:45, col:46> 'char' <LValueToRValue>
|   |     | |     |   `-UnaryOperator 0x11e07cfb8 <col:45, col:46> 'char' lvalue prefix '*' cannot overflow
|   |     | |     |     `-ImplicitCastExpr 0x11e07cfa0 <col:46> 'char *' <LValueToRValue>
|   |     | |     |       `-DeclRefExpr 0x11e07cf80 <col:46> 'char *' lvalue Var 0x11e063528 'i' 'char *'
|   |     | |     `-CharacterLiteral 0x11e07cfd0 <col:51> 'int' 95
|   |     | `-ParenExpr 0x11e07d130 <col:59, col:69> 'int'
|   |     |   `-BinaryOperator 0x11e07d110 <col:60, col:66> 'int' '!='
|   |     |     |-ImplicitCastExpr 0x11e07d0f8 <col:60, col:61> 'int' <IntegralCast>
|   |     |     | `-ImplicitCastExpr 0x11e07d0e0 <col:60, col:61> 'char' <LValueToRValue>
|   |     |     |   `-UnaryOperator 0x11e07d0b0 <col:60, col:61> 'char' lvalue prefix '*' cannot overflow
|   |     |     |     `-ImplicitCastExpr 0x11e07d098 <col:61> 'char *' <LValueToRValue>
|   |     |     |       `-DeclRefExpr 0x11e07d078 <col:61> 'char *' lvalue Var 0x11e063528 'i' 'char *'
|   |     |     `-CharacterLiteral 0x11e07d0c8 <col:66> 'int' 32
|   |     `-ReturnStmt 0x11e07d1a8 <line:9:13, col:20>
|   |       `-RecoveryExpr 0x11e07d188 <col:20> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11e07f0d8 <line:13:5, line:23:5>
|   | |-BinaryOperator 0x11e07d9e0 <line:13:9, line:14:39> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x11e07d920 <line:13:9, col:31> 'int' '=='
|   | | | |-CallExpr 0x11e07d890 <col:9, col:26> 'int'
|   | | | | |-ImplicitCastExpr 0x11e07d878 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x11e07d450 <col:9> 'int (const char *, const char *)' Function 0x11e07d270 'strcmp' 'int (const char *, const char *)'
|   | | | | |-ImplicitCastExpr 0x11e07d8d8 <col:16> 'const char *' <NoOp>
|   | | | | | `-ImplicitCastExpr 0x11e07d8c0 <col:16> 'char *' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x11e07d470 <col:16> 'char *' lvalue ParmVar 0x11e0632f0 'key' 'char *'
|   | | | | `-ImplicitCastExpr 0x11e07d908 <col:21> 'const char *' <NoOp>
|   | | | |   `-ImplicitCastExpr 0x11e07d8f0 <col:21> 'char *' <ArrayToPointerDecay>
|   | | | |     `-StringLiteral 0x11e07d4d0 <col:21> 'char[4]' lvalue "STR"
|   | | | `-IntegerLiteral 0x11e07d5f8 <col:31> 'int' 0
|   | | `-BinaryOperator 0x11e07d9c0 <line:14:9, col:39> 'int' contains-errors '=='
|   | |   |-CallExpr 0x11e07d990 <col:9, col:34> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x11e07d638 <col:9> 'int (const char *, const char *)' Function 0x11e07d270 'strcmp' 'int (const char *, const char *)'
|   | |   | |-DeclRefExpr 0x11e07d658 <col:16> 'char *' lvalue ParmVar 0x11e0632f0 'key' 'char *'
|   | |   | `-RecoveryExpr 0x11e07d940 <col:21> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x11e07d6f0 <col:39> 'int' 0
|   | `-CompoundStmt 0x11e07f0c0 <line:16:5, line:23:5>
|   |   `-IfStmt 0x11e07f0a0 <line:17:9, line:22:9>
|   |     |-UnaryOperator 0x11e07ee28 <line:17:13, col:39> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x11e07ede8 <col:14, col:39> 'int'
|   |     |   |-ImplicitCastExpr 0x11e07edd0 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x11e07ed60 <col:14> 'int ()' Function 0x11e07eca8 'is_correct_filename' 'int ()'
|   |     |   `-ImplicitCastExpr 0x11e07ee10 <col:34> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x11e07ed80 <col:34> 'char *' lvalue ParmVar 0x11e063370 'value' 'char *'
|   |     `-CompoundStmt 0x11e07f080 <line:18:9, line:22:9>
|   |       |-CallExpr 0x11e07efb8 <line:19:13, line:20:33> 'int'
|   |       | |-ImplicitCastExpr 0x11e07efa0 <line:19:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x11e07ef20 <col:13> 'int ()' Function 0x11e07ee68 'error_msg' 'int ()'
|   |       | |-ImplicitCastExpr 0x11e07eff0 <col:23> 'char *' <ArrayToPointerDecay>
|   |       | | `-StringLiteral 0x11e07ef40 <col:23> 'char[4]' lvalue "STR"
|   |       | |-ImplicitCastExpr 0x11e07f008 <line:20:23> 'char *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x11e07ef60 <col:23> 'char *' lvalue ParmVar 0x11e0632f0 'key' 'char *'
|   |       | `-ImplicitCastExpr 0x11e07f020 <col:28> 'char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x11e07ef80 <col:28> 'char *' lvalue ParmVar 0x11e063370 'value' 'char *'
|   |       `-ReturnStmt 0x11e07f070 <line:21:13, col:20>
|   |         `-RecoveryExpr 0x11e07f050 <col:20> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x11e07f130 <line:25:5, col:12>
|     `-RecoveryExpr 0x11e07f110 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x11e07cba0 <line:8:14> col:14 implicit used isalpha 'int (int)' extern
| |-ParmVarDecl 0x11e07cca0 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x11e07cc48 <<invalid sloc>> Implicit 921
| |-NoThrowAttr 0x11e07cd10 <col:14> Implicit
| `-PureAttr 0x11e07cd38 <col:14> Implicit
`-FunctionDecl 0x11e07d270 <line:13:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x11e07d370 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x11e07d3d8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x11e07d318 <<invalid sloc>> Implicit 887
