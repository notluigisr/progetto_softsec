TranslationUnitDecl 0x131055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1310564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x131055bd0 '__int128'
|-TypedefDecl 0x131056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x131055bf0 'unsigned __int128'
|-TypedefDecl 0x13180be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13180bc00 'struct __NSConstantString_tag'
|   `-Record 0x131056580 '__NSConstantString_tag'
|-TypedefDecl 0x13180be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x131055d90 '__SVInt8_t'
|-TypedefDecl 0x13180bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x131055db0 '__SVInt16_t'
|-TypedefDecl 0x13180bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x131055dd0 '__SVInt32_t'
|-TypedefDecl 0x13180bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x131055df0 '__SVInt64_t'
|-TypedefDecl 0x13180c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x131055e10 '__SVUint8_t'
|-TypedefDecl 0x13180c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x131055e30 '__SVUint16_t'
|-TypedefDecl 0x13180c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x131055e50 '__SVUint32_t'
|-TypedefDecl 0x13180c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x131055e70 '__SVUint64_t'
|-TypedefDecl 0x13180c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x131055e90 '__SVFloat16_t'
|-TypedefDecl 0x13180c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x131055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13180c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x131055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13180c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x131055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13180c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x131055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13180c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x131055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13180c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x131055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13180c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x131055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13180c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x131055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13180c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x131055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13180c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x131055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13180c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x131055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13180c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x131056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13180c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x131056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13180c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x131056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13180c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x131056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13180c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x131056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13180c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1310560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13180c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1310560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13180c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1310560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13180c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x131056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13180ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x131056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13180cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x131056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13180cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x131056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13180cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x131056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13180d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1310561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13180d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1310561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13180d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1310561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13180d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x131056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13180d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x131056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13180d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x131056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13180d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x131056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13180d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x131056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13180d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1310562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13180d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1310562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13180d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1310562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13180d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x131056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13180d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x131056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13180d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x131056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13180d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x131056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13180da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x131056390 '__SVBool_t'
|-TypedefDecl 0x13180da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1310563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13180dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1310563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13180db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1310563f0 '__SVCount_t'
|-TypedefDecl 0x13180dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13180dbb0 'char *'
|   `-BuiltinType 0x1310556b0 'char'
|-TypedefDecl 0x13180dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13180dbb0 'char *'
|   `-BuiltinType 0x1310556b0 'char'
`-FunctionDecl 0x13180dfa8 <dataset_diviso_filec/func250_vuln.c:1:1, line:20:1> line:1:12 invalid putint 'int (int *, int, int, long)' static
  |-ParmVarDecl 0x13180dd28 <col:19, col:33> col:33 invalid out 'int *'
  |-ParmVarDecl 0x13180dda8 <col:38, col:42> col:42 used sgnd 'int'
  |-ParmVarDecl 0x13180de28 <col:48, col:52> col:52 used prec 'int'
  |-ParmVarDecl 0x13180dea8 <col:58, col:63> col:63 used val 'long'
  `-CompoundStmt 0x132009ec8 <line:2:1, line:20:1>
    |-DeclStmt 0x13180e0f0 <line:3:2, col:7>
    | `-VarDecl 0x13180e088 <col:2, col:6> col:6 used n 'int'
    |-DeclStmt 0x13180e188 <line:4:2, col:7>
    | `-VarDecl 0x13180e120 <col:2, col:6> col:6 used c 'int'
    |-DeclStmt 0x13180e220 <line:6:2, col:11>
    | `-VarDecl 0x13180e1b8 <col:2, col:8> col:8 tmp 'long'
    |-CallExpr 0x132009418 <line:7:2, col:52> 'int'
    | |-ImplicitCastExpr 0x132009400 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13180e390 <col:2> 'int ()' Function 0x13180e2d8 'assert' 'int ()'
    | `-BinaryOperator 0x1320093a8 <col:9, col:51> 'int' '||'
    |   |-ParenExpr 0x132009298 <col:9, col:28> 'int'
    |   | `-BinaryOperator 0x132009278 <col:10, col:27> 'int' '&&'
    |   |   |-UnaryOperator 0x13180e3e8 <col:10, col:11> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x13180e3d0 <col:11> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x13180e3b0 <col:11> 'int' lvalue ParmVar 0x13180dda8 'sgnd' 'int'
    |   |   `-BinaryOperator 0x132009258 <col:19, col:27> 'int' '>='
    |   |     |-ImplicitCastExpr 0x132009240 <col:19> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x132009200 <col:19> 'int' lvalue ParmVar 0x13180de28 'prec' 'int'
    |   |     `-IntegerLiteral 0x132009220 <col:27> 'int' 1
    |   `-ParenExpr 0x132009388 <col:33, col:51> 'int'
    |     `-BinaryOperator 0x132009368 <col:34, col:50> 'int' '&&'
    |       |-ImplicitCastExpr 0x132009350 <col:34> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x1320092b8 <col:34> 'int' lvalue ParmVar 0x13180dda8 'sgnd' 'int'
    |       `-BinaryOperator 0x132009330 <col:42, col:50> 'int' '>='
    |         |-ImplicitCastExpr 0x132009318 <col:42> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x1320092d8 <col:42> 'int' lvalue ParmVar 0x13180de28 'prec' 'int'
    |         `-IntegerLiteral 0x1320092f8 <col:50> 'int' 2
    |-IfStmt 0x1320096a0 <line:8:2, line:10:2>
    | |-ImplicitCastExpr 0x132009460 <line:8:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x132009440 <col:6> 'int' lvalue ParmVar 0x13180dda8 'sgnd' 'int'
    | `-CompoundStmt 0x132009688 <col:12, line:10:2>
    |   `-BinaryOperator 0x132009668 <line:9:3, col:35> 'long' '='
    |     |-DeclRefExpr 0x132009478 <col:3> 'long' lvalue ParmVar 0x13180dea8 'val' 'long'
    |     `-ImplicitCastExpr 0x132009650 <col:9, col:35> 'long' <IntegralCast>
    |       `-CallExpr 0x1320095f0 <col:9, col:35> 'int'
    |         |-ImplicitCastExpr 0x1320095d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x132009578 <col:9> 'int ()' Function 0x1320094c0 'encode_twos_comp' 'int ()'
    |         |-ImplicitCastExpr 0x132009620 <col:26> 'long' <LValueToRValue>
    |         | `-DeclRefExpr 0x132009598 <col:26> 'long' lvalue ParmVar 0x13180dea8 'val' 'long'
    |         `-ImplicitCastExpr 0x132009638 <col:31> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x1320095b8 <col:31> 'int' lvalue ParmVar 0x13180de28 'prec' 'int'
    |-CallExpr 0x132009788 <line:11:2, col:17> 'int'
    | |-ImplicitCastExpr 0x132009770 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1320096c0 <col:2> 'int ()' Function 0x13180e2d8 'assert' 'int ()'
    | `-BinaryOperator 0x132009750 <col:9, col:16> 'int' '>='
    |   |-ImplicitCastExpr 0x132009720 <col:9> 'long' <LValueToRValue>
    |   | `-DeclRefExpr 0x1320096e0 <col:9> 'long' lvalue ParmVar 0x13180dea8 'val' 'long'
    |   `-ImplicitCastExpr 0x132009738 <col:16> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x132009700 <col:16> 'int' 0
    |-CompoundAssignOperator 0x1320098c0 <line:12:2, col:23> 'long' '&=' ComputeLHSTy='long' ComputeResultTy='long'
    | |-DeclRefExpr 0x1320097b0 <col:2> 'long' lvalue ParmVar 0x13180dea8 'val' 'long'
    | `-ImplicitCastExpr 0x1320098a8 <col:9, col:23> 'long' <IntegralCast>
    |   `-BinaryOperator 0x132009888 <col:9, col:23> 'int' '-'
    |     |-ParenExpr 0x132009848 <col:9, col:19> 'int'
    |     | `-BinaryOperator 0x132009828 <col:10, col:15> 'int' '<<'
    |     |   |-IntegerLiteral 0x1320097d0 <col:10> 'int' 1
    |     |   `-ImplicitCastExpr 0x132009810 <col:15> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x1320097f0 <col:15> 'int' lvalue ParmVar 0x13180de28 'prec' 'int'
    |     `-IntegerLiteral 0x132009868 <col:23> 'int' 1
    |-BinaryOperator 0x1320099e8 <line:13:2, col:19> 'int' '='
    | |-DeclRefExpr 0x1320098f0 <col:2> 'int' lvalue Var 0x13180e088 'n' 'int'
    | `-BinaryOperator 0x1320099c8 <col:6, col:19> 'int' '/'
    |   |-ParenExpr 0x132009988 <col:6, col:15> 'int'
    |   | `-BinaryOperator 0x132009968 <col:7, col:14> 'int' '+'
    |   |   |-ImplicitCastExpr 0x132009950 <col:7> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x132009910 <col:7> 'int' lvalue ParmVar 0x13180de28 'prec' 'int'
    |   |   `-IntegerLiteral 0x132009930 <col:14> 'int' 7
    |   `-IntegerLiteral 0x1320099a8 <col:19> 'int' 8
    |-WhileStmt 0x132009e78 <line:14:2, line:18:2>
    | |-BinaryOperator 0x132009a60 <line:14:9, col:16> 'int' '>='
    | | |-UnaryOperator 0x132009a28 <col:9, col:11> 'int' prefix '--'
    | | | `-DeclRefExpr 0x132009a08 <col:11> 'int' lvalue Var 0x13180e088 'n' 'int'
    | | `-IntegerLiteral 0x132009a40 <col:16> 'int' 0
    | `-CompoundStmt 0x132009e58 <col:19, line:18:2>
    |   |-BinaryOperator 0x132009c20 <line:15:3, col:26> 'int' '='
    |   | |-DeclRefExpr 0x132009a80 <col:3> 'int' lvalue Var 0x13180e120 'c' 'int'
    |   | `-ImplicitCastExpr 0x132009c08 <col:7, col:26> 'int' <IntegralCast>
    |   |   `-BinaryOperator 0x132009be8 <col:7, col:26> 'long' '&'
    |   |     |-ParenExpr 0x132009b90 <col:7, col:22> 'long'
    |   |     | `-BinaryOperator 0x132009b70 <col:8, col:21> 'long' '>>'
    |   |     |   |-ImplicitCastExpr 0x132009b58 <col:8> 'long' <LValueToRValue>
    |   |     |   | `-DeclRefExpr 0x132009aa0 <col:8> 'long' lvalue ParmVar 0x13180dea8 'val' 'long'
    |   |     |   `-ParenExpr 0x132009b38 <col:15, col:21> 'int'
    |   |     |     `-BinaryOperator 0x132009b18 <col:16, col:20> 'int' '*'
    |   |     |       |-ImplicitCastExpr 0x132009b00 <col:16> 'int' <LValueToRValue>
    |   |     |       | `-DeclRefExpr 0x132009ac0 <col:16> 'int' lvalue Var 0x13180e088 'n' 'int'
    |   |     |       `-IntegerLiteral 0x132009ae0 <col:20> 'int' 8
    |   |     `-ImplicitCastExpr 0x132009bd0 <col:26> 'long' <IntegralCast>
    |   |       `-IntegerLiteral 0x132009bb0 <col:26> 'int' 255
    |   `-IfStmt 0x132009e38 <line:16:3, line:17:12>
    |     |-BinaryOperator 0x132009dd0 <line:16:7, col:34> 'int' contains-errors '!='
    |     | |-CallExpr 0x132009d80 <col:7, col:29> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x132009d20 <col:7> 'int ()' Function 0x132009c68 'jas_stream_putc' 'int ()'
    |     | | |-RecoveryExpr 0x132009d40 <col:23> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x132009d60 <col:28> 'int' lvalue Var 0x13180e120 'c' 'int'
    |     | `-DeclRefExpr 0x132009db0 <col:34> 'int' lvalue Var 0x13180e120 'c' 'int'
    |     `-ReturnStmt 0x132009e28 <line:17:4, col:12>
    |       `-UnaryOperator 0x132009e10 <col:11, col:12> 'int' prefix '-'
    |         `-IntegerLiteral 0x132009df0 <col:12> 'int' 1
    `-ReturnStmt 0x132009eb8 <line:19:2, col:9>
      `-IntegerLiteral 0x132009e98 <col:9> 'int' 0
