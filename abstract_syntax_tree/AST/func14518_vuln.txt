TranslationUnitDecl 0x152855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1528564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152855bd0 '__int128'
|-TypedefDecl 0x152856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152855bf0 'unsigned __int128'
|-TypedefDecl 0x152926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x152926000 'struct __NSConstantString_tag'
|   `-Record 0x152856580 '__NSConstantString_tag'
|-TypedefDecl 0x152926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152855d90 '__SVInt8_t'
|-TypedefDecl 0x152926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152855db0 '__SVInt16_t'
|-TypedefDecl 0x152926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152855dd0 '__SVInt32_t'
|-TypedefDecl 0x1529263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152855df0 '__SVInt64_t'
|-TypedefDecl 0x152926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152855e10 '__SVUint8_t'
|-TypedefDecl 0x1529264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152855e30 '__SVUint16_t'
|-TypedefDecl 0x152926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152855e50 '__SVUint32_t'
|-TypedefDecl 0x152926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152855e70 '__SVUint64_t'
|-TypedefDecl 0x1529265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152855e90 '__SVFloat16_t'
|-TypedefDecl 0x152926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1529266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152855ed0 '__SVFloat64_t'
|-TypedefDecl 0x152926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x152926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1529267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x152926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1529268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x152926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x152926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1529269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x152926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x152926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x152926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x152926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x152926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x152926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152856090 '__clang_svint8x3_t'
|-TypedefDecl 0x152926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1528560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x152926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1528560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x152926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1528560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x152926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x152926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x152926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x152926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x152926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x152927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1528561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x152927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1528561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1529278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1528561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x152927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1529279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152856230 '__clang_svint16x4_t'
|-TypedefDecl 0x152927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152856250 '__clang_svint32x4_t'
|-TypedefDecl 0x152927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152856270 '__clang_svint64x4_t'
|-TypedefDecl 0x152927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x152927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1528562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x152927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1528562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x152927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1528562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x152927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x152927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x152927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x152927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x152927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152856390 '__SVBool_t'
|-TypedefDecl 0x152927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1528563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x152927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1528563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x152927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1528563f0 '__SVCount_t'
|-TypedefDecl 0x152927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x152927fb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
|-TypedefDecl 0x152928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x152927fb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
`-FunctionDecl 0x152928190 <dataset_diviso_filec/func14518_vuln.c:1:1, line:53:1> line:1:13 test_jwt_token_escape 'void (void)' static
  `-CompoundStmt 0x1529459c8 <line:2:1, line:53:1>
    |-DeclStmt 0x1529412e8 <line:3:2, line:21:3>
    | |-RecordDecl 0x152928280 <line:3:2, line:9:2> line:3:9 struct test_case definition
    | | |-FieldDecl 0x152928338 <line:4:3, col:15> col:15 referenced azp 'const char *'
    | | |-FieldDecl 0x1529283a0 <line:5:3, col:15> col:15 referenced alg 'const char *'
    | | |-FieldDecl 0x152928408 <line:6:3, col:15> col:15 referenced kid 'const char *'
    | | |-FieldDecl 0x152928470 <line:7:3, col:15> col:15 referenced esc_azp 'const char *'
    | | `-FieldDecl 0x1529284d8 <line:8:3, col:15> col:15 referenced esc_kid 'const char *'
    | `-VarDecl 0x152928670 <line:3:2, line:21:2> line:9:4 used test_cases 'struct test_case[5]' cinit
    |   `-InitListExpr 0x152940c90 <col:19, line:21:2> 'struct test_case[5]'
    |     |-InitListExpr 0x152940ce0 <line:10:3, col:11> 'struct test_case'
    |     | |-ImplicitCastExpr 0x152940d60 <col:5> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x152940d48 <col:5> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x152928720 <col:5> 'char[4]' lvalue "STR"
    |     | |-ImplicitValueInitExpr 0x152940d78 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x152940d88 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x152940d98 <<invalid sloc>> 'const char *'
    |     | `-ImplicitValueInitExpr 0x152940da8 <<invalid sloc>> 'const char *'
    |     |-InitListExpr 0x152940dd0 <line:11:3, col:11> 'struct test_case'
    |     | |-ImplicitCastExpr 0x152940e50 <col:5> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x152940e38 <col:5> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x152928788 <col:5> 'char[4]' lvalue "STR"
    |     | |-ImplicitValueInitExpr 0x152940e68 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x152940e78 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x152940e88 <<invalid sloc>> 'const char *'
    |     | `-ImplicitValueInitExpr 0x152940e98 <<invalid sloc>> 'const char *'
    |     |-InitListExpr 0x152940ec8 <line:12:3, col:11> 'struct test_case'
    |     | |-ImplicitCastExpr 0x152940f48 <col:5> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x152940f30 <col:5> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x152940a00 <col:5> 'char[4]' lvalue "STR"
    |     | |-ImplicitValueInitExpr 0x152940f60 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x152940f70 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x152940f80 <<invalid sloc>> 'const char *'
    |     | `-ImplicitValueInitExpr 0x152940f90 <<invalid sloc>> 'const char *'
    |     |-InitListExpr 0x152940fd0 <line:13:3, line:19:3> 'struct test_case'
    |     | |-ImplicitCastExpr 0x152941050 <line:14:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x152941038 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x152940a68 <col:4> 'char[4]' lvalue "STR"
    |     | |-ImplicitCastExpr 0x152941080 <line:15:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x152941068 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x152940a88 <col:4> 'char[4]' lvalue "STR"
    |     | |-ImplicitCastExpr 0x1529410b0 <line:16:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x152941098 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x152940aa8 <col:4> 'char[4]' lvalue "STR"
    |     | |-ImplicitCastExpr 0x1529410e0 <line:17:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x1529410c8 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x152940ac8 <col:4> 'char[4]' lvalue "STR"
    |     | `-ImplicitCastExpr 0x152941110 <line:18:4> 'const char *' <NoOp>
    |     |   `-ImplicitCastExpr 0x1529410f8 <col:4> 'char *' <ArrayToPointerDecay>
    |     |     `-StringLiteral 0x152940ae8 <col:4> 'char[4]' lvalue "STR"
    |     `-InitListExpr 0x152941138 <line:20:3, col:11> 'struct test_case'
    |       |-ImplicitCastExpr 0x1529411b8 <col:5> 'const char *' <NoOp>
    |       | `-ImplicitCastExpr 0x1529411a0 <col:5> 'char *' <ArrayToPointerDecay>
    |       |   `-StringLiteral 0x152940b70 <col:5> 'char[4]' lvalue "STR"
    |       |-ImplicitValueInitExpr 0x1529411d0 <<invalid sloc>> 'const char *'
    |       |-ImplicitValueInitExpr 0x1529411e0 <<invalid sloc>> 'const char *'
    |       |-ImplicitValueInitExpr 0x1529411f0 <<invalid sloc>> 'const char *'
    |       `-ImplicitValueInitExpr 0x152941200 <<invalid sloc>> 'const char *'
    |-CallExpr 0x1529416f8 <line:24:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152941678 <col:2> 'int ()' Function 0x1529415c0 'ARRAY_TYPE' 'int ()'
    | `-RecoveryExpr 0x1529416d8 <col:13> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1529418d8 <line:25:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152941800 <col:2> 'int ()' Function 0x152941748 't_array_init' 'int ()'
    | |-UnaryOperator 0x1529418c0 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x1529418a0 <col:16> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x152941850 <col:24> 'int' 8
    `-ForStmt 0x152945990 <line:27:2, line:52:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x152943680 <line:27:21, col:46> 'int' contains-errors '<'
      | |-RecoveryExpr 0x152943608 <col:21> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x152943640 <col:25, col:46> 'int'
      |   |-ImplicitCastExpr 0x152943628 <col:25> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x1529434b8 <col:25> 'int ()' Function 0x152943400 'N_ELEMENTS' 'int ()'
      |   `-ImplicitCastExpr 0x152943668 <col:36> 'struct test_case *' <ArrayToPointerDecay>
      |     `-DeclRefExpr 0x1529434d8 <col:36> 'struct test_case[5]' lvalue Var 0x152928670 'test_cases' 'struct test_case[5]'
      |-UnaryOperator 0x1529436f0 <col:49, col:50> '<dependent type>' contains-errors postfix '++' cannot overflow
      | `-RecoveryExpr 0x1529436d0 <col:49> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x152945950 <col:54, line:52:2>
        |-DeclStmt 0x152943868 <line:28:3, col:53>
        | `-VarDecl 0x1529437c8 <col:3, col:27> col:27 used test_case 'const struct test_case *'
        |-DeclStmt 0x152943c68 <line:30:3, col:59>
        | |-RecordDecl 0x152943980 <col:3, col:10> col:10 struct oauth2_field
        | `-VarDecl 0x152943ae8 <col:3, col:24> col:24 used field 'struct oauth2_field *'
        |-BinaryOperator 0x152943d00 <line:31:3, col:17> '<dependent type>' contains-errors '='
        | |-RecoveryExpr 0x152943cb8 <col:3, col:10> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x152943c80 <col:3> 'struct oauth2_field *' lvalue Var 0x152943ae8 'field' 'struct oauth2_field *'
        | `-StringLiteral 0x152943ce0 <col:17> 'char[4]' lvalue "STR"
        |-BinaryOperator 0x152943da0 <line:32:3, col:18> '<dependent type>' contains-errors '='
        | |-RecoveryExpr 0x152943d58 <col:3, col:10> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x152943d20 <col:3> 'struct oauth2_field *' lvalue Var 0x152943ae8 'field' 'struct oauth2_field *'
        | `-StringLiteral 0x152943d80 <col:18> 'char[4]' lvalue "STR"
        |-IfStmt 0x152944110 <line:33:3, line:37:3>
        | |-BinaryOperator 0x152943ea0 <line:33:7, col:26> 'int' '!='
        | | |-ImplicitCastExpr 0x152943e88 <col:7, col:19> 'int' <IntegralCast>
        | | | `-ImplicitCastExpr 0x152943e70 <col:7, col:19> 'char' <LValueToRValue>
        | | |   `-UnaryOperator 0x152943e40 <col:7, col:19> 'const char' lvalue prefix '*' cannot overflow
        | | |     `-ImplicitCastExpr 0x152943e28 <col:8, col:19> 'const char *' <LValueToRValue>
        | | |       `-MemberExpr 0x152943df8 <col:8, col:19> 'const char *const' lvalue ->azp 0x152928338
        | | |         `-ImplicitCastExpr 0x152943de0 <col:8> 'const struct test_case *' <LValueToRValue>
        | | |           `-DeclRefExpr 0x152943dc0 <col:8> 'const struct test_case *' lvalue Var 0x1529437c8 'test_case' 'const struct test_case *'
        | | `-CharacterLiteral 0x152943e58 <col:26> 'int' 0
        | `-CompoundStmt 0x1529440f0 <col:32, line:37:3>
        |   |-BinaryOperator 0x152943f80 <line:35:4, col:18> '<dependent type>' contains-errors '='
        |   | |-RecoveryExpr 0x152943f38 <col:4, col:11> '<dependent type>' contains-errors lvalue
        |   | | `-DeclRefExpr 0x152943f00 <col:4> 'struct oauth2_field *' lvalue Var 0x152943ae8 'field' 'struct oauth2_field *'
        |   | `-StringLiteral 0x152943f60 <col:18> 'char[4]' lvalue "STR"
        |   `-BinaryOperator 0x1529440d0 <line:36:4, col:30> '<dependent type>' contains-errors '='
        |     |-RecoveryExpr 0x152943fd8 <col:4, col:11> '<dependent type>' contains-errors lvalue
        |     | `-DeclRefExpr 0x152943fa0 <col:4> 'struct oauth2_field *' lvalue Var 0x152943ae8 'field' 'struct oauth2_field *'
        |     `-MemberExpr 0x1529440a0 <col:19, col:30> 'const char *const' lvalue ->azp 0x152928338
        |       `-ImplicitCastExpr 0x152944088 <col:19> 'const struct test_case *' <LValueToRValue>
        |         `-DeclRefExpr 0x152944000 <col:19> 'const struct test_case *' lvalue Var 0x1529437c8 'test_case' 'const struct test_case *'
        `-IfStmt 0x152945088 <line:38:3, line:42:3>
          |-BinaryOperator 0x152944210 <line:38:7, col:26> 'int' '!='
          | |-ImplicitCastExpr 0x1529441f8 <col:7, col:19> 'int' <IntegralCast>
          | | `-ImplicitCastExpr 0x1529441e0 <col:7, col:19> 'char' <LValueToRValue>
          | |   `-UnaryOperator 0x1529441b0 <col:7, col:19> 'const char' lvalue prefix '*' cannot overflow
          | |     `-ImplicitCastExpr 0x152944198 <col:8, col:19> 'const char *' <LValueToRValue>
          | |       `-MemberExpr 0x152944168 <col:8, col:19> 'const char *const' lvalue ->kid 0x152928408
          | |         `-ImplicitCastExpr 0x152944150 <col:8> 'const struct test_case *' <LValueToRValue>
          | |           `-DeclRefExpr 0x152944130 <col:8> 'const struct test_case *' lvalue Var 0x1529437c8 'test_case' 'const struct test_case *'
          | `-CharacterLiteral 0x1529441c8 <col:26> 'int' 0
          `-CompoundStmt 0x152945068 <col:32, line:42:3>
            |-BinaryOperator 0x1529442f0 <line:40:4, col:18> '<dependent type>' contains-errors '='
            | |-RecoveryExpr 0x1529442a8 <col:4, col:11> '<dependent type>' contains-errors lvalue
            | | `-DeclRefExpr 0x152944270 <col:4> 'struct oauth2_field *' lvalue Var 0x152943ae8 'field' 'struct oauth2_field *'
            | `-StringLiteral 0x1529442d0 <col:18> 'char[4]' lvalue "STR"
            `-BinaryOperator 0x152945048 <line:41:4, col:30> '<dependent type>' contains-errors '='
              |-RecoveryExpr 0x152944348 <col:4, col:11> '<dependent type>' contains-errors lvalue
              | `-DeclRefExpr 0x152944310 <col:4> 'struct oauth2_field *' lvalue Var 0x152943ae8 'field' 'struct oauth2_field *'
              `-MemberExpr 0x152945018 <col:19, col:30> 'const char *const' lvalue ->kid 0x152928408
                `-ImplicitCastExpr 0x152945000 <col:19> 'const struct test_case *' <LValueToRValue>
                  `-DeclRefExpr 0x152944370 <col:19> 'const struct test_case *' lvalue Var 0x1529437c8 'test_case' 'const struct test_case *'
