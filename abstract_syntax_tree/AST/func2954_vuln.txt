TranslationUnitDecl 0x141852008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x141852eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1418525d0 '__int128'
|-TypedefDecl 0x141852f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1418525f0 'unsigned __int128'
|-TypedefDecl 0x141923430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x141923200 'struct __NSConstantString_tag'
|   `-Record 0x141852f80 '__NSConstantString_tag'
|-TypedefDecl 0x141923498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x141852790 '__SVInt8_t'
|-TypedefDecl 0x141923500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1418527b0 '__SVInt16_t'
|-TypedefDecl 0x141923568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1418527d0 '__SVInt32_t'
|-TypedefDecl 0x1419235d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1418527f0 '__SVInt64_t'
|-TypedefDecl 0x141923638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x141852810 '__SVUint8_t'
|-TypedefDecl 0x1419236a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x141852830 '__SVUint16_t'
|-TypedefDecl 0x141923708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x141852850 '__SVUint32_t'
|-TypedefDecl 0x141923770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x141852870 '__SVUint64_t'
|-TypedefDecl 0x1419237d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x141852890 '__SVFloat16_t'
|-TypedefDecl 0x141923840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1418528b0 '__SVFloat32_t'
|-TypedefDecl 0x1419238a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1418528d0 '__SVFloat64_t'
|-TypedefDecl 0x141923910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1418528f0 '__SVBfloat16_t'
|-TypedefDecl 0x141923978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x141852910 '__clang_svint8x2_t'
|-TypedefDecl 0x1419239e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x141852930 '__clang_svint16x2_t'
|-TypedefDecl 0x141923a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x141852950 '__clang_svint32x2_t'
|-TypedefDecl 0x141923ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x141852970 '__clang_svint64x2_t'
|-TypedefDecl 0x141923b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x141852990 '__clang_svuint8x2_t'
|-TypedefDecl 0x141923b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1418529b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x141923be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1418529d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x141923c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1418529f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x141923cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x141852a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x141923d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x141852a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x141923d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x141852a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x141923df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x141852a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x141923e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x141852a90 '__clang_svint8x3_t'
|-TypedefDecl 0x141923ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x141852ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x141923f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x141852ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x141923f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x141852af0 '__clang_svint64x3_t'
|-TypedefDecl 0x141923ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x141852b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x141924060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x141852b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1419240c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x141852b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x141924130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x141852b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x141924198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x141852b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x141924a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x141852bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x141924a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x141852bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x141924ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x141852bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x141924b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x141852c10 '__clang_svint8x4_t'
|-TypedefDecl 0x141924ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x141852c30 '__clang_svint16x4_t'
|-TypedefDecl 0x141924c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x141852c50 '__clang_svint32x4_t'
|-TypedefDecl 0x141924c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x141852c70 '__clang_svint64x4_t'
|-TypedefDecl 0x141924cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x141852c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x141924d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x141852cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x141924da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x141852cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x141924e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x141852cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x141924e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x141852d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x141924ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x141852d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x141924f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x141852d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x141924fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x141852d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x141925018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x141852d90 '__SVBool_t'
|-TypedefDecl 0x141925080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x141852db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1419250e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x141852dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x141925150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x141852df0 '__SVCount_t'
|-TypedefDecl 0x1419251f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1419251b0 'char *'
|   `-BuiltinType 0x1418520b0 'char'
|-TypedefDecl 0x141925268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1419251b0 'char *'
|   `-BuiltinType 0x1418520b0 'char'
|-RecordDecl 0x1419252c0 <dataset_diviso_filec/func2954_vuln.c:1:1, col:8> col:8 struct psi_trigger
|-FunctionDecl 0x14193ed88 <col:1, line:70:1> line:1:21 invalid psi_trigger_create 'struct psi_trigger *(struct psi_group *, char *, int, enum psi_res)'
| |-ParmVarDecl 0x1419258e8 <col:40, col:58> col:58 used group 'struct psi_group *'
| |-ParmVarDecl 0x141925968 <line:2:4, col:10> col:10 used buf 'char *'
| |-ParmVarDecl 0x14193ea00 <col:15, col:22> col:22 invalid nbytes 'int'
| |-ParmVarDecl 0x14193eb88 <col:30, col:43> col:43 invalid res 'enum psi_res'
| `-CompoundStmt 0x14200fa20 <line:3:1, line:70:1>
|   |-DeclStmt 0x14193ef40 <line:4:2, col:23>
|   | `-VarDecl 0x14193eed8 <col:2, col:22> col:22 used t 'struct psi_trigger *'
|   |-DeclStmt 0x14193f0f8 <line:5:2, col:23>
|   | |-EnumDecl 0x14193ef58 <col:2, col:7> col:7 psi_states
|   | `-VarDecl 0x14193f078 <col:2, col:18> col:18 referenced invalid state 'enum psi_states'
|   |-IfStmt 0x14193f540 <line:9:2, line:10:29>
|   | |-CallExpr 0x14193f320 <line:9:6, col:40> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14193f270 <col:6> 'int ()' Function 0x14193f1b8 'static_branch_likely' 'int ()'
|   | | `-UnaryOperator 0x14193f308 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   `-RecoveryExpr 0x14193f2e8 <col:28> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x14193f530 <line:10:3, col:29>
|   |   `-CallExpr 0x14193f508 <col:10, col:29> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14193f428 <col:10> 'int ()' Function 0x14193f370 'ERR_PTR' 'int ()'
|   |     `-UnaryOperator 0x14193f4f0 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x14193f4d8 <col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x14193f4b8 <col:19> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x141940740 <line:12:2, line:17:25> has_else
|   | |-BinaryOperator 0x1419400a8 <line:12:6, col:55> 'int' contains-errors '=='
|   | | |-CallExpr 0x141940068 <col:6, col:50> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14193f810 <col:6> 'int (const char *restrict, const char *restrict, ...)' Function 0x14193f5f8 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   | | | |-DeclRefExpr 0x14193f830 <col:13> 'char *' lvalue ParmVar 0x141925968 'buf' 'char *'
|   | | | |-StringLiteral 0x14193f890 <col:18> 'char[4]' lvalue "STR"
|   | | | |-UnaryOperator 0x14193f9e0 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x14193f9c0 <col:26> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x141940020 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x141940000 <col:41> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x14193f980 <col:55> 'int' 2
|   | |-BinaryOperator 0x141940208 <line:13:3, col:31> '<dependent type>' contains-errors '='
|   | | |-RecoveryExpr 0x1419400e8 <col:3> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x1419400c8 <col:3> 'enum psi_states' lvalue Var 0x14193f078 'state' 'enum psi_states'
|   | | `-BinaryOperator 0x1419401e8 <col:11, col:31> '<dependent type>' contains-errors '+'
|   | |   |-RecoveryExpr 0x1419401c8 <col:11> '<dependent type>' contains-errors lvalue
|   | |   `-BinaryOperator 0x141940168 <col:25, col:31> '<dependent type>' contains-errors '*'
|   | |     |-RecoveryExpr 0x141940128 <col:25> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x141940148 <col:31> 'int' 2
|   | `-IfStmt 0x141940710 <line:14:7, line:17:25> has_else
|   |   |-BinaryOperator 0x141940478 <line:14:11, col:60> 'int' contains-errors '=='
|   |   | |-CallExpr 0x141940438 <col:11, col:55> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x141940228 <col:11> 'int (const char *restrict, const char *restrict, ...)' Function 0x14193f5f8 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |   | | |-DeclRefExpr 0x141940248 <col:18> 'char *' lvalue ParmVar 0x141925968 'buf' 'char *'
|   |   | | |-StringLiteral 0x141940268 <col:23> 'char[4]' lvalue "STR"
|   |   | | |-UnaryOperator 0x1419403b8 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | | `-RecoveryExpr 0x141940398 <col:31> '<dependent type>' contains-errors lvalue
|   |   | | `-UnaryOperator 0x1419403f0 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | |   `-RecoveryExpr 0x1419403d0 <col:46> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x141940358 <col:60> 'int' 2
|   |   |-BinaryOperator 0x1419405d8 <line:15:3, col:31> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x1419404b8 <col:3> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x141940498 <col:3> 'enum psi_states' lvalue Var 0x14193f078 'state' 'enum psi_states'
|   |   | `-BinaryOperator 0x1419405b8 <col:11, col:31> '<dependent type>' contains-errors '+'
|   |   |   |-RecoveryExpr 0x141940598 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   `-BinaryOperator 0x141940538 <col:25, col:31> '<dependent type>' contains-errors '*'
|   |   |     |-RecoveryExpr 0x1419404f8 <col:25> '<dependent type>' contains-errors lvalue
|   |   |     `-IntegerLiteral 0x141940518 <col:31> 'int' 2
|   |   `-ReturnStmt 0x141940700 <line:17:3, col:25>
|   |     `-CallExpr 0x1419406d8 <col:10, col:25> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x1419405f8 <col:10> 'int ()' Function 0x14193f370 'ERR_PTR' 'int ()'
|   |       `-UnaryOperator 0x1419406c0 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |         `-ImplicitCastExpr 0x1419406a8 <col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |           `-RecoveryExpr 0x141940688 <col:19> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x141940920 <line:19:2, line:20:25>
|   | |-BinaryOperator 0x1419407e8 <line:19:6, col:15> 'int' contains-errors '>='
|   | | |-RecoveryExpr 0x141940770 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1419407c8 <col:15> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x141940910 <line:20:3, col:25>
|   |   `-CallExpr 0x1419408e8 <col:10, col:25> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x141940808 <col:10> 'int ()' Function 0x14193f370 'ERR_PTR' 'int ()'
|   |     `-UnaryOperator 0x1419408d0 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x1419408b8 <col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x141940898 <col:19> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x141940de0 <line:34:2, col:13> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x141940d98 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x141940d60 <col:2> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   | `-DeclRefExpr 0x141940dc0 <col:13> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   |-BinaryOperator 0x141940e80 <line:35:2, col:13> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x141940e38 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x141940e00 <col:2> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   | `-RecoveryExpr 0x141940e60 <col:13> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14200d9b0 <line:38:2, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14200d8b8 <col:2> 'int ()' Function 0x14200d800 'window_reset' 'int ()'
|   | |-UnaryOperator 0x14200d938 <col:15, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x14200d910 <col:16, col:19> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14200d8d8 <col:16> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   | |-IntegerLiteral 0x14200d950 <col:24> 'int' 0
|   | |-IntegerLiteral 0x14200d970 <col:27> 'int' 0
|   | `-IntegerLiteral 0x14200d990 <col:30> 'int' 0
|   |-BinaryOperator 0x14200da70 <line:40:2, col:13> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14200da28 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14200d9f0 <col:2> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   | `-IntegerLiteral 0x14200da50 <col:13> 'int' 0
|   |-BinaryOperator 0x14200db10 <line:41:2, col:23> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14200dac8 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14200da90 <col:2> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   | `-IntegerLiteral 0x14200daf0 <col:23> 'int' 0
|   |-CallExpr 0x14200dca8 <line:42:2, col:36> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14200dc10 <col:2> 'int ()' Function 0x14200db58 'init_waitqueue_head' 'int ()'
|   | `-UnaryOperator 0x14200dc90 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14200dc68 <col:23, col:26> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14200dc30 <col:23> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   |-CallExpr 0x14200de48 <line:43:2, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14200ddb0 <col:2> 'int ()' Function 0x14200dcf8 'kref_init' 'int ()'
|   | `-UnaryOperator 0x14200de30 <col:12, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14200de08 <col:13, col:16> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14200ddd0 <col:13> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   |-CallExpr 0x14200dfe8 <line:45:2, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14200df50 <col:2> 'int ()' Function 0x14200de98 'mutex_lock' 'int ()'
|   | `-UnaryOperator 0x14200dfd0 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14200dfa8 <col:14, col:21> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14200df70 <col:14> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   |-IfStmt 0x14200f0f0 <line:47:2, line:59:2>
|   | |-UnaryOperator 0x14200e198 <line:47:6, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x14200e170 <col:7, col:42> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x14200e0f0 <col:7> 'int ()' Function 0x14200e038 'rcu_access_pointer' 'int ()'
|   | |   `-RecoveryExpr 0x14200e148 <col:26, col:33> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x14200e110 <col:26> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   | `-CompoundStmt 0x14200f0b8 <col:45, line:59:2>
|   |   |-DeclStmt 0x14200e398 <line:48:3, col:27>
|   |   | |-RecordDecl 0x14200e1b0 <col:3, col:10> col:10 struct task_struct
|   |   | `-VarDecl 0x14200e318 <col:3, col:23> col:23 used task 'struct task_struct *'
|   |   |-IfStmt 0x14200eba8 <line:51:3, line:55:3>
|   |   | |-CallExpr 0x14200e678 <line:51:7, col:18> 'int'
|   |   | | |-ImplicitCastExpr 0x14200e660 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x14200e5f0 <col:7> 'int ()' Function 0x14200e538 'IS_ERR' 'int ()'
|   |   | | `-ImplicitCastExpr 0x14200e6a0 <col:14> 'struct task_struct *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14200e610 <col:14> 'struct task_struct *' lvalue Var 0x14200e318 'task' 'struct task_struct *'
|   |   | `-CompoundStmt 0x14200eb80 <col:21, line:55:3>
|   |   |   |-CallExpr 0x14200e800 <line:52:4, col:11> 'int'
|   |   |   | |-ImplicitCastExpr 0x14200e7d8 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x14200e798 <col:4> 'int ()' Function 0x14200e6e0 'kfree' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x14200e828 <col:10> 'struct psi_trigger *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x14200e7b8 <col:10> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   |   |   |-CallExpr 0x14200e9b8 <line:53:4, col:37> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x14200e920 <col:4> 'int ()' Function 0x14200e868 'mutex_unlock' 'int ()'
|   |   |   | `-UnaryOperator 0x14200e9a0 <col:17, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   |   `-RecoveryExpr 0x14200e978 <col:18, col:25> '<dependent type>' contains-errors lvalue
|   |   |   |     `-DeclRefExpr 0x14200e940 <col:18> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   |   |   `-ReturnStmt 0x14200eb70 <line:54:4, col:24>
|   |   |     `-ImplicitCastExpr 0x14200eb58 <col:11, col:24> 'struct psi_trigger *' <IntegralToPointer>
|   |   |       `-CallExpr 0x14200eb18 <col:11, col:24> 'int'
|   |   |         |-ImplicitCastExpr 0x14200eb00 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   |         | `-DeclRefExpr 0x14200eac0 <col:11> 'int ()' Function 0x14200ea08 'ERR_CAST' 'int ()'
|   |   |         `-ImplicitCastExpr 0x14200eb40 <col:20> 'struct task_struct *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x14200eae0 <col:20> 'struct task_struct *' lvalue Var 0x14200e318 'task' 'struct task_struct *'
|   |   |-CallExpr 0x14200ed60 <line:56:3, col:36> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14200eca8 <col:3> 'int ()' Function 0x14200ebf0 'atomic_set' 'int ()'
|   |   | |-UnaryOperator 0x14200ed28 <col:14, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x14200ed00 <col:15, col:22> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x14200ecc8 <col:15> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   |   | `-IntegerLiteral 0x14200ed40 <col:35> 'int' 0
|   |   |-CallExpr 0x14200eec8 <line:57:3, col:23> 'int'
|   |   | |-ImplicitCastExpr 0x14200eeb0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14200ee70 <col:3> 'int ()' Function 0x14200edb8 'wake_up_process' 'int ()'
|   |   | `-ImplicitCastExpr 0x14200eef0 <col:19> 'struct task_struct *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14200ee90 <col:19> 'struct task_struct *' lvalue Var 0x14200e318 'task' 'struct task_struct *'
|   |   `-CallExpr 0x14200f088 <line:58:3, col:44> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14200efe8 <col:3> 'int ()' Function 0x14200ef30 'rcu_assign_pointer' 'int ()'
|   |     |-RecoveryExpr 0x14200f040 <col:22, col:29> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x14200f008 <col:22> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   |     `-DeclRefExpr 0x14200f068 <col:40> 'struct task_struct *' lvalue Var 0x14200e318 'task' 'struct task_struct *'
|   |-CallExpr 0x14200f300 <line:61:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14200f1f0 <col:2> 'int ()' Function 0x14200f138 'list_add' 'int ()'
|   | |-UnaryOperator 0x14200f270 <col:11, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x14200f248 <col:12, col:15> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14200f210 <col:12> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   | `-UnaryOperator 0x14200f2e8 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14200f2c0 <col:22, col:29> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14200f288 <col:22> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   |-UnaryOperator 0x14200f7a8 <line:64:2, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow
|   | `-ArraySubscriptExpr 0x14200f788 <col:2, col:29> '<dependent type>' contains-errors lvalue
|   |   |-ImplicitCastExpr 0x14200f758 <col:2, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-RecoveryExpr 0x14200f6d0 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x14200f698 <col:2> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   |   `-ImplicitCastExpr 0x14200f770 <col:21, col:24> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x14200f730 <col:21, col:24> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x14200f6f8 <col:21> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   |-CompoundAssignOperator 0x14200f8e8 <line:65:2, col:38> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-RecoveryExpr 0x14200f800 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14200f7c0 <col:2> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   | `-ParenExpr 0x14200f8c8 <col:24, col:38> '<dependent type>' contains-errors
|   |   `-BinaryOperator 0x14200f8a8 <col:25, col:33> '<dependent type>' contains-errors '<<'
|   |     |-IntegerLiteral 0x14200f828 <col:25> 'int' 1
|   |     `-RecoveryExpr 0x14200f880 <col:30, col:33> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x14200f848 <col:30> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
|   |-CallExpr 0x14200f9b0 <line:67:2, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14200f918 <col:2> 'int ()' Function 0x14200e868 'mutex_unlock' 'int ()'
|   | `-UnaryOperator 0x14200f998 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14200f970 <col:16, col:23> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14200f938 <col:16> 'struct psi_group *' lvalue ParmVar 0x1419258e8 'group' 'struct psi_group *'
|   `-ReturnStmt 0x14200fa10 <line:69:2, col:9>
|     `-ImplicitCastExpr 0x14200f9f8 <col:9> 'struct psi_trigger *' <LValueToRValue>
|       `-DeclRefExpr 0x14200f9d8 <col:9> 'struct psi_trigger *' lvalue Var 0x14193eed8 't' 'struct psi_trigger *'
`-FunctionDecl 0x14193f5f8 <line:12:6> col:6 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
  |-ParmVarDecl 0x14193f6f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-ParmVarDecl 0x14193f760 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-BuiltinAttr 0x14193f6a0 <<invalid sloc>> Implicit 913
  `-FormatAttr 0x14193f7d8 <col:6> Implicit scanf 2 3
