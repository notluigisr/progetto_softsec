TranslationUnitDecl 0x154855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1548564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x154855bd0 '__int128'
|-TypedefDecl 0x154856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x154855bf0 'unsigned __int128'
|-TypedefDecl 0x15500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15500bc00 'struct __NSConstantString_tag'
|   `-Record 0x154856580 '__NSConstantString_tag'
|-TypedefDecl 0x15500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x154855d90 '__SVInt8_t'
|-TypedefDecl 0x15500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x154855db0 '__SVInt16_t'
|-TypedefDecl 0x15500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x154855dd0 '__SVInt32_t'
|-TypedefDecl 0x15500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x154855df0 '__SVInt64_t'
|-TypedefDecl 0x15500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x154855e10 '__SVUint8_t'
|-TypedefDecl 0x15500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x154855e30 '__SVUint16_t'
|-TypedefDecl 0x15500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x154855e50 '__SVUint32_t'
|-TypedefDecl 0x15500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x154855e70 '__SVUint64_t'
|-TypedefDecl 0x15500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x154855e90 '__SVFloat16_t'
|-TypedefDecl 0x15500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x154855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x154855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x154855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x154855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x154855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x154855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x154855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x154855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x154855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x154855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x154855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x154856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x154856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x154856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x154856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x154856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1548560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1548560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1548560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x154856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x154856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x154856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x154856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x154856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1548561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1548561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1548561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x154856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x154856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x154856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x154856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x154856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1548562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1548562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1548562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x154856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x154856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x154856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x154856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x154856390 '__SVBool_t'
|-TypedefDecl 0x15500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1548563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1548563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1548563f0 '__SVCount_t'
|-TypedefDecl 0x15500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15500dbb0 'char *'
|   `-BuiltinType 0x1548556b0 'char'
|-TypedefDecl 0x15500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15500dbb0 'char *'
|   `-BuiltinType 0x1548556b0 'char'
|-FunctionDecl 0x15500de88 <dataset_diviso_filec/func3784_vuln.c:1:1, line:65:1> line:1:12 invalid check_passwd 'int (unsigned char *, int)' static
| |-ParmVarDecl 0x15500dd08 <col:25, col:40> col:40 used passwd 'unsigned char *'
| |-ParmVarDecl 0x15500dda0 <col:48, col:55> col:55 invalid length 'int'
| `-CompoundStmt 0x15502cff8 <line:2:1, line:65:1>
|   |-DeclStmt 0x15500e160 <line:3:2, col:25>
|   | |-RecordDecl 0x15500df40 <col:2, col:9> col:9 struct digest
|   | `-VarDecl 0x15500e0a8 <col:2, col:21> col:17 used d 'struct digest *' cinit
|   |   `-RecoveryExpr 0x15500e128 <col:21> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15500e1f8 <line:4:2, col:28>
|   | `-VarDecl 0x15500e190 <col:2, col:17> col:17 used passwd1_sum 'unsigned char *'
|   |-DeclStmt 0x15500e290 <line:5:2, col:28>
|   | `-VarDecl 0x15500e228 <col:2, col:17> col:17 used passwd2_sum 'unsigned char *'
|   |-DeclStmt 0x15500e348 <line:6:2, col:13>
|   | `-VarDecl 0x15500e2c0 <col:2, col:12> col:6 used ret 'int' cinit
|   |   `-IntegerLiteral 0x15500e328 <col:12> 'int' 0
|   |-DeclStmt 0x15500e3e0 <line:7:2, col:14>
|   | `-VarDecl 0x15500e378 <col:2, col:6> col:6 used hash_len 'int'
|   |-IfStmt 0x155027ea0 <line:9:2, line:20:2> has_else
|   | |-CallExpr 0x1550275e0 <line:9:6, col:44> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x155027560 <col:6> 'int ()' Function 0x1550274a8 'IS_ENABLED' 'int ()'
|   | | `-RecoveryExpr 0x1550275c0 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x1550276a0 <col:47, line:11:2>
|   | | `-BinaryOperator 0x155027680 <line:10:3, col:14> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x155027608 <col:3> 'int' lvalue Var 0x15500e378 'hash_len' 'int'
|   | |   `-RecoveryExpr 0x155027660 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x155027e78 <line:11:9, line:20:2>
|   |   |-BinaryOperator 0x155027880 <line:12:3, col:30> 'struct digest *' contains-errors '='
|   |   | |-DeclRefExpr 0x1550276b8 <col:3> 'struct digest *' contains-errors lvalue Var 0x15500e0a8 'd' 'struct digest *'
|   |   | `-CallExpr 0x155027858 <col:7, col:30> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1550277b8 <col:7> 'int ()' Function 0x155027700 'digest_alloc' 'int ()'
|   |   |   `-RecoveryExpr 0x155027838 <col:20> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x155027c68 <line:13:3, line:17:3>
|   |   | |-UnaryOperator 0x1550278d8 <line:13:7, col:8> 'int' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1550278c0 <col:8> 'struct digest *' contains-errors <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1550278a0 <col:8> 'struct digest *' contains-errors lvalue Var 0x15500e0a8 'd' 'struct digest *'
|   |   | `-CompoundStmt 0x155027c48 <col:11, line:17:3>
|   |   |   |-CallExpr 0x155027b70 <line:14:4, line:15:42> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x1550279d0 <line:14:4> 'int ()' Function 0x155027918 'pr_err' 'int ()'
|   |   |   | |-StringLiteral 0x155027a30 <col:11> 'char[4]' lvalue "STR"
|   |   |   | `-ConditionalOperator 0x155027b40 <line:15:11, col:37> '<dependent type>' contains-errors
|   |   |   |   |-RecoveryExpr 0x155027b00 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   |   |-RecoveryExpr 0x155027b20 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   |   `-StringLiteral 0x155027a80 <col:37> 'char[4]' lvalue "STR"
|   |   |   `-ReturnStmt 0x155027c38 <line:16:4, col:12>
|   |   |     `-UnaryOperator 0x155027c20 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |       `-ImplicitCastExpr 0x155027c08 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   |         `-RecoveryExpr 0x155027be8 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x155027e58 <line:19:3, col:29> 'int' contains-errors '='
|   |     |-DeclRefExpr 0x155027c88 <col:3> 'int' lvalue Var 0x15500e378 'hash_len' 'int'
|   |     `-CallExpr 0x155027e18 <col:14, col:29> 'int' contains-errors
|   |       |-ImplicitCastExpr 0x155027e00 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x155027d88 <col:14> 'int ()' Function 0x155027cd0 'digest_length' 'int ()'
|   |       `-ImplicitCastExpr 0x155027e40 <col:28> 'struct digest *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x155027da8 <col:28> 'struct digest *' contains-errors lvalue Var 0x15500e0a8 'd' 'struct digest *'
|   |-BinaryOperator 0x15502a0e8 <line:22:2, col:58> 'unsigned char *' '='
|   | |-DeclRefExpr 0x155027ed0 <col:2> 'unsigned char *' lvalue Var 0x15500e190 'passwd1_sum' 'unsigned char *'
|   | `-ImplicitCastExpr 0x15502a0d0 <col:16, col:58> 'unsigned char *' <BitCast>
|   |   `-CallExpr 0x15502a088 <col:16, col:58> 'void *'
|   |     |-ImplicitCastExpr 0x15502a070 <col:16> 'void *(*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x155029f68 <col:16> 'void *(unsigned long, unsigned long)' Function 0x155028350 'calloc' 'void *(unsigned long, unsigned long)'
|   |     |-ImplicitCastExpr 0x15502a0b8 <col:23, col:34> 'unsigned long' <IntegralCast>
|   |     | `-BinaryOperator 0x155029fe0 <col:23, col:34> 'int' '*'
|   |     |   |-ImplicitCastExpr 0x155029fc8 <col:23> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x155029f88 <col:23> 'int' lvalue Var 0x15500e378 'hash_len' 'int'
|   |     |   `-IntegerLiteral 0x155029fa8 <col:34> 'int' 2
|   |     `-UnaryExprOrTypeTraitExpr 0x15502a018 <col:37, col:57> 'unsigned long' sizeof 'unsigned char'
|   |-IfStmt 0x15502a200 <line:23:2, line:24:11>
|   | |-UnaryOperator 0x15502a140 <line:23:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15502a128 <col:7> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15502a108 <col:7> 'unsigned char *' lvalue Var 0x15500e190 'passwd1_sum' 'unsigned char *'
|   | `-ReturnStmt 0x15502a1f0 <line:24:3, col:11>
|   |   `-UnaryOperator 0x15502a1d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x15502a1c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x15502a1a0 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15502a2d0 <line:26:2, col:30> 'unsigned char *' '='
|   | |-DeclRefExpr 0x15502a220 <col:2> 'unsigned char *' lvalue Var 0x15500e228 'passwd2_sum' 'unsigned char *'
|   | `-BinaryOperator 0x15502a2b0 <col:16, col:30> 'unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x15502a280 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15502a240 <col:16> 'unsigned char *' lvalue Var 0x15500e190 'passwd1_sum' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x15502a298 <col:30> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x15502a260 <col:30> 'int' lvalue Var 0x15500e378 'hash_len' 'int'
|   |-IfStmt 0x15502aa78 <line:28:2, line:33:10> has_else
|   | |-CallExpr 0x15502a408 <line:28:6, col:27> 'int'
|   | | `-ImplicitCastExpr 0x15502a3f0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x15502a3d0 <col:6> 'int ()' Function 0x15502a318 'is_passwd_env_enable' 'int ()'
|   | |-BinaryOperator 0x15502a600 <line:29:3, col:46> 'int' '='
|   | | |-DeclRefExpr 0x15502a428 <col:3> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|   | | `-CallExpr 0x15502a5a0 <col:9, col:46> 'int'
|   | |   |-ImplicitCastExpr 0x15502a588 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x15502a528 <col:9> 'int ()' Function 0x15502a470 'read_env_passwd' 'int ()'
|   | |   |-ImplicitCastExpr 0x15502a5d0 <col:25> 'unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x15502a548 <col:25> 'unsigned char *' lvalue Var 0x15500e228 'passwd2_sum' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x15502a5e8 <col:38> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x15502a568 <col:38> 'int' lvalue Var 0x15500e378 'hash_len' 'int'
|   | `-IfStmt 0x15502aa48 <line:30:7, line:33:10> has_else
|   |   |-CallExpr 0x15502a738 <line:30:11, col:36> 'int'
|   |   | `-ImplicitCastExpr 0x15502a720 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x15502a700 <col:11> 'int ()' Function 0x15502a648 'is_passwd_default_enable' 'int ()'
|   |   |-BinaryOperator 0x15502a930 <line:31:3, col:50> 'int' '='
|   |   | |-DeclRefExpr 0x15502a758 <col:3> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|   |   | `-CallExpr 0x15502a8d0 <col:9, col:50> 'int'
|   |   |   |-ImplicitCastExpr 0x15502a8b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x15502a858 <col:9> 'int ()' Function 0x15502a7a0 'read_default_passwd' 'int ()'
|   |   |   |-ImplicitCastExpr 0x15502a900 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x15502a878 <col:29> 'unsigned char *' lvalue Var 0x15500e228 'passwd2_sum' 'unsigned char *'
|   |   |   `-ImplicitCastExpr 0x15502a918 <col:42> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15502a898 <col:42> 'int' lvalue Var 0x15500e378 'hash_len' 'int'
|   |   `-BinaryOperator 0x15502aa28 <line:33:3, col:10> 'int' contains-errors '='
|   |     |-DeclRefExpr 0x15502a950 <col:3> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|   |     `-UnaryOperator 0x15502aa10 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x15502a9f8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x15502a9d8 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15502ab88 <line:35:2, line:36:8>
|   | |-BinaryOperator 0x15502ab00 <line:35:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x15502aae8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15502aaa8 <col:6> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|   | | `-IntegerLiteral 0x15502aac8 <col:12> 'int' 0
|   | `-GotoStmt 0x15502ab70 <line:36:3, col:8> 'err' 0x15502ab20
|   |-IfStmt 0x15502cb38 <line:38:2, line:58:2> has_else
|   | |-CallExpr 0x15502ac28 <line:38:6, col:44> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x15502aba8 <col:6> 'int ()' Function 0x1550274a8 'IS_ENABLED' 'int ()'
|   | | `-RecoveryExpr 0x15502ac08 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x15502c600 <col:47, line:50:2>
|   | | |-DeclStmt 0x15502acf0 <line:39:3, col:44>
|   | | | `-VarDecl 0x15502ac68 <col:3, col:9> col:9 used key 'char *'
|   | | |-DeclStmt 0x15502add8 <line:40:3, col:27>
|   | | | `-VarDecl 0x15502ad20 <col:3, col:16> col:9 used salt 'char *' cinit
|   | | |   `-ImplicitCastExpr 0x15502adc0 <col:16> 'char *' <BitCast>
|   | | |     `-ImplicitCastExpr 0x15502ada8 <col:16> 'unsigned char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x15502ad88 <col:16> 'unsigned char *' lvalue Var 0x15500e228 'passwd2_sum' 'unsigned char *'
|   | | |-DeclStmt 0x15502be80 <line:41:3, col:47>
|   | | | `-VarDecl 0x15502be18 <col:3, col:7> col:7 used keylen 'int'
|   | | |-IfStmt 0x15502c0a8 <line:45:3, line:46:9>
|   | | | |-ImplicitCastExpr 0x15502c078 <line:45:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x15502c058 <col:7> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|   | | | `-GotoStmt 0x15502c090 <line:46:4, col:9> 'err' 0x15502ab20
|   | | `-IfStmt 0x15502c5e0 <line:48:3, line:49:10>
|   | |   |-BinaryOperator 0x15502c560 <line:48:7, col:44> 'int' '=='
|   | |   | |-CallExpr 0x15502c478 <col:7, col:39> 'int'
|   | |   | | |-ImplicitCastExpr 0x15502c460 <col:7> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | | `-DeclRefExpr 0x15502c368 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x15502c118 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |   | | |-ImplicitCastExpr 0x15502c4c8 <col:15> 'const char *' <BitCast>
|   | |   | | | `-ImplicitCastExpr 0x15502c4b0 <col:15> 'unsigned char *' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x15502c388 <col:15> 'unsigned char *' lvalue Var 0x15500e190 'passwd1_sum' 'unsigned char *'
|   | |   | | |-ImplicitCastExpr 0x15502c4f8 <col:28> 'const char *' <NoOp>
|   | |   | | | `-ImplicitCastExpr 0x15502c4e0 <col:28> 'char *' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x15502c3a8 <col:28> 'char *' lvalue Var 0x15502ac68 'key' 'char *'
|   | |   | | `-ImplicitCastExpr 0x15502c528 <col:33> 'unsigned long' <IntegralCast>
|   | |   | |   `-ImplicitCastExpr 0x15502c510 <col:33> 'int' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x15502c3c8 <col:33> 'int' lvalue Var 0x15502be18 'keylen' 'int'
|   | |   | `-IntegerLiteral 0x15502c540 <col:44> 'int' 0
|   | |   `-BinaryOperator 0x15502c5c0 <line:49:4, col:10> 'int' '='
|   | |     |-DeclRefExpr 0x15502c580 <col:4> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|   | |     `-IntegerLiteral 0x15502c5a0 <col:10> 'int' 1
|   | `-CompoundStmt 0x15502cb10 <line:50:9, line:58:2>
|   |   |-BinaryOperator 0x15502c818 <line:51:3, col:53> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x15502c638 <col:3> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|   |   | `-CallExpr 0x15502c7d8 <col:9, col:53> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x15502c738 <col:9> 'int ()' Function 0x15502c680 'digest_digest' 'int ()'
|   |   |   |-DeclRefExpr 0x15502c758 <col:23> 'struct digest *' contains-errors lvalue Var 0x15500e0a8 'd' 'struct digest *'
|   |   |   |-DeclRefExpr 0x15502c778 <col:26> 'unsigned char *' lvalue ParmVar 0x15500dd08 'passwd' 'unsigned char *'
|   |   |   |-RecoveryExpr 0x15502c798 <col:34> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x15502c7b8 <col:42> 'unsigned char *' lvalue Var 0x15500e190 'passwd1_sum' 'unsigned char *'
|   |   |-IfStmt 0x15502c888 <line:53:3, line:54:9>
|   |   | |-ImplicitCastExpr 0x15502c858 <line:53:7> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15502c838 <col:7> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|   |   | `-GotoStmt 0x15502c870 <line:54:4, col:9> 'err' 0x15502ab20
|   |   `-IfStmt 0x15502caf0 <line:56:3, line:57:10>
|   |     |-BinaryOperator 0x15502ca70 <line:56:7, col:54> 'int' '=='
|   |     | |-CallExpr 0x15502c988 <col:7, col:49> 'int'
|   |     | | |-ImplicitCastExpr 0x15502c970 <col:7> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x15502c8a8 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x15502c118 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |     | | |-ImplicitCastExpr 0x15502c9d8 <col:15> 'const char *' <BitCast>
|   |     | | | `-ImplicitCastExpr 0x15502c9c0 <col:15> 'unsigned char *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x15502c8c8 <col:15> 'unsigned char *' lvalue Var 0x15500e190 'passwd1_sum' 'unsigned char *'
|   |     | | |-ImplicitCastExpr 0x15502ca08 <col:28> 'const char *' <BitCast>
|   |     | | | `-ImplicitCastExpr 0x15502c9f0 <col:28> 'unsigned char *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x15502c8e8 <col:28> 'unsigned char *' lvalue Var 0x15500e228 'passwd2_sum' 'unsigned char *'
|   |     | | `-ImplicitCastExpr 0x15502ca38 <col:41> 'unsigned long' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x15502ca20 <col:41> 'int' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x15502c908 <col:41> 'int' lvalue Var 0x15500e378 'hash_len' 'int'
|   |     | `-IntegerLiteral 0x15502ca50 <col:54> 'int' 0
|   |     `-BinaryOperator 0x15502cad0 <line:57:4, col:10> 'int' '='
|   |       |-DeclRefExpr 0x15502ca90 <col:4> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|   |       `-IntegerLiteral 0x15502cab0 <col:10> 'int' 1
|   |-LabelStmt 0x15502ce18 <line:60:1, line:61:18> 'err'
|   | `-CallExpr 0x15502cdb8 <col:2, col:18> 'void'
|   |   |-ImplicitCastExpr 0x15502cda0 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15502cd18 <col:2> 'void (void *)' Function 0x15502cba8 'free' 'void (void *)'
|   |   `-ImplicitCastExpr 0x15502ce00 <col:7> 'void *' <BitCast>
|   |     `-ImplicitCastExpr 0x15502cde0 <col:7> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x15502cd38 <col:7> 'unsigned char *' lvalue Var 0x15500e190 'passwd1_sum' 'unsigned char *'
|   |-CallExpr 0x15502cf70 <line:62:2, col:15> 'int' contains-errors
|   | |-ImplicitCastExpr 0x15502cf58 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15502cf18 <col:2> 'int ()' Function 0x15502ce60 'digest_free' 'int ()'
|   | `-ImplicitCastExpr 0x15502cf98 <col:14> 'struct digest *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x15502cf38 <col:14> 'struct digest *' contains-errors lvalue Var 0x15500e0a8 'd' 'struct digest *'
|   `-ReturnStmt 0x15502cfe8 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x15502cfd0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15502cfb0 <col:9> 'int' lvalue Var 0x15500e2c0 'ret' 'int'
|-FunctionDecl 0x155028350 <line:22:16> col:16 implicit used calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x155029e58 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x155029ec0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x155029e00 <<invalid sloc>> Implicit 868
| `-AllocSizeAttr 0x155029f38 <col:16> Implicit 1 2
|-FunctionDecl 0x15502c118 <line:48:7> col:7 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x15502c218 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15502c280 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15502c2e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x15502c1c0 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x15502cba8 <line:61:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x15502cca8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x15502cc50 <<invalid sloc>> Implicit 873
