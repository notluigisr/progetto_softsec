TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x12380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12380bc00 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x12380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x12380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x12380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x12380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x12380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x12380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x12380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x12380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x12380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x12380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x12380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x12380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x12380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-FunctionDecl 0x12380e108 <dataset_diviso_filec/func9523_vuln.c:1:1, line:89:1> line:1:1 invalid ews_config_lookup_worker_run 'int (int *, int *, const int *, int **, int *, int **)'
| |-ParmVarDecl 0x12380dd28 <col:31, col:52> col:52 invalid lookup_worker 'int *'
| |-ParmVarDecl 0x12380dda8 <line:2:10, col:25> col:25 invalid config_lookup 'int *'
| |-ParmVarDecl 0x12380de28 <line:3:10, col:34> col:34 invalid params 'const int *'
| |-ParmVarDecl 0x12380dee0 <line:4:10, col:29> col:29 invalid out_restart_params 'int **'
| |-ParmVarDecl 0x12380df60 <line:5:10, col:24> col:24 invalid cancellable 'int *'
| |-ParmVarDecl 0x12380dfe8 <line:6:10, col:19> col:19 invalid error 'int **'
| `-CompoundStmt 0x1231264c0 <line:7:1, line:89:1>
|   |-DeclStmt 0x12380e2a8 <line:10:2, col:28>
|   | `-VarDecl 0x12380e240 <col:2, col:15> col:15 used email_address 'const char *'
|   |-DeclStmt 0x12380e340 <line:11:2, col:23>
|   | `-VarDecl 0x12380e2d8 <col:2, col:15> col:15 used password 'const char *'
|   |-DeclStmt 0x12380e3d8 <line:12:2, col:29>
|   | `-VarDecl 0x12380e370 <col:2, col:15> col:15 used extension_name 'const char *'
|   |-CallExpr 0x1231234c8 <line:14:2, col:58> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123123360 <col:2> 'int ()' Function 0x1231232a8 'g_return_if_fail' 'int ()'
|   | `-CallExpr 0x1231234a0 <col:20, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x123123460 <col:20> 'int ()' Function 0x1231233a8 'E_IS_EWS_CONFIG_LOOKUP' 'int ()'
|   |   `-RecoveryExpr 0x123123480 <col:44> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x123123658 <line:15:2, col:54> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1231234f0 <col:2> 'int ()' Function 0x1231232a8 'g_return_if_fail' 'int ()'
|   | `-CallExpr 0x123123630 <col:20, col:53> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1231235f0 <col:20> 'int ()' Function 0x123123538 'E_IS_CONFIG_LOOKUP' 'int ()'
|   |   `-RecoveryExpr 0x123123610 <col:40> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x123123760 <line:16:2, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123123680 <col:2> 'int ()' Function 0x1231232a8 'g_return_if_fail' 'int ()'
|   | `-BinaryOperator 0x123123740 <col:20, col:30> 'int' contains-errors '!='
|   |   |-RecoveryExpr 0x1231236a0 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x123123720 <col:30> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1231239c8 <line:20:2, line:21:3>
|   | |-BinaryOperator 0x123123998 <line:20:6, col:26> 'int' '||'
|   | | |-UnaryOperator 0x123123900 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1231238e8 <col:7> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1231238c8 <col:7> 'const char *' lvalue Var 0x12380e240 'email_address' 'const char *'
|   | | `-UnaryOperator 0x123123980 <col:24, col:26> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x123123968 <col:25, col:26> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x123123950 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x123123938 <col:26> 'const char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x123123918 <col:26> 'const char *' lvalue Var 0x12380e240 'email_address' 'const char *'
|   | `-ReturnStmt 0x1231239b8 <line:21:3>
|   |-IfStmt 0x123123e60 <line:23:2, line:27:2>
|   | |-RecoveryExpr 0x123123b08 <line:23:6, col:72> '_Bool' contains-errors
|   | `-CompoundStmt 0x123123e48 <col:75, line:27:2>
|   |   `-ReturnStmt 0x123123e38 <line:26:3>
|   |-BinaryOperator 0x123124658 <line:32:2, col:59> 'const char *' '='
|   | |-DeclRefExpr 0x1231240a0 <col:2> 'const char *' lvalue Var 0x12380e370 'extension_name' 'const char *'
|   | `-ImplicitCastExpr 0x123124640 <col:19, col:59> 'const char *' <IntegralToPointer>
|   |   `-CallExpr 0x123124600 <col:19, col:59> 'int'
|   |     |-ImplicitCastExpr 0x1231241e0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1231241a0 <col:19> 'int ()' Function 0x1231240e8 'e_source_camel_get_extension_name' 'int ()'
|   |     `-ImplicitCastExpr 0x123124628 <col:54> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1231241c0 <col:54> 'char[4]' lvalue "STR"
|   |-IfStmt 0x123124f28 <line:34:2, line:44:2>
|   | |-RecoveryExpr 0x1231248b8 <line:34:6, col:62> '_Bool' contains-errors
|   | `-CompoundStmt 0x123124f18 <col:65, line:44:2>
|   `-IfStmt 0x1231263a0 <line:48:2, line:86:2>
|     |-ImplicitCastExpr 0x123124fc8 <line:48:6> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x123124fa8 <col:6> 'const char *' lvalue Var 0x12380e2d8 'password' 'const char *'
|     `-CompoundStmt 0x123126370 <col:16, line:86:2>
|       |-DeclStmt 0x123125060 <line:49:3, col:23>
|       | `-VarDecl 0x123124ff8 <col:3, col:16> col:16 referenced invalid servers 'const int *'
|       |-IfStmt 0x123125388 <line:51:3, line:53:3>
|       | |-RecoveryExpr 0x1231251d8 <line:51:7, col:103> '_Bool' contains-errors
|       | `-CompoundStmt 0x123125378 <col:106, line:53:3>
|       |-IfStmt 0x123126158 <line:57:3, line:82:3>
|       | |-BinaryOperator 0x1231254a0 <line:57:7, col:19> 'int' contains-errors '&&'
|       | | |-RecoveryExpr 0x123125430 <col:7> '<dependent type>' contains-errors lvalue
|       | | `-UnaryOperator 0x123125488 <col:18, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow
|       | |   `-ImplicitCastExpr 0x123125470 <col:19> '<dependent type>' contains-errors <LValueToRValue>
|       | |     `-RecoveryExpr 0x123125450 <col:19> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x123126148 <col:28, line:82:3>
|       `-IfStmt 0x123126350 <line:84:3, line:85:62>
|         |-RecoveryExpr 0x123126178 <line:84:7> '<dependent type>' contains-errors lvalue
|         `-BinaryOperator 0x123126330 <line:85:4, col:62> '<dependent type>' contains-errors '='
|           |-UnaryOperator 0x1231261d0 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|           | `-ImplicitCastExpr 0x1231261b8 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|           |   `-RecoveryExpr 0x123126198 <col:5> '<dependent type>' contains-errors lvalue
|           `-CallExpr 0x123126308 <col:26, col:62> '<dependent type>' contains-errors
|             |-DeclRefExpr 0x1231262c8 <col:26> 'int ()' Function 0x123126210 'e_named_parameters_new_clone' 'int ()'
|             `-RecoveryExpr 0x1231262e8 <col:56> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x123125900 <line:67:21> col:21 implicit used strstr 'char *(const char *, const char *)' extern
  |-ParmVarDecl 0x123125a00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x123125a68 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1231259a8 <<invalid sloc>> Implicit 898
