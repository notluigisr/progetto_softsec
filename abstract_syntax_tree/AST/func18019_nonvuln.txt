TranslationUnitDecl 0x143055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1430564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x143055bd0 '__int128'
|-TypedefDecl 0x143056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x143055bf0 'unsigned __int128'
|-TypedefDecl 0x143126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x143126a00 'struct __NSConstantString_tag'
|   `-Record 0x143056580 '__NSConstantString_tag'
|-TypedefDecl 0x143126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x143055d90 '__SVInt8_t'
|-TypedefDecl 0x143126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x143055db0 '__SVInt16_t'
|-TypedefDecl 0x143126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x143055dd0 '__SVInt32_t'
|-TypedefDecl 0x143126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x143055df0 '__SVInt64_t'
|-TypedefDecl 0x143126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x143055e10 '__SVUint8_t'
|-TypedefDecl 0x143126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x143055e30 '__SVUint16_t'
|-TypedefDecl 0x143126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x143055e50 '__SVUint32_t'
|-TypedefDecl 0x143126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x143055e70 '__SVUint64_t'
|-TypedefDecl 0x143126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x143055e90 '__SVFloat16_t'
|-TypedefDecl 0x143127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x143055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1431270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x143055ed0 '__SVFloat64_t'
|-TypedefDecl 0x143127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x143055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x143127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x143055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1431271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x143055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x143127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x143055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1431272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x143055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x143127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x143055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x143127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x143055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1431273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x143055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x143127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x143055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1431274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x143056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x143127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x143056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x143127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x143056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1431275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x143056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x143127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x143056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1431276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1430560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x143127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1430560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x143127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1430560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1431277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x143056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x143127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x143056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1431278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x143056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x143127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x143056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x143127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x143056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x143128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1430561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x143128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1430561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1431282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1430561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x143128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x143056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1431283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x143056230 '__clang_svint16x4_t'
|-TypedefDecl 0x143128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x143056250 '__clang_svint32x4_t'
|-TypedefDecl 0x143128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x143056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1431284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x143056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x143128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1430562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1431285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1430562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x143128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1430562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x143128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x143056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1431286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x143056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x143128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x143056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1431287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x143056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x143128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x143056390 '__SVBool_t'
|-TypedefDecl 0x143128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1430563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1431288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1430563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x143128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1430563f0 '__SVCount_t'
|-TypedefDecl 0x1431289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1431289b0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-TypedefDecl 0x143128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1431289b0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-FunctionDecl 0x143141868 <dataset_diviso_filec/func18019_nonvuln.c:1:1, line:65:1> line:1:1 yang_deviate_delete_unique 'int (struct lys_module *, struct lys_deviate *, struct lys_node_list *, int, char *)'
| |-ParmVarDecl 0x143129048 <col:28, col:47> col:47 used module 'struct lys_module *'
| |-ParmVarDecl 0x143141428 <col:55, col:75> col:75 used deviate 'struct lys_deviate *'
| |-ParmVarDecl 0x1431415f8 <line:2:28, col:50> col:50 used list 'struct lys_node_list *'
| |-ParmVarDecl 0x143141678 <col:56, col:60> col:60 used index 'int'
| |-ParmVarDecl 0x1431416f8 <col:67, col:74> col:74 used value 'char *'
| `-CompoundStmt 0x14380a508 <line:3:1, line:65:1>
|   |-DeclStmt 0x143141bc8 <line:4:5, col:37>
|   | |-RecordDecl 0x143141980 <col:5, col:12> col:12 struct ly_ctx
|   | `-VarDecl 0x143141ae8 <col:5, col:34> col:20 used ctx 'struct ly_ctx *' cinit
|   |   `-RecoveryExpr 0x143141b88 <col:26, col:34> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x143141b50 <col:26> 'struct lys_module *' lvalue ParmVar 0x143129048 'module' 'struct lys_module *'
|   |-DeclStmt 0x143141d80 <line:5:5, col:16>
|   | |-VarDecl 0x143141bf8 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x143141c78 <col:5, col:12> col:12 used j 'int'
|   | `-VarDecl 0x143141cf8 <col:5, col:15> col:15 used k 'int'
|   |-ForStmt 0x143808d90 <line:8:5, line:44:5>
|   | |-BinaryOperator 0x143141dd8 <line:8:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x143141d98 <col:10> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   | | `-IntegerLiteral 0x143141db8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x143141e78 <col:17, col:27> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x143141df8 <col:17> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   | | `-RecoveryExpr 0x143141e50 <col:21, col:27> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x143141e18 <col:21> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   | |-UnaryOperator 0x143141eb8 <col:40, col:41> 'int' postfix '++'
|   | | `-DeclRefExpr 0x143141e98 <col:40> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   | `-CompoundStmt 0x143808d68 <col:45, line:44:5>
|   |   |-IfStmt 0x143142140 <line:9:9, line:11:9>
|   |   | |-BinaryOperator 0x143142100 <line:9:13, col:65> 'int' contains-errors '!='
|   |   | | |-CXXDependentScopeMemberExpr 0x143141fa0 <col:13, col:29> '<dependent type>' contains-errors lvalue .expr_size
|   |   | | | `-ArraySubscriptExpr 0x143141f80 <col:13, col:27> '<dependent type>' contains-errors lvalue
|   |   | | |   |-ImplicitCastExpr 0x143141f50 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   | `-RecoveryExpr 0x143141f08 <col:13, col:19> '<dependent type>' contains-errors lvalue
|   |   | | |   |   `-DeclRefExpr 0x143141ed0 <col:13> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |   | | |   `-ImplicitCastExpr 0x143141f68 <col:26> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x143141f30 <col:26> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |   | | `-CXXDependentScopeMemberExpr 0x1431420b8 <col:42, col:65> '<dependent type>' contains-errors lvalue .expr_size
|   |   | |   `-ArraySubscriptExpr 0x143142098 <col:42, col:63> '<dependent type>' contains-errors lvalue
|   |   | |     |-ImplicitCastExpr 0x143142068 <col:42, col:51> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     | `-RecoveryExpr 0x143142020 <col:42, col:51> '<dependent type>' contains-errors lvalue
|   |   | |     |   `-DeclRefExpr 0x143141fe8 <col:42> 'struct lys_deviate *' lvalue ParmVar 0x143141428 'deviate' 'struct lys_deviate *'
|   |   | |     `-ImplicitCastExpr 0x143142080 <col:58> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x143142048 <col:58> 'int' lvalue ParmVar 0x143141678 'index' 'int'
|   |   | `-CompoundStmt 0x143142128 <col:76, line:11:9>
|   |   |   `-ContinueStmt 0x143142120 <line:10:13>
|   |   |-ForStmt 0x1431428b0 <line:13:9, line:17:9>
|   |   | |-BinaryOperator 0x1431421a0 <line:13:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x143142160 <col:14> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |   | | `-IntegerLiteral 0x143142180 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1431422f8 <col:21, col:48> 'int' contains-errors '<'
|   |   | | |-DeclRefExpr 0x1431421c0 <col:21> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |   | | `-CXXDependentScopeMemberExpr 0x1431422b0 <col:25, col:48> '<dependent type>' contains-errors lvalue .expr_size
|   |   | |   `-ArraySubscriptExpr 0x143142290 <col:25, col:46> '<dependent type>' contains-errors lvalue
|   |   | |     |-ImplicitCastExpr 0x143142260 <col:25, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     | `-RecoveryExpr 0x143142218 <col:25, col:34> '<dependent type>' contains-errors lvalue
|   |   | |     |   `-DeclRefExpr 0x1431421e0 <col:25> 'struct lys_deviate *' lvalue ParmVar 0x143141428 'deviate' 'struct lys_deviate *'
|   |   | |     `-ImplicitCastExpr 0x143142278 <col:41> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x143142240 <col:41> 'int' lvalue ParmVar 0x143141678 'index' 'int'
|   |   | |-UnaryOperator 0x143142338 <col:59, col:60> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x143142318 <col:59> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |   | `-CompoundStmt 0x143142898 <col:64, line:17:9>
|   |   |   `-IfStmt 0x143142878 <line:14:13, line:16:13>
|   |   |     |-UnaryOperator 0x143142840 <line:14:17, col:88> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   |     | `-CallExpr 0x143142808 <col:18, col:88> '<dependent type>' contains-errors
|   |   |     |   |-DeclRefExpr 0x1431424b8 <col:18> 'int ()' Function 0x143142400 'ly_strequal' 'int ()'
|   |   |     |   |-ArraySubscriptExpr 0x143142640 <col:30, col:52> '<dependent type>' contains-errors lvalue
|   |   |     |   | |-ImplicitCastExpr 0x143142610 <col:30, col:46> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     |   | | `-CXXDependentScopeMemberExpr 0x1431425a8 <col:30, col:46> '<dependent type>' contains-errors lvalue .expr
|   |   |     |   | |   `-ArraySubscriptExpr 0x143142588 <col:30, col:44> '<dependent type>' contains-errors lvalue
|   |   |     |   | |     |-ImplicitCastExpr 0x143142558 <col:30, col:36> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     |   | |     | `-RecoveryExpr 0x143142510 <col:30, col:36> '<dependent type>' contains-errors lvalue
|   |   |     |   | |     |   `-DeclRefExpr 0x1431424d8 <col:30> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |   |     |   | |     `-ImplicitCastExpr 0x143142570 <col:43> 'int' <LValueToRValue>
|   |   |     |   | |       `-DeclRefExpr 0x143142538 <col:43> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |   |     |   | `-ImplicitCastExpr 0x143142628 <col:51> 'int' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x1431425f0 <col:51> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |   |     |   |-ArraySubscriptExpr 0x1431427c8 <col:55, col:84> '<dependent type>' contains-errors lvalue
|   |   |     |   | |-ImplicitCastExpr 0x143142798 <col:55, col:78> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     |   | | `-CXXDependentScopeMemberExpr 0x143142730 <col:55, col:78> '<dependent type>' contains-errors lvalue .expr
|   |   |     |   | |   `-ArraySubscriptExpr 0x143142710 <col:55, col:76> '<dependent type>' contains-errors lvalue
|   |   |     |   | |     |-ImplicitCastExpr 0x1431426e0 <col:55, col:64> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     |   | |     | `-RecoveryExpr 0x143142698 <col:55, col:64> '<dependent type>' contains-errors lvalue
|   |   |     |   | |     |   `-DeclRefExpr 0x143142660 <col:55> 'struct lys_deviate *' lvalue ParmVar 0x143141428 'deviate' 'struct lys_deviate *'
|   |   |     |   | |     `-ImplicitCastExpr 0x1431426f8 <col:71> 'int' <LValueToRValue>
|   |   |     |   | |       `-DeclRefExpr 0x1431426c0 <col:71> 'int' lvalue ParmVar 0x143141678 'index' 'int'
|   |   |     |   | `-ImplicitCastExpr 0x1431427b0 <col:83> 'int' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x143142778 <col:83> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |   |     |   `-IntegerLiteral 0x1431427e8 <col:87> 'int' 1
|   |   |     `-CompoundStmt 0x143142860 <col:91, line:16:13>
|   |   |       `-BreakStmt 0x143142858 <line:15:17>
|   |   `-IfStmt 0x143808d48 <line:19:9, line:43:9>
|   |     |-BinaryOperator 0x143142a20 <line:19:13, col:41> 'int' contains-errors '=='
|   |     | |-DeclRefExpr 0x1431428e8 <col:13> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |     | `-CXXDependentScopeMemberExpr 0x1431429d8 <col:18, col:41> '<dependent type>' contains-errors lvalue .expr_size
|   |     |   `-ArraySubscriptExpr 0x1431429b8 <col:18, col:39> '<dependent type>' contains-errors lvalue
|   |     |     |-ImplicitCastExpr 0x143142988 <col:18, col:27> '<dependent type>' contains-errors <LValueToRValue>
|   |     |     | `-RecoveryExpr 0x143142940 <col:18, col:27> '<dependent type>' contains-errors lvalue
|   |     |     |   `-DeclRefExpr 0x143142908 <col:18> 'struct lys_deviate *' lvalue ParmVar 0x143141428 'deviate' 'struct lys_deviate *'
|   |     |     `-ImplicitCastExpr 0x1431429a0 <col:34> 'int' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x143142968 <col:34> 'int' lvalue ParmVar 0x143141678 'index' 'int'
|   |     `-CompoundStmt 0x143808cf8 <col:52, line:43:9>
|   |       |-ForStmt 0x143142f20 <line:21:13, line:23:13>
|   |       | |-BinaryOperator 0x143142a80 <line:21:18, col:22> 'int' '='
|   |       | | |-DeclRefExpr 0x143142a40 <col:18> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |       | | `-IntegerLiteral 0x143142a60 <col:22> 'int' 0
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x143142bd8 <col:25, col:45> 'int' contains-errors '<'
|   |       | | |-DeclRefExpr 0x143142aa0 <col:25> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |       | | `-CXXDependentScopeMemberExpr 0x143142b90 <col:29, col:45> '<dependent type>' contains-errors lvalue .expr_size
|   |       | |   `-ArraySubscriptExpr 0x143142b70 <col:29, col:43> '<dependent type>' contains-errors lvalue
|   |       | |     |-ImplicitCastExpr 0x143142b40 <col:29, col:35> '<dependent type>' contains-errors <LValueToRValue>
|   |       | |     | `-RecoveryExpr 0x143142af8 <col:29, col:35> '<dependent type>' contains-errors lvalue
|   |       | |     |   `-DeclRefExpr 0x143142ac0 <col:29> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       | |     `-ImplicitCastExpr 0x143142b58 <col:42> 'int' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x143142b20 <col:42> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |       | |-UnaryOperator 0x143142c18 <col:56, col:57> 'int' postfix '++'
|   |       | | `-DeclRefExpr 0x143142bf8 <col:56> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |       | `-CompoundStmt 0x143142f08 <col:61, line:23:13>
|   |       |   `-CallExpr 0x143142ed8 <line:22:17, col:59> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x143142d10 <col:17> 'int ()' Function 0x143142c58 'lydict_remove' 'int ()'
|   |       |     |-DeclRefExpr 0x143142d30 <col:31> 'struct ly_ctx *' contains-errors lvalue Var 0x143141ae8 'ctx' 'struct ly_ctx *'
|   |       |     `-ArraySubscriptExpr 0x143142eb8 <col:36, col:58> '<dependent type>' contains-errors lvalue
|   |       |       |-ImplicitCastExpr 0x143142e88 <col:36, col:52> '<dependent type>' contains-errors <LValueToRValue>
|   |       |       | `-CXXDependentScopeMemberExpr 0x143142e20 <col:36, col:52> '<dependent type>' contains-errors lvalue .expr
|   |       |       |   `-ArraySubscriptExpr 0x143142e00 <col:36, col:50> '<dependent type>' contains-errors lvalue
|   |       |       |     |-ImplicitCastExpr 0x143142dd0 <col:36, col:42> '<dependent type>' contains-errors <LValueToRValue>
|   |       |       |     | `-RecoveryExpr 0x143142d88 <col:36, col:42> '<dependent type>' contains-errors lvalue
|   |       |       |     |   `-DeclRefExpr 0x143142d50 <col:36> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |       |     `-ImplicitCastExpr 0x143142de8 <col:49> 'int' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x143142db0 <col:49> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |       |       `-ImplicitCastExpr 0x143142ea0 <col:57> 'int' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x143142e68 <col:57> 'int' lvalue Var 0x143141c78 'j' 'int'
|   |       |-CallExpr 0x143143258 <line:24:13, col:38> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x143143108 <col:13> 'void (void *)' Function 0x143142f98 'free' 'void (void *)'
|   |       | `-CXXDependentScopeMemberExpr 0x1431431f8 <col:18, col:34> '<dependent type>' contains-errors lvalue .expr
|   |       |   `-ArraySubscriptExpr 0x1431431d8 <col:18, col:32> '<dependent type>' contains-errors lvalue
|   |       |     |-ImplicitCastExpr 0x1431431a8 <col:18, col:24> '<dependent type>' contains-errors <LValueToRValue>
|   |       |     | `-RecoveryExpr 0x143143160 <col:18, col:24> '<dependent type>' contains-errors lvalue
|   |       |     |   `-DeclRefExpr 0x143143128 <col:18> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |     `-ImplicitCastExpr 0x1431431c0 <col:31> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x143143188 <col:31> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |       |-UnaryOperator 0x1431432e0 <line:26:13, col:30> '<dependent type>' contains-errors postfix '--' cannot overflow
|   |       | `-RecoveryExpr 0x1431432b8 <col:13, col:19> '<dependent type>' contains-errors lvalue
|   |       |   `-DeclRefExpr 0x143143280 <col:13> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |-IfStmt 0x1438086e0 <line:27:13, line:30:13>
|   |       | |-BinaryOperator 0x143143378 <line:27:17, col:28> 'int' contains-errors '!='
|   |       | | |-DeclRefExpr 0x1431432f8 <col:17> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |       | | `-RecoveryExpr 0x143143350 <col:22, col:28> '<dependent type>' contains-errors lvalue
|   |       | |   `-DeclRefExpr 0x143143318 <col:22> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       | `-CompoundStmt 0x1438086c0 <col:41, line:30:13>
|   |       |   |-BinaryOperator 0x143808410 <line:28:17, col:77> '<dependent type>' contains-errors '='
|   |       |   | |-CXXDependentScopeMemberExpr 0x143808270 <col:17, col:33> '<dependent type>' contains-errors lvalue .expr_size
|   |       |   | | `-ArraySubscriptExpr 0x143808250 <col:17, col:31> '<dependent type>' contains-errors lvalue
|   |       |   | |   |-ImplicitCastExpr 0x143808220 <col:17, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   | |   | `-RecoveryExpr 0x1431433d0 <col:17, col:23> '<dependent type>' contains-errors lvalue
|   |       |   | |   |   `-DeclRefExpr 0x143143398 <col:17> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |   | |   `-ImplicitCastExpr 0x143808238 <col:30> 'int' <LValueToRValue>
|   |       |   | |     `-DeclRefExpr 0x143808200 <col:30> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |       |   | `-CXXDependentScopeMemberExpr 0x1438083c8 <col:45, col:77> '<dependent type>' contains-errors lvalue .expr_size
|   |       |   |   `-ArraySubscriptExpr 0x1438083a8 <col:45, col:75> '<dependent type>' contains-errors lvalue
|   |       |   |     |-ImplicitCastExpr 0x143808378 <col:45, col:51> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   |     | `-RecoveryExpr 0x1438082f0 <col:45, col:51> '<dependent type>' contains-errors lvalue
|   |       |   |     |   `-DeclRefExpr 0x1438082b8 <col:45> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |   |     `-ImplicitCastExpr 0x143808390 <col:58, col:64> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   |       `-RecoveryExpr 0x143808350 <col:58, col:64> '<dependent type>' contains-errors lvalue
|   |       |   |         `-DeclRefExpr 0x143808318 <col:58> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |   `-BinaryOperator 0x1438086a0 <line:29:17, col:72> '<dependent type>' contains-errors '='
|   |       |     |-CXXDependentScopeMemberExpr 0x143808500 <col:17, col:33> '<dependent type>' contains-errors lvalue .expr
|   |       |     | `-ArraySubscriptExpr 0x1438084e0 <col:17, col:31> '<dependent type>' contains-errors lvalue
|   |       |     |   |-ImplicitCastExpr 0x1438084b0 <col:17, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   |       |     |   | `-RecoveryExpr 0x143808468 <col:17, col:23> '<dependent type>' contains-errors lvalue
|   |       |     |   |   `-DeclRefExpr 0x143808430 <col:17> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |     |   `-ImplicitCastExpr 0x1438084c8 <col:30> 'int' <LValueToRValue>
|   |       |     |     `-DeclRefExpr 0x143808490 <col:30> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |       |     `-CXXDependentScopeMemberExpr 0x143808658 <col:40, col:72> '<dependent type>' contains-errors lvalue .expr
|   |       |       `-ArraySubscriptExpr 0x143808638 <col:40, col:70> '<dependent type>' contains-errors lvalue
|   |       |         |-ImplicitCastExpr 0x143808608 <col:40, col:46> '<dependent type>' contains-errors <LValueToRValue>
|   |       |         | `-RecoveryExpr 0x143808580 <col:40, col:46> '<dependent type>' contains-errors lvalue
|   |       |         |   `-DeclRefExpr 0x143808548 <col:40> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |         `-ImplicitCastExpr 0x143808620 <col:53, col:59> '<dependent type>' contains-errors <LValueToRValue>
|   |       |           `-RecoveryExpr 0x1438085e0 <col:53, col:59> '<dependent type>' contains-errors lvalue
|   |       |             `-DeclRefExpr 0x1438085a8 <col:53> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |-IfStmt 0x143808bd0 <line:32:13, line:38:13> has_else
|   |       | |-UnaryOperator 0x143808778 <line:32:17, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x143808760 <col:18, col:24> '<dependent type>' contains-errors <LValueToRValue>
|   |       | |   `-RecoveryExpr 0x143808738 <col:18, col:24> '<dependent type>' contains-errors lvalue
|   |       | |     `-DeclRefExpr 0x143808700 <col:18> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       | |-CompoundStmt 0x1438088b0 <col:37, line:35:13>
|   |       | | `-CallExpr 0x143808828 <line:33:17, col:34> '<dependent type>' contains-errors
|   |       | |   |-DeclRefExpr 0x143808790 <col:17> 'void (void *)' Function 0x143142f98 'free' 'void (void *)'
|   |       | |   `-RecoveryExpr 0x1438087e8 <col:22, col:28> '<dependent type>' contains-errors lvalue
|   |       | |     `-DeclRefExpr 0x1438087b0 <col:22> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       | `-CompoundStmt 0x143808bb8 <line:35:20, line:38:13>
|   |       |   `-BinaryOperator 0x143808a40 <line:36:17, col:61> '<dependent type>' contains-errors '='
|   |       |     |-CXXDependentScopeMemberExpr 0x1438089d8 <col:17, col:49> '<dependent type>' contains-errors lvalue .expr_size
|   |       |     | `-ArraySubscriptExpr 0x1438089b8 <col:17, col:47> '<dependent type>' contains-errors lvalue
|   |       |     |   |-ImplicitCastExpr 0x143808988 <col:17, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   |       |     |   | `-RecoveryExpr 0x143808900 <col:17, col:23> '<dependent type>' contains-errors lvalue
|   |       |     |   |   `-DeclRefExpr 0x1438088c8 <col:17> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |     |   `-ImplicitCastExpr 0x1438089a0 <col:30, col:36> '<dependent type>' contains-errors <LValueToRValue>
|   |       |     |     `-RecoveryExpr 0x143808960 <col:30, col:36> '<dependent type>' contains-errors lvalue
|   |       |     |       `-DeclRefExpr 0x143808928 <col:30> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|   |       |     `-IntegerLiteral 0x143808a20 <col:61> 'int' 0
|   |       |-BinaryOperator 0x143808c58 <line:40:13, col:17> 'int' '='
|   |       | |-DeclRefExpr 0x143808c00 <col:13> 'int' lvalue Var 0x143141cf8 'k' 'int'
|   |       | `-ImplicitCastExpr 0x143808c40 <col:17> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x143808c20 <col:17> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |       |-BinaryOperator 0x143808cd0 <line:41:13, col:18> 'int' '='
|   |       | |-DeclRefExpr 0x143808c78 <col:13> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   |       | `-UnaryOperator 0x143808cb8 <col:17, col:18> 'int' prefix '-'
|   |       |   `-IntegerLiteral 0x143808c98 <col:18> 'int' 1
|   |       `-BreakStmt 0x143808cf0 <line:42:13>
|   |-IfStmt 0x143809070 <line:46:5, line:51:5>
|   | |-BinaryOperator 0x143808e38 <line:46:9, col:15> 'int' '!='
|   | | |-ImplicitCastExpr 0x143808e20 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x143808dc8 <col:9> 'int' lvalue Var 0x143141bf8 'i' 'int'
|   | | `-UnaryOperator 0x143808e08 <col:14, col:15> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x143808de8 <col:15> 'int' 1
|   | `-CompoundStmt 0x143809060 <col:18, line:51:5>
|   |-BinaryOperator 0x1438090e8 <line:54:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x143809090 <col:5> 'int' lvalue Var 0x143141c78 'j' 'int'
|   | `-UnaryOperator 0x1438090d0 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x1438090b0 <col:10> 'int' 1
|   `-WhileStmt 0x14380a4e8 <line:55:5, line:63:5>
|     |-RecoveryExpr 0x143809da0 <line:55:12, col:91> '_Bool' contains-errors
|     `-CompoundStmt 0x14380a4d0 <col:94, line:63:5>
|       `-IfStmt 0x14380a4a0 <line:56:9, line:62:9> has_else
|         |-BinaryOperator 0x143809ef8 <line:56:13, col:46> 'int' contains-errors '=='
|         | |-CXXDependentScopeMemberExpr 0x143809e90 <col:13, col:27> '<dependent type>' contains-errors lvalue ->insubstmt_index
|         | | `-ArraySubscriptExpr 0x143809e70 <col:13, col:24> '<dependent type>' contains-errors lvalue
|         | |   |-ImplicitCastExpr 0x143809e40 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
|         | |   | `-RecoveryExpr 0x143809df8 <col:13, col:19> '<dependent type>' contains-errors lvalue
|         | |   |   `-DeclRefExpr 0x143809dc0 <col:13> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|         | |   `-ImplicitCastExpr 0x143809e58 <col:23> 'int' <LValueToRValue>
|         | |     `-DeclRefExpr 0x143809e20 <col:23> 'int' lvalue Var 0x143141c78 'j' 'int'
|         | `-DeclRefExpr 0x143809ed8 <col:46> 'int' lvalue Var 0x143141cf8 'k' 'int'
|         |-CompoundStmt 0x14380a1c0 <col:49, line:59:9>
|         | |-CallExpr 0x14380a148 <line:57:13, col:68> '<dependent type>' contains-errors
|         | | |-DeclRefExpr 0x143809ff8 <col:13> 'int ()' Function 0x143809f40 'lyp_ext_instance_rm' 'int ()'
|         | | |-DeclRefExpr 0x14380a018 <col:33> 'struct ly_ctx *' contains-errors lvalue Var 0x143141ae8 'ctx' 'struct ly_ctx *'
|         | | |-UnaryOperator 0x14380a098 <col:38, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
|         | | | `-RecoveryExpr 0x14380a070 <col:39, col:45> '<dependent type>' contains-errors lvalue
|         | | |   `-DeclRefExpr 0x14380a038 <col:39> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|         | | |-UnaryOperator 0x14380a110 <col:50, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
|         | | | `-RecoveryExpr 0x14380a0e8 <col:51, col:57> '<dependent type>' contains-errors lvalue
|         | | |   `-DeclRefExpr 0x14380a0b0 <col:51> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|         | | `-DeclRefExpr 0x14380a128 <col:67> 'int' lvalue Var 0x143141c78 'j' 'int'
|         | `-UnaryOperator 0x14380a1a8 <line:58:13, col:15> 'int' prefix '--'
|         |   `-DeclRefExpr 0x14380a188 <col:15> 'int' lvalue Var 0x143141c78 'j' 'int'
|         `-IfStmt 0x14380a480 <line:59:16, line:62:9>
|           |-BinaryOperator 0x14380a318 <line:59:20, col:52> 'int' contains-errors '>'
|           | |-CXXDependentScopeMemberExpr 0x14380a2b0 <col:20, col:34> '<dependent type>' contains-errors lvalue ->insubstmt_index
|           | | `-ArraySubscriptExpr 0x14380a290 <col:20, col:31> '<dependent type>' contains-errors lvalue
|           | |   |-ImplicitCastExpr 0x14380a260 <col:20, col:26> '<dependent type>' contains-errors <LValueToRValue>
|           | |   | `-RecoveryExpr 0x14380a218 <col:20, col:26> '<dependent type>' contains-errors lvalue
|           | |   |   `-DeclRefExpr 0x14380a1e0 <col:20> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|           | |   `-ImplicitCastExpr 0x14380a278 <col:30> 'int' <LValueToRValue>
|           | |     `-DeclRefExpr 0x14380a240 <col:30> 'int' lvalue Var 0x143141c78 'j' 'int'
|           | `-DeclRefExpr 0x14380a2f8 <col:52> 'int' lvalue Var 0x143141cf8 'k' 'int'
|           `-CompoundStmt 0x14380a468 <col:55, line:62:9>
|             `-UnaryOperator 0x14380a450 <line:61:13, col:42> '<dependent type>' contains-errors postfix '--' cannot overflow
|               `-CXXDependentScopeMemberExpr 0x14380a408 <col:13, col:27> '<dependent type>' contains-errors lvalue ->insubstmt_index
|                 `-ArraySubscriptExpr 0x14380a3e8 <col:13, col:24> '<dependent type>' contains-errors lvalue
|                   |-ImplicitCastExpr 0x14380a3b8 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
|                   | `-RecoveryExpr 0x14380a370 <col:13, col:19> '<dependent type>' contains-errors lvalue
|                   |   `-DeclRefExpr 0x14380a338 <col:13> 'struct lys_node_list *' lvalue ParmVar 0x1431415f8 'list' 'struct lys_node_list *'
|                   `-ImplicitCastExpr 0x14380a3d0 <col:23> 'int' <LValueToRValue>
|                     `-DeclRefExpr 0x14380a398 <col:23> 'int' lvalue Var 0x143141c78 'j' 'int'
`-FunctionDecl 0x143142f98 <line:24:13> col:13 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x143143098 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x143143040 <<invalid sloc>> Implicit 873
