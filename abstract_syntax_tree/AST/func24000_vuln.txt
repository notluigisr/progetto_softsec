TranslationUnitDecl 0x136055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1360564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136055bd0 '__int128'
|-TypedefDecl 0x136056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136055bf0 'unsigned __int128'
|-TypedefDecl 0x13680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13680bc00 'struct __NSConstantString_tag'
|   `-Record 0x136056580 '__NSConstantString_tag'
|-TypedefDecl 0x13680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136055d90 '__SVInt8_t'
|-TypedefDecl 0x13680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136055db0 '__SVInt16_t'
|-TypedefDecl 0x13680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136055dd0 '__SVInt32_t'
|-TypedefDecl 0x13680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136055df0 '__SVInt64_t'
|-TypedefDecl 0x13680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136055e10 '__SVUint8_t'
|-TypedefDecl 0x13680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136055e30 '__SVUint16_t'
|-TypedefDecl 0x13680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136055e50 '__SVUint32_t'
|-TypedefDecl 0x13680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136055e70 '__SVUint64_t'
|-TypedefDecl 0x13680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136055e90 '__SVFloat16_t'
|-TypedefDecl 0x13680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1360560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1360560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1360560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1360561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1360561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1360561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1360562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1360562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1360562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136056390 '__SVBool_t'
|-TypedefDecl 0x13680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1360563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1360563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1360563f0 '__SVCount_t'
|-TypedefDecl 0x13680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13680dbb0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
|-TypedefDecl 0x13680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13680dbb0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
|-FunctionDecl 0x13680de80 <dataset_diviso_filec/func24000_vuln.c:1:1, line:44:1> line:1:13 invalid get_xref_linear_skipped 'void (int *, int *)' static
| |-ParmVarDecl 0x13680dd28 <col:37, col:43> col:43 invalid fp 'int *'
| |-ParmVarDecl 0x13680dda8 <col:47, col:55> col:55 referenced invalid xref 'int *'
| `-CompoundStmt 0x13682a308 <line:2:1, line:44:1>
|   |-DeclStmt 0x13680dfb8 <line:3:5, col:13>
|   | `-VarDecl 0x13680df50 <col:5, col:10> col:10 used err 'int'
|   |-DeclStmt 0x13680e170 <line:4:5, col:22>
|   | |-VarDecl 0x13680dfe0 <col:5, col:10> col:10 used ch 'char'
|   | `-VarDecl 0x13680e0f0 <col:5, col:21> col:14 used buf 'char[256]'
|   |-IfStmt 0x13680e240 <line:6:5, line:7:7>
|   | |-BinaryOperator 0x13680e210 <line:6:9, col:24> 'int' contains-errors '!='
|   | | |-CXXDependentScopeMemberExpr 0x13680e1a8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->start
|   | | | `-RecoveryExpr 0x13680e188 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x13680e1f0 <col:24> 'int' 0
|   | `-ReturnStmt 0x13680e230 <line:7:7>
|   |-BinaryOperator 0x13680e310 <line:10:5, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13680e2a8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->is_linear
|   | | `-RecoveryExpr 0x13680e280 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13680e260 <col:5> 'int *' lvalue ParmVar 0x13680dda8 'xref' 'int *'
|   | `-IntegerLiteral 0x13680e2f0 <col:23> 'int' 1
|   |-IfStmt 0x136827c08 <line:13:5, line:14:7>
|   | |-BinaryOperator 0x136827bd8 <line:13:9, col:42> 'int' contains-errors '<'
|   | | |-ParenExpr 0x136827b98 <col:9, col:38> '<dependent type>' contains-errors
|   | | | `-BinaryOperator 0x136827b78 <col:10, col:37> '<dependent type>' contains-errors '='
|   | | |   |-CXXDependentScopeMemberExpr 0x13680e350 <col:10, col:16> '<dependent type>' contains-errors lvalue ->end
|   | | |   | `-RecoveryExpr 0x13680e330 <col:10> '<dependent type>' contains-errors lvalue
|   | | |   `-CallExpr 0x136827b50 <col:22, col:37> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x136827b10 <col:22> 'int ()' Function 0x136827a58 'get_next_eof' 'int ()'
|   | | |     `-RecoveryExpr 0x136827b30 <col:35> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x136827bb8 <col:42> 'int' 0
|   | `-ReturnStmt 0x136827bf8 <line:14:7>
|   |-BinaryOperator 0x136827c68 <line:17:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x136827c28 <col:5> 'int' lvalue Var 0x13680df50 'err' 'int'
|   | `-IntegerLiteral 0x136827c48 <col:11> 'int' 0
|   |-WhileStmt 0x1368298e8 <line:18:5, line:26:5>
|   | |-BinaryOperator 0x136828008 <line:18:12, col:54> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x136827e30 <col:12, col:30> 'int' contains-errors prefix '!' cannot overflow
|   | | | `-ParenExpr 0x136827e10 <col:13, col:30> 'int' contains-errors
|   | | |   `-BinaryOperator 0x136827df0 <col:14, col:29> 'int' contains-errors '='
|   | | |     |-DeclRefExpr 0x136827c88 <col:14> 'int' lvalue Var 0x13680df50 'err' 'int'
|   | | |     `-CallExpr 0x136827dc8 <col:20, col:29> '<dependent type>' contains-errors
|   | | |       |-DeclRefExpr 0x136827d88 <col:20> 'int ()' Function 0x136827cd0 'ferror' 'int ()'
|   | | |       `-RecoveryExpr 0x136827da8 <col:27> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x136827fc8 <col:35, col:54> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x136827f28 <col:35> 'int ()' Function 0x136827e70 'fread' 'int ()'
|   | |   |-DeclRefExpr 0x136827f48 <col:41> 'char[256]' lvalue Var 0x13680e0f0 'buf' 'char[256]'
|   | |   |-IntegerLiteral 0x136827f68 <col:46> 'int' 1
|   | |   |-IntegerLiteral 0x136827f88 <col:49> 'int' 8
|   | |   `-RecoveryExpr 0x136827fa8 <col:52> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1368298c8 <line:19:5, line:26:5>
|   |   |-IfStmt 0x136829698 <line:20:9, line:23:11> has_else
|   |   | |-RecoveryExpr 0x136828810 <line:20:13, col:31> '<dependent type>' contains-errors lvalue
|   |   | | |-DeclRefExpr 0x1368286f0 <col:13> 'int (const char *, const char *, unsigned long)' Function 0x1368284a0 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   | | |-DeclRefExpr 0x136828710 <col:21> 'char[256]' lvalue Var 0x13680e0f0 'buf' 'char[256]'
|   |   | | `-StringLiteral 0x136828770 <col:26> 'char[4]' lvalue "STR"
|   |   | |-NullStmt 0x136829690 <col:34>
|   |   | `-IfStmt 0x136829670 <line:22:14, line:23:11>
|   |   |   |-BinaryOperator 0x136829640 <line:22:18, col:36> 'int' contains-errors '<'
|   |   |   | |-ParenExpr 0x136829600 <col:18, col:32> '<dependent type>' contains-errors
|   |   |   | | `-BinaryOperator 0x1368289d0 <col:19, col:31> '<dependent type>' contains-errors '-'
|   |   |   | |   |-CallExpr 0x136828988 <col:19, col:27> '<dependent type>' contains-errors
|   |   |   | |   | |-DeclRefExpr 0x136828948 <col:19> 'int ()' Function 0x136828890 'ftell' 'int ()'
|   |   |   | |   | `-RecoveryExpr 0x136828968 <col:25> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-IntegerLiteral 0x1368289b0 <col:31> 'int' 9
|   |   |   | `-IntegerLiteral 0x136829620 <col:36> 'int' 0
|   |   |   `-ReturnStmt 0x136829660 <line:23:11>
|   |   `-CallExpr 0x136829890 <line:25:9, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1368297a8 <col:9> 'int ()' Function 0x1368296f0 'fseek' 'int ()'
|   |     |-RecoveryExpr 0x1368297c8 <col:15> '<dependent type>' contains-errors lvalue
|   |     |-UnaryOperator 0x136829808 <col:19, col:20> 'int' prefix '-'
|   |     | `-IntegerLiteral 0x1368297e8 <col:20> 'int' 9
|   |     `-RecoveryExpr 0x136829870 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x136829950 <line:28:5, line:29:7>
|   | |-ImplicitCastExpr 0x136829928 <line:28:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x136829908 <col:9> 'int' lvalue Var 0x13680df50 'err' 'int'
|   | `-ReturnStmt 0x136829940 <line:29:7>
|   |-BinaryOperator 0x1368299c8 <line:32:5, col:10> 'char' '='
|   | |-DeclRefExpr 0x136829970 <col:5> 'char' lvalue Var 0x13680dfe0 'ch' 'char'
|   | `-ImplicitCastExpr 0x1368299b0 <col:10> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x136829990 <col:10> 'int' 0
|   |-WhileStmt 0x136829e58 <line:33:5, line:34:29>
|   | |-CallExpr 0x136829d08 <line:33:12, col:48> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x136829ac8 <col:12> 'int ()' Function 0x136829a10 'SAFE_F' 'int ()'
|   | | |-RecoveryExpr 0x136829ae8 <col:19> '<dependent type>' contains-errors lvalue
|   | | `-ParenExpr 0x136829ce8 <col:23, col:47> 'int' contains-errors
|   | |   `-BinaryOperator 0x136829cc8 <col:24, col:44> 'int' contains-errors '!='
|   | |     |-ParenExpr 0x136829c90 <col:24, col:39> 'char' contains-errors
|   | |     | `-BinaryOperator 0x136829c70 <col:25, col:38> 'char' contains-errors '='
|   | |     |   |-DeclRefExpr 0x136829b08 <col:25> 'char' lvalue Var 0x13680dfe0 'ch' 'char'
|   | |     |   `-CallExpr 0x136829c48 <col:30, col:38> '<dependent type>' contains-errors
|   | |     |     |-DeclRefExpr 0x136829c08 <col:30> 'int ()' Function 0x136829b50 'fgetc' 'int ()'
|   | |     |     `-RecoveryExpr 0x136829c28 <col:36> '<dependent type>' contains-errors lvalue
|   | |     `-CharacterLiteral 0x136829cb0 <col:44> 'int' 120
|   | `-CallExpr 0x136829e20 <line:34:7, col:29> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x136829d38 <col:7> 'int ()' Function 0x1368296f0 'fseek' 'int ()'
|   |   |-RecoveryExpr 0x136829d58 <col:13> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x136829d98 <col:17, col:18> 'int' prefix '-'
|   |   | `-IntegerLiteral 0x136829d78 <col:18> 'int' 2
|   |   `-RecoveryExpr 0x136829e00 <col:21> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13682a198 <line:36:5, line:40:5>
|   | |-BinaryOperator 0x136829ee0 <line:36:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x136829ec8 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x136829eb0 <col:9> 'char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x136829e78 <col:9> 'char' lvalue Var 0x13680dfe0 'ch' 'char'
|   | | `-CharacterLiteral 0x136829e98 <col:15> 'int' 120
|   | `-CompoundStmt 0x13682a178 <line:37:5, line:40:5>
|   |   |-BinaryOperator 0x13682a038 <line:38:9, col:35> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x136829f48 <col:9, col:15> '<dependent type>' contains-errors lvalue ->start
|   |   | | `-RecoveryExpr 0x136829f20 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x136829f00 <col:9> 'int *' lvalue ParmVar 0x13680dda8 'xref' 'int *'
|   |   | `-BinaryOperator 0x13682a018 <col:23, col:35> '<dependent type>' contains-errors '-'
|   |   |   |-CallExpr 0x136829fd0 <col:23, col:31> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x136829f90 <col:23> 'int ()' Function 0x136828890 'ftell' 'int ()'
|   |   |   | `-RecoveryExpr 0x136829fb0 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x136829ff8 <col:35> 'int' 1
|   |   `-CallExpr 0x13682a140 <line:39:9, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13682a058 <col:9> 'int ()' Function 0x1368296f0 'fseek' 'int ()'
|   |     |-RecoveryExpr 0x13682a078 <col:15> '<dependent type>' contains-errors lvalue
|   |     |-UnaryOperator 0x13682a0b8 <col:19, col:20> 'int' prefix '-'
|   |     | `-IntegerLiteral 0x13682a098 <col:20> 'int' 1
|   |     `-RecoveryExpr 0x13682a120 <col:23> '<dependent type>' contains-errors lvalue
|   `-CallExpr 0x13682a2d0 <line:43:5, col:36> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x13682a1b8 <col:5> 'int ()' Function 0x1368296f0 'fseek' 'int ()'
|     |-RecoveryExpr 0x13682a1d8 <col:11> '<dependent type>' contains-errors lvalue
|     |-CXXDependentScopeMemberExpr 0x13682a218 <col:15, col:21> '<dependent type>' contains-errors lvalue ->start
|     | `-RecoveryExpr 0x13682a1f8 <col:15> '<dependent type>' contains-errors lvalue
|     `-RecoveryExpr 0x13682a2b0 <col:28> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x1368284a0 <line:20:13> col:13 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x1368285a0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x136828608 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x136828670 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x136828548 <<invalid sloc>> Implicit 888
