TranslationUnitDecl 0x12f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f855bd0 '__int128'
|-TypedefDecl 0x12f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f855bf0 'unsigned __int128'
|-TypedefDecl 0x13800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13800bc00 'struct __NSConstantString_tag'
|   `-Record 0x12f856580 '__NSConstantString_tag'
|-TypedefDecl 0x13800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f855d90 '__SVInt8_t'
|-TypedefDecl 0x13800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f855db0 '__SVInt16_t'
|-TypedefDecl 0x13800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f855dd0 '__SVInt32_t'
|-TypedefDecl 0x13800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f855df0 '__SVInt64_t'
|-TypedefDecl 0x13800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f855e10 '__SVUint8_t'
|-TypedefDecl 0x13800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f855e30 '__SVUint16_t'
|-TypedefDecl 0x13800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f855e50 '__SVUint32_t'
|-TypedefDecl 0x13800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f855e70 '__SVUint64_t'
|-TypedefDecl 0x13800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f855e90 '__SVFloat16_t'
|-TypedefDecl 0x13800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f856390 '__SVBool_t'
|-TypedefDecl 0x13800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f8563f0 '__SVCount_t'
|-TypedefDecl 0x13800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-TypedefDecl 0x13800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-FunctionDecl 0x13800ddf8 <dataset_diviso_filec/func22920_vuln.c:1:1, line:54:1> line:1:12 invalid mongo_cursor_get_more 'int (int *)' static
| |-ParmVarDecl 0x13800dd28 <col:35, col:49> col:49 referenced invalid cursor 'int *'
| `-CompoundStmt 0x138029718 <col:58, line:54:1>
|   |-DeclStmt 0x13800df28 <line:2:5, col:12>
|   | `-VarDecl 0x13800dec0 <col:5, col:9> col:9 used res 'int'
|   `-IfStmt 0x1380296e8 <line:4:5, line:53:5> has_else
|     |-BinaryOperator 0x13800e0d8 <line:4:9, col:54> 'int' contains-errors '&&'
|     | |-BinaryOperator 0x13800dfc8 <col:9, col:25> 'int' contains-errors '>'
|     | | |-CXXDependentScopeMemberExpr 0x13800df60 <col:9, col:17> '<dependent type>' contains-errors lvalue ->limit
|     | | | `-RecoveryExpr 0x13800df40 <col:9> '<dependent type>' contains-errors lvalue
|     | | `-IntegerLiteral 0x13800dfa8 <col:25> 'int' 0
|     | `-BinaryOperator 0x13800e0b8 <col:30, col:54> 'int' contains-errors '>='
|     |   |-CXXDependentScopeMemberExpr 0x13800e008 <col:30, col:38> '<dependent type>' contains-errors lvalue ->seen
|     |   | `-RecoveryExpr 0x13800dfe8 <col:30> '<dependent type>' contains-errors lvalue
|     |   `-CXXDependentScopeMemberExpr 0x13800e070 <col:46, col:54> '<dependent type>' contains-errors lvalue ->limit
|     |     `-RecoveryExpr 0x13800e050 <col:46> '<dependent type>' contains-errors lvalue
|     |-CompoundStmt 0x13800e248 <col:62, line:7:5>
|     | |-BinaryOperator 0x13800e1e0 <line:5:9, col:23> '<dependent type>' contains-errors '='
|     | | |-CXXDependentScopeMemberExpr 0x13800e140 <col:9, col:17> '<dependent type>' contains-errors lvalue ->err
|     | | | `-RecoveryExpr 0x13800e118 <col:9> '<dependent type>' contains-errors lvalue
|     | | |   `-DeclRefExpr 0x13800e0f8 <col:9> 'int *' lvalue ParmVar 0x13800dd28 'cursor' 'int *'
|     | | `-RecoveryExpr 0x13800e1c0 <col:23> '<dependent type>' contains-errors lvalue
|     | `-ReturnStmt 0x13800e238 <line:6:9, col:16>
|     |   `-RecoveryExpr 0x13800e218 <col:16> '<dependent type>' contains-errors lvalue
|     `-IfStmt 0x1380296b8 <line:8:10, line:53:5> has_else
|       |-UnaryOperator 0x13800e2e8 <line:8:14, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x13800e2d0 <col:16, col:24> '<dependent type>' contains-errors <LValueToRValue>
|       |   `-CXXDependentScopeMemberExpr 0x13800e288 <col:16, col:24> '<dependent type>' contains-errors lvalue ->reply
|       |     `-RecoveryExpr 0x13800e268 <col:16> '<dependent type>' contains-errors lvalue
|       |-CompoundStmt 0x138027468 <col:32, line:11:5>
|       | |-BinaryOperator 0x138027400 <line:9:9, col:23> '<dependent type>' contains-errors '='
|       | | |-CXXDependentScopeMemberExpr 0x13800e348 <col:9, col:17> '<dependent type>' contains-errors lvalue ->err
|       | | | `-RecoveryExpr 0x13800e320 <col:9> '<dependent type>' contains-errors lvalue
|       | | |   `-DeclRefExpr 0x13800e300 <col:9> 'int *' lvalue ParmVar 0x13800dd28 'cursor' 'int *'
|       | | `-RecoveryExpr 0x13800e3c8 <col:23> '<dependent type>' contains-errors lvalue
|       | `-ReturnStmt 0x138027458 <line:10:9, col:16>
|       |   `-RecoveryExpr 0x138027438 <col:16> '<dependent type>' contains-errors lvalue
|       `-IfStmt 0x138029688 <line:12:10, line:53:5> has_else
|         |-UnaryOperator 0x138027598 <line:12:14, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
|         | `-ImplicitCastExpr 0x138027580 <col:16, col:38> '<dependent type>' contains-errors <LValueToRValue>
|         |   `-CXXDependentScopeMemberExpr 0x138027538 <col:16, col:38> '<dependent type>' contains-errors lvalue .cursorID
|         |     `-CXXDependentScopeMemberExpr 0x1380274f0 <col:16, col:31> '<dependent type>' contains-errors lvalue ->fields
|         |       `-CXXDependentScopeMemberExpr 0x1380274a8 <col:16, col:24> '<dependent type>' contains-errors lvalue ->reply
|         |         `-RecoveryExpr 0x138027488 <col:16> '<dependent type>' contains-errors lvalue
|         |-CompoundStmt 0x138027700 <col:49, line:15:5>
|         | |-BinaryOperator 0x138027698 <line:13:9, col:23> '<dependent type>' contains-errors '='
|         | | |-CXXDependentScopeMemberExpr 0x1380275f8 <col:9, col:17> '<dependent type>' contains-errors lvalue ->err
|         | | | `-RecoveryExpr 0x1380275d0 <col:9> '<dependent type>' contains-errors lvalue
|         | | |   `-DeclRefExpr 0x1380275b0 <col:9> 'int *' lvalue ParmVar 0x13800dd28 'cursor' 'int *'
|         | | `-RecoveryExpr 0x138027678 <col:23> '<dependent type>' contains-errors lvalue
|         | `-ReturnStmt 0x1380276f0 <line:14:9, col:16>
|         |   `-RecoveryExpr 0x1380276d0 <col:16> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x138029608 <line:16:10, line:53:5>
|           |-DeclStmt 0x1380277a0 <line:17:9, col:19>
|           | `-VarDecl 0x138027738 <col:9, col:15> col:15 used data 'char *'
|           |-DeclStmt 0x138027f18 <line:18:9, col:40>
|           | `-VarDecl 0x1380277d0 <col:9, col:39> col:13 used sl 'int' cinit
|           |   `-BinaryOperator 0x138027ef8 <col:18, col:39> '<dependent type>' contains-errors '+'
|           |     |-CallExpr 0x138027eb0 <col:18, col:37> '<dependent type>' contains-errors
|           |     | |-DeclRefExpr 0x138027e10 <col:18> 'unsigned long (const char *)' Function 0x138027ca0 'strlen' 'unsigned long (const char *)'
|           |     | `-CXXDependentScopeMemberExpr 0x138027e50 <col:26, col:34> '<dependent type>' contains-errors lvalue ->ns
|           |     |   `-RecoveryExpr 0x138027e30 <col:26> '<dependent type>' contains-errors lvalue
|           |     `-IntegerLiteral 0x138027ed8 <col:39> 'int' 1
|           |-DeclStmt 0x138027fd0 <line:19:9, col:22>
|           | `-VarDecl 0x138027f48 <col:9, col:21> col:13 used limit 'int' cinit
|           |   `-IntegerLiteral 0x138027fb0 <col:21> 'int' 0
|           |-IfStmt 0x1380281d8 <line:22:9, line:23:45>
|           | |-BinaryOperator 0x138028088 <line:22:13, col:29> 'int' contains-errors '>'
|           | | |-CXXDependentScopeMemberExpr 0x138028020 <col:13, col:21> '<dependent type>' contains-errors lvalue ->limit
|           | | | `-RecoveryExpr 0x138028000 <col:13> '<dependent type>' contains-errors lvalue
|           | | `-IntegerLiteral 0x138028068 <col:29> 'int' 0
|           | `-BinaryOperator 0x1380281b8 <line:23:13, col:45> 'int' contains-errors '='
|           |   |-DeclRefExpr 0x1380280a8 <col:13> 'int' lvalue Var 0x138027f48 'limit' 'int'
|           |   `-BinaryOperator 0x138028198 <col:21, col:45> '<dependent type>' contains-errors '-'
|           |     |-CXXDependentScopeMemberExpr 0x1380280e8 <col:21, col:29> '<dependent type>' contains-errors lvalue ->limit
|           |     | `-RecoveryExpr 0x1380280c8 <col:21> '<dependent type>' contains-errors lvalue
|           |     `-CXXDependentScopeMemberExpr 0x138028150 <col:37, col:45> '<dependent type>' contains-errors lvalue ->seen
|           |       `-RecoveryExpr 0x138028130 <col:37> '<dependent type>' contains-errors lvalue
|           |-BinaryOperator 0x139008f00 <line:31:9, col:21> 'char *' contains-errors '='
|           | |-DeclRefExpr 0x139008dc8 <col:9> 'char *' lvalue Var 0x138027738 'data' 'char *'
|           | `-UnaryOperator 0x139008ee8 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |   `-CXXDependentScopeMemberExpr 0x139008ea0 <col:17, col:21> '<dependent type>' contains-errors lvalue ->data
|           |     `-RecoveryExpr 0x139008e80 <col:17> '<dependent type>' contains-errors lvalue
|           |-BinaryOperator 0x139009148 <line:32:9, col:49> 'char *' contains-errors '='
|           | |-DeclRefExpr 0x139008f20 <col:9> 'char *' lvalue Var 0x138027738 'data' 'char *'
|           | `-CallExpr 0x139009118 <col:16, col:49> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x139009020 <col:16> 'int ()' Function 0x139008f68 'mongo_data_append32' 'int ()'
|           |   |-DeclRefExpr 0x139009040 <col:37> 'char *' lvalue Var 0x138027738 'data' 'char *'
|           |   `-UnaryOperator 0x139009100 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |     `-RecoveryExpr 0x1390090e0 <col:44> '<dependent type>' contains-errors lvalue
|           |-BinaryOperator 0x139009368 <line:33:9, col:56> 'char *' contains-errors '='
|           | |-DeclRefExpr 0x139009168 <col:9> 'char *' lvalue Var 0x138027738 'data' 'char *'
|           | `-CallExpr 0x139009330 <col:16, col:56> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x139009268 <col:16> 'int ()' Function 0x1390091b0 'mongo_data_append' 'int ()'
|           |   |-DeclRefExpr 0x139009288 <col:35> 'char *' lvalue Var 0x138027738 'data' 'char *'
|           |   |-CXXDependentScopeMemberExpr 0x1390092c8 <col:41, col:49> '<dependent type>' contains-errors lvalue ->ns
|           |   | `-RecoveryExpr 0x1390092a8 <col:41> '<dependent type>' contains-errors lvalue
|           |   `-DeclRefExpr 0x139009310 <col:53> 'int' contains-errors lvalue Var 0x1380277d0 'sl' 'int'
|           |-BinaryOperator 0x1390094c8 <line:34:9, col:50> 'char *' '='
|           | |-DeclRefExpr 0x139009388 <col:9> 'char *' lvalue Var 0x138027738 'data' 'char *'
|           | `-ImplicitCastExpr 0x1390094b0 <col:16, col:50> 'char *' <IntegralToPointer>
|           |   `-CallExpr 0x139009468 <col:16, col:50> 'int'
|           |     |-ImplicitCastExpr 0x139009450 <col:16> 'int (*)()' <FunctionToPointerDecay>
|           |     | `-DeclRefExpr 0x1390093a8 <col:16> 'int ()' Function 0x139008f68 'mongo_data_append32' 'int ()'
|           |     |-ImplicitCastExpr 0x139009498 <col:37> 'char *' <LValueToRValue>
|           |     | `-DeclRefExpr 0x1390093c8 <col:37> 'char *' lvalue Var 0x138027738 'data' 'char *'
|           |     `-UnaryOperator 0x139009408 <col:43, col:44> 'int *' prefix '&' cannot overflow
|           |       `-DeclRefExpr 0x1390093e8 <col:44> 'int' lvalue Var 0x138027f48 'limit' 'int'
|           |-CallExpr 0x139009718 <line:35:9, col:68> '<dependent type>' contains-errors
|           | |-DeclRefExpr 0x1390095c8 <col:9> 'int ()' Function 0x139009510 'mongo_data_append64' 'int ()'
|           | |-DeclRefExpr 0x1390095e8 <col:30> 'char *' lvalue Var 0x138027738 'data' 'char *'
|           | `-UnaryOperator 0x139009700 <col:36, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |   `-CXXDependentScopeMemberExpr 0x1390096b8 <col:37, col:59> '<dependent type>' contains-errors lvalue .cursorID
|           |     `-CXXDependentScopeMemberExpr 0x139009670 <col:37, col:52> '<dependent type>' contains-errors lvalue ->fields
|           |       `-CXXDependentScopeMemberExpr 0x139009628 <col:37, col:45> '<dependent type>' contains-errors lvalue ->reply
|           |         `-RecoveryExpr 0x139009608 <col:37> '<dependent type>' contains-errors lvalue
|           |-CallExpr 0x1390098b0 <line:37:9, col:34> '<dependent type>' contains-errors
|           | |-DeclRefExpr 0x139009828 <col:9> 'int ()' Function 0x139009770 'bson_free' 'int ()'
|           | `-CXXDependentScopeMemberExpr 0x139009868 <col:20, col:28> '<dependent type>' contains-errors lvalue ->reply
|           |   `-RecoveryExpr 0x139009848 <col:20> '<dependent type>' contains-errors lvalue
|           |-IfStmt 0x138029000 <line:39:9, line:42:9>
|           | |-RecoveryExpr 0x139009a80 <line:39:13, col:20> '_Bool' contains-errors
|           | `-CompoundStmt 0x139009be8 <col:31, line:42:9>
|           |   `-CallExpr 0x139009bc0 <line:40:13, col:42> '<dependent type>' contains-errors
|           |     |-DeclRefExpr 0x139009b80 <col:13> 'int ()' Function 0x139009ac8 'mongo_cursor_destroy' 'int ()'
|           |     `-RecoveryExpr 0x139009ba0 <col:35> '<dependent type>' contains-errors lvalue
|           |-BinaryOperator 0x138029278 <line:44:9, col:69> 'int' contains-errors '='
|           | |-DeclRefExpr 0x138029020 <col:9> 'int' lvalue Var 0x13800dec0 'res' 'int'
|           | `-CallExpr 0x138029248 <col:15, col:69> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x138029120 <col:15> 'int ()' Function 0x138029068 'mongo_read_response' 'int ()'
|           |   |-CXXDependentScopeMemberExpr 0x138029160 <col:36, col:44> '<dependent type>' contains-errors lvalue ->conn
|           |   | `-RecoveryExpr 0x138029140 <col:36> '<dependent type>' contains-errors lvalue
|           |   `-UnaryOperator 0x138029230 <col:50, col:67> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |     `-ParenExpr 0x138029210 <col:51, col:67> '<dependent type>' contains-errors lvalue
|           |       `-CXXDependentScopeMemberExpr 0x1380291c8 <col:53, col:61> '<dependent type>' contains-errors lvalue ->reply
|           |         `-RecoveryExpr 0x1380291a8 <col:53> '<dependent type>' contains-errors lvalue
|           |-IfStmt 0x138029358 <line:45:9, line:48:9>
|           | |-RecoveryExpr 0x1380292b8 <line:45:13, col:20> '_Bool' contains-errors
|           | `-CompoundStmt 0x138029340 <col:31, line:48:9>
|           |   `-CallExpr 0x138029318 <line:46:13, col:42> '<dependent type>' contains-errors
|           |     |-DeclRefExpr 0x1380292d8 <col:13> 'int ()' Function 0x139009ac8 'mongo_cursor_destroy' 'int ()'
|           |     `-RecoveryExpr 0x1380292f8 <col:35> '<dependent type>' contains-errors lvalue
|           `-CompoundAssignOperator 0x1380295d8 <line:50:9, col:47> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|             |-CXXDependentScopeMemberExpr 0x138029498 <col:9, col:17> '<dependent type>' contains-errors lvalue ->seen
|             | `-RecoveryExpr 0x138029470 <col:9> '<dependent type>' contains-errors lvalue
|             |   `-DeclRefExpr 0x138029450 <col:9> 'int *' lvalue ParmVar 0x13800dd28 'cursor' 'int *'
|             `-CXXDependentScopeMemberExpr 0x138029590 <col:25, col:47> '<dependent type>' contains-errors lvalue .num
|               `-CXXDependentScopeMemberExpr 0x138029548 <col:25, col:40> '<dependent type>' contains-errors lvalue ->fields
|                 `-CXXDependentScopeMemberExpr 0x138029500 <col:25, col:33> '<dependent type>' contains-errors lvalue ->reply
|                   `-RecoveryExpr 0x1380294e0 <col:25> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x138027ca0 <line:18:18> col:18 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x138027da0 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x138027d48 <<invalid sloc>> Implicit 902
