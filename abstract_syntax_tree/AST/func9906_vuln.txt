TranslationUnitDecl 0x12f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f055bd0 '__int128'
|-TypedefDecl 0x12f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f055bf0 'unsigned __int128'
|-TypedefDecl 0x12f80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12f056580 '__NSConstantString_tag'
|-TypedefDecl 0x12f80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f055d90 '__SVInt8_t'
|-TypedefDecl 0x12f80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f055db0 '__SVInt16_t'
|-TypedefDecl 0x12f80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f055dd0 '__SVInt32_t'
|-TypedefDecl 0x12f80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f055df0 '__SVInt64_t'
|-TypedefDecl 0x12f80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f055e10 '__SVUint8_t'
|-TypedefDecl 0x12f80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f055e30 '__SVUint16_t'
|-TypedefDecl 0x12f80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f055e50 '__SVUint32_t'
|-TypedefDecl 0x12f80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f055e70 '__SVUint64_t'
|-TypedefDecl 0x12f80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f055e90 '__SVFloat16_t'
|-TypedefDecl 0x12f80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12f80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12f80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f056390 '__SVBool_t'
|-TypedefDecl 0x12f80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f0563f0 '__SVCount_t'
|-TypedefDecl 0x12f80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f80dbb0 'char *'
|   `-BuiltinType 0x12f0556b0 'char'
|-TypedefDecl 0x12f80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f80dbb0 'char *'
|   `-BuiltinType 0x12f0556b0 'char'
|-FunctionDecl 0x12f80de58 <dataset_diviso_filec/func9906_vuln.c:1:1, line:25:1> line:1:1 invalid rb_push_glob 'int (int, int)'
| |-ParmVarDecl 0x12f80dcf0 <col:14, col:20> col:20 invalid str 'int'
| |-ParmVarDecl 0x12f80dd70 <col:25, col:29> col:29 used flags 'int'
| `-CompoundStmt 0x12f123db0 <line:2:1, line:25:1>
|   |-DeclStmt 0x12f80dfc8 <line:3:5, col:20>
|   | `-VarDecl 0x12f80df28 <col:5, col:19> col:10 used offset 'long' cinit
|   |   `-ImplicitCastExpr 0x12f80dfb0 <col:19> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x12f80df90 <col:19> 'int' 0
|   |-CallExpr 0x12f80e1e8 <line:6:5, col:28> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12f80e140 <col:5> 'int ()' Function 0x12f80e088 'GlobPathValue' 'int ()'
|   | |-RecoveryExpr 0x12f80e160 <col:19> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12f80e1c8 <col:24> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x12f123d48 <line:9:5, line:22:5>
|   | |-BinaryOperator 0x138009d20 <line:9:12, col:36> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x12f80e388 <col:12> 'long' lvalue Var 0x12f80df28 'offset' 'long'
|   | | `-CallExpr 0x138009cf8 <col:21, col:36> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x138009cb8 <col:21> 'int ()' Function 0x138009c00 'RSTRING_LEN' 'int ()'
|   | |   `-RecoveryExpr 0x138009cd8 <col:33> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12f123ce8 <col:39, line:22:5>
|   |   |-DeclStmt 0x138009e58 <line:10:2, col:16>
|   |   | |-VarDecl 0x138009d58 <col:2, col:8> col:8 used p 'char *'
|   |   | `-VarDecl 0x138009dd8 <col:2, col:12> col:12 used pend 'char *'
|   |   |-DeclStmt 0x138009ef0 <line:11:2, col:12>
|   |   | `-VarDecl 0x138009e88 <col:2, col:6> col:6 used status 'int'
|   |   |-BinaryOperator 0x13800a0b0 <line:12:2, col:25> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x138009f08 <col:2> 'char *' lvalue Var 0x138009d58 'p' 'char *'
|   |   | `-BinaryOperator 0x13800a090 <col:6, col:25> '<dependent type>' contains-errors '+'
|   |   |   |-CallExpr 0x13800a048 <col:6, col:21> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x13800a008 <col:6> 'int ()' Function 0x138009f50 'RSTRING_PTR' 'int ()'
|   |   |   | `-RecoveryExpr 0x13800a028 <col:18> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x13800a070 <col:25> 'long' lvalue Var 0x12f80df28 'offset' 'long'
|   |   |-BinaryOperator 0x12f123518 <line:13:2, line:14:12> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x13800a0d0 <line:13:2> 'int' lvalue Var 0x138009e88 'status' 'int'
|   |   | `-CallExpr 0x12f1234e0 <col:11, line:14:12> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13800a1d0 <line:13:11> 'int ()' Function 0x13800a118 'push_glob' 'int ()'
|   |   |   |-RecoveryExpr 0x12f123400 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   |-CallExpr 0x12f1234a8 <col:26, col:70> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x13800a2e8 <col:26> 'int ()' Function 0x13800a230 'rb_enc_str_new' 'int ()'
|   |   |   | |-DeclRefExpr 0x13800a308 <col:41> 'char *' lvalue Var 0x138009d58 'p' 'char *'
|   |   |   | |-CallExpr 0x12f123450 <col:44, col:52> 'unsigned long'
|   |   |   | | |-ImplicitCastExpr 0x12f123438 <col:44> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x13800a900 <col:44> 'unsigned long (const char *)' Function 0x13800a790 'strlen' 'unsigned long (const char *)'
|   |   |   | | `-ImplicitCastExpr 0x12f123490 <col:51> 'const char *' <NoOp>
|   |   |   | |   `-ImplicitCastExpr 0x12f123478 <col:51> 'char *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x13800a920 <col:51> 'char *' lvalue Var 0x138009d58 'p' 'char *'
|   |   |   | `-CallExpr 0x13800ab20 <col:55, col:69> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x13800aae0 <col:55> 'int ()' Function 0x13800aa28 'rb_enc_get' 'int ()'
|   |   |   |   `-RecoveryExpr 0x13800ab00 <col:66> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x13800ab80 <line:14:7> 'int' lvalue ParmVar 0x12f80dd70 'flags' 'int'
|   |   |-IfStmt 0x12f1236e8 <line:15:2, col:34>
|   |   | |-ImplicitCastExpr 0x12f123558 <col:6> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12f123538 <col:6> 'int' lvalue Var 0x138009e88 'status' 'int'
|   |   | `-CallExpr 0x12f1236a8 <col:14, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x12f123690 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12f123650 <col:14> 'int ()' Function 0x12f123598 'GLOB_JUMP_TAG' 'int ()'
|   |   |   `-ImplicitCastExpr 0x12f1236d0 <col:28> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12f123670 <col:28> 'int' lvalue Var 0x138009e88 'status' 'int'
|   |   |-IfStmt 0x12f1237b8 <line:16:2, col:34>
|   |   | |-BinaryOperator 0x12f123790 <col:6, col:31> 'int' contains-errors '>='
|   |   | | |-DeclRefExpr 0x12f123708 <col:6> 'long' lvalue Var 0x12f80df28 'offset' 'long'
|   |   | | `-CallExpr 0x12f123768 <col:16, col:31> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x12f123728 <col:16> 'int ()' Function 0x138009c00 'RSTRING_LEN' 'int ()'
|   |   | |   `-RecoveryExpr 0x12f123748 <col:28> '<dependent type>' contains-errors lvalue
|   |   | `-BreakStmt 0x12f1237b0 <col:34>
|   |   |-CompoundAssignOperator 0x12f123918 <line:17:2, col:19> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x12f1237d8 <col:2> 'char *' lvalue Var 0x138009d58 'p' 'char *'
|   |   | `-BinaryOperator 0x12f1238f8 <col:7, col:19> 'unsigned long' '+'
|   |   |   |-CallExpr 0x12f123868 <col:7, col:15> 'unsigned long'
|   |   |   | |-ImplicitCastExpr 0x12f123850 <col:7> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12f1237f8 <col:7> 'unsigned long (const char *)' Function 0x13800a790 'strlen' 'unsigned long (const char *)'
|   |   |   | `-ImplicitCastExpr 0x12f1238a8 <col:14> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x12f123890 <col:14> 'char *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12f123818 <col:14> 'char *' lvalue Var 0x138009d58 'p' 'char *'
|   |   |   `-ImplicitCastExpr 0x12f1238e0 <col:19> 'unsigned long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x12f1238c0 <col:19> 'int' 1
|   |   |-BinaryOperator 0x12f123a58 <line:18:2, col:43> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x12f123948 <col:2> 'char *' lvalue Var 0x138009dd8 'pend' 'char *'
|   |   | `-BinaryOperator 0x12f123a38 <col:9, col:43> '<dependent type>' contains-errors '+'
|   |   |   |-CallExpr 0x12f1239a8 <col:9, col:24> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x12f123968 <col:9> 'int ()' Function 0x138009f50 'RSTRING_PTR' 'int ()'
|   |   |   | `-RecoveryExpr 0x12f123988 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   `-CallExpr 0x12f123a10 <col:28, col:43> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12f1239d0 <col:28> 'int ()' Function 0x138009c00 'RSTRING_LEN' 'int ()'
|   |   |     `-RecoveryExpr 0x12f1239f0 <col:40> '<dependent type>' contains-errors lvalue
|   |   |-WhileStmt 0x12f123be0 <line:19:2, line:20:7>
|   |   | |-BinaryOperator 0x12f123b88 <line:19:9, col:23> 'int' '&&'
|   |   | | |-BinaryOperator 0x12f123ae8 <col:9, col:13> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x12f123ab8 <col:9> 'char *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x12f123a78 <col:9> 'char *' lvalue Var 0x138009d58 'p' 'char *'
|   |   | | | `-ImplicitCastExpr 0x12f123ad0 <col:13> 'char *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x12f123a98 <col:13> 'char *' lvalue Var 0x138009dd8 'pend' 'char *'
|   |   | | `-UnaryOperator 0x12f123b70 <col:21, col:23> 'int' prefix '!' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x12f123b58 <col:22, col:23> 'char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x12f123b40 <col:22, col:23> 'char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x12f123b28 <col:23> 'char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x12f123b08 <col:23> 'char *' lvalue Var 0x138009d58 'p' 'char *'
|   |   | `-UnaryOperator 0x12f123bc8 <line:20:6, col:7> 'char *' postfix '++'
|   |   |   `-DeclRefExpr 0x12f123ba8 <col:6> 'char *' lvalue Var 0x138009d58 'p' 'char *'
|   |   `-BinaryOperator 0x12f123cc8 <line:21:2, col:30> 'long' contains-errors '='
|   |     |-DeclRefExpr 0x12f123c00 <col:2> 'long' lvalue Var 0x12f80df28 'offset' 'long'
|   |     `-BinaryOperator 0x12f123ca8 <col:11, col:30> '<dependent type>' contains-errors '-'
|   |       |-DeclRefExpr 0x12f123c20 <col:11> 'char *' lvalue Var 0x138009d58 'p' 'char *'
|   |       `-CallExpr 0x12f123c80 <col:15, col:30> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x12f123c40 <col:15> 'int ()' Function 0x138009f50 'RSTRING_PTR' 'int ()'
|   |         `-RecoveryExpr 0x12f123c60 <col:27> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12f123da0 <line:24:5, col:12>
|     `-RecoveryExpr 0x12f123d80 <col:12> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13800a790 <line:13:44> col:44 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13800a890 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13800a838 <<invalid sloc>> Implicit 902
