TranslationUnitDecl 0x147855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1478564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147855bd0 '__int128'
|-TypedefDecl 0x147856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147855bf0 'unsigned __int128'
|-TypedefDecl 0x147926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x147926000 'struct __NSConstantString_tag'
|   `-Record 0x147856580 '__NSConstantString_tag'
|-TypedefDecl 0x147926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147855d90 '__SVInt8_t'
|-TypedefDecl 0x147926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147855db0 '__SVInt16_t'
|-TypedefDecl 0x147926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147855dd0 '__SVInt32_t'
|-TypedefDecl 0x1479263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147855df0 '__SVInt64_t'
|-TypedefDecl 0x147926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147855e10 '__SVUint8_t'
|-TypedefDecl 0x1479264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147855e30 '__SVUint16_t'
|-TypedefDecl 0x147926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147855e50 '__SVUint32_t'
|-TypedefDecl 0x147926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147855e70 '__SVUint64_t'
|-TypedefDecl 0x1479265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147855e90 '__SVFloat16_t'
|-TypedefDecl 0x147926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1479266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147855ed0 '__SVFloat64_t'
|-TypedefDecl 0x147926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x147926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1479267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x147926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1479268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x147926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x147926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1479269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x147926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x147926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x147926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x147926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x147926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x147926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147856090 '__clang_svint8x3_t'
|-TypedefDecl 0x147926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1478560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x147926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1478560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x147926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1478560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x147926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x147926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x147926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x147926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x147926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x147927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1478561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x147927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1478561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1479278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1478561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x147927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1479279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147856230 '__clang_svint16x4_t'
|-TypedefDecl 0x147927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147856250 '__clang_svint32x4_t'
|-TypedefDecl 0x147927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147856270 '__clang_svint64x4_t'
|-TypedefDecl 0x147927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x147927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1478562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x147927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1478562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x147927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1478562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x147927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x147927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x147927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x147927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x147927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147856390 '__SVBool_t'
|-TypedefDecl 0x147927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1478563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x147927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1478563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x147927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1478563f0 '__SVCount_t'
|-TypedefDecl 0x147927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x147927fb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-TypedefDecl 0x147928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x147927fb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-FunctionDecl 0x147928348 <dataset_diviso_filec/func3656_vuln.c:1:1, line:41:1> line:1:1 referenced invalid XSetFontPath 'int (int *, char **, int)'
| |-ParmVarDecl 0x147928128 <line:2:5, col:23> col:23 invalid dpy 'int *' register
| |-ParmVarDecl 0x1479281d8 <line:3:5, col:12> col:12 used directories 'char **'
| |-ParmVarDecl 0x147928258 <line:4:5, col:9> col:9 used ndirs 'int'
| `-CompoundStmt 0x15000abc8 <line:5:1, line:41:1>
|   |-DeclStmt 0x1479284a8 <line:6:2, col:20>
|   | `-VarDecl 0x147928420 <col:2, col:19> col:15 used n 'int' register cinit
|   |   `-IntegerLiteral 0x147928488 <col:19> 'int' 0
|   |-DeclStmt 0x147928540 <line:7:2, col:16>
|   | `-VarDecl 0x1479284d8 <col:2, col:15> col:15 used i 'int' register
|   |-DeclStmt 0x1479285d8 <line:8:2, col:21>
|   | `-VarDecl 0x147928570 <col:2, col:15> col:15 used nbytes 'int' register
|   |-DeclStmt 0x147928670 <line:9:2, col:9>
|   | `-VarDecl 0x147928608 <col:2, col:8> col:8 used p 'char *'
|   |-DeclStmt 0x147928708 <line:10:2, col:31>
|   | `-VarDecl 0x1479286a0 <col:2, col:28> col:28 referenced invalid req 'int *' register
|   |-DeclStmt 0x1479287a0 <line:11:2, col:13>
|   | `-VarDecl 0x147928738 <col:2, col:6> col:6 used retCode 'int'
|   |-CallExpr 0x147941950 <line:13:9, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x147941910 <col:9> 'int ()' Function 0x147941858 'LockDisplay' 'int ()'
|   | `-RecoveryExpr 0x147941930 <col:21> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x147941b20 <line:14:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x147941a58 <col:2> 'int ()' Function 0x1479419a0 'GetReq' 'int ()'
|   | |-RecoveryExpr 0x147941b00 <col:10> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x147941a90 <col:23> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x147941c00 <line:15:2, col:16> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x147941b98 <col:2, col:7> '<dependent type>' contains-errors lvalue ->nFonts
|   | | `-RecoveryExpr 0x147941b70 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x147941b50 <col:2> 'int *' lvalue Var 0x1479286a0 'req' 'int *'
|   | `-DeclRefExpr 0x147941be0 <col:16> 'int' lvalue ParmVar 0x147928258 'ndirs' 'int'
|   |-ForStmt 0x1479422c0 <line:16:2, line:18:2>
|   | |-BinaryOperator 0x147941c60 <line:16:7, col:11> 'int' '='
|   | | |-DeclRefExpr 0x147941c20 <col:7> 'int' lvalue Var 0x1479284d8 'i' 'int'
|   | | `-IntegerLiteral 0x147941c40 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x147941cf0 <col:14, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x147941cc0 <col:14> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x147941c80 <col:14> 'int' lvalue Var 0x1479284d8 'i' 'int'
|   | | `-ImplicitCastExpr 0x147941cd8 <col:18> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x147941ca0 <col:18> 'int' lvalue ParmVar 0x147928258 'ndirs' 'int'
|   | |-UnaryOperator 0x147941d30 <col:25, col:26> 'int' postfix '++'
|   | | `-DeclRefExpr 0x147941d10 <col:25> 'int' lvalue Var 0x1479284d8 'i' 'int'
|   | `-CompoundStmt 0x1479422a8 <col:30, line:18:2>
|   |   `-BinaryOperator 0x147942288 <line:17:3, col:23> 'int' '='
|   |     |-DeclRefExpr 0x147941d48 <col:3> 'int' lvalue Var 0x147928420 'n' 'int'
|   |     `-CStyleCastExpr 0x147942260 <col:7, col:23> 'int' <Dependent>
|   |       `-ParenExpr 0x147941e18 <col:13, col:23> '<overloaded function type>' lvalue
|   |         `-ParenExpr 0x147941dc0 <col:14, col:21> '<overloaded function type>' lvalue
|   |           `-UnresolvedLookupExpr 0x147941d80 <col:15> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
|   |-BinaryOperator 0x147942408 <line:19:2, col:22> 'int' '='
|   | |-DeclRefExpr 0x1479422f8 <col:2> 'int' lvalue Var 0x147928570 'nbytes' 'int'
|   | `-BinaryOperator 0x1479423e8 <col:11, col:22> 'int' '&'
|   |   |-ParenExpr 0x147942390 <col:11, col:17> 'int'
|   |   | `-BinaryOperator 0x147942370 <col:12, col:16> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x147942358 <col:12> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x147942318 <col:12> 'int' lvalue Var 0x147928420 'n' 'int'
|   |   |   `-IntegerLiteral 0x147942338 <col:16> 'int' 3
|   |   `-UnaryOperator 0x1479423d0 <col:21, col:22> 'int' prefix '~' cannot overflow
|   |     `-IntegerLiteral 0x1479423b0 <col:22> 'int' 3
|   |-CompoundAssignOperator 0x147942530 <line:20:2, col:27> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x147942470 <col:2, col:7> '<dependent type>' contains-errors lvalue ->length
|   | | `-RecoveryExpr 0x147942448 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x147942428 <col:2> 'int *' lvalue Var 0x1479286a0 'req' 'int *'
|   | `-BinaryOperator 0x147942510 <col:17, col:27> 'int' '>>'
|   |   |-ImplicitCastExpr 0x1479424f8 <col:17> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1479424b8 <col:17> 'int' lvalue Var 0x147928570 'nbytes' 'int'
|   |   `-IntegerLiteral 0x1479424d8 <col:27> 'int' 2
|   |-IfStmt 0x15000a898 <line:21:2, line:36:13> has_else
|   | |-ParenExpr 0x147942760 <line:21:6, col:27> 'char *'
|   | | `-BinaryOperator 0x147942740 <col:7, col:26> 'char *' '='
|   | |   |-DeclRefExpr 0x147942560 <col:7> 'char *' lvalue Var 0x147928608 'p' 'char *'
|   | |   `-ImplicitCastExpr 0x147942728 <col:11, col:26> 'char *' <IntegralToPointer>
|   | |     `-CallExpr 0x1479426e8 <col:11, col:26> 'int'
|   | |       |-ImplicitCastExpr 0x1479426d0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x147942660 <col:11> 'int ()' Function 0x1479425a8 'Xmalloc' 'int ()'
|   | |       `-ImplicitCastExpr 0x147942710 <col:20> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x147942680 <col:20> 'int' lvalue Var 0x147928570 'nbytes' 'int'
|   | |-CompoundStmt 0x15000a800 <col:30, line:34:2>
|   | | |-DeclStmt 0x150009a38 <line:23:3, col:16>
|   | | | `-VarDecl 0x147942798 <col:3, col:15> col:9 used tmp 'char *' cinit
|   | | |   `-ImplicitCastExpr 0x150009a20 <col:15> 'char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x150009a00 <col:15> 'char *' lvalue Var 0x147928608 'p' 'char *'
|   | | |-ForStmt 0x15000a458 <line:25:3, line:30:3>
|   | | | |-BinaryOperator 0x150009a90 <line:25:8, col:12> 'int' '='
|   | | | | |-DeclRefExpr 0x150009a50 <col:8> 'int' lvalue Var 0x1479284d8 'i' 'int'
|   | | | | `-IntegerLiteral 0x150009a70 <col:12> 'int' 0
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x150009b20 <col:15, col:19> 'int' '<'
|   | | | | |-ImplicitCastExpr 0x150009af0 <col:15> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x150009ab0 <col:15> 'int' lvalue Var 0x1479284d8 'i' 'int'
|   | | | | `-ImplicitCastExpr 0x150009b08 <col:19> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x150009ad0 <col:19> 'int' lvalue ParmVar 0x147928258 'ndirs' 'int'
|   | | | |-UnaryOperator 0x150009b60 <col:26, col:27> 'int' postfix '++'
|   | | | | `-DeclRefExpr 0x150009b40 <col:26> 'int' lvalue Var 0x1479284d8 'i' 'int'
|   | | | `-CompoundStmt 0x15000a430 <col:31, line:30:3>
|   | | |   |-DeclStmt 0x150009e20 <line:26:4, col:59>
|   | | |   | `-VarDecl 0x150009b90 <col:4, col:58> col:17 used length 'int' register cinit
|   | | |   |   `-CStyleCastExpr 0x150009df8 <col:26, col:58> 'int' <NoOp>
|   | | |   |     `-CallExpr 0x150009da0 <col:32, col:58> 'int'
|   | | |   |       |-ImplicitCastExpr 0x150009d88 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |       | `-DeclRefExpr 0x150009cd8 <col:32> 'int ()' Function 0x150009c20 'safestrlen' 'int ()'
|   | | |   |       `-ImplicitCastExpr 0x150009dc8 <col:44, col:57> 'char *' <LValueToRValue>
|   | | |   |         `-ArraySubscriptExpr 0x150009d68 <col:44, col:57> 'char *' lvalue
|   | | |   |           |-ImplicitCastExpr 0x150009d38 <col:44> 'char **' <LValueToRValue>
|   | | |   |           | `-DeclRefExpr 0x150009cf8 <col:44> 'char **' lvalue ParmVar 0x1479281d8 'directories' 'char **'
|   | | |   |           `-ImplicitCastExpr 0x150009d50 <col:56> 'int' <LValueToRValue>
|   | | |   |             `-DeclRefExpr 0x150009d18 <col:56> 'int' lvalue Var 0x1479284d8 'i' 'int'
|   | | |   |-BinaryOperator 0x150009ed8 <line:27:4, col:9> 'char' '='
|   | | |   | |-UnaryOperator 0x150009e70 <col:4, col:5> 'char' lvalue prefix '*' cannot overflow
|   | | |   | | `-ImplicitCastExpr 0x150009e58 <col:5> 'char *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x150009e38 <col:5> 'char *' lvalue Var 0x147928608 'p' 'char *'
|   | | |   | `-ImplicitCastExpr 0x150009ec0 <col:9> 'char' <IntegralCast>
|   | | |   |   `-ImplicitCastExpr 0x150009ea8 <col:9> 'int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x150009e88 <col:9> 'int' lvalue Var 0x150009b90 'length' 'int'
|   | | |   `-CompoundAssignOperator 0x15000a400 <line:29:4, col:18> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | | |     |-DeclRefExpr 0x15000a368 <col:4> 'char *' lvalue Var 0x147928608 'p' 'char *'
|   | | |     `-BinaryOperator 0x15000a3e0 <col:9, col:18> 'int' '+'
|   | | |       |-ImplicitCastExpr 0x15000a3c8 <col:9> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x15000a388 <col:9> 'int' lvalue Var 0x150009b90 'length' 'int'
|   | | |       `-IntegerLiteral 0x15000a3a8 <col:18> 'int' 1
|   | | |-CallExpr 0x15000a5f0 <line:31:3, col:25> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x15000a570 <col:3> 'int ()' Function 0x15000a4b8 'Data' 'int ()'
|   | | | |-RecoveryExpr 0x15000a590 <col:9> '<dependent type>' contains-errors lvalue
|   | | | |-DeclRefExpr 0x15000a5b0 <col:14> 'char *' lvalue Var 0x147942798 'tmp' 'char *'
|   | | | `-DeclRefExpr 0x15000a5d0 <col:19> 'int' lvalue Var 0x147928570 'nbytes' 'int'
|   | | |-CallExpr 0x15000a760 <line:32:3, col:13> 'int'
|   | | | |-ImplicitCastExpr 0x15000a748 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x15000a708 <col:3> 'int ()' Function 0x15000a650 'Xfree' 'int ()'
|   | | | `-ImplicitCastExpr 0x15000a788 <col:10> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x15000a728 <col:10> 'char *' lvalue Var 0x147942798 'tmp' 'char *'
|   | | `-BinaryOperator 0x15000a7e0 <line:33:3, col:13> 'int' '='
|   | |   |-DeclRefExpr 0x15000a7a0 <col:3> 'int' lvalue Var 0x147928738 'retCode' 'int'
|   | |   `-IntegerLiteral 0x15000a7c0 <col:13> 'int' 1
|   | `-BinaryOperator 0x15000a878 <line:36:3, col:13> 'int' '='
|   |   |-DeclRefExpr 0x15000a838 <col:3> 'int' lvalue Var 0x147928738 'retCode' 'int'
|   |   `-IntegerLiteral 0x15000a858 <col:13> 'int' 0
|   |-CallExpr 0x15000aa00 <line:38:9, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15000a9a8 <col:9> 'int ()' Function 0x15000a8f0 'UnlockDisplay' 'int ()'
|   | `-RecoveryExpr 0x15000a9c8 <col:23> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x15000ab40 <line:39:2, col:13> 'int'
|   | `-ImplicitCastExpr 0x15000ab28 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x15000ab08 <col:2> 'int ()' Function 0x15000aa50 'SyncHandle' 'int ()'
|   `-ReturnStmt 0x15000abb8 <line:40:2, col:17>
|     `-ImplicitCastExpr 0x15000aba0 <col:9, col:17> 'int' <LValueToRValue>
|       `-ParenExpr 0x15000ab80 <col:9, col:17> 'int' lvalue
|         `-DeclRefExpr 0x15000ab60 <col:10> 'int' lvalue Var 0x147928738 'retCode' 'int'
`-FunctionDecl 0x150009f78 <line:28:4> col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x15000a078 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x15000a0e0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x15000a148 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15000a020 <<invalid sloc>> Implicit 882
