TranslationUnitDecl 0x130855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1308564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130855bd0 '__int128'
|-TypedefDecl 0x130856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130855bf0 'unsigned __int128'
|-TypedefDecl 0x130926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130926000 'struct __NSConstantString_tag'
|   `-Record 0x130856580 '__NSConstantString_tag'
|-TypedefDecl 0x130926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130855d90 '__SVInt8_t'
|-TypedefDecl 0x130926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130855db0 '__SVInt16_t'
|-TypedefDecl 0x130926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130855dd0 '__SVInt32_t'
|-TypedefDecl 0x1309263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130855df0 '__SVInt64_t'
|-TypedefDecl 0x130926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130855e10 '__SVUint8_t'
|-TypedefDecl 0x1309264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130855e30 '__SVUint16_t'
|-TypedefDecl 0x130926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130855e50 '__SVUint32_t'
|-TypedefDecl 0x130926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130855e70 '__SVUint64_t'
|-TypedefDecl 0x1309265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130855e90 '__SVFloat16_t'
|-TypedefDecl 0x130926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1309266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130855ed0 '__SVFloat64_t'
|-TypedefDecl 0x130926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x130926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1309267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x130926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1309268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x130926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x130926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1309269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x130926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x130926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130856090 '__clang_svint8x3_t'
|-TypedefDecl 0x130926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1308560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x130926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1308560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x130926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1308560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x130926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x130926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x130926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x130926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x130926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x130927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1308561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x130927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1308561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1309278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1308561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x130927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1309279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130856230 '__clang_svint16x4_t'
|-TypedefDecl 0x130927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130856250 '__clang_svint32x4_t'
|-TypedefDecl 0x130927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130856270 '__clang_svint64x4_t'
|-TypedefDecl 0x130927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x130927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1308562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x130927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1308562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x130927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1308562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x130927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x130927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x130927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x130927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x130927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130856390 '__SVBool_t'
|-TypedefDecl 0x130927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1308563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x130927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1308563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x130927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1308563f0 '__SVCount_t'
|-TypedefDecl 0x130927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x130927fb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-TypedefDecl 0x130928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x130927fb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
`-FunctionDecl 0x1309284a8 <dataset_diviso_filec/func2342_nonvuln.c:1:1, line:46:1> line:1:1 invalid parse_sexp 'int (const unsigned char **, int *, int *, const unsigned char **, int *)'
  |-ParmVarDecl 0x130928140 <col:13, col:35> col:35 used buf 'const unsigned char **'
  |-ParmVarDecl 0x130928208 <col:40, col:48> col:48 invalid buflen 'int *'
  |-ParmVarDecl 0x130928288 <line:2:13, col:18> col:18 used depth 'int *'
  |-ParmVarDecl 0x130928310 <col:25, col:47> col:47 used tok 'const unsigned char **'
  |-ParmVarDecl 0x130928390 <col:52, col:60> col:60 invalid toklen 'int *'
  `-CompoundStmt 0x1310096c0 <line:3:1, line:46:1>
    |-DeclStmt 0x1309285f8 <line:4:3, col:25>
    | `-VarDecl 0x130928590 <col:3, col:24> col:24 used s 'const unsigned char *'
    |-BinaryOperator 0x1309286e0 <line:5:3, col:13> '<dependent type>' contains-errors ','
    | |-UnaryExprOrTypeTraitExpr 0x1309286a0 <col:3, col:10> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x130928680 <col:10> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x1309286c0 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x130928788 <line:7:3, col:8> 'const unsigned char *' '='
    | |-DeclRefExpr 0x130928700 <col:3> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    | `-ImplicitCastExpr 0x130928770 <col:7, col:8> 'const unsigned char *' <LValueToRValue>
    |   `-UnaryOperator 0x130928758 <col:7, col:8> 'const unsigned char *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x130928740 <col:8> 'const unsigned char **' <LValueToRValue>
    |       `-DeclRefExpr 0x130928720 <col:8> 'const unsigned char **' lvalue ParmVar 0x130928140 'buf' 'const unsigned char **'
    |-BinaryOperator 0x130941908 <line:9:3, col:10> 'const unsigned char *' contains-errors '='
    | |-UnaryOperator 0x1309418d0 <col:3, col:4> 'const unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1309418b8 <col:4> 'const unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x130941800 <col:4> 'const unsigned char **' lvalue ParmVar 0x130928310 'tok' 'const unsigned char **'
    | `-RecoveryExpr 0x1309418e8 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x130941998 <line:10:3, col:13> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x130941960 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x130941948 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x130941928 <col:4> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x130941978 <col:13> 'int' 0
    |-IfStmt 0x130941de0 <line:11:3, line:12:74>
    | |-UnaryOperator 0x130941a38 <line:11:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x130941a20 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x130941a00 <col:8> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x130941dd0 <line:12:5, col:74>
    |   `-ConditionalOperator 0x130941da0 <col:12, col:74> '<dependent type>' contains-errors
    |     |-UnaryOperator 0x130941d18 <col:12, col:13> 'int' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x130941d00 <col:13> 'int *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x130941a50 <col:13> 'int *' lvalue ParmVar 0x130928288 'depth' 'int *'
    |     |-CallExpr 0x130941d70 <col:21, col:70> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x130941c00 <col:21> 'int ()' Function 0x130941b48 'gpg_err_make' 'int ()'
    |     | |-RecoveryExpr 0x130941d30 <col:35> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x130941d50 <col:54> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x130941c80 <col:74> 'int' 0
    |-IfStmt 0x1309421b0 <line:13:3, line:20:5>
    | |-BinaryOperator 0x130941e98 <line:13:7, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x130941e80 <col:7, col:8> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x130941e68 <col:7, col:8> 'unsigned char' <LValueToRValue>
    | | |   `-UnaryOperator 0x130941e38 <col:7, col:8> 'const unsigned char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x130941e20 <col:8> 'const unsigned char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x130941e00 <col:8> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    | | `-CharacterLiteral 0x130941e50 <col:13> 'int' 40
    | `-CompoundStmt 0x130942178 <line:14:5, line:20:5>
    |   |-UnaryOperator 0x130941ed8 <line:15:7, col:8> 'const unsigned char *' postfix '++'
    |   | `-DeclRefExpr 0x130941eb8 <col:7> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    |   |-UnaryOperator 0x130941f60 <line:16:7, col:15> 'int' postfix '++'
    |   | `-ParenExpr 0x130941f40 <col:7, col:14> 'int' lvalue
    |   |   `-UnaryOperator 0x130941f28 <col:8, col:9> 'int' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x130941f10 <col:9> 'int *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x130941ef0 <col:9> 'int *' lvalue ParmVar 0x130928288 'depth' 'int *'
    |   |-BinaryOperator 0x130942000 <line:17:7, col:14> 'const unsigned char *' '='
    |   | |-UnaryOperator 0x130941fb0 <col:7, col:8> 'const unsigned char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x130941f98 <col:8> 'const unsigned char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x130941f78 <col:8> 'const unsigned char **' lvalue ParmVar 0x130928140 'buf' 'const unsigned char **'
    |   | `-ImplicitCastExpr 0x130941fe8 <col:14> 'const unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x130941fc8 <col:14> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    |   |-BinaryOperator 0x130942128 <line:18:7, col:17> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x1309420f0 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1309420d8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x130942020 <col:8> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x130942108 <col:17> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x130942168 <line:19:7, col:14>
    |     `-IntegerLiteral 0x130942148 <col:14> 'int' 0
    |-IfStmt 0x1309427c0 <line:21:3, line:31:5>
    | |-BinaryOperator 0x130942268 <line:21:7, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x130942250 <col:7, col:8> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x130942238 <col:7, col:8> 'unsigned char' <LValueToRValue>
    | | |   `-UnaryOperator 0x130942208 <col:7, col:8> 'const unsigned char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x1309421f0 <col:8> 'const unsigned char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1309421d0 <col:8> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    | | `-CharacterLiteral 0x130942220 <col:13> 'int' 41
    | `-CompoundStmt 0x130942778 <line:22:5, line:31:5>
    |   |-IfStmt 0x130942408 <line:23:7, line:24:65>
    |   | |-UnaryOperator 0x1309422f0 <line:23:11, col:13> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x1309422d8 <col:12, col:13> 'int' <LValueToRValue>
    |   | |   `-UnaryOperator 0x1309422c0 <col:12, col:13> 'int' lvalue prefix '*' cannot overflow
    |   | |     `-ImplicitCastExpr 0x1309422a8 <col:13> 'int *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x130942288 <col:13> 'int *' lvalue ParmVar 0x130928288 'depth' 'int *'
    |   | `-ReturnStmt 0x1309423f8 <line:24:9, col:65>
    |   |   `-CallExpr 0x1309423c8 <col:16, col:65> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x130942308 <col:16> 'int ()' Function 0x130941b48 'gpg_err_make' 'int ()'
    |   |     |-RecoveryExpr 0x130942388 <col:30> '<dependent type>' contains-errors lvalue
    |   |     `-RecoveryExpr 0x1309423a8 <col:49> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x130942498 <line:25:7, col:17> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x130942460 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x130942448 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x130942428 <col:8> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x130942478 <col:17> 'int' 1
    |   |-UnaryOperator 0x1309424d8 <line:26:7, col:8> 'const unsigned char *' postfix '++'
    |   | `-DeclRefExpr 0x1309424b8 <col:7> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    |   |-UnaryOperator 0x130942560 <line:27:7, col:15> 'int' postfix '--'
    |   | `-ParenExpr 0x130942540 <col:7, col:14> 'int' lvalue
    |   |   `-UnaryOperator 0x130942528 <col:8, col:9> 'int' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x130942510 <col:9> 'int *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1309424f0 <col:9> 'int *' lvalue ParmVar 0x130928288 'depth' 'int *'
    |   |-BinaryOperator 0x130942600 <line:28:7, col:14> 'const unsigned char *' '='
    |   | |-UnaryOperator 0x1309425b0 <col:7, col:8> 'const unsigned char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x130942598 <col:8> 'const unsigned char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x130942578 <col:8> 'const unsigned char **' lvalue ParmVar 0x130928140 'buf' 'const unsigned char **'
    |   | `-ImplicitCastExpr 0x1309425e8 <col:14> 'const unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1309425c8 <col:14> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    |   |-BinaryOperator 0x130942728 <line:29:7, col:17> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x1309426f0 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1309426d8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x130942620 <col:8> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x130942708 <col:17> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x130942768 <line:30:7, col:14>
    |     `-IntegerLiteral 0x130942748 <col:14> 'int' 0
    |-UnaryOperator 0x131009428 <line:36:3, col:4> 'const unsigned char *' postfix '++'
    | `-DeclRefExpr 0x131009408 <col:3> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    |-BinaryOperator 0x131009508 <line:39:3, col:10> 'const unsigned char *' '='
    | |-UnaryOperator 0x1310094b8 <col:3, col:4> 'const unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1310094a0 <col:4> 'const unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x131009480 <col:4> 'const unsigned char **' lvalue ParmVar 0x130928310 'tok' 'const unsigned char **'
    | `-ImplicitCastExpr 0x1310094f0 <col:10> 'const unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1310094d0 <col:10> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    |-BinaryOperator 0x131009620 <line:43:3, col:10> 'const unsigned char *' '='
    | |-UnaryOperator 0x1310095d0 <col:3, col:4> 'const unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1310095b8 <col:4> 'const unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x131009598 <col:4> 'const unsigned char **' lvalue ParmVar 0x130928140 'buf' 'const unsigned char **'
    | `-ImplicitCastExpr 0x131009608 <col:10> 'const unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1310095e8 <col:10> 'const unsigned char *' lvalue Var 0x130928590 's' 'const unsigned char *'
    `-ReturnStmt 0x1310096b0 <line:45:3, col:10>
      `-IntegerLiteral 0x131009690 <col:10> 'int' 0
