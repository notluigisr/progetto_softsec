TranslationUnitDecl 0x127055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1270564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127055bd0 '__int128'
|-TypedefDecl 0x127056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127055bf0 'unsigned __int128'
|-TypedefDecl 0x127126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x127126000 'struct __NSConstantString_tag'
|   `-Record 0x127056580 '__NSConstantString_tag'
|-TypedefDecl 0x127126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055d90 '__SVInt8_t'
|-TypedefDecl 0x127126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127055db0 '__SVInt16_t'
|-TypedefDecl 0x127126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127055dd0 '__SVInt32_t'
|-TypedefDecl 0x1271263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127055df0 '__SVInt64_t'
|-TypedefDecl 0x127126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055e10 '__SVUint8_t'
|-TypedefDecl 0x1271264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055e30 '__SVUint16_t'
|-TypedefDecl 0x127126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055e50 '__SVUint32_t'
|-TypedefDecl 0x127126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055e70 '__SVUint64_t'
|-TypedefDecl 0x1271265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055e90 '__SVFloat16_t'
|-TypedefDecl 0x127126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1271266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127055ed0 '__SVFloat64_t'
|-TypedefDecl 0x127126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x127126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1271267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x127126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1271268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x127126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x127126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1271269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x127126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x127126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x127126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x127126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x127126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x127126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127056090 '__clang_svint8x3_t'
|-TypedefDecl 0x127126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1270560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x127126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1270560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x127126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1270560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x127126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x127126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x127126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x127126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x127126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x127127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1270561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x127127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1270561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1271278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1270561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x127127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1271279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127056230 '__clang_svint16x4_t'
|-TypedefDecl 0x127127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127056250 '__clang_svint32x4_t'
|-TypedefDecl 0x127127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127056270 '__clang_svint64x4_t'
|-TypedefDecl 0x127127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x127127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1270562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x127127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1270562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x127127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1270562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x127127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x127127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x127127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x127127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x127127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127056390 '__SVBool_t'
|-TypedefDecl 0x127127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1270563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x127127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1270563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x127127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1270563f0 '__SVCount_t'
|-TypedefDecl 0x127127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x127127fb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-TypedefDecl 0x127128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x127127fb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
`-FunctionDecl 0x127145068 <dataset_diviso_filec/func4817_vuln.c:1:1, line:62:1> line:1:5 invalid ath9k_wmi_cmd 'int (struct wmi *, enum wmi_cmd_id, int *, int, int *, int, int)'
  |-ParmVarDecl 0x127128648 <col:19, col:31> col:31 used wmi 'struct wmi *'
  |-ParmVarDecl 0x127144c00 <col:36, col:52> col:52 invalid cmd_id 'enum wmi_cmd_id'
  |-ParmVarDecl 0x127144cc8 <line:2:5, col:9> col:9 invalid cmd_buf 'int *'
  |-ParmVarDecl 0x127144d48 <col:18, col:22> col:22 invalid cmd_len 'int'
  |-ParmVarDecl 0x127144dc8 <line:3:5, col:9> col:9 invalid rsp_buf 'int *'
  |-ParmVarDecl 0x127144e48 <col:18, col:22> col:22 invalid rsp_len 'int'
  |-ParmVarDecl 0x127144ec8 <line:4:5, col:9> col:9 invalid timeout 'int'
  `-CompoundStmt 0x12780b2d0 <line:5:1, line:62:1>
    |-DeclStmt 0x1271453e0 <line:6:2, col:39>
    | |-RecordDecl 0x127145148 <col:2, col:9> col:9 struct ath_hw
    | `-VarDecl 0x1271452b8 <col:2, col:37> col:17 used ah 'struct ath_hw *' cinit
    |   `-CXXDependentScopeMemberExpr 0x127145380 <col:22, col:37> '<dependent type>' contains-errors lvalue ->ah
    |     `-RecoveryExpr 0x127145358 <col:22, col:27> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x127145320 <col:22> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    |-DeclStmt 0x127145828 <line:7:2, col:49>
    | |-RecordDecl 0x1271453f8 <col:2, col:9> col:9 struct ath_common
    | `-VarDecl 0x127145568 <col:2, col:48> col:21 used common 'struct ath_common *' cinit
    |   `-ImplicitCastExpr 0x1271457f8 <col:30, col:48> 'struct ath_common *' contains-errors <IntegralToPointer>
    |     `-CallExpr 0x1271457b8 <col:30, col:48> 'int' contains-errors
    |       |-ImplicitCastExpr 0x1271457a0 <col:30> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x127145730 <col:30> 'int ()' Function 0x127145678 'ath9k_hw_common' 'int ()'
    |       `-ImplicitCastExpr 0x1271457e0 <col:46> 'struct ath_hw *' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x127145750 <col:46> 'struct ath_hw *' contains-errors lvalue Var 0x1271452b8 'ah' 'struct ath_hw *'
    |-DeclStmt 0x127145a28 <line:10:2, col:21>
    | |-RecordDecl 0x127145840 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x1271459a8 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-DeclStmt 0x127145ac0 <line:11:2, col:25>
    | `-VarDecl 0x127145a58 <col:2, col:16> col:16 used time_left 'unsigned long'
    |-DeclStmt 0x127145b78 <line:12:2, col:13>
    | `-VarDecl 0x127145af0 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x127145b58 <col:12> 'int' 0
    |-IfStmt 0x1278088a8 <line:14:2, line:15:10>
    | |-BinaryOperator 0x127808858 <line:14:6, col:21> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x127145bc8 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x127145b90 <col:6> 'struct ath_hw *' contains-errors lvalue Var 0x1271452b8 'ah' 'struct ath_hw *'
    | | `-RecoveryExpr 0x127808838 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x127808898 <line:15:3, col:10>
    |   `-IntegerLiteral 0x127808878 <col:10> 'int' 0
    |-BinaryOperator 0x127808b38 <line:17:2, col:48> 'struct sk_buff *' contains-errors '='
    | |-DeclRefExpr 0x1278088c8 <col:2> 'struct sk_buff *' lvalue Var 0x1271459a8 'skb' 'struct sk_buff *'
    | `-CallExpr 0x127808b08 <col:8, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1278089c8 <col:8> 'int ()' Function 0x127808910 'alloc_skb' 'int ()'
    |   |-BinaryOperator 0x127808ac8 <col:18, col:29> '<dependent type>' contains-errors '+'
    |   | |-RecoveryExpr 0x127808aa8 <col:18> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x127808a00 <col:29> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x127808ae8 <col:38> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x127808c50 <line:18:2, line:19:11>
    | |-UnaryOperator 0x127808b90 <line:18:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x127808b78 <col:7> 'struct sk_buff *' <LValueToRValue>
    | |   `-DeclRefExpr 0x127808b58 <col:7> 'struct sk_buff *' lvalue Var 0x1271459a8 'skb' 'struct sk_buff *'
    | `-ReturnStmt 0x127808c40 <line:19:3, col:11>
    |   `-UnaryOperator 0x127808c28 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x127808c10 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x127808bf0 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x127808df8 <line:21:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x127808d50 <col:2> 'int ()' Function 0x127808c98 'skb_reserve' 'int ()'
    | |-DeclRefExpr 0x127808d70 <col:14> 'struct sk_buff *' lvalue Var 0x1271459a8 'skb' 'struct sk_buff *'
    | `-RecoveryExpr 0x127808dd8 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x127809110 <line:23:2, line:25:2>
    | |-BinaryOperator 0x127808f40 <line:23:6, col:33> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x127808e68 <col:6, col:17> 'int' contains-errors '!='
    | | | |-RecoveryExpr 0x127808e28 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x127808e48 <col:17> 'int' 0
    | | `-BinaryOperator 0x127808f20 <col:22, col:33> 'int' contains-errors '!='
    | |   |-RecoveryExpr 0x127808e88 <col:22> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x127808f00 <col:33> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1278090f8 <col:39, line:25:2>
    |   `-CallExpr 0x1278090c0 <line:24:3, col:37> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x127809040 <col:3> 'int ()' Function 0x127808f88 'skb_put_data' 'int ()'
    |     |-DeclRefExpr 0x127809060 <col:16> 'struct sk_buff *' lvalue Var 0x1271459a8 'skb' 'struct sk_buff *'
    |     |-RecoveryExpr 0x127809080 <col:21> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x1278090a0 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1278092a8 <line:27:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x127809210 <col:2> 'int ()' Function 0x127809158 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x127809290 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x127809268 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x127809230 <col:14> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    |-IfStmt 0x1278094f8 <line:30:2, line:33:2>
    | |-CallExpr 0x127809430 <line:30:6, col:27> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1278093b0 <col:6> 'int ()' Function 0x1278092f8 'unlikely' 'int ()'
    | | `-RecoveryExpr 0x127809408 <col:15, col:20> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1278093d0 <col:15> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    | `-CompoundStmt 0x1278094e0 <col:30, line:33:2>
    |   `-GotoStmt 0x1278094c8 <line:32:3, col:8> 'out' 0x127809478
    |-BinaryOperator 0x127809598 <line:36:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x127809550 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x127809518 <col:2> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    | `-RecoveryExpr 0x127809578 <col:21> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x127809638 <line:37:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1278095f0 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1278095b8 <col:2> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    | `-RecoveryExpr 0x127809618 <col:21> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12780a640 <line:39:2, col:53> 'int' contains-errors '='
    | |-DeclRefExpr 0x127809658 <col:2> 'int' lvalue Var 0x127145af0 'ret' 'int'
    | `-CallExpr 0x12780a600 <col:8, col:53> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x127809758 <col:8> 'int ()' Function 0x1278096a0 'ath9k_wmi_cmd_issue' 'int ()'
    |   |-DeclRefExpr 0x127809778 <col:28> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    |   |-DeclRefExpr 0x127809798 <col:33> 'struct sk_buff *' lvalue Var 0x1271459a8 'skb' 'struct sk_buff *'
    |   |-RecoveryExpr 0x1278097b8 <col:38> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1278097d8 <col:46> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12780a6b0 <line:40:2, line:41:8>
    | |-ImplicitCastExpr 0x12780a680 <line:40:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12780a660 <col:6> 'int' lvalue Var 0x127145af0 'ret' 'int'
    | `-GotoStmt 0x12780a698 <line:41:3, col:8> 'out' 0x127809478
    |-BinaryOperator 0x12780a8b8 <line:43:2, col:65> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x12780a6d0 <col:2> 'unsigned long' lvalue Var 0x127145a58 'time_left' 'unsigned long'
    | `-CallExpr 0x12780a888 <col:14, col:65> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12780a7d0 <col:14> 'int ()' Function 0x12780a718 'wait_for_completion_timeout' 'int ()'
    |   |-UnaryOperator 0x12780a850 <col:42, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x12780a828 <col:43, col:48> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12780a7f0 <col:43> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    |   `-RecoveryExpr 0x12780a868 <col:58> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12780af30 <line:44:2, line:50:2>
    | |-UnaryOperator 0x12780a910 <line:44:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12780a8f8 <col:7> 'unsigned long' <LValueToRValue>
    | |   `-DeclRefExpr 0x12780a8d8 <col:7> 'unsigned long' lvalue Var 0x127145a58 'time_left' 'unsigned long'
    | `-CompoundStmt 0x12780af10 <col:18, line:50:2>
    |   |-CallExpr 0x12780ad70 <line:47:3, col:30> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12780acd8 <col:3> 'int ()' Function 0x12780ac20 'mutex_unlock' 'int ()'
    |   | `-UnaryOperator 0x12780ad58 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x12780ad30 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12780acf8 <col:17> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    |   `-CallExpr 0x12780aed0 <line:48:3, col:16> 'int'
    |     |-ImplicitCastExpr 0x12780aeb8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12780ae78 <col:3> 'int ()' Function 0x12780adc0 'kfree_skb' 'int ()'
    |     `-ImplicitCastExpr 0x12780aef8 <col:13> 'struct sk_buff *' <LValueToRValue>
    |       `-DeclRefExpr 0x12780ae98 <col:13> 'struct sk_buff *' lvalue Var 0x1271459a8 'skb' 'struct sk_buff *'
    |-CallExpr 0x12780afe8 <line:52:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12780af50 <col:2> 'int ()' Function 0x12780ac20 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x12780afd0 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12780afa8 <col:16, col:21> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12780af70 <col:16> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    |-ReturnStmt 0x12780b030 <line:54:2, col:9>
    | `-IntegerLiteral 0x12780b010 <col:9> 'int' 0
    |-LabelStmt 0x12780b110 <line:56:1, col:4> 'out'
    | `-NullStmt 0x12780b108 <col:4>
    |-CallExpr 0x12780b1c8 <line:58:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12780b130 <col:2> 'int ()' Function 0x12780ac20 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x12780b1b0 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12780b188 <col:16, col:21> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12780b150 <col:16> 'struct wmi *' lvalue ParmVar 0x127128648 'wmi' 'struct wmi *'
    |-CallExpr 0x12780b248 <line:59:2, col:15> 'int'
    | |-ImplicitCastExpr 0x12780b230 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12780b1f0 <col:2> 'int ()' Function 0x12780adc0 'kfree_skb' 'int ()'
    | `-ImplicitCastExpr 0x12780b270 <col:12> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x12780b210 <col:12> 'struct sk_buff *' lvalue Var 0x1271459a8 'skb' 'struct sk_buff *'
    `-ReturnStmt 0x12780b2c0 <line:61:2, col:9>
      `-ImplicitCastExpr 0x12780b2a8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12780b288 <col:9> 'int' lvalue Var 0x127145af0 'ret' 'int'
