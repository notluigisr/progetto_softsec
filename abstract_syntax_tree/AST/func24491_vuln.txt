TranslationUnitDecl 0x133055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1330564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x133055bd0 '__int128'
|-TypedefDecl 0x133056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x133055bf0 'unsigned __int128'
|-TypedefDecl 0x13380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13380bc00 'struct __NSConstantString_tag'
|   `-Record 0x133056580 '__NSConstantString_tag'
|-TypedefDecl 0x13380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x133055d90 '__SVInt8_t'
|-TypedefDecl 0x13380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x133055db0 '__SVInt16_t'
|-TypedefDecl 0x13380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x133055dd0 '__SVInt32_t'
|-TypedefDecl 0x13380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x133055df0 '__SVInt64_t'
|-TypedefDecl 0x13380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x133055e10 '__SVUint8_t'
|-TypedefDecl 0x13380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x133055e30 '__SVUint16_t'
|-TypedefDecl 0x13380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x133055e50 '__SVUint32_t'
|-TypedefDecl 0x13380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x133055e70 '__SVUint64_t'
|-TypedefDecl 0x13380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x133055e90 '__SVFloat16_t'
|-TypedefDecl 0x13380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x133055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x133055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x133055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x133055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x133055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x133055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x133055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x133055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x133055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x133055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x133055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x133056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x133056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x133056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x133056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x133056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1330560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1330560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1330560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x133056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x133056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x133056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x133056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x133056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1330561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1330561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1330561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x133056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x133056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x133056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x133056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x133056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1330562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1330562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1330562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x133056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x133056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x133056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x133056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x133056390 '__SVBool_t'
|-TypedefDecl 0x13380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1330563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1330563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1330563f0 '__SVCount_t'
|-TypedefDecl 0x13380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13380dbb0 'char *'
|   `-BuiltinType 0x1330556b0 'char'
|-TypedefDecl 0x13380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13380dbb0 'char *'
|   `-BuiltinType 0x1330556b0 'char'
|-FunctionDecl 0x13380dee8 <dataset_diviso_filec/func24491_vuln.c:1:1, line:72:1> line:1:1 invalid skip_short_body 'int (int, int, int)'
| |-ParmVarDecl 0x13380dcd8 <col:18, col:22> col:22 used fd 'int'
| |-ParmVarDecl 0x13380dd70 <col:26, col:32> col:32 referenced invalid contlen 'int'
| |-ParmVarDecl 0x13380ddf0 <col:41, col:46> col:46 invalid chunked 'int'
| `-CompoundStmt 0x1338289c0 <line:2:1, line:72:1>
|   |-DeclStmt 0x13380e1a0 <line:3:3, line:6:4>
|   | `-EnumDecl 0x13380dfa8 <line:3:3, line:6:3> line:3:3
|   |   |-EnumConstantDecl 0x13380e0b0 <line:4:5, col:17> col:5 referenced SKIP_SIZE 'int'
|   |   | `-ConstantExpr 0x13380e090 <col:17> 'int'
|   |   |   |-value: Int 512
|   |   |   `-IntegerLiteral 0x13380e070 <col:17> 'int' 512
|   |   `-EnumConstantDecl 0x13380e148 <line:5:5, col:22> col:5 referenced SKIP_THRESHOLD 'int'
|   |     `-ConstantExpr 0x13380e128 <col:22> 'int'
|   |       |-value: Int 4096
|   |       `-IntegerLiteral 0x13380e108 <col:22> 'int' 4096
|   |-DeclStmt 0x13380e308 <line:8:3, col:28>
|   | `-VarDecl 0x13380e2a0 <col:3, col:27> col:8 used dlbuf 'char[513]'
|   |-BinaryOperator 0x13380e3c8 <line:9:3, col:22> 'char' '='
|   | |-ArraySubscriptExpr 0x13380e378 <col:3, col:18> 'char' lvalue
|   | | |-ImplicitCastExpr 0x13380e360 <col:3> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x13380e320 <col:3> 'char[513]' lvalue Var 0x13380e2a0 'dlbuf' 'char[513]'
|   | | `-DeclRefExpr 0x13380e340 <col:9> 'int' EnumConstant 0x13380e0b0 'SKIP_SIZE' 'int'
|   | `-ImplicitCastExpr 0x13380e3b0 <col:22> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x13380e398 <col:22> 'int' 0
|   |-WhileStmt 0x1338288e8 <line:15:3, line:68:5>
|   | |-BinaryOperator 0x1350098f8 <line:15:10, col:25> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x1350098b8 <col:10, col:20> 'int' contains-errors '>'
|   | | | |-RecoveryExpr 0x135009878 <col:10> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x135009898 <col:20> 'int' 0
|   | | `-RecoveryExpr 0x1350098d8 <col:25> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x133828898 <line:16:5, line:68:5>
|   |   |-DeclStmt 0x135009998 <line:17:7, col:14>
|   |   | `-VarDecl 0x135009930 <col:7, col:11> col:11 used ret 'int'
|   |   |-IfStmt 0x133827980 <line:18:7, line:39:9>
|   |   | |-RecoveryExpr 0x1350099b0 <line:18:11> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x133827960 <line:19:9, line:39:9>
|   |   |   |-IfStmt 0x133827700 <line:20:11, line:36:13>
|   |   |   | |-BinaryOperator 0x135009a48 <line:20:15, col:39> 'int' contains-errors '=='
|   |   |   | | |-RecoveryExpr 0x135009a28 <col:15> '<dependent type>' contains-errors lvalue
|   |   |   | | `-IntegerLiteral 0x1350099e8 <col:39> 'int' 0
|   |   |   | `-CompoundStmt 0x1338276c8 <line:21:13, line:36:13>
|   |   |   |   |-DeclStmt 0x13500a140 <line:22:15, col:45>
|   |   |   |   | `-VarDecl 0x135009a80 <col:15, col:44> col:21 used line 'char *' cinit
|   |   |   |   |   `-ImplicitCastExpr 0x135009d08 <col:28, col:44> 'char *' <IntegralToPointer>
|   |   |   |   |     `-CallExpr 0x135009cc8 <col:28, col:44> 'int'
|   |   |   |   |       |-ImplicitCastExpr 0x135009cb0 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   |       | `-DeclRefExpr 0x135009c40 <col:28> 'int ()' Function 0x135009b88 'fd_read_line' 'int ()'
|   |   |   |   |       `-ImplicitCastExpr 0x135009cf0 <col:42> 'int' <LValueToRValue>
|   |   |   |   |         `-DeclRefExpr 0x135009c60 <col:42> 'int' lvalue ParmVar 0x13380dcd8 'fd' 'int'
|   |   |   |   |-DeclStmt 0x13500a1d8 <line:23:15, col:25>
|   |   |   |   | `-VarDecl 0x13500a170 <col:15, col:21> col:21 used endl 'char *'
|   |   |   |   |-IfStmt 0x13500a290 <line:24:15, line:25:17>
|   |   |   |   | |-BinaryOperator 0x13500a268 <line:24:19, col:27> 'int' contains-errors '=='
|   |   |   |   | | |-DeclRefExpr 0x13500a1f0 <col:19> 'char *' lvalue Var 0x135009a80 'line' 'char *'
|   |   |   |   | | `-RecoveryExpr 0x13500a248 <col:27> '<dependent type>' contains-errors lvalue
|   |   |   |   | `-BreakStmt 0x13500a288 <line:25:17>
|   |   |   |   |-CallExpr 0x133827418 <line:28:15, col:26> 'int'
|   |   |   |   | |-ImplicitCastExpr 0x133827400 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x13500a7c0 <col:15> 'int ()' Function 0x13500a708 'xfree' 'int ()'
|   |   |   |   | `-ImplicitCastExpr 0x133827440 <col:22> 'char *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x13500a7e0 <col:22> 'char *' lvalue Var 0x135009a80 'line' 'char *'
|   |   |   |   `-IfStmt 0x1338276a8 <line:30:15, line:35:17>
|   |   |   |     |-BinaryOperator 0x1338274d0 <line:30:19, col:43> 'int' contains-errors '=='
|   |   |   |     | |-RecoveryExpr 0x1338274b0 <col:19> '<dependent type>' contains-errors lvalue
|   |   |   |     | `-IntegerLiteral 0x133827470 <col:43> 'int' 0
|   |   |   |     `-CompoundStmt 0x133827680 <line:31:17, line:35:17>
|   |   |   |       |-BinaryOperator 0x1338275c0 <line:32:19, col:42> 'char *' '='
|   |   |   |       | |-DeclRefExpr 0x1338274f0 <col:19> 'char *' lvalue Var 0x135009a80 'line' 'char *'
|   |   |   |       | `-ImplicitCastExpr 0x1338275a8 <col:26, col:42> 'char *' <IntegralToPointer>
|   |   |   |       |   `-CallExpr 0x133827568 <col:26, col:42> 'int'
|   |   |   |       |     |-ImplicitCastExpr 0x133827550 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |       |     | `-DeclRefExpr 0x133827510 <col:26> 'int ()' Function 0x135009b88 'fd_read_line' 'int ()'
|   |   |   |       |     `-ImplicitCastExpr 0x133827590 <col:40> 'int' <LValueToRValue>
|   |   |   |       |       `-DeclRefExpr 0x133827530 <col:40> 'int' lvalue ParmVar 0x13380dcd8 'fd' 'int'
|   |   |   |       |-CallExpr 0x133827638 <line:33:19, col:30> 'int'
|   |   |   |       | |-ImplicitCastExpr 0x133827620 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |       | | `-DeclRefExpr 0x1338275e0 <col:19> 'int ()' Function 0x13500a708 'xfree' 'int ()'
|   |   |   |       | `-ImplicitCastExpr 0x133827660 <col:26> 'char *' <LValueToRValue>
|   |   |   |       |   `-DeclRefExpr 0x133827600 <col:26> 'char *' lvalue Var 0x135009a80 'line' 'char *'
|   |   |   |       `-BreakStmt 0x133827678 <line:34:19>
|   |   |   `-BinaryOperator 0x133827940 <line:38:11, col:57> '<dependent type>' contains-errors '='
|   |   |     |-RecoveryExpr 0x133827740 <col:11> '<dependent type>' contains-errors lvalue
|   |   |     | `-DeclRefExpr 0x133827720 <col:11> 'int' lvalue ParmVar 0x13380dd70 'contlen' 'int'
|   |   |     `-CallExpr 0x133827910 <col:21, col:57> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x133827848 <col:21> 'int ()' Function 0x133827790 'MIN' 'int ()'
|   |   |       |-RecoveryExpr 0x1338278f0 <col:26> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x133827880 <col:48> 'int' EnumConstant 0x13380e0b0 'SKIP_SIZE' 'int'
|   |   |-CallExpr 0x133827c88 <line:41:7, col:57> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x133827a80 <col:7> 'int ()' Function 0x1338279c8 'DEBUGP' 'int ()'
|   |   | `-ParenExpr 0x133827c68 <col:15, col:56> '<dependent type>' contains-errors
|   |   |   `-BinaryOperator 0x133827c48 <col:16, col:55> '<dependent type>' contains-errors ','
|   |   |     |-StringLiteral 0x133827ae0 <col:16> 'char[4]' lvalue "STR"
|   |   |     `-CallExpr 0x133827c20 <col:23, col:55> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x133827be0 <col:23> 'int ()' Function 0x133827b28 'number_to_static_string' 'int ()'
|   |   |       `-RecoveryExpr 0x133827c00 <col:48> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x133827f18 <line:43:7, col:61> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x133827cb0 <col:7> 'int' lvalue Var 0x135009930 'ret' 'int'
|   |   | `-CallExpr 0x133827ed8 <col:13, col:61> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x133827db0 <col:13> 'int ()' Function 0x133827cf8 'fd_read' 'int ()'
|   |   |   |-DeclRefExpr 0x133827dd0 <col:22> 'int' lvalue ParmVar 0x13380dcd8 'fd' 'int'
|   |   |   |-DeclRefExpr 0x133827df0 <col:26> 'char[513]' lvalue Var 0x13380e2a0 'dlbuf' 'char[513]'
|   |   |   |-CallExpr 0x133827e70 <col:33, col:56> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x133827e10 <col:33> 'int ()' Function 0x133827790 'MIN' 'int ()'
|   |   |   | |-RecoveryExpr 0x133827e30 <col:38> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x133827e50 <col:47> 'int' EnumConstant 0x13380e0b0 'SKIP_SIZE' 'int'
|   |   |   `-UnaryOperator 0x133827ec0 <col:59, col:60> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x133827ea0 <col:60> 'int' 1
|   |   |-IfStmt 0x133828310 <line:44:7, line:50:9>
|   |   | |-BinaryOperator 0x133827f90 <line:44:11, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x133827f78 <col:11> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x133827f38 <col:11> 'int' lvalue Var 0x135009930 'ret' 'int'
|   |   | | `-IntegerLiteral 0x133827f58 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x1338282f8 <line:45:9, line:50:9>
|   |   |   `-CallExpr 0x1338282d0 <line:47:11, line:48:53> 'int'
|   |   |     |-ImplicitCastExpr 0x1338282b8 <line:47:11> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x133827fb0 <col:11> 'int ()' Function 0x1338279c8 'DEBUGP' 'int ()'
|   |   |     `-ParenExpr 0x133828298 <col:19, line:48:52> 'char *'
|   |   |       `-BinaryOperator 0x133828278 <line:47:20, line:48:47> 'char *' ','
|   |   |         |-ImplicitCastExpr 0x133828260 <line:47:20> 'char *' <ArrayToPointerDecay>
|   |   |         | `-StringLiteral 0x133827fd0 <col:20> 'char[4]' lvalue "STR"
|   |   |         `-ConditionalOperator 0x133828230 <line:48:20, col:47> 'char *'
|   |   |           |-BinaryOperator 0x133828048 <col:20, col:26> 'int' '<'
|   |   |           | |-ImplicitCastExpr 0x133828030 <col:20> 'int' <LValueToRValue>
|   |   |           | | `-DeclRefExpr 0x133827ff0 <col:20> 'int' lvalue Var 0x135009930 'ret' 'int'
|   |   |           | `-IntegerLiteral 0x133828010 <col:26> 'int' 0
|   |   |           |-ImplicitCastExpr 0x133828218 <col:30, col:43> 'char *' <IntegralToPointer>
|   |   |           | `-CallExpr 0x1338281a0 <col:30, col:43> 'int'
|   |   |           |   |-ImplicitCastExpr 0x133828188 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   |           |   | `-DeclRefExpr 0x133828148 <col:30> 'int ()' Function 0x133828090 'fd_errstr' 'int ()'
|   |   |           |   `-ImplicitCastExpr 0x1338281c8 <col:41> 'int' <LValueToRValue>
|   |   |           |     `-DeclRefExpr 0x133828168 <col:41> 'int' lvalue ParmVar 0x13380dcd8 'fd' 'int'
|   |   |           `-ImplicitCastExpr 0x133828200 <col:47> 'char *' <ArrayToPointerDecay>
|   |   |             `-StringLiteral 0x1338281e0 <col:47> 'char[4]' lvalue "STR"
|   |   |-CompoundAssignOperator 0x133828398 <line:51:7, col:18> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-RecoveryExpr 0x133828350 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x133828330 <col:7> 'int' lvalue ParmVar 0x13380dd70 'contlen' 'int'
|   |   | `-DeclRefExpr 0x133828378 <col:18> 'int' lvalue Var 0x135009930 'ret' 'int'
|   |   |-IfStmt 0x133828710 <line:53:7, line:64:9>
|   |   | |-RecoveryExpr 0x1338283c8 <line:53:11> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x1338286f8 <line:54:9, line:64:9>
|   |   |   `-IfStmt 0x1338286d8 <line:56:11, line:63:13>
|   |   |     |-RecoveryExpr 0x133828440 <line:56:15, col:39> '_Bool' contains-errors
|   |   |     `-CompoundStmt 0x1338286b8 <line:57:13, line:63:13>
|   |   |       |-DeclStmt 0x133828590 <line:58:15, col:45>
|   |   |       | `-VarDecl 0x133828478 <col:15, col:44> col:21 used line 'char *' cinit
|   |   |       |   `-ImplicitCastExpr 0x133828578 <col:28, col:44> 'char *' <IntegralToPointer>
|   |   |       |     `-CallExpr 0x133828538 <col:28, col:44> 'int'
|   |   |       |       |-ImplicitCastExpr 0x133828520 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |       | `-DeclRefExpr 0x1338284e0 <col:28> 'int ()' Function 0x135009b88 'fd_read_line' 'int ()'
|   |   |       |       `-ImplicitCastExpr 0x133828560 <col:42> 'int' <LValueToRValue>
|   |   |       |         `-DeclRefExpr 0x133828500 <col:42> 'int' lvalue ParmVar 0x13380dcd8 'fd' 'int'
|   |   |       `-IfStmt 0x133828688 <line:59:15, line:62:28> has_else
|   |   |         |-RecoveryExpr 0x1338285c8 <line:59:19, col:27> '_Bool' contains-errors
|   |   |         |-NullStmt 0x133828680 <line:60:17>
|   |   |         `-CallExpr 0x133828640 <line:62:17, col:28> 'int'
|   |   |           |-ImplicitCastExpr 0x133828628 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |           | `-DeclRefExpr 0x1338285e8 <col:17> 'int ()' Function 0x13500a708 'xfree' 'int ()'
|   |   |           `-ImplicitCastExpr 0x133828668 <col:24> 'char *' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x133828608 <col:24> 'char *' lvalue Var 0x133828478 'line' 'char *'
|   |   `-CallExpr 0x133828870 <line:67:7, col:34> 'int'
|   |     |-ImplicitCastExpr 0x133828858 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x133828730 <col:7> 'int ()' Function 0x1338279c8 'DEBUGP' 'int ()'
|   |     `-ParenExpr 0x133828838 <col:15, col:33> 'char *'
|   |       `-BinaryOperator 0x133828818 <col:16, col:28> 'char *' ','
|   |         |-BinaryOperator 0x1338287c0 <col:16, col:23> 'int' ','
|   |         | |-ImplicitCastExpr 0x133828790 <col:16> 'char *' <ArrayToPointerDecay>
|   |         | | `-StringLiteral 0x133828750 <col:16> 'char[4]' lvalue "STR"
|   |         | `-ImplicitCastExpr 0x1338287a8 <col:23> 'int' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x133828770 <col:23> 'int' lvalue Var 0x135009930 'ret' 'int'
|   |         `-ImplicitCastExpr 0x133828800 <col:28> 'char *' <ArrayToPointerDecay>
|   |           `-DeclRefExpr 0x1338287e0 <col:28> 'char[513]' lvalue Var 0x13380e2a0 'dlbuf' 'char[513]'
|   `-CallExpr 0x133828980 <line:70:3, col:18> 'int'
|     |-ImplicitCastExpr 0x133828968 <col:3> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x133828908 <col:3> 'int ()' Function 0x1338279c8 'DEBUGP' 'int ()'
|     `-ImplicitCastExpr 0x1338289a8 <col:11, col:17> 'char *' <ArrayToPointerDecay>
|       `-ParenExpr 0x133828948 <col:11, col:17> 'char[4]' lvalue
|         `-StringLiteral 0x133828928 <col:12> 'char[4]' lvalue "STR"
`-FunctionDecl 0x13500a328 <line:27:38> col:38 implicit used strtol 'long (const char *, char **, int)' extern
  |-ParmVarDecl 0x13500a428 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13500a490 <<invalid sloc>> <invalid sloc> 'char **'
  |-ParmVarDecl 0x13500a4f8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x13500a3d0 <<invalid sloc>> Implicit 877
