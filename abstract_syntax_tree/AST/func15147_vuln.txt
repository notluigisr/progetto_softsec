TranslationUnitDecl 0x134855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1348564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x134855bd0 '__int128'
|-TypedefDecl 0x134856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x134855bf0 'unsigned __int128'
|-TypedefDecl 0x134926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x134926000 'struct __NSConstantString_tag'
|   `-Record 0x134856580 '__NSConstantString_tag'
|-TypedefDecl 0x134926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134855d90 '__SVInt8_t'
|-TypedefDecl 0x134926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134855db0 '__SVInt16_t'
|-TypedefDecl 0x134926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134855dd0 '__SVInt32_t'
|-TypedefDecl 0x1349263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134855df0 '__SVInt64_t'
|-TypedefDecl 0x134926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134855e10 '__SVUint8_t'
|-TypedefDecl 0x1349264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134855e30 '__SVUint16_t'
|-TypedefDecl 0x134926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134855e50 '__SVUint32_t'
|-TypedefDecl 0x134926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134855e70 '__SVUint64_t'
|-TypedefDecl 0x1349265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134855e90 '__SVFloat16_t'
|-TypedefDecl 0x134926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1349266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134855ed0 '__SVFloat64_t'
|-TypedefDecl 0x134926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x134926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1349267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x134926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1349268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x134926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x134926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1349269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x134926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x134926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x134926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x134926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x134926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x134926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134856090 '__clang_svint8x3_t'
|-TypedefDecl 0x134926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1348560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x134926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1348560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x134926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1348560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x134926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x134926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x134926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x134926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x134926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x134927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1348561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x134927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1348561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1349278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1348561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x134927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1349279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134856230 '__clang_svint16x4_t'
|-TypedefDecl 0x134927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134856250 '__clang_svint32x4_t'
|-TypedefDecl 0x134927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134856270 '__clang_svint64x4_t'
|-TypedefDecl 0x134927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x134927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1348562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x134927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1348562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x134927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1348562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x134927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x134927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x134927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x134927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x134927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134856390 '__SVBool_t'
|-TypedefDecl 0x134927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1348563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x134927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1348563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x134927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1348563f0 '__SVCount_t'
|-TypedefDecl 0x134927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x134927fb0 'char *'
|   `-BuiltinType 0x1348556b0 'char'
|-TypedefDecl 0x134928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x134927fb0 'char *'
|   `-BuiltinType 0x1348556b0 'char'
|-FunctionDecl 0x134928758 <dataset_diviso_filec/func15147_vuln.c:1:1, line:30:1> line:1:12 em_jmp_far 'int (struct x86_emulate_ctxt *)' static
| |-ParmVarDecl 0x134928648 <col:23, col:48> col:48 used ctxt 'struct x86_emulate_ctxt *'
| `-CompoundStmt 0x1349436f0 <line:2:1, line:30:1>
|   |-DeclStmt 0x134940ad0 <line:3:2, col:8>
|   | `-VarDecl 0x134940a68 <col:2, col:6> col:6 used rc 'int'
|   |-DeclStmt 0x134940c00 <line:4:2, col:29>
|   | |-VarDecl 0x134940b00 <col:2, col:17> col:17 used sel 'unsigned short'
|   | `-VarDecl 0x134940b80 <col:2, col:22> col:22 used old_sel 'unsigned short'
|   |-DeclStmt 0x134940e28 <line:5:2, col:39>
|   | |-RecordDecl 0x134940c18 <col:2, col:9> col:9 struct desc_struct
|   | |-VarDecl 0x134940d18 <col:2, col:21> col:21 invalid old_desc 'struct desc_struct'
|   | `-VarDecl 0x134940da0 <col:2, col:31> col:31 invalid new_desc 'struct desc_struct'
|   |-DeclStmt 0x134941088 <line:6:2, col:47>
|   | |-RecordDecl 0x134940e40 <col:8, col:15> col:15 struct x86_emulate_ops
|   | `-VarDecl 0x134940fa8 <col:2, col:44> col:32 used ops 'const struct x86_emulate_ops *' cinit
|   |   `-RecoveryExpr 0x134941048 <col:38, col:44> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x134941010 <col:38> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x134928648 'ctxt' 'struct x86_emulate_ctxt *'
|   |-IfStmt 0x1349413b0 <line:10:2, line:12:18>
|   | |-BinaryOperator 0x134941170 <line:10:6, col:20> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x1349410f0 <col:6, col:12> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x1349410b8 <col:6> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x134928648 'ctxt' 'struct x86_emulate_ctxt *'
|   | | `-RecoveryExpr 0x134941150 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x134941368 <line:11:3, line:12:18> '<dependent type>' contains-errors
|   |   |-RecoveryExpr 0x1349411c8 <line:11:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x134941190 <col:3> 'const struct x86_emulate_ops *' contains-errors lvalue Var 0x134940fa8 'ops' 'const struct x86_emulate_ops *'
|   |   |-DeclRefExpr 0x1349411f0 <col:20> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x134928648 'ctxt' 'struct x86_emulate_ctxt *'
|   |   |-UnaryOperator 0x134941260 <col:26, col:27> 'unsigned short *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x134941210 <col:27> 'unsigned short' lvalue Var 0x134940b80 'old_sel' 'unsigned short'
|   |   |-UnaryOperator 0x134941298 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x134941278 <col:37> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x134941328 <col:47> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x134941348 <line:12:6> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x134941838 <line:14:2, col:51> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x134941698 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x134941448 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-UnaryOperator 0x1349416d8 <col:9, col:10> 'unsigned short *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1349416b8 <col:10> 'unsigned short' lvalue Var 0x134940b00 'sel' 'unsigned short'
|   | |-BinaryOperator 0x1349417f8 <col:15, col:40> '<dependent type>' contains-errors '+'
|   | | |-CXXDependentScopeMemberExpr 0x134941750 <col:15, col:25> '<dependent type>' contains-errors lvalue .valptr
|   | | | `-RecoveryExpr 0x134941728 <col:15, col:21> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x1349416f0 <col:15> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x134928648 'ctxt' 'struct x86_emulate_ctxt *'
|   | | `-RecoveryExpr 0x1349417d0 <col:34, col:40> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x134941798 <col:34> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x134928648 'ctxt' 'struct x86_emulate_ctxt *'
|   | `-IntegerLiteral 0x134941818 <col:50> 'int' 2
|   |-BinaryOperator 0x134942fa0 <line:16:2, line:18:21> 'int' contains-errors '='
|   | |-DeclRefExpr 0x134941870 <line:16:2> 'int' lvalue Var 0x134940a68 'rc' 'int'
|   | `-CallExpr 0x134942f50 <col:7, line:18:21> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1349419a0 <line:16:7> 'int ()' Function 0x1349418e8 '__load_segment_descriptor' 'int ()'
|   |   |-DeclRefExpr 0x1349419c0 <col:33> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x134928648 'ctxt' 'struct x86_emulate_ctxt *'
|   |   |-DeclRefExpr 0x1349419e0 <col:39> 'unsigned short' lvalue Var 0x134940b00 'sel' 'unsigned short'
|   |   |-RecoveryExpr 0x134942ef0 <col:44> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x134942f10 <col:58> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x134942f30 <line:17:12> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x134942e68 <line:18:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x134942e48 <col:13> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1349430a0 <line:19:2, line:20:10>
|   | |-BinaryOperator 0x134943038 <line:19:6, col:12> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x134942fc0 <col:6> 'int' lvalue Var 0x134940a68 'rc' 'int'
|   | | `-RecoveryExpr 0x134943018 <col:12> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x134943090 <line:20:3, col:10>
|   |   `-ImplicitCastExpr 0x134943078 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x134943058 <col:10> 'int' lvalue Var 0x134940a68 'rc' 'int'
|   |-BinaryOperator 0x134943318 <line:22:2, col:52> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1349430c0 <col:2> 'int' lvalue Var 0x134940a68 'rc' 'int'
|   | `-CallExpr 0x1349432e0 <col:7, col:52> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1349431c0 <col:7> 'int ()' Function 0x134943108 'assign_eip_far' 'int ()'
|   |   |-DeclRefExpr 0x1349431e0 <col:22> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x134928648 'ctxt' 'struct x86_emulate_ctxt *'
|   |   |-CXXDependentScopeMemberExpr 0x134943260 <col:28, col:38> '<dependent type>' contains-errors lvalue .val
|   |   | `-RecoveryExpr 0x134943238 <col:28, col:34> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x134943200 <col:28> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x134928648 'ctxt' 'struct x86_emulate_ctxt *'
|   |   `-UnaryOperator 0x1349432c8 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x1349432a8 <col:44> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x134943688 <line:23:2, line:28:2>
|   | |-BinaryOperator 0x1349433b0 <line:23:6, col:12> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x134943338 <col:6> 'int' lvalue Var 0x134940a68 'rc' 'int'
|   | | `-RecoveryExpr 0x134943390 <col:12> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x134943670 <col:30, line:28:2>
|   |   `-ReturnStmt 0x134943660 <line:27:3, col:10>
|   |     `-ImplicitCastExpr 0x134943648 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x134943628 <col:10> 'int' lvalue Var 0x134940a68 'rc' 'int'
|   `-ReturnStmt 0x1349436e0 <line:29:2, col:9>
|     `-ImplicitCastExpr 0x1349436c8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1349436a8 <col:9> 'int' lvalue Var 0x134940a68 'rc' 'int'
`-FunctionDecl 0x134941448 <line:14:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x134941548 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1349415b0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x134941618 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1349414f0 <<invalid sloc>> Implicit 882
