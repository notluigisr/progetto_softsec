TranslationUnitDecl 0x136855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1368564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136855bd0 '__int128'
|-TypedefDecl 0x136856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136855bf0 'unsigned __int128'
|-TypedefDecl 0x13700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13700bc00 'struct __NSConstantString_tag'
|   `-Record 0x136856580 '__NSConstantString_tag'
|-TypedefDecl 0x13700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136855d90 '__SVInt8_t'
|-TypedefDecl 0x13700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136855db0 '__SVInt16_t'
|-TypedefDecl 0x13700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136855dd0 '__SVInt32_t'
|-TypedefDecl 0x13700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136855df0 '__SVInt64_t'
|-TypedefDecl 0x13700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136855e10 '__SVUint8_t'
|-TypedefDecl 0x13700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136855e30 '__SVUint16_t'
|-TypedefDecl 0x13700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136855e50 '__SVUint32_t'
|-TypedefDecl 0x13700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136855e70 '__SVUint64_t'
|-TypedefDecl 0x13700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136855e90 '__SVFloat16_t'
|-TypedefDecl 0x13700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1368560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1368560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1368560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1368561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1368561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1368561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1368562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1368562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1368562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136856390 '__SVBool_t'
|-TypedefDecl 0x13700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1368563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1368563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1368563f0 '__SVCount_t'
|-TypedefDecl 0x13700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13700dbb0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-TypedefDecl 0x13700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13700dbb0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-FunctionDecl 0x13700de88 <dataset_diviso_filec/func24745_vuln.c:1:1, line:62:1> line:1:7 invalid compose_path 'char *(int *, char *)'
| |-ParmVarDecl 0x13700dd28 <col:20, col:28> col:28 invalid ctrl 'int *'
| |-ParmVarDecl 0x13700dda8 <col:34, col:40> col:40 used path 'char *'
| `-CompoundStmt 0x136927cf8 <line:2:1, line:62:1>
|   |-DeclStmt 0x137027528 <line:3:2, col:16>
|   | |-RecordDecl 0x13700df40 <col:2, col:9> col:9 struct stat
|   | `-VarDecl 0x13700e038 <col:2, col:14> col:14 invalid st 'struct stat'
|   |-DeclStmt 0x1370275d0 <line:4:2, col:29>
|   | `-VarDecl 0x137027568 <col:2, col:14> col:14 invalid rpath 'char' static
|   |-DeclStmt 0x137027700 <line:5:2, col:18>
|   | |-VarDecl 0x137027600 <col:2, col:8> col:8 used name 'char *'
|   | `-VarDecl 0x137027680 <col:2, col:15> col:15 used ptr 'char *'
|   |-DeclStmt 0x137027810 <line:6:2, col:28>
|   | `-VarDecl 0x137027740 <col:2, col:7> col:7 invalid dir 'char'
|   |-CallExpr 0x137027c00 <line:8:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x137027ac8 <col:2> 'unsigned long (char *, const char *, unsigned long)' Function 0x137027878 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|   | |-RecoveryExpr 0x137027ae8 <col:10> '<dependent type>' contains-errors lvalue
|   | |-CXXDependentScopeMemberExpr 0x137027b28 <col:15, col:21> '<dependent type>' contains-errors lvalue ->cwd
|   | | `-RecoveryExpr 0x137027b08 <col:15> '<dependent type>' contains-errors lvalue
|   | `-UnaryExprOrTypeTraitExpr 0x137027bb0 <col:26, col:36> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x137027b90 <col:32, col:36> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x137027b70 <col:33> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x137027e58 <line:9:2, col:11> 'int'
|   | |-ImplicitCastExpr 0x137027e40 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x137027d90 <col:2> 'int ()' Function 0x137027cd8 'DBG' 'int ()'
|   | `-ImplicitCastExpr 0x137027e80 <col:6> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x137027df0 <col:6> 'char[4]' lvalue "STR"
|   |-IfStmt 0x137028230 <line:10:2, line:11:8>
|   | |-BinaryOperator 0x1370281a8 <line:10:6, col:27> 'int' '||'
|   | | |-UnaryOperator 0x137027ed0 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x137027eb8 <col:7> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x137027e98 <col:7> 'char *' lvalue ParmVar 0x13700dda8 'path' 'char *'
|   | | `-UnaryOperator 0x137028190 <col:15, col:27> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x137028138 <col:16, col:27> 'unsigned long'
|   | |     |-ImplicitCastExpr 0x137028120 <col:16> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x137028098 <col:16> 'unsigned long (const char *)' Function 0x137027f28 'strlen' 'unsigned long (const char *)'
|   | |     `-ImplicitCastExpr 0x137028178 <col:23> 'const char *' <NoOp>
|   | |       `-ImplicitCastExpr 0x137028160 <col:23> 'char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1370280b8 <col:23> 'char *' lvalue ParmVar 0x13700dda8 'path' 'char *'
|   | `-GotoStmt 0x137028218 <line:11:3, col:8> 'check' 0x1370281c8
|   |-IfStmt 0x1370297f0 <line:13:2, line:19:2>
|   | |-ImplicitCastExpr 0x137028270 <line:13:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x137028250 <col:6> 'char *' lvalue ParmVar 0x13700dda8 'path' 'char *'
|   | `-CompoundStmt 0x1370297d0 <col:12, line:19:2>
|   |   |-IfStmt 0x137029688 <line:14:3, line:17:3>
|   |   | |-BinaryOperator 0x137028348 <line:14:7, col:18> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x137028330 <col:7, col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x137028318 <col:7, col:13> 'char' <LValueToRValue>
|   |   | | |   `-ArraySubscriptExpr 0x1370282e0 <col:7, col:13> 'char' lvalue
|   |   | | |     |-ImplicitCastExpr 0x1370282c8 <col:7> 'char *' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x137028288 <col:7> 'char *' lvalue ParmVar 0x13700dda8 'path' 'char *'
|   |   | | |     `-IntegerLiteral 0x1370282a8 <col:12> 'int' 0
|   |   | | `-CharacterLiteral 0x137028300 <col:18> 'int' 47
|   |   | `-CompoundStmt 0x137029670 <col:23, line:17:3>
|   |   |   `-IfStmt 0x137029650 <line:15:4, line:16:36>
|   |   |     |-BinaryOperator 0x1370292b8 <line:15:8, col:32> 'int' contains-errors '!='
|   |   |     | |-ArraySubscriptExpr 0x137029280 <col:8, col:27> '<dependent type>' contains-errors lvalue
|   |   |     | | |-ImplicitCastExpr 0x137029268 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | | | `-RecoveryExpr 0x137028368 <col:8> '<dependent type>' contains-errors lvalue
|   |   |     | | `-BinaryOperator 0x137029248 <col:12, col:26> '<dependent type>' contains-errors '-'
|   |   |     | |   |-CallExpr 0x137029200 <col:12, col:22> '<dependent type>' contains-errors
|   |   |     | |   | |-DeclRefExpr 0x137028388 <col:12> 'unsigned long (const char *)' Function 0x137027f28 'strlen' 'unsigned long (const char *)'
|   |   |     | |   | `-RecoveryExpr 0x1370283a8 <col:19> '<dependent type>' contains-errors lvalue
|   |   |     | |   `-IntegerLiteral 0x137029228 <col:26> 'int' 1
|   |   |     | `-CharacterLiteral 0x1370292a0 <col:32> 'int' 47
|   |   |     `-CallExpr 0x137029618 <line:16:5, col:36> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x137029528 <col:5> 'unsigned long (char *, const char *, unsigned long)' Function 0x1370292d8 'strlcat' 'unsigned long (char *, const char *, unsigned long)'
|   |   |       |-RecoveryExpr 0x137029548 <col:13> '<dependent type>' contains-errors lvalue
|   |   |       |-StringLiteral 0x137029568 <col:18> 'char[4]' lvalue "STR"
|   |   |       `-UnaryExprOrTypeTraitExpr 0x1370295c8 <col:25, col:35> 'unsigned long' contains-errors sizeof
|   |   |         `-ParenExpr 0x1370295a8 <col:31, col:35> '<dependent type>' contains-errors lvalue
|   |   |           `-RecoveryExpr 0x137029588 <col:32> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x137029798 <line:18:3, col:33> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1370296a8 <col:3> 'unsigned long (char *, const char *, unsigned long)' Function 0x1370292d8 'strlcat' 'unsigned long (char *, const char *, unsigned long)'
|   |     |-RecoveryExpr 0x1370296c8 <col:11> '<dependent type>' contains-errors lvalue
|   |     |-DeclRefExpr 0x1370296e8 <col:16> 'char *' lvalue ParmVar 0x13700dda8 'path' 'char *'
|   |     `-UnaryExprOrTypeTraitExpr 0x137029748 <col:22, col:32> 'unsigned long' contains-errors sizeof
|   |       `-ParenExpr 0x137029728 <col:28, col:32> '<dependent type>' contains-errors lvalue
|   |         `-RecoveryExpr 0x137029708 <col:29> '<dependent type>' contains-errors lvalue
|   |-LabelStmt 0x13702a148 <line:21:1, line:23:44> 'check'
|   | `-WhileStmt 0x13702a128 <line:22:2, line:23:44>
|   |   |-ParenExpr 0x137029b30 <line:22:9, col:34> 'char *' contains-errors
|   |   | `-BinaryOperator 0x137029b10 <col:10, col:33> 'char *' contains-errors '='
|   |   |   |-DeclRefExpr 0x137029810 <col:10> 'char *' lvalue Var 0x137027680 'ptr' 'char *'
|   |   |   `-CallExpr 0x137029ae0 <col:16, col:33> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x137029a50 <col:16> 'char *(const char *, const char *)' Function 0x137029870 'strstr' 'char *(const char *, const char *)'
|   |   |     |-RecoveryExpr 0x137029a70 <col:23> '<dependent type>' contains-errors lvalue
|   |   |     `-StringLiteral 0x137029a90 <col:28> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x13702a0a8 <line:23:3, col:44> 'void *'
|   |     |-ImplicitCastExpr 0x13702a090 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x137029e18 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x137029bc8 'memmove' 'void *(void *, const void *, unsigned long)'
|   |     |-ImplicitCastExpr 0x13702a0f8 <col:11> 'void *' <BitCast>
|   |     | `-ImplicitCastExpr 0x13702a0e0 <col:11> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x137029e38 <col:11> 'char *' lvalue Var 0x137027680 'ptr' 'char *'
|   |     |-ImplicitCastExpr 0x13702a110 <col:16, col:22> 'const void *' <BitCast>
|   |     | `-UnaryOperator 0x137029ed0 <col:16, col:22> 'char *' prefix '&' cannot overflow
|   |     |   `-ArraySubscriptExpr 0x137029eb0 <col:17, col:22> 'char' lvalue
|   |     |     |-ImplicitCastExpr 0x137029e98 <col:17> 'char *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x137029e58 <col:17> 'char *' lvalue Var 0x137027680 'ptr' 'char *'
|   |     |     `-IntegerLiteral 0x137029e78 <col:21> 'int' 1
|   |     `-BinaryOperator 0x13702a028 <col:25, col:43> 'unsigned long' '+'
|   |       |-CallExpr 0x137029fb0 <col:25, col:39> 'unsigned long'
|   |       | |-ImplicitCastExpr 0x137029f98 <col:25> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x137029ee8 <col:25> 'unsigned long (const char *)' Function 0x137027f28 'strlen' 'unsigned long (const char *)'
|   |       | `-ImplicitCastExpr 0x137029fd8 <col:32, col:38> 'const char *' <NoOp>
|   |       |   `-UnaryOperator 0x137029f80 <col:32, col:38> 'char *' prefix '&' cannot overflow
|   |       |     `-ArraySubscriptExpr 0x137029f60 <col:33, col:38> 'char' lvalue
|   |       |       |-ImplicitCastExpr 0x137029f48 <col:33> 'char *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x137029f08 <col:33> 'char *' lvalue Var 0x137027680 'ptr' 'char *'
|   |       |       `-IntegerLiteral 0x137029f28 <col:37> 'int' 1
|   |       `-ImplicitCastExpr 0x13702a010 <col:43> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x137029ff0 <col:43> 'int' 1
|   |-IfStmt 0x1400090c8 <line:25:2, line:34:2>
|   | |-UnaryOperator 0x13702a1e8 <line:25:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13702a1d0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13702a1b0 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x140009098 <col:17, line:34:2>
|   |   |-BinaryOperator 0x140008970 <line:26:3, col:27> 'unsigned long' contains-errors '='
|   |   | |-UnaryExprOrTypeTraitExpr 0x1400088f0 <col:3, col:10> 'unsigned long' contains-errors sizeof
|   |   | | `-RecoveryExpr 0x1400088d0 <col:10> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x140008948 <col:16, col:27> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x140008838 <col:16> 'unsigned long (const char *)' Function 0x137027f28 'strlen' 'unsigned long (const char *)'
|   |   |   `-RecoveryExpr 0x140008910 <col:23> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x1400089f0 <line:28:3, col:17> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x140008990 <col:3> 'int ()' Function 0x137027cd8 'DBG' 'int ()'
|   |   | |-StringLiteral 0x1400089b0 <col:7> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x1400089d0 <col:14> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x140008d40 <line:31:3, col:42> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x140008b40 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x137029bc8 'memmove' 'void *(void *, const void *, unsigned long)'
|   |   | |-BinaryOperator 0x140008d08 <col:11, col:17> '<dependent type>' contains-errors '+'
|   |   | | |-RecoveryExpr 0x140008b60 <col:11> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x140008ce8 <col:17> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x140008bb8 <col:22> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x140008c78 <col:27, col:41> '<dependent type>' contains-errors '+'
|   |   |   |-CallExpr 0x140008c30 <col:27, col:37> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x140008bd8 <col:27> 'unsigned long (const char *)' Function 0x137027f28 'strlen' 'unsigned long (const char *)'
|   |   |   | `-RecoveryExpr 0x140008bf8 <col:34> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x140008c58 <col:41> 'int' 1
|   |   `-CallExpr 0x140009068 <line:33:3, col:17> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x140009008 <col:3> 'int ()' Function 0x137027cd8 'DBG' 'int ()'
|   |     |-StringLiteral 0x140009028 <col:7> 'char[4]' lvalue "STR"
|   |     `-RecoveryExpr 0x140009048 <col:14> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1369278e8 <line:37:2, line:54:2> has_else
|   | |-BinaryOperator 0x140009418 <line:37:6, col:43> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x140009270 <col:6, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-CallExpr 0x140009240 <col:7, col:20> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x1400091c8 <col:7> 'int ()' Function 0x140009110 'stat' 'int ()'
|   | | |   |-RecoveryExpr 0x1400091e8 <col:12> '<dependent type>' contains-errors lvalue
|   | | |   `-UnaryOperator 0x140009228 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |     `-RecoveryExpr 0x140009208 <col:18> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x1400093f0 <col:25, col:43> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x140009368 <col:25> 'int ()' Function 0x1400092b0 'S_ISDIR' 'int ()'
|   | |   `-CXXDependentScopeMemberExpr 0x1400093a8 <col:33, col:36> '<dependent type>' contains-errors lvalue .st_mode
|   | |     `-RecoveryExpr 0x140009388 <col:33> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x1400095c0 <col:46, line:40:2>
|   | `-CompoundStmt 0x1369278a8 <col:9, line:54:2>
|   |   |-BinaryOperator 0x140009780 <line:42:3, col:23> 'char *' '='
|   |   | |-DeclRefExpr 0x1400095d0 <col:3> 'char *' lvalue Var 0x137027600 'name' 'char *'
|   |   | `-ImplicitCastExpr 0x140009768 <col:10, col:23> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x140009728 <col:10, col:23> 'int'
|   |   |     |-ImplicitCastExpr 0x140009710 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1400096d0 <col:10> 'int ()' Function 0x140009618 'basename' 'int ()'
|   |   |     `-ImplicitCastExpr 0x140009750 <col:19> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1400096f0 <col:19> 'char *' lvalue ParmVar 0x13700dda8 'path' 'char *'
|   |   |-BinaryOperator 0x136926f20 <line:43:3, col:20> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x1400097a0 <col:3> 'char *' lvalue Var 0x137027680 'ptr' 'char *'
|   |   | `-CallExpr 0x136926ef8 <col:9, col:20> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x136926eb8 <col:9> 'int ()' Function 0x136926e00 'dirname' 'int ()'
|   |   |   `-RecoveryExpr 0x136926ed8 <col:17> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x1369272b0 <line:45:3, col:33> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1369271d8 <col:3> 'void *(void *, int, unsigned long)' Function 0x136926f88 'memset' 'void *(void *, int, unsigned long)'
|   |   | |-RecoveryExpr 0x1369271f8 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-IntegerLiteral 0x136927218 <col:17> 'int' 0
|   |   | `-UnaryExprOrTypeTraitExpr 0x136927278 <col:20, col:32> 'unsigned long' contains-errors sizeof
|   |   |   `-ParenExpr 0x136927258 <col:26, col:32> '<dependent type>' contains-errors lvalue
|   |   |     `-RecoveryExpr 0x136927238 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x136927560 <line:46:3, line:49:3>
|   |   | |-UnaryOperator 0x136927378 <line:46:7, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-CallExpr 0x136927348 <col:8, col:27> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x1369272e8 <col:8> 'int ()' Function 0x140009460 'realpath' 'int ()'
|   |   | |   |-DeclRefExpr 0x136927308 <col:17> 'char *' lvalue Var 0x137027680 'ptr' 'char *'
|   |   | |   `-RecoveryExpr 0x136927328 <col:22> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x136927548 <col:30, line:49:3>
|   |   |   `-CallExpr 0x1369274e8 <line:47:4, col:19> 'int'
|   |   |     |-ImplicitCastExpr 0x1369274d0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x136927470 <col:4> 'int ()' Function 0x1369273b8 'INFO' 'int ()'
|   |   |     |-ImplicitCastExpr 0x136927518 <col:9> 'char *' <ArrayToPointerDecay>
|   |   |     | `-StringLiteral 0x136927490 <col:9> 'char[4]' lvalue "STR"
|   |   |     `-ImplicitCastExpr 0x136927530 <col:16> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1369274b0 <col:16> 'char *' lvalue Var 0x137027680 'ptr' 'char *'
|   |   |-IfStmt 0x136927760 <line:51:3, line:52:39>
|   |   | |-BinaryOperator 0x136927618 <line:51:7, col:19> 'int' contains-errors '!='
|   |   | | |-ArraySubscriptExpr 0x1369275d8 <col:7, col:14> '<dependent type>' contains-errors lvalue
|   |   | | | |-ImplicitCastExpr 0x1369275c0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | | `-RecoveryExpr 0x136927580 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | | `-IntegerLiteral 0x1369275a0 <col:13> 'int' 1
|   |   | | `-IntegerLiteral 0x1369275f8 <col:19> 'int' 0
|   |   | `-CallExpr 0x136927728 <line:52:4, col:39> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x136927638 <col:4> 'unsigned long (char *, const char *, unsigned long)' Function 0x1370292d8 'strlcat' 'unsigned long (char *, const char *, unsigned long)'
|   |   |   |-RecoveryExpr 0x136927658 <col:12> '<dependent type>' contains-errors lvalue
|   |   |   |-StringLiteral 0x136927678 <col:19> 'char[4]' lvalue "STR"
|   |   |   `-UnaryExprOrTypeTraitExpr 0x1369276d8 <col:26, col:38> 'unsigned long' contains-errors sizeof
|   |   |     `-ParenExpr 0x1369276b8 <col:32, col:38> '<dependent type>' contains-errors lvalue
|   |   |       `-RecoveryExpr 0x136927698 <col:33> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x136927870 <line:53:3, col:37> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x136927780 <col:3> 'unsigned long (char *, const char *, unsigned long)' Function 0x1370292d8 'strlcat' 'unsigned long (char *, const char *, unsigned long)'
|   |     |-RecoveryExpr 0x1369277a0 <col:11> '<dependent type>' contains-errors lvalue
|   |     |-DeclRefExpr 0x1369277c0 <col:18> 'char *' lvalue Var 0x137027600 'name' 'char *'
|   |     `-UnaryExprOrTypeTraitExpr 0x136927820 <col:24, col:36> 'unsigned long' contains-errors sizeof
|   |       `-ParenExpr 0x136927800 <col:30, col:36> '<dependent type>' contains-errors lvalue
|   |         `-RecoveryExpr 0x1369277e0 <col:31> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x136927ca8 <line:56:2, line:59:2>
|   | |-RecoveryExpr 0x136927c18 <line:56:6, col:50> '_Bool' contains-errors
|   | `-CompoundStmt 0x136927c98 <col:53, line:59:2>
|   `-ReturnStmt 0x136927ce8 <line:61:2, col:9>
|     `-RecoveryExpr 0x136927cc8 <col:9> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x137027878 <line:8:2> col:2 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x137027978 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1370279e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x137027a48 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x137027920 <<invalid sloc>> Implicit 969
|-FunctionDecl 0x137027f28 <line:10:16> col:16 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x137028028 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x137027fd0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1370292d8 <line:16:5> col:5 implicit used strlcat 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x1370293d8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x137029440 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1370294a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x137029380 <<invalid sloc>> Implicit 970
|-FunctionDecl 0x137029870 <line:22:16> col:16 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x137029970 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1370299d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x137029918 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x137029bc8 <line:23:3> col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x137029cc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x137029d30 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x137029d98 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x137029c70 <<invalid sloc>> Implicit 884
|-FunctionDecl 0x140008d78 <line:32:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x140008e78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x140008ee0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x140008f48 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x140008e20 <<invalid sloc>> Implicit 882
|-FunctionDecl 0x136926f88 <line:45:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x136927088 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1369270f0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x136927158 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x136927030 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x136927968 <line:56:19> col:19 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x136927a68 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x136927ad0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x136927b38 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x136927a10 <<invalid sloc>> Implicit 888
