TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10100bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10100dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10100dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x101026a08 <dataset_diviso_filec/func934_nonvuln.c:1:1, line:81:1> line:1:1 invalid sprint_realloc_counter64 'int (char **, int *, int *, int, const int *, const struct enum_list *, const char *, const char *)'
  |-ParmVarDecl 0x10100dd28 <col:26, col:36> col:36 used buf 'char **'
  |-ParmVarDecl 0x10100ddd8 <col:41, col:50> col:50 invalid buf_len 'int *'
  |-ParmVarDecl 0x10100de58 <col:59, col:68> col:68 invalid out_len 'int *'
  |-ParmVarDecl 0x10100ded8 <line:2:26, col:30> col:30 used allow_realloc 'int'
  |-ParmVarDecl 0x10100df58 <line:3:26, col:56> col:56 invalid var 'const int *'
  |-ParmVarDecl 0x101026758 <line:4:26, col:50> col:50 enums 'const struct enum_list *'
  |-ParmVarDecl 0x1010267d8 <line:5:26, col:38> col:38 hint 'const char *'
  |-ParmVarDecl 0x101026858 <col:44, col:56> col:56 used units 'const char *'
  `-CompoundStmt 0x101029898 <line:6:1, line:81:1>
    |-DeclStmt 0x101026bc0 <line:7:5, col:42>
    | `-VarDecl 0x101026b58 <col:5, col:21> col:21 invalid a64buf 'char'
    |-IfStmt 0x101028e30 <line:9:5, line:24:5>
    | |-BinaryOperator 0x101026c98 <line:9:9, col:22> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x101026bf8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->type
    | | | `-RecoveryExpr 0x101026bd8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x101026c78 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x101028e10 <line:14:11, line:24:5>
    |   |-IfStmt 0x1010272d8 <line:15:9, line:20:9>
    |   | |-UnaryOperator 0x101026f18 <line:15:13, line:16:67> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x101026ee8 <line:15:14, line:16:67> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x101026e10 <line:15:14> 'int ()' Function 0x101026d58 'netsnmp_ds_get_boolean' 'int ()'
    |   | |   |-RecoveryExpr 0x101026ea8 <line:16:17> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x101026ec8 <col:40> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x1010272b8 <col:70, line:20:9>
    |   |   |-DeclStmt 0x101027050 <line:17:13, col:42>
    |   |   | `-VarDecl 0x101026f80 <col:13, col:37> col:29 used str 'char[4]' cinit
    |   |   |   `-StringLiteral 0x101027030 <col:37> 'char[4]' "STR"
    |   |   `-IfStmt 0x101027298 <line:18:13, line:19:24>
    |   |     |-UnaryOperator 0x101027250 <line:18:17, col:71> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |     | `-CallExpr 0x101027208 <col:18, col:71> '<dependent type>' contains-errors
    |   |     |   |-DeclRefExpr 0x101027148 <col:18> 'int ()' Function 0x101027090 'snmp_strcat' 'int ()'
    |   |     |   |-DeclRefExpr 0x101027168 <col:30> 'char **' lvalue ParmVar 0x10100dd28 'buf' 'char **'
    |   |     |   |-RecoveryExpr 0x101027188 <col:35> '<dependent type>' contains-errors lvalue
    |   |     |   |-RecoveryExpr 0x1010271a8 <col:44> '<dependent type>' contains-errors lvalue
    |   |     |   |-DeclRefExpr 0x1010271c8 <col:53> 'int' lvalue ParmVar 0x10100ded8 'allow_realloc' 'int'
    |   |     |   `-DeclRefExpr 0x1010271e8 <col:68> 'char[4]' lvalue Var 0x101026f80 'str' 'char[4]'
    |   |     `-ReturnStmt 0x101027288 <line:19:17, col:24>
    |   |       `-IntegerLiteral 0x101027268 <col:24> 'int' 0
    |   `-ReturnStmt 0x101028e00 <line:21:9, line:23:47>
    |     `-CallExpr 0x1010275a0 <line:21:16, line:23:47> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1010273d8 <line:21:16> 'int ()' Function 0x101027320 'sprint_realloc_by_type' 'int ()'
    |       |-DeclRefExpr 0x1010273f8 <col:39> 'char **' lvalue ParmVar 0x10100dd28 'buf' 'char **'
    |       |-RecoveryExpr 0x101027418 <col:44> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x101027438 <col:53> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x101027458 <line:22:43> 'int' lvalue ParmVar 0x10100ded8 'allow_realloc' 'int'
    |       |-RecoveryExpr 0x101027478 <col:58> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x101027540 <col:63> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x101027560 <col:69> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x101027580 <line:23:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1010291f0 <line:26:5, line:59:5>
    | |-UnaryOperator 0x101028f58 <line:26:9, col:82> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x101028f28 <col:10, col:82> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x101028e50 <col:10> 'int ()' Function 0x101026d58 'netsnmp_ds_get_boolean' 'int ()'
    | |   |-RecoveryExpr 0x101028ee8 <col:33> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x101028f08 <col:56> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1010291d8 <col:85, line:59:5>
    |   `-IfStmt 0x1010291b8 <line:52:13, line:55:13>
    |     |-UnaryOperator 0x101029158 <line:52:17, line:53:61> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-CallExpr 0x101029110 <line:52:18, line:53:61> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x101029050 <line:52:18> 'int ()' Function 0x101028f98 'snmp_cstrcat' 'int ()'
    |     |   |-DeclRefExpr 0x101029070 <line:53:18> 'char **' lvalue ParmVar 0x10100dd28 'buf' 'char **'
    |     |   |-RecoveryExpr 0x101029090 <col:23> '<dependent type>' contains-errors lvalue
    |     |   |-RecoveryExpr 0x1010290b0 <col:32> '<dependent type>' contains-errors lvalue
    |     |   |-DeclRefExpr 0x1010290d0 <col:41> 'int' lvalue ParmVar 0x10100ded8 'allow_realloc' 'int'
    |     |   `-StringLiteral 0x1010290f0 <col:56> 'char[4]' lvalue "STR"
    |     `-CompoundStmt 0x1010291a0 <col:64, line:55:13>
    |       `-ReturnStmt 0x101029190 <line:54:17, col:24>
    |         `-IntegerLiteral 0x101029170 <col:24> 'int' 0
    |-CallExpr 0x1010293e0 <line:68:9, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1010292f0 <col:9> 'int ()' Function 0x101029238 'printU64' 'int ()'
    | |-RecoveryExpr 0x101029310 <col:18> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x101029398 <col:26, col:35> '<dependent type>' contains-errors lvalue .counter64
    |   `-CXXDependentScopeMemberExpr 0x101029350 <col:26, col:31> '<dependent type>' contains-errors lvalue ->val
    |     `-RecoveryExpr 0x101029330 <col:26> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x101029578 <line:69:9, line:71:9>
    | |-UnaryOperator 0x101029518 <line:69:13, col:71> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x1010294d0 <col:14, col:71> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x101029410 <col:14> 'int ()' Function 0x101028f98 'snmp_cstrcat' 'int ()'
    | |   |-DeclRefExpr 0x101029430 <col:27> 'char **' lvalue ParmVar 0x10100dd28 'buf' 'char **'
    | |   |-RecoveryExpr 0x101029450 <col:32> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x101029470 <col:41> '<dependent type>' contains-errors lvalue
    | |   |-DeclRefExpr 0x101029490 <col:50> 'int' lvalue ParmVar 0x10100ded8 'allow_realloc' 'int'
    | |   `-RecoveryExpr 0x1010294b0 <col:65> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x101029560 <col:74, line:71:9>
    |   `-ReturnStmt 0x101029550 <line:70:13, col:20>
    |     `-IntegerLiteral 0x101029530 <col:20> 'int' 0
    |-IfStmt 0x101029848 <line:76:5, line:79:5>
    | |-ImplicitCastExpr 0x1010295b8 <line:76:9> 'const char *' <LValueToRValue>
    | | `-DeclRefExpr 0x101029598 <col:9> 'const char *' lvalue ParmVar 0x101026858 'units' 'const char *'
    | `-CompoundStmt 0x101029830 <col:16, line:79:5>
    |   `-ReturnStmt 0x101029820 <line:77:9, line:78:77>
    |     `-ParenExpr 0x101029800 <line:77:16, line:78:77> 'int' contains-errors
    |       `-BinaryOperator 0x1010297e0 <line:77:17, line:78:76> 'int' contains-errors '&&'
    |         |-CallExpr 0x101029690 <line:77:17, col:73> '<dependent type>' contains-errors
    |         | |-DeclRefExpr 0x1010295d0 <col:17> 'int ()' Function 0x101028f98 'snmp_cstrcat' 'int ()'
    |         | |-DeclRefExpr 0x1010295f0 <col:30> 'char **' lvalue ParmVar 0x10100dd28 'buf' 'char **'
    |         | |-RecoveryExpr 0x101029610 <col:35> '<dependent type>' contains-errors lvalue
    |         | |-RecoveryExpr 0x101029630 <col:44> '<dependent type>' contains-errors lvalue
    |         | |-DeclRefExpr 0x101029650 <col:53> 'int' lvalue ParmVar 0x10100ded8 'allow_realloc' 'int'
    |         | `-StringLiteral 0x101029670 <col:68> 'char[4]' lvalue "STR"
    |         `-CallExpr 0x101029798 <line:78:20, col:76> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x1010296d8 <col:20> 'int ()' Function 0x101028f98 'snmp_cstrcat' 'int ()'
    |           |-DeclRefExpr 0x1010296f8 <col:33> 'char **' lvalue ParmVar 0x10100dd28 'buf' 'char **'
    |           |-RecoveryExpr 0x101029718 <col:38> '<dependent type>' contains-errors lvalue
    |           |-RecoveryExpr 0x101029738 <col:47> '<dependent type>' contains-errors lvalue
    |           |-DeclRefExpr 0x101029758 <col:56> 'int' lvalue ParmVar 0x10100ded8 'allow_realloc' 'int'
    |           `-DeclRefExpr 0x101029778 <col:71> 'const char *' lvalue ParmVar 0x101026858 'units' 'const char *'
    `-ReturnStmt 0x101029888 <line:80:5, col:12>
      `-IntegerLiteral 0x101029868 <col:12> 'int' 1
