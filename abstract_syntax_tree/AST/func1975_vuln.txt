TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-FunctionDecl 0x12d826b68 <dataset_diviso_filec/func1975_vuln.c:1:1, line:71:1> line:1:1 check_compat_entry_size_and_hooks 'int (struct compat_arpt_entry *, struct xt_table_info *, unsigned int *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, const char *)'
| |-ParmVarDecl 0x12d80e248 <col:35, col:61> col:61 used e 'struct compat_arpt_entry *'
| |-ParmVarDecl 0x12d826628 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
| |-ParmVarDecl 0x12d8266d8 <line:3:7, col:21> col:21 used size 'unsigned int *'
| |-ParmVarDecl 0x12d826788 <line:4:7, col:28> col:28 used base 'const unsigned char *'
| |-ParmVarDecl 0x12d826808 <line:5:7, col:28> col:28 used limit 'const unsigned char *'
| |-ParmVarDecl 0x12d8268b8 <line:6:7, col:27> col:27 used hook_entries 'const unsigned int *'
| |-ParmVarDecl 0x12d826938 <line:7:7, col:27> col:27 used underflows 'const unsigned int *'
| |-ParmVarDecl 0x12d8269b8 <line:8:7, col:19> col:19 name 'const char *'
| `-CompoundStmt 0x12d82d740 <line:9:1, line:71:1>
|   |-DeclStmt 0x12d826e88 <line:10:2, col:27>
|   | |-RecordDecl 0x12d826c98 <col:2, col:9> col:9 struct xt_entry_target
|   | `-VarDecl 0x12d826e08 <col:2, col:26> col:26 used t 'struct xt_entry_target *'
|   |-DeclStmt 0x12d827088 <line:11:2, col:26>
|   | |-RecordDecl 0x12d826ea0 <col:2, col:9> col:9 struct xt_target
|   | `-VarDecl 0x12d827008 <col:2, col:20> col:20 used target 'struct xt_target *'
|   |-DeclStmt 0x12d827120 <line:12:2, col:27>
|   | `-VarDecl 0x12d8270b8 <col:2, col:15> col:15 used entry_offset 'unsigned int'
|   |-DeclStmt 0x12d8272d8 <line:13:2, col:17>
|   | |-VarDecl 0x12d827150 <col:2, col:6> col:6 used ret 'int'
|   | |-VarDecl 0x12d8271d0 <col:2, col:11> col:11 used off 'int'
|   | `-VarDecl 0x12d827250 <col:2, col:16> col:16 used h 'int'
|   |-CallExpr 0x12d827508 <line:15:2, col:19> 'int'
|   | |-ImplicitCastExpr 0x12d8274f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12d827420 <col:2> 'int ()' Function 0x12d827368 'duprintf' 'int ()'
|   | |-ImplicitCastExpr 0x12d827538 <col:11> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x12d827480 <col:11> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x12d827550 <col:18> 'struct compat_arpt_entry *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12d8274a0 <col:18> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *'
|   |-IfStmt 0x12d829d58 <line:16:2, line:20:2>
|   | |-RecoveryExpr 0x12d829b58 <line:16:6, line:17:63> '_Bool' contains-errors
|   | `-CompoundStmt 0x12d829d38 <col:70, line:20:2>
|   |   |-CallExpr 0x12d829c10 <line:18:3, col:27> 'int'
|   |   | |-ImplicitCastExpr 0x12d829bf8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12d829b78 <col:3> 'int ()' Function 0x12d827368 'duprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x12d829c48 <col:12> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x12d829b98 <col:12> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x12d829c60 <col:19> 'struct compat_arpt_entry *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12d829bb8 <col:19> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *'
|   |   | `-ImplicitCastExpr 0x12d829c78 <col:22> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12d829bd8 <col:22> 'const unsigned char *' lvalue ParmVar 0x12d826808 'limit' 'const unsigned char *'
|   |   `-ReturnStmt 0x12d829d28 <line:19:3, col:11>
|   |     `-UnaryOperator 0x12d829d10 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x12d829cf8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x12d829cd8 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d82a0d8 <line:22:2, line:27:2>
|   | |-RecoveryExpr 0x12d829ef8 <line:22:6, line:23:45> '_Bool' contains-errors
|   | `-CompoundStmt 0x12d82a0b8 <col:48, line:27:2>
|   |   |-CallExpr 0x12d829fd8 <line:24:3, line:25:22> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12d829f18 <line:24:3> 'int ()' Function 0x12d827368 'duprintf' 'int ()'
|   |   | |-StringLiteral 0x12d829f38 <col:12> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x12d829f58 <line:25:5> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *'
|   |   | `-RecoveryExpr 0x12d829fb0 <col:8, col:11> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x12d829f78 <col:8> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *'
|   |   `-ReturnStmt 0x12d82a0a8 <line:26:3, col:11>
|   |     `-UnaryOperator 0x12d82a090 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x12d82a078 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x12d82a058 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12d82a428 <line:30:2, col:42> 'int' '='
|   | |-DeclRefExpr 0x12d82a0f8 <col:2> 'int' lvalue Var 0x12d827150 'ret' 'int'
|   | `-CallExpr 0x12d82a400 <col:8, col:42> 'int'
|   |   |-ImplicitCastExpr 0x12d82a3e8 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12d82a1f8 <col:8> 'int ()' Function 0x12d82a140 'check_entry' 'int ()'
|   |   `-CStyleCastExpr 0x12d82a3c0 <col:20, col:41> 'struct arpt_entry *' <BitCast>
|   |     `-ImplicitCastExpr 0x12d82a3a8 <col:41> 'struct compat_arpt_entry *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x12d82a2c0 <col:41> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *'
|   |-IfStmt 0x12d82a4c8 <line:31:2, line:32:10>
|   | |-ImplicitCastExpr 0x12d82a468 <line:31:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12d82a448 <col:6> 'int' lvalue Var 0x12d827150 'ret' 'int'
|   | `-ReturnStmt 0x12d82a4b8 <line:32:3, col:10>
|   |   `-ImplicitCastExpr 0x12d82a4a0 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12d82a480 <col:10> 'int' lvalue Var 0x12d827150 'ret' 'int'
|   |-BinaryOperator 0x12d82a6c8 <line:35:2, col:37> 'unsigned int' '='
|   | |-DeclRefExpr 0x12d82a580 <col:2> 'unsigned int' lvalue Var 0x12d8270b8 'entry_offset' 'unsigned int'
|   | `-ImplicitCastExpr 0x12d82a6b0 <col:17, col:37> 'unsigned int' <IntegralCast>
|   |   `-BinaryOperator 0x12d82a690 <col:17, col:37> 'long' '-'
|   |     |-CStyleCastExpr 0x12d82a5f0 <col:17, col:25> 'void *' <BitCast>
|   |     | `-ImplicitCastExpr 0x12d82a5d8 <col:25> 'struct compat_arpt_entry *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x12d82a5a0 <col:25> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *'
|   |     `-CStyleCastExpr 0x12d82a668 <col:29, col:37> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x12d82a650 <col:37> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x12d82a618 <col:37> 'const unsigned char *' lvalue ParmVar 0x12d826788 'base' 'const unsigned char *'
|   |-BinaryOperator 0x12d82a898 <line:37:2, col:30> 'struct xt_entry_target *' '='
|   | |-DeclRefExpr 0x12d82a6e8 <col:2> 'struct xt_entry_target *' lvalue Var 0x12d826e08 't' 'struct xt_entry_target *'
|   | `-ImplicitCastExpr 0x12d82a880 <col:6, col:30> 'struct xt_entry_target *' <IntegralToPointer>
|   |   `-CallExpr 0x12d82a840 <col:6, col:30> 'int'
|   |     |-ImplicitCastExpr 0x12d82a828 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d82a7e8 <col:6> 'int ()' Function 0x12d82a730 'compat_arpt_get_target' 'int ()'
|   |     `-ImplicitCastExpr 0x12d82a868 <col:29> 'struct compat_arpt_entry *' <LValueToRValue>
|   |       `-DeclRefExpr 0x12d82a808 <col:29> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *'
|   |-BinaryOperator 0x12d82bc90 <line:38:2, line:39:24> 'struct xt_target *' contains-errors '='
|   | |-DeclRefExpr 0x12d82a8b8 <line:38:2> 'struct xt_target *' lvalue Var 0x12d827008 'target' 'struct xt_target *'
|   | `-CallExpr 0x12d82bc58 <col:11, line:39:24> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d82a9b8 <line:38:11> 'int ()' Function 0x12d82a900 'xt_request_find_target' 'int ()'
|   |   |-RecoveryExpr 0x12d82bc38 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CXXDependentScopeMemberExpr 0x12d82baa8 <col:47, col:57> '<dependent type>' contains-errors lvalue .name
|   |   | `-CXXDependentScopeMemberExpr 0x12d82ba60 <col:47, col:52> '<dependent type>' contains-errors lvalue .user
|   |   |   `-RecoveryExpr 0x12d82ba38 <col:47, col:50> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x12d82ba00 <col:47> 'struct xt_entry_target *' lvalue Var 0x12d826e08 't' 'struct xt_entry_target *'
|   |   `-CXXDependentScopeMemberExpr 0x12d82bb98 <line:39:6, col:16> '<dependent type>' contains-errors lvalue .revision
|   |     `-CXXDependentScopeMemberExpr 0x12d82bb50 <col:6, col:11> '<dependent type>' contains-errors lvalue .user
|   |       `-RecoveryExpr 0x12d82bb28 <col:6, col:9> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x12d82baf0 <col:6> 'struct xt_entry_target *' lvalue Var 0x12d826e08 't' 'struct xt_entry_target *'
|   |-IfStmt 0x12d82c1d0 <line:40:2, line:45:2>
|   | |-CallExpr 0x12d82bde8 <line:40:6, col:19> 'int'
|   | | |-ImplicitCastExpr 0x12d82bdd0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x12d82bd90 <col:6> 'int ()' Function 0x12d82bcd8 'IS_ERR' 'int ()'
|   | | `-ImplicitCastExpr 0x12d82be10 <col:13> 'struct xt_target *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d82bdb0 <col:13> 'struct xt_target *' lvalue Var 0x12d827008 'target' 'struct xt_target *'
|   | `-CompoundStmt 0x12d82c1a8 <col:22, line:45:2>
|   |   |-CallExpr 0x12d82bf58 <line:41:3, line:42:19> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12d82be28 <line:41:3> 'int ()' Function 0x12d827368 'duprintf' 'int ()'
|   |   | |-StringLiteral 0x12d82be48 <col:12> 'char[4]' lvalue "STR"
|   |   | `-CXXDependentScopeMemberExpr 0x12d82bf10 <line:42:5, col:15> '<dependent type>' contains-errors lvalue .name
|   |   |   `-CXXDependentScopeMemberExpr 0x12d82bec8 <col:5, col:10> '<dependent type>' contains-errors lvalue .user
|   |   |     `-RecoveryExpr 0x12d82bea0 <col:5, col:8> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x12d82be68 <col:5> 'struct xt_entry_target *' lvalue Var 0x12d826e08 't' 'struct xt_entry_target *'
|   |   |-BinaryOperator 0x12d82c120 <line:43:3, col:23> 'int' '='
|   |   | |-DeclRefExpr 0x12d82bf88 <col:3> 'int' lvalue Var 0x12d827150 'ret' 'int'
|   |   | `-CallExpr 0x12d82c0e0 <col:9, col:23> 'int'
|   |   |   |-ImplicitCastExpr 0x12d82c0c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12d82c088 <col:9> 'int ()' Function 0x12d82bfd0 'PTR_ERR' 'int ()'
|   |   |   `-ImplicitCastExpr 0x12d82c108 <col:17> 'struct xt_target *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12d82c0a8 <col:17> 'struct xt_target *' lvalue Var 0x12d827008 'target' 'struct xt_target *'
|   |   `-GotoStmt 0x12d82c190 <line:44:3, col:8> 'out' 0x12d82c140
|   |-BinaryOperator 0x12d82c300 <line:46:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12d82c298 <col:2, col:14> '<dependent type>' contains-errors lvalue .target
|   | | `-CXXDependentScopeMemberExpr 0x12d82c250 <col:2, col:7> '<dependent type>' contains-errors lvalue .kernel
|   | |   `-RecoveryExpr 0x12d82c228 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12d82c1f0 <col:2> 'struct xt_entry_target *' lvalue Var 0x12d826e08 't' 'struct xt_entry_target *'
|   | `-DeclRefExpr 0x12d82c2e0 <col:23> 'struct xt_target *' lvalue Var 0x12d827008 'target' 'struct xt_target *'
|   |-CompoundAssignOperator 0x12d82c4b8 <line:48:2, col:39> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x12d82c320 <col:2> 'int' lvalue Var 0x12d8271d0 'off' 'int'
|   | `-CallExpr 0x12d82c478 <col:9, col:39> 'int'
|   |   |-ImplicitCastExpr 0x12d82c460 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12d82c420 <col:9> 'int ()' Function 0x12d82c368 'xt_compat_target_offset' 'int ()'
|   |   `-ImplicitCastExpr 0x12d82c4a0 <col:33> 'struct xt_target *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12d82c440 <col:33> 'struct xt_target *' lvalue Var 0x12d827008 'target' 'struct xt_target *'
|   |-CompoundAssignOperator 0x12d82c588 <line:49:2, col:11> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-UnaryOperator 0x12d82c520 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12d82c508 <col:3> 'unsigned int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d82c4e8 <col:3> 'unsigned int *' lvalue ParmVar 0x12d8266d8 'size' 'unsigned int *'
|   | `-ImplicitCastExpr 0x12d82c570 <col:11> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x12d82c558 <col:11> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12d82c538 <col:11> 'int' lvalue Var 0x12d8271d0 'off' 'int'
|   |-IfStmt 0x12d82c7b8 <line:51:2, line:52:8>
|   | |-ImplicitCastExpr 0x12d82c738 <line:51:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12d82c718 <col:6> 'int' lvalue Var 0x12d827150 'ret' 'int'
|   | `-GotoStmt 0x12d82c7a0 <line:52:3, col:8> 'release_target' 0x12d82c750
|   |-CallExpr 0x12d82d350 <line:63:2, col:45> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12d82d1f8 <col:2> 'void *(void *, int, unsigned long)' Function 0x12d82cfa8 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x12d82d278 <col:9, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x12d82d250 <col:10, col:13> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12d82d218 <col:10> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *'
|   | |-IntegerLiteral 0x12d82d290 <col:23> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x12d82d330 <col:26, col:44> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x12d82d310 <col:32, col:44> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x12d82d2e8 <col:33, col:36> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x12d82d2b0 <col:33> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *' non_odr_use_unevaluated
|   |-BinaryOperator 0x12d82d408 <line:64:2, col:16> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d82d3c0 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d82d388 <col:2> 'struct compat_arpt_entry *' lvalue ParmVar 0x12d80e248 'e' 'struct compat_arpt_entry *'
|   | `-IntegerLiteral 0x12d82d3e8 <col:16> 'int' 0
|   |-ReturnStmt 0x12d82d448 <line:65:2, col:9>
|   | `-IntegerLiteral 0x12d82d428 <col:9> 'int' 0
|   |-LabelStmt 0x12d82d6b8 <line:67:1, line:68:35> 'release_target'
|   | `-CallExpr 0x12d82d690 <col:2, col:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d82d538 <col:2> 'int ()' Function 0x12d82d480 'module_put' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x12d82d648 <col:13, col:33> '<dependent type>' contains-errors lvalue ->me
|   |     `-CXXDependentScopeMemberExpr 0x12d82d600 <col:13, col:25> '<dependent type>' contains-errors lvalue .target
|   |       `-CXXDependentScopeMemberExpr 0x12d82d5b8 <col:13, col:18> '<dependent type>' contains-errors lvalue .kernel
|   |         `-RecoveryExpr 0x12d82d590 <col:13, col:16> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x12d82d558 <col:13> 'struct xt_entry_target *' lvalue Var 0x12d826e08 't' 'struct xt_entry_target *'
|   `-LabelStmt 0x12d82d720 <line:69:1, line:70:9> 'out'
|     `-ReturnStmt 0x12d82d710 <col:2, col:9>
|       `-ImplicitCastExpr 0x12d82d6f8 <col:9> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x12d82d6d8 <col:9> 'int' lvalue Var 0x12d827150 'ret' 'int'
`-FunctionDecl 0x12d82cfa8 <line:63:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x12d82d0a8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12d82d110 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x12d82d178 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12d82d050 <<invalid sloc>> Implicit 900
