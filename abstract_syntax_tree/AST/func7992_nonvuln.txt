TranslationUnitDecl 0x143055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1430564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x143055bd0 '__int128'
|-TypedefDecl 0x143056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x143055bf0 'unsigned __int128'
|-TypedefDecl 0x14380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14380bc00 'struct __NSConstantString_tag'
|   `-Record 0x143056580 '__NSConstantString_tag'
|-TypedefDecl 0x14380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x143055d90 '__SVInt8_t'
|-TypedefDecl 0x14380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x143055db0 '__SVInt16_t'
|-TypedefDecl 0x14380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x143055dd0 '__SVInt32_t'
|-TypedefDecl 0x14380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x143055df0 '__SVInt64_t'
|-TypedefDecl 0x14380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x143055e10 '__SVUint8_t'
|-TypedefDecl 0x14380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x143055e30 '__SVUint16_t'
|-TypedefDecl 0x14380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x143055e50 '__SVUint32_t'
|-TypedefDecl 0x14380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x143055e70 '__SVUint64_t'
|-TypedefDecl 0x14380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x143055e90 '__SVFloat16_t'
|-TypedefDecl 0x14380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x143055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x143055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x143055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x143055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x143055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x143055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x143055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x143055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x143055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x143055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x143055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x143056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x143056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x143056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x143056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x143056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1430560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1430560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1430560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x143056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x143056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x143056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x143056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x143056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1430561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1430561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1430561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x143056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x143056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x143056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x143056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x143056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1430562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1430562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1430562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x143056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x143056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x143056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x143056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x143056390 '__SVBool_t'
|-TypedefDecl 0x14380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1430563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1430563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1430563f0 '__SVCount_t'
|-TypedefDecl 0x14380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14380dbb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-TypedefDecl 0x14380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14380dbb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-FunctionDecl 0x14380e068 <dataset_diviso_filec/func7992_nonvuln.c:1:1, line:67:1> line:1:1 invalid dirvote_add_signatures_to_pending_consensus 'int (int *, int *, const char *, int, const char **)'
| |-ParmVarDecl 0x14380dd28 <line:2:24, col:45> col:45 referenced invalid pc 'int *'
| |-ParmVarDecl 0x14380dda8 <line:3:24, col:50> col:50 invalid sigs 'int *'
| |-ParmVarDecl 0x14380de28 <line:4:24, col:36> col:36 used source 'const char *'
| |-ParmVarDecl 0x14380dea8 <line:5:24, col:28> col:28 used severity 'int'
| |-ParmVarDecl 0x14380df58 <line:6:24, col:37> col:37 used msg_out 'const char **'
| `-CompoundStmt 0x14382afa8 <line:7:1, line:67:1>
|   |-DeclStmt 0x14380e1b8 <line:8:3, col:26>
|   | `-VarDecl 0x14380e150 <col:3, col:15> col:15 used flavor_name 'const char *'
|   |-DeclStmt 0x14380e288 <line:9:3, col:13>
|   | `-VarDecl 0x14380e1e8 <col:3, col:12> col:7 used r 'int' cinit
|   |   `-UnaryOperator 0x14380e270 <col:11, col:12> 'int' prefix '-'
|   |     `-IntegerLiteral 0x14380e250 <col:12> 'int' 1
|   |-CallExpr 0x143827488 <line:12:3, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x143827400 <col:3> 'int ()' Function 0x14380e348 'tor_assert' 'int ()'
|   | `-CXXDependentScopeMemberExpr 0x143827440 <col:14, col:18> '<dependent type>' contains-errors lvalue ->consensus
|   |   `-RecoveryExpr 0x143827420 <col:14> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x143827538 <line:13:3, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1438274b0 <col:3> 'int ()' Function 0x14380e348 'tor_assert' 'int ()'
|   | `-CXXDependentScopeMemberExpr 0x1438274f0 <col:14, col:18> '<dependent type>' contains-errors lvalue ->body
|   |   `-RecoveryExpr 0x1438274d0 <col:14> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1438275e0 <line:14:3, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x143827560 <col:3> 'int ()' Function 0x14380e348 'tor_assert' 'int ()'
|   | `-RecoveryExpr 0x1438275c0 <col:14> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x143827800 <line:16:3, col:68> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x143827608 <col:3> 'const char *' lvalue Var 0x14380e150 'flavor_name' 'const char *'
|   | `-CallExpr 0x1438277d8 <col:17, col:68> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x143827708 <col:17> 'int ()' Function 0x143827650 'networkstatus_get_flavor_name' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x143827790 <col:47, col:62> '<dependent type>' contains-errors lvalue ->flavor
|   |     `-CXXDependentScopeMemberExpr 0x143827748 <col:47, col:51> '<dependent type>' contains-errors lvalue ->consensus
|   |       `-RecoveryExpr 0x143827728 <col:47> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x143827928 <line:17:3, col:14> 'const char *' contains-errors '='
|   | |-UnaryOperator 0x1438278f0 <col:3, col:4> 'const char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1438278d8 <col:4> 'const char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x143827820 <col:4> 'const char **' lvalue ParmVar 0x14380df58 'msg_out' 'const char **'
|   | `-RecoveryExpr 0x143827908 <col:14> '<dependent type>' contains-errors lvalue
|   |-CompoundStmt 0x143827f90 <line:19:3, line:23:3>
|   | `-CallExpr 0x143827f50 <line:21:5, line:22:65> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x143827bf8 <line:21:5> 'int ()' Function 0x143827b40 'log_info' 'int ()'
|   |   |-RecoveryExpr 0x143827e98 <col:14> '<dependent type>' contains-errors lvalue
|   |   |-StringLiteral 0x143827c70 <col:22> 'char[4]' lvalue "STR"
|   |   |-ConditionalOperator 0x143827f20 <line:22:14, col:51> '<dependent type>' contains-errors
|   |   | |-RecoveryExpr 0x143827eb8 <col:14> '<dependent type>' contains-errors lvalue
|   |   | |-CallExpr 0x143827ef8 <col:25, col:47> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x143827d88 <col:25> 'int ()' Function 0x143827cd0 'smartlist_len' 'int ()'
|   |   | | `-RecoveryExpr 0x143827ed8 <col:39> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x143827de8 <col:51> 'int' 0
|   |   `-DeclRefExpr 0x143827e38 <col:54> 'const char *' lvalue Var 0x14380e150 'flavor_name' 'const char *'
|   |-BinaryOperator 0x1438281f8 <line:24:3, line:25:70> 'int' contains-errors '='
|   | |-DeclRefExpr 0x143827fa8 <line:24:3> 'int' lvalue Var 0x14380e1e8 'r' 'int'
|   | `-CallExpr 0x1438281b0 <col:7, line:25:70> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1438280a8 <line:24:7> 'int ()' Function 0x143827ff0 'networkstatus_add_detached_signatures' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x1438280e8 <col:45, col:49> '<dependent type>' contains-errors lvalue ->consensus
|   |   | `-RecoveryExpr 0x1438280c8 <col:45> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x143828130 <col:60> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x143828150 <line:25:45> 'const char *' lvalue ParmVar 0x14380de28 'source' 'const char *'
|   |   |-DeclRefExpr 0x143828170 <col:53> 'int' lvalue ParmVar 0x14380dea8 'severity' 'int'
|   |   `-DeclRefExpr 0x143828190 <col:63> 'const char **' lvalue ParmVar 0x14380df58 'msg_out' 'const char **'
|   |-CallExpr 0x1438282e8 <line:26:3, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x143828218 <col:3> 'int ()' Function 0x143827b40 'log_info' 'int ()'
|   | |-RecoveryExpr 0x1438282c8 <col:12> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x143828250 <col:19> 'char[4]' lvalue "STR"
|   | `-DeclRefExpr 0x143828270 <col:26> 'int' lvalue Var 0x14380e1e8 'r' 'int'
|   |-IfStmt 0x14382ad28 <line:28:3, line:59:3> has_else
|   | |-BinaryOperator 0x143828378 <line:28:7, col:12> 'int' '>='
|   | | |-ImplicitCastExpr 0x143828360 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x143828320 <col:7> 'int' lvalue Var 0x14380e1e8 'r' 'int'
|   | | `-IntegerLiteral 0x143828340 <col:12> 'int' 1
|   | |-CompoundStmt 0x14382ab20 <col:15, line:55:3>
|   | | |-DeclStmt 0x143828e20 <line:29:5, line:30:56>
|   | | | `-VarDecl 0x143828c00 <line:29:5, line:30:55> line:29:11 used new_signatures 'char *' cinit
|   | | |   `-CallExpr 0x143828df0 <line:30:7, col:55> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x143828d48 <col:7> 'int ()' Function 0x143828c90 'networkstatus_format_signatures' 'int ()'
|   | | |     |-CXXDependentScopeMemberExpr 0x143828d88 <col:39, col:43> '<dependent type>' contains-errors lvalue ->consensus
|   | | |     | `-RecoveryExpr 0x143828d68 <col:39> '<dependent type>' contains-errors lvalue
|   | | |     `-IntegerLiteral 0x143828dd0 <col:54> 'int' 0
|   | | |-DeclStmt 0x143828f50 <line:31:5, col:24>
|   | | | |-VarDecl 0x143828e50 <col:5, col:11> col:11 used dst 'char *'
|   | | | `-VarDecl 0x143828ed0 <col:5, col:17> col:17 used dst_end 'char *'
|   | | |-IfStmt 0x143829100 <line:33:5, line:36:5>
|   | | | |-UnaryOperator 0x143828fa0 <line:33:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x143828f88 <col:10> 'char *' contains-errors <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x143828f68 <col:10> 'char *' contains-errors lvalue Var 0x143828c00 'new_signatures' 'char *'
|   | | | `-CompoundStmt 0x1438290e0 <col:26, line:36:5>
|   | | |   |-BinaryOperator 0x143829058 <line:34:7, col:18> 'const char *' '='
|   | | |   | |-UnaryOperator 0x143828ff0 <col:7, col:8> 'const char *' lvalue prefix '*' cannot overflow
|   | | |   | | `-ImplicitCastExpr 0x143828fd8 <col:8> 'const char **' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x143828fb8 <col:8> 'const char **' lvalue ParmVar 0x14380df58 'msg_out' 'const char **'
|   | | |   | `-ImplicitCastExpr 0x143829040 <col:18> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x143829028 <col:18> 'char *' <ArrayToPointerDecay>
|   | | |   |     `-StringLiteral 0x143829008 <col:18> 'char[4]' lvalue "STR"
|   | | |   `-GotoStmt 0x1438290c8 <line:35:7, col:12> 'err' 0x143829078
|   | | |-BinaryOperator 0x143829ab8 <line:41:5, col:33> 'char *' contains-errors '='
|   | | | |-DeclRefExpr 0x143829770 <col:5> 'char *' lvalue Var 0x143828e50 'dst' 'char *'
|   | | | `-CallExpr 0x143829a88 <col:11, col:33> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x1438299b0 <col:11> 'char *(const char *, const char *)' Function 0x1438297d0 'strstr' 'char *(const char *, const char *)'
|   | | |   |-CXXDependentScopeMemberExpr 0x1438299f0 <col:18, col:22> '<dependent type>' contains-errors lvalue ->body
|   | | |   | `-RecoveryExpr 0x1438299d0 <col:18> '<dependent type>' contains-errors lvalue
|   | | |   `-StringLiteral 0x143829a38 <col:28> 'char[4]' lvalue "STR"
|   | | |-CallExpr 0x143829b68 <line:42:5, col:19> 'int'
|   | | | |-ImplicitCastExpr 0x143829b50 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x143829ad8 <col:5> 'int ()' Function 0x14380e348 'tor_assert' 'int ()'
|   | | | `-ImplicitCastExpr 0x143829b90 <col:16> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x143829af8 <col:16> 'char *' lvalue Var 0x143828e50 'dst' 'char *'
|   | | |-CallExpr 0x14382a5b8 <line:43:5, col:45> 'unsigned long' contains-errors
|   | | | |-ImplicitCastExpr 0x14382a5a0 <col:5> 'unsigned long (*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14382a450 <col:5> 'unsigned long (char *, const char *, unsigned long)' Function 0x14382a200 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|   | | | |-ImplicitCastExpr 0x14382a5f0 <col:13> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14382a470 <col:13> 'char *' lvalue Var 0x143828e50 'dst' 'char *'
|   | | | |-ImplicitCastExpr 0x14382a620 <col:18> 'const char *' contains-errors <NoOp>
|   | | | | `-ImplicitCastExpr 0x14382a608 <col:18> 'char *' contains-errors <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x14382a490 <col:18> 'char *' contains-errors lvalue Var 0x143828c00 'new_signatures' 'char *'
|   | | | `-ImplicitCastExpr 0x14382a638 <col:34, col:42> 'unsigned long' <IntegralCast>
|   | | |   `-BinaryOperator 0x14382a520 <col:34, col:42> 'long' '-'
|   | | |     |-ImplicitCastExpr 0x14382a4f0 <col:34> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x14382a4b0 <col:34> 'char *' lvalue Var 0x143828ed0 'dst_end' 'char *'
|   | | |     `-ImplicitCastExpr 0x14382a508 <col:42> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x14382a4d0 <col:42> 'char *' lvalue Var 0x143828e50 'dst' 'char *'
|   | | |-CompoundStmt 0x14382a8d8 <line:46:5, line:52:5>
|   | | |-BinaryOperator 0x14382a988 <line:53:5, col:16> 'const char *' '='
|   | | | |-UnaryOperator 0x14382a920 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x14382a908 <col:6> 'const char **' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x14382a8e8 <col:6> 'const char **' lvalue ParmVar 0x14380df58 'msg_out' 'const char **'
|   | | | `-ImplicitCastExpr 0x14382a970 <col:16> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x14382a958 <col:16> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x14382a938 <col:16> 'char[4]' lvalue "STR"
|   | | `-CallExpr 0x14382aae0 <line:54:5, col:28> 'int' contains-errors
|   | |   |-ImplicitCastExpr 0x14382aac8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x14382aa88 <col:5> 'int ()' Function 0x14382a9d0 'tor_free' 'int ()'
|   | |   `-ImplicitCastExpr 0x14382ab08 <col:14> 'char *' contains-errors <LValueToRValue>
|   | |     `-DeclRefExpr 0x14382aaa8 <col:14> 'char *' contains-errors lvalue Var 0x143828c00 'new_signatures' 'char *'
|   | `-IfStmt 0x14382acf8 <line:55:10, line:59:3> has_else
|   |   |-BinaryOperator 0x14382abd0 <line:55:14, col:19> 'int' '=='
|   |   | |-ImplicitCastExpr 0x14382abb8 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14382ab78 <col:14> 'int' lvalue Var 0x14380e1e8 'r' 'int'
|   |   | `-IntegerLiteral 0x14382ab98 <col:19> 'int' 0
|   |   |-CompoundStmt 0x14382acb0 <col:22, line:57:3>
|   |   | `-BinaryOperator 0x14382ac90 <line:56:5, col:16> 'const char *' '='
|   |   |   |-UnaryOperator 0x14382ac28 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x14382ac10 <col:6> 'const char **' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x14382abf0 <col:6> 'const char **' lvalue ParmVar 0x14380df58 'msg_out' 'const char **'
|   |   |   `-ImplicitCastExpr 0x14382ac78 <col:16> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x14382ac60 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x14382ac40 <col:16> 'char[4]' lvalue "STR"
|   |   `-CompoundStmt 0x14382ace0 <line:57:10, line:59:3>
|   |     `-GotoStmt 0x14382acc8 <line:58:5, col:10> 'err' 0x143829078
|   |-GotoStmt 0x14382ada8 <line:61:3, col:8> 'done' 0x14382ad58
|   |-LabelStmt 0x14382af20 <line:62:2, line:64:16> 'err'
|   | `-IfStmt 0x14382af00 <line:63:3, line:64:16>
|   |   |-UnaryOperator 0x14382ae28 <line:63:7, col:9> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x14382ae10 <col:8, col:9> 'const char *' <LValueToRValue>
|   |   |   `-UnaryOperator 0x14382adf8 <col:8, col:9> 'const char *' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x14382ade0 <col:9> 'const char **' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14382adc0 <col:9> 'const char **' lvalue ParmVar 0x14380df58 'msg_out' 'const char **'
|   |   `-BinaryOperator 0x14382aee0 <line:64:5, col:16> 'const char *' '='
|   |     |-UnaryOperator 0x14382ae78 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x14382ae60 <col:6> 'const char **' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x14382ae40 <col:6> 'const char **' lvalue ParmVar 0x14380df58 'msg_out' 'const char **'
|   |     `-ImplicitCastExpr 0x14382aec8 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x14382aeb0 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x14382ae90 <col:16> 'char[4]' lvalue "STR"
|   `-LabelStmt 0x14382af88 <line:65:2, line:66:10> 'done'
|     `-ReturnStmt 0x14382af78 <col:3, col:10>
|       `-ImplicitCastExpr 0x14382af60 <col:10> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x14382af40 <col:10> 'int' lvalue Var 0x14380e1e8 'r' 'int'
|-FunctionDecl 0x143829158 <line:38:7> col:7 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x143829258 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x143829200 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1438297d0 <line:41:11> col:11 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1438298d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x143829938 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x143829878 <<invalid sloc>> Implicit 898
`-FunctionDecl 0x14382a200 <line:43:5> col:5 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x14382a300 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x14382a368 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14382a3d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14382a2a8 <<invalid sloc>> Implicit 969
