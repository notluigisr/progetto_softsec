TranslationUnitDecl 0x122055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1220564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122055bd0 '__int128'
|-TypedefDecl 0x122056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122055bf0 'unsigned __int128'
|-TypedefDecl 0x12280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12280bc00 'struct __NSConstantString_tag'
|   `-Record 0x122056580 '__NSConstantString_tag'
|-TypedefDecl 0x12280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122055d90 '__SVInt8_t'
|-TypedefDecl 0x12280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122055db0 '__SVInt16_t'
|-TypedefDecl 0x12280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122055dd0 '__SVInt32_t'
|-TypedefDecl 0x12280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122055df0 '__SVInt64_t'
|-TypedefDecl 0x12280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122055e10 '__SVUint8_t'
|-TypedefDecl 0x12280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122055e30 '__SVUint16_t'
|-TypedefDecl 0x12280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122055e50 '__SVUint32_t'
|-TypedefDecl 0x12280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122055e70 '__SVUint64_t'
|-TypedefDecl 0x12280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122055e90 '__SVFloat16_t'
|-TypedefDecl 0x12280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1220560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1220560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1220560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1220561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1220561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1220561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1220562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1220562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1220562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122056390 '__SVBool_t'
|-TypedefDecl 0x12280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1220563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1220563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1220563f0 '__SVCount_t'
|-TypedefDecl 0x12280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-TypedefDecl 0x12280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-FunctionDecl 0x122826748 <dataset_diviso_filec/func14898_nonvuln.c:1:1, line:20:1> line:1:12 test_append 'int (struct libmnt_test *, int, char **)' static
| |-ParmVarDecl 0x12280e248 <col:24, col:44> col:44 ts 'struct libmnt_test *'
| |-ParmVarDecl 0x12280e2c8 <col:48, col:52> col:52 used argc 'int'
| |-ParmVarDecl 0x122826600 <col:58, col:69> col:64 used argv 'char **'
| `-CompoundStmt 0x122829868 <line:2:1, line:20:1>
|   |-DeclStmt 0x1228269b8 <line:3:2, col:33>
|   | |-VarDecl 0x122826868 <col:2, col:22> col:14 used value 'const char *' cinit
|   | | `-RecoveryExpr 0x122826900 <col:22> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x122826938 <col:2, col:29> col:29 used name 'const char *'
|   |-DeclStmt 0x122826a50 <line:4:2, col:14>
|   | `-VarDecl 0x1228269e8 <col:2, col:8> col:8 used optstr 'char *'
|   |-DeclStmt 0x122826ae8 <line:5:2, col:8>
|   | `-VarDecl 0x122826a80 <col:2, col:6> col:6 used rc 'int'
|   |-IfStmt 0x122826c20 <line:7:2, line:8:11>
|   | |-BinaryOperator 0x122826b58 <line:7:6, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x122826b40 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x122826b00 <col:6> 'int' lvalue ParmVar 0x12280e2c8 'argc' 'int'
|   | | `-IntegerLiteral 0x122826b20 <col:13> 'int' 3
|   | `-ReturnStmt 0x122826c10 <line:8:3, col:11>
|   |   `-UnaryOperator 0x122826bf8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x122826be0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x122826bc0 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x122826eb0 <line:9:2, col:26> 'char *' '='
|   | |-DeclRefExpr 0x122826c40 <col:2> 'char *' lvalue Var 0x1228269e8 'optstr' 'char *'
|   | `-ImplicitCastExpr 0x122826e98 <col:11, col:26> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x122826e58 <col:11, col:26> 'int'
|   |     |-ImplicitCastExpr 0x122826e40 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x122826d70 <col:11> 'int ()' Function 0x122826cb8 'xstrdup' 'int ()'
|   |     `-ImplicitCastExpr 0x122826e80 <col:19, col:25> 'char *' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x122826de8 <col:19, col:25> 'char *' lvalue
|   |         |-ImplicitCastExpr 0x122826dd0 <col:19> 'char **' <LValueToRValue>
|   |         | `-DeclRefExpr 0x122826d90 <col:19> 'char **' lvalue ParmVar 0x122826600 'argv' 'char **'
|   |         `-IntegerLiteral 0x122826db0 <col:24> 'int' 1
|   |-BinaryOperator 0x122826f98 <line:10:2, col:15> 'const char *' '='
|   | |-DeclRefExpr 0x122826ed0 <col:2> 'const char *' lvalue Var 0x122826938 'name' 'const char *'
|   | `-ImplicitCastExpr 0x122826f80 <col:9, col:15> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x122826f68 <col:9, col:15> 'char *' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x122826f48 <col:9, col:15> 'char *' lvalue
|   |       |-ImplicitCastExpr 0x122826f30 <col:9> 'char **' <LValueToRValue>
|   |       | `-DeclRefExpr 0x122826ef0 <col:9> 'char **' lvalue ParmVar 0x122826600 'argv' 'char **'
|   |       `-IntegerLiteral 0x122826f10 <col:14> 'int' 2
|   |-IfStmt 0x122827118 <line:12:2, line:13:17>
|   | |-BinaryOperator 0x122827010 <line:12:6, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x122826ff8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x122826fb8 <col:6> 'int' lvalue ParmVar 0x12280e2c8 'argc' 'int'
|   | | `-IntegerLiteral 0x122826fd8 <col:14> 'int' 4
|   | `-BinaryOperator 0x1228270f8 <line:13:3, col:17> 'const char *' contains-errors '='
|   |   |-DeclRefExpr 0x122827030 <col:3> 'const char *' contains-errors lvalue Var 0x122826868 'value' 'const char *'
|   |   `-ImplicitCastExpr 0x1228270e0 <col:11, col:17> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1228270c8 <col:11, col:17> 'char *' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1228270a8 <col:11, col:17> 'char *' lvalue
|   |         |-ImplicitCastExpr 0x122827090 <col:11> 'char **' <LValueToRValue>
|   |         | `-DeclRefExpr 0x122827050 <col:11> 'char **' lvalue ParmVar 0x122826600 'argv' 'char **'
|   |         `-IntegerLiteral 0x122827070 <col:16> 'int' 3
|   |-BinaryOperator 0x122827350 <line:15:2, col:52> 'int' contains-errors '='
|   | |-DeclRefExpr 0x122827138 <col:2> 'int' lvalue Var 0x122826a80 'rc' 'int'
|   | `-CallExpr 0x1228272e8 <col:7, col:52> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x1228272d0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x122827238 <col:7> 'int ()' Function 0x122827180 'mnt_optstr_append_option' 'int ()'
|   |   |-UnaryOperator 0x122827278 <col:32, col:33> 'char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x122827258 <col:33> 'char *' lvalue Var 0x1228269e8 'optstr' 'char *'
|   |   |-ImplicitCastExpr 0x122827320 <col:41> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x122827290 <col:41> 'const char *' lvalue Var 0x122826938 'name' 'const char *'
|   |   `-ImplicitCastExpr 0x122827338 <col:47> 'const char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x1228272b0 <col:47> 'const char *' contains-errors lvalue Var 0x122826868 'value' 'const char *'
|   |-IfStmt 0x122829560 <line:16:2, line:17:23>
|   | |-UnaryOperator 0x1228273a8 <line:16:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x122827390 <col:7> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x122827370 <col:7> 'int' lvalue Var 0x122826a80 'rc' 'int'
|   | `-CallExpr 0x1228294e8 <line:17:3, col:23> 'int'
|   |   |-ImplicitCastExpr 0x1228294d0 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1228275a8 <col:3> 'int (const char *, ...)' Function 0x122827400 'printf' 'int (const char *, ...)'
|   |   |-ImplicitCastExpr 0x122829530 <col:10> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x122829518 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x122829440 <col:10> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x122829548 <col:17> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x122829460 <col:17> 'char *' lvalue Var 0x1228269e8 'optstr' 'char *'
|   |-CallExpr 0x1228297c8 <line:18:2, col:13> 'void'
|   | |-ImplicitCastExpr 0x1228297b0 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x122829728 <col:2> 'void (void *)' Function 0x1228295b8 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x122829808 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x1228297f0 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x122829748 <col:7> 'char *' lvalue Var 0x1228269e8 'optstr' 'char *'
|   `-ReturnStmt 0x122829858 <line:19:2, col:9>
|     `-ImplicitCastExpr 0x122829840 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x122829820 <col:9> 'int' lvalue Var 0x122826a80 'rc' 'int'
|-FunctionDecl 0x122827400 <line:17:3> col:3 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x122827500 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x1228274a8 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x122827570 <col:3> Implicit printf 1 2
`-FunctionDecl 0x1228295b8 <line:18:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x1228296b8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x122829660 <<invalid sloc>> Implicit 873
