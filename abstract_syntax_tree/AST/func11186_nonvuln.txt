TranslationUnitDecl 0x144055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1440564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144055bd0 '__int128'
|-TypedefDecl 0x144056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144055bf0 'unsigned __int128'
|-TypedefDecl 0x144126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x144126000 'struct __NSConstantString_tag'
|   `-Record 0x144056580 '__NSConstantString_tag'
|-TypedefDecl 0x144126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144055d90 '__SVInt8_t'
|-TypedefDecl 0x144126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144055db0 '__SVInt16_t'
|-TypedefDecl 0x144126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144055dd0 '__SVInt32_t'
|-TypedefDecl 0x1441263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144055df0 '__SVInt64_t'
|-TypedefDecl 0x144126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144055e10 '__SVUint8_t'
|-TypedefDecl 0x1441264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144055e30 '__SVUint16_t'
|-TypedefDecl 0x144126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144055e50 '__SVUint32_t'
|-TypedefDecl 0x144126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144055e70 '__SVUint64_t'
|-TypedefDecl 0x1441265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144055e90 '__SVFloat16_t'
|-TypedefDecl 0x144126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1441266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144055ed0 '__SVFloat64_t'
|-TypedefDecl 0x144126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x144126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1441267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x144126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1441268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x144126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x144126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1441269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x144126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x144126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x144126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x144126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x144126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x144126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144056090 '__clang_svint8x3_t'
|-TypedefDecl 0x144126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1440560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x144126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1440560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x144126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1440560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x144126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x144126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x144126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x144126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x144126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x144127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1440561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x144127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1440561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1441278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1440561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x144127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1441279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144056230 '__clang_svint16x4_t'
|-TypedefDecl 0x144127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144056250 '__clang_svint32x4_t'
|-TypedefDecl 0x144127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144056270 '__clang_svint64x4_t'
|-TypedefDecl 0x144127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x144127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1440562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x144127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1440562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x144127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1440562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x144127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x144127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x144127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x144127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x144127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144056390 '__SVBool_t'
|-TypedefDecl 0x144127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1440563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x144127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1440563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x144127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1440563f0 '__SVCount_t'
|-TypedefDecl 0x144127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x144127fb0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
|-TypedefDecl 0x144128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x144127fb0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
`-FunctionDecl 0x1441283e8 <dataset_diviso_filec/func11186_nonvuln.c:1:1, line:61:1> line:1:1 referenced invalid AcpiNsGetNodeUnlocked 'int (int *, const char *, int, int **)'
  |-ParmVarDecl 0x144128128 <line:2:5, col:30> col:30 invalid PrefixNode 'int *'
  |-ParmVarDecl 0x1441281a8 <line:3:5, col:30> col:30 used Pathname 'const char *'
  |-ParmVarDecl 0x144128228 <line:4:5, col:29> col:29 invalid Flags 'int'
  |-ParmVarDecl 0x1441282e0 <line:5:5, col:31> col:31 invalid ReturnNode 'int **'
  `-CompoundStmt 0x145808b08 <line:6:1, line:61:1>
    |-DeclStmt 0x144128530 <line:9:5, col:42>
    | `-VarDecl 0x1441284c8 <col:5, col:30> col:30 used InternalPath 'char *'
    |-IfStmt 0x144808a60 <line:17:5, line:26:5>
    | |-UnaryOperator 0x144808658 <line:17:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x144808640 <col:10> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x144808620 <col:10> 'const char *' lvalue ParmVar 0x1441281a8 'Pathname' 'const char *'
    | `-CompoundStmt 0x144808a38 <line:18:5, line:26:5>
    |   |-BinaryOperator 0x1448086e0 <line:19:9, col:23> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x1448086a8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x144808690 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x144808670 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1448086c0 <col:23> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x144808890 <line:20:9, line:23:9>
    |   | |-UnaryOperator 0x144808738 <line:20:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x144808720 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x144808700 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x144808878 <line:21:9, line:23:9>
    |   |   `-BinaryOperator 0x144808858 <line:22:13, col:27> '<dependent type>' contains-errors '='
    |   |     |-UnaryOperator 0x144808820 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x144808808 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   `-RecoveryExpr 0x144808750 <col:14> '<dependent type>' contains-errors lvalue
    |   |     `-RecoveryExpr 0x144808838 <col:27> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x144808a10 <line:25:9, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x144808990 <col:9> 'int ()' Function 0x1448088d8 'return_ACPI_STATUS' 'int ()'
    |     `-RecoveryExpr 0x1448089f0 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x144808f78 <line:30:5, line:34:5>
    | |-BinaryOperator 0x144808d68 <line:30:9, col:59> 'int' '&&'
    | | |-CallExpr 0x144808c48 <col:9, col:41> 'int'
    | | | |-ImplicitCastExpr 0x144808c30 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x144808b60 <col:9> 'int ()' Function 0x144808aa8 'ACPI_IS_ROOT_PREFIX' 'int ()'
    | | | `-ImplicitCastExpr 0x144808c88 <col:30, col:40> 'int' <IntegralCast>
    | | |   `-ImplicitCastExpr 0x144808c70 <col:30, col:40> 'char' <LValueToRValue>
    | | |     `-ArraySubscriptExpr 0x144808bd8 <col:30, col:40> 'const char' lvalue
    | | |       |-ImplicitCastExpr 0x144808bc0 <col:30> 'const char *' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x144808b80 <col:30> 'const char *' lvalue ParmVar 0x1441281a8 'Pathname' 'const char *'
    | | |       `-IntegerLiteral 0x144808ba0 <col:39> 'int' 0
    | | `-ParenExpr 0x144808d48 <col:46, col:59> 'int'
    | |   `-UnaryOperator 0x144808d30 <col:47, col:58> 'int' prefix '!' cannot overflow
    | |     `-ImplicitCastExpr 0x144808d18 <col:48, col:58> 'char' <LValueToRValue>
    | |       `-ArraySubscriptExpr 0x144808cf8 <col:48, col:58> 'const char' lvalue
    | |         |-ImplicitCastExpr 0x144808ce0 <col:48> 'const char *' <LValueToRValue>
    | |         | `-DeclRefExpr 0x144808ca0 <col:48> 'const char *' lvalue ParmVar 0x1441281a8 'Pathname' 'const char *'
    | |         `-IntegerLiteral 0x144808cc0 <col:57> 'int' 1
    | `-CompoundStmt 0x144808f58 <line:31:5, line:34:5>
    |   |-BinaryOperator 0x144808e90 <line:32:9, col:23> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x144808e58 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x144808e40 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x144808d88 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x144808e70 <col:23> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x144808f30 <line:33:9, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x144808eb0 <col:9> 'int ()' Function 0x1448088d8 'return_ACPI_STATUS' 'int ()'
    |     `-RecoveryExpr 0x144808f10 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1448092d8 <line:39:5, line:42:5>
    | |-RecoveryExpr 0x144809288 <line:39:9, col:29> '_Bool' contains-errors
    | `-CompoundStmt 0x1448092c8 <line:40:5, line:42:5>
    |-IfStmt 0x145808950 <line:53:5, line:57:5>
    | |-RecoveryExpr 0x144809498 <line:53:9, col:29> '_Bool' contains-errors
    | `-CompoundStmt 0x145808940 <line:54:5, line:57:5>
    `-CallExpr 0x145808aa8 <line:59:5, col:28> 'int'
      |-ImplicitCastExpr 0x145808a90 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x145808a50 <col:5> 'int ()' Function 0x145808998 'ACPI_FREE' 'int ()'
      `-ImplicitCastExpr 0x145808ad0 <col:16> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x145808a70 <col:16> 'char *' lvalue Var 0x1441284c8 'InternalPath' 'char *'
