TranslationUnitDecl 0x12c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c055bd0 '__int128'
|-TypedefDecl 0x12c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c055bf0 'unsigned __int128'
|-TypedefDecl 0x12c126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c126000 'struct __NSConstantString_tag'
|   `-Record 0x12c056580 '__NSConstantString_tag'
|-TypedefDecl 0x12c126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c055d90 '__SVInt8_t'
|-TypedefDecl 0x12c126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c055db0 '__SVInt16_t'
|-TypedefDecl 0x12c126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c055dd0 '__SVInt32_t'
|-TypedefDecl 0x12c1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c055df0 '__SVInt64_t'
|-TypedefDecl 0x12c126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c055e10 '__SVUint8_t'
|-TypedefDecl 0x12c1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c055e30 '__SVUint16_t'
|-TypedefDecl 0x12c126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c055e50 '__SVUint32_t'
|-TypedefDecl 0x12c126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c055e70 '__SVUint64_t'
|-TypedefDecl 0x12c1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c055e90 '__SVFloat16_t'
|-TypedefDecl 0x12c126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c056390 '__SVBool_t'
|-TypedefDecl 0x12c127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c0563f0 '__SVCount_t'
|-TypedefDecl 0x12c127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c127fb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-TypedefDecl 0x12c128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c127fb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-FunctionDecl 0x12c128310 <dataset_diviso_filec/func21088_vuln.c:1:1, line:39:1> line:1:6 invalid js_RegExp_prototype_exec 'void (int *, int *, const char *)'
| |-ParmVarDecl 0x12c128128 <col:31, col:41> col:41 invalid J 'int *'
| |-ParmVarDecl 0x12c1281a8 <col:44, col:55> col:55 referenced invalid re 'int *'
| |-ParmVarDecl 0x12c128228 <col:59, col:71> col:71 used text 'const char *'
| `-CompoundStmt 0x12c1438a8 <line:2:1, line:39:1>
|   |-DeclStmt 0x12c128450 <line:3:2, col:7>
|   | `-VarDecl 0x12c1283e8 <col:2, col:6> col:6 used i 'int'
|   |-DeclStmt 0x12c1284e8 <line:4:2, col:10>
|   | `-VarDecl 0x12c128480 <col:2, col:6> col:6 used opts 'int'
|   |-BinaryOperator 0x12c128540 <line:7:2, col:9> 'int' '='
|   | |-DeclRefExpr 0x12c128500 <col:2> 'int' lvalue Var 0x12c128480 'opts' 'int'
|   | `-IntegerLiteral 0x12c128520 <col:9> 'int' 0
|   |-IfStmt 0x12c142308 <line:8:2, line:18:2>
|   | |-BinaryOperator 0x12c128620 <line:8:6, col:18> '<dependent type>' contains-errors '&'
|   | | |-CXXDependentScopeMemberExpr 0x12c128580 <col:6, col:10> '<dependent type>' contains-errors lvalue ->flags
|   | | | `-RecoveryExpr 0x12c128560 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x12c128600 <col:18> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12c1422e8 <col:31, line:18:2>
|   |   |-IfStmt 0x12c142070 <line:9:3, line:13:3>
|   |   | |-BinaryOperator 0x12c141d88 <line:9:7, col:29> 'int' contains-errors '>'
|   |   | | |-CXXDependentScopeMemberExpr 0x12c128660 <col:7, col:11> '<dependent type>' contains-errors lvalue ->last
|   |   | | | `-RecoveryExpr 0x12c128640 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | `-CallExpr 0x12c141d48 <col:18, col:29> 'unsigned long'
|   |   | |   |-ImplicitCastExpr 0x12c141d30 <col:18> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x12c141ca0 <col:18> 'unsigned long (const char *)' Function 0x12c141b30 'strlen' 'unsigned long (const char *)'
|   |   | |   `-ImplicitCastExpr 0x12c141d70 <col:25> 'const char *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x12c141cc0 <col:25> 'const char *' lvalue ParmVar 0x12c128228 'text' 'const char *'
|   |   | `-CompoundStmt 0x12c142048 <col:32, line:13:3>
|   |   |   |-BinaryOperator 0x12c141e58 <line:10:4, col:15> '<dependent type>' contains-errors '='
|   |   |   | |-CXXDependentScopeMemberExpr 0x12c141df0 <col:4, col:8> '<dependent type>' contains-errors lvalue ->last
|   |   |   | | `-RecoveryExpr 0x12c141dc8 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x12c141da8 <col:4> 'int *' lvalue ParmVar 0x12c1281a8 're' 'int *'
|   |   |   | `-IntegerLiteral 0x12c141e38 <col:15> 'int' 0
|   |   |   |-CallExpr 0x12c142010 <line:11:4, col:17> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x12c141fd0 <col:4> 'int ()' Function 0x12c141f18 'js_pushnull' 'int ()'
|   |   |   | `-RecoveryExpr 0x12c141ff0 <col:16> '<dependent type>' contains-errors lvalue
|   |   |   `-ReturnStmt 0x12c142038 <line:12:4>
|   |   `-IfStmt 0x12c1422c8 <line:14:3, line:17:3>
|   |     |-BinaryOperator 0x12c142118 <line:14:7, col:18> 'int' contains-errors '>'
|   |     | |-CXXDependentScopeMemberExpr 0x12c1420b0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->last
|   |     | | `-RecoveryExpr 0x12c142090 <col:7> '<dependent type>' contains-errors lvalue
|   |     | `-IntegerLiteral 0x12c1420f8 <col:18> 'int' 0
|   |     `-CompoundStmt 0x12c1422a8 <col:21, line:17:3>
|   |       |-CompoundAssignOperator 0x12c1421c0 <line:15:4, col:16> 'const char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |       | |-DeclRefExpr 0x12c142138 <col:4> 'const char *' lvalue ParmVar 0x12c128228 'text' 'const char *'
|   |       | `-CXXDependentScopeMemberExpr 0x12c142178 <col:12, col:16> '<dependent type>' contains-errors lvalue ->last
|   |       |   `-RecoveryExpr 0x12c142158 <col:12> '<dependent type>' contains-errors lvalue
|   |       `-CompoundAssignOperator 0x12c142278 <line:16:4, col:12> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |         |-DeclRefExpr 0x12c1421f0 <col:4> 'int' lvalue Var 0x12c128480 'opts' 'int'
|   |         `-RecoveryExpr 0x12c142258 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12c143698 <line:20:2, line:33:2>
|   | |-UnaryOperator 0x12c1425d0 <line:20:6, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x12c142590 <col:7, col:42> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x12c142408 <col:7> 'int ()' Function 0x12c142350 'js_regexec' 'int ()'
|   | |   |-CXXDependentScopeMemberExpr 0x12c142448 <col:18, col:22> '<dependent type>' contains-errors lvalue ->prog
|   | |   | `-RecoveryExpr 0x12c142428 <col:18> '<dependent type>' contains-errors lvalue
|   | |   |-DeclRefExpr 0x12c142490 <col:28> 'const char *' lvalue ParmVar 0x12c128228 'text' 'const char *'
|   | |   |-UnaryOperator 0x12c142578 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x12c142558 <col:35> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12c1424e0 <col:38> 'int' lvalue Var 0x12c128480 'opts' 'int'
|   | `-CompoundStmt 0x12c143658 <col:45, line:33:2>
|   |   |-CallExpr 0x12c142708 <line:21:3, col:16> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12c1426c8 <col:3> 'int ()' Function 0x12c142610 'js_newarray' 'int ()'
|   |   | `-RecoveryExpr 0x12c1426e8 <col:15> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x12c142870 <line:22:3, col:24> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12c142810 <col:3> 'int ()' Function 0x12c142758 'js_pushstring' 'int ()'
|   |   | |-RecoveryExpr 0x12c142830 <col:17> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12c142850 <col:20> 'const char *' lvalue ParmVar 0x12c128228 'text' 'const char *'
|   |   |-CallExpr 0x12c142a60 <line:23:3, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12c142980 <col:3> 'int ()' Function 0x12c1428c8 'js_setproperty' 'int ()'
|   |   | |-RecoveryExpr 0x12c1429a0 <col:18> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x12c1429e0 <col:21, col:22> 'int' prefix '-'
|   |   | | `-IntegerLiteral 0x12c1429c0 <col:22> 'int' 2
|   |   | `-StringLiteral 0x12c142a40 <col:25> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x12c142df0 <line:25:3, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12c142d58 <col:3> 'int ()' Function 0x12c1428c8 'js_setproperty' 'int ()'
|   |   | |-RecoveryExpr 0x12c142d78 <col:18> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x12c142db8 <col:21, col:22> 'int' prefix '-'
|   |   | | `-IntegerLiteral 0x12c142d98 <col:22> 'int' 2
|   |   | `-StringLiteral 0x12c142dd0 <col:25> 'char[4]' lvalue "STR"
|   |   |-ForStmt 0x12c143450 <line:26:3, line:29:3>
|   |   | |-BinaryOperator 0x12c142e68 <line:26:8, col:12> 'int' '='
|   |   | | |-DeclRefExpr 0x12c142e28 <col:8> 'int' lvalue Var 0x12c1283e8 'i' 'int'
|   |   | | `-IntegerLiteral 0x12c142e48 <col:12> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x12c142f90 <col:15, col:21> 'int' contains-errors '<'
|   |   | | |-DeclRefExpr 0x12c142e88 <col:15> 'int' lvalue Var 0x12c1283e8 'i' 'int'
|   |   | | `-CXXDependentScopeMemberExpr 0x12c142f48 <col:19, col:21> '<dependent type>' contains-errors lvalue .nsub
|   |   | |   `-RecoveryExpr 0x12c142f28 <col:19> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x12c142fd0 <col:27, col:29> 'int' prefix '++'
|   |   | | `-DeclRefExpr 0x12c142fb0 <col:29> 'int' lvalue Var 0x12c1283e8 'i' 'int'
|   |   | `-CompoundStmt 0x12c143438 <col:32, line:29:3>
|   |   |   `-CallExpr 0x12c143400 <line:28:4, col:24> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12c143368 <col:4> 'int ()' Function 0x12c1432b0 'js_setindex' 'int ()'
|   |   |     |-RecoveryExpr 0x12c143388 <col:16> '<dependent type>' contains-errors lvalue
|   |   |     |-UnaryOperator 0x12c1433c8 <col:19, col:20> 'int' prefix '-'
|   |   |     | `-IntegerLiteral 0x12c1433a8 <col:20> 'int' 2
|   |   |     `-DeclRefExpr 0x12c1433e0 <col:23> 'int' lvalue Var 0x12c1283e8 'i' 'int'
|   |   `-ReturnStmt 0x12c143648 <line:32:3>
|   |-IfStmt 0x12c143820 <line:35:2, line:36:14>
|   | |-RecoveryExpr 0x12c143720 <line:35:6, col:18> '_Bool' contains-errors
|   | `-BinaryOperator 0x12c143800 <line:36:3, col:14> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x12c143788 <col:3, col:7> '<dependent type>' contains-errors lvalue ->last
|   |   | `-RecoveryExpr 0x12c143760 <col:3> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x12c143740 <col:3> 'int *' lvalue ParmVar 0x12c1281a8 're' 'int *'
|   |   `-IntegerLiteral 0x12c1437d0 <col:14> 'int' 0
|   `-CallExpr 0x12c143880 <line:38:2, col:15> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x12c143840 <col:2> 'int ()' Function 0x12c141f18 'js_pushnull' 'int ()'
|     `-RecoveryExpr 0x12c143860 <col:14> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x12c141b30 <line:9:18> col:18 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x12c141c30 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12c141bd8 <<invalid sloc>> Implicit 902
