TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
`-FunctionDecl 0x12d80e358 <dataset_diviso_filec/func12101_nonvuln.c:1:1, line:49:1> line:1:12 handle_invalid_guest_state 'int (struct kvm_vcpu *)' static
  |-ParmVarDecl 0x12d80e248 <col:39, col:56> col:56 used vcpu 'struct kvm_vcpu *'
  `-CompoundStmt 0x12d82a718 <line:2:1, line:49:1>
    |-DeclStmt 0x12d826a48 <line:3:2, col:37>
    | |-RecordDecl 0x12d826650 <col:2, col:9> col:9 struct vcpu_vmx
    | `-VarDecl 0x12d8267b8 <col:2, col:36> col:19 used vmx 'struct vcpu_vmx *' cinit
    |   `-ImplicitCastExpr 0x12d826a18 <col:25, col:36> 'struct vcpu_vmx *' <IntegralToPointer>
    |     `-CallExpr 0x12d8269d8 <col:25, col:36> 'int'
    |       |-ImplicitCastExpr 0x12d8269c0 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12d826950 <col:25> 'int ()' Function 0x12d826898 'to_vmx' 'int ()'
    |       `-ImplicitCastExpr 0x12d826a00 <col:32> 'struct kvm_vcpu *' <LValueToRValue>
    |         `-DeclRefExpr 0x12d826970 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x12d80e248 'vcpu' 'struct kvm_vcpu *'
    |-DeclStmt 0x12d826c10 <line:4:2, col:42>
    | |-EnumDecl 0x12d826a60 <col:2, col:7> col:7 emulation_result
    | `-VarDecl 0x12d826b78 <col:2, col:24> col:24 referenced invalid err 'enum emulation_result'
    |-DeclStmt 0x12d826cc8 <line:5:2, col:13>
    | `-VarDecl 0x12d826c40 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x12d826ca8 <col:12> 'int' 1
    |-DeclStmt 0x12d826d98 <line:8:2, col:22>
    | `-VarDecl 0x12d826cf8 <col:2, col:19> col:11 used count 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x12d826d80 <col:19> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x12d826d60 <col:19> 'int' 130
    |-WhileStmt 0x12d82a690 <line:13:2, line:45:2>
    | |-BinaryOperator 0x12d827088 <line:13:9, col:47> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x12d826f78 <col:9, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12d826f40 <col:9> 'struct vcpu_vmx *' lvalue Var 0x12d8267b8 'vmx' 'struct vcpu_vmx *'
    | | `-BinaryOperator 0x12d827068 <col:36, col:47> 'int' '!='
    | |   |-UnaryOperator 0x12d826fc0 <col:36, col:41> 'unsigned int' postfix '--'
    | |   | `-DeclRefExpr 0x12d826fa0 <col:36> 'unsigned int' lvalue Var 0x12d826cf8 'count' 'unsigned int'
    | |   `-ImplicitCastExpr 0x12d827050 <col:47> 'unsigned int' <IntegralCast>
    | |     `-IntegerLiteral 0x12d826fd8 <col:47> 'int' 0
    | `-CompoundStmt 0x12d82a640 <col:50, line:45:2>
    |   |-IfStmt 0x12d8274a0 <line:14:3, line:15:45>
    |   | |-BinaryOperator 0x12d8272d0 <line:14:7, col:58> 'int' contains-errors '&&'
    |   | | |-RecoveryExpr 0x12d827258 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x12d827290 <col:32, col:58> 'int'
    |   | |   |-ImplicitCastExpr 0x12d827278 <col:32> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x12d8271a0 <col:32> 'int ()' Function 0x12d8270e8 'vmx_interrupt_allowed' 'int ()'
    |   | |   `-ImplicitCastExpr 0x12d8272b8 <col:54> 'struct kvm_vcpu *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x12d8271c0 <col:54> 'struct kvm_vcpu *' lvalue ParmVar 0x12d80e248 'vcpu' 'struct kvm_vcpu *'
    |   | `-ReturnStmt 0x12d827490 <line:15:4, col:45>
    |   |   `-CallExpr 0x12d827468 <col:11, col:45> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x12d8273d0 <col:11> 'int ()' Function 0x12d827318 'handle_interrupt_window' 'int ()'
    |   |     `-UnaryOperator 0x12d827450 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |       `-RecoveryExpr 0x12d827428 <col:36, col:41> '<dependent type>' contains-errors lvalue
    |   |         `-DeclRefExpr 0x12d8273f0 <col:36> 'struct vcpu_vmx *' lvalue Var 0x12d8267b8 'vmx' 'struct vcpu_vmx *'
    |   |-IfStmt 0x12d8296b0 <line:17:3, line:18:11>
    |   | |-CallExpr 0x12d829650 <line:17:7, col:43> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x12d8275a0 <col:7> 'int ()' Function 0x12d8274e8 'kvm_test_request' 'int ()'
    |   | | |-RecoveryExpr 0x12d829630 <col:24> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12d8275d8 <col:39> 'struct kvm_vcpu *' lvalue ParmVar 0x12d80e248 'vcpu' 'struct kvm_vcpu *'
    |   | `-ReturnStmt 0x12d8296a0 <line:18:4, col:11>
    |   |   `-IntegerLiteral 0x12d829680 <col:11> 'int' 1
    |   |-BinaryOperator 0x12d8298f0 <line:20:3, col:56> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12d8296f0 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12d8296d0 <col:3> 'enum emulation_result' lvalue Var 0x12d826b78 'err' 'enum emulation_result'
    |   | `-CallExpr 0x12d8298c0 <col:9, col:56> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12d8297f8 <col:9> 'int ()' Function 0x12d829740 'emulate_instruction' 'int ()'
    |   |   |-DeclRefExpr 0x12d829818 <col:29> 'struct kvm_vcpu *' lvalue ParmVar 0x12d80e248 'vcpu' 'struct kvm_vcpu *'
    |   |   `-RecoveryExpr 0x12d8298a0 <col:35> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x12d829b00 <line:22:3, line:26:3>
    |   | |-RecoveryExpr 0x12d829930 <line:22:7, col:14> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12d829ad8 <col:33, line:26:3>
    |   |   |-UnaryOperator 0x12d8299f8 <line:23:4, col:17> '<dependent type>' contains-errors prefix '++' cannot overflow
    |   |   | `-CXXDependentScopeMemberExpr 0x12d8299b0 <col:6, col:17> '<dependent type>' contains-errors lvalue .mmio_exits
    |   |   |   `-RecoveryExpr 0x12d829988 <col:6, col:12> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x12d829950 <col:6> 'struct kvm_vcpu *' lvalue ParmVar 0x12d80e248 'vcpu' 'struct kvm_vcpu *'
    |   |   |-BinaryOperator 0x12d829a50 <line:24:4, col:10> 'int' '='
    |   |   | |-DeclRefExpr 0x12d829a10 <col:4> 'int' lvalue Var 0x12d826c40 'ret' 'int'
    |   |   | `-IntegerLiteral 0x12d829a30 <col:10> 'int' 0
    |   |   `-GotoStmt 0x12d829ac0 <line:25:4, col:9> 'out' 0x12d829a70
    |   |-IfStmt 0x12d829e78 <line:28:3, line:33:3>
    |   | |-RecoveryExpr 0x12d829b40 <line:28:7, col:14> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12d829e58 <col:28, line:33:3>
    |   |   |-BinaryOperator 0x12d829e08 <line:31:4, col:32> '<dependent type>' contains-errors '='
    |   |   | |-CXXDependentScopeMemberExpr 0x12d829da0 <col:4, col:24> '<dependent type>' contains-errors lvalue .ndata
    |   |   | | `-CXXDependentScopeMemberExpr 0x12d829d58 <col:4, col:15> '<dependent type>' contains-errors lvalue ->internal
    |   |   | |   `-RecoveryExpr 0x12d829d30 <col:4, col:10> '<dependent type>' contains-errors lvalue
    |   |   | |     `-DeclRefExpr 0x12d829cf8 <col:4> 'struct kvm_vcpu *' lvalue ParmVar 0x12d80e248 'vcpu' 'struct kvm_vcpu *'
    |   |   | `-IntegerLiteral 0x12d829de8 <col:32> 'int' 0
    |   |   `-ReturnStmt 0x12d829e48 <line:32:4, col:11>
    |   |     `-IntegerLiteral 0x12d829e28 <col:11> 'int' 0
    |   |-IfStmt 0x12d82a220 <line:35:3, line:39:3>
    |   | |-CXXDependentScopeMemberExpr 0x12d829ef8 <line:35:7, col:18> '<dependent type>' contains-errors lvalue .halt_request
    |   | | `-RecoveryExpr 0x12d829ed0 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12d829e98 <col:7> 'struct kvm_vcpu *' lvalue ParmVar 0x12d80e248 'vcpu' 'struct kvm_vcpu *'
    |   | `-CompoundStmt 0x12d82a1f8 <col:32, line:39:3>
    |   |   |-BinaryOperator 0x12d82a008 <line:36:4, col:30> '<dependent type>' contains-errors '='
    |   |   | |-CXXDependentScopeMemberExpr 0x12d829fa0 <col:4, col:15> '<dependent type>' contains-errors lvalue .halt_request
    |   |   | | `-RecoveryExpr 0x12d829f78 <col:4, col:10> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x12d829f40 <col:4> 'struct kvm_vcpu *' lvalue ParmVar 0x12d80e248 'vcpu' 'struct kvm_vcpu *'
    |   |   | `-IntegerLiteral 0x12d829fe8 <col:30> 'int' 0
    |   |   |-BinaryOperator 0x12d82a1c0 <line:37:4, col:28> 'int' '='
    |   |   | |-DeclRefExpr 0x12d82a028 <col:4> 'int' lvalue Var 0x12d826c40 'ret' 'int'
    |   |   | `-CallExpr 0x12d82a180 <col:10, col:28> 'int'
    |   |   |   |-ImplicitCastExpr 0x12d82a168 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x12d82a128 <col:10> 'int ()' Function 0x12d82a070 'kvm_vcpu_halt' 'int ()'
    |   |   |   `-ImplicitCastExpr 0x12d82a1a8 <col:24> 'struct kvm_vcpu *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x12d82a148 <col:24> 'struct kvm_vcpu *' lvalue ParmVar 0x12d80e248 'vcpu' 'struct kvm_vcpu *'
    |   |   `-GotoStmt 0x12d82a1e0 <line:38:4, col:9> 'out' 0x12d829a70
    |   |-IfStmt 0x12d82a378 <line:41:3, line:42:9>
    |   | |-RecoveryExpr 0x12d82a340 <line:41:7, col:29> '_Bool' contains-errors
    |   | `-GotoStmt 0x12d82a360 <line:42:4, col:9> 'out' 0x12d829a70
    |   `-IfStmt 0x12d82a620 <line:43:3, line:44:13>
    |     |-CallExpr 0x12d82a4b0 <line:43:7, col:20> 'int'
    |     | `-ImplicitCastExpr 0x12d82a498 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     |   `-DeclRefExpr 0x12d82a478 <col:7> 'int ()' Function 0x12d82a3c0 'need_resched' 'int ()'
    |     `-CallExpr 0x12d82a600 <line:44:4, col:13> 'int'
    |       `-ImplicitCastExpr 0x12d82a5d0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x12d82a5b0 <col:4> 'int ()' Function 0x12d82a4f8 'schedule' 'int ()'
    `-LabelStmt 0x12d82a6f8 <line:47:1, line:48:9> 'out'
      `-ReturnStmt 0x12d82a6e8 <col:2, col:9>
        `-ImplicitCastExpr 0x12d82a6d0 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x12d82a6b0 <col:9> 'int' lvalue Var 0x12d826c40 'ret' 'int'
