TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x132126630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132126400 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x132126698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x132126700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x132126768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x1321267d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x132126838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x1321268a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x132126908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x132126970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x1321269d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x132126a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x132126aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x132126b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132126b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x132126be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132126c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x132126cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132126d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132126d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x132126de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132126e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132126eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132126f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132126f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132126ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132127058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1321270c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132127128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132127190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1321271f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132127260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1321272c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132127330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132127398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132127c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132127c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x132127cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132127d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x132127da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x132127e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x132127e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x132127ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132127f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x132127fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132128010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132128078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1321280e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132128148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1321281b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132128218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x132128280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1321282e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132128350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x1321283f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1321283b0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x132128468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1321283b0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-FunctionDecl 0x1321410a8 <dataset_diviso_filec/func13119_vuln.c:1:1, line:41:1> line:1:12 llc_ui_getname 'int (struct socket *, struct sockaddr *, int *, int)' static
| |-ParmVarDecl 0x132128a48 <col:27, col:42> col:42 used sock 'struct socket *'
| |-ParmVarDecl 0x132140e28 <col:48, col:65> col:65 used uaddr 'struct sockaddr *'
| |-ParmVarDecl 0x132140ed8 <line:2:6, col:11> col:11 used uaddrlen 'int *'
| |-ParmVarDecl 0x132140f58 <col:21, col:25> col:25 used peer 'int'
| `-CompoundStmt 0x132148060 <line:3:1, line:41:1>
|   |-DeclStmt 0x132141338 <line:4:2, col:26>
|   | |-RecordDecl 0x1321411b8 <col:2, col:9> col:9 struct sockaddr_llc
|   | `-VarDecl 0x1321412b8 <col:2, col:22> col:22 referenced invalid sllc 'struct sockaddr_llc'
|   |-DeclStmt 0x132141598 <line:5:2, col:28>
|   | |-RecordDecl 0x132141350 <col:2, col:9> col:9 struct sock
|   | `-VarDecl 0x1321414b8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
|   |   `-RecoveryExpr 0x132141558 <col:20, col:26> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x132141520 <col:20> 'struct socket *' lvalue ParmVar 0x132128a48 'sock' 'struct socket *'
|   |-DeclStmt 0x1321419a8 <line:6:2, col:35>
|   | |-RecordDecl 0x1321415b0 <col:2, col:9> col:9 struct llc_sock
|   | `-VarDecl 0x132141718 <col:2, col:34> col:19 used llc 'struct llc_sock *' cinit
|   |   `-ImplicitCastExpr 0x132141978 <col:25, col:34> 'struct llc_sock *' contains-errors <IntegralToPointer>
|   |     `-CallExpr 0x132141938 <col:25, col:34> 'int' contains-errors
|   |       |-ImplicitCastExpr 0x132141920 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1321418b0 <col:25> 'int ()' Function 0x1321417f8 'llc_sk' 'int ()'
|   |       `-ImplicitCastExpr 0x132141960 <col:32> 'struct sock *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x1321418d0 <col:32> 'struct sock *' contains-errors lvalue Var 0x1321414b8 'sk' 'struct sock *'
|   |-DeclStmt 0x132141a60 <line:7:2, col:12>
|   | `-VarDecl 0x1321419d8 <col:2, col:11> col:6 used rc 'int' cinit
|   |   `-IntegerLiteral 0x132141a40 <col:11> 'int' 0
|   |-CallExpr 0x132808200 <line:9:2, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x132141d18 <col:2> 'void *(void *, int, unsigned long)' Function 0x132141ac8 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x132141d58 <col:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x132141d38 <col:10> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x132141d70 <col:16> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x132141dd0 <col:19, col:30> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x132141db0 <col:25, col:30> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x132141d90 <col:26> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x132808370 <line:10:2, col:14> 'int' contains-errors
|   | |-ImplicitCastExpr 0x132808358 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x132808318 <col:2> 'int ()' Function 0x132808260 'lock_sock' 'int ()'
|   | `-ImplicitCastExpr 0x132808398 <col:12> 'struct sock *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x132808338 <col:12> 'struct sock *' contains-errors lvalue Var 0x1321414b8 'sk' 'struct sock *'
|   |-IfStmt 0x1328085d0 <line:11:2, line:12:8>
|   | |-CallExpr 0x132808538 <line:11:6, col:31> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x132808490 <col:6> 'int ()' Function 0x1328083d8 'sock_flag' 'int ()'
|   | | |-DeclRefExpr 0x1328084b0 <col:16> 'struct sock *' contains-errors lvalue Var 0x1321414b8 'sk' 'struct sock *'
|   | | `-RecoveryExpr 0x132808518 <col:20> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x1328085b8 <line:12:3, col:8> 'out' 0x132808568
|   |-BinaryOperator 0x1328086b8 <line:13:2, col:25> 'int' contains-errors '='
|   | |-UnaryOperator 0x132808628 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x132808610 <col:3> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1328085f0 <col:3> 'int *' lvalue ParmVar 0x132140ed8 'uaddrlen' 'int *'
|   | `-ImplicitCastExpr 0x1328086a0 <col:14, col:25> 'int' contains-errors <IntegralCast>
|   |   `-UnaryExprOrTypeTraitExpr 0x132808680 <col:14, col:25> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x132808660 <col:20, col:25> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x132808640 <col:21> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x132808808 <line:14:2, col:28> 'void *'
|   | |-ImplicitCastExpr 0x1328087f0 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1328086d8 <col:2> 'void *(void *, int, unsigned long)' Function 0x132141ac8 'memset' 'void *(void *, int, unsigned long)'
|   | |-ImplicitCastExpr 0x132808858 <col:9> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x132808840 <col:9> 'struct sockaddr *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1328086f8 <col:9> 'struct sockaddr *' lvalue ParmVar 0x132140e28 'uaddr' 'struct sockaddr *'
|   | |-IntegerLiteral 0x132808718 <col:16> 'int' 0
|   | `-ImplicitCastExpr 0x132808888 <col:19, col:20> 'unsigned long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x132808870 <col:19, col:20> 'int' <LValueToRValue>
|   |     `-UnaryOperator 0x132808770 <col:19, col:20> 'int' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x132808758 <col:20> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0x132808738 <col:20> 'int *' lvalue ParmVar 0x132140ed8 'uaddrlen' 'int *'
|   |-IfStmt 0x132147c38 <line:15:2, line:34:2> has_else
|   | |-ImplicitCastExpr 0x1328088c0 <line:15:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1328088a0 <col:6> 'int' lvalue ParmVar 0x132140f58 'peer' 'int'
|   | |-CompoundStmt 0x132147538 <col:12, line:23:2>
|   | | |-BinaryOperator 0x1328089b0 <line:16:3, col:9> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x1328088d8 <col:3> 'int' lvalue Var 0x1321419d8 'rc' 'int'
|   | | | `-UnaryOperator 0x132808998 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   | | |   `-ImplicitCastExpr 0x132808980 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | |     `-RecoveryExpr 0x132808960 <col:9> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x132808ac0 <line:17:3, line:18:9>
|   | | | |-BinaryOperator 0x132808a88 <line:17:7, col:23> 'int' contains-errors '!='
|   | | | | |-RecoveryExpr 0x132808a08 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   | | | | | `-DeclRefExpr 0x1328089d0 <col:7> 'struct sock *' contains-errors lvalue Var 0x1321414b8 'sk' 'struct sock *'
|   | | | | `-RecoveryExpr 0x132808a68 <col:23> '<dependent type>' contains-errors lvalue
|   | | | `-GotoStmt 0x132808aa8 <line:18:4, col:9> 'out' 0x132808568
|   | | |-IfStmt 0x132808c98 <line:19:3, line:20:33>
|   | | | |-RecoveryExpr 0x132808b18 <line:19:6, col:11> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x132808ae0 <col:6> 'struct llc_sock *' contains-errors lvalue Var 0x132141718 'llc' 'struct llc_sock *'
|   | | | `-BinaryOperator 0x132808c78 <line:20:4, col:33> '<dependent type>' contains-errors '='
|   | | |   |-CXXDependentScopeMemberExpr 0x132808b88 <col:4, col:9> '<dependent type>' contains-errors lvalue .sllc_arphrd
|   | | |   | `-RecoveryExpr 0x132808b60 <col:4> '<dependent type>' contains-errors lvalue
|   | | |   |   `-DeclRefExpr 0x132808b40 <col:4> 'struct sockaddr_llc' lvalue Var 0x1321412b8 'sllc' 'struct sockaddr_llc'
|   | | |   `-CXXDependentScopeMemberExpr 0x132808c30 <col:23, col:33> '<dependent type>' contains-errors lvalue ->type
|   | | |     `-RecoveryExpr 0x132808c08 <col:23, col:28> '<dependent type>' contains-errors lvalue
|   | | |       `-DeclRefExpr 0x132808bd0 <col:23> 'struct llc_sock *' contains-errors lvalue Var 0x132141718 'llc' 'struct llc_sock *'
|   | | |-BinaryOperator 0x132808df0 <line:21:3, col:30> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x132808d00 <col:3, col:8> '<dependent type>' contains-errors lvalue .sllc_sap
|   | | | | `-RecoveryExpr 0x132808cd8 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x132808cb8 <col:3> 'struct sockaddr_llc' lvalue Var 0x1321412b8 'sllc' 'struct sockaddr_llc'
|   | | | `-CXXDependentScopeMemberExpr 0x132808da8 <col:19, col:30> '<dependent type>' contains-errors lvalue .lsap
|   | | |   `-RecoveryExpr 0x132808d80 <col:19, col:24> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x132808d48 <col:19> 'struct llc_sock *' contains-errors lvalue Var 0x132141718 'llc' 'struct llc_sock *'
|   | | `-CallExpr 0x132147500 <line:22:3, col:54> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x1328090d8 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x132808e88 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |   |-UnaryOperator 0x132809160 <col:10, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-CXXDependentScopeMemberExpr 0x132809118 <col:11, col:16> '<dependent type>' contains-errors lvalue .sllc_mac
|   | |   |   `-RecoveryExpr 0x1328090f8 <col:11> '<dependent type>' contains-errors lvalue
|   | |   |-UnaryOperator 0x132147448 <col:26, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-CXXDependentScopeMemberExpr 0x132147400 <col:27, col:38> '<dependent type>' contains-errors lvalue .mac
|   | |   |   `-RecoveryExpr 0x1328091b0 <col:27, col:32> '<dependent type>' contains-errors lvalue
|   | |   |     `-DeclRefExpr 0x132809178 <col:27> 'struct llc_sock *' contains-errors lvalue Var 0x132141718 'llc' 'struct llc_sock *'
|   | |   `-RecoveryExpr 0x1321474c8 <col:43> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x132147c08 <line:23:9, line:34:2>
|   |   |-BinaryOperator 0x132147648 <line:24:3, col:9> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x132147570 <col:3> 'int' lvalue Var 0x1321419d8 'rc' 'int'
|   |   | `-UnaryOperator 0x132147630 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   `-ImplicitCastExpr 0x132147618 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-RecoveryExpr 0x1321475f8 <col:9> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x132147710 <line:25:3, line:26:9>
|   |   | |-UnaryOperator 0x1321476e0 <line:25:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1321476c8 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x1321476a0 <col:8, col:13> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x132147668 <col:8> 'struct llc_sock *' contains-errors lvalue Var 0x132141718 'llc' 'struct llc_sock *'
|   |   | `-GotoStmt 0x1321476f8 <line:26:4, col:9> 'out' 0x132808568
|   |   |-BinaryOperator 0x1321478b0 <line:27:3, col:35> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x132147778 <col:3, col:8> '<dependent type>' contains-errors lvalue .sllc_sap
|   |   | | `-RecoveryExpr 0x132147750 <col:3> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x132147730 <col:3> 'struct sockaddr_llc' lvalue Var 0x1321412b8 'sllc' 'struct sockaddr_llc'
|   |   | `-CXXDependentScopeMemberExpr 0x132147868 <col:19, col:35> '<dependent type>' contains-errors lvalue .lsap
|   |   |   `-CXXDependentScopeMemberExpr 0x132147820 <col:19, col:29> '<dependent type>' contains-errors lvalue ->laddr
|   |   |     `-RecoveryExpr 0x1321477f8 <col:19, col:24> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x1321477c0 <col:19> 'struct llc_sock *' contains-errors lvalue Var 0x132141718 'llc' 'struct llc_sock *'
|   |   `-IfStmt 0x132147be8 <line:29:3, line:33:3>
|   |     |-RecoveryExpr 0x132147908 <line:29:7, col:12> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x1321478d0 <col:7> 'struct llc_sock *' contains-errors lvalue Var 0x132141718 'llc' 'struct llc_sock *'
|   |     `-CompoundStmt 0x132147bd0 <col:17, line:33:3>
|   |       `-BinaryOperator 0x132147a68 <line:30:4, col:33> '<dependent type>' contains-errors '='
|   |         |-CXXDependentScopeMemberExpr 0x132147978 <col:4, col:9> '<dependent type>' contains-errors lvalue .sllc_arphrd
|   |         | `-RecoveryExpr 0x132147950 <col:4> '<dependent type>' contains-errors lvalue
|   |         |   `-DeclRefExpr 0x132147930 <col:4> 'struct sockaddr_llc' lvalue Var 0x1321412b8 'sllc' 'struct sockaddr_llc'
|   |         `-CXXDependentScopeMemberExpr 0x132147a20 <col:23, col:33> '<dependent type>' contains-errors lvalue ->type
|   |           `-RecoveryExpr 0x1321479f8 <col:23, col:28> '<dependent type>' contains-errors lvalue
|   |             `-DeclRefExpr 0x1321479c0 <col:23> 'struct llc_sock *' contains-errors lvalue Var 0x132141718 'llc' 'struct llc_sock *'
|   |-BinaryOperator 0x132147ca8 <line:35:2, col:7> 'int' '='
|   | |-DeclRefExpr 0x132147c68 <col:2> 'int' lvalue Var 0x1321419d8 'rc' 'int'
|   | `-IntegerLiteral 0x132147c88 <col:7> 'int' 0
|   |-CallExpr 0x132147e48 <line:37:2, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x132147d58 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x132808e88 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-DeclRefExpr 0x132147d78 <col:9> 'struct sockaddr *' lvalue ParmVar 0x132140e28 'uaddr' 'struct sockaddr *'
|   | |-UnaryOperator 0x132147db8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x132147d98 <col:17> '<dependent type>' contains-errors lvalue
|   | `-UnaryExprOrTypeTraitExpr 0x132147e10 <col:23, col:34> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x132147df0 <col:29, col:34> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x132147dd0 <col:30> '<dependent type>' contains-errors lvalue
|   |-LabelStmt 0x132147ff8 <line:38:1, line:39:17> 'out'
|   | `-CallExpr 0x132147fb8 <col:2, col:17> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x132147fa0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x132147f60 <col:2> 'int ()' Function 0x132147ea8 'release_sock' 'int ()'
|   |   `-ImplicitCastExpr 0x132147fe0 <col:15> 'struct sock *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x132147f80 <col:15> 'struct sock *' contains-errors lvalue Var 0x1321414b8 'sk' 'struct sock *'
|   `-ReturnStmt 0x132148050 <line:40:2, col:9>
|     `-ImplicitCastExpr 0x132148038 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x132148018 <col:9> 'int' lvalue Var 0x1321419d8 'rc' 'int'
|-FunctionDecl 0x132141ac8 <line:9:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x132141bc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x132141c30 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x132141c98 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x132141b70 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x132808e88 <line:22:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x132808f88 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x132808ff0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x132809058 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x132808f30 <<invalid sloc>> Implicit 882
