TranslationUnitDecl 0x140828408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1408292b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1408289d0 '__int128'
|-TypedefDecl 0x140829328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1408289f0 'unsigned __int128'
|-TypedefDecl 0x140814430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x140814200 'struct __NSConstantString_tag'
|   `-Record 0x140829380 '__NSConstantString_tag'
|-TypedefDecl 0x140814498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140828b90 '__SVInt8_t'
|-TypedefDecl 0x140814500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x140828bb0 '__SVInt16_t'
|-TypedefDecl 0x140814568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x140828bd0 '__SVInt32_t'
|-TypedefDecl 0x1408145d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x140828bf0 '__SVInt64_t'
|-TypedefDecl 0x140814638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140828c10 '__SVUint8_t'
|-TypedefDecl 0x1408146a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140828c30 '__SVUint16_t'
|-TypedefDecl 0x140814708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140828c50 '__SVUint32_t'
|-TypedefDecl 0x140814770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140828c70 '__SVUint64_t'
|-TypedefDecl 0x1408147d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140828c90 '__SVFloat16_t'
|-TypedefDecl 0x140814840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x140828cb0 '__SVFloat32_t'
|-TypedefDecl 0x1408148a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x140828cd0 '__SVFloat64_t'
|-TypedefDecl 0x140814910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x140828cf0 '__SVBfloat16_t'
|-TypedefDecl 0x140814978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140828d10 '__clang_svint8x2_t'
|-TypedefDecl 0x1408149e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140828d30 '__clang_svint16x2_t'
|-TypedefDecl 0x140814a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140828d50 '__clang_svint32x2_t'
|-TypedefDecl 0x140814ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140828d70 '__clang_svint64x2_t'
|-TypedefDecl 0x140814b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140828d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x140814b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x140828db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x140814be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x140828dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x140814c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x140828df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x140814cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140828e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x140814d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140828e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x140814d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140828e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x140814df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140828e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x140814e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140828e90 '__clang_svint8x3_t'
|-TypedefDecl 0x140814ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x140828eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x140814f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x140828ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x140814f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x140828ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x140814ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140828f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x140815060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140828f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1408150c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140828f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x140815130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140828f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x140815198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140828f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x140887800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x140828fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x140887868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x140828fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1408878d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x140828ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x140887938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140829010 '__clang_svint8x4_t'
|-TypedefDecl 0x1408879a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140829030 '__clang_svint16x4_t'
|-TypedefDecl 0x140887a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140829050 '__clang_svint32x4_t'
|-TypedefDecl 0x140887a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140829070 '__clang_svint64x4_t'
|-TypedefDecl 0x140887ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140829090 '__clang_svuint8x4_t'
|-TypedefDecl 0x140887b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1408290b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x140887ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1408290d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x140887c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1408290f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x140887c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140829110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x140887ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140829130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x140887d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140829150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x140887db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140829170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x140887e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140829190 '__SVBool_t'
|-TypedefDecl 0x140887e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1408291b0 '__clang_svboolx2_t'
|-TypedefDecl 0x140887ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1408291d0 '__clang_svboolx4_t'
|-TypedefDecl 0x140887f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1408291f0 '__SVCount_t'
|-TypedefDecl 0x140887ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x140887fb0 'char *'
|   `-BuiltinType 0x1408284b0 'char'
|-TypedefDecl 0x140888068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x140887fb0 'char *'
|   `-BuiltinType 0x1408284b0 'char'
|-FunctionDecl 0x13f809948 <dataset_diviso_filec/func8113_vuln.c:1:1, line:47:1> line:1:12 update_table 'int (struct libmnt_update *, struct libmnt_table *)' static
| |-ParmVarDecl 0x140888648 <col:25, col:47> col:47 used upd 'struct libmnt_update *'
| |-ParmVarDecl 0x13f809828 <col:52, col:73> col:73 used tb 'struct libmnt_table *'
| `-CompoundStmt 0x13e025328 <line:2:1, line:47:1>
|   |-DeclStmt 0x13f809b90 <line:4:2, col:12>
|   | |-VarDecl 0x13f809a90 <col:2, col:6> col:6 used rc 'int'
|   | `-VarDecl 0x13f809b10 <col:2, col:10> col:10 used fd 'int'
|   |-DeclStmt 0x13f809c60 <line:5:2, col:17>
|   | `-VarDecl 0x13f809bc0 <col:2, col:13> col:8 used uq 'char *' cinit
|   |   `-RecoveryExpr 0x13f809c40 <col:13> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13f809e20 <line:7:2, line:8:11>
|   | |-BinaryOperator 0x13f809d58 <line:7:6, col:19> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x13f809cb0 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x13f809c98 <col:7> 'struct libmnt_table *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13f809c78 <col:7> 'struct libmnt_table *' lvalue ParmVar 0x13f809828 'tb' 'struct libmnt_table *'
|   | | `-UnaryOperator 0x13f809d40 <col:13, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x13f809d28 <col:14, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x13f809d00 <col:14, col:19> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x13f809cc8 <col:14> 'struct libmnt_update *' lvalue ParmVar 0x140888648 'upd' 'struct libmnt_update *'
|   | `-ReturnStmt 0x13f809e10 <line:8:3, col:11>
|   |   `-UnaryOperator 0x13f809df8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x13f809de0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x13f809dc0 <col:11> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13f80a1f8 <line:10:2, col:52> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13f809f50 <col:2> 'int ()' Function 0x13f809e98 'DBG' 'int ()'
|   | |-RecoveryExpr 0x13f80a1d8 <col:6> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x13f80a170 <col:14, col:51> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13f80a068 <col:14> 'int ()' Function 0x13f809fb0 'mnt_debug_h' 'int ()'
|   |   |-DeclRefExpr 0x13f80a088 <col:26> 'struct libmnt_update *' lvalue ParmVar 0x140888648 'upd' 'struct libmnt_update *'
|   |   |-StringLiteral 0x13f80a0f0 <col:31> 'char[4]' lvalue "STR"
|   |   `-RecoveryExpr 0x13f80a148 <col:38, col:43> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x13f80a110 <col:38> 'struct libmnt_update *' lvalue ParmVar 0x140888648 'upd' 'struct libmnt_update *'
|   |-BinaryOperator 0x13f80a448 <line:12:2, col:48> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13f80a228 <col:2> 'int' lvalue Var 0x13f809b10 'fd' 'int'
|   | `-CallExpr 0x13f80a418 <col:7, col:48> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13f80a328 <col:7> 'int ()' Function 0x13f80a270 'mnt_open_uniq_filename' 'int ()'
|   |   |-RecoveryExpr 0x13f80a380 <col:30, col:35> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x13f80a348 <col:30> 'struct libmnt_update *' lvalue ParmVar 0x140888648 'upd' 'struct libmnt_update *'
|   |   `-UnaryOperator 0x13f80a400 <col:45, col:46> 'char **' contains-errors prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x13f80a3a8 <col:46> 'char *' contains-errors lvalue Var 0x13f809bc0 'uq' 'char *'
|   |-IfStmt 0x13f80a528 <line:13:2, line:14:10>
|   | |-BinaryOperator 0x13f80a4c0 <line:13:6, col:11> 'int' '<'
|   | | |-ImplicitCastExpr 0x13f80a4a8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13f80a468 <col:6> 'int' lvalue Var 0x13f809b10 'fd' 'int'
|   | | `-IntegerLiteral 0x13f80a488 <col:11> 'int' 0
|   | `-ReturnStmt 0x13f80a518 <line:14:3, col:10>
|   |   `-ImplicitCastExpr 0x13f80a500 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13f80a4e0 <col:10> 'int' lvalue Var 0x13f809b10 'fd' 'int'
|   |-IfStmt 0x13e024e90 <line:17:2, line:42:2> has_else
|   | |-RecoveryExpr 0x13f80a750 <line:17:6> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x13e024ca0 <col:9, line:39:2>
|   | | |-DeclStmt 0x13f80b4f8 <line:18:3, col:17>
|   | | | |-RecordDecl 0x13f80a770 <col:3, col:10> col:10 struct stat
|   | | | `-VarDecl 0x13f80b478 <col:3, col:15> col:15 invalid st 'struct stat'
|   | | |-DeclStmt 0x13f80b688 <line:19:3, col:25>
|   | | | |-RecordDecl 0x13f80b510 <col:3, col:10> col:10 struct libmnt_iter
|   | | | `-VarDecl 0x13f80b608 <col:3, col:22> col:22 invalid itr 'struct libmnt_iter'
|   | | |-DeclStmt 0x13f80b888 <line:20:3, col:23>
|   | | | |-RecordDecl 0x13f80b6a0 <col:3, col:10> col:10 struct libmnt_fs
|   | | | `-VarDecl 0x13f80b808 <col:3, col:21> col:21 used fs 'struct libmnt_fs *'
|   | | |-DeclStmt 0x13f80b920 <line:21:3, col:9>
|   | | | `-VarDecl 0x13f80b8b8 <col:3, col:7> col:7 used fd 'int'
|   | | |-CallExpr 0x13f80bad8 <line:23:3, col:40> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x13f80ba18 <col:3> 'int ()' Function 0x13f80b960 'mnt_reset_iter' 'int ()'
|   | | | |-UnaryOperator 0x13f80ba58 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x13f80ba38 <col:19> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x13f80bab8 <col:24> '<dependent type>' contains-errors lvalue
|   | | `-WhileStmt 0x13f80c020 <line:24:3, line:29:3>
|   | |   |-BinaryOperator 0x13f80bd50 <line:24:9, col:45> 'int' contains-errors '=='
|   | |   | |-CallExpr 0x13f80bcf8 <col:9, col:40> '<dependent type>' contains-errors
|   | |   | | |-DeclRefExpr 0x13f80bbe8 <col:9> 'int ()' Function 0x13f80bb30 'mnt_table_next_fs' 'int ()'
|   | |   | | |-DeclRefExpr 0x13f80bc08 <col:27> 'struct libmnt_table *' lvalue ParmVar 0x13f809828 'tb' 'struct libmnt_table *'
|   | |   | | |-UnaryOperator 0x13f80bc48 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | | | `-RecoveryExpr 0x13f80bc28 <col:32> '<dependent type>' contains-errors lvalue
|   | |   | | `-UnaryOperator 0x13f80bce0 <col:37, col:38> 'struct libmnt_fs **' prefix '&' cannot overflow
|   | |   | |   `-DeclRefExpr 0x13f80bc60 <col:38> 'struct libmnt_fs *' lvalue Var 0x13f80b808 'fs' 'struct libmnt_fs *'
|   | |   | `-IntegerLiteral 0x13f80bd30 <col:45> 'int' 0
|   | |   `-CompoundStmt 0x13f80c010 <col:48, line:29:3>
|   | `-CompoundStmt 0x13e024e78 <line:39:9, line:42:2>
|   |   `-CallExpr 0x13e024e38 <line:41:3, col:11> 'int'
|   |     |-ImplicitCastExpr 0x13e024e20 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13e024de0 <col:3> 'int ()' Function 0x13e024d28 'close' 'int ()'
|   |     `-ImplicitCastExpr 0x13e024e60 <col:9> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x13e024e00 <col:9> 'int' lvalue Var 0x13f809b10 'fd' 'int'
|   |-CallExpr 0x13e024ff8 <line:44:2, col:11> 'int' contains-errors
|   | |-ImplicitCastExpr 0x13e024fe0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e024fa0 <col:2> 'int ()' Function 0x13e024ee8 'unlink' 'int ()'
|   | `-ImplicitCastExpr 0x13e025020 <col:9> 'char *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x13e024fc0 <col:9> 'char *' contains-errors lvalue Var 0x13f809bc0 'uq' 'char *'
|   |-CallExpr 0x13e025288 <line:45:2, col:9> 'void' contains-errors
|   | |-ImplicitCastExpr 0x13e025270 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e0251e8 <col:2> 'void (void *)' Function 0x13e025078 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x13e0252c8 <col:7> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x13e0252b0 <col:7> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x13e025208 <col:7> 'char *' contains-errors lvalue Var 0x13f809bc0 'uq' 'char *'
|   `-ReturnStmt 0x13e025318 <line:46:2, col:9>
|     `-ImplicitCastExpr 0x13e025300 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13e0252e0 <col:9> 'int' lvalue Var 0x13f809a90 'rc' 'int'
`-FunctionDecl 0x13e025078 <line:45:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13e025178 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13e025120 <<invalid sloc>> Implicit 873
