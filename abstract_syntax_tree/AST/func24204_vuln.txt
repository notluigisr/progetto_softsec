TranslationUnitDecl 0x11f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f855bd0 '__int128'
|-TypedefDecl 0x11f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f855bf0 'unsigned __int128'
|-TypedefDecl 0x12800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12800bc00 'struct __NSConstantString_tag'
|   `-Record 0x11f856580 '__NSConstantString_tag'
|-TypedefDecl 0x12800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f855d90 '__SVInt8_t'
|-TypedefDecl 0x12800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f855db0 '__SVInt16_t'
|-TypedefDecl 0x12800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f855dd0 '__SVInt32_t'
|-TypedefDecl 0x12800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f855df0 '__SVInt64_t'
|-TypedefDecl 0x12800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f855e10 '__SVUint8_t'
|-TypedefDecl 0x12800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f855e30 '__SVUint16_t'
|-TypedefDecl 0x12800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f855e50 '__SVUint32_t'
|-TypedefDecl 0x12800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f855e70 '__SVUint64_t'
|-TypedefDecl 0x12800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f855e90 '__SVFloat16_t'
|-TypedefDecl 0x12800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f856390 '__SVBool_t'
|-TypedefDecl 0x12800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8563f0 '__SVCount_t'
|-TypedefDecl 0x12800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-TypedefDecl 0x12800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
`-FunctionDecl 0x1280267f8 <dataset_diviso_filec/func24204_vuln.c:1:1, line:43:1> line:1:1 arch_get_unmapped_area_topdown 'int (struct file *, const unsigned long, const unsigned long, const unsigned long, const unsigned long)'
  |-ParmVarDecl 0x12800e248 <col:32, col:45> col:45 filp 'struct file *'
  |-ParmVarDecl 0x12800e2c8 <col:51, col:71> col:71 used addr0 'const unsigned long'
  |-ParmVarDecl 0x12800e348 <line:2:6, col:26> col:26 used len 'const unsigned long'
  |-ParmVarDecl 0x128026600 <col:31, col:51> col:51 pgoff 'const unsigned long'
  |-ParmVarDecl 0x128026680 <line:3:6, col:26> col:26 used flags 'const unsigned long'
  `-CompoundStmt 0x12802bbc0 <line:4:1, line:43:1>
    |-DeclStmt 0x128026af8 <line:5:2, col:28>
    | |-RecordDecl 0x128026910 <col:2, col:9> col:9 struct vm_area_struct
    | `-VarDecl 0x128026a78 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'
    |-DeclStmt 0x128026dd8 <line:6:2, col:36>
    | |-RecordDecl 0x128026b10 <col:2, col:9> col:9 struct mm_struct
    | `-VarDecl 0x128026c78 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit
    |   `-CXXDependentScopeMemberExpr 0x128026d78 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm
    |     `-RecoveryExpr 0x128026d58 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x128026ea8 <line:7:2, col:28>
    | `-VarDecl 0x128026e08 <col:2, col:23> col:16 used addr 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x128026e90 <col:23> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x128026e70 <col:23> 'const unsigned long' lvalue ParmVar 0x12800e2c8 'addr0' 'const unsigned long'
    |-DeclStmt 0x128027038 <line:8:2, col:35>
    | |-RecordDecl 0x128026ec0 <col:2, col:9> col:9 struct vm_unmapped_area_info
    | `-VarDecl 0x128026fb8 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'
    |-IfStmt 0x128027208 <line:11:2, line:12:11>
    | |-BinaryOperator 0x128027140 <line:11:6, col:24> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x128027050 <col:6> 'const unsigned long' lvalue ParmVar 0x12800e348 'len' 'const unsigned long'
    | | `-BinaryOperator 0x128027120 <col:12, col:24> '<dependent type>' contains-errors '-'
    | |   |-RecoveryExpr 0x1280270e0 <col:12> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x128027100 <col:24> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1280271f8 <line:12:3, col:11>
    |   `-UnaryOperator 0x1280271e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1280271c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1280271a8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128027320 <line:14:2, line:15:10>
    | |-BinaryOperator 0x1280272a0 <line:14:6, col:14> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x128027228 <col:6> 'const unsigned long' lvalue ParmVar 0x128026680 'flags' 'const unsigned long'
    | | `-RecoveryExpr 0x128027280 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x128027310 <line:15:3, col:10>
    |   `-ImplicitCastExpr 0x1280272f8 <col:10> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x1280272e0 <col:10> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x1280272c0 <col:10> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    |-IfStmt 0x128029bc0 <line:18:2, line:24:2>
    | |-ImplicitCastExpr 0x128027360 <line:18:6> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x128027340 <col:6> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    | `-CompoundStmt 0x128029b98 <col:12, line:24:2>
    |   |-BinaryOperator 0x128027590 <line:19:3, col:25> 'unsigned long' '='
    |   | |-DeclRefExpr 0x128027378 <col:3> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    |   | `-ImplicitCastExpr 0x128027578 <col:10, col:25> 'unsigned long' <IntegralCast>
    |   |   `-CallExpr 0x128027538 <col:10, col:25> 'int'
    |   |     |-ImplicitCastExpr 0x128027520 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1280274b0 <col:10> 'int ()' Function 0x1280273f8 'PAGE_ALIGN' 'int ()'
    |   |     `-ImplicitCastExpr 0x128027560 <col:21> 'unsigned long' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1280274d0 <col:21> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    |   |-BinaryOperator 0x1280295a8 <line:20:3, col:26> 'struct vm_area_struct *' contains-errors '='
    |   | |-DeclRefExpr 0x1280275b0 <col:3> 'struct vm_area_struct *' lvalue Var 0x128026a78 'vma' 'struct vm_area_struct *'
    |   | `-ImplicitCastExpr 0x128029590 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>
    |   |   `-CallExpr 0x128029530 <col:9, col:26> 'int' contains-errors
    |   |     |-ImplicitCastExpr 0x128029518 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1280294b8 <col:9> 'int ()' Function 0x128029400 'find_vma' 'int ()'
    |   |     |-ImplicitCastExpr 0x128029560 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x1280294d8 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x128026c78 'mm' 'struct mm_struct *'
    |   |     `-ImplicitCastExpr 0x128029578 <col:22> 'unsigned long' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1280294f8 <col:22> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    |   `-IfStmt 0x128029b78 <line:21:3, line:23:11>
    |     |-BinaryOperator 0x128029af8 <line:21:7, line:22:41> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x1280299f8 <line:21:7, col:42> 'int' contains-errors '&&'
    |     | | |-BinaryOperator 0x128029998 <col:7, col:26> 'int' contains-errors '>='
    |     | | | |-BinaryOperator 0x128029978 <col:7, col:19> '<dependent type>' contains-errors '-'
    |     | | | | |-RecoveryExpr 0x128029958 <col:7> '<dependent type>' contains-errors lvalue
    |     | | | | `-DeclRefExpr 0x1280295e0 <col:19> 'const unsigned long' lvalue ParmVar 0x12800e348 'len' 'const unsigned long'
    |     | | | `-DeclRefExpr 0x128029620 <col:26> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    |     | | `-BinaryOperator 0x1280299d8 <col:34, col:42> 'int' contains-errors '>='
    |     | |   |-DeclRefExpr 0x128029660 <col:34> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    |     | |   `-RecoveryExpr 0x1280299b8 <col:42> '<dependent type>' contains-errors lvalue
    |     | `-ParenExpr 0x128029ad8 <line:22:5, col:41> 'int' contains-errors
    |     |   `-BinaryOperator 0x128029ab8 <col:6, col:33> 'int' contains-errors '||'
    |     |     |-UnaryOperator 0x128029a30 <col:6, col:7> 'int' prefix '!' cannot overflow
    |     |     | `-ImplicitCastExpr 0x128029a18 <col:7> 'struct vm_area_struct *' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x1280296d8 <col:7> 'struct vm_area_struct *' lvalue Var 0x128026a78 'vma' 'struct vm_area_struct *'
    |     |     `-BinaryOperator 0x128029a98 <col:14, col:33> 'int' contains-errors '<='
    |     |       |-BinaryOperator 0x128029a78 <col:14, col:21> 'unsigned long' '+'
    |     |       | |-ImplicitCastExpr 0x128029a48 <col:14> 'unsigned long' <LValueToRValue>
    |     |       | | `-DeclRefExpr 0x128029728 <col:14> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    |     |       | `-ImplicitCastExpr 0x128029a60 <col:21> 'unsigned long' <LValueToRValue>
    |     |       |   `-DeclRefExpr 0x128029748 <col:21> 'const unsigned long' lvalue ParmVar 0x12800e348 'len' 'const unsigned long'
    |     |       `-RecoveryExpr 0x1280297f0 <col:28, col:33> '<dependent type>' contains-errors lvalue
    |     |         `-DeclRefExpr 0x1280297b8 <col:28> 'struct vm_area_struct *' lvalue Var 0x128026a78 'vma' 'struct vm_area_struct *'
    |     `-ReturnStmt 0x128029b68 <line:23:4, col:11>
    |       `-ImplicitCastExpr 0x128029b50 <col:11> 'int' <IntegralCast>
    |         `-ImplicitCastExpr 0x128029b38 <col:11> 'unsigned long' <LValueToRValue>
    |           `-DeclRefExpr 0x128029b18 <col:11> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    |-BinaryOperator 0x128029cc8 <line:26:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x128029c28 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x128029c00 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128029be0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x128026fb8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x128029ca8 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x128029d98 <line:27:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x128029d30 <col:2, col:7> '<dependent type>' contains-errors lvalue .length
    | | `-RecoveryExpr 0x128029d08 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128029ce8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x128026fb8 'info' 'struct vm_unmapped_area_info'
    | `-DeclRefExpr 0x128029d78 <col:16> 'const unsigned long' lvalue ParmVar 0x12800e348 'len' 'const unsigned long'
    |-BinaryOperator 0x12802a038 <line:28:2, col:47> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x128029e00 <col:2, col:7> '<dependent type>' contains-errors lvalue .low_limit
    | | `-RecoveryExpr 0x128029dd8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128029db8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x128026fb8 'info' 'struct vm_unmapped_area_info'
    | `-CallExpr 0x12802a008 <col:19, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128029f28 <col:19> 'int ()' Function 0x128029e70 'max' 'int ()'
    |   |-RecoveryExpr 0x128029fc8 <col:23> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x128029fe8 <col:34> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12802a148 <line:29:2, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12802a0a0 <col:2, col:7> '<dependent type>' contains-errors lvalue .high_limit
    | | `-RecoveryExpr 0x12802a078 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12802a058 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x128026fb8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x12802a120 <col:20, col:24> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12802a0e8 <col:20> 'struct mm_struct *' contains-errors lvalue Var 0x128026c78 'mm' 'struct mm_struct *'
    |-BinaryOperator 0x12802a218 <line:30:2, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12802a1b0 <col:2, col:7> '<dependent type>' contains-errors lvalue .align_mask
    | | `-RecoveryExpr 0x12802a188 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12802a168 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x128026fb8 'info' 'struct vm_unmapped_area_info'
    | `-IntegerLiteral 0x12802a1f8 <col:20> 'int' 0
    |-BinaryOperator 0x12802a3b8 <line:31:2, col:31> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x12802a238 <col:2> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    | `-CallExpr 0x12802a390 <col:9, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12802a338 <col:9> 'int ()' Function 0x12802a280 'vm_unmapped_area' 'int ()'
    |   `-UnaryOperator 0x12802a378 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12802a358 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12802bb40 <line:34:2, line:40:2>
    | |-CallExpr 0x12802b710 <line:34:6, col:25> 'int'
    | | |-ImplicitCastExpr 0x12802b6f8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12802b6b8 <col:6> 'int ()' Function 0x12802b600 'offset_in_page' 'int ()'
    | | `-ImplicitCastExpr 0x12802b738 <col:21> 'unsigned long' <LValueToRValue>
    | |   `-DeclRefExpr 0x12802b6d8 <col:21> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    | `-CompoundStmt 0x12802bb20 <col:28, line:40:2>
    |   |-BinaryOperator 0x12802b920 <line:36:3, col:16> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12802b8b8 <col:3, col:8> '<dependent type>' contains-errors lvalue .flags
    |   | | `-RecoveryExpr 0x12802b890 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12802b870 <col:3> 'struct vm_unmapped_area_info' lvalue Var 0x128026fb8 'info' 'struct vm_unmapped_area_info'
    |   | `-IntegerLiteral 0x12802b900 <col:16> 'int' 0
    |   `-BinaryOperator 0x12802bb00 <line:39:3, col:32> 'unsigned long' contains-errors '='
    |     |-DeclRefExpr 0x12802ba60 <col:3> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
    |     `-CallExpr 0x12802bad8 <col:10, col:32> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x12802ba80 <col:10> 'int ()' Function 0x12802a280 'vm_unmapped_area' 'int ()'
    |       `-UnaryOperator 0x12802bac0 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x12802baa0 <col:28> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12802bbb0 <line:42:2, col:9>
      `-ImplicitCastExpr 0x12802bb98 <col:9> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x12802bb80 <col:9> 'unsigned long' <LValueToRValue>
          `-DeclRefExpr 0x12802bb60 <col:9> 'unsigned long' lvalue Var 0x128026e08 'addr' 'unsigned long'
