TranslationUnitDecl 0x151855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1518564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151855bd0 '__int128'
|-TypedefDecl 0x151856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151855bf0 'unsigned __int128'
|-TypedefDecl 0x151926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151926000 'struct __NSConstantString_tag'
|   `-Record 0x151856580 '__NSConstantString_tag'
|-TypedefDecl 0x151926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151855d90 '__SVInt8_t'
|-TypedefDecl 0x151926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151855db0 '__SVInt16_t'
|-TypedefDecl 0x151926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151855dd0 '__SVInt32_t'
|-TypedefDecl 0x1519263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151855df0 '__SVInt64_t'
|-TypedefDecl 0x151926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151855e10 '__SVUint8_t'
|-TypedefDecl 0x1519264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151855e30 '__SVUint16_t'
|-TypedefDecl 0x151926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151855e50 '__SVUint32_t'
|-TypedefDecl 0x151926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151855e70 '__SVUint64_t'
|-TypedefDecl 0x1519265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151855e90 '__SVFloat16_t'
|-TypedefDecl 0x151926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1519266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151855ed0 '__SVFloat64_t'
|-TypedefDecl 0x151926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1519267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1519268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1519269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151856090 '__clang_svint8x3_t'
|-TypedefDecl 0x151926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1518560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1518560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1518560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1518561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1518561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1519278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1518561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1519279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151856230 '__clang_svint16x4_t'
|-TypedefDecl 0x151927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151856250 '__clang_svint32x4_t'
|-TypedefDecl 0x151927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151856270 '__clang_svint64x4_t'
|-TypedefDecl 0x151927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1518562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1518562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1518562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151856390 '__SVBool_t'
|-TypedefDecl 0x151927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1518563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1518563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1518563f0 '__SVCount_t'
|-TypedefDecl 0x151927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-TypedefDecl 0x151928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-FunctionDecl 0x1519282b0 <dataset_diviso_filec/func24559_nonvuln.c:1:1, line:46:1> line:1:13 invalid x11_get_display 'void (int *, char **)' extern
| |-ParmVarDecl 0x151928128 <col:29, col:39> col:39 invalid port 'int *'
| |-ParmVarDecl 0x1519281d8 <col:45, col:52> col:52 used target 'char **'
| `-CompoundStmt 0x1519487c8 <line:2:1, line:46:1>
|   |-DeclStmt 0x151928508 <line:3:2, col:42>
|   | |-VarDecl 0x151928380 <col:2, col:8> col:8 used display 'char *'
|   | |-VarDecl 0x151928400 <col:2, col:18> col:18 used port_split 'char *'
|   | `-VarDecl 0x151928480 <col:2, col:31> col:31 used port_period 'char *'
|   |-BinaryOperator 0x151928628 <line:4:2, col:12> 'char *' contains-errors '='
|   | |-UnaryOperator 0x1519285f0 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1519285d8 <col:3> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x151928520 <col:3> 'char **' lvalue ParmVar 0x1519281d8 'target' 'char **'
|   | `-RecoveryExpr 0x151928608 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x151941e60 <line:6:2, col:33> 'char *' '='
|   | |-DeclRefExpr 0x151928648 <col:2> 'char *' lvalue Var 0x151928380 'display' 'char *'
|   | `-ImplicitCastExpr 0x151941a28 <col:12, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x151941a00 <col:12, col:33> 'int'
|   |     |-ImplicitCastExpr 0x1519419e8 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1519287c0 <col:12> 'int ()' Function 0x151928708 'xstrdup' 'int ()'
|   |     `-CallExpr 0x1519419a8 <col:20, col:32> 'int'
|   |       |-ImplicitCastExpr 0x151941990 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1519418e0 <col:20> 'int ()' Function 0x151941828 'getenv' 'int ()'
|   |       `-ImplicitCastExpr 0x1519419d0 <col:27> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x151941940 <col:27> 'char[4]' lvalue "STR"
|   |-IfStmt 0x1519422e0 <line:8:2, line:11:2>
|   | |-UnaryOperator 0x151941eb8 <line:8:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x151941ea0 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x151941e80 <col:7> 'char *' lvalue Var 0x151928380 'display' 'char *'
|   | `-CompoundStmt 0x1519422c0 <col:16, line:11:2>
|   |   |-CallExpr 0x151942008 <line:9:3, col:14> 'int'
|   |   | |-ImplicitCastExpr 0x151941ff0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x151941fb0 <col:3> 'int ()' Function 0x151941ef8 'error' 'int ()'
|   |   | `-ImplicitCastExpr 0x151942030 <col:9> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x151941fd0 <col:9> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x151942298 <line:10:3, col:10> 'void'
|   |     |-ImplicitCastExpr 0x151942280 <col:3> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1519421f8 <col:3> 'void (int) __attribute__((noreturn))' Function 0x151942088 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-UnaryOperator 0x151942238 <col:8, col:9> 'int' prefix '-'
|   |       `-IntegerLiteral 0x151942218 <col:9> 'int' 1
|   |-IfStmt 0x151943b30 <line:13:2, line:27:2>
|   | |-BinaryOperator 0x1519423c0 <line:13:6, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x1519423a8 <col:6, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x151942390 <col:6, col:15> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x151942358 <col:6, col:15> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x151942340 <col:6> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x151942300 <col:6> 'char *' lvalue Var 0x151928380 'display' 'char *'
|   | | |     `-IntegerLiteral 0x151942320 <col:14> 'int' 0
|   | | `-CharacterLiteral 0x151942378 <col:20> 'int' 58
|   | `-CompoundStmt 0x151943ad8 <col:25, line:27:2>
|   |   |-DeclStmt 0x151942558 <line:14:3, col:17>
|   |   | |-RecordDecl 0x1519423e0 <col:3, col:10> col:10 struct stat
|   |   | `-VarDecl 0x1519424d8 <col:3, col:15> col:15 invalid st 'struct stat'
|   |   |-DeclStmt 0x1519425f0 <line:15:3, col:22>
|   |   | `-VarDecl 0x151942588 <col:3, col:9> col:9 used screen_period 'char *'
|   |   |-BinaryOperator 0x151942678 <line:16:3, col:11> '<dependent type>' contains-errors '='
|   |   | |-UnaryOperator 0x151942640 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x151942628 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x151942608 <col:4> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x151942658 <col:11> 'int' 0
|   |   |-BinaryOperator 0x1519431f8 <line:17:3, col:38> 'char *' '='
|   |   | |-DeclRefExpr 0x151942698 <col:3> 'char *' lvalue Var 0x151942588 'screen_period' 'char *'
|   |   | `-CallExpr 0x151943198 <col:19, col:38> 'char *'
|   |   |   |-ImplicitCastExpr 0x151943180 <col:19> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1519430e0 <col:19> 'char *(const char *, int)' Function 0x151942700 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x1519431e0 <col:26> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x1519431c8 <col:26> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x151943100 <col:26> 'char *' lvalue Var 0x151928380 'display' 'char *'
|   |   |   `-CharacterLiteral 0x151943120 <col:35> 'int' 46
|   |   |-IfStmt 0x1519432f0 <line:18:3, line:19:21>
|   |   | |-ImplicitCastExpr 0x151943238 <line:18:7> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x151943218 <col:7> 'char *' lvalue Var 0x151942588 'screen_period' 'char *'
|   |   | `-BinaryOperator 0x1519432d0 <line:19:4, col:21> 'char' '='
|   |   |   |-UnaryOperator 0x151943288 <col:4, col:5> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x151943270 <col:5> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x151943250 <col:5> 'char *' lvalue Var 0x151942588 'screen_period' 'char *'
|   |   |   `-ImplicitCastExpr 0x1519432b8 <col:21> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x1519432a0 <col:21> 'int' 0
|   |   |-CallExpr 0x151943510 <line:20:3, col:41> 'int'
|   |   | |-ImplicitCastExpr 0x1519434f8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1519433f0 <col:3> 'int ()' Function 0x151943338 'xstrfmtcat' 'int ()'
|   |   | |-ImplicitCastExpr 0x151943548 <col:14, col:15> 'char *' <LValueToRValue>
|   |   | | `-UnaryOperator 0x151943448 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x151943430 <col:15> 'char **' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x151943410 <col:15> 'char **' lvalue ParmVar 0x1519281d8 'target' 'char **'
|   |   | |-ImplicitCastExpr 0x151943560 <col:23> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x151943460 <col:23> 'char[4]' lvalue "STR"
|   |   | `-BinaryOperator 0x1519434d8 <col:30, col:40> 'char *' '+'
|   |   |   |-ImplicitCastExpr 0x1519434c0 <col:30> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x151943480 <col:30> 'char *' lvalue Var 0x151928380 'display' 'char *'
|   |   |   `-IntegerLiteral 0x1519434a0 <col:40> 'int' 1
|   |   |-CallExpr 0x1519436b0 <line:21:3, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x151943698 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x151943658 <col:3> 'int ()' Function 0x1519435a0 'xfree' 'int ()'
|   |   | `-ImplicitCastExpr 0x1519436d8 <col:9> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x151943678 <col:9> 'char *' lvalue Var 0x151928380 'display' 'char *'
|   |   |-IfStmt 0x151943aa8 <line:22:3, line:25:3>
|   |   | |-BinaryOperator 0x1519438c8 <line:22:7, col:29> 'int' contains-errors '!='
|   |   | | |-CallExpr 0x151943878 <col:7, col:24> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x1519437d0 <col:7> 'int ()' Function 0x151943718 'stat' 'int ()'
|   |   | | | |-UnaryOperator 0x151943828 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
|   |   | | | | `-ImplicitCastExpr 0x151943810 <col:13> 'char **' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x1519437f0 <col:13> 'char **' lvalue ParmVar 0x1519281d8 'target' 'char **'
|   |   | | | `-UnaryOperator 0x151943860 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | |   `-RecoveryExpr 0x151943840 <col:22> '<dependent type>' contains-errors lvalue
|   |   | | `-IntegerLiteral 0x1519438a8 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x151943a88 <col:32, line:25:3>
|   |   |   |-CallExpr 0x151943990 <line:23:4, col:24> 'int'
|   |   |   | |-ImplicitCastExpr 0x151943978 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1519438e8 <col:4> 'int ()' Function 0x151941ef8 'error' 'int ()'
|   |   |   | |-ImplicitCastExpr 0x1519439c0 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-StringLiteral 0x151943908 <col:10> 'char[4]' lvalue "STR"
|   |   |   | `-ImplicitCastExpr 0x1519439d8 <col:17, col:18> 'char *' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x151943960 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |   |   |     `-ImplicitCastExpr 0x151943948 <col:18> 'char **' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x151943928 <col:18> 'char **' lvalue ParmVar 0x1519281d8 'target' 'char **'
|   |   |   `-CallExpr 0x151943a60 <line:24:4, col:11> 'void'
|   |   |     |-ImplicitCastExpr 0x151943a48 <col:4> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1519439f0 <col:4> 'void (int) __attribute__((noreturn))' Function 0x151942088 'exit' 'void (int) __attribute__((noreturn))'
|   |   |     `-UnaryOperator 0x151943a30 <col:9, col:10> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x151943a10 <col:10> 'int' 1
|   |   `-ReturnStmt 0x151943ac8 <line:26:3>
|   |-BinaryOperator 0x151943c58 <line:30:2, col:34> 'char *' '='
|   | |-DeclRefExpr 0x151943b50 <col:2> 'char *' lvalue Var 0x151928400 'port_split' 'char *'
|   | `-CallExpr 0x151943bf8 <col:15, col:34> 'char *'
|   |   |-ImplicitCastExpr 0x151943be0 <col:15> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x151943b70 <col:15> 'char *(const char *, int)' Function 0x151942700 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x151943c40 <col:22> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x151943c28 <col:22> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x151943b90 <col:22> 'char *' lvalue Var 0x151928380 'display' 'char *'
|   |   `-CharacterLiteral 0x151943bb0 <col:31> 'int' 58
|   |-IfStmt 0x151943e68 <line:31:2, line:35:2>
|   | |-UnaryOperator 0x151943cb0 <line:31:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x151943c98 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x151943c78 <col:7> 'char *' lvalue Var 0x151928400 'port_split' 'char *'
|   | `-CompoundStmt 0x151943e48 <col:19, line:35:2>
|   |   |-CallExpr 0x151943d70 <line:32:3, line:33:14> 'int'
|   |   | |-ImplicitCastExpr 0x151943d58 <line:32:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x151943cc8 <col:3> 'int ()' Function 0x151941ef8 'error' 'int ()'
|   |   | `-ImplicitCastExpr 0x151943d98 <col:9, line:33:9> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x151943d30 <line:32:9, line:33:9> 'char[7]' lvalue "STRSTR"
|   |   `-CallExpr 0x151943e20 <line:34:3, col:10> 'void'
|   |     |-ImplicitCastExpr 0x151943e08 <col:3> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x151943db0 <col:3> 'void (int) __attribute__((noreturn))' Function 0x151942088 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-UnaryOperator 0x151943df0 <col:8, col:9> 'int' prefix '-'
|   |       `-IntegerLiteral 0x151943dd0 <col:9> 'int' 1
|   |-BinaryOperator 0x151943f08 <line:36:2, col:16> 'char' '='
|   | |-UnaryOperator 0x151943ec0 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x151943ea8 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x151943e88 <col:3> 'char *' lvalue Var 0x151928400 'port_split' 'char *'
|   | `-ImplicitCastExpr 0x151943ef0 <col:16> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x151943ed8 <col:16> 'int' 0
|   |-UnaryOperator 0x151943f48 <line:39:2, col:12> 'char *' postfix '++'
|   | `-DeclRefExpr 0x151943f28 <col:2> 'char *' lvalue Var 0x151928400 'port_split' 'char *'
|   |-BinaryOperator 0x151948278 <line:40:2, col:38> 'char *' '='
|   | |-DeclRefExpr 0x151943f60 <col:2> 'char *' lvalue Var 0x151928480 'port_period' 'char *'
|   | `-CallExpr 0x151948218 <col:16, col:38> 'char *'
|   |   |-ImplicitCastExpr 0x151948200 <col:16> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x151943f80 <col:16> 'char *(const char *, int)' Function 0x151942700 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x151948260 <col:23> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x151948248 <col:23> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x151943fa0 <col:23> 'char *' lvalue Var 0x151928400 'port_split' 'char *'
|   |   `-CharacterLiteral 0x151943fc0 <col:35> 'int' 46
|   |-IfStmt 0x151948370 <line:41:2, line:42:18>
|   | |-ImplicitCastExpr 0x1519482b8 <line:41:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x151948298 <col:6> 'char *' lvalue Var 0x151928480 'port_period' 'char *'
|   | `-BinaryOperator 0x151948350 <line:42:3, col:18> 'char' '='
|   |   |-UnaryOperator 0x151948308 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1519482f0 <col:4> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1519482d0 <col:4> 'char *' lvalue Var 0x151928480 'port_period' 'char *'
|   |   `-ImplicitCastExpr 0x151948338 <col:18> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x151948320 <col:18> 'int' 0
|   |-BinaryOperator 0x151948700 <line:44:2, col:29> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x151948650 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x151948638 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x151948390 <col:3> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x1519486e0 <col:10, col:29> '<dependent type>' contains-errors '+'
|   |   |-CallExpr 0x151948680 <col:10, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x151948668 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1519484c0 <col:10> 'int ()' Function 0x151948408 'atoi' 'int ()'
|   |   | `-ImplicitCastExpr 0x1519486a8 <col:15> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1519484e0 <col:15> 'char *' lvalue Var 0x151928400 'port_split' 'char *'
|   |   `-RecoveryExpr 0x1519486c0 <col:29> '<dependent type>' contains-errors lvalue
|   `-BinaryOperator 0x1519487a8 <line:45:2, col:12> 'char *' '='
|     |-UnaryOperator 0x151948758 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x151948740 <col:3> 'char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x151948720 <col:3> 'char **' lvalue ParmVar 0x1519281d8 'target' 'char **'
|     `-ImplicitCastExpr 0x151948790 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x151948770 <col:12> 'char *' lvalue Var 0x151928380 'display' 'char *'
|-FunctionDecl 0x151942088 <line:10:3> col:3 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x151942188 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x151942130 <<invalid sloc>> Implicit 869
`-FunctionDecl 0x151942700 <line:17:19> col:19 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x151943000 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x151943068 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1519427a8 <<invalid sloc>> Implicit 893
