TranslationUnitDecl 0x147055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1470564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147055bd0 '__int128'
|-TypedefDecl 0x147056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147055bf0 'unsigned __int128'
|-TypedefDecl 0x147126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x147126000 'struct __NSConstantString_tag'
|   `-Record 0x147056580 '__NSConstantString_tag'
|-TypedefDecl 0x147126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147055d90 '__SVInt8_t'
|-TypedefDecl 0x147126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147055db0 '__SVInt16_t'
|-TypedefDecl 0x147126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147055dd0 '__SVInt32_t'
|-TypedefDecl 0x1471263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147055df0 '__SVInt64_t'
|-TypedefDecl 0x147126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147055e10 '__SVUint8_t'
|-TypedefDecl 0x1471264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147055e30 '__SVUint16_t'
|-TypedefDecl 0x147126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147055e50 '__SVUint32_t'
|-TypedefDecl 0x147126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147055e70 '__SVUint64_t'
|-TypedefDecl 0x1471265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147055e90 '__SVFloat16_t'
|-TypedefDecl 0x147126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1471266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147055ed0 '__SVFloat64_t'
|-TypedefDecl 0x147126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x147126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1471267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x147126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1471268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x147126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x147126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1471269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x147126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x147126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x147126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x147126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x147126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x147126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147056090 '__clang_svint8x3_t'
|-TypedefDecl 0x147126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1470560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x147126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1470560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x147126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1470560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x147126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x147126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x147126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x147126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x147126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x147127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1470561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x147127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1470561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1471278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1470561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x147127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1471279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147056230 '__clang_svint16x4_t'
|-TypedefDecl 0x147127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147056250 '__clang_svint32x4_t'
|-TypedefDecl 0x147127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147056270 '__clang_svint64x4_t'
|-TypedefDecl 0x147127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x147127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1470562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x147127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1470562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x147127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1470562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x147127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x147127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x147127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x147127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x147127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147056390 '__SVBool_t'
|-TypedefDecl 0x147127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1470563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x147127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1470563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x147127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1470563f0 '__SVCount_t'
|-TypedefDecl 0x147127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x147127fb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
|-TypedefDecl 0x147128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x147127fb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
`-FunctionDecl 0x147128318 <dataset_diviso_filec/func8333_nonvuln.c:1:1, line:50:1> line:1:12 invalid DecodeBasicCaConstraint 'int (const int *, int, int *)' static
  |-ParmVarDecl 0x1471280f0 <col:36, col:48> col:48 invalid input 'const int *'
  |-ParmVarDecl 0x147128170 <col:55, col:59> col:59 used sz 'int'
  |-ParmVarDecl 0x147128228 <col:63, col:76> col:76 referenced invalid cert 'int *'
  `-CompoundStmt 0x147141800 <line:2:1, line:50:1>
    |-DeclStmt 0x147128478 <line:4:5, col:19>
    | `-VarDecl 0x1471283f0 <col:5, col:18> col:9 used length 'int' cinit
    |   `-IntegerLiteral 0x147128458 <col:18> 'int' 0
    |-DeclStmt 0x147128510 <line:5:5, col:12>
    | `-VarDecl 0x1471284a8 <col:5, col:9> col:9 used ret 'int'
    |-CallExpr 0x147128748 <line:7:5, col:24> 'int'
    | |-ImplicitCastExpr 0x147128730 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x147128680 <col:5> 'int ()' Function 0x1471285c8 'WOLFSSL_ENTER' 'int ()'
    | `-ImplicitCastExpr 0x147128770 <col:19> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x1471286e0 <col:19> 'char[4]' lvalue "STR"
    |-IfStmt 0x147809278 <line:9:5, line:12:5>
    | |-BinaryOperator 0x147809078 <line:9:9, col:49> 'int' contains-errors '<'
    | | |-CallExpr 0x147809038 <col:9, col:45> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x147808eb8 <col:9> 'int ()' Function 0x147808e00 'GetSequence' 'int ()'
    | | | |-RecoveryExpr 0x147808ed8 <col:21> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x147809020 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x147809000 <col:29> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x147808f48 <col:34, col:35> 'int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x147808f28 <col:35> 'int' lvalue Var 0x1471283f0 'length' 'int'
    | | | `-DeclRefExpr 0x147808f60 <col:43> 'int' lvalue ParmVar 0x147128170 'sz' 'int'
    | | `-IntegerLiteral 0x147808fc0 <col:49> 'int' 0
    | `-CompoundStmt 0x147809258 <col:52, line:12:5>
    |   |-CallExpr 0x1478091d0 <line:10:9, col:26> 'int'
    |   | |-ImplicitCastExpr 0x1478091b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x147809178 <col:9> 'int ()' Function 0x1478090c0 'WOLFSSL_MSG' 'int ()'
    |   | `-ImplicitCastExpr 0x1478091f8 <col:21> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x147809198 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x147809248 <line:11:9, col:16>
    |     `-RecoveryExpr 0x147809228 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x147809340 <line:14:5, line:15:16>
    | |-BinaryOperator 0x1478092f0 <line:14:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x1478092d8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x147809298 <col:9> 'int' lvalue Var 0x1471283f0 'length' 'int'
    | | `-IntegerLiteral 0x1478092b8 <col:19> 'int' 0
    | `-ReturnStmt 0x147809330 <line:15:9, col:16>
    |   `-IntegerLiteral 0x147809310 <col:16> 'int' 0
    |-BinaryOperator 0x1478095b8 <line:19:5, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x147809360 <col:5> 'int' lvalue Var 0x1471284a8 'ret' 'int'
    | `-CallExpr 0x147809580 <col:11, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x147809460 <col:11> 'int ()' Function 0x1478093a8 'GetBoolean' 'int ()'
    |   |-RecoveryExpr 0x147809480 <col:22> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x147809568 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x147809548 <col:30> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1478094d0 <col:35> 'int' lvalue ParmVar 0x147128170 'sz' 'int'
    |-IfStmt 0x147809750 <line:22:5, line:25:5>
    | |-BinaryOperator 0x147809630 <line:22:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x147809618 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1478095d8 <col:9> 'int' lvalue Var 0x1471284a8 'ret' 'int'
    | | `-IntegerLiteral 0x1478095f8 <col:15> 'int' 0
    | `-CompoundStmt 0x147809730 <col:18, line:25:5>
    |   |-CallExpr 0x1478096a8 <line:23:9, col:26> 'int'
    |   | |-ImplicitCastExpr 0x147809690 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x147809650 <col:9> 'int ()' Function 0x1478090c0 'WOLFSSL_MSG' 'int ()'
    |   | `-ImplicitCastExpr 0x1478096d0 <col:21> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x147809670 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x147809720 <line:24:9, col:16>
    |     `-ImplicitCastExpr 0x147809708 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1478096e8 <col:16> 'int' lvalue Var 0x1471284a8 'ret' 'int'
    |-IfStmt 0x1478098b0 <line:39:5, line:41:5>
    | |-RecoveryExpr 0x147809848 <line:39:9, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x147809898 <col:28, line:41:5>
    |   `-ReturnStmt 0x147809888 <line:40:9, col:16>
    |     `-IntegerLiteral 0x147809868 <col:16> 'int' 0
    |-BinaryOperator 0x147809b28 <line:43:5, col:41> 'int' contains-errors '='
    | |-DeclRefExpr 0x1478098d0 <col:5> 'int' lvalue Var 0x1471284a8 'ret' 'int'
    | `-CallExpr 0x147809af0 <col:11, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1478099d0 <col:11> 'int ()' Function 0x147809918 'GetInteger7Bit' 'int ()'
    |   |-RecoveryExpr 0x1478099f0 <col:26> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x147809ad8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x147809ab8 <col:34> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x147809a40 <col:39> 'int' lvalue ParmVar 0x147128170 'sz' 'int'
    |-IfStmt 0x147809c08 <line:44:5, line:45:16>
    | |-BinaryOperator 0x147809ba0 <line:44:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x147809b88 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x147809b48 <col:9> 'int' lvalue Var 0x1471284a8 'ret' 'int'
    | | `-IntegerLiteral 0x147809b68 <col:15> 'int' 0
    | `-ReturnStmt 0x147809bf8 <line:45:9, col:16>
    |   `-ImplicitCastExpr 0x147809be0 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x147809bc0 <col:16> 'int' lvalue Var 0x1471284a8 'ret' 'int'
    |-BinaryOperator 0x147809d80 <line:47:5, col:27> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x147809d18 <col:5, col:11> '<dependent type>' contains-errors lvalue ->pathLengthSet
    | | `-RecoveryExpr 0x147809cf0 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x147809cd0 <col:5> 'int *' lvalue ParmVar 0x147128228 'cert' 'int *'
    | `-IntegerLiteral 0x147809d60 <col:27> 'int' 1
    `-ReturnStmt 0x147809dc0 <line:49:5, col:12>
      `-IntegerLiteral 0x147809da0 <col:12> 'int' 0
