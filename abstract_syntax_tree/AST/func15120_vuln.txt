TranslationUnitDecl 0x134055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1340564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x134055bd0 '__int128'
|-TypedefDecl 0x134056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x134055bf0 'unsigned __int128'
|-TypedefDecl 0x13480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13480bc00 'struct __NSConstantString_tag'
|   `-Record 0x134056580 '__NSConstantString_tag'
|-TypedefDecl 0x13480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134055d90 '__SVInt8_t'
|-TypedefDecl 0x13480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134055db0 '__SVInt16_t'
|-TypedefDecl 0x13480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134055dd0 '__SVInt32_t'
|-TypedefDecl 0x13480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134055df0 '__SVInt64_t'
|-TypedefDecl 0x13480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134055e10 '__SVUint8_t'
|-TypedefDecl 0x13480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134055e30 '__SVUint16_t'
|-TypedefDecl 0x13480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134055e50 '__SVUint32_t'
|-TypedefDecl 0x13480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134055e70 '__SVUint64_t'
|-TypedefDecl 0x13480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134055e90 '__SVFloat16_t'
|-TypedefDecl 0x13480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1340560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1340560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1340560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1340561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1340561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1340561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1340562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1340562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1340562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134056390 '__SVBool_t'
|-TypedefDecl 0x13480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1340563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1340563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1340563f0 '__SVCount_t'
|-TypedefDecl 0x13480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13480dbb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
|-TypedefDecl 0x13480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13480dbb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
|-FunctionDecl 0x1348274d8 <dataset_diviso_filec/func15120_vuln.c:1:1, line:39:1> line:1:16 invalid gadget_dev_desc_UDC_store 'int (struct config_item *, const char *, int)' static
| |-ParmVarDecl 0x13480e268 <col:42, col:62> col:62 used item 'struct config_item *'
| |-ParmVarDecl 0x13480e2e8 <line:2:3, col:15> col:15 used page 'const char *'
| |-ParmVarDecl 0x13480e368 <col:21, col:28> col:28 invalid len 'int'
| `-CompoundStmt 0x13482ac70 <line:3:1, line:39:1>
|   |-DeclStmt 0x1348279c8 <line:4:2, col:47>
|   | |-RecordDecl 0x134827598 <col:2, col:9> col:9 struct gadget_info
|   | `-VarDecl 0x134827708 <col:2, col:46> col:22 used gi 'struct gadget_info *' cinit
|   |   `-ImplicitCastExpr 0x134827998 <col:27, col:46> 'struct gadget_info *' <IntegralToPointer>
|   |     `-CallExpr 0x134827958 <col:27, col:46> 'int'
|   |       |-ImplicitCastExpr 0x134827940 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1348278d0 <col:27> 'int ()' Function 0x134827818 'to_gadget_info' 'int ()'
|   |       `-ImplicitCastExpr 0x134827980 <col:42> 'struct config_item *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1348278f0 <col:42> 'struct config_item *' lvalue ParmVar 0x13480e268 'item' 'struct config_item *'
|   |-DeclStmt 0x134827a60 <line:5:2, col:12>
|   | `-VarDecl 0x1348279f8 <col:2, col:8> col:8 used name 'char *'
|   |-DeclStmt 0x134827af8 <line:6:2, col:9>
|   | `-VarDecl 0x134827a90 <col:2, col:6> col:6 used ret 'int'
|   |-BinaryOperator 0x134827d08 <line:8:2, col:33> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x134827b10 <col:2> 'char *' lvalue Var 0x1348279f8 'name' 'char *'
|   | `-CallExpr 0x134827cd8 <col:9, col:33> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x134827c10 <col:9> 'int ()' Function 0x134827b58 'kstrdup' 'int ()'
|   |   |-DeclRefExpr 0x134827c30 <col:17> 'const char *' lvalue ParmVar 0x13480e2e8 'page' 'const char *'
|   |   `-RecoveryExpr 0x134827cb8 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x134827e20 <line:9:2, line:10:11>
|   | |-UnaryOperator 0x134827d60 <line:9:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x134827d48 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x134827d28 <col:7> 'char *' lvalue Var 0x1348279f8 'name' 'char *'
|   | `-ReturnStmt 0x134827e10 <line:10:3, col:11>
|   |   `-UnaryOperator 0x134827df8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x134827de0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x134827dc0 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x134828020 <line:11:2, line:12:19>
|   | |-BinaryOperator 0x134827f10 <line:11:6, col:23> 'int' contains-errors '=='
|   | | |-ArraySubscriptExpr 0x134827ed8 <col:6, col:18> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x134827ec0 <col:6> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x134827e40 <col:6> 'char *' lvalue Var 0x1348279f8 'name' 'char *'
|   | | | `-BinaryOperator 0x134827ea0 <col:11, col:17> '<dependent type>' contains-errors '-'
|   | | |   |-RecoveryExpr 0x134827e60 <col:11> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x134827e80 <col:17> 'int' 1
|   | | `-CharacterLiteral 0x134827ef8 <col:23> 'int' 10
|   | `-BinaryOperator 0x134828000 <line:12:3, col:19> '<dependent type>' contains-errors '='
|   |   |-ArraySubscriptExpr 0x134827fc8 <col:3, col:15> '<dependent type>' contains-errors lvalue
|   |   | |-ImplicitCastExpr 0x134827fb0 <col:3> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x134827f30 <col:3> 'char *' lvalue Var 0x1348279f8 'name' 'char *'
|   |   | `-BinaryOperator 0x134827f90 <col:8, col:14> '<dependent type>' contains-errors '-'
|   |   |   |-RecoveryExpr 0x134827f50 <col:8> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x134827f70 <col:14> 'int' 1
|   |   `-CharacterLiteral 0x134827fe8 <col:19> 'int' 0
|   |-CallExpr 0x1348281b8 <line:14:2, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x134828120 <col:2> 'int ()' Function 0x134828068 'mutex_lock' 'int ()'
|   | `-UnaryOperator 0x1348281a0 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x134828178 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x134828140 <col:14> 'struct gadget_info *' lvalue Var 0x134827708 'gi' 'struct gadget_info *'
|   |-IfStmt 0x13482a290 <line:16:2, line:32:2> has_else
|   | |-UnaryOperator 0x1348296a0 <line:16:6, col:18> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x134829648 <col:7, col:18> 'unsigned long'
|   | |   |-ImplicitCastExpr 0x134829630 <col:7> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x134828388 <col:7> 'unsigned long (const char *)' Function 0x134828218 'strlen' 'unsigned long (const char *)'
|   | |   `-ImplicitCastExpr 0x134829688 <col:14> 'const char *' <NoOp>
|   | |     `-ImplicitCastExpr 0x134829670 <col:14> 'char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1348283a8 <col:14> 'char *' lvalue Var 0x1348279f8 'name' 'char *'
|   | |-CompoundStmt 0x134829aa8 <col:21, line:21:2>
|   | | |-BinaryOperator 0x134829850 <line:17:3, col:29> 'int' '='
|   | | | |-DeclRefExpr 0x1348296b8 <col:3> 'int' lvalue Var 0x134827a90 'ret' 'int'
|   | | | `-CallExpr 0x134829810 <col:9, col:29> 'int'
|   | | |   |-ImplicitCastExpr 0x1348297f8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x1348297b8 <col:9> 'int ()' Function 0x134829700 'unregister_gadget' 'int ()'
|   | | |   `-ImplicitCastExpr 0x134829838 <col:27> 'struct gadget_info *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1348297d8 <col:27> 'struct gadget_info *' lvalue Var 0x134827708 'gi' 'struct gadget_info *'
|   | | |-IfStmt 0x134829910 <line:18:3, line:19:9>
|   | | | |-ImplicitCastExpr 0x134829890 <line:18:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x134829870 <col:7> 'int' lvalue Var 0x134827a90 'ret' 'int'
|   | | | `-GotoStmt 0x1348298f8 <line:19:4, col:9> 'err' 0x1348298a8
|   | | `-CallExpr 0x134829a68 <line:20:3, col:13> 'int'
|   | |   |-ImplicitCastExpr 0x134829a50 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x134829a10 <col:3> 'int ()' Function 0x134829958 'kfree' 'int ()'
|   | |   `-ImplicitCastExpr 0x134829a90 <col:9> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x134829a30 <col:9> 'char *' lvalue Var 0x1348279f8 'name' 'char *'
|   | `-CompoundStmt 0x13482a260 <line:21:9, line:32:2>
|   |   |-IfStmt 0x134829cf0 <line:22:3, line:25:3>
|   |   | |-CXXDependentScopeMemberExpr 0x134829b78 <line:22:7, col:35> '<dependent type>' contains-errors lvalue .udc_name
|   |   | | `-CXXDependentScopeMemberExpr 0x134829b30 <col:7, col:21> '<dependent type>' contains-errors lvalue .gadget_driver
|   |   | |   `-RecoveryExpr 0x134829b08 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x134829ad0 <col:7> 'struct gadget_info *' lvalue Var 0x134827708 'gi' 'struct gadget_info *'
|   |   | `-CompoundStmt 0x134829cd0 <col:45, line:25:3>
|   |   |   |-BinaryOperator 0x134829c98 <line:23:4, col:11> 'int' contains-errors '='
|   |   |   | |-DeclRefExpr 0x134829bc0 <col:4> 'int' lvalue Var 0x134827a90 'ret' 'int'
|   |   |   | `-UnaryOperator 0x134829c80 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x134829c68 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     `-RecoveryExpr 0x134829c48 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   `-GotoStmt 0x134829cb8 <line:24:4, col:9> 'err' 0x1348298a8
|   |   |-BinaryOperator 0x134829e20 <line:26:3, col:42> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x134829db8 <col:3, col:31> '<dependent type>' contains-errors lvalue .udc_name
|   |   | | `-CXXDependentScopeMemberExpr 0x134829d70 <col:3, col:17> '<dependent type>' contains-errors lvalue .gadget_driver
|   |   | |   `-RecoveryExpr 0x134829d48 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x134829d10 <col:3> 'struct gadget_info *' lvalue Var 0x134827708 'gi' 'struct gadget_info *'
|   |   | `-DeclRefExpr 0x134829e00 <col:42> 'char *' lvalue Var 0x1348279f8 'name' 'char *'
|   |   |-BinaryOperator 0x13482a048 <line:27:3, col:61> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x134829e40 <col:3> 'int' lvalue Var 0x134827a90 'ret' 'int'
|   |   | `-CallExpr 0x13482a020 <col:9, col:61> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x134829f40 <col:9> 'int ()' Function 0x134829e88 'usb_gadget_probe_driver' 'int ()'
|   |   |   `-UnaryOperator 0x13482a008 <col:33, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-CXXDependentScopeMemberExpr 0x134829fc0 <col:34, col:48> '<dependent type>' contains-errors lvalue .gadget_driver
|   |   |       `-RecoveryExpr 0x134829f98 <col:34, col:38> '<dependent type>' contains-errors lvalue
|   |   |         `-DeclRefExpr 0x134829f60 <col:34> 'struct gadget_info *' lvalue Var 0x134827708 'gi' 'struct gadget_info *'
|   |   `-IfStmt 0x13482a240 <line:28:3, line:31:3>
|   |     |-ImplicitCastExpr 0x13482a088 <line:28:7> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13482a068 <col:7> 'int' lvalue Var 0x134827a90 'ret' 'int'
|   |     `-CompoundStmt 0x13482a220 <col:12, line:31:3>
|   |       |-BinaryOperator 0x13482a1e8 <line:29:4, col:43> '<dependent type>' contains-errors '='
|   |       | |-CXXDependentScopeMemberExpr 0x13482a148 <col:4, col:32> '<dependent type>' contains-errors lvalue .udc_name
|   |       | | `-CXXDependentScopeMemberExpr 0x13482a100 <col:4, col:18> '<dependent type>' contains-errors lvalue .gadget_driver
|   |       | |   `-RecoveryExpr 0x13482a0d8 <col:4, col:8> '<dependent type>' contains-errors lvalue
|   |       | |     `-DeclRefExpr 0x13482a0a0 <col:4> 'struct gadget_info *' lvalue Var 0x134827708 'gi' 'struct gadget_info *'
|   |       | `-RecoveryExpr 0x13482a1c8 <col:43> '<dependent type>' contains-errors lvalue
|   |       `-GotoStmt 0x13482a208 <line:30:4, col:9> 'err' 0x1348298a8
|   |-CallExpr 0x13482a438 <line:33:2, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13482a3a0 <col:2> 'int ()' Function 0x13482a2e8 'mutex_unlock' 'int ()'
|   | `-UnaryOperator 0x13482a420 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x13482a3f8 <col:16, col:20> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x13482a3c0 <col:16> 'struct gadget_info *' lvalue Var 0x134827708 'gi' 'struct gadget_info *'
|   |-ReturnStmt 0x13482a480 <line:34:2, col:9>
|   | `-RecoveryExpr 0x13482a460 <col:9> '<dependent type>' contains-errors lvalue
|   |-LabelStmt 0x13482a528 <line:35:1, line:36:12> 'err'
|   | `-CallExpr 0x13482a4e8 <col:2, col:12> 'int'
|   |   |-ImplicitCastExpr 0x13482a4d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13482a490 <col:2> 'int ()' Function 0x134829958 'kfree' 'int ()'
|   |   `-ImplicitCastExpr 0x13482a510 <col:8> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13482a4b0 <col:8> 'char *' lvalue Var 0x1348279f8 'name' 'char *'
|   |-CallExpr 0x13482ac00 <line:37:2, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13482a548 <col:2> 'int ()' Function 0x13482a2e8 'mutex_unlock' 'int ()'
|   | `-UnaryOperator 0x13482a5c8 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x13482a5a0 <col:16, col:20> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x13482a568 <col:16> 'struct gadget_info *' lvalue Var 0x134827708 'gi' 'struct gadget_info *'
|   `-ReturnStmt 0x13482ac60 <line:38:2, col:9>
|     `-ImplicitCastExpr 0x13482ac48 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13482ac28 <col:9> 'int' lvalue Var 0x134827a90 'ret' 'int'
`-FunctionDecl 0x134828218 <line:16:7> col:7 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x134828318 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1348282c0 <<invalid sloc>> Implicit 902
