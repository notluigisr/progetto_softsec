TranslationUnitDecl 0x15784ca08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15784d8b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15784cfd0 '__int128'
|-TypedefDecl 0x15784d928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15784cff0 'unsigned __int128'
|-TypedefDecl 0x15880ec30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15880ea00 'struct __NSConstantString_tag'
|   `-Record 0x15784d980 '__NSConstantString_tag'
|-TypedefDecl 0x15880ec98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15784d190 '__SVInt8_t'
|-TypedefDecl 0x15880ed00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15784d1b0 '__SVInt16_t'
|-TypedefDecl 0x15880ed68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15784d1d0 '__SVInt32_t'
|-TypedefDecl 0x15880edd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15784d1f0 '__SVInt64_t'
|-TypedefDecl 0x15880ee38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15784d210 '__SVUint8_t'
|-TypedefDecl 0x15880eea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15784d230 '__SVUint16_t'
|-TypedefDecl 0x15880ef08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15784d250 '__SVUint32_t'
|-TypedefDecl 0x15880ef70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15784d270 '__SVUint64_t'
|-TypedefDecl 0x15880efd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15784d290 '__SVFloat16_t'
|-TypedefDecl 0x15880f040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15784d2b0 '__SVFloat32_t'
|-TypedefDecl 0x15880f0a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15784d2d0 '__SVFloat64_t'
|-TypedefDecl 0x15880f110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15784d2f0 '__SVBfloat16_t'
|-TypedefDecl 0x15880f178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15784d310 '__clang_svint8x2_t'
|-TypedefDecl 0x15880f1e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15784d330 '__clang_svint16x2_t'
|-TypedefDecl 0x15880f248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15784d350 '__clang_svint32x2_t'
|-TypedefDecl 0x15880f2b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15784d370 '__clang_svint64x2_t'
|-TypedefDecl 0x15880f318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15784d390 '__clang_svuint8x2_t'
|-TypedefDecl 0x15880f380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15784d3b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15880f3e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15784d3d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15880f450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15784d3f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15880f4b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15784d410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15880f520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15784d430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15880f588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15784d450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15880f5f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15784d470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15880f658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15784d490 '__clang_svint8x3_t'
|-TypedefDecl 0x15880f6c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15784d4b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15880f728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15784d4d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15880f790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15784d4f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15880f7f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15784d510 '__clang_svuint8x3_t'
|-TypedefDecl 0x15880f860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15784d530 '__clang_svuint16x3_t'
|-TypedefDecl 0x15880f8c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15784d550 '__clang_svuint32x3_t'
|-TypedefDecl 0x15880f930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15784d570 '__clang_svuint64x3_t'
|-TypedefDecl 0x15880f998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15784d590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x158819400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15784d5b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x158819468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15784d5d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1588194d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15784d5f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x158819538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15784d610 '__clang_svint8x4_t'
|-TypedefDecl 0x1588195a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15784d630 '__clang_svint16x4_t'
|-TypedefDecl 0x158819608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15784d650 '__clang_svint32x4_t'
|-TypedefDecl 0x158819670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15784d670 '__clang_svint64x4_t'
|-TypedefDecl 0x1588196d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15784d690 '__clang_svuint8x4_t'
|-TypedefDecl 0x158819740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15784d6b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1588197a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15784d6d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x158819810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15784d6f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x158819878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15784d710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1588198e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15784d730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x158819948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15784d750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1588199b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15784d770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x158819a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15784d790 '__SVBool_t'
|-TypedefDecl 0x158819a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15784d7b0 '__clang_svboolx2_t'
|-TypedefDecl 0x158819ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15784d7d0 '__clang_svboolx4_t'
|-TypedefDecl 0x158819b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15784d7f0 '__SVCount_t'
|-TypedefDecl 0x158819bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x158819bb0 'char *'
|   `-BuiltinType 0x15784cab0 'char'
|-TypedefDecl 0x158819c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x158819bb0 'char *'
|   `-BuiltinType 0x15784cab0 'char'
|-FunctionDecl 0x158819df8 <dataset_diviso_filec/func20646_vuln.c:1:1, line:48:1> line:1:14 invalid dh_init 'int (int *)'
| |-ParmVarDecl 0x158819d28 <col:22, col:39> col:39 referenced invalid section 'int *'
| `-CompoundStmt 0x150009350 <col:48, line:48:1>
|   |-DeclStmt 0x158819ff0 <line:3:5, col:13>
|   | |-VarDecl 0x158819ef0 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x158819f70 <col:5, col:12> col:12 used n 'int'
|   |-DeclStmt 0x15881a118 <line:4:5, col:26>
|   | `-VarDecl 0x15881a0b0 <col:5, col:25> col:10 used description 'char[128]'
|   |-BinaryOperator 0x15881a390 <line:5:5, col:27> '<dependent type>' contains-errors '*'
|   | |-CallExpr 0x15881a348 <col:5, col:24> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x15881a290 <col:5> 'int ()' Function 0x15881a1d8 'STACK_OF' 'int ()'
|   | | `-RecoveryExpr 0x15881a328 <col:14> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x15881a370 <col:27> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x157919ab0 <line:7:5, col:36> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x157919a48 <col:5, col:21> '<dependent type>' contains-errors lvalue .dh_temp_params
|   | | `-CXXDependentScopeMemberExpr 0x157919a00 <col:5, col:14> '<dependent type>' contains-errors lvalue ->option
|   | |   `-RecoveryExpr 0x15881a3d0 <col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x15881a3b0 <col:5> 'int *' lvalue ParmVar 0x158819d28 'section' 'int *'
|   | `-IntegerLiteral 0x157919a90 <col:36> 'int' 0
|   |-IfStmt 0x157919d28 <line:11:5, line:12:16>
|   | |-UnaryOperator 0x157919ce0 <line:11:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x157919cc8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x157919ca8 <col:9> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x157919d18 <line:12:9, col:16>
|   |   `-IntegerLiteral 0x157919cf8 <col:16> 'int' 1
|   |-BinaryOperator 0x157919f10 <line:13:5, col:32> 'int' contains-errors '='
|   | |-DeclRefExpr 0x157919d48 <col:5> 'int' lvalue Var 0x158819f70 'n' 'int'
|   | `-CallExpr 0x157919ee8 <col:7, col:32> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x157919e48 <col:7> 'int ()' Function 0x157919d90 'sk_SSL_CIPHER_num' 'int ()'
|   |   `-RecoveryExpr 0x157919ec8 <col:25> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x147809ae8 <line:14:5, line:24:5>
|   | |-BinaryOperator 0x157919f70 <line:14:9, col:11> 'int' '='
|   | | |-DeclRefExpr 0x157919f30 <col:9> 'int' lvalue Var 0x158819ef0 'i' 'int'
|   | | `-IntegerLiteral 0x157919f50 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15791a000 <col:14, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x157919fd0 <col:14> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x157919f90 <col:14> 'int' lvalue Var 0x158819ef0 'i' 'int'
|   | | `-ImplicitCastExpr 0x157919fe8 <col:16> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x157919fb0 <col:16> 'int' lvalue Var 0x158819f70 'n' 'int'
|   | |-UnaryOperator 0x15791a040 <col:19, col:21> 'int' prefix '++'
|   | | `-DeclRefExpr 0x15791a020 <col:21> 'int' lvalue Var 0x158819ef0 'i' 'int'
|   | `-CompoundStmt 0x147809ac0 <col:24, line:24:5>
|   |   |-BinaryOperator 0x15791a0d8 <line:15:9, col:22> 'char' '='
|   |   | |-UnaryOperator 0x15791a090 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x15791a078 <col:10> 'char *' <ArrayToPointerDecay>
|   |   | |   `-DeclRefExpr 0x15791a058 <col:10> 'char[128]' lvalue Var 0x15881a0b0 'description' 'char[128]'
|   |   | `-ImplicitCastExpr 0x15791a0c0 <col:22> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x15791a0a8 <col:22> 'int' 0
|   |   |-CallExpr 0x15791a448 <line:16:9, line:17:44> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15791a1d8 <line:16:9> 'int ()' Function 0x15791a120 'SSL_CIPHER_description' 'int ()'
|   |   | |-CallExpr 0x15791a418 <col:32, col:62> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x15791a2d8 <col:32> 'int ()' Function 0x15791a220 'sk_SSL_CIPHER_value' 'int ()'
|   |   | | |-RecoveryExpr 0x15791a3f8 <col:52> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x15791a310 <col:61> 'int' lvalue Var 0x158819ef0 'i' 'int'
|   |   | |-DeclRefExpr 0x15791a360 <line:17:13> 'char[128]' lvalue Var 0x15881a0b0 'description' 'char[128]'
|   |   | `-UnaryExprOrTypeTraitExpr 0x15791a3a0 <col:26, col:33> 'unsigned long' sizeof
|   |   |   `-DeclRefExpr 0x15791a380 <col:33> 'char[128]' lvalue Var 0x15881a0b0 'description' 'char[128]' non_odr_use_unevaluated
|   |   `-IfStmt 0x147809aa0 <line:19:9, line:23:9>
|   |     |-CallExpr 0x1478095f8 <line:19:12, col:37> 'char *'
|   |     | |-ImplicitCastExpr 0x1478095e0 <col:12> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1478094e0 <col:12> 'char *(const char *, const char *)' Function 0x15791a8e0 'strstr' 'char *(const char *, const char *)'
|   |     | |-ImplicitCastExpr 0x147809640 <col:19> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x147809628 <col:19> 'char *' <ArrayToPointerDecay>
|   |     | |   `-DeclRefExpr 0x147809500 <col:19> 'char[128]' lvalue Var 0x15881a0b0 'description' 'char[128]'
|   |     | `-ImplicitCastExpr 0x147809670 <col:32> 'const char *' <NoOp>
|   |     |   `-ImplicitCastExpr 0x147809658 <col:32> 'char *' <ArrayToPointerDecay>
|   |     |     `-StringLiteral 0x147809560 <col:32> 'char[4]' lvalue "STR"
|   |     `-CompoundStmt 0x147809a80 <col:40, line:23:9>
|   |       |-CallExpr 0x147809a40 <line:20:13, line:21:69> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x147809768 <line:20:13> 'int ()' Function 0x1478096b0 's_log' 'int ()'
|   |       | |-RecoveryExpr 0x1478099a8 <col:19> '<dependent type>' contains-errors lvalue
|   |       | |-StringLiteral 0x1478097a0 <col:29> 'char[4]' lvalue "STR"
|   |       | `-CallExpr 0x147809a18 <line:21:17, col:68> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x1478098a0 <col:17> 'int ()' Function 0x1478097e8 'SSL_CIPHER_get_name' 'int ()'
|   |       |   `-CallExpr 0x1478099e8 <col:37, col:67> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x1478098c0 <col:37> 'int ()' Function 0x15791a220 'sk_SSL_CIPHER_value' 'int ()'
|   |       |     |-RecoveryExpr 0x1478099c8 <col:57> '<dependent type>' contains-errors lvalue
|   |       |     `-DeclRefExpr 0x1478098f8 <col:66> 'int' lvalue Var 0x158819ef0 'i' 'int'
|   |       `-BreakStmt 0x147809a78 <line:22:13>
|   |-IfStmt 0x147809c38 <line:25:5, line:28:5>
|   | |-BinaryOperator 0x147809b90 <line:25:8, col:11> 'int' '=='
|   | | |-ImplicitCastExpr 0x147809b60 <col:8> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x147809b20 <col:8> 'int' lvalue Var 0x158819ef0 'i' 'int'
|   | | `-ImplicitCastExpr 0x147809b78 <col:11> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x147809b40 <col:11> 'int' lvalue Var 0x158819f70 'n' 'int'
|   | `-CompoundStmt 0x147809c20 <col:14, line:28:5>
|   |   `-ReturnStmt 0x147809c10 <line:27:9, col:16>
|   |     `-IntegerLiteral 0x147809bf0 <col:16> 'int' 0
|   |-IfStmt 0x14780a2f0 <line:35:5, line:40:5>
|   | |-RecoveryExpr 0x147809ec0 <line:35:8> '_Bool' contains-errors
|   | `-CompoundStmt 0x14780a2d8 <col:12, line:40:5>
|   |   `-ReturnStmt 0x14780a2c8 <line:39:9, col:16>
|   |     `-IntegerLiteral 0x14780a2a8 <col:16> 'int' 0
|   |-BinaryOperator 0x1500092c0 <line:45:5, col:36> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x150009258 <col:5, col:21> '<dependent type>' contains-errors lvalue .dh_temp_params
|   | | `-CXXDependentScopeMemberExpr 0x150009210 <col:5, col:14> '<dependent type>' contains-errors lvalue ->option
|   | |   `-RecoveryExpr 0x1500091e8 <col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x1500091c8 <col:5> 'int *' lvalue ParmVar 0x158819d28 'section' 'int *'
|   | `-IntegerLiteral 0x1500092a0 <col:36> 'int' 1
|   `-ReturnStmt 0x150009340 <line:47:5, col:12>
|     `-IntegerLiteral 0x150009320 <col:12> 'int' 0
`-FunctionDecl 0x15791a8e0 <line:19:12> col:12 implicit used strstr 'char *(const char *, const char *)' extern
  |-ParmVarDecl 0x147809400 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x147809468 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15791a988 <<invalid sloc>> Implicit 898
