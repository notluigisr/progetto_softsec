TranslationUnitDecl 0x11f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f855bd0 '__int128'
|-TypedefDecl 0x11f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f855bf0 'unsigned __int128'
|-TypedefDecl 0x12800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12800bc00 'struct __NSConstantString_tag'
|   `-Record 0x11f856580 '__NSConstantString_tag'
|-TypedefDecl 0x12800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f855d90 '__SVInt8_t'
|-TypedefDecl 0x12800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f855db0 '__SVInt16_t'
|-TypedefDecl 0x12800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f855dd0 '__SVInt32_t'
|-TypedefDecl 0x12800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f855df0 '__SVInt64_t'
|-TypedefDecl 0x12800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f855e10 '__SVUint8_t'
|-TypedefDecl 0x12800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f855e30 '__SVUint16_t'
|-TypedefDecl 0x12800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f855e50 '__SVUint32_t'
|-TypedefDecl 0x12800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f855e70 '__SVUint64_t'
|-TypedefDecl 0x12800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f855e90 '__SVFloat16_t'
|-TypedefDecl 0x12800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f856390 '__SVBool_t'
|-TypedefDecl 0x12800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8563f0 '__SVCount_t'
|-TypedefDecl 0x12800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-TypedefDecl 0x12800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
`-FunctionDecl 0x128026978 <dataset_diviso_filec/func9997_vuln.c:1:1, line:54:1> line:1:12 faultin_page 'int (struct task_struct *, struct vm_area_struct *, unsigned long, unsigned int *, int *)' static
  |-ParmVarDecl 0x12800e248 <col:25, col:45> col:45 used tsk 'struct task_struct *'
  |-ParmVarDecl 0x128026628 <col:50, col:73> col:73 used vma 'struct vm_area_struct *'
  |-ParmVarDecl 0x1280266a8 <line:2:3, col:17> col:17 used address 'unsigned long'
  |-ParmVarDecl 0x128026758 <col:26, col:40> col:40 used flags 'unsigned int *'
  |-ParmVarDecl 0x128026808 <col:47, col:52> col:52 used nonblocking 'int *'
  `-CompoundStmt 0x11f923018 <line:3:1, line:54:1>
    |-DeclStmt 0x128026b48 <line:4:2, col:30>
    | `-VarDecl 0x128026aa8 <col:2, col:29> col:15 used fault_flags 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x128026b30 <col:29> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x128026b10 <col:29> 'int' 0
    |-DeclStmt 0x128026be0 <line:5:2, col:9>
    | `-VarDecl 0x128026b78 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x128026d90 <line:8:2, line:9:11>
    | |-RecoveryExpr 0x128026cc8 <line:8:6, col:49> '_Bool' contains-errors
    | `-ReturnStmt 0x128026d80 <line:9:3, col:11>
    |   `-UnaryOperator 0x128026d68 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x128026d50 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x128026d30 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128027390 <line:11:2, line:14:11>
    | |-RecoveryExpr 0x1280272c8 <line:11:6, line:13:51> '_Bool' contains-errors
    | `-ReturnStmt 0x128027380 <line:14:3, col:11>
    |   `-UnaryOperator 0x128027368 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x128027350 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x128027330 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128027590 <line:15:2, line:16:18>
    | |-BinaryOperator 0x1280274b8 <line:15:6, col:15> '<dependent type>' contains-errors '&'
    | | |-UnaryOperator 0x128027480 <col:6, col:7> 'unsigned int' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x128027468 <col:7> 'unsigned int *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1280273b0 <col:7> 'unsigned int *' lvalue ParmVar 0x128026758 'flags' 'unsigned int *'
    | | `-RecoveryExpr 0x128027498 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x128027560 <line:16:3, col:18> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x1280274d8 <col:3> 'unsigned int' lvalue Var 0x128026aa8 'fault_flags' 'unsigned int'
    |   `-RecoveryExpr 0x128027540 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128809790 <line:17:2, line:18:18>
    | |-BinaryOperator 0x1288096b8 <line:17:6, col:15> '<dependent type>' contains-errors '&'
    | | |-UnaryOperator 0x128809680 <col:6, col:7> 'unsigned int' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x128809668 <col:7> 'unsigned int *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1280275b0 <col:7> 'unsigned int *' lvalue ParmVar 0x128026758 'flags' 'unsigned int *'
    | | `-RecoveryExpr 0x128809698 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x128809760 <line:18:3, col:18> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x1288096d8 <col:3> 'unsigned int' lvalue Var 0x128026aa8 'fault_flags' 'unsigned int'
    |   `-RecoveryExpr 0x128809740 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1288098a0 <line:19:2, line:20:18>
    | |-ImplicitCastExpr 0x1288097d0 <line:19:6> 'int *' <LValueToRValue>
    | | `-DeclRefExpr 0x1288097b0 <col:6> 'int *' lvalue ParmVar 0x128026808 'nonblocking' 'int *'
    | `-CompoundAssignOperator 0x128809870 <line:20:3, col:18> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x1288097e8 <col:3> 'unsigned int' lvalue Var 0x128026aa8 'fault_flags' 'unsigned int'
    |   `-RecoveryExpr 0x128809850 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128809b18 <line:21:2, line:22:43>
    | |-BinaryOperator 0x1288099c8 <line:21:6, col:15> '<dependent type>' contains-errors '&'
    | | |-UnaryOperator 0x128809990 <col:6, col:7> 'unsigned int' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x128809978 <col:7> 'unsigned int *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1288098c0 <col:7> 'unsigned int *' lvalue ParmVar 0x128026758 'flags' 'unsigned int *'
    | | `-RecoveryExpr 0x1288099a8 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x128809ae8 <line:22:3, col:43> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x1288099e8 <col:3> 'unsigned int' lvalue Var 0x128026aa8 'fault_flags' 'unsigned int'
    |   `-BinaryOperator 0x128809ac8 <col:18, col:43> '<dependent type>' contains-errors '|'
    |     |-RecoveryExpr 0x128809a88 <col:18> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x128809aa8 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128809e80 <line:23:2, line:26:2>
    | |-BinaryOperator 0x128809c40 <line:23:6, col:15> '<dependent type>' contains-errors '&'
    | | |-UnaryOperator 0x128809c08 <col:6, col:7> 'unsigned int' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x128809bf0 <col:7> 'unsigned int *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x128809b38 <col:7> 'unsigned int *' lvalue ParmVar 0x128026758 'flags' 'unsigned int *'
    | | `-RecoveryExpr 0x128809c20 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128809e68 <col:27, line:26:2>
    |   `-CallExpr 0x128809e20 <line:24:3, col:55> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x128809d40 <col:3> 'int ()' Function 0x128809c88 'VM_WARN_ON_ONCE' 'int ()'
    |     `-BinaryOperator 0x128809e00 <col:19, col:33> '<dependent type>' contains-errors '&'
    |       |-DeclRefExpr 0x128809d60 <col:19> 'unsigned int' lvalue Var 0x128026aa8 'fault_flags' 'unsigned int'
    |       `-RecoveryExpr 0x128809de0 <col:33> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12880a0b8 <line:28:2, col:49> 'int' '='
    | |-DeclRefExpr 0x128809ea0 <col:2> 'int' lvalue Var 0x128026b78 'ret' 'int'
    | `-CallExpr 0x12880a038 <col:8, col:49> 'int'
    |   |-ImplicitCastExpr 0x12880a020 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x128809fa0 <col:8> 'int ()' Function 0x128809ee8 'handle_mm_fault' 'int ()'
    |   |-ImplicitCastExpr 0x12880a070 <col:24> 'struct vm_area_struct *' <LValueToRValue>
    |   | `-DeclRefExpr 0x128809fc0 <col:24> 'struct vm_area_struct *' lvalue ParmVar 0x128026628 'vma' 'struct vm_area_struct *'
    |   |-ImplicitCastExpr 0x12880a088 <col:29> 'unsigned long' <LValueToRValue>
    |   | `-DeclRefExpr 0x128809fe0 <col:29> 'unsigned long' lvalue ParmVar 0x1280266a8 'address' 'unsigned long'
    |   `-ImplicitCastExpr 0x12880a0a0 <col:38> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x12880a000 <col:38> 'unsigned int' lvalue Var 0x128026aa8 'fault_flags' 'unsigned int'
    |-IfStmt 0x12880a598 <line:29:2, line:35:2>
    | |-RecoveryExpr 0x12880a0f8 <line:29:6, col:12> '_Bool' contains-errors
    | `-CompoundStmt 0x12880a570 <col:28, line:35:2>
    |   |-DeclStmt 0x12880a380 <line:30:3, col:43>
    |   | `-VarDecl 0x12880a130 <col:3, col:42> col:7 used err 'int' cinit
    |   |   `-CallExpr 0x12880a320 <col:13, col:42> 'int'
    |   |     |-ImplicitCastExpr 0x12880a308 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12880a278 <col:13> 'int ()' Function 0x12880a1c0 'vm_fault_to_errno' 'int ()'
    |   |     |-ImplicitCastExpr 0x12880a350 <col:31> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x12880a298 <col:31> 'int' lvalue Var 0x128026b78 'ret' 'int'
    |   |     `-ImplicitCastExpr 0x12880a368 <col:36, col:37> 'unsigned int' <LValueToRValue>
    |   |       `-UnaryOperator 0x12880a2f0 <col:36, col:37> 'unsigned int' lvalue prefix '*' cannot overflow
    |   |         `-ImplicitCastExpr 0x12880a2d8 <col:37> 'unsigned int *' <LValueToRValue>
    |   |           `-DeclRefExpr 0x12880a2b8 <col:37> 'unsigned int *' lvalue ParmVar 0x128026758 'flags' 'unsigned int *'
    |   |-IfStmt 0x12880a418 <line:32:3, line:33:11>
    |   | |-ImplicitCastExpr 0x12880a3b8 <line:32:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12880a398 <col:7> 'int' lvalue Var 0x12880a130 'err' 'int'
    |   | `-ReturnStmt 0x12880a408 <line:33:4, col:11>
    |   |   `-ImplicitCastExpr 0x12880a3f0 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12880a3d0 <col:11> 'int' lvalue Var 0x12880a130 'err' 'int'
    |   `-CallExpr 0x12880a550 <line:34:3, col:7> 'int'
    |     `-ImplicitCastExpr 0x12880a538 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x12880a518 <col:3> 'int ()' Function 0x12880a460 'BUG' 'int ()'
    |-IfStmt 0x11f922d78 <line:37:2, line:42:2>
    | |-ImplicitCastExpr 0x12880a5d8 <line:37:6> 'struct task_struct *' <LValueToRValue>
    | | `-DeclRefExpr 0x12880a5b8 <col:6> 'struct task_struct *' lvalue ParmVar 0x12800e248 'tsk' 'struct task_struct *'
    | `-CompoundStmt 0x11f922d60 <col:11, line:42:2>
    |   `-IfStmt 0x11f922d30 <line:38:3, line:41:16> has_else
    |     |-RecoveryExpr 0x11f922c20 <line:38:7, col:13> '_Bool' contains-errors
    |     |-UnaryOperator 0x11f922ca0 <line:39:4, col:16> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     | `-RecoveryExpr 0x11f922c78 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x11f922c40 <col:4> 'struct task_struct *' lvalue ParmVar 0x12800e248 'tsk' 'struct task_struct *'
    |     `-UnaryOperator 0x11f922d18 <line:41:4, col:16> '<dependent type>' contains-errors postfix '++' cannot overflow
    |       `-RecoveryExpr 0x11f922cf0 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x11f922cb8 <col:4> 'struct task_struct *' lvalue ParmVar 0x12800e248 'tsk' 'struct task_struct *'
    |-IfStmt 0x11f922ed8 <line:44:2, line:48:2>
    | |-RecoveryExpr 0x11f922db8 <line:44:6, col:12> '_Bool' contains-errors
    | `-CompoundStmt 0x11f922ec0 <col:28, line:48:2>
    |   `-IfStmt 0x11f922ea0 <line:45:3, line:46:19>
    |     |-ImplicitCastExpr 0x11f922df8 <line:45:7> 'int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x11f922dd8 <col:7> 'int *' lvalue ParmVar 0x128026808 'nonblocking' 'int *'
    |     `-BinaryOperator 0x11f922e80 <line:46:4, col:19> 'int' '='
    |       |-UnaryOperator 0x11f922e48 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
    |       | `-ImplicitCastExpr 0x11f922e30 <col:5> 'int *' <LValueToRValue>
    |       |   `-DeclRefExpr 0x11f922e10 <col:5> 'int *' lvalue ParmVar 0x128026808 'nonblocking' 'int *'
    |       `-IntegerLiteral 0x11f922e60 <col:19> 'int' 0
    `-ReturnStmt 0x11f923008 <line:53:2, col:9>
      `-IntegerLiteral 0x11f922fe8 <col:9> 'int' 0
