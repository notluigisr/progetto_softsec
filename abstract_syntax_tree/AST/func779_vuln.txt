TranslationUnitDecl 0x15a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a055bd0 '__int128'
|-TypedefDecl 0x15a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a055bf0 'unsigned __int128'
|-TypedefDecl 0x15a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x15a056580 '__NSConstantString_tag'
|-TypedefDecl 0x15a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a055d90 '__SVInt8_t'
|-TypedefDecl 0x15a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a055db0 '__SVInt16_t'
|-TypedefDecl 0x15a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a055dd0 '__SVInt32_t'
|-TypedefDecl 0x15a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a055df0 '__SVInt64_t'
|-TypedefDecl 0x15a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a055e10 '__SVUint8_t'
|-TypedefDecl 0x15a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a055e30 '__SVUint16_t'
|-TypedefDecl 0x15a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a055e50 '__SVUint32_t'
|-TypedefDecl 0x15a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a055e70 '__SVUint64_t'
|-TypedefDecl 0x15a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a055e90 '__SVFloat16_t'
|-TypedefDecl 0x15a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a056390 '__SVBool_t'
|-TypedefDecl 0x15a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a0563f0 '__SVCount_t'
|-TypedefDecl 0x15a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a80dbb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-TypedefDecl 0x15a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a80dbb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
`-FunctionDecl 0x15a122990 <dataset_diviso_filec/func779_vuln.c:1:1, line:37:1> line:1:13 invalid snippet_add_content 'void (struct snippet_context *, struct snippet_data *, const unsigned char *, int, int *)' static
  |-ParmVarDecl 0x15a80e248 <col:33, col:57> col:57 used ctx 'struct snippet_context *'
  |-ParmVarDecl 0x15a122628 <line:2:5, col:26> col:26 used target 'struct snippet_data *'
  |-ParmVarDecl 0x15a1226d8 <line:3:5, col:26> col:26 used data 'const unsigned char *'
  |-ParmVarDecl 0x15a122770 <col:32, col:39> col:39 invalid size 'int'
  |-ParmVarDecl 0x15a122828 <line:4:5, col:13> col:13 invalid count_r 'int *'
  `-CompoundStmt 0x15a8267e0 <line:5:1, line:37:1>
    |-CallExpr 0x15a122ca0 <line:6:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15a122bc0 <col:2> 'int ()' Function 0x15a122b08 'i_assert' 'int ()'
    | `-BinaryOperator 0x15a122c80 <col:11, col:21> 'int' contains-errors '!='
    |   |-DeclRefExpr 0x15a122be0 <col:11> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'
    |   `-RecoveryExpr 0x15a122c60 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15a123478 <line:7:2, line:12:2>
    | |-BinaryOperator 0x15a123398 <line:7:6, line:9:63> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x15a122d08 <line:7:6, col:14> 'int' contains-errors '>='
    | | | |-RecoveryExpr 0x15a122cc8 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x15a122ce8 <col:14> 'int' 3
    | | `-ParenExpr 0x15a123378 <line:8:7, line:9:63> 'int'
    | |   `-BinaryOperator 0x15a123358 <line:8:8, line:9:62> 'int' '||'
    | |     |-ParenExpr 0x15a123020 <line:8:8, col:62> 'int'
    | |     | `-BinaryOperator 0x15a123000 <col:9, col:58> 'int' '&&'
    | |     |   |-BinaryOperator 0x15a122ef8 <col:9, col:39> 'int' '&&'
    | |     |   | |-BinaryOperator 0x15a122df0 <col:9, col:20> 'int' '=='
    | |     |   | | |-ImplicitCastExpr 0x15a122dd8 <col:9, col:15> 'int' <IntegralCast>
    | |     |   | | | `-ImplicitCastExpr 0x15a122dc0 <col:9, col:15> 'unsigned char' <LValueToRValue>
    | |     |   | | |   `-ArraySubscriptExpr 0x15a122d80 <col:9, col:15> 'const unsigned char' lvalue
    | |     |   | | |     |-ImplicitCastExpr 0x15a122d68 <col:9> 'const unsigned char *' <LValueToRValue>
    | |     |   | | |     | `-DeclRefExpr 0x15a122d28 <col:9> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    | |     |   | | |     `-IntegerLiteral 0x15a122d48 <col:14> 'int' 0
    | |     |   | | `-IntegerLiteral 0x15a122da0 <col:20> 'int' 239
    | |     |   | `-BinaryOperator 0x15a122ed8 <col:28, col:39> 'int' '=='
    | |     |   |   |-ImplicitCastExpr 0x15a122ec0 <col:28, col:34> 'int' <IntegralCast>
    | |     |   |   | `-ImplicitCastExpr 0x15a122ea8 <col:28, col:34> 'unsigned char' <LValueToRValue>
    | |     |   |   |   `-ArraySubscriptExpr 0x15a122e68 <col:28, col:34> 'const unsigned char' lvalue
    | |     |   |   |     |-ImplicitCastExpr 0x15a122e50 <col:28> 'const unsigned char *' <LValueToRValue>
    | |     |   |   |     | `-DeclRefExpr 0x15a122e10 <col:28> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    | |     |   |   |     `-IntegerLiteral 0x15a122e30 <col:33> 'int' 1
    | |     |   |   `-IntegerLiteral 0x15a122e88 <col:39> 'int' 187
    | |     |   `-BinaryOperator 0x15a122fe0 <col:47, col:58> 'int' '=='
    | |     |     |-ImplicitCastExpr 0x15a122fc8 <col:47, col:53> 'int' <IntegralCast>
    | |     |     | `-ImplicitCastExpr 0x15a122fb0 <col:47, col:53> 'unsigned char' <LValueToRValue>
    | |     |     |   `-ArraySubscriptExpr 0x15a122f70 <col:47, col:53> 'const unsigned char' lvalue
    | |     |     |     |-ImplicitCastExpr 0x15a122f58 <col:47> 'const unsigned char *' <LValueToRValue>
    | |     |     |     | `-DeclRefExpr 0x15a122f18 <col:47> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    | |     |     |     `-IntegerLiteral 0x15a122f38 <col:52> 'int' 2
    | |     |     `-IntegerLiteral 0x15a122f90 <col:58> 'int' 191
    | |     `-ParenExpr 0x15a123338 <line:9:8, col:62> 'int'
    | |       `-BinaryOperator 0x15a123318 <col:9, col:58> 'int' '&&'
    | |         |-BinaryOperator 0x15a123210 <col:9, col:39> 'int' '&&'
    | |         | |-BinaryOperator 0x15a123108 <col:9, col:20> 'int' '=='
    | |         | | |-ImplicitCastExpr 0x15a1230f0 <col:9, col:15> 'int' <IntegralCast>
    | |         | | | `-ImplicitCastExpr 0x15a1230d8 <col:9, col:15> 'unsigned char' <LValueToRValue>
    | |         | | |   `-ArraySubscriptExpr 0x15a123098 <col:9, col:15> 'const unsigned char' lvalue
    | |         | | |     |-ImplicitCastExpr 0x15a123080 <col:9> 'const unsigned char *' <LValueToRValue>
    | |         | | |     | `-DeclRefExpr 0x15a123040 <col:9> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    | |         | | |     `-IntegerLiteral 0x15a123060 <col:14> 'int' 0
    | |         | | `-IntegerLiteral 0x15a1230b8 <col:20> 'int' 191
    | |         | `-BinaryOperator 0x15a1231f0 <col:28, col:39> 'int' '=='
    | |         |   |-ImplicitCastExpr 0x15a1231d8 <col:28, col:34> 'int' <IntegralCast>
    | |         |   | `-ImplicitCastExpr 0x15a1231c0 <col:28, col:34> 'unsigned char' <LValueToRValue>
    | |         |   |   `-ArraySubscriptExpr 0x15a123180 <col:28, col:34> 'const unsigned char' lvalue
    | |         |   |     |-ImplicitCastExpr 0x15a123168 <col:28> 'const unsigned char *' <LValueToRValue>
    | |         |   |     | `-DeclRefExpr 0x15a123128 <col:28> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    | |         |   |     `-IntegerLiteral 0x15a123148 <col:33> 'int' 1
    | |         |   `-IntegerLiteral 0x15a1231a0 <col:39> 'int' 187
    | |         `-BinaryOperator 0x15a1232f8 <col:47, col:58> 'int' '=='
    | |           |-ImplicitCastExpr 0x15a1232e0 <col:47, col:53> 'int' <IntegralCast>
    | |           | `-ImplicitCastExpr 0x15a1232c8 <col:47, col:53> 'unsigned char' <LValueToRValue>
    | |           |   `-ArraySubscriptExpr 0x15a123288 <col:47, col:53> 'const unsigned char' lvalue
    | |           |     |-ImplicitCastExpr 0x15a123270 <col:47> 'const unsigned char *' <LValueToRValue>
    | |           |     | `-DeclRefExpr 0x15a123230 <col:47> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    | |           |     `-IntegerLiteral 0x15a123250 <col:52> 'int' 2
    | |           `-IntegerLiteral 0x15a1232a8 <col:58> 'int' 239
    | `-CompoundStmt 0x15a123458 <col:66, line:12:2>
    |   |-BinaryOperator 0x15a123428 <line:10:3, col:14> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x15a1233f0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x15a1233d8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x15a1233b8 <col:4> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x15a123408 <col:14> 'int' 3
    |   `-ReturnStmt 0x15a123448 <line:11:3>
    |-IfStmt 0x15a1235a0 <line:13:2, line:16:2>
    | |-BinaryOperator 0x15a123558 <line:13:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x15a123540 <col:6, col:12> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x15a123528 <col:6, col:12> 'unsigned char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x15a1234f0 <col:6, col:12> 'const unsigned char' lvalue
    | | |     |-ImplicitCastExpr 0x15a1234d8 <col:6> 'const unsigned char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x15a123498 <col:6> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    | | |     `-IntegerLiteral 0x15a1234b8 <col:11> 'int' 0
    | | `-CharacterLiteral 0x15a123510 <col:17> 'int' 0
    | `-CompoundStmt 0x15a123588 <col:23, line:16:2>
    |   `-ReturnStmt 0x15a123578 <line:15:3>
    |-IfStmt 0x15a1256a0 <line:17:2, line:24:2>
    | |-CallExpr 0x15a125178 <line:17:6, col:21> 'int'
    | | |-ImplicitCastExpr 0x15a125160 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15a1250b8 <col:6> 'int ()' Function 0x15a125000 'i_isspace' 'int ()'
    | | `-ImplicitCastExpr 0x15a1251b8 <col:16, col:17> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x15a1251a0 <col:16, col:17> 'unsigned char' <LValueToRValue>
    | |     `-UnaryOperator 0x15a125110 <col:16, col:17> 'const unsigned char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x15a1250f8 <col:17> 'const unsigned char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x15a1250d8 <col:17> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    | `-CompoundStmt 0x15a125678 <col:24, line:24:2>
    |   |-IfStmt 0x15a125470 <line:19:3, line:20:26>
    |   | |-BinaryOperator 0x15a125378 <line:19:7, col:34> 'int' contains-errors '>'
    |   | | |-CallExpr 0x15a125330 <col:7, col:30> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x15a1252b0 <col:7> 'int ()' Function 0x15a1251f8 'str_len' 'int ()'
    |   | | | `-RecoveryExpr 0x15a125308 <col:15, col:23> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x15a1252d0 <col:15> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'
    |   | | `-IntegerLiteral 0x15a125358 <col:34> 'int' 1
    |   | `-BinaryOperator 0x15a125450 <line:20:4, col:26> '<dependent type>' contains-errors '='
    |   |   |-RecoveryExpr 0x15a1253d0 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x15a125398 <col:4> 'struct snippet_context *' lvalue ParmVar 0x15a80e248 'ctx' 'struct snippet_context *'
    |   |   `-RecoveryExpr 0x15a125430 <col:26> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x15a125648 <line:21:3, line:22:17>
    |   | |-BinaryOperator 0x15a125550 <line:21:7, col:18> 'int' '=='
    |   | | |-ImplicitCastExpr 0x15a125538 <col:7, col:13> 'int' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x15a125520 <col:7, col:13> 'unsigned char' <LValueToRValue>
    |   | | |   `-ArraySubscriptExpr 0x15a1254e8 <col:7, col:13> 'const unsigned char' lvalue
    |   | | |     |-ImplicitCastExpr 0x15a1254d0 <col:7> 'const unsigned char *' <LValueToRValue>
    |   | | |     | `-DeclRefExpr 0x15a125490 <col:7> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    |   | | |     `-IntegerLiteral 0x15a1254b0 <col:12> 'int' 0
    |   | | `-CharacterLiteral 0x15a125508 <col:18> 'int' 10
    |   | `-BinaryOperator 0x15a125628 <line:22:4, col:17> '<dependent type>' contains-errors '='
    |   |   |-RecoveryExpr 0x15a1255a8 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x15a125570 <col:4> 'struct snippet_context *' lvalue ParmVar 0x15a80e248 'ctx' 'struct snippet_context *'
    |   |   `-RecoveryExpr 0x15a125608 <col:17> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x15a125668 <line:23:3>
    |-IfStmt 0x15a125ab0 <line:25:2, line:30:2>
    | |-RecoveryExpr 0x15a1256f8 <line:25:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15a1256c0 <col:6> 'struct snippet_context *' lvalue ParmVar 0x15a80e248 'ctx' 'struct snippet_context *'
    | `-CompoundStmt 0x15a125a88 <col:27, line:30:2>
    |   |-CallExpr 0x15a125898 <line:26:3, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15a125800 <col:3> 'int ()' Function 0x15a125748 'str_append_c' 'int ()'
    |   | |-RecoveryExpr 0x15a125858 <col:16, col:24> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x15a125820 <col:16> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'
    |   | `-CharacterLiteral 0x15a125880 <col:33> 'int' 32
    |   |-BinaryOperator 0x15a125980 <line:27:3, col:25> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x15a125900 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x15a1258c8 <col:3> 'struct snippet_context *' lvalue ParmVar 0x15a80e248 'ctx' 'struct snippet_context *'
    |   | `-RecoveryExpr 0x15a125960 <col:25> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x15a125a68 <line:28:3, line:29:4>
    |     |-BinaryOperator 0x15a125a38 <line:28:7, col:31> 'int' contains-errors '=='
    |     | |-UnaryOperator 0x15a125a00 <col:7, col:25> '<dependent type>' contains-errors postfix '--' cannot overflow
    |     | | `-RecoveryExpr 0x15a1259d8 <col:7, col:15> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x15a1259a0 <col:7> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'
    |     | `-IntegerLiteral 0x15a125a18 <col:31> 'int' 0
    |     `-ReturnStmt 0x15a125a58 <line:29:4>
    |-IfStmt 0x15a125b80 <line:31:2, line:32:3>
    | |-BinaryOperator 0x15a125b50 <line:31:6, col:28> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x15a125b08 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x15a125ad0 <col:6> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'
    | | `-IntegerLiteral 0x15a125b30 <col:28> 'int' 0
    | `-ReturnStmt 0x15a125b70 <line:32:3>
    |-UnaryOperator 0x15a125c00 <line:33:2, col:20> '<dependent type>' contains-errors postfix '--' cannot overflow
    | `-RecoveryExpr 0x15a125bd8 <col:2, col:10> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15a125ba0 <col:2> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'
    |-BinaryOperator 0x15a125e50 <line:34:2, col:40> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x15a125c50 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x15a125c38 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15a125c18 <col:3> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x15a125df8 <col:13, col:40> 'int'
    |   |-ImplicitCastExpr 0x15a125de0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15a125d48 <col:13> 'int ()' Function 0x15a125c90 'uni_utf8_char_bytes' 'int ()'
    |   `-ImplicitCastExpr 0x15a125e38 <col:33, col:39> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x15a125e20 <col:33, col:39> 'unsigned char' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x15a125dc0 <col:33, col:39> 'const unsigned char' lvalue
    |         |-ImplicitCastExpr 0x15a125da8 <col:33> 'const unsigned char *' <LValueToRValue>
    |         | `-DeclRefExpr 0x15a125d68 <col:33> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
    |         `-IntegerLiteral 0x15a125d88 <col:38> 'int' 0
    |-CallExpr 0x15a125f20 <line:35:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15a125e70 <col:2> 'int ()' Function 0x15a122b08 'i_assert' 'int ()'
    | `-BinaryOperator 0x15a125f00 <col:11, col:23> 'int' contains-errors '<='
    |   |-UnaryOperator 0x15a125ec8 <col:11, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x15a125eb0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x15a125e90 <col:12> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x15a125ee0 <col:23> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x15a8267a8 <line:36:2, col:49> '<dependent type>' contains-errors
      |-DeclRefExpr 0x15a8266b8 <col:2> 'int ()' Function 0x15a826600 'str_append_data' 'int ()'
      |-RecoveryExpr 0x15a826710 <col:18, col:26> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x15a8266d8 <col:18> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'
      |-DeclRefExpr 0x15a826738 <col:35> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'
      `-UnaryOperator 0x15a826790 <col:41, col:42> '<dependent type>' contains-errors prefix '*' cannot overflow
        `-ImplicitCastExpr 0x15a826778 <col:42> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x15a826758 <col:42> '<dependent type>' contains-errors lvalue
