TranslationUnitDecl 0x127055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1270564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127055bd0 '__int128'
|-TypedefDecl 0x127056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127055bf0 'unsigned __int128'
|-TypedefDecl 0x12780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12780bc00 'struct __NSConstantString_tag'
|   `-Record 0x127056580 '__NSConstantString_tag'
|-TypedefDecl 0x12780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055d90 '__SVInt8_t'
|-TypedefDecl 0x12780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127055db0 '__SVInt16_t'
|-TypedefDecl 0x12780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127055dd0 '__SVInt32_t'
|-TypedefDecl 0x12780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127055df0 '__SVInt64_t'
|-TypedefDecl 0x12780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055e10 '__SVUint8_t'
|-TypedefDecl 0x12780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055e30 '__SVUint16_t'
|-TypedefDecl 0x12780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055e50 '__SVUint32_t'
|-TypedefDecl 0x12780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055e70 '__SVUint64_t'
|-TypedefDecl 0x12780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055e90 '__SVFloat16_t'
|-TypedefDecl 0x12780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1270560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1270560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1270560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1270561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1270561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1270561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1270562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1270562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1270562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127056390 '__SVBool_t'
|-TypedefDecl 0x12780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1270563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1270563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1270563f0 '__SVCount_t'
|-TypedefDecl 0x12780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-TypedefDecl 0x12780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
`-FunctionDecl 0x12780dfa8 <dataset_diviso_filec/func23787_nonvuln.c:1:1, line:18:1> line:1:12 invalid add_hfyu_left_prediction_c 'int (int *, const int *, int, int)' static
  |-ParmVarDecl 0x12780dd28 <col:39, col:48> col:48 referenced invalid dst 'int *'
  |-ParmVarDecl 0x12780dda8 <col:53, col:68> col:68 invalid src 'const int *'
  |-ParmVarDecl 0x12780de28 <col:73, col:77> col:77 used w 'int'
  |-ParmVarDecl 0x12780dea8 <col:80, col:84> col:84 used acc 'int'
  `-CompoundStmt 0x127827a20 <col:88, line:18:1>
    |-DeclStmt 0x12780e0f0 <line:2:5, col:10>
    | `-VarDecl 0x12780e088 <col:5, col:9> col:9 used i 'int'
    |-ForStmt 0x1278276a8 <line:4:5, line:10:5>
    | |-BinaryOperator 0x12780e148 <line:4:9, col:11> 'int' '='
    | | |-DeclRefExpr 0x12780e108 <col:9> 'int' lvalue Var 0x12780e088 'i' 'int'
    | | `-IntegerLiteral 0x12780e128 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12780e218 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x12780e200 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12780e168 <col:14> 'int' lvalue Var 0x12780e088 'i' 'int'
    | | `-BinaryOperator 0x12780e1e0 <col:16, col:18> 'int' '-'
    | |   |-ImplicitCastExpr 0x12780e1c8 <col:16> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12780e188 <col:16> 'int' lvalue ParmVar 0x12780de28 'w' 'int'
    | |   `-IntegerLiteral 0x12780e1a8 <col:18> 'int' 1
    | |-UnaryOperator 0x12780e258 <col:21, col:22> 'int' postfix '++'
    | | `-DeclRefExpr 0x12780e238 <col:21> 'int' lvalue Var 0x12780e088 'i' 'int'
    | `-CompoundStmt 0x127827670 <col:25, line:10:5>
    |   |-CompoundAssignOperator 0x12780e320 <line:5:9, col:20> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x12780e270 <col:9> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |   | `-ArraySubscriptExpr 0x12780e300 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12780e2d0 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x12780e290 <col:15> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x12780e2e8 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12780e2b0 <col:19> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   |-BinaryOperator 0x127827440 <line:6:9, col:17> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x127827400 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12780e3b8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x12780e370 <col:9> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x12780e350 <col:9> 'int *' lvalue ParmVar 0x12780dd28 'dst' 'int *'
    |   | | `-ImplicitCastExpr 0x12780e3d0 <col:13> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12780e398 <col:13> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   | `-DeclRefExpr 0x127827420 <col:17> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |   |-UnaryOperator 0x127827480 <line:7:9, col:10> 'int' postfix '++'
    |   | `-DeclRefExpr 0x127827460 <col:9> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   |-CompoundAssignOperator 0x127827548 <line:8:9, col:20> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x127827498 <col:9> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |   | `-ArraySubscriptExpr 0x127827528 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x1278274f8 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x1278274b8 <col:15> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x127827510 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1278274d8 <col:19> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   `-BinaryOperator 0x127827650 <line:9:9, col:17> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x127827610 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x1278275e0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-RecoveryExpr 0x127827598 <col:9> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x127827578 <col:9> 'int *' lvalue ParmVar 0x12780dd28 'dst' 'int *'
    |     | `-ImplicitCastExpr 0x1278275f8 <col:13> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1278275c0 <col:13> 'int' lvalue Var 0x12780e088 'i' 'int'
    |     `-DeclRefExpr 0x127827630 <col:17> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |-ForStmt 0x1278279a0 <line:12:5, line:15:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x127827750 <line:12:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x127827720 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1278276e0 <col:11> 'int' lvalue Var 0x12780e088 'i' 'int'
    | | `-ImplicitCastExpr 0x127827738 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x127827700 <col:13> 'int' lvalue ParmVar 0x12780de28 'w' 'int'
    | |-UnaryOperator 0x127827790 <col:16, col:17> 'int' postfix '++'
    | | `-DeclRefExpr 0x127827770 <col:16> 'int' lvalue Var 0x12780e088 'i' 'int'
    | `-CompoundStmt 0x127827980 <col:20, line:15:5>
    |   |-CompoundAssignOperator 0x127827858 <line:13:9, col:20> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x1278277a8 <col:9> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |   | `-ArraySubscriptExpr 0x127827838 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x127827808 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x1278277c8 <col:15> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x127827820 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1278277e8 <col:19> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   `-BinaryOperator 0x127827960 <line:14:9, col:17> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x127827920 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x1278278f0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-RecoveryExpr 0x1278278a8 <col:9> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x127827888 <col:9> 'int *' lvalue ParmVar 0x12780dd28 'dst' 'int *'
    |     | `-ImplicitCastExpr 0x127827908 <col:13> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1278278d0 <col:13> 'int' lvalue Var 0x12780e088 'i' 'int'
    |     `-DeclRefExpr 0x127827940 <col:17> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    `-ReturnStmt 0x127827a10 <line:17:5, col:12>
      `-ImplicitCastExpr 0x1278279f8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1278279d8 <col:12> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
