TranslationUnitDecl 0x125855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1258564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125855bd0 '__int128'
|-TypedefDecl 0x125856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125855bf0 'unsigned __int128'
|-TypedefDecl 0x12600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12600bc00 'struct __NSConstantString_tag'
|   `-Record 0x125856580 '__NSConstantString_tag'
|-TypedefDecl 0x12600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125855d90 '__SVInt8_t'
|-TypedefDecl 0x12600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125855db0 '__SVInt16_t'
|-TypedefDecl 0x12600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125855dd0 '__SVInt32_t'
|-TypedefDecl 0x12600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125855df0 '__SVInt64_t'
|-TypedefDecl 0x12600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125855e10 '__SVUint8_t'
|-TypedefDecl 0x12600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125855e30 '__SVUint16_t'
|-TypedefDecl 0x12600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125855e50 '__SVUint32_t'
|-TypedefDecl 0x12600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125855e70 '__SVUint64_t'
|-TypedefDecl 0x12600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125855e90 '__SVFloat16_t'
|-TypedefDecl 0x12600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1258560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1258560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1258560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1258561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1258561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1258561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1258562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1258562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1258562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125856390 '__SVBool_t'
|-TypedefDecl 0x12600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1258563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1258563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1258563f0 '__SVCount_t'
|-TypedefDecl 0x12600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-TypedefDecl 0x12600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
`-FunctionDecl 0x126026aa8 <dataset_diviso_filec/func24299_vuln.c:1:1, line:45:1> line:1:1 check_entry_size_and_hooks 'int (struct ipt_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)'
  |-ParmVarDecl 0x12600e248 <col:28, col:46> col:46 used e 'struct ipt_entry *'
  |-ParmVarDecl 0x126026628 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x1260266d8 <line:3:7, col:28> col:28 used base 'const unsigned char *'
  |-ParmVarDecl 0x126026758 <line:4:7, col:28> col:28 used limit 'const unsigned char *'
  |-ParmVarDecl 0x126026808 <line:5:7, col:27> col:27 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x126026888 <line:6:7, col:27> col:27 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x126026908 <line:7:7, col:20> col:20 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x126028c00 <line:8:1, line:45:1>
    |-DeclStmt 0x126026c50 <line:9:2, col:16>
    | `-VarDecl 0x126026be8 <col:2, col:15> col:15 used h 'unsigned int'
    |-IfStmt 0x126027190 <line:11:2, line:15:2>
    | |-RecoveryExpr 0x126026e38 <line:11:6, line:12:55> '_Bool' contains-errors
    | `-CompoundStmt 0x126027170 <col:62, line:15:2>
    |   |-CallExpr 0x126027068 <line:13:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x126027050 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x126026f80 <col:3> 'int ()' Function 0x126026ec8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x126027098 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x126026fe0 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x1260270b0 <col:19> 'struct ipt_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x126027000 <col:19> 'struct ipt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct ipt_entry *'
    |   `-ReturnStmt 0x126027160 <line:14:3, col:11>
    |     `-UnaryOperator 0x126027148 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x126027130 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x126027110 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126027508 <line:17:2, line:22:2>
    | |-RecoveryExpr 0x126027328 <line:17:6, line:18:64> '_Bool' contains-errors
    | `-CompoundStmt 0x1260274e8 <col:67, line:22:2>
    |   |-CallExpr 0x126027408 <line:19:3, line:20:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x126027348 <line:19:3> 'int ()' Function 0x126026ec8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x126027368 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x126027388 <line:20:5> 'struct ipt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct ipt_entry *'
    |   | `-RecoveryExpr 0x1260273e0 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1260273a8 <col:8> 'struct ipt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct ipt_entry *'
    |   `-ReturnStmt 0x1260274d8 <line:21:3, col:11>
    |     `-UnaryOperator 0x1260274c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1260274a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x126027488 <col:11> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x127809508 <line:25:2, line:39:2>
    | |-BinaryOperator 0x126027580 <line:25:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x126027528 <col:7> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x126027568 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x126027548 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x127808820 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1260275a0 <col:14> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x127808800 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x127808860 <col:36, col:37> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x127808840 <col:36> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    | `-CompoundStmt 0x1278094e0 <col:41, line:39:2>
    |   |-IfStmt 0x1278089c0 <line:26:3, line:27:4>
    |   | |-UnaryOperator 0x1278089a0 <line:26:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x127808980 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x127808960 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x127808930 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x127808878 <col:9> 'unsigned int' lvalue ParmVar 0x126026908 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x127808948 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x127808910 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x1278088f0 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x127808898 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x1278088d8 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x1278088b8 <col:29> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x1278089b8 <line:27:4>
    |   |-IfStmt 0x127808d10 <line:28:3, line:29:43>
    |   | |-BinaryOperator 0x127808b70 <line:28:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x127808a90 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x127808a30 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x127808a18 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x1278089e0 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct ipt_entry *'
    |   | | | `-ImplicitCastExpr 0x127808a78 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x127808a58 <col:28> 'const unsigned char *' lvalue ParmVar 0x1260266d8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x127808b58 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x127808b40 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x127808b20 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x127808af0 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x127808ab0 <col:36> 'const unsigned int *' lvalue ParmVar 0x126026808 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x127808b08 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x127808ad0 <col:49> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x127808cf0 <line:29:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x127808c40 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x127808c10 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x127808bc8 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x127808b90 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x126026628 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x127808c28 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x127808bf0 <col:24> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x127808cd0 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x127808ca0 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x127808c60 <col:29> 'const unsigned int *' lvalue ParmVar 0x126026808 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x127808cb8 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x127808c80 <col:42> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    |   `-IfStmt 0x1278094c0 <line:30:3, line:38:3>
    |     |-BinaryOperator 0x127808ec0 <line:30:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x127808de0 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x127808d80 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x127808d68 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x127808d30 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct ipt_entry *'
    |     | | `-ImplicitCastExpr 0x127808dc8 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x127808da8 <col:28> 'const unsigned char *' lvalue ParmVar 0x1260266d8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x127808ea8 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x127808e90 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x127808e70 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x127808e40 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x127808e00 <col:36> 'const unsigned int *' lvalue ParmVar 0x126026888 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x127808e58 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x127808e20 <col:47> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    |     `-CompoundStmt 0x1278094a0 <col:51, line:38:3>
    |       |-IfStmt 0x127809300 <line:31:4, line:36:4>
    |       | |-UnaryOperator 0x127809058 <line:31:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x127809018 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x127809000 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x127808fc0 <col:9> 'int ()' Function 0x127808f08 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x127809040 <col:25> 'struct ipt_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x127808fe0 <col:25> 'struct ipt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct ipt_entry *'
    |       | `-CompoundStmt 0x1278092e0 <col:29, line:36:4>
    |       |   |-CallExpr 0x1278091f8 <line:32:5, line:34:17> 'int'
    |       |   | |-ImplicitCastExpr 0x1278091e0 <line:32:5> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x127809150 <col:5> 'int ()' Function 0x127809098 'pr_err' 'int ()'
    |       |   | `-ImplicitCastExpr 0x127809220 <col:12, line:34:12> 'char *' <ArrayToPointerDecay>
    |       |   |   `-StringLiteral 0x1278091b0 <line:32:12, line:34:12> 'char[10]' lvalue "STRSTRSTR"
    |       |   `-ReturnStmt 0x1278092d0 <line:35:5, col:13>
    |       |     `-UnaryOperator 0x1278092b8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |       `-ImplicitCastExpr 0x1278092a0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |         `-RecoveryExpr 0x127809280 <col:13> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x127809480 <line:37:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x1278093d0 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x1278093a0 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x127809358 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x127809320 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x126026628 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x1278093b8 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x127809380 <col:23> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x127809460 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x127809430 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x1278093f0 <col:28> 'const unsigned int *' lvalue ParmVar 0x126026888 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x127809448 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x127809410 <col:39> 'unsigned int' lvalue Var 0x126026be8 'h' 'unsigned int'
    |-BinaryOperator 0x1278097a8 <line:43:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x127809760 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x127809728 <col:2> 'struct ipt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct ipt_entry *'
    | `-IntegerLiteral 0x127809788 <col:16> 'int' 0
    `-ReturnStmt 0x1278097e8 <line:44:2, col:9>
      `-IntegerLiteral 0x1278097c8 <col:9> 'int' 0
