TranslationUnitDecl 0x14b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b855bd0 '__int128'
|-TypedefDecl 0x14b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b855bf0 'unsigned __int128'
|-TypedefDecl 0x14b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b926000 'struct __NSConstantString_tag'
|   `-Record 0x14b856580 '__NSConstantString_tag'
|-TypedefDecl 0x14b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b855d90 '__SVInt8_t'
|-TypedefDecl 0x14b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b855db0 '__SVInt16_t'
|-TypedefDecl 0x14b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b855dd0 '__SVInt32_t'
|-TypedefDecl 0x14b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b855df0 '__SVInt64_t'
|-TypedefDecl 0x14b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b855e10 '__SVUint8_t'
|-TypedefDecl 0x14b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b855e30 '__SVUint16_t'
|-TypedefDecl 0x14b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b855e50 '__SVUint32_t'
|-TypedefDecl 0x14b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b855e70 '__SVUint64_t'
|-TypedefDecl 0x14b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b855e90 '__SVFloat16_t'
|-TypedefDecl 0x14b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b856390 '__SVBool_t'
|-TypedefDecl 0x14b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b8563f0 '__SVCount_t'
|-TypedefDecl 0x14b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b927fb0 'char *'
|   `-BuiltinType 0x14b8556b0 'char'
|-TypedefDecl 0x14b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b927fb0 'char *'
|   `-BuiltinType 0x14b8556b0 'char'
`-FunctionDecl 0x14b928288 <dataset_diviso_filec/func14909_vuln.c:1:1, line:60:1> line:1:7 invalid fopen_safe 'int *(const char *, const char *)'
  |-ParmVarDecl 0x14b9280f0 <col:18, col:30> col:30 used path 'const char *'
  |-ParmVarDecl 0x14b928170 <col:36, col:48> col:48 used mode 'const char *'
  `-CompoundStmt 0x14b944620 <line:2:1, line:60:1>
    |-DeclStmt 0x14b9283c0 <line:3:2, col:8>
    | `-VarDecl 0x14b928358 <col:2, col:6> col:6 used fd 'int'
    |-DeclStmt 0x14b928520 <line:5:2, col:34>
    | `-VarDecl 0x14b928408 <col:2, col:27> col:6 used flags 'int' cinit
    |   `-BinaryOperator 0x14b928500 <col:14, col:27> '<dependent type>' contains-errors '|'
    |     |-RecoveryExpr 0x14b9284c0 <col:14> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14b9284e0 <col:27> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14b9285b8 <line:6:2, col:15>
    | `-VarDecl 0x14b928550 <col:2, col:6> col:6 used sav_errno 'int'
    |-IfStmt 0x14b942360 <line:8:2, line:9:26>
    | |-BinaryOperator 0x14b928690 <line:8:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x14b928678 <col:6, col:12> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14b928660 <col:6, col:12> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x14b928628 <col:6, col:12> 'const char' lvalue
    | | |     |-ImplicitCastExpr 0x14b928610 <col:6> 'const char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x14b9285d0 <col:6> 'const char *' lvalue ParmVar 0x14b928170 'mode' 'const char *'
    | | |     `-IntegerLiteral 0x14b9285f0 <col:11> 'int' 0
    | | `-CharacterLiteral 0x14b928648 <col:17> 'int' 114
    | `-ReturnStmt 0x14b942350 <line:9:3, col:26>
    |   `-ImplicitCastExpr 0x14b941f18 <col:10, col:26> 'int *' <IntegralToPointer>
    |     `-CallExpr 0x14b941eb8 <col:10, col:26> 'int'
    |       |-ImplicitCastExpr 0x14b941ea0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14b941e10 <col:10> 'int ()' Function 0x14b928758 'fopen' 'int ()'
    |       |-ImplicitCastExpr 0x14b941ee8 <col:16> 'const char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x14b941e30 <col:16> 'const char *' lvalue ParmVar 0x14b9280f0 'path' 'const char *'
    |       `-ImplicitCastExpr 0x14b941f00 <col:22> 'const char *' <LValueToRValue>
    |         `-DeclRefExpr 0x14b941e50 <col:22> 'const char *' lvalue ParmVar 0x14b928170 'mode' 'const char *'
    |-IfStmt 0x14b9428c8 <line:11:2, line:16:2>
    | |-BinaryOperator 0x14b942830 <line:11:6, line:13:34> 'int' '||'
    | | |-ParenExpr 0x14b942560 <line:11:6, col:39> 'int'
    | | | `-BinaryOperator 0x14b942540 <col:7, col:36> 'int' '&&'
    | | |   |-BinaryOperator 0x14b942440 <col:7, col:18> 'int' '!='
    | | |   | |-ImplicitCastExpr 0x14b942428 <col:7, col:13> 'int' <IntegralCast>
    | | |   | | `-ImplicitCastExpr 0x14b942410 <col:7, col:13> 'char' <LValueToRValue>
    | | |   | |   `-ArraySubscriptExpr 0x14b9423d8 <col:7, col:13> 'const char' lvalue
    | | |   | |     |-ImplicitCastExpr 0x14b9423c0 <col:7> 'const char *' <LValueToRValue>
    | | |   | |     | `-DeclRefExpr 0x14b942380 <col:7> 'const char *' lvalue ParmVar 0x14b928170 'mode' 'const char *'
    | | |   | |     `-IntegerLiteral 0x14b9423a0 <col:12> 'int' 0
    | | |   | `-CharacterLiteral 0x14b9423f8 <col:18> 'int' 97
    | | |   `-BinaryOperator 0x14b942520 <col:25, col:36> 'int' '!='
    | | |     |-ImplicitCastExpr 0x14b942508 <col:25, col:31> 'int' <IntegralCast>
    | | |     | `-ImplicitCastExpr 0x14b9424f0 <col:25, col:31> 'char' <LValueToRValue>
    | | |     |   `-ArraySubscriptExpr 0x14b9424b8 <col:25, col:31> 'const char' lvalue
    | | |     |     |-ImplicitCastExpr 0x14b9424a0 <col:25> 'const char *' <LValueToRValue>
    | | |     |     | `-DeclRefExpr 0x14b942460 <col:25> 'const char *' lvalue ParmVar 0x14b928170 'mode' 'const char *'
    | | |     |     `-IntegerLiteral 0x14b942480 <col:30> 'int' 0
    | | |     `-CharacterLiteral 0x14b9424d8 <col:36> 'int' 119
    | | `-ParenExpr 0x14b942810 <line:12:6, line:13:34> 'int'
    | |   `-BinaryOperator 0x14b9427f0 <line:12:7, line:13:33> 'int' '&&'
    | |     |-ImplicitCastExpr 0x14b9427d8 <line:12:7, col:13> 'int' <IntegralCast>
    | |     | `-ImplicitCastExpr 0x14b9427c0 <col:7, col:13> 'char' <LValueToRValue>
    | |     |   `-ArraySubscriptExpr 0x14b9425d8 <col:7, col:13> 'const char' lvalue
    | |     |     |-ImplicitCastExpr 0x14b9425c0 <col:7> 'const char *' <LValueToRValue>
    | |     |     | `-DeclRefExpr 0x14b942580 <col:7> 'const char *' lvalue ParmVar 0x14b928170 'mode' 'const char *'
    | |     |     `-IntegerLiteral 0x14b9425a0 <col:12> 'int' 1
    | |     `-ParenExpr 0x14b9427a0 <line:13:7, col:33> 'int'
    | |       `-BinaryOperator 0x14b942780 <col:8, col:32> 'int' '||'
    | |         |-BinaryOperator 0x14b9426b8 <col:8, col:19> 'int' '!='
    | |         | |-ImplicitCastExpr 0x14b9426a0 <col:8, col:14> 'int' <IntegralCast>
    | |         | | `-ImplicitCastExpr 0x14b942688 <col:8, col:14> 'char' <LValueToRValue>
    | |         | |   `-ArraySubscriptExpr 0x14b942650 <col:8, col:14> 'const char' lvalue
    | |         | |     |-ImplicitCastExpr 0x14b942638 <col:8> 'const char *' <LValueToRValue>
    | |         | |     | `-DeclRefExpr 0x14b9425f8 <col:8> 'const char *' lvalue ParmVar 0x14b928170 'mode' 'const char *'
    | |         | |     `-IntegerLiteral 0x14b942618 <col:13> 'int' 1
    | |         | `-CharacterLiteral 0x14b942670 <col:19> 'int' 43
    | |         `-ImplicitCastExpr 0x14b942768 <col:26, col:32> 'int' <IntegralCast>
    | |           `-ImplicitCastExpr 0x14b942750 <col:26, col:32> 'char' <LValueToRValue>
    | |             `-ArraySubscriptExpr 0x14b942730 <col:26, col:32> 'const char' lvalue
    | |               |-ImplicitCastExpr 0x14b942718 <col:26> 'const char *' <LValueToRValue>
    | |               | `-DeclRefExpr 0x14b9426d8 <col:26> 'const char *' lvalue ParmVar 0x14b928170 'mode' 'const char *'
    | |               `-IntegerLiteral 0x14b9426f8 <col:31> 'int' 2
    | `-CompoundStmt 0x14b9428b0 <col:37, line:16:2>
    |   `-ReturnStmt 0x14b9428a0 <line:15:3, col:10>
    |     `-RecoveryExpr 0x14b942880 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b942b38 <line:18:2, line:21:12> has_else
    | |-BinaryOperator 0x14b9429a8 <line:18:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x14b942990 <col:6, col:12> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14b942978 <col:6, col:12> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x14b942940 <col:6, col:12> 'const char' lvalue
    | | |     |-ImplicitCastExpr 0x14b942928 <col:6> 'const char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x14b9428e8 <col:6> 'const char *' lvalue ParmVar 0x14b928170 'mode' 'const char *'
    | | |     `-IntegerLiteral 0x14b942908 <col:11> 'int' 0
    | | `-CharacterLiteral 0x14b942960 <col:17> 'int' 119
    | |-CompoundAssignOperator 0x14b942a50 <line:19:3, col:12> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |-DeclRefExpr 0x14b9429c8 <col:3> 'int' contains-errors lvalue Var 0x14b928408 'flags' 'int'
    | | `-RecoveryExpr 0x14b942a30 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x14b942b08 <line:21:3, col:12> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x14b942a80 <col:3> 'int' contains-errors lvalue Var 0x14b928408 'flags' 'int'
    |   `-RecoveryExpr 0x14b942ae8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b942d68 <line:23:2, line:26:12> has_else
    | |-ImplicitCastExpr 0x14b942be0 <line:23:6, col:12> 'char' <LValueToRValue>
    | | `-ArraySubscriptExpr 0x14b942bc0 <col:6, col:12> 'const char' lvalue
    | |   |-ImplicitCastExpr 0x14b942ba8 <col:6> 'const char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14b942b68 <col:6> 'const char *' lvalue ParmVar 0x14b928170 'mode' 'const char *'
    | |   `-IntegerLiteral 0x14b942b88 <col:11> 'int' 1
    | |-CompoundAssignOperator 0x14b942c80 <line:24:3, col:12> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |-DeclRefExpr 0x14b942bf8 <col:3> 'int' contains-errors lvalue Var 0x14b928408 'flags' 'int'
    | | `-RecoveryExpr 0x14b942c60 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x14b942d38 <line:26:3, col:12> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x14b942cb0 <col:3> 'int' contains-errors lvalue Var 0x14b928408 'flags' 'int'
    |   `-RecoveryExpr 0x14b942d18 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14b943a38 <line:28:2, col:82> 'int' contains-errors '='
    | |-DeclRefExpr 0x14b942d98 <col:2> 'int' lvalue Var 0x14b928358 'fd' 'int'
    | `-CallExpr 0x14b943a00 <col:7, col:82> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b9436b8 <col:7> 'int ()' Function 0x14b943600 'open' 'int ()'
    |   |-DeclRefExpr 0x14b9436d8 <col:12> 'const char *' lvalue ParmVar 0x14b9280f0 'path' 'const char *'
    |   |-DeclRefExpr 0x14b9436f8 <col:18> 'int' contains-errors lvalue Var 0x14b928408 'flags' 'int'
    |   `-BinaryOperator 0x14b9439e0 <col:25, col:75> '<dependent type>' contains-errors '|'
    |     |-BinaryOperator 0x14b9439a0 <col:25, col:65> '<dependent type>' contains-errors '|'
    |     | |-BinaryOperator 0x14b943960 <col:25, col:55> '<dependent type>' contains-errors '|'
    |     | | |-BinaryOperator 0x14b943920 <col:25, col:45> '<dependent type>' contains-errors '|'
    |     | | | |-BinaryOperator 0x14b9438e0 <col:25, col:35> '<dependent type>' contains-errors '|'
    |     | | | | |-RecoveryExpr 0x14b9438a0 <col:25> '<dependent type>' contains-errors lvalue
    |     | | | | `-RecoveryExpr 0x14b9438c0 <col:35> '<dependent type>' contains-errors lvalue
    |     | | | `-RecoveryExpr 0x14b943900 <col:45> '<dependent type>' contains-errors lvalue
    |     | | `-RecoveryExpr 0x14b943940 <col:55> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x14b943980 <col:65> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14b9439c0 <col:75> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b944000 <line:33:2, line:39:2>
    | |-CallExpr 0x14b943c60 <line:33:6, col:21> 'int'
    | | |-ImplicitCastExpr 0x14b943c48 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x14b943bc8 <col:6> 'int ()' Function 0x14b943b10 'fchown' 'int ()'
    | | |-ImplicitCastExpr 0x14b943c98 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b943be8 <col:13> 'int' lvalue Var 0x14b928358 'fd' 'int'
    | | |-IntegerLiteral 0x14b943c08 <col:17> 'int' 0
    | | `-IntegerLiteral 0x14b943c28 <col:20> 'int' 0
    | `-CompoundStmt 0x14b943fe8 <col:24, line:39:2>
    |   `-CallExpr 0x14b943f88 <line:36:3, col:11> 'int'
    |     |-ImplicitCastExpr 0x14b943f70 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14b943f30 <col:3> 'int ()' Function 0x14b943e78 'close' 'int ()'
    |     `-ImplicitCastExpr 0x14b943fb0 <col:9> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14b943f50 <col:9> 'int' lvalue Var 0x14b928358 'fd' 'int'
    |-IfStmt 0x14b9442b0 <line:42:2, line:48:2>
    | |-RecoveryExpr 0x14b944140 <line:42:6, col:34> '_Bool' contains-errors
    | `-CompoundStmt 0x14b944298 <col:37, line:48:2>
    |   `-CallExpr 0x14b944238 <line:45:3, col:11> 'int'
    |     |-ImplicitCastExpr 0x14b944220 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14b9441e0 <col:3> 'int ()' Function 0x14b943e78 'close' 'int ()'
    |     `-ImplicitCastExpr 0x14b944260 <col:9> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14b944200 <col:9> 'int' lvalue Var 0x14b928358 'fd' 'int'
    `-IfStmt 0x14b944600 <line:51:2, line:57:2>
      |-RecoveryExpr 0x14b944488 <line:51:6, col:7> '_Bool' contains-errors
      `-CompoundStmt 0x14b9445e0 <col:13, line:57:2>
        `-CallExpr 0x14b944580 <line:54:3, col:11> 'int'
          |-ImplicitCastExpr 0x14b944568 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x14b944528 <col:3> 'int ()' Function 0x14b943e78 'close' 'int ()'
          `-ImplicitCastExpr 0x14b9445a8 <col:9> 'int' <LValueToRValue>
            `-DeclRefExpr 0x14b944548 <col:9> 'int' lvalue Var 0x14b928358 'fd' 'int'
