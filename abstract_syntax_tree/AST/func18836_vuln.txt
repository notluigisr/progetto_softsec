TranslationUnitDecl 0x122055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1220564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122055bd0 '__int128'
|-TypedefDecl 0x122056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122055bf0 'unsigned __int128'
|-TypedefDecl 0x12280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12280bc00 'struct __NSConstantString_tag'
|   `-Record 0x122056580 '__NSConstantString_tag'
|-TypedefDecl 0x12280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122055d90 '__SVInt8_t'
|-TypedefDecl 0x12280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122055db0 '__SVInt16_t'
|-TypedefDecl 0x12280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122055dd0 '__SVInt32_t'
|-TypedefDecl 0x12280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122055df0 '__SVInt64_t'
|-TypedefDecl 0x12280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122055e10 '__SVUint8_t'
|-TypedefDecl 0x12280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122055e30 '__SVUint16_t'
|-TypedefDecl 0x12280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122055e50 '__SVUint32_t'
|-TypedefDecl 0x12280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122055e70 '__SVUint64_t'
|-TypedefDecl 0x12280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122055e90 '__SVFloat16_t'
|-TypedefDecl 0x12280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1220560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1220560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1220560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1220561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1220561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1220561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1220562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1220562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1220562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122056390 '__SVBool_t'
|-TypedefDecl 0x12280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1220563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1220563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1220563f0 '__SVCount_t'
|-TypedefDecl 0x12280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-TypedefDecl 0x12280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-FunctionDecl 0x12280dfb8 <dataset_diviso_filec/func18836_vuln.c:1:1, line:43:1> line:1:12 compat_ipt_standard_fn 'int (void *, void **, int *, int)' static
| |-ParmVarDecl 0x12280dcd8 <col:35, col:41> col:41 used target 'void *'
| |-ParmVarDecl 0x12280dd88 <line:2:3, col:10> col:10 used dstptr 'void **'
| |-ParmVarDecl 0x12280de38 <col:18, col:23> col:23 used size 'int *'
| |-ParmVarDecl 0x12280deb8 <col:29, col:33> col:33 used convert 'int'
| `-CompoundStmt 0x123808ee8 <line:3:1, line:43:1>
|   |-DeclStmt 0x122826980 <line:4:2, col:58>
|   | |-RecordDecl 0x12280e0c8 <col:2, col:9> col:9 struct compat_ipt_standard_target
|   | |-VarDecl 0x12280e1c8 <col:2, col:36> col:36 referenced invalid compat_st 'struct compat_ipt_standard_target'
|   | `-VarDecl 0x1228268f8 <col:2, col:48> col:48 used pcompat_st 'struct compat_ipt_standard_target *'
|   |-DeclStmt 0x122826c10 <line:5:2, col:37>
|   | |-RecordDecl 0x122826998 <col:2, col:9> col:9 struct ipt_standard_target
|   | |-VarDecl 0x122826a98 <col:2, col:29> col:29 referenced invalid st 'struct ipt_standard_target'
|   | `-VarDecl 0x122826b88 <col:2, col:34> col:34 used pst 'struct ipt_standard_target *'
|   |-DeclStmt 0x122826ca8 <line:6:2, col:9>
|   | `-VarDecl 0x122826c40 <col:2, col:6> col:6 used ret 'int'
|   |-BinaryOperator 0x122826d00 <line:8:2, col:8> 'int' '='
|   | |-DeclRefExpr 0x122826cc0 <col:2> 'int' lvalue Var 0x122826c40 'ret' 'int'
|   | `-IntegerLiteral 0x122826ce0 <col:8> 'int' 0
|   |-SwitchStmt 0x122826d58 <line:9:2, line:41:2>
|   | |-ImplicitCastExpr 0x122826d40 <line:9:10> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x122826d20 <col:10> 'int' lvalue ParmVar 0x12280deb8 'convert' 'int'
|   | `-CompoundStmt 0x123808df0 <col:19, line:41:2>
|   |   |-BinaryOperator 0x122826e20 <line:11:4, col:10> 'struct ipt_standard_target *' '='
|   |   | |-DeclRefExpr 0x122826db0 <col:4> 'struct ipt_standard_target *' lvalue Var 0x122826b88 'pst' 'struct ipt_standard_target *'
|   |   | `-ImplicitCastExpr 0x122826e08 <col:10> 'struct ipt_standard_target *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x122826df0 <col:10> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x122826dd0 <col:10> 'void *' lvalue ParmVar 0x12280dcd8 'target' 'void *'
|   |   |-CallExpr 0x1228272c8 <line:12:4, line:13:29> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x122827108 <line:12:4> 'void *(void *, const void *, unsigned long)' Function 0x122826eb8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-UnaryOperator 0x122827190 <col:11, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-CXXDependentScopeMemberExpr 0x122827148 <col:12, col:22> '<dependent type>' contains-errors lvalue .target
|   |   | |   `-RecoveryExpr 0x122827128 <col:12> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x122827208 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x1228271e0 <col:31, col:36> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1228271a8 <col:31> 'struct ipt_standard_target *' lvalue Var 0x122826b88 'pst' 'struct ipt_standard_target *'
|   |   | `-UnaryExprOrTypeTraitExpr 0x1228272a8 <line:13:5, col:28> 'unsigned long' contains-errors sizeof
|   |   |   `-ParenExpr 0x122827288 <col:11, col:28> '<dependent type>' contains-errors lvalue
|   |   |     `-CXXDependentScopeMemberExpr 0x122827240 <col:12, col:22> '<dependent type>' contains-errors lvalue .target
|   |   |       `-RecoveryExpr 0x122827220 <col:12> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x1228273f0 <line:14:4, col:29> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x122827348 <col:4, col:14> '<dependent type>' contains-errors lvalue .verdict
|   |   | | `-RecoveryExpr 0x122827320 <col:4> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x122827300 <col:4> 'struct compat_ipt_standard_target' lvalue Var 0x12280e1c8 'compat_st' 'struct compat_ipt_standard_target'
|   |   | `-RecoveryExpr 0x1228273c8 <col:24, col:29> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x122827390 <col:24> 'struct ipt_standard_target *' lvalue Var 0x122826b88 'pst' 'struct ipt_standard_target *'
|   |   |-IfStmt 0x122829398 <line:15:4, line:17:40>
|   |   | |-BinaryOperator 0x122827498 <line:15:8, col:28> 'int' contains-errors '>'
|   |   | | |-CXXDependentScopeMemberExpr 0x122827430 <col:8, col:18> '<dependent type>' contains-errors lvalue .verdict
|   |   | | | `-RecoveryExpr 0x122827410 <col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-IntegerLiteral 0x122827478 <col:28> 'int' 0
|   |   | `-CompoundAssignOperator 0x122829368 <line:16:5, line:17:40> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   |-CXXDependentScopeMemberExpr 0x122827500 <line:16:5, col:15> '<dependent type>' contains-errors lvalue .verdict
|   |   |   | `-RecoveryExpr 0x1228274d8 <col:5> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x1228274b8 <col:5> 'struct compat_ipt_standard_target' lvalue Var 0x12280e1c8 'compat_st' 'struct compat_ipt_standard_target'
|   |   |   `-CallExpr 0x122829340 <line:17:6, col:40> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x1228292b8 <col:6> 'int ()' Function 0x122829200 'compat_calc_jump' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x1228292f8 <col:23, col:33> '<dependent type>' contains-errors lvalue .verdict
|   |   |       `-RecoveryExpr 0x1228292d8 <col:23> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x122829578 <line:18:4, col:42> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x1228294d8 <col:4, col:28> '<dependent type>' contains-errors lvalue .target_size
|   |   | | `-CXXDependentScopeMemberExpr 0x122829490 <col:4, col:23> '<dependent type>' contains-errors lvalue .user
|   |   | |   `-CXXDependentScopeMemberExpr 0x122829448 <col:4, col:21> '<dependent type>' contains-errors lvalue .u
|   |   | |     `-CXXDependentScopeMemberExpr 0x122829400 <col:4, col:14> '<dependent type>' contains-errors lvalue .target
|   |   | |       `-RecoveryExpr 0x1228293d8 <col:4> '<dependent type>' contains-errors lvalue
|   |   | |         `-DeclRefExpr 0x1228293b8 <col:4> 'struct compat_ipt_standard_target' lvalue Var 0x12280e1c8 'compat_st' 'struct compat_ipt_standard_target'
|   |   | `-RecoveryExpr 0x122829558 <col:42> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x122829920 <line:19:4, line:20:12>
|   |   | |-CallExpr 0x1228297f0 <line:19:8, col:59> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x122829678 <col:8> 'int ()' Function 0x1228295c0 'copy_to_user' 'int ()'
|   |   | | |-UnaryOperator 0x1228297b8 <col:21, col:22> 'void *' lvalue prefix '*' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x1228297a0 <col:22> 'void **' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x122829698 <col:22> 'void **' lvalue ParmVar 0x12280dd88 'dstptr' 'void **'
|   |   | | |-UnaryOperator 0x122829708 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | | `-RecoveryExpr 0x1228296e8 <col:31> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x1228297d0 <col:42> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x122829900 <line:20:5, col:12> 'int' contains-errors '='
|   |   |   |-DeclRefExpr 0x122829828 <col:5> 'int' lvalue Var 0x122826c40 'ret' 'int'
|   |   |   `-UnaryOperator 0x1228298e8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |     `-ImplicitCastExpr 0x1228298d0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-RecoveryExpr 0x1228298b0 <col:12> '<dependent type>' contains-errors lvalue
|   |   |-CompoundAssignOperator 0x122829a58 <line:21:4, col:13> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-UnaryOperator 0x122829a20 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x122829a08 <col:5> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x122829940 <col:5> 'int *' lvalue ParmVar 0x12280de38 'size' 'int *'
|   |   | `-RecoveryExpr 0x122829a38 <col:13> '<dependent type>' contains-errors lvalue
|   |   |-CompoundAssignOperator 0x122829ba0 <line:22:4, col:15> 'void *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-UnaryOperator 0x122829b68 <col:4, col:5> 'void *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x122829b50 <col:5> 'void **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x122829a88 <col:5> 'void **' lvalue ParmVar 0x12280dd88 'dstptr' 'void **'
|   |   | `-RecoveryExpr 0x122829b80 <col:15> '<dependent type>' contains-errors lvalue
|   |   |-BreakStmt 0x122829bd0 <line:23:4>
|   |   |-BinaryOperator 0x122829c60 <line:25:4, col:17> 'struct compat_ipt_standard_target *' '='
|   |   | |-DeclRefExpr 0x122829bf0 <col:4> 'struct compat_ipt_standard_target *' lvalue Var 0x1228268f8 'pcompat_st' 'struct compat_ipt_standard_target *'
|   |   | `-ImplicitCastExpr 0x122829c48 <col:17> 'struct compat_ipt_standard_target *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x122829c30 <col:17> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x122829c10 <col:17> 'void *' lvalue ParmVar 0x12280dcd8 'target' 'void *'
|   |   |-CallExpr 0x122829e38 <line:26:4, col:61> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x122829c80 <col:4> 'void *(void *, const void *, unsigned long)' Function 0x122826eb8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-UnaryOperator 0x122829d08 <col:11, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-CXXDependentScopeMemberExpr 0x122829cc0 <col:12, col:15> '<dependent type>' contains-errors lvalue .target
|   |   | |   `-RecoveryExpr 0x122829ca0 <col:12> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x122829d80 <col:23, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x122829d58 <col:24, col:36> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x122829d20 <col:24> 'struct compat_ipt_standard_target *' lvalue Var 0x1228268f8 'pcompat_st' 'struct compat_ipt_standard_target *'
|   |   | `-RecoveryExpr 0x122829e00 <col:44> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x122829f60 <line:27:4, col:29> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x122829eb8 <col:4, col:7> '<dependent type>' contains-errors lvalue .verdict
|   |   | | `-RecoveryExpr 0x122829e90 <col:4> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x122829e70 <col:4> 'struct ipt_standard_target' lvalue Var 0x122826a98 'st' 'struct ipt_standard_target'
|   |   | `-RecoveryExpr 0x122829f38 <col:17, col:29> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x122829f00 <col:17> 'struct compat_ipt_standard_target *' lvalue Var 0x1228268f8 'pcompat_st' 'struct compat_ipt_standard_target *'
|   |   |-IfStmt 0x12282a198 <line:28:4, line:29:46>
|   |   | |-BinaryOperator 0x12282a008 <line:28:8, col:21> 'int' contains-errors '>'
|   |   | | |-CXXDependentScopeMemberExpr 0x122829fa0 <col:8, col:11> '<dependent type>' contains-errors lvalue .verdict
|   |   | | | `-RecoveryExpr 0x122829f80 <col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-IntegerLiteral 0x122829fe8 <col:21> 'int' 0
|   |   | `-CompoundAssignOperator 0x12282a168 <line:29:5, col:46> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   |-CXXDependentScopeMemberExpr 0x12282a070 <col:5, col:8> '<dependent type>' contains-errors lvalue .verdict
|   |   |   | `-RecoveryExpr 0x12282a048 <col:5> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x12282a028 <col:5> 'struct ipt_standard_target' lvalue Var 0x122826a98 'st' 'struct ipt_standard_target'
|   |   |   `-CallExpr 0x12282a140 <col:19, col:46> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12282a0b8 <col:19> 'int ()' Function 0x122829200 'compat_calc_jump' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x12282a0f8 <col:36, col:39> '<dependent type>' contains-errors lvalue .verdict
|   |   |       `-RecoveryExpr 0x12282a0d8 <col:36> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x123808978 <line:30:4, col:35> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x1238088d8 <col:4, col:21> '<dependent type>' contains-errors lvalue .target_size
|   |   | | `-CXXDependentScopeMemberExpr 0x123808890 <col:4, col:16> '<dependent type>' contains-errors lvalue .user
|   |   | |   `-CXXDependentScopeMemberExpr 0x123808848 <col:4, col:14> '<dependent type>' contains-errors lvalue .u
|   |   | |     `-CXXDependentScopeMemberExpr 0x123808800 <col:4, col:7> '<dependent type>' contains-errors lvalue .target
|   |   | |       `-RecoveryExpr 0x12282a1d8 <col:4> '<dependent type>' contains-errors lvalue
|   |   | |         `-DeclRefExpr 0x12282a1b8 <col:4> 'struct ipt_standard_target' lvalue Var 0x122826a98 'st' 'struct ipt_standard_target'
|   |   | `-RecoveryExpr 0x123808958 <col:35> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x123808b70 <line:31:4, col:35> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x123808998 <col:4> 'void *(void *, const void *, unsigned long)' Function 0x122826eb8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-UnaryOperator 0x123808b08 <col:11, col:12> 'void *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x123808af0 <col:12> 'void **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1238089b8 <col:12> 'void **' lvalue ParmVar 0x12280dd88 'dstptr' 'void **'
|   |   | |-UnaryOperator 0x123808a28 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x123808a08 <col:21> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x123808b20 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-CompoundAssignOperator 0x123808cc0 <line:32:4, col:13> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-UnaryOperator 0x123808c88 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x123808c70 <col:5> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x123808ba8 <col:5> 'int *' lvalue ParmVar 0x12280de38 'size' 'int *'
|   |   | `-RecoveryExpr 0x123808ca0 <col:13> '<dependent type>' contains-errors lvalue
|   |   |-BreakStmt 0x123808d40 <line:34:4>
|   |   |-BreakStmt 0x123808d98 <line:37:4>
|   |   |-DefaultStmt 0x123808dc8 <line:38:3, col:10>
|   |   | `-NullStmt 0x123808dc0 <col:10>
|   |   `-BreakStmt 0x123808de8 <line:40:4>
|   `-ReturnStmt 0x123808ed8 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x123808ec0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x123808ea0 <col:9> 'int' lvalue Var 0x122826c40 'ret' 'int'
`-FunctionDecl 0x122826eb8 <line:12:4> col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x122826fb8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x122827020 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x122827088 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x122826f60 <<invalid sloc>> Implicit 882
