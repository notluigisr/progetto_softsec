TranslationUnitDecl 0x149855008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x149855eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1498555d0 '__int128'
|-TypedefDecl 0x149855f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1498555f0 'unsigned __int128'
|-TypedefDecl 0x14900c430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14900c200 'struct __NSConstantString_tag'
|   `-Record 0x149855f80 '__NSConstantString_tag'
|-TypedefDecl 0x14900c498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149855790 '__SVInt8_t'
|-TypedefDecl 0x14900c500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1498557b0 '__SVInt16_t'
|-TypedefDecl 0x14900c568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1498557d0 '__SVInt32_t'
|-TypedefDecl 0x14900c5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1498557f0 '__SVInt64_t'
|-TypedefDecl 0x14900c638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149855810 '__SVUint8_t'
|-TypedefDecl 0x14900c6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149855830 '__SVUint16_t'
|-TypedefDecl 0x14900c708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149855850 '__SVUint32_t'
|-TypedefDecl 0x14900c770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149855870 '__SVUint64_t'
|-TypedefDecl 0x14900c7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149855890 '__SVFloat16_t'
|-TypedefDecl 0x14900c840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1498558b0 '__SVFloat32_t'
|-TypedefDecl 0x14900c8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1498558d0 '__SVFloat64_t'
|-TypedefDecl 0x14900c910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1498558f0 '__SVBfloat16_t'
|-TypedefDecl 0x14900c978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149855910 '__clang_svint8x2_t'
|-TypedefDecl 0x14900c9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149855930 '__clang_svint16x2_t'
|-TypedefDecl 0x14900ca48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149855950 '__clang_svint32x2_t'
|-TypedefDecl 0x14900cab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149855970 '__clang_svint64x2_t'
|-TypedefDecl 0x14900cb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149855990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14900cb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1498559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14900cbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1498559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14900cc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1498559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14900ccb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149855a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14900cd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149855a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14900cd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149855a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14900cdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149855a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14900ce58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149855a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14900cec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x149855ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14900cf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x149855ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14900cf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x149855af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14900cff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149855b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14900d060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149855b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14900d0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149855b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14900d130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149855b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14900d198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149855b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14900da00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x149855bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14900da68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x149855bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14900dad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x149855bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14900db38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149855c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14900dba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149855c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14900dc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149855c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14900dc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149855c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14900dcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149855c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14900dd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x149855cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14900dda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x149855cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14900de10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x149855cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14900de78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149855d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14900dee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149855d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14900df48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149855d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14900dfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149855d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14900e018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149855d90 '__SVBool_t'
|-TypedefDecl 0x14900e080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x149855db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14900e0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x149855dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14900e150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x149855df0 '__SVCount_t'
|-TypedefDecl 0x14900e1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14900e1b0 'char *'
|   `-BuiltinType 0x1498550b0 'char'
|-TypedefDecl 0x14900e268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14900e1b0 'char *'
|   `-BuiltinType 0x1498550b0 'char'
|-RecordDecl 0x14900e2c0 <dataset_diviso_filec/func7614_vuln.c:1:8, col:15> col:15 struct domain_device
|-FunctionDecl 0x14900e638 <col:1, line:76:1> line:1:30 sas_ex_discover_expander 'struct domain_device *(struct domain_device *, int)' static
| |-ParmVarDecl 0x14900e418 <line:2:2, col:24> col:24 used parent 'struct domain_device *'
| |-ParmVarDecl 0x14900e498 <col:32, col:36> col:36 used phy_id 'int'
| `-CompoundStmt 0x14902d530 <line:3:1, line:76:1>
|   |-DeclStmt 0x149028598 <line:4:2, col:79>
|   | |-RecordDecl 0x14900e738 <col:2, col:9> col:9 struct sas_expander_device
|   | `-VarDecl 0x14900e8a8 <col:2, col:78> col:30 used parent_ex 'struct sas_expander_device *' cinit
|   |   `-CallExpr 0x149028558 <col:42, col:78> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1490280b8 <col:42> 'int ()' Function 0x149028000 'rphy_to_expander_device' 'int ()'
|   |     `-RecoveryExpr 0x149028530 <col:66, col:74> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x1490280d8 <col:66> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |-DeclStmt 0x1490288c8 <line:5:2, col:53>
|   | |-RecordDecl 0x1490285b0 <col:2, col:9> col:9 struct ex_phy
|   | `-VarDecl 0x149028718 <col:2, col:52> col:17 used phy 'struct ex_phy *' cinit
|   |   `-UnaryOperator 0x149028898 <col:23, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-ArraySubscriptExpr 0x149028878 <col:24, col:52> '<dependent type>' contains-errors lvalue
|   |       |-ImplicitCastExpr 0x149028848 <col:24, col:39> '<dependent type>' contains-errors <LValueToRValue>
|   |       | `-CXXDependentScopeMemberExpr 0x1490287e0 <col:24, col:39> '<dependent type>' contains-errors lvalue .ex_phy
|   |       |   `-RecoveryExpr 0x1490287b8 <col:24, col:32> '<dependent type>' contains-errors lvalue
|   |       |     `-DeclRefExpr 0x149028780 <col:24> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |       `-ImplicitCastExpr 0x149028860 <col:46> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x149028828 <col:46> 'int' lvalue ParmVar 0x14900e498 'phy_id' 'int'
|   |-DeclStmt 0x1490289a8 <line:6:2, col:36>
|   | `-VarDecl 0x149028908 <col:2, col:32> col:24 used child 'struct domain_device *' cinit
|   |   `-RecoveryExpr 0x149028988 <col:32> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x149028ba8 <line:7:2, col:23>
|   | |-RecordDecl 0x1490289c0 <col:2, col:9> col:9 struct sas_rphy
|   | `-VarDecl 0x149028b28 <col:2, col:19> col:19 used rphy 'struct sas_rphy *'
|   |-DeclStmt 0x149028cb0 <line:8:2, col:34>
|   | `-VarDecl 0x149028c48 <col:2, col:30> col:30 used edev 'struct sas_expander_device *'
|   |-DeclStmt 0x149028eb8 <line:9:2, col:27>
|   | |-RecordDecl 0x149028cc8 <col:2, col:9> col:9 struct asd_sas_port
|   | `-VarDecl 0x149028e38 <col:2, col:23> col:23 used port 'struct asd_sas_port *'
|   |-DeclStmt 0x149028f50 <line:10:2, col:9>
|   | `-VarDecl 0x149028ee8 <col:2, col:6> col:6 used res 'int'
|   |-IfStmt 0x149029900 <line:12:2, line:18:2>
|   | |-BinaryOperator 0x149029420 <line:12:6, col:27> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x149028fa0 <col:6, col:11> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x149028f68 <col:6> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   | | `-RecoveryExpr 0x149029400 <col:27> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1490298e0 <col:43, line:18:2>
|   |   |-CallExpr 0x149029850 <line:13:3, line:16:24> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x149029520 <line:13:3> 'int ()' Function 0x149029468 'pr_warn' 'int ()'
|   |   | |-StringLiteral 0x149029580 <col:11> 'char[4]' lvalue "STR"
|   |   | |-CallExpr 0x149029700 <line:14:4, col:29> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x149029680 <col:4> 'int ()' Function 0x1490295c8 'SAS_ADDR' 'int ()'
|   |   | | `-RecoveryExpr 0x1490296d8 <col:13, col:21> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1490296a0 <col:13> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |   | |-DeclRefExpr 0x149029728 <col:32> 'int' lvalue ParmVar 0x14900e498 'phy_id' 'int'
|   |   | |-CallExpr 0x1490297c8 <line:15:4, col:35> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x149029748 <col:4> 'int ()' Function 0x1490295c8 'SAS_ADDR' 'int ()'
|   |   | | `-RecoveryExpr 0x1490297a0 <col:13, col:18> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x149029768 <col:13> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   |   | `-RecoveryExpr 0x149029828 <line:16:4, col:9> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x1490297f0 <col:4> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   |   `-ReturnStmt 0x1490298d0 <line:17:3, col:10>
|   |     `-RecoveryExpr 0x1490298b0 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x149029ac0 <line:19:2, col:27> 'struct domain_device *' contains-errors '='
|   | |-DeclRefExpr 0x149029920 <col:2> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-ImplicitCastExpr 0x149029aa8 <col:10, col:27> 'struct domain_device *' <IntegralToPointer>
|   |   `-CallExpr 0x149029a88 <col:10, col:27> 'int'
|   |     `-ImplicitCastExpr 0x149029a70 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x149029a20 <col:10> 'int ()' Function 0x149029968 'sas_alloc_device' 'int ()'
|   |-IfStmt 0x149029b78 <line:20:2, line:21:10>
|   | |-UnaryOperator 0x149029b18 <line:20:6, col:7> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x149029b00 <col:7> 'struct domain_device *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x149029ae0 <col:7> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-ReturnStmt 0x149029b68 <line:21:3, col:10>
|   |   `-RecoveryExpr 0x149029b48 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x149029e08 <line:23:2, col:55> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x149029bd0 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x149029b98 <col:2> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   | `-CallExpr 0x149029dd8 <col:14, col:55> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x149029cd8 <col:14> 'int ()' Function 0x149029c20 'sas_port_alloc' 'int ()'
|   |   |-UnaryOperator 0x149029da0 <col:29, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-CXXDependentScopeMemberExpr 0x149029d58 <col:30, col:44> '<dependent type>' contains-errors lvalue ->dev
|   |   |   `-RecoveryExpr 0x149029d30 <col:30, col:38> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x149029cf8 <col:30> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |   `-DeclRefExpr 0x149029db8 <col:49> 'int' lvalue ParmVar 0x14900e498 'phy_id' 'int'
|   |-CallExpr 0x14902a0f0 <line:25:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x149029f08 <col:2> 'int ()' Function 0x149029e50 'BUG_ON' 'int ()'
|   | `-BinaryOperator 0x14902a0d0 <col:9, col:36> 'int' contains-errors '!='
|   |   |-CallExpr 0x14902a088 <col:9, col:31> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14902a008 <col:9> 'int ()' Function 0x149029f50 'sas_port_add' 'int ()'
|   |   | `-RecoveryExpr 0x14902a060 <col:22, col:27> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x14902a028 <col:22> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   |   `-IntegerLiteral 0x14902a0b0 <col:36> 'int' 0
|   |-SwitchStmt 0x14902a190 <line:28:2, line:40:2>
|   | |-ImplicitCastExpr 0x14902a178 <line:28:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-RecoveryExpr 0x14902a150 <col:10, col:15> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14902a118 <col:10> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   | `-CompoundStmt 0x14902a980 <col:34, line:40:2>
|   |   |-BreakStmt 0x14902a338 <line:32:3>
|   |   |-BreakStmt 0x14902a3e0 <line:36:3>
|   |   |-DefaultStmt 0x14902a828 <line:37:2, col:9>
|   |   | `-NullStmt 0x14902a820 <col:9>
|   |   `-CallExpr 0x14902a960 <line:39:3, col:7> 'int'
|   |     `-ImplicitCastExpr 0x14902a948 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x14902a928 <col:3> 'int ()' Function 0x14902a870 'BUG' 'int ()'
|   |-BinaryOperator 0x14902aa30 <line:41:2, col:17> 'struct asd_sas_port *' contains-errors '='
|   | |-DeclRefExpr 0x14902a9b0 <col:2> 'struct asd_sas_port *' lvalue Var 0x149028e38 'port' 'struct asd_sas_port *'
|   | `-RecoveryExpr 0x14902aa08 <col:9, col:17> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14902a9d0 <col:9> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |-BinaryOperator 0x14902aad0 <line:42:2, col:16> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14902aa88 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14902aa50 <col:2> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-DeclRefExpr 0x14902aab0 <col:16> 'struct sas_rphy *' lvalue Var 0x149028b28 'rphy' 'struct sas_rphy *'
|   |-CallExpr 0x14902ac68 <line:43:2, col:23> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14902abd0 <col:2> 'int ()' Function 0x14902ab18 'get_device' 'int ()'
|   | `-UnaryOperator 0x14902ac50 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14902ac28 <col:14, col:20> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14902abf0 <col:14> 'struct sas_rphy *' lvalue Var 0x149028b28 'rphy' 'struct sas_rphy *'
|   |-BinaryOperator 0x14902ad60 <line:44:2, col:37> 'struct sas_expander_device *' '='
|   | |-DeclRefExpr 0x14902ac90 <col:2> 'struct sas_expander_device *' lvalue Var 0x149028c48 'edev' 'struct sas_expander_device *'
|   | `-ImplicitCastExpr 0x14902ad48 <col:9, col:37> 'struct sas_expander_device *' <IntegralToPointer>
|   |   `-CallExpr 0x14902ad08 <col:9, col:37> 'int'
|   |     |-ImplicitCastExpr 0x14902acf0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14902acb0 <col:9> 'int ()' Function 0x149028000 'rphy_to_expander_device' 'int ()'
|   |     `-ImplicitCastExpr 0x14902ad30 <col:33> 'struct sas_rphy *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14902acd0 <col:33> 'struct sas_rphy *' lvalue Var 0x149028b28 'rphy' 'struct sas_rphy *'
|   |-BinaryOperator 0x14902ae40 <line:45:2, col:25> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14902adb8 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14902ad80 <col:2> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-RecoveryExpr 0x14902ae18 <col:20, col:25> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14902ade0 <col:20> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   |-CallExpr 0x14902afd8 <line:46:2, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14902af40 <col:2> 'int ()' Function 0x14902ae88 'kref_get' 'int ()'
|   | `-UnaryOperator 0x14902afc0 <col:11, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14902af98 <col:12, col:20> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14902af60 <col:12> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |-BinaryOperator 0x14902b080 <line:47:2, col:18> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14902b038 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14902b000 <col:2> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-DeclRefExpr 0x14902b060 <col:18> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |-BinaryOperator 0x14902b120 <line:48:2, col:16> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14902b0d8 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14902b0a0 <col:2> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-DeclRefExpr 0x14902b100 <col:16> 'struct asd_sas_port *' lvalue Var 0x149028e38 'port' 'struct asd_sas_port *'
|   |-BinaryOperator 0x14902b200 <line:49:2, col:23> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14902b178 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14902b140 <col:2> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-RecoveryExpr 0x14902b1d8 <col:18, col:23> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14902b1a0 <col:18> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   |-BinaryOperator 0x14902b2e0 <line:50:2, col:23> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14902b258 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14902b220 <col:2> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-RecoveryExpr 0x14902b2b8 <col:18, col:23> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14902b280 <col:18> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   |-CallExpr 0x14902b888 <line:52:2, col:55> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14902b788 <col:2> 'int ()' Function 0x14902b6d0 'sas_hash_addr' 'int ()'
|   | |-RecoveryExpr 0x14902b800 <col:16, col:23> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14902b7a8 <col:16> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-RecoveryExpr 0x14902b860 <col:40, col:47> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14902b828 <col:40> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   |-CallExpr 0x14902ba30 <line:53:2, col:40> 'int' contains-errors
|   | |-ImplicitCastExpr 0x14902ba18 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14902b998 <col:2> 'int ()' Function 0x14902b8e0 'sas_ex_get_linkrate' 'int ()'
|   | |-ImplicitCastExpr 0x14902ba68 <col:22> 'struct domain_device *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14902b9b8 <col:22> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   | |-ImplicitCastExpr 0x14902ba80 <col:30> 'struct domain_device *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x14902b9d8 <col:30> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-ImplicitCastExpr 0x14902ba98 <col:37> 'struct ex_phy *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x14902b9f8 <col:37> 'struct ex_phy *' contains-errors lvalue Var 0x149028718 'phy' 'struct ex_phy *'
|   |-BinaryOperator 0x14902bbb0 <line:54:2, col:35> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14902bae8 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14902bab0 <col:2> 'struct sas_expander_device *' lvalue Var 0x149028c48 'edev' 'struct sas_expander_device *'
|   | `-BinaryOperator 0x14902bb90 <col:16, col:35> '<dependent type>' contains-errors '+'
|   |   |-RecoveryExpr 0x14902bb48 <col:16, col:27> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x14902bb10 <col:16> 'struct sas_expander_device *' contains-errors lvalue Var 0x14900e8a8 'parent_ex' 'struct sas_expander_device *'
|   |   `-IntegerLiteral 0x14902bb70 <col:35> 'int' 1
|   |-BinaryOperator 0x14902bf40 <line:55:2, line:56:20> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14902bc78 <line:55:2, col:21> '<dependent type>' contains-errors lvalue .max_level
|   | | `-CXXDependentScopeMemberExpr 0x14902bc30 <col:2, col:16> '<dependent type>' contains-errors lvalue ->disc
|   | |   `-RecoveryExpr 0x14902bc08 <col:2, col:10> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x14902bbd0 <col:2> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   | `-CallExpr 0x14902bf10 <col:33, line:56:20> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14902bda0 <line:55:33> 'int ()' Function 0x14902bce8 'max' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x14902be68 <col:37, col:56> '<dependent type>' contains-errors lvalue .max_level
|   |   | `-CXXDependentScopeMemberExpr 0x14902be20 <col:37, col:51> '<dependent type>' contains-errors lvalue ->disc
|   |   |   `-RecoveryExpr 0x14902bdf8 <col:37, col:45> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x14902bdc0 <col:37> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |   `-RecoveryExpr 0x14902bee8 <line:56:9, col:15> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14902beb0 <col:9> 'struct sas_expander_device *' lvalue Var 0x149028c48 'edev' 'struct sas_expander_device *'
|   |-CallExpr 0x14902c098 <line:57:2, col:20> 'int' contains-errors
|   | |-ImplicitCastExpr 0x14902c080 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14902c040 <col:2> 'int ()' Function 0x14902bf88 'sas_init_dev' 'int ()'
|   | `-ImplicitCastExpr 0x14902c0c0 <col:15> 'struct domain_device *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x14902c060 <col:15> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   |-CallExpr 0x14902c230 <line:58:2, col:30> 'int' contains-errors
|   | |-ImplicitCastExpr 0x14902c218 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14902c1b8 <col:2> 'int ()' Function 0x14902c100 'sas_fill_in_rphy' 'int ()'
|   | |-ImplicitCastExpr 0x14902c260 <col:19> 'struct domain_device *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x14902c1d8 <col:19> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-ImplicitCastExpr 0x14902c278 <col:26> 'struct sas_rphy *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14902c1f8 <col:26> 'struct sas_rphy *' lvalue Var 0x149028b28 'rphy' 'struct sas_rphy *'
|   |-CallExpr 0x14902c3c8 <line:59:2, col:19> 'int'
|   | |-ImplicitCastExpr 0x14902c3b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14902c370 <col:2> 'int ()' Function 0x14902c2b8 'sas_rphy_add' 'int ()'
|   | `-ImplicitCastExpr 0x14902c3f0 <col:15> 'struct sas_rphy *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14902c390 <col:15> 'struct sas_rphy *' lvalue Var 0x149028b28 'rphy' 'struct sas_rphy *'
|   |-CallExpr 0x14902c5c8 <line:61:2, col:44> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14902c4e8 <col:2> 'int ()' Function 0x14902c430 'spin_lock_irq' 'int ()'
|   | `-UnaryOperator 0x14902c5b0 <col:16, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x14902c568 <col:17, col:31> '<dependent type>' contains-errors lvalue ->dev_list_lock
|   |     `-RecoveryExpr 0x14902c540 <col:17, col:25> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x14902c508 <col:17> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |-CallExpr 0x14902c860 <line:62:2, col:62> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14902c6d0 <col:2> 'int ()' Function 0x14902c618 'list_add_tail' 'int ()'
|   | |-UnaryOperator 0x14902c750 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x14902c728 <col:17, col:24> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14902c6f0 <col:17> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-UnaryOperator 0x14902c848 <col:39, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x14902c800 <col:40, col:54> '<dependent type>' contains-errors lvalue ->dev_list
|   |     `-RecoveryExpr 0x14902c7a0 <col:40, col:48> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x14902c768 <col:40> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |-CallExpr 0x14902ca50 <line:63:2, col:46> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14902c970 <col:2> 'int ()' Function 0x14902c8b8 'spin_unlock_irq' 'int ()'
|   | `-UnaryOperator 0x14902ca38 <col:18, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x14902c9f0 <col:19, col:33> '<dependent type>' contains-errors lvalue ->dev_list_lock
|   |     `-RecoveryExpr 0x14902c9c8 <col:19, col:27> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x14902c990 <col:19> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |-BinaryOperator 0x14902cc10 <line:65:2, col:35> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14902ca78 <col:2> 'int' lvalue Var 0x149028ee8 'res' 'int'
|   | `-CallExpr 0x14902cbd0 <col:8, col:35> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x14902cbb8 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14902cb78 <col:8> 'int ()' Function 0x14902cac0 'sas_discover_expander' 'int ()'
|   |   `-ImplicitCastExpr 0x14902cbf8 <col:30> 'struct domain_device *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x14902cb98 <col:30> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   |-IfStmt 0x14902d340 <line:66:2, line:73:2>
|   | |-ImplicitCastExpr 0x14902cc50 <line:66:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x14902cc30 <col:6> 'int' lvalue Var 0x149028ee8 'res' 'int'
|   | `-CompoundStmt 0x14902d308 <col:11, line:73:2>
|   |   |-CallExpr 0x14902cda0 <line:67:3, col:23> 'int'
|   |   | |-ImplicitCastExpr 0x14902cd88 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14902cd48 <col:3> 'int ()' Function 0x14902cc90 'sas_rphy_delete' 'int ()'
|   |   | `-ImplicitCastExpr 0x14902cdc8 <col:19> 'struct sas_rphy *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14902cd68 <col:19> 'struct sas_rphy *' lvalue Var 0x149028b28 'rphy' 'struct sas_rphy *'
|   |   |-CallExpr 0x14902cec0 <line:68:3, col:45> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14902cde0 <col:3> 'int ()' Function 0x14902c430 'spin_lock_irq' 'int ()'
|   |   | `-UnaryOperator 0x14902cea8 <col:17, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-CXXDependentScopeMemberExpr 0x14902ce60 <col:18, col:32> '<dependent type>' contains-errors lvalue ->dev_list_lock
|   |   |     `-RecoveryExpr 0x14902ce38 <col:18, col:26> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x14902ce00 <col:18> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |   |-CallExpr 0x14902d060 <line:69:3, col:33> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14902cfc8 <col:3> 'int ()' Function 0x14902cf10 'list_del' 'int ()'
|   |   | `-UnaryOperator 0x14902d048 <col:12, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-RecoveryExpr 0x14902d020 <col:13, col:20> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x14902cfe8 <col:13> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   |   |-CallExpr 0x14902d168 <line:70:3, col:47> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14902d088 <col:3> 'int ()' Function 0x14902c8b8 'spin_unlock_irq' 'int ()'
|   |   | `-UnaryOperator 0x14902d150 <col:19, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-CXXDependentScopeMemberExpr 0x14902d108 <col:20, col:34> '<dependent type>' contains-errors lvalue ->dev_list_lock
|   |   |     `-RecoveryExpr 0x14902d0e0 <col:20, col:28> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x14902d0a8 <col:20> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   |   `-CallExpr 0x14902d2c8 <line:71:3, col:23> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x14902d2b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14902d270 <col:3> 'int ()' Function 0x14902d1b8 'sas_put_device' 'int ()'
|   |     `-ImplicitCastExpr 0x14902d2f0 <col:18> 'struct domain_device *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x14902d290 <col:18> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   |-CallExpr 0x14902d4b8 <line:74:2, col:58> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14902d360 <col:2> 'int ()' Function 0x14902c618 'list_add_tail' 'int ()'
|   | |-UnaryOperator 0x14902d3e0 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x14902d3b8 <col:17, col:24> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14902d380 <col:17> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
|   | `-UnaryOperator 0x14902d4a0 <col:34, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x14902d458 <col:35, col:50> '<dependent type>' contains-errors lvalue .children
|   |     `-RecoveryExpr 0x14902d430 <col:35, col:43> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x14902d3f8 <col:35> 'struct domain_device *' lvalue ParmVar 0x14900e418 'parent' 'struct domain_device *'
|   `-ReturnStmt 0x14902d520 <line:75:2, col:9>
|     `-ImplicitCastExpr 0x14902d508 <col:9> 'struct domain_device *' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x14902d4e8 <col:9> 'struct domain_device *' contains-errors lvalue Var 0x149028908 'child' 'struct domain_device *'
`-FunctionDecl 0x14902b378 <line:51:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14902b478 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14902b4e0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14902b548 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14902b420 <<invalid sloc>> Implicit 882
