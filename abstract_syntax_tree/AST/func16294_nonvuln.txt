TranslationUnitDecl 0x13c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c055bd0 '__int128'
|-TypedefDecl 0x13c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c055bf0 'unsigned __int128'
|-TypedefDecl 0x13d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x13c056580 '__NSConstantString_tag'
|-TypedefDecl 0x13d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c055d90 '__SVInt8_t'
|-TypedefDecl 0x13d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c055db0 '__SVInt16_t'
|-TypedefDecl 0x13d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c055dd0 '__SVInt32_t'
|-TypedefDecl 0x13d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c055df0 '__SVInt64_t'
|-TypedefDecl 0x13d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c055e10 '__SVUint8_t'
|-TypedefDecl 0x13d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c055e30 '__SVUint16_t'
|-TypedefDecl 0x13d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c055e50 '__SVUint32_t'
|-TypedefDecl 0x13d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c055e70 '__SVUint64_t'
|-TypedefDecl 0x13d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c055e90 '__SVFloat16_t'
|-TypedefDecl 0x13d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c056390 '__SVBool_t'
|-TypedefDecl 0x13d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c0563f0 '__SVCount_t'
|-TypedefDecl 0x13d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d00dbb0 'char *'
|   `-BuiltinType 0x13c0556b0 'char'
|-TypedefDecl 0x13d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d00dbb0 'char *'
|   `-BuiltinType 0x13c0556b0 'char'
`-FunctionDecl 0x13d00de58 <dataset_diviso_filec/func16294_nonvuln.c:1:1, line:43:1> line:1:16 invalid status_show_vhci 'int (int, char *)' static
  |-ParmVarDecl 0x13d00dcf0 <col:33, col:37> col:37 used pdev_nr 'int'
  |-ParmVarDecl 0x13d00dd70 <col:46, col:52> col:52 used out 'char *'
  `-CompoundStmt 0x13e009538 <line:2:1, line:43:1>
    |-DeclStmt 0x13d00e130 <line:3:2, col:52>
    | |-RecordDecl 0x13d00df10 <col:2, col:9> col:9 struct platform_device
    | `-VarDecl 0x13d00e078 <col:2, col:26> col:26 used pdev 'struct platform_device *'
    |-DeclStmt 0x13d00e338 <line:4:2, col:19>
    | |-RecordDecl 0x13d00e148 <col:2, col:9> col:9 struct vhci
    | `-VarDecl 0x13d00e2b8 <col:2, col:15> col:15 used vhci 'struct vhci *'
    |-DeclStmt 0x13d825548 <line:5:2, col:21>
    | |-RecordDecl 0x13d00e350 <col:2, col:9> col:9 struct usb_hcd
    | `-VarDecl 0x13d8254c8 <col:2, col:18> col:18 used hcd 'struct usb_hcd *'
    |-DeclStmt 0x13d825748 <line:6:2, col:27>
    | |-RecordDecl 0x13d825560 <col:2, col:9> col:9 struct vhci_hcd
    | `-VarDecl 0x13d8256c8 <col:2, col:19> col:19 used vhci_hcd 'struct vhci_hcd *'
    |-DeclStmt 0x13d825818 <line:7:2, col:15>
    | `-VarDecl 0x13d825778 <col:2, col:12> col:8 used s 'char *' cinit
    |   `-ImplicitCastExpr 0x13d825800 <col:12> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x13d8257e0 <col:12> 'char *' lvalue ParmVar 0x13d00dd70 'out' 'char *'
    |-DeclStmt 0x13d8258b0 <line:8:2, col:7>
    | `-VarDecl 0x13d825848 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x13d825948 <line:9:2, col:21>
    | `-VarDecl 0x13d8258e0 <col:2, col:16> col:16 used flags 'unsigned long'
    |-IfStmt 0x13d825cd8 <line:11:2, line:14:2>
    | |-BinaryOperator 0x13d825a00 <line:11:6, col:16> 'int' '||'
    | | |-UnaryOperator 0x13d825998 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x13d825980 <col:7> 'struct platform_device *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x13d825960 <col:7> 'struct platform_device *' lvalue Var 0x13d00e078 'pdev' 'struct platform_device *'
    | | `-UnaryOperator 0x13d8259e8 <col:15, col:16> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x13d8259d0 <col:16> 'char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13d8259b0 <col:16> 'char *' lvalue ParmVar 0x13d00dd70 'out' 'char *'
    | `-CompoundStmt 0x13d825cb8 <col:21, line:14:2>
    |   |-CallExpr 0x13d825c48 <line:12:3, col:29> 'int'
    |   | |-ImplicitCastExpr 0x13d825c30 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13d825b80 <col:3> 'int ()' Function 0x13d825ac8 'usbip_dbg_vhci_sysfs' 'int ()'
    |   | `-ImplicitCastExpr 0x13d825c70 <col:24> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x13d825be0 <col:24> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x13d825ca8 <line:13:3, col:10>
    |     `-IntegerLiteral 0x13d825c88 <col:10> 'int' 0
    |-BinaryOperator 0x13d8262d0 <line:16:2, col:33> 'struct usb_hcd *' '='
    | |-DeclRefExpr 0x13d825cf8 <col:2> 'struct usb_hcd *' lvalue Var 0x13d8254c8 'hcd' 'struct usb_hcd *'
    | `-ImplicitCastExpr 0x13d825e90 <col:8, col:33> 'struct usb_hcd *' <IntegralToPointer>
    |   `-CallExpr 0x13d825e50 <col:8, col:33> 'int'
    |     |-ImplicitCastExpr 0x13d825e38 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13d825df8 <col:8> 'int ()' Function 0x13d825d40 'platform_get_drvdata' 'int ()'
    |     `-ImplicitCastExpr 0x13d825e78 <col:29> 'struct platform_device *' <LValueToRValue>
    |       `-DeclRefExpr 0x13d825e18 <col:29> 'struct platform_device *' lvalue Var 0x13d00e078 'pdev' 'struct platform_device *'
    |-BinaryOperator 0x13c1236b0 <line:17:2, col:32> 'struct vhci_hcd *' '='
    | |-DeclRefExpr 0x13d8262f0 <col:2> 'struct vhci_hcd *' lvalue Var 0x13d8256c8 'vhci_hcd' 'struct vhci_hcd *'
    | `-ImplicitCastExpr 0x13c123698 <col:13, col:32> 'struct vhci_hcd *' <IntegralToPointer>
    |   `-CallExpr 0x13c123658 <col:13, col:32> 'int'
    |     |-ImplicitCastExpr 0x13c123640 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13c123600 <col:13> 'int ()' Function 0x13d826338 'hcd_to_vhci_hcd' 'int ()'
    |     `-ImplicitCastExpr 0x13c123680 <col:29> 'struct usb_hcd *' <LValueToRValue>
    |       `-DeclRefExpr 0x13c123620 <col:29> 'struct usb_hcd *' lvalue Var 0x13d8254c8 'hcd' 'struct usb_hcd *'
    |-BinaryOperator 0x13c123750 <line:18:2, col:19> 'struct vhci *' contains-errors '='
    | |-DeclRefExpr 0x13c1236d0 <col:2> 'struct vhci *' lvalue Var 0x13d00e2b8 'vhci' 'struct vhci *'
    | `-RecoveryExpr 0x13c123728 <col:9, col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13c1236f0 <col:9> 'struct vhci_hcd *' lvalue Var 0x13d8256c8 'vhci_hcd' 'struct vhci_hcd *'
    |-CallExpr 0x13c123908 <line:20:2, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c123850 <col:2> 'int ()' Function 0x13c123798 'spin_lock_irqsave' 'int ()'
    | |-UnaryOperator 0x13c1238d0 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13c1238a8 <col:21, col:27> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13c123870 <col:21> 'struct vhci *' lvalue Var 0x13d00e2b8 'vhci' 'struct vhci *'
    | `-DeclRefExpr 0x13c1238e8 <col:33> 'unsigned long' lvalue Var 0x13d8258e0 'flags' 'unsigned long'
    |-ForStmt 0x13c1244e0 <line:22:2, line:29:2>
    | |-BinaryOperator 0x13c123978 <line:22:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x13c123938 <col:7> 'int' lvalue Var 0x13d825848 'i' 'int'
    | | `-IntegerLiteral 0x13c123958 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13c123a10 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13c123998 <col:14> 'int' lvalue Var 0x13d825848 'i' 'int'
    | | `-RecoveryExpr 0x13c1239f0 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13c123a50 <col:33, col:34> 'int' postfix '++'
    | | `-DeclRefExpr 0x13c123a30 <col:33> 'int' lvalue Var 0x13d825848 'i' 'int'
    | `-CompoundStmt 0x13c1244b0 <col:38, line:29:2>
    |   |-DeclStmt 0x13c123d88 <line:23:3, col:57>
    |   | |-RecordDecl 0x13c123a68 <col:3, col:10> col:10 struct vhci_device
    |   | `-VarDecl 0x13c123bd8 <col:3, col:56> col:23 used vdev 'struct vhci_device *' cinit
    |   |   `-UnaryOperator 0x13c123d58 <col:30, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-ArraySubscriptExpr 0x13c123d38 <col:31, col:56> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x13c123d08 <col:31, col:50> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-CXXDependentScopeMemberExpr 0x13c123ca0 <col:31, col:50> '<dependent type>' contains-errors lvalue ->vdev
    |   |       |   `-RecoveryExpr 0x13c123c78 <col:31, col:37> '<dependent type>' contains-errors lvalue
    |   |       |     `-DeclRefExpr 0x13c123c40 <col:31> 'struct vhci *' lvalue Var 0x13d00e2b8 'vhci' 'struct vhci *'
    |   |       `-ImplicitCastExpr 0x13c123d20 <col:55> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x13c123ce8 <col:55> 'int' lvalue Var 0x13d825848 'i' 'int'
    |   |-CallExpr 0x13c123f60 <line:25:3, col:27> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13c123e80 <col:3> 'int ()' Function 0x13c123dc8 'spin_lock' 'int ()'
    |   | `-UnaryOperator 0x13c123f48 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x13c123f00 <col:14, col:23> '<dependent type>' contains-errors lvalue .lock
    |   |     `-RecoveryExpr 0x13c123ed8 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x13c123ea0 <col:14> 'struct vhci_device *' contains-errors lvalue Var 0x13c123bd8 'vdev' 'struct vhci_device *'
    |   |-CallExpr 0x13c124288 <line:26:3, line:27:41> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13c124068 <line:26:3> 'int ()' Function 0x13c123fb0 'port_show_vhci' 'int ()'
    |   | |-UnaryOperator 0x13c1240e0 <col:18, col:19> 'char **' prefix '&' cannot overflow
    |   | | `-DeclRefExpr 0x13c124088 <col:19> 'char *' lvalue ParmVar 0x13d00dd70 'out' 'char *'
    |   | |-RecoveryExpr 0x13c124208 <col:24> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x13c124268 <line:27:11, col:34> '<dependent type>' contains-errors '+'
    |   | | |-BinaryOperator 0x13c124248 <col:11, col:21> '<dependent type>' contains-errors '*'
    |   | | | |-DeclRefExpr 0x13c124110 <col:11> 'int' lvalue ParmVar 0x13d00dcf0 'pdev_nr' 'int'
    |   | | | `-RecoveryExpr 0x13c124228 <col:21> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13c124168 <col:34> 'int' lvalue Var 0x13d825848 'i' 'int'
    |   | `-DeclRefExpr 0x13c1241a8 <col:37> 'struct vhci_device *' contains-errors lvalue Var 0x13c123bd8 'vdev' 'struct vhci_device *'
    |   `-CallExpr 0x13c124488 <line:28:3, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13c1243a8 <col:3> 'int ()' Function 0x13c1242f0 'spin_unlock' 'int ()'
    |     `-UnaryOperator 0x13c124470 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-CXXDependentScopeMemberExpr 0x13c124428 <col:16, col:25> '<dependent type>' contains-errors lvalue .lock
    |         `-RecoveryExpr 0x13c124400 <col:16, col:22> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x13c1243c8 <col:16> 'struct vhci_device *' contains-errors lvalue Var 0x13c123bd8 'vdev' 'struct vhci_device *'
    |-ForStmt 0x13e009280 <line:31:2, line:38:2>
    | |-BinaryOperator 0x13c124558 <line:31:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x13c124518 <col:7> 'int' lvalue Var 0x13d825848 'i' 'int'
    | | `-IntegerLiteral 0x13c124538 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13e008c00 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13c124578 <col:14> 'int' lvalue Var 0x13d825848 'i' 'int'
    | | `-RecoveryExpr 0x13c1245d0 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13e008c40 <col:33, col:34> 'int' postfix '++'
    | | `-DeclRefExpr 0x13e008c20 <col:33> 'int' lvalue Var 0x13d825848 'i' 'int'
    | `-CompoundStmt 0x13e009258 <col:38, line:38:2>
    |   |-DeclStmt 0x13e008f78 <line:32:3, col:57>
    |   | |-RecordDecl 0x13e008c58 <col:3, col:10> col:10 struct vhci_device
    |   | `-VarDecl 0x13e008dc8 <col:3, col:56> col:23 used vdev 'struct vhci_device *' cinit
    |   |   `-UnaryOperator 0x13e008f48 <col:30, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-ArraySubscriptExpr 0x13e008f28 <col:31, col:56> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x13e008ef8 <col:31, col:50> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-CXXDependentScopeMemberExpr 0x13e008e90 <col:31, col:50> '<dependent type>' contains-errors lvalue ->vdev
    |   |       |   `-RecoveryExpr 0x13e008e68 <col:31, col:37> '<dependent type>' contains-errors lvalue
    |   |       |     `-DeclRefExpr 0x13e008e30 <col:31> 'struct vhci *' lvalue Var 0x13d00e2b8 'vhci' 'struct vhci *'
    |   |       `-ImplicitCastExpr 0x13e008f10 <col:55> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x13e008ed8 <col:55> 'int' lvalue Var 0x13d825848 'i' 'int'
    |   |-CallExpr 0x13e009070 <line:34:3, col:27> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13e008f90 <col:3> 'int ()' Function 0x13c123dc8 'spin_lock' 'int ()'
    |   | `-UnaryOperator 0x13e009058 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x13e009010 <col:14, col:23> '<dependent type>' contains-errors lvalue .lock
    |   |     `-RecoveryExpr 0x13e008fe8 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x13e008fb0 <col:14> 'struct vhci_device *' contains-errors lvalue Var 0x13e008dc8 'vdev' 'struct vhci_device *'
    |   `-CallExpr 0x13e009230 <line:37:3, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13e009150 <col:3> 'int ()' Function 0x13c1242f0 'spin_unlock' 'int ()'
    |     `-UnaryOperator 0x13e009218 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-CXXDependentScopeMemberExpr 0x13e0091d0 <col:16, col:25> '<dependent type>' contains-errors lvalue .lock
    |         `-RecoveryExpr 0x13e0091a8 <col:16, col:22> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x13e009170 <col:16> 'struct vhci_device *' contains-errors lvalue Var 0x13e008dc8 'vdev' 'struct vhci_device *'
    |-CallExpr 0x13e009450 <line:40:2, col:43> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e009398 <col:2> 'int ()' Function 0x13e0092e0 'spin_unlock_irqrestore' 'int ()'
    | |-UnaryOperator 0x13e009418 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13e0093f0 <col:26, col:32> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13e0093b8 <col:26> 'struct vhci *' lvalue Var 0x13d00e2b8 'vhci' 'struct vhci *'
    | `-DeclRefExpr 0x13e009430 <col:38> 'unsigned long' lvalue Var 0x13d8258e0 'flags' 'unsigned long'
    `-ReturnStmt 0x13e009528 <line:42:2, col:15>
      `-ImplicitCastExpr 0x13e009510 <col:9, col:15> 'int' <IntegralCast>
        `-BinaryOperator 0x13e0094f0 <col:9, col:15> 'long' '-'
          |-ImplicitCastExpr 0x13e0094c0 <col:9> 'char *' <LValueToRValue>
          | `-DeclRefExpr 0x13e009480 <col:9> 'char *' lvalue ParmVar 0x13d00dd70 'out' 'char *'
          `-ImplicitCastExpr 0x13e0094d8 <col:15> 'char *' <LValueToRValue>
            `-DeclRefExpr 0x13e0094a0 <col:15> 'char *' lvalue Var 0x13d825778 's' 'char *'
