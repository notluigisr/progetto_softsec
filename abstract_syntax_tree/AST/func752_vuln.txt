TranslationUnitDecl 0x157855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1578564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157855bd0 '__int128'
|-TypedefDecl 0x157856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157855bf0 'unsigned __int128'
|-TypedefDecl 0x16000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x16000bc00 'struct __NSConstantString_tag'
|   `-Record 0x157856580 '__NSConstantString_tag'
|-TypedefDecl 0x16000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157855d90 '__SVInt8_t'
|-TypedefDecl 0x16000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157855db0 '__SVInt16_t'
|-TypedefDecl 0x16000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157855dd0 '__SVInt32_t'
|-TypedefDecl 0x16000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157855df0 '__SVInt64_t'
|-TypedefDecl 0x16000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157855e10 '__SVUint8_t'
|-TypedefDecl 0x16000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157855e30 '__SVUint16_t'
|-TypedefDecl 0x16000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157855e50 '__SVUint32_t'
|-TypedefDecl 0x16000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157855e70 '__SVUint64_t'
|-TypedefDecl 0x16000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157855e90 '__SVFloat16_t'
|-TypedefDecl 0x16000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157855eb0 '__SVFloat32_t'
|-TypedefDecl 0x16000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157855ed0 '__SVFloat64_t'
|-TypedefDecl 0x16000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x16000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x16000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x16000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x16000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x16000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x16000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x16000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x16000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x16000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x16000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x16000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x16000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x16000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157856090 '__clang_svint8x3_t'
|-TypedefDecl 0x16000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1578560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x16000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1578560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x16000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1578560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x16000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x16000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x16000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x16000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x16000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x16000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1578561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x16000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1578561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x16000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1578561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x16000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157856210 '__clang_svint8x4_t'
|-TypedefDecl 0x16000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157856230 '__clang_svint16x4_t'
|-TypedefDecl 0x16000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157856250 '__clang_svint32x4_t'
|-TypedefDecl 0x16000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157856270 '__clang_svint64x4_t'
|-TypedefDecl 0x16000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x16000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1578562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x16000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1578562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x16000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1578562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x16000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x16000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x16000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x16000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x16000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157856390 '__SVBool_t'
|-TypedefDecl 0x16000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1578563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x16000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1578563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x16000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1578563f0 '__SVCount_t'
|-TypedefDecl 0x16000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x16000dbb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-TypedefDecl 0x16000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x16000dbb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
`-FunctionDecl 0x160027678 <dataset_diviso_filec/func752_vuln.c:1:1, line:26:1> line:1:1 invalid ExprResolveLhs 'int (struct xkb_context *, const int *, const char **, const char **, int **)'
  |-ParmVarDecl 0x16000e248 <col:16, col:36> col:36 used ctx 'struct xkb_context *'
  |-ParmVarDecl 0x16000e2e0 <col:41, col:56> col:56 invalid expr 'const int *'
  |-ParmVarDecl 0x16000e398 <line:2:16, col:29> col:29 used elem_rtrn 'const char **'
  |-ParmVarDecl 0x160027418 <col:40, col:53> col:53 used field_rtrn 'const char **'
  |-ParmVarDecl 0x160027500 <line:3:16, col:26> col:26 invalid index_rtrn 'int **'
  `-CompoundStmt 0x16002a0b0 <line:4:1, line:26:1>
    |-SwitchStmt 0x160027810 <line:5:5, line:23:5>
    | |-ImplicitCastExpr 0x1600277f8 <line:5:13, col:24> '<dependent type>' contains-errors <LValueToRValue>
    | | `-CXXDependentScopeMemberExpr 0x1600277b0 <col:13, col:24> '<dependent type>' contains-errors lvalue .op
    | |   `-CXXDependentScopeMemberExpr 0x160027768 <col:13, col:19> '<dependent type>' contains-errors lvalue ->expr
    | |     `-RecoveryExpr 0x160027748 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x160029db8 <col:28, line:23:5>
    |   |-BinaryOperator 0x160027958 <line:7:9, col:22> 'const char *' contains-errors '='
    |   | |-UnaryOperator 0x160027920 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160027908 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160027850 <col:10> 'const char **' lvalue ParmVar 0x16000e398 'elem_rtrn' 'const char **'
    |   | `-RecoveryExpr 0x160027938 <col:22> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160027c40 <line:8:9, col:59> 'const char *' contains-errors '='
    |   | |-UnaryOperator 0x1600279b0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160027998 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160027978 <col:10> 'const char **' lvalue ParmVar 0x160027418 'field_rtrn' 'const char **'
    |   | `-CallExpr 0x160027c10 <col:23, col:59> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x160027b20 <col:23> 'int ()' Function 0x160027a68 'xkb_atom_text' 'int ()'
    |   |   |-DeclRefExpr 0x160027b40 <col:37> 'struct xkb_context *' lvalue ParmVar 0x16000e248 'ctx' 'struct xkb_context *'
    |   |   `-CXXDependentScopeMemberExpr 0x160027bc8 <col:42, col:54> '<dependent type>' contains-errors lvalue .ident
    |   |     `-CXXDependentScopeMemberExpr 0x160027b80 <col:42, col:48> '<dependent type>' contains-errors lvalue ->ident
    |   |       `-RecoveryExpr 0x160027b60 <col:42> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160027d68 <line:9:9, col:23> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x160027d30 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160027d18 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x160027c60 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x160027d48 <col:23> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160027fc8 <line:12:9, col:64> 'const char *' contains-errors '='
    |   | |-UnaryOperator 0x160027e90 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160027e78 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160027e58 <col:10> 'const char **' lvalue ParmVar 0x16000e398 'elem_rtrn' 'const char **'
    |   | `-CallExpr 0x160027f98 <col:22, col:64> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x160027ea8 <col:22> 'int ()' Function 0x160027a68 'xkb_atom_text' 'int ()'
    |   |   |-DeclRefExpr 0x160027ec8 <col:36> 'struct xkb_context *' lvalue ParmVar 0x16000e248 'ctx' 'struct xkb_context *'
    |   |   `-CXXDependentScopeMemberExpr 0x160027f50 <col:41, col:57> '<dependent type>' contains-errors lvalue .element
    |   |     `-CXXDependentScopeMemberExpr 0x160027f08 <col:41, col:47> '<dependent type>' contains-errors lvalue ->field_ref
    |   |       `-RecoveryExpr 0x160027ee8 <col:41> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160028158 <line:13:9, col:63> 'const char *' contains-errors '='
    |   | |-UnaryOperator 0x160028020 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160028008 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160027fe8 <col:10> 'const char **' lvalue ParmVar 0x160027418 'field_rtrn' 'const char **'
    |   | `-CallExpr 0x160028128 <col:23, col:63> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x160028038 <col:23> 'int ()' Function 0x160027a68 'xkb_atom_text' 'int ()'
    |   |   |-DeclRefExpr 0x160028058 <col:37> 'struct xkb_context *' lvalue ParmVar 0x16000e248 'ctx' 'struct xkb_context *'
    |   |   `-CXXDependentScopeMemberExpr 0x1600280e0 <col:42, col:58> '<dependent type>' contains-errors lvalue .field
    |   |     `-CXXDependentScopeMemberExpr 0x160028098 <col:42, col:48> '<dependent type>' contains-errors lvalue ->field_ref
    |   |       `-RecoveryExpr 0x160028078 <col:42> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160028280 <line:14:9, col:23> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x160028248 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160028230 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x160028178 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x160028260 <col:23> '<dependent type>' contains-errors lvalue
    |   |-ReturnStmt 0x1600282d8 <line:15:9, col:16>
    |   | `-RecoveryExpr 0x1600282b8 <col:16> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160029a78 <line:17:9, col:64> 'const char *' contains-errors '='
    |   | |-UnaryOperator 0x160028338 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160028320 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160028300 <col:10> 'const char **' lvalue ParmVar 0x16000e398 'elem_rtrn' 'const char **'
    |   | `-CallExpr 0x160029a48 <col:22, col:64> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x160028350 <col:22> 'int ()' Function 0x160027a68 'xkb_atom_text' 'int ()'
    |   |   |-DeclRefExpr 0x160028370 <col:36> 'struct xkb_context *' lvalue ParmVar 0x16000e248 'ctx' 'struct xkb_context *'
    |   |   `-CXXDependentScopeMemberExpr 0x160029a00 <col:41, col:57> '<dependent type>' contains-errors lvalue .element
    |   |     `-CXXDependentScopeMemberExpr 0x1600283b0 <col:41, col:47> '<dependent type>' contains-errors lvalue ->array_ref
    |   |       `-RecoveryExpr 0x160028390 <col:41> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160029c08 <line:18:9, col:63> 'const char *' contains-errors '='
    |   | |-UnaryOperator 0x160029ad0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160029ab8 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160029a98 <col:10> 'const char **' lvalue ParmVar 0x160027418 'field_rtrn' 'const char **'
    |   | `-CallExpr 0x160029bd8 <col:23, col:63> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x160029ae8 <col:23> 'int ()' Function 0x160027a68 'xkb_atom_text' 'int ()'
    |   |   |-DeclRefExpr 0x160029b08 <col:37> 'struct xkb_context *' lvalue ParmVar 0x16000e248 'ctx' 'struct xkb_context *'
    |   |   `-CXXDependentScopeMemberExpr 0x160029b90 <col:42, col:58> '<dependent type>' contains-errors lvalue .field
    |   |     `-CXXDependentScopeMemberExpr 0x160029b48 <col:42, col:48> '<dependent type>' contains-errors lvalue ->array_ref
    |   |       `-RecoveryExpr 0x160029b28 <col:42> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160029d28 <line:19:9, col:39> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x160029c60 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160029c48 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x160029c28 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x160029ce0 <col:23, col:39> '<dependent type>' contains-errors lvalue .entry
    |   |   `-CXXDependentScopeMemberExpr 0x160029c98 <col:23, col:29> '<dependent type>' contains-errors lvalue ->array_ref
    |   |     `-RecoveryExpr 0x160029c78 <col:23> '<dependent type>' contains-errors lvalue
    |   |-ReturnStmt 0x160029d80 <line:20:9, col:16>
    |   | `-RecoveryExpr 0x160029d60 <col:16> '<dependent type>' contains-errors lvalue
    |   `-DefaultStmt 0x160029d98 <line:21:5, line:22:9>
    |     `-BreakStmt 0x160029d90 <col:9>
    `-CallExpr 0x16002a060 <line:24:5, col:39> '<dependent type>' contains-errors
      |-DeclRefExpr 0x160029f08 <col:5> 'int ()' Function 0x160029e50 'log_wsgo' 'int ()'
      |-DeclRefExpr 0x160029f28 <col:14> 'struct xkb_context *' lvalue ParmVar 0x16000e248 'ctx' 'struct xkb_context *'
      |-StringLiteral 0x160029f90 <col:19> 'char[4]' lvalue "STR"
      `-CXXDependentScopeMemberExpr 0x16002a018 <col:26, col:37> '<dependent type>' contains-errors lvalue .op
        `-CXXDependentScopeMemberExpr 0x160029fd0 <col:26, col:32> '<dependent type>' contains-errors lvalue ->expr
          `-RecoveryExpr 0x160029fb0 <col:26> '<dependent type>' contains-errors lvalue
