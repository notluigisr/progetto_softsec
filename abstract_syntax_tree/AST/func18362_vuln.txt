TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e00dbb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e00dbb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
`-FunctionDecl 0x12e027578 <dataset_diviso_filec/func18362_vuln.c:1:1, line:21:1> line:1:11 invalid decode 'int (struct state *, struct huffman *)'
  |-ParmVarDecl 0x12e00e268 <col:18, col:32> col:32 used s 'struct state *'
  |-ParmVarDecl 0x12e027458 <col:35, col:51> col:51 used h 'struct huffman *'
  `-CompoundStmt 0x12e029280 <line:2:1, line:21:1>
    |-DeclStmt 0x12e0276b0 <line:3:5, col:12>
    | `-VarDecl 0x12e027648 <col:5, col:9> col:9 used len 'int'
    |-DeclStmt 0x12e027748 <line:4:5, col:13>
    | `-VarDecl 0x12e0276e0 <col:5, col:9> col:9 used code 'int'
    |-DeclStmt 0x12e0277e0 <line:5:5, col:14>
    | `-VarDecl 0x12e027778 <col:5, col:9> col:9 used first 'int'
    |-DeclStmt 0x12e027878 <line:6:5, col:14>
    | `-VarDecl 0x12e027810 <col:5, col:9> col:9 used count 'int'
    |-DeclStmt 0x12e027910 <line:7:5, col:14>
    | `-VarDecl 0x12e0278a8 <col:5, col:9> col:9 used index 'int'
    |-BinaryOperator 0x12e0279e8 <line:9:5, col:28> 'int' '='
    | |-DeclRefExpr 0x12e027928 <col:5> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    | `-BinaryOperator 0x12e0279c8 <col:12, col:28> 'int' '='
    |   |-DeclRefExpr 0x12e027948 <col:12> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   `-BinaryOperator 0x12e0279a8 <col:20, col:28> 'int' '='
    |     |-DeclRefExpr 0x12e027968 <col:20> 'int' lvalue Var 0x12e0278a8 'index' 'int'
    |     `-IntegerLiteral 0x12e027988 <col:28> 'int' 0
    |-ForStmt 0x12e029200 <line:10:5, line:19:5>
    | |-BinaryOperator 0x12e027a48 <line:10:10, col:16> 'int' '='
    | | |-DeclRefExpr 0x12e027a08 <col:10> 'int' lvalue Var 0x12e027648 'len' 'int'
    | | `-IntegerLiteral 0x12e027a28 <col:16> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12e027ae0 <col:19, col:26> 'int' contains-errors '<='
    | | |-DeclRefExpr 0x12e027a68 <col:19> 'int' lvalue Var 0x12e027648 'len' 'int'
    | | `-RecoveryExpr 0x12e027ac0 <col:26> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x12e027b20 <col:35, col:38> 'int' postfix '++'
    | | `-DeclRefExpr 0x12e027b00 <col:35> 'int' lvalue Var 0x12e027648 'len' 'int'
    | `-CompoundStmt 0x12e0283b8 <col:42, line:19:5>
    |   |-CompoundAssignOperator 0x12e027da0 <line:11:9, col:26> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x12e027b38 <col:9> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    |   | `-CallExpr 0x12e027d58 <col:17, col:26> 'int'
    |   |   |-ImplicitCastExpr 0x12e027d40 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12e027cb0 <col:17> 'int ()' Function 0x12e027bf8 'bits' 'int ()'
    |   |   |-ImplicitCastExpr 0x12e027d88 <col:22> 'struct state *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x12e027cd0 <col:22> 'struct state *' lvalue ParmVar 0x12e00e268 's' 'struct state *'
    |   |   `-IntegerLiteral 0x12e027cf0 <col:25> 'int' 1
    |   |-BinaryOperator 0x12e027ec0 <line:12:9, col:29> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12e027dd0 <col:9> 'int' lvalue Var 0x12e027810 'count' 'int'
    |   | `-ArraySubscriptExpr 0x12e027ea0 <col:17, col:29> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12e027e70 <col:17, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x12e027e28 <col:17, col:20> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x12e027df0 <col:17> 'struct huffman *' lvalue ParmVar 0x12e027458 'h' 'struct huffman *'
    |   |   `-ImplicitCastExpr 0x12e027e88 <col:26> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12e027e50 <col:26> 'int' lvalue Var 0x12e027648 'len' 'int'
    |   |-IfStmt 0x12e028178 <line:13:9, line:14:52>
    |   | |-BinaryOperator 0x12e027fa8 <line:13:13, col:28> 'int' '<'
    |   | | |-ImplicitCastExpr 0x12e027f90 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12e027ee0 <col:13> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    |   | | `-BinaryOperator 0x12e027f70 <col:20, col:28> 'int' '+'
    |   | |   |-ImplicitCastExpr 0x12e027f40 <col:20> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x12e027f00 <col:20> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   | |   `-ImplicitCastExpr 0x12e027f58 <col:28> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x12e027f20 <col:28> 'int' lvalue Var 0x12e027810 'count' 'int'
    |   | `-ReturnStmt 0x12e028168 <line:14:13, col:52>
    |   |   `-ArraySubscriptExpr 0x12e028148 <col:20, col:52> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x12e028130 <col:20, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x12e028000 <col:20, col:23> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x12e027fc8 <col:20> 'struct huffman *' lvalue ParmVar 0x12e027458 'h' 'struct huffman *'
    |   |     `-BinaryOperator 0x12e028110 <col:30, col:51> 'int' '+'
    |   |       |-ImplicitCastExpr 0x12e0280f8 <col:30> 'int' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x12e028028 <col:30> 'int' lvalue Var 0x12e0278a8 'index' 'int'
    |   |       `-ParenExpr 0x12e0280d8 <col:38, col:51> 'int'
    |   |         `-BinaryOperator 0x12e0280b8 <col:39, col:46> 'int' '-'
    |   |           |-ImplicitCastExpr 0x12e028088 <col:39> 'int' <LValueToRValue>
    |   |           | `-DeclRefExpr 0x12e028048 <col:39> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    |   |           `-ImplicitCastExpr 0x12e0280a0 <col:46> 'int' <LValueToRValue>
    |   |             `-DeclRefExpr 0x12e028068 <col:46> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   |-CompoundAssignOperator 0x12e0281f0 <line:15:9, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x12e028198 <col:9> 'int' lvalue Var 0x12e0278a8 'index' 'int'
    |   | `-ImplicitCastExpr 0x12e0281d8 <col:18> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e0281b8 <col:18> 'int' lvalue Var 0x12e027810 'count' 'int'
    |   |-CompoundAssignOperator 0x12e028278 <line:16:9, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x12e028220 <col:9> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   | `-ImplicitCastExpr 0x12e028260 <col:18> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e028240 <col:18> 'int' lvalue Var 0x12e027810 'count' 'int'
    |   |-CompoundAssignOperator 0x12e028300 <line:17:9, col:19> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x12e0282a8 <col:9> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   | `-IntegerLiteral 0x12e0282c8 <col:19> 'int' 1
    |   `-CompoundAssignOperator 0x12e028388 <line:18:9, col:18> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x12e028330 <col:9> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    |     `-IntegerLiteral 0x12e028350 <col:18> 'int' 1
    `-ReturnStmt 0x12e029270 <line:20:5, col:13>
      `-UnaryOperator 0x12e029258 <col:12, col:13> 'int' prefix '-'
        `-IntegerLiteral 0x12e029238 <col:13> 'int' 9
