TranslationUnitDecl 0x152855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1528564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152855bd0 '__int128'
|-TypedefDecl 0x152856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152855bf0 'unsigned __int128'
|-TypedefDecl 0x152926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x152926000 'struct __NSConstantString_tag'
|   `-Record 0x152856580 '__NSConstantString_tag'
|-TypedefDecl 0x152926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152855d90 '__SVInt8_t'
|-TypedefDecl 0x152926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152855db0 '__SVInt16_t'
|-TypedefDecl 0x152926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152855dd0 '__SVInt32_t'
|-TypedefDecl 0x1529263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152855df0 '__SVInt64_t'
|-TypedefDecl 0x152926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152855e10 '__SVUint8_t'
|-TypedefDecl 0x1529264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152855e30 '__SVUint16_t'
|-TypedefDecl 0x152926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152855e50 '__SVUint32_t'
|-TypedefDecl 0x152926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152855e70 '__SVUint64_t'
|-TypedefDecl 0x1529265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152855e90 '__SVFloat16_t'
|-TypedefDecl 0x152926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1529266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152855ed0 '__SVFloat64_t'
|-TypedefDecl 0x152926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x152926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1529267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x152926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1529268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x152926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x152926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1529269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x152926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x152926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x152926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x152926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x152926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x152926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152856090 '__clang_svint8x3_t'
|-TypedefDecl 0x152926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1528560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x152926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1528560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x152926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1528560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x152926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x152926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x152926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x152926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x152926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x152927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1528561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x152927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1528561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1529278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1528561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x152927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1529279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152856230 '__clang_svint16x4_t'
|-TypedefDecl 0x152927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152856250 '__clang_svint32x4_t'
|-TypedefDecl 0x152927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152856270 '__clang_svint64x4_t'
|-TypedefDecl 0x152927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x152927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1528562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x152927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1528562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x152927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1528562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x152927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x152927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x152927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x152927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x152927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152856390 '__SVBool_t'
|-TypedefDecl 0x152927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1528563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x152927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1528563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x152927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1528563f0 '__SVCount_t'
|-TypedefDecl 0x152927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x152927fb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
|-TypedefDecl 0x152928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x152927fb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
|-FunctionDecl 0x152928280 <dataset_diviso_filec/func21815_nonvuln.c:1:1, line:21:1> line:1:20 invalid quote_string 'void (int *, int)' static inline
| |-ParmVarDecl 0x152928128 <col:33, col:39> col:39 invalid zv 'int *'
| |-ParmVarDecl 0x1529281a8 <col:43, col:53> col:53 invalid force 'int'
| `-CompoundStmt 0x152947468 <line:2:1, line:21:1>
|   |-DeclStmt 0x152928578 <line:3:2, col:26>
|   | `-VarDecl 0x152928350 <col:2, col:25> col:6 used len 'int' cinit
|   |   `-CallExpr 0x152928550 <col:12, col:25> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x152928510 <col:12> 'int ()' Function 0x152928458 'Z_STRLEN_P' 'int ()'
|   |     `-RecoveryExpr 0x152928530 <col:23> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x152947448 <line:8:2, line:20:2>
|     |-BinaryOperator 0x152942350 <line:8:6, col:69> 'int' contains-errors '||'
|     | |-BinaryOperator 0x152941c00 <col:6, col:35> 'int' contains-errors '||'
|     | | |-RecoveryExpr 0x152941b38 <col:6> '<dependent type>' contains-errors lvalue
|     | | `-BinaryOperator 0x152941be0 <col:15, col:35> 'int' contains-errors '!='
|     | |   |-DeclRefExpr 0x152941b58 <col:15> 'int' contains-errors lvalue Var 0x152928350 'len' 'int'
|     | |   `-CallExpr 0x152941bb8 <col:22, col:35> '<dependent type>' contains-errors
|     | |     |-DeclRefExpr 0x152941b78 <col:22> 'int ()' Function 0x152928458 'Z_STRLEN_P' 'int ()'
|     | |     `-RecoveryExpr 0x152941b98 <col:33> '<dependent type>' contains-errors lvalue
|     | `-CallExpr 0x152942320 <col:40, col:69> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x152942260 <col:40> 'char *(const char *, const char *)' Function 0x152942080 'strpbrk' 'char *(const char *, const char *)'
|     |   |-CallExpr 0x1529422c0 <col:48, col:61> '<dependent type>' contains-errors
|     |   | |-DeclRefExpr 0x152942280 <col:48> 'int ()' Function 0x1529285b8 'Z_STRVAL_P' 'int ()'
|     |   | `-RecoveryExpr 0x1529422a0 <col:59> '<dependent type>' contains-errors lvalue
|     |   `-StringLiteral 0x1529422e8 <col:64> 'char[4]' lvalue "STR"
|     `-CompoundStmt 0x1529473f8 <col:72, line:20:2>
|       |-DeclStmt 0x152942498 <line:10:3, col:31>
|       | `-VarDecl 0x152942388 <col:3, col:30> col:7 used len 'int' cinit
|       |   `-BinaryOperator 0x152942478 <col:13, col:30> '<dependent type>' contains-errors '+'
|       |     |-CallExpr 0x152942430 <col:13, col:26> '<dependent type>' contains-errors
|       |     | |-DeclRefExpr 0x1529423f0 <col:13> 'int ()' Function 0x152928458 'Z_STRLEN_P' 'int ()'
|       |     | `-RecoveryExpr 0x152942410 <col:24> '<dependent type>' contains-errors lvalue
|       |     `-IntegerLiteral 0x152942458 <col:30> 'int' 2
|       |-DeclStmt 0x152942700 <line:11:3, col:31>
|       | `-VarDecl 0x1529424c8 <col:3, col:30> col:9 used str 'char *' cinit
|       |   `-ImplicitCastExpr 0x1529426e8 <col:15, col:30> 'char *' contains-errors <IntegralToPointer>
|       |     `-CallExpr 0x1529426c0 <col:15, col:30> 'int' contains-errors
|       |       |-ImplicitCastExpr 0x1529426a8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x152942610 <col:15> 'int ()' Function 0x152942558 'emalloc' 'int ()'
|       |       `-BinaryOperator 0x152942688 <col:23, col:29> 'int' contains-errors '+'
|       |         |-ImplicitCastExpr 0x152942670 <col:23> 'int' contains-errors <LValueToRValue>
|       |         | `-DeclRefExpr 0x152942630 <col:23> 'int' contains-errors lvalue Var 0x152942388 'len' 'int'
|       |         `-IntegerLiteral 0x152942650 <col:29> 'int' 1
|       |-BinaryOperator 0x1529427c0 <line:13:3, col:12> 'char' contains-errors '='
|       | |-ArraySubscriptExpr 0x152942770 <col:3, col:8> 'char' contains-errors lvalue
|       | | |-ImplicitCastExpr 0x152942758 <col:3> 'char *' contains-errors <LValueToRValue>
|       | | | `-DeclRefExpr 0x152942718 <col:3> 'char *' contains-errors lvalue Var 0x1529424c8 'str' 'char *'
|       | | `-IntegerLiteral 0x152942738 <col:7> 'int' 0
|       | `-ImplicitCastExpr 0x1529427a8 <col:12> 'char' <IntegralCast>
|       |   `-CharacterLiteral 0x152942790 <col:12> 'int' 34
|       |-CallExpr 0x152946e48 <line:14:3, col:49> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x152946cc8 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x152946a78 'memcpy' 'void *(void *, const void *, unsigned long)'
|       | |-UnaryOperator 0x152946d60 <col:10, col:16> 'char *' contains-errors prefix '&' cannot overflow
|       | | `-ArraySubscriptExpr 0x152946d40 <col:11, col:16> 'char' contains-errors lvalue
|       | |   |-ImplicitCastExpr 0x152946d28 <col:11> 'char *' contains-errors <LValueToRValue>
|       | |   | `-DeclRefExpr 0x152946ce8 <col:11> 'char *' contains-errors lvalue Var 0x1529424c8 'str' 'char *'
|       | |   `-IntegerLiteral 0x152946d08 <col:15> 'int' 1
|       | |-CallExpr 0x152946db8 <col:19, col:32> '<dependent type>' contains-errors
|       | | |-DeclRefExpr 0x152946d78 <col:19> 'int ()' Function 0x1529285b8 'Z_STRVAL_P' 'int ()'
|       | | `-RecoveryExpr 0x152946d98 <col:30> '<dependent type>' contains-errors lvalue
|       | `-CallExpr 0x152946e20 <col:35, col:48> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x152946de0 <col:35> 'int ()' Function 0x152928458 'Z_STRLEN_P' 'int ()'
|       |   `-RecoveryExpr 0x152946e00 <col:46> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x152946f80 <line:15:3, col:16> 'char' contains-errors '='
|       | |-ArraySubscriptExpr 0x152946f30 <col:3, col:12> 'char' contains-errors lvalue
|       | | |-ImplicitCastExpr 0x152946f18 <col:3> 'char *' contains-errors <LValueToRValue>
|       | | | `-DeclRefExpr 0x152946e80 <col:3> 'char *' contains-errors lvalue Var 0x1529424c8 'str' 'char *'
|       | | `-BinaryOperator 0x152946ef8 <col:7, col:11> 'int' contains-errors '-'
|       | |   |-ImplicitCastExpr 0x152946ee0 <col:7> 'int' contains-errors <LValueToRValue>
|       | |   | `-DeclRefExpr 0x152946ea0 <col:7> 'int' contains-errors lvalue Var 0x152942388 'len' 'int'
|       | |   `-IntegerLiteral 0x152946ec0 <col:11> 'int' 1
|       | `-ImplicitCastExpr 0x152946f68 <col:16> 'char' <IntegralCast>
|       |   `-CharacterLiteral 0x152946f50 <col:16> 'int' 34
|       |-BinaryOperator 0x152947060 <line:16:3, col:14> 'char' contains-errors '='
|       | |-ArraySubscriptExpr 0x152947010 <col:3, col:10> 'char' contains-errors lvalue
|       | | |-ImplicitCastExpr 0x152946fe0 <col:3> 'char *' contains-errors <LValueToRValue>
|       | | | `-DeclRefExpr 0x152946fa0 <col:3> 'char *' contains-errors lvalue Var 0x1529424c8 'str' 'char *'
|       | | `-ImplicitCastExpr 0x152946ff8 <col:7> 'int' contains-errors <LValueToRValue>
|       | |   `-DeclRefExpr 0x152946fc0 <col:7> 'int' contains-errors lvalue Var 0x152942388 'len' 'int'
|       | `-ImplicitCastExpr 0x152947048 <col:14> 'char' <IntegralCast>
|       |   `-CharacterLiteral 0x152947030 <col:14> 'int' 0
|       |-CallExpr 0x152947210 <line:18:3, col:17> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x152947160 <col:3> 'int ()' Function 0x1529470a8 'zval_dtor' 'int ()'
|       | `-UnaryOperator 0x1529471f8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |   `-RecoveryExpr 0x1529471d8 <col:14> '<dependent type>' contains-errors lvalue
|       `-CallExpr 0x1529473b8 <line:19:3, col:31> '<dependent type>' contains-errors
|         |-DeclRefExpr 0x152947318 <col:3> 'int ()' Function 0x152947260 'ZVAL_STRINGL' 'int ()'
|         |-RecoveryExpr 0x152947338 <col:16> '<dependent type>' contains-errors lvalue
|         |-DeclRefExpr 0x152947358 <col:20> 'char *' contains-errors lvalue Var 0x1529424c8 'str' 'char *'
|         |-DeclRefExpr 0x152947378 <col:25> 'int' contains-errors lvalue Var 0x152942388 'len' 'int'
|         `-IntegerLiteral 0x152947398 <col:30> 'int' 0
|-FunctionDecl 0x152942080 <line:8:40> col:40 implicit used strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x152942180 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1529421e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x152942128 <<invalid sloc>> Implicit 895
`-FunctionDecl 0x152946a78 <line:14:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x152946b78 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x152946be0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x152946c48 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x152946b20 <<invalid sloc>> Implicit 882
