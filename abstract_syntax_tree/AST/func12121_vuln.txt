TranslationUnitDecl 0x135055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1350564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135055bd0 '__int128'
|-TypedefDecl 0x135056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135055bf0 'unsigned __int128'
|-TypedefDecl 0x135126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135126a00 'struct __NSConstantString_tag'
|   `-Record 0x135056580 '__NSConstantString_tag'
|-TypedefDecl 0x135126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135055d90 '__SVInt8_t'
|-TypedefDecl 0x135126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135055db0 '__SVInt16_t'
|-TypedefDecl 0x135126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135055dd0 '__SVInt32_t'
|-TypedefDecl 0x135126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135055df0 '__SVInt64_t'
|-TypedefDecl 0x135126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135055e10 '__SVUint8_t'
|-TypedefDecl 0x135126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135055e30 '__SVUint16_t'
|-TypedefDecl 0x135126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135055e50 '__SVUint32_t'
|-TypedefDecl 0x135126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135055e70 '__SVUint64_t'
|-TypedefDecl 0x135126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135055e90 '__SVFloat16_t'
|-TypedefDecl 0x135127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1351270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135055ed0 '__SVFloat64_t'
|-TypedefDecl 0x135127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1351271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1351272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1351273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1351274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1351275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1351276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1350560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1350560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1350560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1351277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1351278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1350561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1350561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1351282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1350561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1351283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135056230 '__clang_svint16x4_t'
|-TypedefDecl 0x135128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135056250 '__clang_svint32x4_t'
|-TypedefDecl 0x135128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1351284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1350562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1351285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1350562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1350562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1351286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1351287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135056390 '__SVBool_t'
|-TypedefDecl 0x135128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1350563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1351288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1350563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1350563f0 '__SVCount_t'
|-TypedefDecl 0x1351289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1351289b0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
|-TypedefDecl 0x135128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1351289b0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
`-FunctionDecl 0x135128d58 <dataset_diviso_filec/func12121_vuln.c:1:1, line:90:1> line:1:13 invalid php_var_export_ex 'int (int **, int, int *)'
  |-ParmVarDecl 0x135128b60 <col:31, col:38> col:38 invalid struc 'int **'
  |-ParmVarDecl 0x135128be0 <col:45, col:49> col:49 used level 'int'
  |-ParmVarDecl 0x135128c60 <col:56, col:67> col:67 invalid buf 'int *'
  `-CompoundStmt 0x135146bb0 <line:2:1, line:90:1>
    |-DeclStmt 0x135128f48 <line:4:2, col:26>
    | |-VarDecl 0x135128e48 <col:2, col:8> col:8 used tmp_str 'char *'
    | `-VarDecl 0x135128ec8 <col:2, col:18> col:18 used tmp_str2 'char *'
    |-DeclStmt 0x135129078 <line:5:2, col:23>
    | |-VarDecl 0x135128f78 <col:2, col:6> col:6 used tmp_len 'int'
    | `-VarDecl 0x135128ff8 <col:2, col:15> col:15 used tmp_len2 'int'
    |-DeclStmt 0x135129110 <line:6:2, col:24>
    | `-VarDecl 0x1351290a8 <col:2, col:14> col:14 used class_name 'const char *'
    `-SwitchStmt 0x135142320 <line:9:2, line:89:2>
      |-CallExpr 0x1351422f8 <line:9:10, col:25> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x1351422b8 <col:10> 'int ()' Function 0x135142200 'Z_TYPE_PP' 'int ()'
      | `-RecoveryExpr 0x1351422d8 <col:20> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x135146aa0 <col:28, line:89:2>
        |-IfStmt 0x135142770 <line:11:3, line:15:3> has_else
        | |-CallExpr 0x135142480 <line:11:7, col:22> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x135142440 <col:7> 'int ()' Function 0x135142388 'Z_LVAL_PP' 'int ()'
        | | `-RecoveryExpr 0x135142460 <col:17> '<dependent type>' contains-errors lvalue
        | |-CompoundStmt 0x135142688 <col:25, line:13:3>
        | | `-CallExpr 0x135142650 <line:12:4, col:35> '<dependent type>' contains-errors
        | |   |-DeclRefExpr 0x135142588 <col:4> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        | |   |-RecoveryExpr 0x1351425a8 <col:22> '<dependent type>' contains-errors lvalue
        | |   |-StringLiteral 0x135142610 <col:27> 'char[4]' lvalue "STR"
        | |   `-IntegerLiteral 0x135142630 <col:34> 'int' 4
        | `-CompoundStmt 0x135142758 <line:13:10, line:15:3>
        |   `-CallExpr 0x135142720 <line:14:4, col:35> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x1351426a0 <col:4> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        |     |-RecoveryExpr 0x1351426c0 <col:22> '<dependent type>' contains-errors lvalue
        |     |-StringLiteral 0x1351426e0 <col:27> 'char[4]' lvalue "STR"
        |     `-IntegerLiteral 0x135142700 <col:34> 'int' 5
        |-BreakStmt 0x1351427a0 <line:16:3>
        |-CallExpr 0x135142840 <line:18:3, col:34> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x1351427c0 <col:3> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        | |-RecoveryExpr 0x1351427e0 <col:21> '<dependent type>' contains-errors lvalue
        | |-StringLiteral 0x135142800 <col:26> 'char[4]' lvalue "STR"
        | `-IntegerLiteral 0x135142820 <col:33> 'int' 4
        |-BreakStmt 0x135142878 <line:19:3>
        |-CallExpr 0x135142a20 <line:21:3, col:46> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135142978 <col:3> 'int ()' Function 0x1351428c0 'smart_str_append_long' 'int ()'
        | |-RecoveryExpr 0x135142998 <col:25> '<dependent type>' contains-errors lvalue
        | `-CallExpr 0x1351429f8 <col:30, col:45> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x1351429b8 <col:30> 'int ()' Function 0x135142388 'Z_LVAL_PP' 'int ()'
        |   `-RecoveryExpr 0x1351429d8 <col:40> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x135142a50 <line:22:3>
        |-BinaryOperator 0x135142fb8 <line:24:3, col:82> 'int' contains-errors '='
        | |-DeclRefExpr 0x135142a70 <col:3> 'int' lvalue Var 0x135128f78 'tmp_len' 'int'
        | `-CallExpr 0x135142f70 <col:13, col:82> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x135142b70 <col:13> 'int ()' Function 0x135142ab8 'spprintf' 'int ()'
        |   |-UnaryOperator 0x135142be0 <col:22, col:23> 'char **' prefix '&' cannot overflow
        |   | `-DeclRefExpr 0x135142b90 <col:23> 'char *' lvalue Var 0x135128e48 'tmp_str' 'char *'
        |   |-IntegerLiteral 0x135142bf8 <col:32> 'int' 0
        |   |-StringLiteral 0x135142c18 <col:34> 'char[4]' lvalue "STR"
        |   |-CallExpr 0x135142f48 <col:41, col:63> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x135142d18 <col:41> 'int ()' Function 0x135142c60 'PG' 'int ()'
        |   | `-RecoveryExpr 0x135142f28 <col:44> '<dependent type>' contains-errors lvalue
        |   `-CallExpr 0x135142e98 <col:66, col:81> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x135142e58 <col:66> 'int ()' Function 0x135142da0 'Z_DVAL_PP' 'int ()'
        |     `-RecoveryExpr 0x135142e78 <col:76> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x135143058 <line:25:3, col:42> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135142fd8 <col:3> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        | |-RecoveryExpr 0x135142ff8 <col:21> '<dependent type>' contains-errors lvalue
        | |-DeclRefExpr 0x135143018 <col:26> 'char *' lvalue Var 0x135128e48 'tmp_str' 'char *'
        | `-DeclRefExpr 0x135143038 <col:35> 'int' lvalue Var 0x135128f78 'tmp_len' 'int'
        |-CallExpr 0x135143800 <line:26:3, col:16> 'int'
        | |-ImplicitCastExpr 0x1351431e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x135143170 <col:3> 'int ()' Function 0x1351430b8 'efree' 'int ()'
        | `-ImplicitCastExpr 0x135143828 <col:9> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x135143190 <col:9> 'char *' lvalue Var 0x135128e48 'tmp_str' 'char *'
        |-BreakStmt 0x135143840 <line:27:3>
        |-CallExpr 0x135143fc0 <line:32:3, col:30> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135143f68 <col:3> 'int ()' Function 0x135143eb0 'smart_str_appendc' 'int ()'
        | |-RecoveryExpr 0x135143f88 <col:21> '<dependent type>' contains-errors lvalue
        | `-CharacterLiteral 0x135143fa8 <col:26> 'int' 39
        |-CallExpr 0x135144070 <line:33:3, col:44> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135143ff0 <col:3> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        | |-RecoveryExpr 0x135144010 <col:21> '<dependent type>' contains-errors lvalue
        | |-DeclRefExpr 0x135144030 <col:26> 'char *' lvalue Var 0x135128ec8 'tmp_str2' 'char *'
        | `-DeclRefExpr 0x135144050 <col:36> 'int' lvalue Var 0x135128ff8 'tmp_len2' 'int'
        |-CallExpr 0x135144100 <line:34:3, col:30> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x1351440a8 <col:3> 'int ()' Function 0x135143eb0 'smart_str_appendc' 'int ()'
        | |-RecoveryExpr 0x1351440c8 <col:21> '<dependent type>' contains-errors lvalue
        | `-CharacterLiteral 0x1351440e8 <col:26> 'int' 39
        |-CallExpr 0x135144188 <line:36:3, col:17> 'int'
        | |-ImplicitCastExpr 0x135144170 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x135144130 <col:3> 'int ()' Function 0x1351430b8 'efree' 'int ()'
        | `-ImplicitCastExpr 0x1351441b0 <col:9> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x135144150 <col:9> 'char *' lvalue Var 0x135128ec8 'tmp_str2' 'char *'
        |-CallExpr 0x135144220 <line:37:3, col:16> 'int'
        | |-ImplicitCastExpr 0x135144208 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x1351441c8 <col:3> 'int ()' Function 0x1351430b8 'efree' 'int ()'
        | `-ImplicitCastExpr 0x135144248 <col:9> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x1351441e8 <col:9> 'char *' lvalue Var 0x135128e48 'tmp_str' 'char *'
        |-BreakStmt 0x135144260 <line:38:3>
        |-IfStmt 0x1351445f8 <line:41:3, line:45:3>
        | |-RecoveryExpr 0x1351443d0 <line:41:6, col:34> '_Bool' contains-errors
        | `-CompoundStmt 0x1351445d8 <col:36, line:45:3>
        |   |-CallExpr 0x135144470 <line:42:4, col:35> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x1351443f0 <col:4> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        |   | |-RecoveryExpr 0x135144410 <col:22> '<dependent type>' contains-errors lvalue
        |   | |-StringLiteral 0x135144430 <col:27> 'char[4]' lvalue "STR"
        |   | `-IntegerLiteral 0x135144450 <col:34> 'int' 4
        |   `-ReturnStmt 0x1351445c8 <line:44:4>
        |-IfStmt 0x135144908 <line:46:3, line:49:3>
        | |-BinaryOperator 0x135144670 <line:46:7, col:15> 'int' '>'
        | | |-ImplicitCastExpr 0x135144658 <col:7> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x135144618 <col:7> 'int' lvalue ParmVar 0x135128be0 'level' 'int'
        | | `-IntegerLiteral 0x135144638 <col:15> 'int' 1
        | `-CompoundStmt 0x1351448e8 <col:18, line:49:3>
        |   |-CallExpr 0x1351446e8 <line:47:4, col:31> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x135144690 <col:4> 'int ()' Function 0x135143eb0 'smart_str_appendc' 'int ()'
        |   | |-RecoveryExpr 0x1351446b0 <col:22> '<dependent type>' contains-errors lvalue
        |   | `-CharacterLiteral 0x1351446d0 <col:27> 'int' 10
        |   `-CallExpr 0x1351448b8 <line:48:4, col:39> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x135144800 <col:4> 'int ()' Function 0x135144740 'buffer_append_spaces' 'int ()'
        |     |-RecoveryExpr 0x135144820 <col:25> '<dependent type>' contains-errors lvalue
        |     `-BinaryOperator 0x135144898 <col:30, col:38> 'int' '-'
        |       |-ImplicitCastExpr 0x135144880 <col:30> 'int' <LValueToRValue>
        |       | `-DeclRefExpr 0x135144840 <col:30> 'int' lvalue ParmVar 0x135128be0 'level' 'int'
        |       `-IntegerLiteral 0x135144860 <col:38> 'int' 1
        |-CallExpr 0x1351449a8 <line:50:3, col:34> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135144928 <col:3> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        | |-RecoveryExpr 0x135144948 <col:21> '<dependent type>' contains-errors lvalue
        | |-StringLiteral 0x135144968 <col:26> 'char[4]' lvalue "STR"
        | `-IntegerLiteral 0x135144988 <col:33> 'int' 8
        |-IfStmt 0x135144cb8 <line:53:3, line:55:3>
        | |-BinaryOperator 0x135144b98 <line:53:7, col:15> 'int' '>'
        | | |-ImplicitCastExpr 0x135144b80 <col:7> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x135144b40 <col:7> 'int' lvalue ParmVar 0x135128be0 'level' 'int'
        | | `-IntegerLiteral 0x135144b60 <col:15> 'int' 1
        | `-CompoundStmt 0x135144ca0 <col:18, line:55:3>
        |   `-CallExpr 0x135144c70 <line:54:4, col:39> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x135144bb8 <col:4> 'int ()' Function 0x135144740 'buffer_append_spaces' 'int ()'
        |     |-RecoveryExpr 0x135144bd8 <col:25> '<dependent type>' contains-errors lvalue
        |     `-BinaryOperator 0x135144c50 <col:30, col:38> 'int' '-'
        |       |-ImplicitCastExpr 0x135144c38 <col:30> 'int' <LValueToRValue>
        |       | `-DeclRefExpr 0x135144bf8 <col:30> 'int' lvalue ParmVar 0x135128be0 'level' 'int'
        |       `-IntegerLiteral 0x135144c18 <col:38> 'int' 1
        |-CallExpr 0x135144d30 <line:56:3, col:29> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135144cd8 <col:3> 'int ()' Function 0x135143eb0 'smart_str_appendc' 'int ()'
        | |-RecoveryExpr 0x135144cf8 <col:21> '<dependent type>' contains-errors lvalue
        | `-CharacterLiteral 0x135144d18 <col:26> 'int' 41
        |-BreakStmt 0x135144d60 <line:58:3>
        |-IfStmt 0x135145018 <line:62:3, line:66:3>
        | |-RecoveryExpr 0x135144ed0 <line:62:6, col:34> '_Bool' contains-errors
        | `-CompoundStmt 0x135144ff8 <col:36, line:66:3>
        |   |-CallExpr 0x135144f70 <line:63:4, col:35> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x135144ef0 <col:4> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        |   | |-RecoveryExpr 0x135144f10 <col:22> '<dependent type>' contains-errors lvalue
        |   | |-StringLiteral 0x135144f30 <col:27> 'char[4]' lvalue "STR"
        |   | `-IntegerLiteral 0x135144f50 <col:34> 'int' 4
        |   `-ReturnStmt 0x135144fe8 <line:65:4>
        |-IfStmt 0x135145240 <line:67:3, line:70:3>
        | |-BinaryOperator 0x135145090 <line:67:7, col:15> 'int' '>'
        | | |-ImplicitCastExpr 0x135145078 <col:7> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x135145038 <col:7> 'int' lvalue ParmVar 0x135128be0 'level' 'int'
        | | `-IntegerLiteral 0x135145058 <col:15> 'int' 1
        | `-CompoundStmt 0x135145220 <col:18, line:70:3>
        |   |-CallExpr 0x135145108 <line:68:4, col:31> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x1351450b0 <col:4> 'int ()' Function 0x135143eb0 'smart_str_appendc' 'int ()'
        |   | |-RecoveryExpr 0x1351450d0 <col:22> '<dependent type>' contains-errors lvalue
        |   | `-CharacterLiteral 0x1351450f0 <col:27> 'int' 10
        |   `-CallExpr 0x1351451f0 <line:69:4, col:39> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x135145138 <col:4> 'int ()' Function 0x135144740 'buffer_append_spaces' 'int ()'
        |     |-RecoveryExpr 0x135145158 <col:25> '<dependent type>' contains-errors lvalue
        |     `-BinaryOperator 0x1351451d0 <col:30, col:38> 'int' '-'
        |       |-ImplicitCastExpr 0x1351451b8 <col:30> 'int' <LValueToRValue>
        |       | `-DeclRefExpr 0x135145178 <col:30> 'int' lvalue ParmVar 0x135128be0 'level' 'int'
        |       `-IntegerLiteral 0x135145198 <col:38> 'int' 1
        |-CallExpr 0x135145588 <line:74:3, col:35> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135145508 <col:3> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        | |-RecoveryExpr 0x135145528 <col:21> '<dependent type>' contains-errors lvalue
        | |-StringLiteral 0x135145548 <col:26> 'char[4]' lvalue "STR"
        | `-IntegerLiteral 0x135145568 <col:33> 'int' 21
        |-CallExpr 0x135145670 <line:76:3, col:26> 'int'
        | |-ImplicitCastExpr 0x135145658 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x1351455c0 <col:3> 'int ()' Function 0x1351430b8 'efree' 'int ()'
        | `-CStyleCastExpr 0x135145630 <col:9, col:16> 'char *' <NoOp>
        |   `-ImplicitCastExpr 0x135145618 <col:16> 'const char *' <LValueToRValue> part_of_explicit_cast
        |     `-DeclRefExpr 0x1351455e0 <col:16> 'const char *' lvalue Var 0x1351290a8 'class_name' 'const char *'
        |-IfStmt 0x135145748 <line:77:3, line:79:3>
        | |-RecoveryExpr 0x135145698 <line:77:7> '_Bool' contains-errors
        | `-CompoundStmt 0x135145738 <col:13, line:79:3>
        |-IfStmt 0x1351468e0 <line:80:3, line:82:3>
        | |-BinaryOperator 0x1351457c0 <line:80:7, col:15> 'int' '>'
        | | |-ImplicitCastExpr 0x1351457a8 <col:7> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x135145768 <col:7> 'int' lvalue ParmVar 0x135128be0 'level' 'int'
        | | `-IntegerLiteral 0x135145788 <col:15> 'int' 1
        | `-CompoundStmt 0x1351468c8 <col:18, line:82:3>
        |   `-CallExpr 0x135146898 <line:81:4, col:39> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x1351457e0 <col:4> 'int ()' Function 0x135144740 'buffer_append_spaces' 'int ()'
        |     |-RecoveryExpr 0x135146800 <col:25> '<dependent type>' contains-errors lvalue
        |     `-BinaryOperator 0x135146878 <col:30, col:38> 'int' '-'
        |       |-ImplicitCastExpr 0x135146860 <col:30> 'int' <LValueToRValue>
        |       | `-DeclRefExpr 0x135146820 <col:30> 'int' lvalue ParmVar 0x135128be0 'level' 'int'
        |       `-IntegerLiteral 0x135146840 <col:38> 'int' 1
        |-CallExpr 0x135146980 <line:83:3, col:34> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135146900 <col:3> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        | |-RecoveryExpr 0x135146920 <col:21> '<dependent type>' contains-errors lvalue
        | |-StringLiteral 0x135146940 <col:26> 'char[4]' lvalue "STR"
        | `-IntegerLiteral 0x135146960 <col:33> 'int' 2
        |-BreakStmt 0x1351469b8 <line:85:3>
        |-DefaultStmt 0x135146a78 <line:86:2, line:87:34>
        | `-CallExpr 0x135146a40 <col:3, col:34> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x1351469c0 <col:3> 'int ()' Function 0x1351424d0 'smart_str_appendl' 'int ()'
        |   |-RecoveryExpr 0x1351469e0 <col:21> '<dependent type>' contains-errors lvalue
        |   |-StringLiteral 0x135146a00 <col:26> 'char[4]' lvalue "STR"
        |   `-IntegerLiteral 0x135146a20 <col:33> 'int' 4
        `-BreakStmt 0x135146a98 <line:88:3>
