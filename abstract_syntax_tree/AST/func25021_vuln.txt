TranslationUnitDecl 0x150855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1508564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150855bd0 '__int128'
|-TypedefDecl 0x150856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150855bf0 'unsigned __int128'
|-TypedefDecl 0x15100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15100bc00 'struct __NSConstantString_tag'
|   `-Record 0x150856580 '__NSConstantString_tag'
|-TypedefDecl 0x15100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150855d90 '__SVInt8_t'
|-TypedefDecl 0x15100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150855db0 '__SVInt16_t'
|-TypedefDecl 0x15100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150855dd0 '__SVInt32_t'
|-TypedefDecl 0x15100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150855df0 '__SVInt64_t'
|-TypedefDecl 0x15100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150855e10 '__SVUint8_t'
|-TypedefDecl 0x15100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150855e30 '__SVUint16_t'
|-TypedefDecl 0x15100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150855e50 '__SVUint32_t'
|-TypedefDecl 0x15100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150855e70 '__SVUint64_t'
|-TypedefDecl 0x15100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150855e90 '__SVFloat16_t'
|-TypedefDecl 0x15100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1508560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1508560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1508560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1508561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1508561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1508561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1508562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1508562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1508562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150856390 '__SVBool_t'
|-TypedefDecl 0x15100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1508563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1508563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1508563f0 '__SVCount_t'
|-TypedefDecl 0x15100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-TypedefDecl 0x15100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-FunctionDecl 0x15100ddf8 <dataset_diviso_filec/func25021_vuln.c:1:1, line:77:1> line:1:1 invalid scanner_check_variables 'int (int *)'
| |-ParmVarDecl 0x15100dd28 <col:26, col:44> col:44 referenced invalid context_p 'int *'
| `-CompoundStmt 0x1509241c0 <line:2:1, line:77:1>
|   |-DeclStmt 0x15100dfa8 <line:4:3, col:62>
|   | `-VarDecl 0x15100df40 <col:3, col:18> col:18 referenced invalid next_data_p 'const int *'
|   |-CallExpr 0x15100e2a8 <line:7:3, col:54> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15100e120 <col:3> 'int ()' Function 0x15100e068 'JERRY_ASSERT' 'int ()'
|   | `-BinaryOperator 0x15100e288 <col:17, col:33> 'int' contains-errors '=='
|   |   |-CXXDependentScopeMemberExpr 0x15100e220 <col:17, col:25> '<dependent type>' contains-errors lvalue ->type
|   |   | `-RecoveryExpr 0x15100e200 <col:17> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x15100e268 <col:33> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x150924058 <line:11:3, line:74:3>
|   | |-BinaryOperator 0x151027ab0 <line:11:10, col:28> 'int' contains-errors '!='
|   | | |-ArraySubscriptExpr 0x151027a70 <col:10, col:23> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x151027a58 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | `-RecoveryExpr 0x15100e370 <col:10> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x15100e390 <col:22> 'int' 0
|   | | `-RecoveryExpr 0x151027a90 <col:28> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x150924028 <line:12:3, line:74:3>
|   |   |-DeclStmt 0x151027b70 <line:14:5, col:40>
|   |   | `-VarDecl 0x151027ae8 <col:5, col:20> col:20 invalid data_p 'const int *'
|   |   |-CallExpr 0x151028070 <line:16:5, line:18:61> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x151027b88 <line:16:5> 'int ()' Function 0x15100e068 'JERRY_ASSERT' 'int ()'
|   |   | `-BinaryOperator 0x151028050 <col:19, line:18:60> 'int' contains-errors '&&'
|   |   |   |-BinaryOperator 0x151027fd0 <line:16:19, line:17:55> 'int' contains-errors '&&'
|   |   |   | |-BinaryOperator 0x151027f50 <line:16:19, col:27> 'int' contains-errors '!='
|   |   |   | | |-RecoveryExpr 0x151027f10 <col:19> '<dependent type>' contains-errors lvalue
|   |   |   | | `-RecoveryExpr 0x151027f30 <col:27> '<dependent type>' contains-errors lvalue
|   |   |   | `-UnaryOperator 0x151027fb8 <line:17:22, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   |   |   `-CallExpr 0x151027f90 <col:23, col:55> '<dependent type>' contains-errors
|   |   |   |     |-DeclRefExpr 0x151027cd8 <col:23> 'int ()' Function 0x151027c20 'SCANNER_STREAM_TYPE_IS_ARG' 'int ()'
|   |   |   |     `-RecoveryExpr 0x151027f70 <col:51> '<dependent type>' contains-errors lvalue
|   |   |   `-UnaryOperator 0x151028038 <line:18:22, col:60> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   |     `-CallExpr 0x151028010 <col:23, col:60> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x151027e50 <col:23> 'int ()' Function 0x151027d98 'SCANNER_STREAM_TYPE_IS_ARG_FUNC' 'int ()'
|   |   |       `-RecoveryExpr 0x151027ff0 <col:56> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x1510289c0 <line:21:5, line:45:5> has_else
|   |   | |-RecoveryExpr 0x1510281a8 <line:21:9, col:49> '_Bool' contains-errors
|   |   | |-CompoundStmt 0x151028860 <line:22:5, line:33:5>
|   |   | | `-IfStmt 0x151028830 <line:23:7, line:32:7> has_else
|   |   | |   |-BinaryOperator 0x151028260 <line:23:11, col:24> 'int' contains-errors '!='
|   |   | |   | |-ArraySubscriptExpr 0x151028220 <col:11, col:19> '<dependent type>' contains-errors lvalue
|   |   | |   | | |-ImplicitCastExpr 0x151028208 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   | | | `-RecoveryExpr 0x1510281c8 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |   | | `-IntegerLiteral 0x1510281e8 <col:18> 'int' 2
|   |   | |   | `-IntegerLiteral 0x151028240 <col:24> 'int' 0
|   |   | |   |-CompoundStmt 0x1510283d0 <line:24:7, line:27:7>
|   |   | |   | `-CompoundAssignOperator 0x1510283a0 <line:26:9, col:28> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |   |   |-RecoveryExpr 0x151028318 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   |   | `-DeclRefExpr 0x1510282f8 <col:9> 'const int *' lvalue Var 0x15100df40 'next_data_p' 'const int *'
|   |   | |   |   `-BinaryOperator 0x151028380 <col:24, col:28> 'int' '+'
|   |   | |   |     |-IntegerLiteral 0x151028340 <col:24> 'int' 2
|   |   | |   |     `-IntegerLiteral 0x151028360 <col:28> 'int' 1
|   |   | |   `-CompoundStmt 0x151028820 <line:29:7, line:32:7>
|   |   | `-CompoundStmt 0x1510289a0 <line:35:5, line:45:5>
|   |   |   |-IfStmt 0x1510288a8 <line:38:7, line:41:7>
|   |   |   | |-RecoveryExpr 0x151028878 <line:38:11, col:30> '_Bool' contains-errors
|   |   |   | `-CompoundStmt 0x151028898 <line:39:7, line:41:7>
|   |   |   `-CompoundAssignOperator 0x151028970 <line:44:7, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |     |-RecoveryExpr 0x1510288e8 <col:7> '<dependent type>' contains-errors lvalue
|   |   |     | `-DeclRefExpr 0x1510288c8 <col:7> 'const int *' lvalue Var 0x15100df40 'next_data_p' 'const int *'
|   |   |     `-BinaryOperator 0x151028950 <col:22, col:26> 'int' '+'
|   |   |       |-IntegerLiteral 0x151028910 <col:22> 'int' 2
|   |   |       `-IntegerLiteral 0x151028930 <col:26> 'int' 2
|   |   `-IfStmt 0x150923e28 <line:64:5, line:71:5> has_else
|   |     |-RecoveryExpr 0x150923de8 <line:64:9, col:52> '_Bool' contains-errors
|   |     |-CompoundStmt 0x150923e08 <line:65:5, line:67:5>
|   |     `-CompoundStmt 0x150923e18 <line:69:5, line:71:5>
|   `-CallExpr 0x150924198 <line:76:3, col:30> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x150924158 <col:3> 'int ()' Function 0x1509240a0 'parser_flush_cbc' 'int ()'
|     `-RecoveryExpr 0x150924178 <col:21> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x151028468 <line:30:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x151028568 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1510285d0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x151028638 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x151028510 <<invalid sloc>> Implicit 882
