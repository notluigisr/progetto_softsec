TranslationUnitDecl 0x157855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1578564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157855bd0 '__int128'
|-TypedefDecl 0x157856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157855bf0 'unsigned __int128'
|-TypedefDecl 0x157926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x157926000 'struct __NSConstantString_tag'
|   `-Record 0x157856580 '__NSConstantString_tag'
|-TypedefDecl 0x157926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157855d90 '__SVInt8_t'
|-TypedefDecl 0x157926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157855db0 '__SVInt16_t'
|-TypedefDecl 0x157926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157855dd0 '__SVInt32_t'
|-TypedefDecl 0x1579263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157855df0 '__SVInt64_t'
|-TypedefDecl 0x157926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157855e10 '__SVUint8_t'
|-TypedefDecl 0x1579264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157855e30 '__SVUint16_t'
|-TypedefDecl 0x157926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157855e50 '__SVUint32_t'
|-TypedefDecl 0x157926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157855e70 '__SVUint64_t'
|-TypedefDecl 0x1579265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157855e90 '__SVFloat16_t'
|-TypedefDecl 0x157926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1579266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157855ed0 '__SVFloat64_t'
|-TypedefDecl 0x157926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x157926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1579267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x157926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1579268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x157926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x157926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1579269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x157926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x157926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x157926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x157926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x157926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x157926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157856090 '__clang_svint8x3_t'
|-TypedefDecl 0x157926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1578560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x157926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1578560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x157926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1578560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x157926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x157926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x157926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x157926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x157926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x157927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1578561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x157927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1578561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1579278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1578561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x157927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1579279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157856230 '__clang_svint16x4_t'
|-TypedefDecl 0x157927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157856250 '__clang_svint32x4_t'
|-TypedefDecl 0x157927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157856270 '__clang_svint64x4_t'
|-TypedefDecl 0x157927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x157927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1578562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x157927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1578562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x157927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1578562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x157927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x157927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x157927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x157927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x157927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157856390 '__SVBool_t'
|-TypedefDecl 0x157927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1578563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x157927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1578563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x157927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1578563f0 '__SVCount_t'
|-TypedefDecl 0x157927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x157927fb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-TypedefDecl 0x157928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x157927fb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-FunctionDecl 0x157928230 <dataset_diviso_filec/func22119_vuln.c:1:1, line:46:1> line:1:6 xmlrpc_char_encode 'void (char *, const char *)'
| |-ParmVarDecl 0x1579280d8 <col:25, col:31> col:31 used outbuffer 'char *'
| |-ParmVarDecl 0x157928158 <col:42, col:54> col:54 used s1 'const char *'
| `-CompoundStmt 0x157943ce8 <line:2:1, line:46:1>
|   |-DeclStmt 0x1579283b0 <line:3:2, col:21>
|   | `-VarDecl 0x157928348 <col:2, col:20> col:20 used i 'unsigned long'
|   |-DeclStmt 0x157928448 <line:4:2, col:17>
|   | `-VarDecl 0x1579283e0 <col:2, col:16> col:16 used c 'unsigned char'
|   |-DeclStmt 0x157928568 <line:5:2, col:15>
|   | `-VarDecl 0x157928500 <col:2, col:14> col:7 used buf2 'char[15]'
|   |-BinaryOperator 0x1579287c8 <line:7:2, col:10> 'char' '='
|   | |-UnaryOperator 0x157928780 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x157928768 <col:3> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x157928748 <col:3> 'char[15]' lvalue Var 0x157928500 'buf2' 'char[15]'
|   | `-ImplicitCastExpr 0x1579287b0 <col:10> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x157928798 <col:10> 'int' 0
|   |-BinaryOperator 0x157941880 <line:8:2, col:15> 'char' '='
|   | |-UnaryOperator 0x157941838 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x157941820 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x157941800 <col:3> 'char *' lvalue ParmVar 0x1579280d8 'outbuffer' 'char *'
|   | `-ImplicitCastExpr 0x157941868 <col:15> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x157941850 <col:15> 'int' 0
|   |-IfStmt 0x157941a70 <line:10:2, line:13:2>
|   | |-ParenExpr 0x157941a28 <line:10:6, col:31> 'int'
|   | | `-BinaryOperator 0x157941a08 <col:7, col:30> 'int' '||'
|   | |   |-UnaryOperator 0x1579418f8 <col:7, col:11> 'int' prefix '!' cannot overflow
|   | |   | `-ImplicitCastExpr 0x1579418e0 <col:8, col:11> 'const char *' <LValueToRValue>
|   | |   |   `-ParenExpr 0x1579418c0 <col:8, col:11> 'const char *' lvalue
|   | |   |     `-DeclRefExpr 0x1579418a0 <col:9> 'const char *' lvalue ParmVar 0x157928158 's1' 'const char *'
|   | |   `-ParenExpr 0x1579419e8 <col:16, col:30> 'int'
|   | |     `-BinaryOperator 0x1579419c8 <col:17, col:26> 'int' '=='
|   | |       |-ImplicitCastExpr 0x1579419b0 <col:17, col:21> 'int' <IntegralCast>
|   | |       | `-ImplicitCastExpr 0x157941998 <col:17, col:21> 'char' <LValueToRValue>
|   | |       |   `-UnaryOperator 0x157941968 <col:17, col:21> 'const char' lvalue prefix '*' cannot overflow
|   | |       |     `-ImplicitCastExpr 0x157941950 <col:18, col:21> 'const char *' <LValueToRValue>
|   | |       |       `-ParenExpr 0x157941930 <col:18, col:21> 'const char *' lvalue
|   | |       |         `-DeclRefExpr 0x157941910 <col:19> 'const char *' lvalue ParmVar 0x157928158 's1' 'const char *'
|   | |       `-CharacterLiteral 0x157941980 <col:26> 'int' 0
|   | `-CompoundStmt 0x157941a58 <line:11:2, line:13:2>
|   |   `-ReturnStmt 0x157941a48 <line:12:3>
|   |-ForStmt 0x1579437a0 <line:15:2, line:43:2>
|   | |-BinaryOperator 0x157941ae8 <line:15:7, col:11> 'unsigned long' '='
|   | | |-DeclRefExpr 0x157941a90 <col:7> 'unsigned long' lvalue Var 0x157928348 'i' 'unsigned long'
|   | | `-ImplicitCastExpr 0x157941ad0 <col:11> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x157941ab0 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x157941be0 <col:14, col:23> 'int' '!='
|   | | |-ImplicitCastExpr 0x157941bc8 <col:14, col:18> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x157941bb0 <col:14, col:18> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x157941b78 <col:14, col:18> 'const char' lvalue
|   | | |     |-ImplicitCastExpr 0x157941b48 <col:14> 'const char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x157941b08 <col:14> 'const char *' lvalue ParmVar 0x157928158 's1' 'const char *'
|   | | |     `-ImplicitCastExpr 0x157941b60 <col:17> 'unsigned long' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x157941b28 <col:17> 'unsigned long' lvalue Var 0x157928348 'i' 'unsigned long'
|   | | `-CharacterLiteral 0x157941b98 <col:23> 'int' 0
|   | |-UnaryOperator 0x157941c20 <col:29, col:30> 'unsigned long' postfix '++'
|   | | `-DeclRefExpr 0x157941c00 <col:29> 'unsigned long' lvalue Var 0x157928348 'i' 'unsigned long'
|   | `-CompoundStmt 0x157943780 <line:16:2, line:43:2>
|   |   |-BinaryOperator 0x157941d18 <line:17:3, col:11> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x157941c38 <col:3> 'unsigned char' lvalue Var 0x1579283e0 'c' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x157941d00 <col:7, col:11> 'unsigned char' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x157941ce8 <col:7, col:11> 'char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x157941cc8 <col:7, col:11> 'const char' lvalue
|   |   |       |-ImplicitCastExpr 0x157941c98 <col:7> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x157941c58 <col:7> 'const char *' lvalue ParmVar 0x157928158 's1' 'const char *'
|   |   |       `-ImplicitCastExpr 0x157941cb0 <col:10> 'unsigned long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x157941c78 <col:10> 'unsigned long' lvalue Var 0x157928348 'i' 'unsigned long'
|   |   `-IfStmt 0x157943750 <line:18:3, line:42:3> has_else
|   |     |-BinaryOperator 0x157941da8 <line:18:7, col:11> 'int' '>'
|   |     | |-ImplicitCastExpr 0x157941d90 <col:7> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x157941d78 <col:7> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x157941d38 <col:7> 'unsigned char' lvalue Var 0x1579283e0 'c' 'unsigned char'
|   |     | `-IntegerLiteral 0x157941d58 <col:11> 'int' 127
|   |     |-CompoundStmt 0x157943270 <line:19:3, line:22:3>
|   |     | `-CallExpr 0x157942648 <line:20:4, col:40> 'int'
|   |     |   |-ImplicitCastExpr 0x157942630 <col:4> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x1579424c8 <col:4> 'int (char *, unsigned long, const char *, ...)' Function 0x157942240 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |     |   |-ImplicitCastExpr 0x157942688 <col:13> 'char *' <ArrayToPointerDecay>
|   |     |   | `-DeclRefExpr 0x1579424e8 <col:13> 'char[15]' lvalue Var 0x157928500 'buf2' 'char[15]'
|   |     |   |-UnaryExprOrTypeTraitExpr 0x157942528 <col:19, col:26> 'unsigned long' sizeof
|   |     |   | `-DeclRefExpr 0x157942508 <col:26> 'char[15]' lvalue Var 0x157928500 'buf2' 'char[15]' non_odr_use_unevaluated
|   |     |   |-ImplicitCastExpr 0x1579426b8 <col:32> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x1579426a0 <col:32> 'char *' <ArrayToPointerDecay>
|   |     |   |   `-StringLiteral 0x157942590 <col:32> 'char[4]' lvalue "STR"
|   |     |   `-ImplicitCastExpr 0x1579426e8 <col:39> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x1579426d0 <col:39> 'unsigned char' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x1579425b0 <col:39> 'unsigned char' lvalue Var 0x1579283e0 'c' 'unsigned char'
|   |     `-IfStmt 0x157943720 <line:23:8, line:42:3> has_else
|   |       |-BinaryOperator 0x1579432f0 <line:23:12, col:17> 'int' '=='
|   |       | |-ImplicitCastExpr 0x1579432d8 <col:12> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x1579432c0 <col:12> 'unsigned char' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x157943288 <col:12> 'unsigned char' lvalue Var 0x1579283e0 'c' 'unsigned char'
|   |       | `-CharacterLiteral 0x1579432a8 <col:17> 'int' 38
|   |       |-CompoundStmt 0x157943368 <line:24:3, line:26:3>
|   |       `-IfStmt 0x1579436f0 <line:27:8, line:42:3> has_else
|   |         |-BinaryOperator 0x1579433e0 <line:27:12, col:17> 'int' '=='
|   |         | |-ImplicitCastExpr 0x1579433c8 <col:12> 'int' <IntegralCast>
|   |         | | `-ImplicitCastExpr 0x1579433b0 <col:12> 'unsigned char' <LValueToRValue>
|   |         | |   `-DeclRefExpr 0x157943378 <col:12> 'unsigned char' lvalue Var 0x1579283e0 'c' 'unsigned char'
|   |         | `-CharacterLiteral 0x157943398 <col:17> 'int' 60
|   |         |-CompoundStmt 0x157943458 <line:28:3, line:30:3>
|   |         `-IfStmt 0x1579436c0 <line:31:8, line:42:3> has_else
|   |           |-BinaryOperator 0x1579434d0 <line:31:12, col:17> 'int' '=='
|   |           | |-ImplicitCastExpr 0x1579434b8 <col:12> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x1579434a0 <col:12> 'unsigned char' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x157943468 <col:12> 'unsigned char' lvalue Var 0x1579283e0 'c' 'unsigned char'
|   |           | `-CharacterLiteral 0x157943488 <col:17> 'int' 62
|   |           |-CompoundStmt 0x157943548 <line:32:3, line:34:3>
|   |           `-IfStmt 0x157943690 <line:35:8, line:42:3> has_else
|   |             |-BinaryOperator 0x1579435c0 <line:35:12, col:17> 'int' '=='
|   |             | |-ImplicitCastExpr 0x1579435a8 <col:12> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x157943590 <col:12> 'unsigned char' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x157943558 <col:12> 'unsigned char' lvalue Var 0x1579283e0 'c' 'unsigned char'
|   |             | `-CharacterLiteral 0x157943578 <col:17> 'int' 34
|   |             |-CompoundStmt 0x157943638 <line:36:3, line:38:3>
|   |             `-CompoundStmt 0x157943680 <line:40:3, line:42:3>
|   `-CallExpr 0x157943cb0 <line:45:2, col:42> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x157943aa8 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x157943858 'memcpy' 'void *(void *, const void *, unsigned long)'
|     |-DeclRefExpr 0x157943ac8 <col:9> 'char *' lvalue ParmVar 0x1579280d8 'outbuffer' 'char *'
|     |-CXXDependentScopeMemberExpr 0x157943c00 <col:20, col:23> '<dependent type>' contains-errors lvalue ->str
|     | `-RecoveryExpr 0x157943be0 <col:20> '<dependent type>' contains-errors lvalue
|     `-RecoveryExpr 0x157943c48 <col:28> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x157942240 <line:20:4> col:4 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x157942340 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1579423a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x157942410 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x1579422e8 <<invalid sloc>> Implicit 905
| `-FormatAttr 0x157942490 <col:4> Implicit printf 3 4
|-FunctionDecl 0x157943000 <line:21:23> col:23 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x157943100 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1579430a8 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x157943858 <line:45:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x157943958 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1579439c0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x157943a28 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x157943900 <<invalid sloc>> Implicit 882
