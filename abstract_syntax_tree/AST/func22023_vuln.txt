TranslationUnitDecl 0x12f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f055bd0 '__int128'
|-TypedefDecl 0x12f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f055bf0 'unsigned __int128'
|-TypedefDecl 0x13880be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13880bc00 'struct __NSConstantString_tag'
|   `-Record 0x12f056580 '__NSConstantString_tag'
|-TypedefDecl 0x13880be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f055d90 '__SVInt8_t'
|-TypedefDecl 0x13880bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f055db0 '__SVInt16_t'
|-TypedefDecl 0x13880bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f055dd0 '__SVInt32_t'
|-TypedefDecl 0x13880bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f055df0 '__SVInt64_t'
|-TypedefDecl 0x13880c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f055e10 '__SVUint8_t'
|-TypedefDecl 0x13880c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f055e30 '__SVUint16_t'
|-TypedefDecl 0x13880c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f055e50 '__SVUint32_t'
|-TypedefDecl 0x13880c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f055e70 '__SVUint64_t'
|-TypedefDecl 0x13880c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f055e90 '__SVFloat16_t'
|-TypedefDecl 0x13880c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13880c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13880c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13880c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13880c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13880c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13880c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13880c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13880c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13880c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13880c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13880c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13880c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13880c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13880c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13880c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13880c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13880c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13880c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13880c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13880ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13880cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13880cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13880cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13880d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13880d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13880d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13880d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13880d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13880d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13880d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13880d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13880d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13880d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13880d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13880d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13880d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13880d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13880d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13880da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f056390 '__SVBool_t'
|-TypedefDecl 0x13880da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13880dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13880db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f0563f0 '__SVCount_t'
|-TypedefDecl 0x13880dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13880dbb0 'char *'
|   `-BuiltinType 0x12f0556b0 'char'
|-TypedefDecl 0x13880dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13880dbb0 'char *'
|   `-BuiltinType 0x12f0556b0 'char'
|-FunctionDecl 0x13880dda8 <dataset_diviso_filec/func22023_vuln.c:1:1, line:20:1> line:1:1 set_umask 'int (const char *)'
| |-ParmVarDecl 0x13880dcd8 <col:11, col:23> col:23 used optarg 'const char *'
| `-CompoundStmt 0x138828fe8 <line:2:1, line:20:1>
|   |-DeclStmt 0x13880df20 <line:3:2, col:17>
|   | `-VarDecl 0x13880deb8 <col:2, col:7> col:7 used umask_long 'long'
|   |-DeclStmt 0x13880dfd0 <line:5:2, col:14>
|   | `-VarDecl 0x13880df68 <col:2, col:8> col:8 used endptr 'char *'
|   |-BinaryOperator 0x1388288c0 <line:7:2, col:41> 'long' '='
|   | |-DeclRefExpr 0x13880dfe8 <col:2> 'long' lvalue Var 0x13880deb8 'umask_long' 'long'
|   | `-ImplicitCastExpr 0x1388288a8 <col:15, col:41> 'long' <IntegralCast>
|   |   `-CallExpr 0x138828858 <col:15, col:41> 'long long'
|   |     |-ImplicitCastExpr 0x138828840 <col:15> 'long long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x138828760 <col:15> 'long long (const char *, char **, int)' Function 0x138828510 'strtoll' 'long long (const char *, char **, int)'
|   |     |-ImplicitCastExpr 0x138828890 <col:23> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x138828780 <col:23> 'const char *' lvalue ParmVar 0x13880dcd8 'optarg' 'const char *'
|   |     |-UnaryOperator 0x1388287c0 <col:31, col:32> 'char **' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x1388287a0 <col:32> 'char *' lvalue Var 0x13880df68 'endptr' 'char *'
|   |     `-IntegerLiteral 0x1388287d8 <col:40> 'int' 0
|   |-IfStmt 0x138828d50 <line:9:2, line:12:2>
|   | |-BinaryOperator 0x138828aa0 <line:9:6, col:49> 'int' '||'
|   | | |-BinaryOperator 0x1388289f0 <col:6, col:30> 'int' '||'
|   | | | |-ImplicitCastExpr 0x1388289d8 <col:6, col:7> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1388289c0 <col:6, col:7> 'char' <LValueToRValue>
|   | | | |   `-UnaryOperator 0x138828918 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | | |     `-ImplicitCastExpr 0x138828900 <col:7> 'char *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1388288e0 <col:7> 'char *' lvalue Var 0x13880df68 'endptr' 'char *'
|   | | | `-BinaryOperator 0x1388289a0 <col:17, col:30> 'int' '<'
|   | | |   |-ImplicitCastExpr 0x138828970 <col:17> 'long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x138828930 <col:17> 'long' lvalue Var 0x13880deb8 'umask_long' 'long'
|   | | |   `-ImplicitCastExpr 0x138828988 <col:30> 'long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x138828950 <col:30> 'int' 0
|   | | `-BinaryOperator 0x138828a80 <col:35, col:49> 'long' '&'
|   | |   |-ImplicitCastExpr 0x138828a68 <col:35> 'long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x138828a10 <col:35> 'long' lvalue Var 0x13880deb8 'umask_long' 'long'
|   | |   `-UnaryOperator 0x138828a50 <col:48, col:49> 'long' prefix '~' cannot overflow
|   | |     `-IntegerLiteral 0x138828a30 <col:49> 'long' 511
|   | `-CompoundStmt 0x138828d30 <col:56, line:12:2>
|   |   |-CallExpr 0x138828ce8 <line:10:3, col:32> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x138828bd0 <col:3> 'int ()' Function 0x138828b18 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x138828cc8 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x138828c50 <col:19> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x138828c70 <col:26> 'const char *' lvalue ParmVar 0x13880dcd8 'optarg' 'const char *'
|   |   `-ReturnStmt 0x138828d20 <line:11:3>
|   |-CallExpr 0x138828f60 <line:15:2, col:17> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x138828ee0 <col:2> 'int ()' Function 0x138828e28 'umask' 'int ()'
|   | `-RecoveryExpr 0x138828f40 <col:8> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x138828fd8 <line:19:2, col:9>
|     `-RecoveryExpr 0x138828fb8 <col:9> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x138828510 <line:7:15> col:15 implicit used strtoll 'long long (const char *, char **, int)' extern
  |-ParmVarDecl 0x138828610 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x138828678 <<invalid sloc>> <invalid sloc> 'char **'
  |-ParmVarDecl 0x1388286e0 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1388285b8 <<invalid sloc>> Implicit 878
