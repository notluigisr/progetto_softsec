TranslationUnitDecl 0x13d044808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0456b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d044dd0 '__int128'
|-TypedefDecl 0x13d045728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d044df0 'unsigned __int128'
|-TypedefDecl 0x13c01c630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c01c400 'struct __NSConstantString_tag'
|   `-Record 0x13d045780 '__NSConstantString_tag'
|-TypedefDecl 0x13c01c698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d044f90 '__SVInt8_t'
|-TypedefDecl 0x13c01c700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d044fb0 '__SVInt16_t'
|-TypedefDecl 0x13c01c768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d044fd0 '__SVInt32_t'
|-TypedefDecl 0x13c01c7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d044ff0 '__SVInt64_t'
|-TypedefDecl 0x13c01c838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d045010 '__SVUint8_t'
|-TypedefDecl 0x13c01c8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d045030 '__SVUint16_t'
|-TypedefDecl 0x13c01c908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d045050 '__SVUint32_t'
|-TypedefDecl 0x13c01c970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d045070 '__SVUint64_t'
|-TypedefDecl 0x13c01c9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d045090 '__SVFloat16_t'
|-TypedefDecl 0x13c01ca40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d0450b0 '__SVFloat32_t'
|-TypedefDecl 0x13c01caa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d0450d0 '__SVFloat64_t'
|-TypedefDecl 0x13c01cb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d0450f0 '__SVBfloat16_t'
|-TypedefDecl 0x13c01cb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d045110 '__clang_svint8x2_t'
|-TypedefDecl 0x13c01cbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d045130 '__clang_svint16x2_t'
|-TypedefDecl 0x13c01cc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d045150 '__clang_svint32x2_t'
|-TypedefDecl 0x13c01ccb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d045170 '__clang_svint64x2_t'
|-TypedefDecl 0x13c01cd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d045190 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c01cd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d0451b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c01cde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d0451d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c01ce50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d0451f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c01ceb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d045210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c01cf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d045230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c01cf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d045250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c01cff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d045270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c01d058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d045290 '__clang_svint8x3_t'
|-TypedefDecl 0x13c01d0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d0452b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c01d128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d0452d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c01d190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d0452f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c01d1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d045310 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c01d260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d045330 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c01d2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d045350 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c01d330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d045370 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c01d398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d045390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c01d800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d0453b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c01d868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d0453d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c01d8d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d0453f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c01d938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d045410 '__clang_svint8x4_t'
|-TypedefDecl 0x13c01d9a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d045430 '__clang_svint16x4_t'
|-TypedefDecl 0x13c01da08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d045450 '__clang_svint32x4_t'
|-TypedefDecl 0x13c01da70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d045470 '__clang_svint64x4_t'
|-TypedefDecl 0x13c01dad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d045490 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c01db40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0454b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c01dba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0454d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c01dc10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0454f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c01dc78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d045510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c01dce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d045530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c01dd48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d045550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c01ddb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d045570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c01de18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d045590 '__SVBool_t'
|-TypedefDecl 0x13c01de80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0455b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c01dee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0455d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c01df50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0455f0 '__SVCount_t'
|-TypedefDecl 0x13c01dff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c01dfb0 'char *'
|   `-BuiltinType 0x13d0448b0 'char'
|-TypedefDecl 0x13c01e068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c01dfb0 'char *'
|   `-BuiltinType 0x13d0448b0 'char'
|-FunctionDecl 0x13c01e328 <dataset_diviso_filec/func19885_vuln.c:1:1, line:30:1> line:1:5 main 'int (int, char **)'
| |-ParmVarDecl 0x13c01e0d8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x13c01e200 <col:20, col:31> col:26 used argv 'char **'
| `-CompoundStmt 0x13c03a418 <line:2:1, line:30:1>
|   |-DeclStmt 0x13c01e4f8 <line:3:5, col:22>
|   | `-VarDecl 0x13c01e440 <col:5, col:18> col:11 used jfif 'void *' cinit
|   |   `-RecoveryExpr 0x13c01e4d8 <col:18> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13c038760 <line:6:5, line:13:5>
|   | |-BinaryOperator 0x13c01e568 <line:6:9, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x13c01e550 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13c01e510 <col:9> 'int' lvalue ParmVar 0x13c01e0d8 'argc' 'int'
|   | | `-IntegerLiteral 0x13c01e530 <col:16> 'int' 3
|   | `-CompoundStmt 0x13c038740 <col:19, line:13:5>
|   |   |-CallExpr 0x13c0386b8 <line:7:9, line:11:9> 'int'
|   |   | |-ImplicitCastExpr 0x13c0386a0 <line:7:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13c0385b8 <col:9> 'int (const char *, ...)' Function 0x13c038410 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x13c0386f8 <line:8:13, line:10:13> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13c0386e0 <line:8:13, line:10:13> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13c038620 <line:8:13, line:10:13> 'char[10]' lvalue "STRSTRSTR"
|   |   `-ReturnStmt 0x13c038730 <line:12:9, col:16>
|   |     `-IntegerLiteral 0x13c038710 <col:16> 'int' 0
|   |-IfStmt 0x13c03a3b8 <line:15:5, line:27:5> has_else
|   | |-BinaryOperator 0x13c038bc8 <line:15:9, col:35> 'int' '=='
|   | | |-CallExpr 0x13c038b18 <col:9, col:30> 'int'
|   | | | |-ImplicitCastExpr 0x13c038b00 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13c0389a0 <col:9> 'int (const char *, const char *)' Function 0x13c0387c0 'strcmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x13c038b60 <col:16, col:22> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x13c038b48 <col:16, col:22> 'char *' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x13c038a18 <col:16, col:22> 'char *' lvalue
|   | | | |     |-ImplicitCastExpr 0x13c038a00 <col:16> 'char **' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x13c0389c0 <col:16> 'char **' lvalue ParmVar 0x13c01e200 'argv' 'char **'
|   | | | |     `-IntegerLiteral 0x13c0389e0 <col:21> 'int' 1
|   | | | `-ImplicitCastExpr 0x13c038b90 <col:25> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x13c038b78 <col:25> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x13c038a80 <col:25> 'char[4]' lvalue "STR"
|   | | `-IntegerLiteral 0x13c038ba8 <col:35> 'int' 0
|   | |-CompoundStmt 0x13c0399a0 <col:38, line:21:5>
|   | | |-BinaryOperator 0x13c038e60 <line:16:9, col:33> 'void *' contains-errors '='
|   | | | |-DeclRefExpr 0x13c038be8 <col:9> 'void *' contains-errors lvalue Var 0x13c01e440 'jfif' 'void *'
|   | | | `-ImplicitCastExpr 0x13c038e48 <col:16, col:33> 'void *' <IntegralToPointer>
|   | | |   `-CallExpr 0x13c038e08 <col:16, col:33> 'int'
|   | | |     |-ImplicitCastExpr 0x13c038df0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x13c038d20 <col:16> 'int ()' Function 0x13c038c68 'jfif_load' 'int ()'
|   | | |     `-ImplicitCastExpr 0x13c038e30 <col:26, col:32> 'char *' <LValueToRValue>
|   | | |       `-ArraySubscriptExpr 0x13c038d98 <col:26, col:32> 'char *' lvalue
|   | | |         |-ImplicitCastExpr 0x13c038d80 <col:26> 'char **' <LValueToRValue>
|   | | |         | `-DeclRefExpr 0x13c038d40 <col:26> 'char **' lvalue ParmVar 0x13c01e200 'argv' 'char **'
|   | | |         `-IntegerLiteral 0x13c038d60 <col:31> 'int' 2
|   | | |-CallExpr 0x13c039038 <line:17:9, col:31> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x13c038f60 <col:9> 'int ()' Function 0x13c038ea8 'jfif_decode' 'int ()'
|   | | | |-DeclRefExpr 0x13c038f80 <col:21> 'void *' contains-errors lvalue Var 0x13c01e440 'jfif' 'void *'
|   | | | `-UnaryOperator 0x13c039020 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x13c039000 <col:28> '<dependent type>' contains-errors lvalue
|   | | |-CallExpr 0x13c0391a0 <line:18:9, col:25> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x13c039188 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13c039148 <col:9> 'int ()' Function 0x13c039090 'jfif_free' 'int ()'
|   | | | `-ImplicitCastExpr 0x13c0391c8 <col:21> 'void *' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13c039168 <col:21> 'void *' contains-errors lvalue Var 0x13c01e440 'jfif' 'void *'
|   | | |-CallExpr 0x13c0397b8 <line:19:9, col:29> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x13c0396e0 <col:9> 'int ()' Function 0x13c039628 'bmp_save' 'int ()'
|   | | | |-UnaryOperator 0x13c0397a0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x13c039780 <col:19> '<dependent type>' contains-errors lvalue
|   | | | `-StringLiteral 0x13c039730 <col:24> 'char[4]' lvalue "STR"
|   | | `-CallExpr 0x13c039978 <line:20:9, col:22> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x13c0398c8 <col:9> 'int ()' Function 0x13c039810 'bmp_free' 'int ()'
|   | |   `-UnaryOperator 0x13c039960 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     `-RecoveryExpr 0x13c039940 <col:19> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x13c03a398 <line:21:12, line:27:5>
|   |   |-BinaryOperator 0x13c039b88 <line:21:16, col:42> 'int' '=='
|   |   | |-CallExpr 0x13c039ad8 <col:16, col:37> 'int'
|   |   | | |-ImplicitCastExpr 0x13c039ac0 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x13c0399d8 <col:16> 'int (const char *, const char *)' Function 0x13c0387c0 'strcmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x13c039b20 <col:23, col:29> 'const char *' <NoOp>
|   |   | | | `-ImplicitCastExpr 0x13c039b08 <col:23, col:29> 'char *' <LValueToRValue>
|   |   | | |   `-ArraySubscriptExpr 0x13c039a50 <col:23, col:29> 'char *' lvalue
|   |   | | |     |-ImplicitCastExpr 0x13c039a38 <col:23> 'char **' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x13c0399f8 <col:23> 'char **' lvalue ParmVar 0x13c01e200 'argv' 'char **'
|   |   | | |     `-IntegerLiteral 0x13c039a18 <col:28> 'int' 1
|   |   | | `-ImplicitCastExpr 0x13c039b50 <col:32> 'const char *' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x13c039b38 <col:32> 'char *' <ArrayToPointerDecay>
|   |   | |     `-StringLiteral 0x13c039a70 <col:32> 'char[4]' lvalue "STR"
|   |   | `-IntegerLiteral 0x13c039b68 <col:42> 'int' 0
|   |   `-CompoundStmt 0x13c03a360 <col:45, line:27:5>
|   |     |-CallExpr 0x13c039df0 <line:22:9, col:31> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x13c039c88 <col:9> 'int ()' Function 0x13c039bd0 'bmp_load' 'int ()'
|   |     | |-UnaryOperator 0x13c039da0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | | `-RecoveryExpr 0x13c039d80 <col:19> '<dependent type>' contains-errors lvalue
|   |     | `-ArraySubscriptExpr 0x13c039dd0 <col:24, col:30> 'char *' lvalue
|   |     |   |-ImplicitCastExpr 0x13c039db8 <col:24> 'char **' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x13c039cd8 <col:24> 'char **' lvalue ParmVar 0x13c01e200 'argv' 'char **'
|   |     |   `-IntegerLiteral 0x13c039cf8 <col:29> 'int' 2
|   |     |-BinaryOperator 0x13c03a018 <line:23:9, col:32> 'void *' contains-errors '='
|   |     | |-DeclRefExpr 0x13c039e20 <col:9> 'void *' contains-errors lvalue Var 0x13c01e440 'jfif' 'void *'
|   |     | `-CallExpr 0x13c039ff0 <col:16, col:32> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x13c039f20 <col:16> 'int ()' Function 0x13c039e68 'jfif_encode' 'int ()'
|   |     |   `-UnaryOperator 0x13c039fd8 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     |     `-RecoveryExpr 0x13c039fb8 <col:29> '<dependent type>' contains-errors lvalue
|   |     |-CallExpr 0x13c03a0e8 <line:24:9, col:22> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x13c03a038 <col:9> 'int ()' Function 0x13c039810 'bmp_free' 'int ()'
|   |     | `-UnaryOperator 0x13c03a0d0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     |   `-RecoveryExpr 0x13c03a0b0 <col:19> '<dependent type>' contains-errors lvalue
|   |     |-CallExpr 0x13c03a268 <line:25:9, col:30> 'int' contains-errors
|   |     | |-ImplicitCastExpr 0x13c03a250 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x13c03a1f0 <col:9> 'int ()' Function 0x13c03a138 'jfif_save' 'int ()'
|   |     | |-ImplicitCastExpr 0x13c03a298 <col:19> 'void *' contains-errors <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13c03a210 <col:19> 'void *' contains-errors lvalue Var 0x13c01e440 'jfif' 'void *'
|   |     | `-ImplicitCastExpr 0x13c03a2b0 <col:25> 'char *' <ArrayToPointerDecay>
|   |     |   `-StringLiteral 0x13c03a230 <col:25> 'char[4]' lvalue "STR"
|   |     `-CallExpr 0x13c03a320 <line:26:9, col:23> 'int' contains-errors
|   |       |-ImplicitCastExpr 0x13c03a308 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13c03a2c8 <col:9> 'int ()' Function 0x13c039090 'jfif_free' 'int ()'
|   |       `-ImplicitCastExpr 0x13c03a348 <col:19> 'void *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x13c03a2e8 <col:19> 'void *' contains-errors lvalue Var 0x13c01e440 'jfif' 'void *'
|   `-ReturnStmt 0x13c03a408 <line:29:5, col:12>
|     `-IntegerLiteral 0x13c03a3e8 <col:12> 'int' 0
|-FunctionDecl 0x13c038410 <line:7:9> col:9 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x13c038510 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x13c0384b8 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x13c038580 <col:9> Implicit printf 1 2
`-FunctionDecl 0x13c0387c0 <line:15:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x13c0388c0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13c038928 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13c038868 <<invalid sloc>> Implicit 887
