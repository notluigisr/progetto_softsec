TranslationUnitDecl 0x135055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1350564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135055bd0 '__int128'
|-TypedefDecl 0x135056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135055bf0 'unsigned __int128'
|-TypedefDecl 0x135126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135126000 'struct __NSConstantString_tag'
|   `-Record 0x135056580 '__NSConstantString_tag'
|-TypedefDecl 0x135126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135055d90 '__SVInt8_t'
|-TypedefDecl 0x135126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135055db0 '__SVInt16_t'
|-TypedefDecl 0x135126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135055dd0 '__SVInt32_t'
|-TypedefDecl 0x1351263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135055df0 '__SVInt64_t'
|-TypedefDecl 0x135126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135055e10 '__SVUint8_t'
|-TypedefDecl 0x1351264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135055e30 '__SVUint16_t'
|-TypedefDecl 0x135126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135055e50 '__SVUint32_t'
|-TypedefDecl 0x135126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135055e70 '__SVUint64_t'
|-TypedefDecl 0x1351265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135055e90 '__SVFloat16_t'
|-TypedefDecl 0x135126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1351266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135055ed0 '__SVFloat64_t'
|-TypedefDecl 0x135126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1351267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1351268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1351269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x135126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x135126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135056090 '__clang_svint8x3_t'
|-TypedefDecl 0x135126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1350560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1350560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1350560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x135126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x135126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1350561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1350561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1351278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1350561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1351279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135056230 '__clang_svint16x4_t'
|-TypedefDecl 0x135127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135056250 '__clang_svint32x4_t'
|-TypedefDecl 0x135127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135056270 '__clang_svint64x4_t'
|-TypedefDecl 0x135127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1350562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x135127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1350562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1350562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x135127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x135127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135056390 '__SVBool_t'
|-TypedefDecl 0x135127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1350563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x135127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1350563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1350563f0 '__SVCount_t'
|-TypedefDecl 0x135127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x135127fb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
|-TypedefDecl 0x135128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x135127fb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
`-FunctionDecl 0x135140ba0 <dataset_diviso_filec/func24560_vuln.c:1:1, line:28:1> line:1:13 audit_log_execve_info 'void (struct audit_context *, struct audit_buffer **)' static
  |-ParmVarDecl 0x135128648 <col:35, col:57> col:57 used context 'struct audit_context *'
  |-ParmVarDecl 0x135140a88 <line:2:7, col:29> col:29 used ab 'struct audit_buffer **'
  `-CompoundStmt 0x135141fb0 <line:3:1, line:28:1>
    |-DeclStmt 0x135140db8 <line:4:2, col:12>
    | |-VarDecl 0x135140cb8 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x135140d38 <col:2, col:9> col:9 used len 'int'
    |-RecoveryExpr 0x135140ec8 <line:5:2, col:20> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x135140ea8 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x135140e88 <col:9> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x135140e20 <col:20> 'int' 0
    |-DeclStmt 0x135140f70 <line:6:2, col:20>
    | `-VarDecl 0x135140f08 <col:2, col:13> col:13 __user 'const char'
    |-DeclStmt 0x135141008 <line:7:2, col:11>
    | `-VarDecl 0x135140fa0 <col:2, col:8> col:8 used buf 'char *'
    |-CallExpr 0x135141368 <line:11:2, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1351411f0 <col:2> 'int ()' Function 0x135141138 'audit_log_format' 'int ()'
    | |-UnaryOperator 0x135141248 <col:19, col:20> 'struct audit_buffer *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x135141230 <col:20> 'struct audit_buffer **' <LValueToRValue>
    | |   `-DeclRefExpr 0x135141210 <col:20> 'struct audit_buffer **' lvalue ParmVar 0x135140a88 'ab' 'struct audit_buffer **'
    | |-StringLiteral 0x1351412a0 <col:24> 'char[4]' lvalue "STR"
    | `-CXXDependentScopeMemberExpr 0x135141320 <col:31, col:47> '<dependent type>' contains-errors lvalue .argc
    |   `-RecoveryExpr 0x1351412f8 <col:31, col:40> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1351412c0 <col:31> 'struct audit_context *' lvalue ParmVar 0x135128648 'context' 'struct audit_context *'
    |-BinaryOperator 0x135141610 <line:14:2, col:52> 'char *' contains-errors '='
    | |-DeclRefExpr 0x1351413a0 <col:2> 'char *' lvalue Var 0x135140fa0 'buf' 'char *'
    | `-CallExpr 0x1351415e0 <col:8, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1351414a0 <col:8> 'int ()' Function 0x1351413e8 'kmalloc' 'int ()'
    |   |-BinaryOperator 0x1351415a0 <col:16, col:39> '<dependent type>' contains-errors '+'
    |   | |-RecoveryExpr 0x135141580 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x1351414d8 <col:39> 'int' 1
    |   `-RecoveryExpr 0x1351415c0 <col:42> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x135141858 <line:15:2, line:18:2>
    | |-UnaryOperator 0x135141668 <line:15:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x135141650 <col:7> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x135141630 <col:7> 'char *' lvalue Var 0x135140fa0 'buf' 'char *'
    | `-CompoundStmt 0x135141838 <col:12, line:18:2>
    |   |-CallExpr 0x1351417e8 <line:16:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x1351417d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x135141760 <col:3> 'int ()' Function 0x1351416a8 'audit_panic' 'int ()'
    |   | `-ImplicitCastExpr 0x135141810 <col:15> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x135141780 <col:15> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x135141828 <line:17:3>
    |-ForStmt 0x135141e00 <line:20:2, line:26:2>
    | |-BinaryOperator 0x1351418b8 <line:20:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x135141878 <col:7> 'int' lvalue Var 0x135140cb8 'i' 'int'
    | | `-IntegerLiteral 0x135141898 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1351419a0 <col:14, col:34> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1351418d8 <col:14> 'int' lvalue Var 0x135140cb8 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x135141958 <col:18, col:34> '<dependent type>' contains-errors lvalue .argc
    | |   `-RecoveryExpr 0x135141930 <col:18, col:27> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x1351418f8 <col:18> 'struct audit_context *' lvalue ParmVar 0x135128648 'context' 'struct audit_context *'
    | |-UnaryOperator 0x1351419e0 <col:40, col:41> 'int' postfix '++'
    | | `-DeclRefExpr 0x1351419c0 <col:40> 'int' lvalue Var 0x135140cb8 'i' 'int'
    | `-CompoundStmt 0x135141de0 <col:45, line:26:2>
    |   |-BinaryOperator 0x135141d00 <line:21:3, line:22:26> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x135141a00 <line:21:3> 'int' lvalue Var 0x135140d38 'len' 'int'
    |   | `-CallExpr 0x135141cb0 <col:9, line:22:26> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x135141b00 <line:21:9> 'int ()' Function 0x135141a48 'audit_log_single_execve_arg' 'int ()'
    |   |   |-DeclRefExpr 0x135141b20 <col:37> 'struct audit_context *' lvalue ParmVar 0x135128648 'context' 'struct audit_context *'
    |   |   |-DeclRefExpr 0x135141b40 <col:46> 'struct audit_buffer **' lvalue ParmVar 0x135140a88 'ab' 'struct audit_buffer **'
    |   |   |-DeclRefExpr 0x135141b60 <col:50> 'int' lvalue Var 0x135140cb8 'i' 'int'
    |   |   |-UnaryOperator 0x135141c78 <line:22:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x135141c58 <col:10> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x135141c90 <col:20> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x135141bc8 <col:23> 'char *' lvalue Var 0x135140fa0 'buf' 'char *'
    |   `-IfStmt 0x135141da0 <line:23:3, line:24:4>
    |     |-BinaryOperator 0x135141d78 <line:23:7, col:14> 'int' '<='
    |     | |-ImplicitCastExpr 0x135141d60 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x135141d20 <col:7> 'int' lvalue Var 0x135140d38 'len' 'int'
    |     | `-IntegerLiteral 0x135141d40 <col:14> 'int' 0
    |     `-BreakStmt 0x135141d98 <line:24:4>
    `-CallExpr 0x135141f70 <line:27:2, col:11> 'int'
      |-ImplicitCastExpr 0x135141f58 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x135141f18 <col:2> 'int ()' Function 0x135141e60 'kfree' 'int ()'
      `-ImplicitCastExpr 0x135141f98 <col:8> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x135141f38 <col:8> 'char *' lvalue Var 0x135140fa0 'buf' 'char *'
