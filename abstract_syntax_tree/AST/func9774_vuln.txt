TranslationUnitDecl 0x12e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e055bd0 '__int128'
|-TypedefDecl 0x12e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e055bf0 'unsigned __int128'
|-TypedefDecl 0x12e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e126000 'struct __NSConstantString_tag'
|   `-Record 0x12e056580 '__NSConstantString_tag'
|-TypedefDecl 0x12e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e055d90 '__SVInt8_t'
|-TypedefDecl 0x12e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e055db0 '__SVInt16_t'
|-TypedefDecl 0x12e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e055dd0 '__SVInt32_t'
|-TypedefDecl 0x12e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e055df0 '__SVInt64_t'
|-TypedefDecl 0x12e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e055e10 '__SVUint8_t'
|-TypedefDecl 0x12e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e055e30 '__SVUint16_t'
|-TypedefDecl 0x12e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e055e50 '__SVUint32_t'
|-TypedefDecl 0x12e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e055e70 '__SVUint64_t'
|-TypedefDecl 0x12e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e055e90 '__SVFloat16_t'
|-TypedefDecl 0x12e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e056390 '__SVBool_t'
|-TypedefDecl 0x12e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0563f0 '__SVCount_t'
|-TypedefDecl 0x12e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-TypedefDecl 0x12e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-FunctionDecl 0x12e128318 <dataset_diviso_filec/func9774_vuln.c:1:1, line:53:1> line:1:1 invalid is_ip_address 'int (const char *, short, int *)'
| |-ParmVarDecl 0x12e1280d8 <line:2:2, col:15> col:15 used host 'const char *'
| |-ParmVarDecl 0x12e128170 <line:3:2, col:11> col:11 used af 'short'
| |-ParmVarDecl 0x12e128228 <line:4:2, col:15> col:15 invalid addr 'int *'
| `-CompoundStmt 0x12e143a58 <line:6:1, line:53:1>
|   |-DeclStmt 0x12e8083b8 <line:7:2, col:20>
|   | |-RecordDecl 0x12e1283d8 <col:2, col:9> col:9 struct in_addr
|   | `-VarDecl 0x12e1284d8 <col:2, col:17> col:17 invalid in4 'struct in_addr'
|   |-DeclStmt 0x12e808548 <line:8:2, col:23>
|   | |-RecordDecl 0x12e8083d0 <col:2, col:9> col:9 struct addrinfo
|   | `-VarDecl 0x12e8084c8 <col:2, col:18> col:18 referenced invalid hints 'struct addrinfo'
|   |-DeclStmt 0x12e808680 <line:9:2, col:25>
|   | `-VarDecl 0x12e808618 <col:2, col:19> col:19 used result 'struct addrinfo *'
|   |-DeclStmt 0x12e808888 <line:10:2, col:31>
|   | |-RecordDecl 0x12e808698 <col:2, col:9> col:9 struct sockaddr_in6
|   | `-VarDecl 0x12e808808 <col:2, col:23> col:23 used resaddr6 'struct sockaddr_in6 *'
|   |-DeclStmt 0x12e8089a8 <line:11:2, col:18>
|   | `-VarDecl 0x12e808940 <col:2, col:17> col:7 used tmpbuf 'char[128]'
|   |-DeclStmt 0x12e808a40 <line:12:2, col:11>
|   | `-VarDecl 0x12e8089d8 <col:2, col:8> col:8 used pch 'char *'
|   |-CallExpr 0x12e808c90 <line:14:2, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12e808bb0 <col:2> 'int ()' Function 0x12e808af8 'REQUIRE' 'int ()'
|   | `-BinaryOperator 0x12e808c70 <col:10, col:18> 'int' contains-errors '!='
|   |   |-DeclRefExpr 0x12e808bd0 <col:10> 'const char *' lvalue ParmVar 0x12e1280d8 'host' 'const char *'
|   |   `-RecoveryExpr 0x12e808c50 <col:18> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12e808d98 <line:15:2, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12e808cb8 <col:2> 'int ()' Function 0x12e808af8 'REQUIRE' 'int ()'
|   | `-BinaryOperator 0x12e808d78 <col:10, col:18> 'int' contains-errors '!='
|   |   |-RecoveryExpr 0x12e808cd8 <col:10> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x12e808d58 <col:18> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12e808ee0 <line:17:2, col:16> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12e808ea0 <col:2> 'int ()' Function 0x12e808de8 'ZERO_SOCK' 'int ()'
|   | `-RecoveryExpr 0x12e808ec0 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e140ef8 <line:20:2, line:26:3>
|   | |-BinaryOperator 0x12e809058 <line:20:6, col:36> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x12e808ff8 <col:6, col:19> 'int' contains-errors '=='
|   | | | |-RecoveryExpr 0x12e808fd8 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x12e808f20 <col:19> 'short' lvalue ParmVar 0x12e128170 'af' 'short'
|   | | `-BinaryOperator 0x12e809038 <col:25, col:36> 'int' contains-errors '=='
|   | |   |-RecoveryExpr 0x12e809018 <col:25> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12e808f78 <col:36> 'short' lvalue ParmVar 0x12e128170 'af' 'short'
|   | `-IfStmt 0x12e140ed8 <line:21:3, line:26:3>
|   |   |-BinaryOperator 0x12e140ad0 <line:21:7, col:41> 'int' contains-errors '=='
|   |   | |-CallExpr 0x12e140a98 <col:7, col:36> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x12e809158 <col:7> 'int ()' Function 0x12e8090a0 'inet_pton' 'int ()'
|   |   | | |-RecoveryExpr 0x12e140a78 <col:17> '<dependent type>' contains-errors lvalue
|   |   | | |-DeclRefExpr 0x12e809190 <col:26> 'const char *' lvalue ParmVar 0x12e1280d8 'host' 'const char *'
|   |   | | `-UnaryOperator 0x12e8091d0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | |   `-RecoveryExpr 0x12e8091b0 <col:33> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x12e140a38 <col:41> 'int' 1
|   |   `-CompoundStmt 0x12e140eb0 <col:44, line:26:3>
|   |     |-BinaryOperator 0x12e140c90 <line:22:4, col:15> '<dependent type>' contains-errors '='
|   |     | |-CallExpr 0x12e140c10 <col:4, col:11> '<dependent type>' contains-errors
|   |     | | |-DeclRefExpr 0x12e140bd0 <col:4> 'int ()' Function 0x12e140b18 'AF' 'int ()'
|   |     | | `-RecoveryExpr 0x12e140bf0 <col:7> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x12e140c70 <col:15> '<dependent type>' contains-errors lvalue
|   |     |-CallExpr 0x12e140e38 <line:23:4, col:31> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x12e140d90 <col:4> 'int ()' Function 0x12e140cd8 'SET_ADDR4N' 'int ()'
|   |     | |-RecoveryExpr 0x12e140db0 <col:15> '<dependent type>' contains-errors lvalue
|   |     | `-CXXDependentScopeMemberExpr 0x12e140df0 <col:21, col:25> '<dependent type>' contains-errors lvalue .s_addr
|   |     |   `-RecoveryExpr 0x12e140dd0 <col:21> '<dependent type>' contains-errors lvalue
|   |     `-ReturnStmt 0x12e140ea0 <line:25:4, col:11>
|   |       `-RecoveryExpr 0x12e140e80 <col:11> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x12e143a38 <line:28:2, line:50:3>
|     |-BinaryOperator 0x12e141068 <line:28:6, col:37> 'int' contains-errors '||'
|     | |-BinaryOperator 0x12e141008 <col:6, col:19> 'int' contains-errors '=='
|     | | |-RecoveryExpr 0x12e140fe8 <col:6> '<dependent type>' contains-errors lvalue
|     | | `-DeclRefExpr 0x12e140f30 <col:19> 'short' lvalue ParmVar 0x12e128170 'af' 'short'
|     | `-BinaryOperator 0x12e141048 <col:25, col:37> 'int' contains-errors '=='
|     |   |-RecoveryExpr 0x12e141028 <col:25> '<dependent type>' contains-errors lvalue
|     |   `-DeclRefExpr 0x12e140f88 <col:37> 'short' lvalue ParmVar 0x12e128170 'af' 'short'
|     `-IfStmt 0x12e143a18 <line:29:3, line:50:3>
|       |-BinaryOperator 0x12e141378 <line:29:7, col:35> 'int' '>'
|       | |-UnaryExprOrTypeTraitExpr 0x12e1410c8 <col:7, col:20> 'unsigned long' sizeof
|       | | `-ParenExpr 0x12e1410a8 <col:13, col:20> 'char[128]' lvalue
|       | |   `-DeclRefExpr 0x12e141088 <col:14> 'char[128]' lvalue Var 0x12e808940 'tmpbuf' 'char[128]' non_odr_use_unevaluated
|       | `-CallExpr 0x12e141338 <col:24, col:35> 'unsigned long'
|       |   |-ImplicitCastExpr 0x12e141320 <col:24> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x12e141298 <col:24> 'unsigned long (const char *)' Function 0x12e141128 'strlen' 'unsigned long (const char *)'
|       |   `-ImplicitCastExpr 0x12e141360 <col:31> 'const char *' <LValueToRValue>
|       |     `-DeclRefExpr 0x12e1412b8 <col:31> 'const char *' lvalue ParmVar 0x12e1280d8 'host' 'const char *'
|       `-CompoundStmt 0x12e1439f0 <col:38, line:50:3>
|         |-IfStmt 0x12e142dc8 <line:30:4, line:37:4> has_else
|         | |-BinaryOperator 0x12e141458 <line:30:8, col:21> 'int' '=='
|         | | |-CharacterLiteral 0x12e141398 <col:8> 'int' 91
|         | | `-ImplicitCastExpr 0x12e141440 <col:15, col:21> 'int' <IntegralCast>
|         | |   `-ImplicitCastExpr 0x12e141428 <col:15, col:21> 'char' <LValueToRValue>
|         | |     `-ArraySubscriptExpr 0x12e141408 <col:15, col:21> 'const char' lvalue
|         | |       |-ImplicitCastExpr 0x12e1413f0 <col:15> 'const char *' <LValueToRValue>
|         | |       | `-DeclRefExpr 0x12e1413b0 <col:15> 'const char *' lvalue ParmVar 0x12e1280d8 'host' 'const char *'
|         | |       `-IntegerLiteral 0x12e1413d0 <col:20> 'int' 0
|         | |-CompoundStmt 0x12e142c18 <col:24, line:35:4>
|         | | |-CallExpr 0x12e1418a8 <line:31:5, col:45> 'unsigned long'
|         | | | |-ImplicitCastExpr 0x12e141890 <col:5> 'unsigned long (*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
|         | | | | `-DeclRefExpr 0x12e141718 <col:5> 'unsigned long (char *, const char *, unsigned long)' Function 0x12e1414c8 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|         | | | |-ImplicitCastExpr 0x12e1418e0 <col:13> 'char *' <ArrayToPointerDecay>
|         | | | | `-DeclRefExpr 0x12e141738 <col:13> 'char[128]' lvalue Var 0x12e808940 'tmpbuf' 'char[128]'
|         | | | |-UnaryOperator 0x12e1417d0 <col:21, col:28> 'const char *' prefix '&' cannot overflow
|         | | | | `-ArraySubscriptExpr 0x12e1417b0 <col:22, col:28> 'const char' lvalue
|         | | | |   |-ImplicitCastExpr 0x12e141798 <col:22> 'const char *' <LValueToRValue>
|         | | | |   | `-DeclRefExpr 0x12e141758 <col:22> 'const char *' lvalue ParmVar 0x12e1280d8 'host' 'const char *'
|         | | | |   `-IntegerLiteral 0x12e141778 <col:27> 'int' 1
|         | | | `-UnaryExprOrTypeTraitExpr 0x12e141828 <col:31, col:44> 'unsigned long' sizeof
|         | | |   `-ParenExpr 0x12e141808 <col:37, col:44> 'char[128]' lvalue
|         | | |     `-DeclRefExpr 0x12e1417e8 <col:38> 'char[128]' lvalue Var 0x12e808940 'tmpbuf' 'char[128]' non_odr_use_unevaluated
|         | | |-BinaryOperator 0x12e142af8 <line:32:5, col:29> 'char *' '='
|         | | | |-DeclRefExpr 0x12e1418f8 <col:5> 'char *' lvalue Var 0x12e8089d8 'pch' 'char *'
|         | | | `-CallExpr 0x12e142a98 <col:11, col:29> 'char *'
|         | | |   |-ImplicitCastExpr 0x12e142a80 <col:11> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|         | | |   | `-DeclRefExpr 0x12e1429e0 <col:11> 'char *(const char *, int)' Function 0x12e142800 'strchr' 'char *(const char *, int)'
|         | | |   |-ImplicitCastExpr 0x12e142ae0 <col:18> 'const char *' <NoOp>
|         | | |   | `-ImplicitCastExpr 0x12e142ac8 <col:18> 'char *' <ArrayToPointerDecay>
|         | | |   |   `-DeclRefExpr 0x12e142a00 <col:18> 'char[128]' lvalue Var 0x12e808940 'tmpbuf' 'char[128]'
|         | | |   `-CharacterLiteral 0x12e142a20 <col:26> 'int' 93
|         | | `-IfStmt 0x12e142bf8 <line:33:5, line:34:13>
|         | |   |-RecoveryExpr 0x12e142b38 <line:33:9, col:16> '_Bool' contains-errors
|         | |   `-BinaryOperator 0x12e142bd8 <line:34:6, col:13> 'char' '='
|         | |     |-UnaryOperator 0x12e142b90 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|         | |     | `-ImplicitCastExpr 0x12e142b78 <col:7> 'char *' <LValueToRValue>
|         | |     |   `-DeclRefExpr 0x12e142b58 <col:7> 'char *' lvalue Var 0x12e8089d8 'pch' 'char *'
|         | |     `-ImplicitCastExpr 0x12e142bc0 <col:13> 'char' <IntegralCast>
|         | |       `-CharacterLiteral 0x12e142ba8 <col:13> 'int' 0
|         | `-CompoundStmt 0x12e142db0 <line:35:11, line:37:4>
|         |   `-CallExpr 0x12e142d48 <line:36:5, col:41> 'unsigned long'
|         |     |-ImplicitCastExpr 0x12e142d30 <col:5> 'unsigned long (*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
|         |     | `-DeclRefExpr 0x12e142c40 <col:5> 'unsigned long (char *, const char *, unsigned long)' Function 0x12e1414c8 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|         |     |-ImplicitCastExpr 0x12e142d80 <col:13> 'char *' <ArrayToPointerDecay>
|         |     | `-DeclRefExpr 0x12e142c60 <col:13> 'char[128]' lvalue Var 0x12e808940 'tmpbuf' 'char[128]'
|         |     |-ImplicitCastExpr 0x12e142d98 <col:21> 'const char *' <LValueToRValue>
|         |     | `-DeclRefExpr 0x12e142c80 <col:21> 'const char *' lvalue ParmVar 0x12e1280d8 'host' 'const char *'
|         |     `-UnaryExprOrTypeTraitExpr 0x12e142ce0 <col:27, col:40> 'unsigned long' sizeof
|         |       `-ParenExpr 0x12e142cc0 <col:33, col:40> 'char[128]' lvalue
|         |         `-DeclRefExpr 0x12e142ca0 <col:34> 'char[128]' lvalue Var 0x12e808940 'tmpbuf' 'char[128]' non_odr_use_unevaluated
|         |-CallExpr 0x12e142f18 <line:38:4, col:14> '<dependent type>' contains-errors
|         | |-DeclRefExpr 0x12e142ed8 <col:4> 'int ()' Function 0x12e142e20 'ZERO' 'int ()'
|         | `-RecoveryExpr 0x12e142ef8 <col:9> '<dependent type>' contains-errors lvalue
|         `-IfStmt 0x12e1439d0 <line:41:4, line:49:4>
|           |-RecoveryExpr 0x12e143278 <line:41:8, col:54> '_Bool' contains-errors
|           `-CompoundStmt 0x12e1439a8 <col:57, line:49:4>
|             |-CallExpr 0x12e143600 <line:44:5, col:41> '<dependent type>' contains-errors
|             | |-DeclRefExpr 0x12e143560 <col:5> 'int ()' Function 0x12e1434a8 'SET_ADDR6N' 'int ()'
|             | |-RecoveryExpr 0x12e143580 <col:16> '<dependent type>' contains-errors lvalue
|             | `-RecoveryExpr 0x12e1435d8 <col:22, col:32> '<dependent type>' contains-errors lvalue
|             |   `-DeclRefExpr 0x12e1435a0 <col:22> 'struct sockaddr_in6 *' lvalue Var 0x12e808808 'resaddr6' 'struct sockaddr_in6 *'
|             |-CallExpr 0x12e1437b0 <line:45:5, col:44> '<dependent type>' contains-errors
|             | |-DeclRefExpr 0x12e143710 <col:5> 'int ()' Function 0x12e143658 'SET_SCOPE' 'int ()'
|             | |-RecoveryExpr 0x12e143730 <col:15> '<dependent type>' contains-errors lvalue
|             | `-RecoveryExpr 0x12e143788 <col:21, col:31> '<dependent type>' contains-errors lvalue
|             |   `-DeclRefExpr 0x12e143750 <col:21> 'struct sockaddr_in6 *' lvalue Var 0x12e808808 'resaddr6' 'struct sockaddr_in6 *'
|             `-CallExpr 0x12e143968 <line:47:5, col:24> 'int'
|               |-ImplicitCastExpr 0x12e143950 <col:5> 'int (*)()' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x12e1438e0 <col:5> 'int ()' Function 0x12e143828 'freeaddrinfo' 'int ()'
|               `-ImplicitCastExpr 0x12e143990 <col:18> 'struct addrinfo *' <LValueToRValue>
|                 `-DeclRefExpr 0x12e143900 <col:18> 'struct addrinfo *' lvalue Var 0x12e808618 'result' 'struct addrinfo *'
|-FunctionDecl 0x12e141128 <line:29:24> col:24 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x12e141228 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12e1411d0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x12e1414c8 <line:31:5> col:5 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x12e1415c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12e141630 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12e141698 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12e141570 <<invalid sloc>> Implicit 969
`-FunctionDecl 0x12e142800 <line:32:11> col:11 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x12e142900 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12e142968 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12e1428a8 <<invalid sloc>> Implicit 893
