TranslationUnitDecl 0x121029008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x121029eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1210295d0 '__int128'
|-TypedefDecl 0x121029f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1210295f0 'unsigned __int128'
|-TypedefDecl 0x1210fa430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1210fa200 'struct __NSConstantString_tag'
|   `-Record 0x121029f80 '__NSConstantString_tag'
|-TypedefDecl 0x1210fa498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x121029790 '__SVInt8_t'
|-TypedefDecl 0x1210fa500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1210297b0 '__SVInt16_t'
|-TypedefDecl 0x1210fa568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1210297d0 '__SVInt32_t'
|-TypedefDecl 0x1210fa5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1210297f0 '__SVInt64_t'
|-TypedefDecl 0x1210fa638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x121029810 '__SVUint8_t'
|-TypedefDecl 0x1210fa6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x121029830 '__SVUint16_t'
|-TypedefDecl 0x1210fa708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x121029850 '__SVUint32_t'
|-TypedefDecl 0x1210fa770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x121029870 '__SVUint64_t'
|-TypedefDecl 0x1210fa7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x121029890 '__SVFloat16_t'
|-TypedefDecl 0x1210fa840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1210298b0 '__SVFloat32_t'
|-TypedefDecl 0x1210fa8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1210298d0 '__SVFloat64_t'
|-TypedefDecl 0x1210fa910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1210298f0 '__SVBfloat16_t'
|-TypedefDecl 0x1210fa978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x121029910 '__clang_svint8x2_t'
|-TypedefDecl 0x1210fa9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x121029930 '__clang_svint16x2_t'
|-TypedefDecl 0x1210faa48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x121029950 '__clang_svint32x2_t'
|-TypedefDecl 0x1210faab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x121029970 '__clang_svint64x2_t'
|-TypedefDecl 0x1210fab18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x121029990 '__clang_svuint8x2_t'
|-TypedefDecl 0x1210fab80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1210299b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1210fabe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1210299d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1210fac50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1210299f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1210facb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x121029a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1210fad20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x121029a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1210fad88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x121029a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1210fadf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x121029a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1210fae58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x121029a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1210faec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x121029ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x1210faf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x121029ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x1210faf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x121029af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1210faff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x121029b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1210fb060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x121029b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1210fb0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x121029b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1210fb130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x121029b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1210fb198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x121029b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1210fba00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x121029bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1210fba68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x121029bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1210fbad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x121029bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1210fbb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x121029c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1210fbba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x121029c30 '__clang_svint16x4_t'
|-TypedefDecl 0x1210fbc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x121029c50 '__clang_svint32x4_t'
|-TypedefDecl 0x1210fbc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x121029c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1210fbcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x121029c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1210fbd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x121029cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1210fbda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x121029cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1210fbe10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x121029cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1210fbe78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x121029d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1210fbee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x121029d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1210fbf48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x121029d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1210fbfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x121029d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1210fc018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x121029d90 '__SVBool_t'
|-TypedefDecl 0x1210fc080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x121029db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1210fc0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x121029dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1210fc150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x121029df0 '__SVCount_t'
|-TypedefDecl 0x1210fc1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1210fc1b0 'char *'
|   `-BuiltinType 0x1210290b0 'char'
|-TypedefDecl 0x1210fc268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1210fc1b0 'char *'
|   `-BuiltinType 0x1210290b0 'char'
|-FunctionDecl 0x121118f58 <dataset_diviso_filec/func15841_vuln.c:1:1, line:60:1> line:1:12 autosieve_createfolder 'int (const char *, const struct auth_state *, const char *, int)' static
| |-ParmVarDecl 0x1210fc2d8 <col:35, col:47> col:47 used userid 'const char *'
| |-ParmVarDecl 0x1210fc8c8 <col:55, col:80> col:80 used auth_state 'const struct auth_state *'
| |-ParmVarDecl 0x1210fc948 <line:2:35, col:47> col:47 used internalname 'const char *'
| |-ParmVarDecl 0x121118e00 <col:61, col:65> col:65 used createsievefolder 'int'
| `-CompoundStmt 0x122009a80 <line:3:1, line:60:1>
|   |-DeclStmt 0x1211190e8 <line:4:5, col:22>
|   | `-VarDecl 0x121119080 <col:5, col:17> col:17 used subf 'const char *'
|   |-DeclStmt 0x1211191a0 <line:5:5, col:14>
|   | `-VarDecl 0x121119118 <col:5, col:13> col:9 used r 'int' cinit
|   |   `-IntegerLiteral 0x121119180 <col:13> 'int' 0
|   |-DeclStmt 0x121119238 <line:6:5, col:10>
|   | `-VarDecl 0x1211191d0 <col:5, col:9> col:9 used n 'int'
|   |-IfStmt 0x121119420 <line:9:5, line:10:16>
|   | |-BinaryOperator 0x1211193b8 <line:9:9, col:43> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x121119358 <col:9, col:19> 'int' contains-errors '=='
|   | | | |-DeclRefExpr 0x121119250 <col:9> 'const char *' lvalue ParmVar 0x1210fc2d8 'userid' 'const char *'
|   | | | `-RecoveryExpr 0x121119338 <col:19> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x121119398 <col:27, col:43> 'int' contains-errors '=='
|   | |   |-DeclRefExpr 0x1211192c0 <col:27> 'const char *' lvalue ParmVar 0x1210fc948 'internalname' 'const char *'
|   | |   `-RecoveryExpr 0x121119378 <col:43> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x121119410 <line:10:9, col:16>
|   |   `-RecoveryExpr 0x1211193f0 <col:16> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x121119690 <line:12:5, line:13:32> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x121119550 <line:12:5> 'int ()' Function 0x121119498 'syslog' 'int ()'
|   | |-RecoveryExpr 0x121119670 <col:12> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x1211195d0 <col:23> 'char[4]' lvalue "STR"
|   | |-DeclRefExpr 0x1211195f0 <line:13:12> 'const char *' lvalue ParmVar 0x1210fc2d8 'userid' 'const char *'
|   | `-DeclRefExpr 0x121119610 <col:20> 'const char *' lvalue ParmVar 0x1210fc948 'internalname' 'const char *'
|   |-IfStmt 0x12111b198 <line:15:5, line:33:5> has_else
|   | |-CallExpr 0x121119830 <line:15:9, col:48> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x1211197b0 <col:9> 'int ()' Function 0x1211196f8 'config_getswitch' 'int ()'
|   | | `-RecoveryExpr 0x121119810 <col:26> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x1211198b8 <col:51, line:17:5>
|   | | `-BinaryOperator 0x121119898 <line:16:9, col:29> 'int' '='
|   | |   |-DeclRefExpr 0x121119858 <col:9> 'int' lvalue ParmVar 0x121118e00 'createsievefolder' 'int'
|   | |   `-IntegerLiteral 0x121119878 <col:29> 'int' 1
|   | `-IfStmt 0x12111b178 <line:18:10, line:33:5>
|   |   |-RecoveryExpr 0x121119a68 <line:18:14, col:77> '_Bool' contains-errors
|   |   `-CompoundStmt 0x12111b160 <col:83, line:33:5>
|   |     `-ForStmt 0x12111b028 <line:21:9, line:30:9>
|   |       |-BinaryOperator 0x121119c68 <line:21:14, col:18> 'int' '='
|   |       | |-DeclRefExpr 0x121119c28 <col:14> 'int' lvalue Var 0x1211191d0 'n' 'int'
|   |       | `-IntegerLiteral 0x121119c48 <col:18> 'int' 0
|   |       |-<<<NULL>>>
|   |       |-BinaryOperator 0x121119d90 <col:21, col:33> 'int' contains-errors '<'
|   |       | |-DeclRefExpr 0x121119c88 <col:21> 'int' lvalue Var 0x1211191d0 'n' 'int'
|   |       | `-CXXDependentScopeMemberExpr 0x121119d48 <col:25, col:33> '<dependent type>' contains-errors lvalue ->count
|   |       |   `-RecoveryExpr 0x121119d28 <col:25> '<dependent type>' contains-errors lvalue
|   |       |-UnaryOperator 0x121119dd0 <col:40, col:41> 'int' postfix '++'
|   |       | `-DeclRefExpr 0x121119db0 <col:40> 'int' lvalue Var 0x1211191d0 'n' 'int'
|   |       `-CompoundStmt 0x12111aff0 <col:45, line:30:9>
|   |         |-DeclStmt 0x12111a620 <line:22:13, col:55>
|   |         | `-VarDecl 0x12111a400 <col:13, col:54> col:25 used name 'const char *' cinit
|   |         |   `-CallExpr 0x12111a5f0 <col:32, col:54> '<dependent type>' contains-errors
|   |         |     |-DeclRefExpr 0x12111a548 <col:32> 'int ()' Function 0x12111a490 'strarray_nth' 'int ()'
|   |         |     |-RecoveryExpr 0x12111a5d0 <col:45> '<dependent type>' contains-errors lvalue
|   |         |     `-DeclRefExpr 0x12111a580 <col:53> 'int' lvalue Var 0x1211191d0 'n' 'int'
|   |         |-DeclStmt 0x12111a8c0 <line:23:13, col:64>
|   |         | `-VarDecl 0x12111a650 <col:13, col:63> col:19 used foldername 'char *' cinit
|   |         |   `-ImplicitCastExpr 0x12111a8a8 <col:32, col:63> 'char *' contains-errors <IntegralToPointer>
|   |         |     `-CallExpr 0x12111a848 <col:32, col:63> 'int' contains-errors
|   |         |       |-ImplicitCastExpr 0x12111a830 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |         |       | `-DeclRefExpr 0x12111a798 <col:32> 'int ()' Function 0x12111a6e0 'mboxname_user_mbox' 'int ()'
|   |         |       |-ImplicitCastExpr 0x12111a878 <col:51> 'const char *' <LValueToRValue>
|   |         |       | `-DeclRefExpr 0x12111a7b8 <col:51> 'const char *' lvalue ParmVar 0x1210fc2d8 'userid' 'const char *'
|   |         |       `-ImplicitCastExpr 0x12111a890 <col:59> 'const char *' contains-errors <LValueToRValue>
|   |         |         `-DeclRefExpr 0x12111a7d8 <col:59> 'const char *' contains-errors lvalue Var 0x12111a400 'name' 'const char *'
|   |         |-IfStmt 0x12111acc8 <line:25:13, line:26:37>
|   |         | |-UnaryOperator 0x12111ac50 <line:25:17, col:49> 'int' contains-errors prefix '!' cannot overflow
|   |         | | `-CallExpr 0x12111abd8 <col:18, col:49> 'int' contains-errors
|   |         | |   |-ImplicitCastExpr 0x12111abc0 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |         | |   | `-DeclRefExpr 0x12111ab00 <col:18> 'int (const char *, const char *)' Function 0x12111a920 'strcmp' 'int (const char *, const char *)'
|   |         | |   |-ImplicitCastExpr 0x12111ac20 <col:25> 'const char *' contains-errors <NoOp>
|   |         | |   | `-ImplicitCastExpr 0x12111ac08 <col:25> 'char *' contains-errors <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x12111ab20 <col:25> 'char *' contains-errors lvalue Var 0x12111a650 'foldername' 'char *'
|   |         | |   `-ImplicitCastExpr 0x12111ac38 <col:37> 'const char *' <LValueToRValue>
|   |         | |     `-DeclRefExpr 0x12111ab40 <col:37> 'const char *' lvalue ParmVar 0x1210fc948 'internalname' 'const char *'
|   |         | `-BinaryOperator 0x12111aca8 <line:26:17, col:37> 'int' '='
|   |         |   |-DeclRefExpr 0x12111ac68 <col:17> 'int' lvalue ParmVar 0x121118e00 'createsievefolder' 'int'
|   |         |   `-IntegerLiteral 0x12111ac88 <col:37> 'int' 1
|   |         |-CallExpr 0x12111af38 <line:28:13, col:28> 'void' contains-errors
|   |         | |-ImplicitCastExpr 0x12111af20 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   |         | | `-DeclRefExpr 0x12111ae98 <col:13> 'void (void *)' Function 0x12111ad28 'free' 'void (void *)'
|   |         | `-ImplicitCastExpr 0x12111af78 <col:18> 'void *' contains-errors <BitCast>
|   |         |   `-ImplicitCastExpr 0x12111af60 <col:18> 'char *' contains-errors <LValueToRValue>
|   |         |     `-DeclRefExpr 0x12111aeb8 <col:18> 'char *' contains-errors lvalue Var 0x12111a650 'foldername' 'char *'
|   |         `-IfStmt 0x12111afd0 <line:29:13, col:36>
|   |           |-ImplicitCastExpr 0x12111afb0 <col:17> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x12111af90 <col:17> 'int' lvalue ParmVar 0x121118e00 'createsievefolder' 'int'
|   |           `-BreakStmt 0x12111afc8 <col:36>
|   |-DeclStmt 0x122008da8 <line:39:5, col:78>
|   | |-RecordDecl 0x12111b218 <col:5, col:12> col:12 struct mboxlock
|   | `-VarDecl 0x12111b388 <col:5, col:77> col:22 used namespacelock 'struct mboxlock *' cinit
|   |   `-ImplicitCastExpr 0x122008d78 <col:38, col:77> 'struct mboxlock *' <IntegralToPointer>
|   |     `-CallExpr 0x122008d38 <col:38, col:77> 'int'
|   |       |-ImplicitCastExpr 0x122008d20 <col:38> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x122008ce0 <col:38> 'int ()' Function 0x122008c28 'mboxname_usernamespacelock' 'int ()'
|   |       `-ImplicitCastExpr 0x122008d60 <col:65> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x122008d00 <col:65> 'const char *' lvalue ParmVar 0x1210fc948 'internalname' 'const char *'
|   |-BinaryOperator 0x122008fa8 <line:42:5, col:43> 'int' '='
|   | |-DeclRefExpr 0x122008dc0 <col:5> 'int' lvalue Var 0x121119118 'r' 'int'
|   | `-CallExpr 0x122008f58 <col:9, col:43> 'int'
|   |   |-ImplicitCastExpr 0x122008f40 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x122008ec0 <col:9> 'int ()' Function 0x122008e08 'mboxlist_lookup' 'int ()'
|   |   |-ImplicitCastExpr 0x122008f90 <col:25> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x122008ee0 <col:25> 'const char *' lvalue ParmVar 0x1210fc948 'internalname' 'const char *'
|   |   |-IntegerLiteral 0x122008f00 <col:39> 'int' 0
|   |   `-IntegerLiteral 0x122008f20 <col:42> 'int' 0
|   |-IfStmt 0x122009070 <line:43:5, col:45>
|   | |-RecoveryExpr 0x122008fe8 <col:9, col:14> '_Bool' contains-errors
|   | `-GotoStmt 0x122009058 <col:40, col:45> 'done' 0x122009008
|   |-IfStmt 0x122009530 <line:47:5, line:51:5>
|   | |-ImplicitCastExpr 0x1220092f0 <line:47:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1220092d0 <col:9> 'int' lvalue Var 0x121119118 'r' 'int'
|   | `-CompoundStmt 0x122009518 <col:12, line:51:5>
|   |   `-GotoStmt 0x122009500 <line:50:9, col:14> 'done' 0x122009008
|   |-CallExpr 0x122009728 <line:53:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x122009710 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x122009630 <col:5> 'int ()' Function 0x122009578 'mboxlist_changesub' 'int ()'
|   | |-ImplicitCastExpr 0x122009778 <col:24> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x122009650 <col:24> 'const char *' lvalue ParmVar 0x1210fc948 'internalname' 'const char *'
|   | |-ImplicitCastExpr 0x122009790 <col:38> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x122009670 <col:38> 'const char *' lvalue ParmVar 0x1210fc2d8 'userid' 'const char *'
|   | |-ImplicitCastExpr 0x1220097a8 <col:46> 'const struct auth_state *' <LValueToRValue>
|   | | `-DeclRefExpr 0x122009690 <col:46> 'const struct auth_state *' lvalue ParmVar 0x1210fc8c8 'auth_state' 'const struct auth_state *'
|   | |-IntegerLiteral 0x1220096b0 <col:58> 'int' 1
|   | |-IntegerLiteral 0x1220096d0 <col:61> 'int' 1
|   | `-IntegerLiteral 0x1220096f0 <col:64> 'int' 1
|   |-LabelStmt 0x122009a18 <line:57:1, line:58:36> 'done'
|   | `-CallExpr 0x1220099f0 <col:5, col:36> 'int'
|   |   |-ImplicitCastExpr 0x1220099d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x122009920 <col:5> 'int ()' Function 0x122009868 'mboxname_release' 'int ()'
|   |   `-UnaryOperator 0x1220099c0 <col:22, col:23> 'struct mboxlock **' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x122009940 <col:23> 'struct mboxlock *' lvalue Var 0x12111b388 'namespacelock' 'struct mboxlock *'
|   `-ReturnStmt 0x122009a70 <line:59:5, col:12>
|     `-ImplicitCastExpr 0x122009a58 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x122009a38 <col:12> 'int' lvalue Var 0x121119118 'r' 'int'
|-FunctionDecl 0x12111a920 <line:25:18> col:18 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x12111aa20 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12111aa88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12111a9c8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x12111ad28 <line:28:13> col:13 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12111ae28 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12111add0 <<invalid sloc>> Implicit 873
