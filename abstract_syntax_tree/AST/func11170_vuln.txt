TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x12380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12380bc00 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x12380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x12380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x12380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x12380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x12380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x12380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x12380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x12380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x12380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x12380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x12380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x12380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x12380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
`-FunctionDecl 0x12380dfa8 <dataset_diviso_filec/func11170_vuln.c:1:1, line:23:1> line:1:20 invalid realloc_buffer 'int *(int *, int *, int, int)' static
  |-ParmVarDecl 0x12380dd28 <col:35, col:48> col:48 invalid screen 'int *'
  |-ParmVarDecl 0x12380dda8 <col:56, col:68> col:68 invalid buffer 'int *'
  |-ParmVarDecl 0x12380de28 <col:76, col:80> col:80 used new_rows 'int'
  |-ParmVarDecl 0x12380dea8 <col:90, col:94> col:94 used new_cols 'int'
  `-CompoundStmt 0x123828900 <line:2:1, line:23:1>
    |-DeclStmt 0x12380e3d8 <line:4:3, col:15>
    | |-VarDecl 0x12380e2d8 <col:3, col:7> col:7 used row 'int'
    | `-VarDecl 0x12380e358 <col:3, col:12> col:12 used col 'int'
    |-ForStmt 0x123828680 <line:6:3, line:17:3>
    | |-BinaryOperator 0x123827840 <line:6:7, col:13> 'int' '='
    | | |-DeclRefExpr 0x123827800 <col:7> 'int' lvalue Var 0x12380e2d8 'row' 'int'
    | | `-IntegerLiteral 0x123827820 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1238278d0 <col:16, col:22> 'int' '<'
    | | |-ImplicitCastExpr 0x1238278a0 <col:16> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x123827860 <col:16> 'int' lvalue Var 0x12380e2d8 'row' 'int'
    | | `-ImplicitCastExpr 0x1238278b8 <col:22> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x123827880 <col:22> 'int' lvalue ParmVar 0x12380de28 'new_rows' 'int'
    | |-UnaryOperator 0x123827910 <col:32, col:35> 'int' postfix '++'
    | | `-DeclRefExpr 0x1238278f0 <col:32> 'int' lvalue Var 0x12380e2d8 'row' 'int'
    | `-CompoundStmt 0x123828668 <col:39, line:17:3>
    |   `-ForStmt 0x123828630 <line:7:5, line:16:5>
    |     |-BinaryOperator 0x123827968 <line:7:9, col:15> 'int' '='
    |     | |-DeclRefExpr 0x123827928 <col:9> 'int' lvalue Var 0x12380e358 'col' 'int'
    |     | `-IntegerLiteral 0x123827948 <col:15> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1238279f8 <col:18, col:24> 'int' '<'
    |     | |-ImplicitCastExpr 0x1238279c8 <col:18> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x123827988 <col:18> 'int' lvalue Var 0x12380e358 'col' 'int'
    |     | `-ImplicitCastExpr 0x1238279e0 <col:24> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1238279a8 <col:24> 'int' lvalue ParmVar 0x12380dea8 'new_cols' 'int'
    |     |-UnaryOperator 0x123827a38 <col:34, col:37> 'int' postfix '++'
    |     | `-DeclRefExpr 0x123827a18 <col:34> 'int' lvalue Var 0x12380e358 'col' 'int'
    |     `-CompoundStmt 0x123828618 <col:41, line:16:5>
    |       `-IfStmt 0x1238285e8 <line:10:7, line:15:7> has_else
    |         |-BinaryOperator 0x123827d20 <line:10:10, col:56> 'int' contains-errors '&&'
    |         | |-BinaryOperator 0x123827c58 <col:10, col:34> 'int' contains-errors '&&'
    |         | | |-RecoveryExpr 0x123827b90 <col:10> '<dependent type>' contains-errors lvalue
    |         | | `-BinaryOperator 0x123827c38 <col:20, col:34> 'int' contains-errors '<'
    |         | |   |-DeclRefExpr 0x123827bb0 <col:20> 'int' lvalue Var 0x12380e2d8 'row' 'int'
    |         | |   `-CXXDependentScopeMemberExpr 0x123827bf0 <col:26, col:34> '<dependent type>' contains-errors lvalue ->rows
    |         | |     `-RecoveryExpr 0x123827bd0 <col:26> '<dependent type>' contains-errors lvalue
    |         | `-BinaryOperator 0x123827d00 <col:42, col:56> 'int' contains-errors '<'
    |         |   |-DeclRefExpr 0x123827c78 <col:42> 'int' lvalue Var 0x12380e358 'col' 'int'
    |         |   `-CXXDependentScopeMemberExpr 0x123827cb8 <col:48, col:56> '<dependent type>' contains-errors lvalue ->cols
    |         |     `-RecoveryExpr 0x123827c98 <col:48> '<dependent type>' contains-errors lvalue
    |         |-BinaryOperator 0x123827fa8 <line:11:9, col:52> '<dependent type>' contains-errors '='
    |         | |-UnaryOperator 0x123827f58 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |         | | `-ImplicitCastExpr 0x123827f40 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |         | |   `-RecoveryExpr 0x123827f20 <col:10> '<dependent type>' contains-errors lvalue
    |         | `-ArraySubscriptExpr 0x123827f88 <col:21, col:52> '<dependent type>' contains-errors lvalue
    |         |   |-ImplicitCastExpr 0x123827f70 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    |         |   | `-RecoveryExpr 0x123827d88 <col:21> '<dependent type>' contains-errors lvalue
    |         |   `-BinaryOperator 0x123827e70 <col:28, col:49> '<dependent type>' contains-errors '+'
    |         |     |-BinaryOperator 0x123827e30 <col:28, col:42> '<dependent type>' contains-errors '*'
    |         |     | |-DeclRefExpr 0x123827da8 <col:28> 'int' lvalue Var 0x12380e2d8 'row' 'int'
    |         |     | `-CXXDependentScopeMemberExpr 0x123827de8 <col:34, col:42> '<dependent type>' contains-errors lvalue ->cols
    |         |     |   `-RecoveryExpr 0x123827dc8 <col:34> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x123827e50 <col:49> 'int' lvalue Var 0x12380e358 'col' 'int'
    |         `-CompoundStmt 0x1238285c8 <line:12:12, line:15:7>
    |           |-BinaryOperator 0x1238284c0 <line:13:9, col:30> '<dependent type>' contains-errors '='
    |           | |-ArraySubscriptExpr 0x123828480 <col:9, col:26> '<dependent type>' contains-errors lvalue
    |           | | |-ImplicitCastExpr 0x123828468 <col:9, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |           | | | `-RecoveryExpr 0x123828420 <col:9, col:19> '<dependent type>' contains-errors lvalue
    |           | | |   `-DeclRefExpr 0x123827fc8 <col:9> 'int' lvalue ParmVar 0x12380dea8 'new_cols' 'int'
    |           | | `-IntegerLiteral 0x123828448 <col:25> 'int' 0
    |           | `-IntegerLiteral 0x1238284a0 <col:30> 'int' 0
    |           `-BinaryOperator 0x1238285a8 <line:14:9, col:33> '<dependent type>' contains-errors '='
    |             |-RecoveryExpr 0x123828518 <col:9, col:19> '<dependent type>' contains-errors lvalue
    |             | `-DeclRefExpr 0x1238284e0 <col:9> 'int' lvalue ParmVar 0x12380dea8 'new_cols' 'int'
    |             `-CXXDependentScopeMemberExpr 0x123828560 <col:25, col:33> '<dependent type>' contains-errors lvalue ->pen
    |               `-RecoveryExpr 0x123828540 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123828898 <line:19:3, line:20:44>
    | |-RecoveryExpr 0x1238286b8 <line:19:6> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x123828868 <line:20:5, col:44> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1238287b8 <col:5> 'int ()' Function 0x123828700 'vterm_allocator_free' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x123828800 <col:26, col:34> '<dependent type>' contains-errors lvalue ->vt
    |   | `-RecoveryExpr 0x1238287d8 <col:26> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x123828848 <col:38> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1238288f0 <line:22:3, col:10>
      `-RecoveryExpr 0x1238288d0 <col:10> '<dependent type>' contains-errors lvalue
