TranslationUnitDecl 0x14d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d855bd0 '__int128'
|-TypedefDecl 0x14d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d855bf0 'unsigned __int128'
|-TypedefDecl 0x14d926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d926000 'struct __NSConstantString_tag'
|   `-Record 0x14d856580 '__NSConstantString_tag'
|-TypedefDecl 0x14d926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d855d90 '__SVInt8_t'
|-TypedefDecl 0x14d926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d855db0 '__SVInt16_t'
|-TypedefDecl 0x14d926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d855dd0 '__SVInt32_t'
|-TypedefDecl 0x14d9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d855df0 '__SVInt64_t'
|-TypedefDecl 0x14d926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d855e10 '__SVUint8_t'
|-TypedefDecl 0x14d9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d855e30 '__SVUint16_t'
|-TypedefDecl 0x14d926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d855e50 '__SVUint32_t'
|-TypedefDecl 0x14d926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d855e70 '__SVUint64_t'
|-TypedefDecl 0x14d9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d855e90 '__SVFloat16_t'
|-TypedefDecl 0x14d926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d856390 '__SVBool_t'
|-TypedefDecl 0x14d927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d8563f0 '__SVCount_t'
|-TypedefDecl 0x14d927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d927fb0 'char *'
|   `-BuiltinType 0x14d8556b0 'char'
|-TypedefDecl 0x14d928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d927fb0 'char *'
|   `-BuiltinType 0x14d8556b0 'char'
`-FunctionDecl 0x14d940ea8 <dataset_diviso_filec/func19540_vuln.c:1:1, line:51:1> line:1:1 check_entry_size_and_hooks 'int (struct ipt_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)'
  |-ParmVarDecl 0x14d928648 <col:28, col:46> col:46 used e 'struct ipt_entry *'
  |-ParmVarDecl 0x14d940a28 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x14d940ad8 <line:3:7, col:28> col:28 used base 'const unsigned char *'
  |-ParmVarDecl 0x14d940b58 <line:4:7, col:28> col:28 used limit 'const unsigned char *'
  |-ParmVarDecl 0x14d940c08 <line:5:7, col:27> col:27 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x14d940c88 <line:6:7, col:27> col:27 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x14d940d08 <line:7:7, col:20> col:20 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x14d945e58 <line:8:1, line:51:1>
    |-DeclStmt 0x14d941050 <line:9:2, col:16>
    | `-VarDecl 0x14d940fe8 <col:2, col:15> col:15 used h 'unsigned int'
    |-DeclStmt 0x14d9410e8 <line:10:2, col:9>
    | `-VarDecl 0x14d941080 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x14d941770 <line:12:2, line:17:2>
    | |-RecoveryExpr 0x14d941410 <line:12:6, line:14:44> '_Bool' contains-errors
    | `-CompoundStmt 0x14d941750 <col:51, line:17:2>
    |   |-CallExpr 0x14d941648 <line:15:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x14d941630 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14d941560 <col:3> 'int ()' Function 0x14d9414a8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x14d941678 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x14d9415c0 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x14d941690 <col:19> 'struct ipt_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14d9415e0 <col:19> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'
    |   `-ReturnStmt 0x14d941740 <line:16:3, col:11>
    |     `-UnaryOperator 0x14d941728 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x14d941710 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x14d9416f0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d944500 <line:19:2, line:24:2>
    | |-RecoveryExpr 0x14d941908 <line:19:6, line:20:64> '_Bool' contains-errors
    | `-CompoundStmt 0x14d9444e0 <col:67, line:24:2>
    |   |-CallExpr 0x14d944400 <line:21:3, line:22:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d941928 <line:21:3> 'int ()' Function 0x14d9414a8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x14d941948 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x14d941968 <line:22:5> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'
    |   | `-RecoveryExpr 0x14d9419c0 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14d941988 <col:8> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'
    |   `-ReturnStmt 0x14d9444d0 <line:23:3, col:11>
    |     `-UnaryOperator 0x14d9444b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x14d9444a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x14d944480 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d9446b8 <line:26:2, col:21> 'int' '='
    | |-DeclRefExpr 0x14d944520 <col:2> 'int' lvalue Var 0x14d941080 'err' 'int'
    | `-CallExpr 0x14d944678 <col:8, col:21> 'int'
    |   |-ImplicitCastExpr 0x14d944660 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14d944620 <col:8> 'int ()' Function 0x14d944568 'check_entry' 'int ()'
    |   `-ImplicitCastExpr 0x14d9446a0 <col:20> 'struct ipt_entry *' <LValueToRValue>
    |     `-DeclRefExpr 0x14d944640 <col:20> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'
    |-IfStmt 0x14d944758 <line:27:2, line:28:10>
    | |-ImplicitCastExpr 0x14d9446f8 <line:27:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14d9446d8 <col:6> 'int' lvalue Var 0x14d941080 'err' 'int'
    | `-ReturnStmt 0x14d944748 <line:28:3, col:10>
    |   `-ImplicitCastExpr 0x14d944730 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14d944710 <col:10> 'int' lvalue Var 0x14d941080 'err' 'int'
    |-ForStmt 0x14d945b68 <line:31:2, line:45:2>
    | |-BinaryOperator 0x14d9447d0 <line:31:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x14d944778 <col:7> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x14d9447b8 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14d944798 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d944868 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14d9447f0 <col:14> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x14d944848 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14d9448a8 <col:36, col:37> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x14d944888 <col:36> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    | `-CompoundStmt 0x14d945b40 <col:41, line:45:2>
    |   |-IfStmt 0x14d944a08 <line:32:3, line:33:4>
    |   | |-UnaryOperator 0x14d9449e8 <line:32:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x14d9449c8 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x14d9449a8 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x14d944978 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x14d9448c0 <col:9> 'unsigned int' lvalue ParmVar 0x14d940d08 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x14d944990 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x14d944958 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x14d944938 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x14d9448e0 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x14d944920 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x14d944900 <col:29> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x14d944a00 <line:33:4>
    |   |-IfStmt 0x14d944d58 <line:34:3, line:35:43>
    |   | |-BinaryOperator 0x14d944bb8 <line:34:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x14d944ad8 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x14d944a78 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x14d944a60 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x14d944a28 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'
    |   | | | `-ImplicitCastExpr 0x14d944ac0 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x14d944aa0 <col:28> 'const unsigned char *' lvalue ParmVar 0x14d940ad8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x14d944ba0 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x14d944b88 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x14d944b68 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x14d944b38 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x14d944af8 <col:36> 'const unsigned int *' lvalue ParmVar 0x14d940c08 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x14d944b50 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x14d944b18 <col:49> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x14d944d38 <line:35:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x14d944c88 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x14d944c58 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x14d944c10 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x14d944bd8 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x14d940a28 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x14d944c70 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x14d944c38 <col:24> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x14d944d18 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x14d944ce8 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14d944ca8 <col:29> 'const unsigned int *' lvalue ParmVar 0x14d940c08 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x14d944d00 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14d944cc8 <col:42> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    |   `-IfStmt 0x14d945b20 <line:36:3, line:44:3>
    |     |-BinaryOperator 0x14d944f08 <line:36:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x14d944e28 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x14d944dc8 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x14d944db0 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x14d944d78 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'
    |     | | `-ImplicitCastExpr 0x14d944e10 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x14d944df0 <col:28> 'const unsigned char *' lvalue ParmVar 0x14d940ad8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x14d944ef0 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x14d944ed8 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x14d944eb8 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x14d944e88 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x14d944e48 <col:36> 'const unsigned int *' lvalue ParmVar 0x14d940c88 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x14d944ea0 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x14d944e68 <col:47> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    |     `-CompoundStmt 0x14d945b00 <col:51, line:44:3>
    |       |-IfStmt 0x14d945350 <line:37:4, line:42:4>
    |       | |-UnaryOperator 0x14d9450a0 <line:37:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x14d945060 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x14d945048 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x14d945008 <col:9> 'int ()' Function 0x14d944f50 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x14d945088 <col:25> 'struct ipt_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x14d945028 <col:25> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'
    |       | `-CompoundStmt 0x14d945330 <col:29, line:42:4>
    |       |   |-CallExpr 0x14d945248 <line:38:5, line:40:17> 'int'
    |       |   | |-ImplicitCastExpr 0x14d945230 <line:38:5> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x14d945198 <col:5> 'int ()' Function 0x14d9450e0 'pr_err' 'int ()'
    |       |   | `-ImplicitCastExpr 0x14d945270 <col:12, line:40:12> 'char *' <ArrayToPointerDecay>
    |       |   |   `-StringLiteral 0x14d945200 <line:38:12, line:40:12> 'char[10]' lvalue "STRSTRSTR"
    |       |   `-ReturnStmt 0x14d945320 <line:41:5, col:13>
    |       |     `-UnaryOperator 0x14d945308 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |       `-ImplicitCastExpr 0x14d9452f0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |         `-RecoveryExpr 0x14d9452d0 <col:13> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x14d945ae0 <line:43:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x14d945a30 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x14d945a00 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x14d9453a8 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x14d945370 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x14d940a28 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x14d945a18 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x14d9453d0 <col:23> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x14d945ac0 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x14d945a90 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x14d945a50 <col:28> 'const unsigned int *' lvalue ParmVar 0x14d940c88 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x14d945aa8 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x14d945a70 <col:39> 'unsigned int' lvalue Var 0x14d940fe8 'h' 'unsigned int'
    |-BinaryOperator 0x14d945e08 <line:49:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d945dc0 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d945d88 <col:2> 'struct ipt_entry *' lvalue ParmVar 0x14d928648 'e' 'struct ipt_entry *'
    | `-IntegerLiteral 0x14d945de8 <col:16> 'int' 0
    `-ReturnStmt 0x14d945e48 <line:50:2, col:9>
      `-IntegerLiteral 0x14d945e28 <col:9> 'int' 0
