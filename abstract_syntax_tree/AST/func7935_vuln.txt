TranslationUnitDecl 0x159828608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1598294b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x159828bd0 '__int128'
|-TypedefDecl 0x159829528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x159828bf0 'unsigned __int128'
|-TypedefDecl 0x15b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x159829580 '__NSConstantString_tag'
|-TypedefDecl 0x15b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x159828d90 '__SVInt8_t'
|-TypedefDecl 0x15b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x159828db0 '__SVInt16_t'
|-TypedefDecl 0x15b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x159828dd0 '__SVInt32_t'
|-TypedefDecl 0x15b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x159828df0 '__SVInt64_t'
|-TypedefDecl 0x15b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x159828e10 '__SVUint8_t'
|-TypedefDecl 0x15b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x159828e30 '__SVUint16_t'
|-TypedefDecl 0x15b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x159828e50 '__SVUint32_t'
|-TypedefDecl 0x15b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x159828e70 '__SVUint64_t'
|-TypedefDecl 0x15b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x159828e90 '__SVFloat16_t'
|-TypedefDecl 0x15b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x159828eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x159828ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x159828ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x159828f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x159828f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x159828f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x159828f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x159828f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x159828fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x159828fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x159828ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x159829010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x159829030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x159829050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x159829070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x159829090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1598290b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1598290d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1598290f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x159829110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x159829130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x159829150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x159829170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x159829190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1598291b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1598291d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1598291f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x159829210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x159829230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x159829250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x159829270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x159829290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1598292b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1598292d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1598292f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x159829310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x159829330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x159829350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x159829370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x159829390 '__SVBool_t'
|-TypedefDecl 0x15b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1598293b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1598293d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1598293f0 '__SVCount_t'
|-TypedefDecl 0x15b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b80dbb0 'char *'
|   `-BuiltinType 0x1598286b0 'char'
|-TypedefDecl 0x15b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b80dbb0 'char *'
|   `-BuiltinType 0x1598286b0 'char'
`-FunctionDecl 0x15b826988 <dataset_diviso_filec/func7935_vuln.c:1:1, line:63:1> line:1:22 arch_get_unmapped_area_common 'unsigned long (struct file *, unsigned long, unsigned long, unsigned long, unsigned long, enum mmap_allocation_direction)' static
  |-ParmVarDecl 0x15b80e248 <col:52, col:65> col:65 used filp 'struct file *'
  |-ParmVarDecl 0x15b80e2c8 <line:2:2, col:16> col:16 used addr0 'unsigned long'
  |-ParmVarDecl 0x15b80e348 <col:23, col:37> col:37 used len 'unsigned long'
  |-ParmVarDecl 0x15b826600 <col:42, col:56> col:56 used pgoff 'unsigned long'
  |-ParmVarDecl 0x15b826680 <line:3:2, col:16> col:16 used flags 'unsigned long'
  |-ParmVarDecl 0x15b826808 <col:23, col:54> col:54 invalid dir 'enum mmap_allocation_direction'
  `-CompoundStmt 0x14f81ec00 <line:4:1, line:63:1>
    |-DeclStmt 0x15b826d78 <line:5:2, col:36>
    | |-RecordDecl 0x15b826aa8 <col:2, col:9> col:9 struct mm_struct
    | `-VarDecl 0x15b826c18 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit
    |   `-CXXDependentScopeMemberExpr 0x15b826d18 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm
    |     `-RecoveryExpr 0x15b826cf8 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15b826f78 <line:6:2, col:28>
    | |-RecordDecl 0x15b826d90 <col:2, col:9> col:9 struct vm_area_struct
    | `-VarDecl 0x15b826ef8 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'
    |-DeclStmt 0x15b827048 <line:7:2, col:28>
    | `-VarDecl 0x15b826fa8 <col:2, col:23> col:16 used addr 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x15b827030 <col:23> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x15b827010 <col:23> 'unsigned long' lvalue ParmVar 0x15b80e2c8 'addr0' 'unsigned long'
    |-DeclStmt 0x15b8270e0 <line:8:2, col:20>
    | `-VarDecl 0x15b827078 <col:2, col:6> col:6 used do_color_align 'int'
    |-DeclStmt 0x15b827278 <line:9:2, col:35>
    | |-RecordDecl 0x15b8270f8 <col:2, col:9> col:9 struct vm_unmapped_area_info
    | `-VarDecl 0x15b8271f8 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'
    |-IfStmt 0x15b827550 <line:11:2, line:12:11>
    | |-CallExpr 0x15b827480 <line:11:6, col:30> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x15b8273a0 <col:6> 'int ()' Function 0x15b8272e8 'unlikely' 'int ()'
    | | `-BinaryOperator 0x15b827460 <col:15, col:21> 'int' contains-errors '>'
    | |   |-DeclRefExpr 0x15b8273c0 <col:15> 'unsigned long' lvalue ParmVar 0x15b80e348 'len' 'unsigned long'
    | |   `-RecoveryExpr 0x15b827440 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15b827540 <line:12:3, col:11>
    |   `-UnaryOperator 0x15b827528 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x15b827510 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x15b8274f0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15a025c20 <line:14:2, line:24:2>
    | |-BinaryOperator 0x15a025800 <line:14:6, col:14> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x15b827570 <col:6> 'unsigned long' lvalue ParmVar 0x15b826680 'flags' 'unsigned long'
    | | `-RecoveryExpr 0x15b8275c8 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a025bf8 <col:25, line:24:2>
    |   |-IfStmt 0x15a0259c0 <line:16:3, line:17:12>
    |   | |-BinaryOperator 0x15a0258f8 <line:16:7, col:25> 'int' contains-errors '<'
    |   | | |-BinaryOperator 0x15a0258d8 <col:7, col:19> '<dependent type>' contains-errors '-'
    |   | | | |-RecoveryExpr 0x15a0258b8 <col:7> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x15a025838 <col:19> 'unsigned long' lvalue ParmVar 0x15b80e348 'len' 'unsigned long'
    |   | | `-DeclRefExpr 0x15a025878 <col:25> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |   | `-ReturnStmt 0x15a0259b0 <line:17:4, col:12>
    |   |   `-UnaryOperator 0x15a025998 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x15a025980 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x15a025960 <col:12> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x15a025b90 <line:20:3, line:22:12>
    |   | |-RecoveryExpr 0x15a025ac8 <line:20:7, line:21:55> '_Bool' contains-errors
    |   | `-ReturnStmt 0x15a025b80 <line:22:4, col:12>
    |   |   `-UnaryOperator 0x15a025b68 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x15a025b50 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x15a025b30 <col:12> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x15a025be8 <line:23:3, col:10>
    |     `-ImplicitCastExpr 0x15a025bd0 <col:10> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x15a025bb0 <col:10> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |-BinaryOperator 0x15a025c80 <line:26:2, col:19> 'int' '='
    | |-DeclRefExpr 0x15a025c40 <col:2> 'int' lvalue Var 0x15b827078 'do_color_align' 'int'
    | `-IntegerLiteral 0x15a025c60 <col:19> 'int' 0
    |-IfStmt 0x15a025d98 <line:27:2, line:28:20>
    | |-RecoveryExpr 0x15a025d18 <line:27:6, col:33> '_Bool' contains-errors
    | `-BinaryOperator 0x15a025d78 <line:28:3, col:20> 'int' '='
    |   |-DeclRefExpr 0x15a025d38 <col:3> 'int' lvalue Var 0x15b827078 'do_color_align' 'int'
    |   `-IntegerLiteral 0x15a025d58 <col:20> 'int' 1
    |-IfStmt 0x14f81e190 <line:31:2, line:41:2>
    | |-ImplicitCastExpr 0x15a025dd8 <line:31:6> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x15a025db8 <col:6> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    | `-CompoundStmt 0x14f81e168 <col:12, line:41:2>
    |   |-IfStmt 0x15a026240 <line:32:3, line:35:26> has_else
    |   | |-ImplicitCastExpr 0x15a025e10 <line:32:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15a025df0 <col:7> 'int' lvalue Var 0x15b827078 'do_color_align' 'int'
    |   | |-BinaryOperator 0x15a026050 <line:33:4, col:35> 'unsigned long' '='
    |   | | |-DeclRefExpr 0x15a025e28 <col:4> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |   | | `-ImplicitCastExpr 0x15a026038 <col:11, col:35> 'unsigned long' <IntegralCast>
    |   | |   `-CallExpr 0x15a025fd8 <col:11, col:35> 'int'
    |   | |     |-ImplicitCastExpr 0x15a025fc0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x15a025f28 <col:11> 'int ()' Function 0x15a025e70 'COLOUR_ALIGN' 'int ()'
    |   | |     |-ImplicitCastExpr 0x15a026008 <col:24> 'unsigned long' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x15a025f48 <col:24> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |   | |     `-ImplicitCastExpr 0x15a026020 <col:30> 'unsigned long' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x15a025f68 <col:30> 'unsigned long' lvalue ParmVar 0x15b826600 'pgoff' 'unsigned long'
    |   | `-BinaryOperator 0x15a026220 <line:35:4, col:26> 'unsigned long' '='
    |   |   |-DeclRefExpr 0x15a026070 <col:4> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |   |   `-ImplicitCastExpr 0x15a026208 <col:11, col:26> 'unsigned long' <IntegralCast>
    |   |     `-CallExpr 0x15a0261c8 <col:11, col:26> 'int'
    |   |       |-ImplicitCastExpr 0x15a0261b0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x15a026170 <col:11> 'int ()' Function 0x15a0260b8 'PAGE_ALIGN' 'int ()'
    |   |       `-ImplicitCastExpr 0x15a0261f0 <col:22> 'unsigned long' <LValueToRValue>
    |   |         `-DeclRefExpr 0x15a026190 <col:22> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |   |-BinaryOperator 0x15a026460 <line:37:3, col:26> 'struct vm_area_struct *' contains-errors '='
    |   | |-DeclRefExpr 0x15a026270 <col:3> 'struct vm_area_struct *' lvalue Var 0x15b826ef8 'vma' 'struct vm_area_struct *'
    |   | `-ImplicitCastExpr 0x15a026448 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>
    |   |   `-CallExpr 0x15a0263e8 <col:9, col:26> 'int' contains-errors
    |   |     |-ImplicitCastExpr 0x15a0263d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x15a026370 <col:9> 'int ()' Function 0x15a0262b8 'find_vma' 'int ()'
    |   |     |-ImplicitCastExpr 0x15a026418 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x15a026390 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x15b826c18 'mm' 'struct mm_struct *'
    |   |     `-ImplicitCastExpr 0x15a026430 <col:22> 'unsigned long' <LValueToRValue>
    |   |       `-DeclRefExpr 0x15a0263b0 <col:22> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |   `-IfStmt 0x14f81e148 <line:38:3, line:40:11>
    |     |-BinaryOperator 0x14f81e0e0 <line:38:7, line:39:43> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x15a0267d8 <line:38:7, col:26> 'int' contains-errors '>='
    |     | | |-BinaryOperator 0x15a0267b8 <col:7, col:19> '<dependent type>' contains-errors '-'
    |     | | | |-RecoveryExpr 0x15a026798 <col:7> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x15a026498 <col:19> 'unsigned long' lvalue ParmVar 0x15b80e348 'len' 'unsigned long'
    |     | | `-DeclRefExpr 0x15a0264d8 <col:26> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |     | `-ParenExpr 0x14f81e0c0 <line:39:7, col:43> 'int' contains-errors
    |     |   `-BinaryOperator 0x14f81e0a0 <col:8, col:35> 'int' contains-errors '||'
    |     |     |-UnaryOperator 0x14f81e018 <col:8, col:9> 'int' prefix '!' cannot overflow
    |     |     | `-ImplicitCastExpr 0x14f81e000 <col:9> 'struct vm_area_struct *' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x15a026518 <col:9> 'struct vm_area_struct *' lvalue Var 0x15b826ef8 'vma' 'struct vm_area_struct *'
    |     |     `-BinaryOperator 0x14f81e080 <col:16, col:35> 'int' contains-errors '<='
    |     |       |-BinaryOperator 0x14f81e060 <col:16, col:23> 'unsigned long' '+'
    |     |       | |-ImplicitCastExpr 0x14f81e030 <col:16> 'unsigned long' <LValueToRValue>
    |     |       | | `-DeclRefExpr 0x15a026568 <col:16> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |     |       | `-ImplicitCastExpr 0x14f81e048 <col:23> 'unsigned long' <LValueToRValue>
    |     |       |   `-DeclRefExpr 0x15a026588 <col:23> 'unsigned long' lvalue ParmVar 0x15b80e348 'len' 'unsigned long'
    |     |       `-RecoveryExpr 0x15a026630 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |     |         `-DeclRefExpr 0x15a0265f8 <col:30> 'struct vm_area_struct *' lvalue Var 0x15b826ef8 'vma' 'struct vm_area_struct *'
    |     `-ReturnStmt 0x14f81e138 <line:40:4, col:11>
    |       `-ImplicitCastExpr 0x14f81e120 <col:11> 'unsigned long' <LValueToRValue>
    |         `-DeclRefExpr 0x14f81e100 <col:11> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |-BinaryOperator 0x14f81e260 <line:43:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14f81e1f8 <col:2, col:7> '<dependent type>' contains-errors lvalue .length
    | | `-RecoveryExpr 0x14f81e1d0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14f81e1b0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x15b8271f8 'info' 'struct vm_unmapped_area_info'
    | `-DeclRefExpr 0x14f81e240 <col:16> 'unsigned long' lvalue ParmVar 0x15b80e348 'len' 'unsigned long'
    |-IfStmt 0x14f81e8e0 <line:47:2, line:57:2>
    | |-RecoveryExpr 0x14f81e420 <line:47:6, col:13> '_Bool' contains-errors
    | `-CompoundStmt 0x14f81e8b8 <col:19, line:57:2>
    |   |-BinaryOperator 0x14f81e650 <line:50:3, col:25> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x14f81e5a8 <col:3, col:8> '<dependent type>' contains-errors lvalue .high_limit
    |   | | `-RecoveryExpr 0x14f81e580 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x14f81e560 <col:3> 'struct vm_unmapped_area_info' lvalue Var 0x15b8271f8 'info' 'struct vm_unmapped_area_info'
    |   | `-RecoveryExpr 0x14f81e628 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14f81e5f0 <col:21> 'struct mm_struct *' contains-errors lvalue Var 0x15b826c18 'mm' 'struct mm_struct *'
    |   |-BinaryOperator 0x14f81e7f0 <line:51:3, col:32> 'unsigned long' contains-errors '='
    |   | |-DeclRefExpr 0x14f81e670 <col:3> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |   | `-CallExpr 0x14f81e7c8 <col:10, col:32> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14f81e770 <col:10> 'int ()' Function 0x14f81e6b8 'vm_unmapped_area' 'int ()'
    |   |   `-UnaryOperator 0x14f81e7b0 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x14f81e790 <col:28> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x14f81e898 <line:53:3, line:54:11>
    |     |-RecoveryExpr 0x14f81e830 <line:53:7, col:26> '_Bool' contains-errors
    |     `-ReturnStmt 0x14f81e888 <line:54:4, col:11>
    |       `-ImplicitCastExpr 0x14f81e870 <col:11> 'unsigned long' <LValueToRValue>
    |         `-DeclRefExpr 0x14f81e850 <col:11> 'unsigned long' lvalue Var 0x15b826fa8 'addr' 'unsigned long'
    |-BinaryOperator 0x14f81e9b0 <line:59:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14f81e948 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x14f81e920 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14f81e900 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x15b8271f8 'info' 'struct vm_unmapped_area_info'
    | `-IntegerLiteral 0x14f81e990 <col:15> 'int' 0
    |-BinaryOperator 0x14f81eac0 <line:60:2, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14f81ea18 <col:2, col:7> '<dependent type>' contains-errors lvalue .low_limit
    | | `-RecoveryExpr 0x14f81e9f0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14f81e9d0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x15b8271f8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x14f81ea98 <col:19, col:23> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14f81ea60 <col:19> 'struct mm_struct *' contains-errors lvalue Var 0x15b826c18 'mm' 'struct mm_struct *'
    `-ReturnStmt 0x14f81ebf0 <line:62:2, col:31>
      `-CallExpr 0x14f81ebc8 <col:9, col:31> '<dependent type>' contains-errors
        |-DeclRefExpr 0x14f81eb70 <col:9> 'int ()' Function 0x14f81e6b8 'vm_unmapped_area' 'int ()'
        `-UnaryOperator 0x14f81ebb0 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x14f81eb90 <col:27> '<dependent type>' contains-errors lvalue
