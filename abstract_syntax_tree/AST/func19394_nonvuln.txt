TranslationUnitDecl 0x148855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1488564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148855bd0 '__int128'
|-TypedefDecl 0x148856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148855bf0 'unsigned __int128'
|-TypedefDecl 0x14900be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14900bc00 'struct __NSConstantString_tag'
|   `-Record 0x148856580 '__NSConstantString_tag'
|-TypedefDecl 0x14900be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148855d90 '__SVInt8_t'
|-TypedefDecl 0x14900bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148855db0 '__SVInt16_t'
|-TypedefDecl 0x14900bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148855dd0 '__SVInt32_t'
|-TypedefDecl 0x14900bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148855df0 '__SVInt64_t'
|-TypedefDecl 0x14900c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148855e10 '__SVUint8_t'
|-TypedefDecl 0x14900c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148855e30 '__SVUint16_t'
|-TypedefDecl 0x14900c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148855e50 '__SVUint32_t'
|-TypedefDecl 0x14900c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148855e70 '__SVUint64_t'
|-TypedefDecl 0x14900c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148855e90 '__SVFloat16_t'
|-TypedefDecl 0x14900c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14900c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14900c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14900c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14900c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14900c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14900c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14900c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14900c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14900c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14900c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14900c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14900c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14900c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14900c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14900c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14900c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1488560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14900c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1488560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14900c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1488560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14900c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14900ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14900cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14900cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14900cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14900d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1488561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14900d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1488561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14900d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1488561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14900d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14900d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14900d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14900d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14900d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14900d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1488562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14900d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1488562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14900d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1488562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14900d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14900d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14900d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14900d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14900da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148856390 '__SVBool_t'
|-TypedefDecl 0x14900da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1488563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14900dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1488563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14900db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1488563f0 '__SVCount_t'
|-TypedefDecl 0x14900dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
|-TypedefDecl 0x14900dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
`-FunctionDecl 0x14900ddf8 <dataset_diviso_filec/func19394_nonvuln.c:1:1, line:29:1> line:1:13 invalid only_ipaddrs_in_list 'int (const char **)' static
  |-ParmVarDecl 0x14900dd28 <col:34, col:47> col:47 used list 'const char **'
  `-CompoundStmt 0x149027db0 <line:2:1, line:29:1>
    |-IfStmt 0x14900df58 <line:5:2, line:7:2>
    | |-UnaryOperator 0x14900dee0 <line:5:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14900dec8 <col:7> 'const char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x14900dea8 <col:7> 'const char **' lvalue ParmVar 0x14900dd28 'list' 'const char **'
    | `-CompoundStmt 0x14900df40 <col:13, line:7:2>
    |   `-ReturnStmt 0x14900df30 <line:6:3, col:10>
    |     `-RecoveryExpr 0x14900df10 <col:10> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x149027d30 <line:9:2, line:26:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x14900dfc8 <line:9:9, col:10> 'const char *' <LValueToRValue>
    | | `-UnaryOperator 0x14900dfb0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x14900df98 <col:10> 'const char **' <LValueToRValue>
    | |     `-DeclRefExpr 0x14900df78 <col:10> 'const char **' lvalue ParmVar 0x14900dd28 'list' 'const char **'
    | |-UnaryOperator 0x14900e000 <col:17, col:21> 'const char **' postfix '++'
    | | `-DeclRefExpr 0x14900dfe0 <col:17> 'const char **' lvalue ParmVar 0x14900dd28 'list' 'const char **'
    | `-CompoundStmt 0x149027d10 <col:25, line:26:2>
    |   |-IfStmt 0x149027440 <line:11:3, line:14:3>
    |   | |-BinaryOperator 0x149027400 <line:11:7, line:12:28> 'int' '||'
    |   | | |-CallExpr 0x14900e288 <line:11:7, col:28> 'int'
    |   | | | |-ImplicitCastExpr 0x14900e270 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | | `-DeclRefExpr 0x14900e170 <col:7> 'int ()' Function 0x14900e0b8 'strequal' 'int ()'
    |   | | | |-ImplicitCastExpr 0x14900e2b8 <col:16, col:17> 'const char *' <LValueToRValue>
    |   | | | | `-UnaryOperator 0x14900e1c8 <col:16, col:17> 'const char *' lvalue prefix '*' cannot overflow
    |   | | | |   `-ImplicitCastExpr 0x14900e1b0 <col:17> 'const char **' <LValueToRValue>
    |   | | | |     `-DeclRefExpr 0x14900e190 <col:17> 'const char **' lvalue ParmVar 0x14900dd28 'list' 'const char **'
    |   | | | `-ImplicitCastExpr 0x14900e2d0 <col:23> 'char *' <ArrayToPointerDecay>
    |   | | |   `-StringLiteral 0x14900e220 <col:23> 'char[4]' lvalue "STR"
    |   | | `-CallExpr 0x14900e390 <line:12:7, col:28> 'int'
    |   | |   |-ImplicitCastExpr 0x14900e378 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x14900e2e8 <col:7> 'int ()' Function 0x14900e0b8 'strequal' 'int ()'
    |   | |   |-ImplicitCastExpr 0x14900e3c0 <col:16, col:17> 'const char *' <LValueToRValue>
    |   | |   | `-UnaryOperator 0x14900e340 <col:16, col:17> 'const char *' lvalue prefix '*' cannot overflow
    |   | |   |   `-ImplicitCastExpr 0x14900e328 <col:17> 'const char **' <LValueToRValue>
    |   | |   |     `-DeclRefExpr 0x14900e308 <col:17> 'const char **' lvalue ParmVar 0x14900dd28 'list' 'const char **'
    |   | |   `-ImplicitCastExpr 0x14900e3d8 <col:23> 'char *' <ArrayToPointerDecay>
    |   | |     `-StringLiteral 0x14900e358 <col:23> 'char[4]' lvalue "STR"
    |   | `-CompoundStmt 0x149027428 <col:31, line:14:3>
    |   |   `-ContinueStmt 0x149027420 <line:13:4>
    |   `-IfStmt 0x149027cf0 <line:16:3, line:25:3>
    |     |-UnaryOperator 0x149027608 <line:16:7, col:26> 'int' prefix '!' cannot overflow
    |     | `-CallExpr 0x1490275c8 <col:8, col:26> 'int'
    |     |   |-ImplicitCastExpr 0x1490275b0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x149027540 <col:8> 'int ()' Function 0x149027488 'is_ipaddress' 'int ()'
    |     |   `-ImplicitCastExpr 0x1490275f0 <col:21, col:22> 'const char *' <LValueToRValue>
    |     |     `-UnaryOperator 0x149027598 <col:21, col:22> 'const char *' lvalue prefix '*' cannot overflow
    |     |       `-ImplicitCastExpr 0x149027580 <col:22> 'const char **' <LValueToRValue>
    |     |         `-DeclRefExpr 0x149027560 <col:22> 'const char **' lvalue ParmVar 0x14900dd28 'list' 'const char **'
    |     `-CompoundStmt 0x149027cd8 <col:29, line:25:3>
    |       `-IfStmt 0x149027cb8 <line:18:4, line:24:4>
    |         |-BinaryOperator 0x1490279c0 <line:18:8, col:34> 'int' contains-errors '=='
    |         | |-ParenExpr 0x149027980 <col:8, col:29> 'int'
    |         | | `-CallExpr 0x149027938 <col:9, col:28> 'int'
    |         | |   |-ImplicitCastExpr 0x149027920 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |         | |   | `-DeclRefExpr 0x149027700 <col:9> 'int ()' Function 0x149027648 'strchr_m' 'int ()'
    |         | |   |-ImplicitCastExpr 0x149027968 <col:18, col:19> 'const char *' <LValueToRValue>
    |         | |   | `-UnaryOperator 0x149027908 <col:18, col:19> 'const char *' lvalue prefix '*' cannot overflow
    |         | |   |   `-ImplicitCastExpr 0x1490278f0 <col:19> 'const char **' <LValueToRValue>
    |         | |   |     `-DeclRefExpr 0x149027720 <col:19> 'const char **' lvalue ParmVar 0x14900dd28 'list' 'const char **'
    |         | |   `-CharacterLiteral 0x149027770 <col:25> 'int' 47
    |         | `-RecoveryExpr 0x1490279a0 <col:34> '<dependent type>' contains-errors lvalue
    |         `-CompoundStmt 0x149027c98 <col:40, line:24:4>
    |           |-CallExpr 0x149027c60 <line:20:5, line:22:12> 'int'
    |           | |-ImplicitCastExpr 0x149027c48 <line:20:5> 'int (*)()' <FunctionToPointerDecay>
    |           | | `-DeclRefExpr 0x149027ad8 <col:5> 'int ()' Function 0x149027a20 'DEBUG' 'int ()'
    |           | |-IntegerLiteral 0x149027af8 <col:11> 'int' 3
    |           | `-ParenExpr 0x149027c28 <col:13, line:22:11> 'const char *'
    |           |   `-BinaryOperator 0x149027c08 <line:20:14, line:22:7> 'const char *' ','
    |           |     |-ImplicitCastExpr 0x149027bd8 <line:20:14, line:21:6> 'char *' <ArrayToPointerDecay>
    |           |     | `-StringLiteral 0x149027b60 <line:20:14, line:21:6> 'char[7]' lvalue "STRSTR"
    |           |     `-ImplicitCastExpr 0x149027bf0 <line:22:6, col:7> 'const char *' <LValueToRValue>
    |           |       `-UnaryOperator 0x149027bc0 <col:6, col:7> 'const char *' lvalue prefix '*' cannot overflow
    |           |         `-ImplicitCastExpr 0x149027ba8 <col:7> 'const char **' <LValueToRValue>
    |           |           `-DeclRefExpr 0x149027b88 <col:7> 'const char **' lvalue ParmVar 0x14900dd28 'list' 'const char **'
    |           `-BreakStmt 0x149027c90 <line:23:5>
    `-ReturnStmt 0x149027da0 <line:28:2, col:9>
      `-RecoveryExpr 0x149027d80 <col:9> '<dependent type>' contains-errors lvalue
