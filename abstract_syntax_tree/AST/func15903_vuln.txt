TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x127926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x127926000 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x127926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x127926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x127926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x1279263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x127926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x1279264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x127926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x127926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x1279265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x127926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1279266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x127926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x127926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1279267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x127926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1279268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x127926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x127926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1279269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x127926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x127926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x127926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x127926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x127926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x127926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x127926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x127926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x127926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x127926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x127926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x127926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x127926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x127926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x127927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x127927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1279278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x127927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1279279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x127927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x127927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x127927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x127927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x127927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x127927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x127927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x127927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x127927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x127927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x127927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x127927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x127927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x127927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x127927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x127928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-FunctionDecl 0x127928230 <dataset_diviso_filec/func15903_vuln.c:1:1, line:15:1> line:1:13 get_socket_name 'void (char *, int)' static
| |-ParmVarDecl 0x1279280d8 <col:30, col:36> col:36 used buf 'char *'
| |-ParmVarDecl 0x127928158 <col:41, col:45> col:45 used len 'int'
| `-CompoundStmt 0x127943190 <line:2:1, line:15:1>
|   |-DeclStmt 0x127941b90 <line:3:5, col:42>
|   | `-VarDecl 0x127928348 <col:5, col:41> col:11 used dpy 'char *' cinit
|   |   `-ImplicitCastExpr 0x127928728 <col:17, col:41> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x127928700 <col:17, col:41> 'int'
|   |       |-ImplicitCastExpr 0x1279286e8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1279284e0 <col:17> 'int ()' Function 0x127928428 'g_strdup' 'int ()'
|   |       `-CallExpr 0x1279286a8 <col:26, col:40> 'int'
|   |         |-ImplicitCastExpr 0x127928690 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x1279285e0 <col:26> 'int ()' Function 0x127928528 'g_getenv' 'int ()'
|   |         `-ImplicitCastExpr 0x1279286d0 <col:35> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x127928640 <col:35> 'char[4]' lvalue "STR"
|   |-IfStmt 0x127942478 <line:4:5, line:11:5>
|   | |-BinaryOperator 0x127941c60 <line:4:8, col:16> 'int' '&&'
|   | | |-ImplicitCastExpr 0x127941c18 <col:8> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x127941ba8 <col:8> 'char *' lvalue Var 0x127928348 'dpy' 'char *'
|   | | `-ImplicitCastExpr 0x127941c48 <col:15, col:16> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x127941c30 <col:15, col:16> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x127941c00 <col:15, col:16> 'char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x127941be8 <col:16> 'char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x127941bc8 <col:16> 'char *' lvalue Var 0x127928348 'dpy' 'char *'
|   | `-CompoundStmt 0x127942450 <line:5:5, line:11:5>
|   |   |-DeclStmt 0x127942038 <line:6:9, col:35>
|   |   | `-VarDecl 0x127941c98 <col:9, col:34> col:15 used p 'char *' cinit
|   |   |   `-CallExpr 0x127941fd8 <col:19, col:34> 'char *'
|   |   |     |-ImplicitCastExpr 0x127941fc0 <col:19> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x127941f20 <col:19> 'char *(const char *, int)' Function 0x127941d40 'strchr' 'char *(const char *, int)'
|   |   |     |-ImplicitCastExpr 0x127942020 <col:26> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x127942008 <col:26> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x127941f40 <col:26> 'char *' lvalue Var 0x127928348 'dpy' 'char *'
|   |   |     `-CharacterLiteral 0x127941f60 <col:31> 'int' 58
|   |   |-ForStmt 0x1279422f0 <line:7:9, line:8:15>
|   |   | |-UnaryOperator 0x127942070 <line:7:13, col:15> 'char *' prefix '++'
|   |   | | `-DeclRefExpr 0x127942050 <col:15> 'char *' lvalue Var 0x127941c98 'p' 'char *'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x127942298 <col:18, col:43> 'int' '&&'
|   |   | | |-BinaryOperator 0x1279421c0 <col:18, col:30> 'int' '&&'
|   |   | | | |-ImplicitCastExpr 0x1279421a8 <col:18, col:19> 'int' <IntegralCast>
|   |   | | | | `-ImplicitCastExpr 0x127942190 <col:18, col:19> 'char' <LValueToRValue>
|   |   | | | |   `-UnaryOperator 0x1279420c0 <col:18, col:19> 'char' lvalue prefix '*' cannot overflow
|   |   | | | |     `-ImplicitCastExpr 0x1279420a8 <col:19> 'char *' <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 0x127942088 <col:19> 'char *' lvalue Var 0x127941c98 'p' 'char *'
|   |   | | | `-BinaryOperator 0x127942170 <col:24, col:30> 'int' '!='
|   |   | | |   |-ImplicitCastExpr 0x127942158 <col:24, col:25> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x127942140 <col:24, col:25> 'char' <LValueToRValue>
|   |   | | |   |   `-UnaryOperator 0x127942110 <col:24, col:25> 'char' lvalue prefix '*' cannot overflow
|   |   | | |   |     `-ImplicitCastExpr 0x1279420f8 <col:25> 'char *' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x1279420d8 <col:25> 'char *' lvalue Var 0x127941c98 'p' 'char *'
|   |   | | |   `-CharacterLiteral 0x127942128 <col:30> 'int' 46
|   |   | | `-BinaryOperator 0x127942278 <col:37, col:43> 'int' '!='
|   |   | |   |-ImplicitCastExpr 0x127942260 <col:37, col:38> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x127942248 <col:37, col:38> 'char' <LValueToRValue>
|   |   | |   |   `-UnaryOperator 0x127942218 <col:37, col:38> 'char' lvalue prefix '*' cannot overflow
|   |   | |   |     `-ImplicitCastExpr 0x127942200 <col:38> 'char *' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1279421e0 <col:38> 'char *' lvalue Var 0x127941c98 'p' 'char *'
|   |   | |   `-CharacterLiteral 0x127942230 <col:43> 'int' 10
|   |   | |-<<<NULL>>>
|   |   | `-UnaryOperator 0x1279422d8 <line:8:13, col:15> 'char *' prefix '++'
|   |   |   `-DeclRefExpr 0x1279422b8 <col:15> 'char *' lvalue Var 0x127941c98 'p' 'char *'
|   |   `-IfStmt 0x127942430 <line:9:9, line:10:18>
|   |     |-ImplicitCastExpr 0x127942378 <line:9:12, col:13> 'char' <LValueToRValue>
|   |     | `-UnaryOperator 0x127942360 <col:12, col:13> 'char' lvalue prefix '*' cannot overflow
|   |     |   `-ImplicitCastExpr 0x127942348 <col:13> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x127942328 <col:13> 'char *' lvalue Var 0x127941c98 'p' 'char *'
|   |     `-BinaryOperator 0x127942410 <line:10:13, col:18> 'char' '='
|   |       |-UnaryOperator 0x1279423c8 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |       | `-ImplicitCastExpr 0x1279423b0 <col:14> 'char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x127942390 <col:14> 'char *' lvalue Var 0x127941c98 'p' 'char *'
|   |       `-ImplicitCastExpr 0x1279423f8 <col:18> 'char' <IntegralCast>
|   |         `-CharacterLiteral 0x1279423e0 <col:18> 'int' 0
|   |-CallExpr 0x127942f80 <line:12:5, line:13:54> 'int'
|   | |-ImplicitCastExpr 0x127942f68 <line:12:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x127942578 <col:5> 'int ()' Function 0x1279424c0 'g_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x127942fd0 <col:17> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x127942598 <col:17> 'char *' lvalue ParmVar 0x1279280d8 'buf' 'char *'
|   | |-ImplicitCastExpr 0x127942fe8 <col:22> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1279425b8 <col:22> 'int' lvalue ParmVar 0x127928158 'len' 'int'
|   | |-ImplicitCastExpr 0x127943000 <col:27> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x1279425d8 <col:27> 'char[4]' lvalue "STR"
|   | |-CallExpr 0x127942710 <col:34, col:48> 'int'
|   | | `-ImplicitCastExpr 0x1279426f8 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x1279426d8 <col:34> 'int ()' Function 0x127942620 'g_get_tmp_dir' 'int ()'
|   | |-ConditionalOperator 0x127942e00 <line:13:17, col:29> 'char *'
|   | | |-ImplicitCastExpr 0x127942790 <col:17> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x127942730 <col:17> 'char *' lvalue Var 0x127928348 'dpy' 'char *'
|   | | |-ImplicitCastExpr 0x1279427a8 <col:23> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x127942750 <col:23> 'char *' lvalue Var 0x127928348 'dpy' 'char *'
|   | | `-ImplicitCastExpr 0x1279427c0 <col:29> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x127942770 <col:29> 'char[4]' lvalue "STR"
|   | `-CallExpr 0x127942f48 <col:36, col:52> 'int'
|   |   `-ImplicitCastExpr 0x127942f30 <col:36> 'int (*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x127942f10 <col:36> 'int ()' Function 0x127942e58 'g_get_user_name' 'int ()'
|   `-CallExpr 0x127943150 <line:14:5, col:15> 'int'
|     |-ImplicitCastExpr 0x127943138 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1279430f8 <col:5> 'int ()' Function 0x127943040 'g_free' 'int ()'
|     `-ImplicitCastExpr 0x127943178 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x127943118 <col:12> 'char *' lvalue Var 0x127928348 'dpy' 'char *'
`-FunctionDecl 0x127941d40 <line:6:19> col:19 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x127941e40 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x127941ea8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x127941de8 <<invalid sloc>> Implicit 893
