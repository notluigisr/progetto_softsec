TranslationUnitDecl 0x14402be08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14402ccb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14402c3d0 '__int128'
|-TypedefDecl 0x14402cd28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14402c3f0 'unsigned __int128'
|-TypedefDecl 0x1440fca30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1440fc800 'struct __NSConstantString_tag'
|   `-Record 0x14402cd80 '__NSConstantString_tag'
|-TypedefDecl 0x1440fca98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14402c590 '__SVInt8_t'
|-TypedefDecl 0x1440fcb00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14402c5b0 '__SVInt16_t'
|-TypedefDecl 0x1440fcb68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14402c5d0 '__SVInt32_t'
|-TypedefDecl 0x1440fcbd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14402c5f0 '__SVInt64_t'
|-TypedefDecl 0x1440fcc38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14402c610 '__SVUint8_t'
|-TypedefDecl 0x1440fcca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14402c630 '__SVUint16_t'
|-TypedefDecl 0x1440fcd08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14402c650 '__SVUint32_t'
|-TypedefDecl 0x1440fcd70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14402c670 '__SVUint64_t'
|-TypedefDecl 0x1440fcdd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14402c690 '__SVFloat16_t'
|-TypedefDecl 0x1440fce40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14402c6b0 '__SVFloat32_t'
|-TypedefDecl 0x1440fcea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14402c6d0 '__SVFloat64_t'
|-TypedefDecl 0x1440fcf10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14402c6f0 '__SVBfloat16_t'
|-TypedefDecl 0x1440fcf78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14402c710 '__clang_svint8x2_t'
|-TypedefDecl 0x1440fcfe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14402c730 '__clang_svint16x2_t'
|-TypedefDecl 0x1440fd048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14402c750 '__clang_svint32x2_t'
|-TypedefDecl 0x1440fd0b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14402c770 '__clang_svint64x2_t'
|-TypedefDecl 0x1440fd118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14402c790 '__clang_svuint8x2_t'
|-TypedefDecl 0x1440fd180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14402c7b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1440fd1e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14402c7d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1440fd250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14402c7f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1440fd2b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14402c810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1440fd320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14402c830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1440fd388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14402c850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1440fd3f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14402c870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1440fd458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14402c890 '__clang_svint8x3_t'
|-TypedefDecl 0x1440fd4c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14402c8b0 '__clang_svint16x3_t'
|-TypedefDecl 0x1440fd528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14402c8d0 '__clang_svint32x3_t'
|-TypedefDecl 0x1440fd590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14402c8f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1440fd5f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14402c910 '__clang_svuint8x3_t'
|-TypedefDecl 0x1440fd660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14402c930 '__clang_svuint16x3_t'
|-TypedefDecl 0x1440fd6c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14402c950 '__clang_svuint32x3_t'
|-TypedefDecl 0x1440fd730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14402c970 '__clang_svuint64x3_t'
|-TypedefDecl 0x1440fd798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14402c990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1440fe000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14402c9b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1440fe068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14402c9d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1440fe0d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14402c9f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1440fe138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14402ca10 '__clang_svint8x4_t'
|-TypedefDecl 0x1440fe1a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14402ca30 '__clang_svint16x4_t'
|-TypedefDecl 0x1440fe208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14402ca50 '__clang_svint32x4_t'
|-TypedefDecl 0x1440fe270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14402ca70 '__clang_svint64x4_t'
|-TypedefDecl 0x1440fe2d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14402ca90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1440fe340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14402cab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1440fe3a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14402cad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1440fe410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14402caf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1440fe478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14402cb10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1440fe4e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14402cb30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1440fe548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14402cb50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1440fe5b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14402cb70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1440fe618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14402cb90 '__SVBool_t'
|-TypedefDecl 0x1440fe680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14402cbb0 '__clang_svboolx2_t'
|-TypedefDecl 0x1440fe6e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14402cbd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1440fe750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14402cbf0 '__SVCount_t'
|-TypedefDecl 0x1440fe7f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1440fe7b0 'char *'
|   `-BuiltinType 0x14402beb0 'char'
|-TypedefDecl 0x1440fe868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1440fe7b0 'char *'
|   `-BuiltinType 0x14402beb0 'char'
|-FunctionDecl 0x1440feb48 <dataset_diviso_filec/func16761_vuln.c:1:1, line:32:1> line:1:16 invalid ssl_add_clienthello_tlsext 'unsigned char *(int *, unsigned char *, unsigned char *)'
| |-ParmVarDecl 0x1440fe928 <col:43, col:48> col:48 invalid s 'int *'
| |-ParmVarDecl 0x1440fe9d8 <col:51, col:66> col:66 used p 'unsigned char *'
| |-ParmVarDecl 0x1440fea58 <col:69, col:84> col:84 used limit 'unsigned char *'
| `-CompoundStmt 0x14500eb98 <line:2:2, line:32:1>
|   |-DeclStmt 0x1440feca8 <line:3:2, col:18>
|   | `-VarDecl 0x1440fec20 <col:2, col:17> col:6 used extdatalen 'int' cinit
|   |   `-IntegerLiteral 0x1440fec88 <col:17> 'int' 0
|   |-DeclStmt 0x1440fed78 <line:4:2, col:24>
|   | `-VarDecl 0x1440fecd8 <col:2, col:23> col:17 used ret 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1440fed60 <col:23> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1440fed40 <col:23> 'unsigned char *' lvalue ParmVar 0x1440fe9d8 'p' 'unsigned char *'
|   |-CompoundAssignOperator 0x1440fedd0 <line:6:2, col:7> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x1440fed90 <col:2> 'unsigned char *' lvalue Var 0x1440fecd8 'ret' 'unsigned char *'
|   | `-IntegerLiteral 0x1440fedb0 <col:7> 'int' 2
|   |-IfStmt 0x1440feed8 <line:8:2, col:25>
|   | |-BinaryOperator 0x1440fee70 <col:6, col:11> 'int' '>='
|   | | |-ImplicitCastExpr 0x1440fee40 <col:6> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1440fee00 <col:6> 'unsigned char *' lvalue Var 0x1440fecd8 'ret' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1440fee58 <col:11> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1440fee20 <col:11> 'unsigned char *' lvalue ParmVar 0x1440fea58 'limit' 'unsigned char *'
|   | `-ReturnStmt 0x1440feec8 <col:18, col:25>
|   |   `-RecoveryExpr 0x1440feea8 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14500e850 <line:9:3, line:25:3>
|   | |-BinaryOperator 0x1441180e0 <line:9:7, col:56> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1440fef80 <col:7, col:29> 'int' contains-errors '=='
|   | | | |-CXXDependentScopeMemberExpr 0x1440fef18 <col:7, col:10> '<dependent type>' contains-errors lvalue ->servername_done
|   | | | | `-RecoveryExpr 0x1440feef8 <col:7> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x1440fef60 <col:29> 'int' 0
|   | | `-BinaryOperator 0x1441180c0 <col:34, col:56> 'int' contains-errors '!='
|   | |   |-CXXDependentScopeMemberExpr 0x144118000 <col:34, col:37> '<dependent type>' contains-errors lvalue ->tlsext_hostname
|   | |   | `-RecoveryExpr 0x1440fefa0 <col:34> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x1441180a0 <col:56> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14500e7f8 <line:10:3, line:25:3>
|   |   |-DeclStmt 0x144118180 <line:12:3, col:25>
|   |   | `-VarDecl 0x144118118 <col:3, col:17> col:17 used size_str 'unsigned long'
|   |   |-DeclStmt 0x144118218 <line:13:3, col:14>
|   |   | `-VarDecl 0x1441181b0 <col:3, col:8> col:8 used lenmax 'long'
|   |   |-IfStmt 0x144118418 <line:15:3, col:44>
|   |   | |-BinaryOperator 0x1441183b0 <col:7, col:34> 'int' '<'
|   |   | | |-ParenExpr 0x144118358 <col:7, col:30> 'long'
|   |   | | | `-BinaryOperator 0x144118338 <col:8, col:29> 'long' '='
|   |   | | |   |-DeclRefExpr 0x144118230 <col:8> 'long' lvalue Var 0x1441181b0 'lenmax' 'long'
|   |   | | |   `-BinaryOperator 0x144118318 <col:17, col:29> 'long' '-'
|   |   | | |     |-BinaryOperator 0x1441182c0 <col:17, col:25> 'long' '-'
|   |   | | |     | |-ImplicitCastExpr 0x144118290 <col:17> 'unsigned char *' <LValueToRValue>
|   |   | | |     | | `-DeclRefExpr 0x144118250 <col:17> 'unsigned char *' lvalue ParmVar 0x1440fea58 'limit' 'unsigned char *'
|   |   | | |     | `-ImplicitCastExpr 0x1441182a8 <col:25> 'unsigned char *' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x144118270 <col:25> 'unsigned char *' lvalue ParmVar 0x1440fe9d8 'p' 'unsigned char *'
|   |   | | |     `-ImplicitCastExpr 0x144118300 <col:29> 'long' <IntegralCast>
|   |   | | |       `-IntegerLiteral 0x1441182e0 <col:29> 'int' 7
|   |   | | `-ImplicitCastExpr 0x144118398 <col:34> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x144118378 <col:34> 'int' 0
|   |   | `-ReturnStmt 0x144118408 <col:37, col:44>
|   |   |   `-RecoveryExpr 0x1441183e8 <col:44> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x144118c18 <line:16:3, col:79>
|   |   | |-BinaryOperator 0x144118bb0 <col:7, col:64> 'int' contains-errors '>'
|   |   | | |-ParenExpr 0x144118b18 <col:7, col:45> 'unsigned long' contains-errors
|   |   | | | `-BinaryOperator 0x144118af8 <col:8, col:44> 'unsigned long' contains-errors '='
|   |   | | |   |-DeclRefExpr 0x144118438 <col:8> 'unsigned long' lvalue Var 0x144118118 'size_str' 'unsigned long'
|   |   | | |   `-CallExpr 0x144118ad0 <col:19, col:44> '<dependent type>' contains-errors
|   |   | | |     |-DeclRefExpr 0x144118a30 <col:19> 'unsigned long (const char *)' Function 0x1441188c0 'strlen' 'unsigned long (const char *)'
|   |   | | |     `-CXXDependentScopeMemberExpr 0x144118a70 <col:26, col:29> '<dependent type>' contains-errors lvalue ->tlsext_hostname
|   |   | | |       `-RecoveryExpr 0x144118a50 <col:26> '<dependent type>' contains-errors lvalue
|   |   | | `-CStyleCastExpr 0x144118b88 <col:49, col:64> 'unsigned long' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x144118b70 <col:64> 'long' <LValueToRValue> part_of_explicit_cast
|   |   | |     `-DeclRefExpr 0x144118b38 <col:64> 'long' lvalue Var 0x1441181b0 'lenmax' 'long'
|   |   | `-ReturnStmt 0x144118c08 <col:72, col:79>
|   |   |   `-RecoveryExpr 0x144118be8 <col:79> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x144118e38 <line:18:3, col:34> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x144118d90 <col:3> 'int ()' Function 0x144118cd8 's2n' 'int ()'
|   |   | |-RecoveryExpr 0x144118e18 <col:7> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x144118dc8 <col:31> 'unsigned char *' lvalue Var 0x1440fecd8 'ret' 'unsigned char *'
|   |   |-CallExpr 0x144118f88 <line:19:3, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x144118f70 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x144118e68 <col:3> 'int ()' Function 0x144118cd8 's2n' 'int ()'
|   |   | |-BinaryOperator 0x144118ef8 <col:7, col:16> 'unsigned long' '+'
|   |   | | |-ImplicitCastExpr 0x144118ec8 <col:7> 'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x144118e88 <col:7> 'unsigned long' lvalue Var 0x144118118 'size_str' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x144118ee0 <col:16> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x144118ea8 <col:16> 'int' 3
|   |   | `-ImplicitCastExpr 0x144118fb8 <col:18> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x144118f18 <col:18> 'unsigned char *' lvalue Var 0x1440fecd8 'ret' 'unsigned char *'
|   |   |-CallExpr 0x14500e2f8 <line:21:3, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x14500e2e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14500e280 <col:3> 'int ()' Function 0x144118cd8 's2n' 'int ()'
|   |   | |-ImplicitCastExpr 0x14500e328 <col:7> 'unsigned long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14500e2a0 <col:7> 'unsigned long' lvalue Var 0x144118118 'size_str' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x14500e340 <col:16> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14500e2c0 <col:16> 'unsigned char *' lvalue Var 0x1440fecd8 'ret' 'unsigned char *'
|   |   |-CallExpr 0x14500e738 <line:23:3, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14500e628 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x14500e3d8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-DeclRefExpr 0x14500e648 <col:10> 'unsigned char *' lvalue Var 0x1440fecd8 'ret' 'unsigned char *'
|   |   | |-CXXDependentScopeMemberExpr 0x14500e688 <col:15, col:18> '<dependent type>' contains-errors lvalue ->tlsext_hostname
|   |   | | `-RecoveryExpr 0x14500e668 <col:15> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x14500e6d0 <col:35> 'unsigned long' lvalue Var 0x144118118 'size_str' 'unsigned long'
|   |   `-CompoundAssignOperator 0x14500e7c8 <line:24:3, col:8> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x14500e770 <col:3> 'unsigned char *' lvalue Var 0x1440fecd8 'ret' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x14500e7b0 <col:8> 'unsigned long' <LValueToRValue>
|   |       `-DeclRefExpr 0x14500e790 <col:8> 'unsigned long' lvalue Var 0x144118118 'size_str' 'unsigned long'
|   |-IfStmt 0x14500ea58 <line:27:2, line:28:10>
|   | |-BinaryOperator 0x14500e9f0 <line:27:6, col:31> 'int' '=='
|   | | |-ParenExpr 0x14500e9b0 <col:6, col:27> 'int'
|   | | | `-BinaryOperator 0x14500e990 <col:7, col:26> 'int' '='
|   | | |   |-DeclRefExpr 0x14500e870 <col:7> 'int' lvalue Var 0x1440fec20 'extdatalen' 'int'
|   | | |   `-ImplicitCastExpr 0x14500e978 <col:20, col:26> 'int' <IntegralCast>
|   | | |     `-BinaryOperator 0x14500e958 <col:20, col:26> 'long' '-'
|   | | |       |-BinaryOperator 0x14500e900 <col:20, col:24> 'long' '-'
|   | | |       | |-ImplicitCastExpr 0x14500e8d0 <col:20> 'unsigned char *' <LValueToRValue>
|   | | |       | | `-DeclRefExpr 0x14500e890 <col:20> 'unsigned char *' lvalue Var 0x1440fecd8 'ret' 'unsigned char *'
|   | | |       | `-ImplicitCastExpr 0x14500e8e8 <col:24> 'unsigned char *' <LValueToRValue>
|   | | |       |   `-DeclRefExpr 0x14500e8b0 <col:24> 'unsigned char *' lvalue ParmVar 0x1440fe9d8 'p' 'unsigned char *'
|   | | |       `-ImplicitCastExpr 0x14500e940 <col:26> 'long' <IntegralCast>
|   | | |         `-IntegerLiteral 0x14500e920 <col:26> 'int' 2
|   | | `-IntegerLiteral 0x14500e9d0 <col:31> 'int' 0
|   | `-ReturnStmt 0x14500ea48 <line:28:3, col:10>
|   |   `-ImplicitCastExpr 0x14500ea30 <col:10> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14500ea10 <col:10> 'unsigned char *' lvalue ParmVar 0x1440fe9d8 'p' 'unsigned char *'
|   |-CallExpr 0x14500eaf0 <line:30:2, col:18> 'int'
|   | |-ImplicitCastExpr 0x14500ead8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14500ea78 <col:2> 'int ()' Function 0x144118cd8 's2n' 'int ()'
|   | |-ImplicitCastExpr 0x14500eb20 <col:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x14500ea98 <col:6> 'int' lvalue Var 0x1440fec20 'extdatalen' 'int'
|   | `-ImplicitCastExpr 0x14500eb38 <col:17> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14500eab8 <col:17> 'unsigned char *' lvalue ParmVar 0x1440fe9d8 'p' 'unsigned char *'
|   `-ReturnStmt 0x14500eb88 <line:31:2, col:9>
|     `-ImplicitCastExpr 0x14500eb70 <col:9> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x14500eb50 <col:9> 'unsigned char *' lvalue Var 0x1440fecd8 'ret' 'unsigned char *'
|-FunctionDecl 0x1441188c0 <line:16:19> col:19 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1441189c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x144118968 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x14500e3d8 <line:23:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14500e4d8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14500e540 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14500e5a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14500e480 <<invalid sloc>> Implicit 882
