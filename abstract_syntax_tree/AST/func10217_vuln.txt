TranslationUnitDecl 0x12b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b855bd0 '__int128'
|-TypedefDecl 0x12b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b855bf0 'unsigned __int128'
|-TypedefDecl 0x12c00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12b856580 '__NSConstantString_tag'
|-TypedefDecl 0x12c00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b855d90 '__SVInt8_t'
|-TypedefDecl 0x12c00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b855db0 '__SVInt16_t'
|-TypedefDecl 0x12c00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b855dd0 '__SVInt32_t'
|-TypedefDecl 0x12c00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b855df0 '__SVInt64_t'
|-TypedefDecl 0x12c00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b855e10 '__SVUint8_t'
|-TypedefDecl 0x12c00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b855e30 '__SVUint16_t'
|-TypedefDecl 0x12c00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b855e50 '__SVUint32_t'
|-TypedefDecl 0x12c00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b855e70 '__SVUint64_t'
|-TypedefDecl 0x12c00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b855e90 '__SVFloat16_t'
|-TypedefDecl 0x12c00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b856390 '__SVBool_t'
|-TypedefDecl 0x12c00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b8563f0 '__SVCount_t'
|-TypedefDecl 0x12c00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c00dbb0 'char *'
|   `-BuiltinType 0x12b8556b0 'char'
|-TypedefDecl 0x12c00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c00dbb0 'char *'
|   `-BuiltinType 0x12b8556b0 'char'
|-FunctionDecl 0x12c00df28 <dataset_diviso_filec/func10217_vuln.c:1:1, line:66:1> line:1:5 main 'int (int, char **)'
| |-ParmVarDecl 0x12c00dcd8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x12c00de00 <col:20, col:31> col:26 used argv 'char **'
| `-CompoundStmt 0x12c02bf50 <col:34, line:66:1>
|   |-DeclStmt 0x12c00e0e0 <line:3:2, col:23>
|   | `-VarDecl 0x12c00e058 <col:2, col:22> col:11 used instance 'int' cinit
|   |   `-IntegerLiteral 0x12c00e0c0 <col:22> 'int' 0
|   |-DeclStmt 0x12c00e1b0 <line:5:2, col:27>
|   | `-VarDecl 0x12c00e110 <col:2, col:23> col:12 used rem_addr 'char *' cinit
|   |   `-RecoveryExpr 0x12c00e190 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12c00e2c8 <line:6:2, col:29>
|   | `-VarDecl 0x12c00e1e0 <col:2, col:24> col:12 used community 'char *' cinit
|   |   `-ImplicitCastExpr 0x12c00e2b0 <col:24> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x12c00e290 <col:24> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x12c00e3e8 <line:7:2, col:29>
|   | `-VarDecl 0x12c00e380 <col:2, col:28> col:20 used Opts 'char[256]'
|   |-DeclStmt 0x12c027a80 <line:8:5, col:26>
|   | `-VarDecl 0x12c027a18 <col:5, col:23> col:23 used arg 'int'
|   |-DeclStmt 0x12c027b18 <line:9:2, col:20>
|   | `-VarDecl 0x12c027ab0 <col:2, col:13> col:13 used command 'char *'
|   |-DeclStmt 0x12c027bb0 <line:10:2, col:12>
|   | `-VarDecl 0x12c027b48 <col:2, col:11> col:11 used i 'int'
|   |-CallExpr 0x12c0282e8 <line:13:5, col:23> 'char *'
|   | |-ImplicitCastExpr 0x12c0282d0 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12c028210 <col:5> 'char *(char *, const char *)' Function 0x12c028030 'strcpy' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x12c028318 <col:12> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x12c028230 <col:12> 'char[256]' lvalue Var 0x12c00e380 'Opts' 'char[256]'
|   | `-ImplicitCastExpr 0x12c028348 <col:18> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x12c028330 <col:18> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x12c028250 <col:18> 'char[4]' lvalue "STR"
|   |-WhileStmt 0x12c029d18 <line:15:5, line:31:2>
|   | |-BinaryOperator 0x12c028820 <line:15:12, col:48> 'int' contains-errors '!='
|   | | |-ParenExpr 0x12c0287e0 <col:12, col:43> 'int'
|   | | | `-BinaryOperator 0x12c0287c0 <col:13, col:42> 'int' '='
|   | | |   |-DeclRefExpr 0x12c028360 <col:13> 'int' lvalue Var 0x12c027a18 'arg' 'int'
|   | | |   `-CallExpr 0x12c028740 <col:19, col:42> 'int'
|   | | |     |-ImplicitCastExpr 0x12c028728 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x12c028490 <col:19> 'int ()' Function 0x12c0283d8 'getopt' 'int ()'
|   | | |     |-ImplicitCastExpr 0x12c028778 <col:26> 'int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12c0284b0 <col:26> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'
|   | | |     |-ImplicitCastExpr 0x12c028790 <col:32> 'char **' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12c0284d0 <col:32> 'char **' lvalue ParmVar 0x12c00de00 'argv' 'char **'
|   | | |     `-ImplicitCastExpr 0x12c0287a8 <col:38> 'char *' <ArrayToPointerDecay>
|   | | |       `-DeclRefExpr 0x12c0284f0 <col:38> 'char[256]' lvalue Var 0x12c00e380 'Opts' 'char[256]'
|   | | `-RecoveryExpr 0x12c028800 <col:48> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12c029d00 <col:53, line:31:2>
|   |   `-SwitchStmt 0x12c028878 <line:16:9, line:30:3>
|   |     |-ImplicitCastExpr 0x12c028860 <line:16:17> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12c028840 <col:17> 'int' lvalue Var 0x12c027a18 'arg' 'int'
|   |     `-CompoundStmt 0x12c029cb0 <col:22, line:30:3>
|   |       |-CaseStmt 0x12c0288d0 <line:17:3, line:19:17>
|   |       | |-ConstantExpr 0x12c0288b8 <line:17:8> 'int'
|   |       | | `-CharacterLiteral 0x12c0288a0 <col:8> 'int' 104
|   |       | `-CaseStmt 0x12c028928 <line:18:3, line:19:17>
|   |       |   |-ConstantExpr 0x12c028910 <line:18:8> 'int'
|   |       |   | `-CharacterLiteral 0x12c0288f8 <col:8> 'int' 45
|   |       |   `-CallExpr 0x12c029768 <line:19:4, col:17> 'int'
|   |       |     |-ImplicitCastExpr 0x12c029750 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x12c0296b8 <col:4> 'int ()' Function 0x12c029600 'usage' 'int ()'
|   |       |     `-ImplicitCastExpr 0x12c029790 <col:10, col:16> 'char *' <LValueToRValue>
|   |       |       `-ArraySubscriptExpr 0x12c029730 <col:10, col:16> 'char *' lvalue
|   |       |         |-ImplicitCastExpr 0x12c029718 <col:10> 'char **' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x12c0296d8 <col:10> 'char **' lvalue ParmVar 0x12c00de00 'argv' 'char **'
|   |       |         `-IntegerLiteral 0x12c0296f8 <col:15> 'int' 0
|   |       |-ReturnStmt 0x12c0297e8 <line:20:4, col:12>
|   |       | `-ParenExpr 0x12c0297c8 <col:10, col:12> 'int'
|   |       |   `-IntegerLiteral 0x12c0297a8 <col:11> 'int' 0
|   |       |-CaseStmt 0x12c029828 <line:21:3, line:22:26>
|   |       | |-ConstantExpr 0x12c029810 <line:21:8> 'int'
|   |       | | `-CharacterLiteral 0x12c0297f8 <col:8> 'int' 105
|   |       | `-BinaryOperator 0x12c029a18 <line:22:4, col:26> 'int' contains-errors '='
|   |       |   |-DeclRefExpr 0x12c029850 <col:4> 'int' lvalue Var 0x12c00e058 'instance' 'int'
|   |       |   `-CallExpr 0x12c0299f0 <col:15, col:26> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x12c029950 <col:15> 'int ()' Function 0x12c029898 'atol' 'int ()'
|   |       |     `-RecoveryExpr 0x12c0299d0 <col:20> '<dependent type>' contains-errors lvalue
|   |       |-BreakStmt 0x12c029a38 <line:23:4>
|   |       |-CaseStmt 0x12c029a70 <line:24:3, line:25:15>
|   |       | |-ConstantExpr 0x12c029a58 <line:24:8> 'int'
|   |       | | `-CharacterLiteral 0x12c029a40 <col:8> 'int' 100
|   |       | `-BinaryOperator 0x12c029b10 <line:25:4, col:15> 'char *' contains-errors '='
|   |       |   |-DeclRefExpr 0x12c029a98 <col:4> 'char *' contains-errors lvalue Var 0x12c00e110 'rem_addr' 'char *'
|   |       |   `-RecoveryExpr 0x12c029af0 <col:15> '<dependent type>' contains-errors lvalue
|   |       |-BreakStmt 0x12c029b30 <line:26:4>
|   |       |-DefaultStmt 0x12c029c28 <line:27:3, line:28:17>
|   |       | `-CallExpr 0x12c029be8 <col:4, col:17> 'int'
|   |       |   |-ImplicitCastExpr 0x12c029bd0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x12c029b38 <col:4> 'int ()' Function 0x12c029600 'usage' 'int ()'
|   |       |   `-ImplicitCastExpr 0x12c029c10 <col:10, col:16> 'char *' <LValueToRValue>
|   |       |     `-ArraySubscriptExpr 0x12c029bb0 <col:10, col:16> 'char *' lvalue
|   |       |       |-ImplicitCastExpr 0x12c029b98 <col:10> 'char **' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x12c029b58 <col:10> 'char **' lvalue ParmVar 0x12c00de00 'argv' 'char **'
|   |       |       `-IntegerLiteral 0x12c029b78 <col:15> 'int' 0
|   |       `-ReturnStmt 0x12c029ca0 <line:29:4, col:13>
|   |         `-ParenExpr 0x12c029c80 <col:10, col:13> 'int'
|   |           `-UnaryOperator 0x12c029c68 <col:11, col:12> 'int' prefix '-'
|   |             `-IntegerLiteral 0x12c029c48 <col:12> 'int' 1
|   |-IfStmt 0x12c02a0e8 <line:33:2, line:37:2>
|   | |-BinaryOperator 0x12c029db0 <line:33:5, col:15> 'int' contains-errors '>='
|   | | |-RecoveryExpr 0x12c029d90 <col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12c029d50 <col:15> 'int' lvalue ParmVar 0x12c00dcd8 'argc' 'int'
|   | `-CompoundStmt 0x12c02a0c0 <col:20, line:37:2>
|   |   |-CallExpr 0x12c029f58 <line:34:9, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12c029eb0 <col:9> 'int ()' Function 0x12c029df8 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x12c029f38 <col:17> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x12c029ee8 <col:25> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x12c02a038 <line:35:3, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x12c02a020 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12c029f88 <col:3> 'int ()' Function 0x12c029600 'usage' 'int ()'
|   |   | `-ImplicitCastExpr 0x12c02a060 <col:9, col:15> 'char *' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x12c02a000 <col:9, col:15> 'char *' lvalue
|   |   |     |-ImplicitCastExpr 0x12c029fe8 <col:9> 'char **' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12c029fa8 <col:9> 'char **' lvalue ParmVar 0x12c00de00 'argv' 'char **'
|   |   |     `-IntegerLiteral 0x12c029fc8 <col:14> 'int' 0
|   |   `-ReturnStmt 0x12c02a0b0 <line:36:3, col:11>
|   |     `-UnaryOperator 0x12c02a098 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x12c02a078 <col:11> 'int' 1
|   |-IfStmt 0x12c02b4a0 <line:41:2, line:45:2>
|   | |-RecoveryExpr 0x12c02a5b0 <line:41:5, col:71> '_Bool' contains-errors
|   | `-CompoundStmt 0x12c02b488 <line:42:2, line:45:2>
|   |   `-GotoStmt 0x12c02b470 <line:44:3, col:8> 'die_clean' 0x12c02b420
|   |-IfStmt 0x12c02b750 <line:47:2, line:51:2>
|   | |-RecoveryExpr 0x12c02b5c0 <line:47:5, col:43> '_Bool' contains-errors
|   | `-CompoundStmt 0x12c02b738 <line:48:2, line:51:2>
|   |   `-GotoStmt 0x12c02b720 <line:50:3, col:8> 'die_clean' 0x12c02b420
|   |-CallExpr 0x12c02bcc8 <line:60:2, col:15> 'int'
|   | |-ImplicitCastExpr 0x12c02bcb0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12c02bc18 <col:2> 'int ()' Function 0x12c029600 'usage' 'int ()'
|   | `-ImplicitCastExpr 0x12c02bcf0 <col:8, col:14> 'char *' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x12c02bc90 <col:8, col:14> 'char *' lvalue
|   |     |-ImplicitCastExpr 0x12c02bc78 <col:8> 'char **' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12c02bc38 <col:8> 'char **' lvalue ParmVar 0x12c00de00 'argv' 'char **'
|   |     `-IntegerLiteral 0x12c02bc58 <col:13> 'int' 0
|   `-LabelStmt 0x12c02bf30 <line:63:1, col:10> 'die_clean'
|     `-NullStmt 0x12c02bf28 <col:10>
|-FunctionDecl 0x12c028030 <line:13:5> col:5 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x12c028130 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12c028198 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12c0280d8 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x12c02a1c0 <line:40:2> col:2 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x12c02a2c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x12c02a268 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x12c02a330 <col:2> Implicit printf 1 2
|-FunctionDecl 0x12c02b870 <line:54:6> col:6 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x12c02b970 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12c02b9d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12c02b918 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x12c02bd98 <line:64:11> col:11 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12c02be98 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12c02be40 <<invalid sloc>> Implicit 873
