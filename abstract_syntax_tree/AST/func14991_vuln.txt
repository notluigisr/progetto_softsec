TranslationUnitDecl 0x157029608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15702a4b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157029bd0 '__int128'
|-TypedefDecl 0x15702a528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157029bf0 'unsigned __int128'
|-TypedefDecl 0x15700c830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15700c600 'struct __NSConstantString_tag'
|   `-Record 0x15702a580 '__NSConstantString_tag'
|-TypedefDecl 0x15700c898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157029d90 '__SVInt8_t'
|-TypedefDecl 0x15700c900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157029db0 '__SVInt16_t'
|-TypedefDecl 0x15700c968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157029dd0 '__SVInt32_t'
|-TypedefDecl 0x15700c9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157029df0 '__SVInt64_t'
|-TypedefDecl 0x15700ca38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157029e10 '__SVUint8_t'
|-TypedefDecl 0x15700caa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157029e30 '__SVUint16_t'
|-TypedefDecl 0x15700cb08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157029e50 '__SVUint32_t'
|-TypedefDecl 0x15700cb70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157029e70 '__SVUint64_t'
|-TypedefDecl 0x15700cbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157029e90 '__SVFloat16_t'
|-TypedefDecl 0x15700cc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157029eb0 '__SVFloat32_t'
|-TypedefDecl 0x15700cca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157029ed0 '__SVFloat64_t'
|-TypedefDecl 0x15700cd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157029ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15700cd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157029f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15700cde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157029f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15700ce48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157029f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15700ceb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157029f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15700cf18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157029f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15700cf80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157029fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15700cfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157029fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15700d050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157029ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15700d0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15702a010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15700d120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15702a030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15700d188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15702a050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15700d1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15702a070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15700d258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15702a090 '__clang_svint8x3_t'
|-TypedefDecl 0x15700d2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15702a0b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15700d328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15702a0d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15700d390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15702a0f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15700d3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15702a110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15700d460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15702a130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15700d4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15702a150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15700d530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15702a170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15700d598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15702a190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1570a6600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15702a1b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1570a6668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15702a1d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1570a66d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15702a1f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1570a6738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15702a210 '__clang_svint8x4_t'
|-TypedefDecl 0x1570a67a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15702a230 '__clang_svint16x4_t'
|-TypedefDecl 0x1570a6808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15702a250 '__clang_svint32x4_t'
|-TypedefDecl 0x1570a6870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15702a270 '__clang_svint64x4_t'
|-TypedefDecl 0x1570a68d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15702a290 '__clang_svuint8x4_t'
|-TypedefDecl 0x1570a6940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15702a2b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1570a69a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15702a2d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1570a6a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15702a2f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1570a6a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15702a310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1570a6ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15702a330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1570a6b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15702a350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1570a6bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15702a370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1570a6c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15702a390 '__SVBool_t'
|-TypedefDecl 0x1570a6c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15702a3b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1570a6ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15702a3d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1570a6d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15702a3f0 '__SVCount_t'
|-TypedefDecl 0x1570a6df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1570a6db0 'char *'
|   `-BuiltinType 0x1570296b0 'char'
|-TypedefDecl 0x1570a6e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1570a6db0 'char *'
|   `-BuiltinType 0x1570296b0 'char'
|-FunctionDecl 0x1570ab8d8 <dataset_diviso_filec/func14991_vuln.c:1:1, line:67:1> line:1:5 ida_get_new_above 'int (struct ida *, int, int *)'
| |-ParmVarDecl 0x1570a7448 <col:23, col:35> col:35 used ida 'struct ida *'
| |-ParmVarDecl 0x1570a74c8 <col:40, col:44> col:44 used starting_id 'int'
| |-ParmVarDecl 0x1570a7578 <col:57, col:62> col:62 used p_id 'int *'
| `-CompoundStmt 0x1570af360 <line:2:1, line:67:1>
|   |-DeclStmt 0x1570abbf8 <line:3:2, col:37>
|   | |-RecordDecl 0x1570ab9e0 <col:2, col:9> col:9 struct idr_layer
|   | `-VarDecl 0x1570abb78 <col:2, col:20> col:20 referenced invalid pa 'struct idr_layer *'
|   |-DeclStmt 0x1570abdf8 <line:4:2, col:27>
|   | |-RecordDecl 0x1570abc10 <col:2, col:9> col:9 struct ida_bitmap
|   | `-VarDecl 0x1570abd78 <col:2, col:21> col:21 used bitmap 'struct ida_bitmap *'
|   |-DeclStmt 0x1570abe90 <line:5:2, col:21>
|   | `-VarDecl 0x1570abe28 <col:2, col:16> col:16 used flags 'unsigned long'
|   |-DeclStmt 0x1570abfc0 <line:6:2, col:44>
|   | `-VarDecl 0x1570abec0 <col:2, col:29> col:6 used idr_id 'int' cinit
|   |   `-BinaryOperator 0x1570abfa0 <col:15, col:29> '<dependent type>' contains-errors '/'
|   |     |-DeclRefExpr 0x1570abf28 <col:15> 'int' lvalue ParmVar 0x1570a74c8 'starting_id' 'int'
|   |     `-RecoveryExpr 0x1570abf80 <col:29> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1570ac0f0 <line:7:2, col:44>
|   | `-VarDecl 0x1570abff0 <col:2, col:29> col:6 used offset 'int' cinit
|   |   `-BinaryOperator 0x1570ac0d0 <col:15, col:29> '<dependent type>' contains-errors '%'
|   |     |-DeclRefExpr 0x1570ac058 <col:15> 'int' lvalue ParmVar 0x1570a74c8 'starting_id' 'int'
|   |     `-RecoveryExpr 0x1570ac0b0 <col:29> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1570ac220 <line:8:2, col:11>
|   | |-VarDecl 0x1570ac120 <col:2, col:6> col:6 used t 'int'
|   | `-VarDecl 0x1570ac1a0 <col:2, col:9> col:9 used id 'int'
|   |-LabelStmt 0x1570ac598 <line:10:2, line:12:60> 'restart'
|   | `-BinaryOperator 0x1570ac528 <col:2, col:60> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x1570ac238 <col:2> 'int' lvalue Var 0x1570ac120 't' 'int'
|   |   `-CallExpr 0x1570ac4e0 <col:6, col:60> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1570ac370 <col:6> 'int ()' Function 0x1570ac2b8 'idr_get_empty_slot' 'int ()'
|   |     |-UnaryOperator 0x1570ac3f0 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x1570ac3c8 <col:26, col:31> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x1570ac390 <col:26> 'struct ida *' lvalue ParmVar 0x1570a7448 'ida' 'struct ida *'
|   |     |-DeclRefExpr 0x1570ac408 <col:36> 'int' contains-errors lvalue Var 0x1570abec0 'idr_id' 'int'
|   |     |-RecoveryExpr 0x1570ac428 <col:44> '<dependent type>' contains-errors lvalue
|   |     |-IntegerLiteral 0x1570ac448 <col:48> 'int' 0
|   |     `-UnaryOperator 0x1570ac4c8 <col:51, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-RecoveryExpr 0x1570ac4a0 <col:52, col:57> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x1570ac468 <col:52> 'struct ida *' lvalue ParmVar 0x1570a7448 'ida' 'struct ida *'
|   |-IfStmt 0x1568a3458 <line:13:2, line:14:35>
|   | |-BinaryOperator 0x1570ac610 <line:13:6, col:10> 'int' '<'
|   | | |-ImplicitCastExpr 0x1570ac5f8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1570ac5b8 <col:6> 'int' lvalue Var 0x1570ac120 't' 'int'
|   | | `-IntegerLiteral 0x1570ac5d8 <col:10> 'int' 0
|   | `-ReturnStmt 0x1568a3448 <line:14:3, col:35>
|   |   `-ConditionalOperator 0x1568a3418 <col:10, col:35> '<dependent type>' contains-errors
|   |     |-BinaryOperator 0x1570ac7a0 <col:10, col:16> 'int' contains-errors '=='
|   |     | |-DeclRefExpr 0x1570ac630 <col:10> 'int' lvalue Var 0x1570ac120 't' 'int'
|   |     | `-UnaryOperator 0x1570ac788 <col:15, col:16> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     |   `-ImplicitCastExpr 0x1570ac770 <col:16> '<dependent type>' contains-errors <LValueToRValue>
|   |     |     `-RecoveryExpr 0x1570ac750 <col:16> '<dependent type>' contains-errors lvalue
|   |     |-UnaryOperator 0x1568a3400 <col:25, col:26> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     | `-ImplicitCastExpr 0x1570ac7e0 <col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   `-RecoveryExpr 0x1570ac7c0 <col:26> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1570ac700 <col:35> 'int' lvalue Var 0x1570ac120 't' 'int'
|   |-IfStmt 0x1568a3630 <line:16:2, line:17:11>
|   | |-BinaryOperator 0x1568a3568 <line:16:6, col:29> 'int' contains-errors '>='
|   | | |-BinaryOperator 0x1568a3528 <col:6, col:10> '<dependent type>' contains-errors '*'
|   | | | |-DeclRefExpr 0x1568a3478 <col:6> 'int' lvalue Var 0x1570ac120 't' 'int'
|   | | | `-RecoveryExpr 0x1568a3508 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1568a3548 <col:29> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1568a3620 <line:17:3, col:11>
|   |   `-UnaryOperator 0x1568a3608 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x1568a35f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x1568a35d0 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1568a3740 <line:19:2, line:20:12>
|   | |-BinaryOperator 0x1568a36c0 <line:19:6, col:11> 'int' contains-errors '!='
|   | | |-ImplicitCastExpr 0x1568a3690 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1568a3650 <col:6> 'int' lvalue Var 0x1570ac120 't' 'int'
|   | | `-ImplicitCastExpr 0x1568a36a8 <col:11> 'int' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x1568a3670 <col:11> 'int' contains-errors lvalue Var 0x1570abec0 'idr_id' 'int'
|   | `-BinaryOperator 0x1568a3720 <line:20:3, col:12> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x1568a36e0 <col:3> 'int' contains-errors lvalue Var 0x1570abff0 'offset' 'int'
|   |   `-IntegerLiteral 0x1568a3700 <col:12> 'int' 0
|   |-BinaryOperator 0x1568a37b8 <line:21:2, col:11> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1568a3760 <col:2> 'int' contains-errors lvalue Var 0x1570abec0 'idr_id' 'int'
|   | `-ImplicitCastExpr 0x1568a37a0 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1568a3780 <col:11> 'int' lvalue Var 0x1570ac120 't' 'int'
|   |-IfStmt 0x1570ae598 <line:25:2, line:38:2>
|   | |-UnaryOperator 0x1568a39c8 <line:25:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1568a39b0 <col:7> 'struct ida_bitmap *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1568a3990 <col:7> 'struct ida_bitmap *' lvalue Var 0x1570abd78 'bitmap' 'struct ida_bitmap *'
|   | `-CompoundStmt 0x1570ae558 <col:15, line:38:2>
|   |   |-CallExpr 0x1568a3bc0 <line:26:3, col:42> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1568a3ac0 <col:3> 'int ()' Function 0x1568a3a08 'spin_lock_irqsave' 'int ()'
|   |   | |-UnaryOperator 0x1568a3b88 <col:21, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-CXXDependentScopeMemberExpr 0x1568a3b40 <col:22, col:31> '<dependent type>' contains-errors lvalue .lock
|   |   | |   `-RecoveryExpr 0x1568a3b18 <col:22, col:27> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x1568a3ae0 <col:22> 'struct ida *' lvalue ParmVar 0x1570a7448 'ida' 'struct ida *'
|   |   | `-DeclRefExpr 0x1568a3ba0 <col:37> 'unsigned long' lvalue Var 0x1570abe28 'flags' 'unsigned long'
|   |   |-BinaryOperator 0x1568a3c70 <line:27:3, col:17> 'struct ida_bitmap *' contains-errors '='
|   |   | |-DeclRefExpr 0x1568a3bf0 <col:3> 'struct ida_bitmap *' lvalue Var 0x1570abd78 'bitmap' 'struct ida_bitmap *'
|   |   | `-RecoveryExpr 0x1568a3c48 <col:12, col:17> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x1568a3c10 <col:12> 'struct ida *' lvalue ParmVar 0x1570a7448 'ida' 'struct ida *'
|   |   |-BinaryOperator 0x1568a3d48 <line:28:3, col:22> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x1568a3cc8 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x1568a3c90 <col:3> 'struct ida *' lvalue ParmVar 0x1570a7448 'ida' 'struct ida *'
|   |   | `-RecoveryExpr 0x1568a3d28 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x1568a3f48 <line:29:3, col:47> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1568a3e48 <col:3> 'int ()' Function 0x1568a3d90 'spin_unlock_irqrestore' 'int ()'
|   |   | |-UnaryOperator 0x1568a3f10 <col:26, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-CXXDependentScopeMemberExpr 0x1568a3ec8 <col:27, col:36> '<dependent type>' contains-errors lvalue .lock
|   |   | |   `-RecoveryExpr 0x1568a3ea0 <col:27, col:32> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x1568a3e68 <col:27> 'struct ida *' lvalue ParmVar 0x1570a7448 'ida' 'struct ida *'
|   |   | `-DeclRefExpr 0x1568a3f28 <col:42> 'unsigned long' lvalue Var 0x1570abe28 'flags' 'unsigned long'
|   |   |-IfStmt 0x1568a4070 <line:31:3, line:32:12>
|   |   | |-UnaryOperator 0x1568a3fb0 <line:31:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1568a3f98 <col:8> 'struct ida_bitmap *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1568a3f78 <col:8> 'struct ida_bitmap *' lvalue Var 0x1570abd78 'bitmap' 'struct ida_bitmap *'
|   |   | `-ReturnStmt 0x1568a4060 <line:32:4, col:12>
|   |   |   `-UnaryOperator 0x1568a4048 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |     `-ImplicitCastExpr 0x1568a4030 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-RecoveryExpr 0x1568a4010 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x1570ae540 <line:37:3, col:15> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x1570ae4f8 <col:3, col:10> '<dependent type>' contains-errors lvalue ->count
|   |       `-ArraySubscriptExpr 0x1570ae4d8 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   |         |-ImplicitCastExpr 0x1570ae4c0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   |         | `-RecoveryExpr 0x1570ae478 <col:3> '<dependent type>' contains-errors lvalue
|   |         |   `-DeclRefExpr 0x1570ae458 <col:3> 'struct idr_layer *' lvalue Var 0x1570abb78 'pa' 'struct idr_layer *'
|   |         `-IntegerLiteral 0x1570ae4a0 <col:6> 'int' 0
|   |-IfStmt 0x1570ae870 <line:42:2, line:47:2>
|   | |-RecoveryExpr 0x1570ae778 <line:42:6, col:11> '_Bool' contains-errors
|   | `-CompoundStmt 0x1570ae848 <col:28, line:47:2>
|   |   |-UnaryOperator 0x1570ae7b8 <line:44:3, col:9> 'int' contains-errors postfix '++'
|   |   | `-DeclRefExpr 0x1570ae798 <col:3> 'int' contains-errors lvalue Var 0x1570abec0 'idr_id' 'int'
|   |   |-BinaryOperator 0x1570ae810 <line:45:3, col:12> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1570ae7d0 <col:3> 'int' contains-errors lvalue Var 0x1570abff0 'offset' 'int'
|   |   | `-IntegerLiteral 0x1570ae7f0 <col:12> 'int' 0
|   |   `-GotoStmt 0x1570ae830 <line:46:3, col:8> 'restart' 0x1570ac548
|   |-CallExpr 0x1570aeab0 <line:53:2, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1570aea10 <col:2> 'int ()' Function 0x1570ae958 '__set_bit' 'int ()'
|   | |-DeclRefExpr 0x1570aea30 <col:12> 'int' lvalue Var 0x1570ac120 't' 'int'
|   | `-RecoveryExpr 0x1570aea88 <col:15, col:23> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1570aea50 <col:15> 'struct ida_bitmap *' lvalue Var 0x1570abd78 'bitmap' 'struct ida_bitmap *'
|   |-IfStmt 0x1570aece8 <line:54:2, line:55:27>
|   | |-RecoveryExpr 0x1570aeb58 <line:54:6, col:27> '_Bool' contains-errors
|   | `-CallExpr 0x1570aecb8 <line:55:3, col:27> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1570aec58 <col:3> 'int ()' Function 0x1570aeba0 'idr_mark_full' 'int ()'
|   |   |-RecoveryExpr 0x1570aec78 <col:17> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1570aec98 <col:21> 'int' contains-errors lvalue Var 0x1570abec0 'idr_id' 'int'
|   |-BinaryOperator 0x1570aed90 <line:57:2, col:10> 'int' '='
|   | |-UnaryOperator 0x1570aed40 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1570aed28 <col:3> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1570aed08 <col:3> 'int *' lvalue ParmVar 0x1570a7578 'p_id' 'int *'
|   | `-ImplicitCastExpr 0x1570aed78 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1570aed58 <col:10> 'int' lvalue Var 0x1570ac1a0 'id' 'int'
|   |-IfStmt 0x1570af310 <line:60:2, line:64:2>
|   | |-BinaryOperator 0x1570aeeb8 <line:60:6, col:35> 'int' contains-errors '||'
|   | | |-CXXDependentScopeMemberExpr 0x1570aee10 <col:6, col:15> '<dependent type>' contains-errors lvalue .id_free_cnt
|   | | | `-RecoveryExpr 0x1570aede8 <col:6, col:11> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x1570aedb0 <col:6> 'struct ida *' lvalue ParmVar 0x1570a7448 'ida' 'struct ida *'
|   | | `-RecoveryExpr 0x1570aee90 <col:30, col:35> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1570aee58 <col:30> 'struct ida *' lvalue ParmVar 0x1570a7448 'ida' 'struct ida *'
|   | `-CompoundStmt 0x1570af2f8 <col:48, line:64:2>
|   |   `-DeclStmt 0x1570af170 <line:61:3, col:54>
|   |     `-VarDecl 0x1570aef68 <col:3, col:53> col:21 used p 'struct idr_layer *' cinit
|   |       `-CallExpr 0x1570af148 <col:25, col:53> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x1570af0b0 <col:25> 'int ()' Function 0x1570aeff8 'get_from_free_list' 'int ()'
|   |         `-UnaryOperator 0x1570af130 <col:44, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |           `-RecoveryExpr 0x1570af108 <col:45, col:50> '<dependent type>' contains-errors lvalue
|   |             `-DeclRefExpr 0x1570af0d0 <col:45> 'struct ida *' lvalue ParmVar 0x1570a7448 'ida' 'struct ida *'
|   `-ReturnStmt 0x1570af350 <line:66:2, col:9>
|     `-IntegerLiteral 0x1570af330 <col:9> 'int' 0
`-FunctionDecl 0x1568a40d8 <line:34:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x1568a41d8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1568a4240 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1568a42a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1568a4180 <<invalid sloc>> Implicit 900
