TranslationUnitDecl 0x13a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a055bd0 '__int128'
|-TypedefDecl 0x13a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a055bf0 'unsigned __int128'
|-TypedefDecl 0x13a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a126000 'struct __NSConstantString_tag'
|   `-Record 0x13a056580 '__NSConstantString_tag'
|-TypedefDecl 0x13a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a055d90 '__SVInt8_t'
|-TypedefDecl 0x13a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a055db0 '__SVInt16_t'
|-TypedefDecl 0x13a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a055dd0 '__SVInt32_t'
|-TypedefDecl 0x13a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a055df0 '__SVInt64_t'
|-TypedefDecl 0x13a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a055e10 '__SVUint8_t'
|-TypedefDecl 0x13a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a055e30 '__SVUint16_t'
|-TypedefDecl 0x13a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a055e50 '__SVUint32_t'
|-TypedefDecl 0x13a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a055e70 '__SVUint64_t'
|-TypedefDecl 0x13a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a055e90 '__SVFloat16_t'
|-TypedefDecl 0x13a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a056390 '__SVBool_t'
|-TypedefDecl 0x13a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a0563f0 '__SVCount_t'
|-TypedefDecl 0x13a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a127fb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-TypedefDecl 0x13a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a127fb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
`-FunctionDecl 0x13a128288 <dataset_diviso_filec/func11467_vuln.c:1:1, line:21:1> line:1:5 invalid am_check_url 'int (int *, const char *)'
  |-ParmVarDecl 0x13a128128 <col:18, col:31> col:31 invalid r 'int *'
  |-ParmVarDecl 0x13a1281a8 <col:34, col:46> col:46 used url 'const char *'
  `-CompoundStmt 0x13a809dc0 <line:2:1, line:21:1>
    |-DeclStmt 0x13a1283c0 <line:3:5, col:18>
    | `-VarDecl 0x13a128358 <col:5, col:17> col:17 used i 'const char *'
    |-ForStmt 0x13a809d40 <line:5:5, line:18:5>
    | |-BinaryOperator 0x13a128430 <line:5:10, col:14> 'const char *' '='
    | | |-DeclRefExpr 0x13a1283d8 <col:10> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    | | `-ImplicitCastExpr 0x13a128418 <col:14> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13a1283f8 <col:14> 'const char *' lvalue ParmVar 0x13a1281a8 'url' 'const char *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x13a1284a0 <col:19, col:20> 'char' <LValueToRValue>
    | | `-UnaryOperator 0x13a128488 <col:19, col:20> 'const char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x13a128470 <col:20> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13a128450 <col:20> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    | |-UnaryOperator 0x13a1284d8 <col:23, col:24> 'const char *' postfix '++'
    | | `-DeclRefExpr 0x13a1284b8 <col:23> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    | `-CompoundStmt 0x13a809d20 <col:28, line:18:5>
    |   |-IfStmt 0x13a809a28 <line:6:9, line:11:9>
    |   | |-BinaryOperator 0x13a128668 <line:6:13, col:29> 'int' '&&'
    |   | | |-BinaryOperator 0x13a128590 <col:13, col:19> 'int' '>='
    |   | | | |-ImplicitCastExpr 0x13a128578 <col:13, col:14> 'int' <IntegralCast>
    |   | | | | `-ImplicitCastExpr 0x13a128560 <col:13, col:14> 'char' <LValueToRValue>
    |   | | | |   `-UnaryOperator 0x13a128528 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow
    |   | | | |     `-ImplicitCastExpr 0x13a128510 <col:14> 'const char *' <LValueToRValue>
    |   | | | |       `-DeclRefExpr 0x13a1284f0 <col:14> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    |   | | | `-IntegerLiteral 0x13a128540 <col:19> 'int' 0
    |   | | `-BinaryOperator 0x13a128648 <col:24, col:29> 'int' '<'
    |   | |   |-ImplicitCastExpr 0x13a128630 <col:24, col:25> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x13a128618 <col:24, col:25> 'char' <LValueToRValue>
    |   | |   |   `-UnaryOperator 0x13a1285e8 <col:24, col:25> 'const char' lvalue prefix '*' cannot overflow
    |   | |   |     `-ImplicitCastExpr 0x13a1285d0 <col:25> 'const char *' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x13a1285b0 <col:25> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    |   | |   `-CharacterLiteral 0x13a128600 <col:29> 'int' 32
    |   | `-CompoundStmt 0x13a809a08 <col:34, line:11:9>
    |   |   |-CallExpr 0x13a809978 <line:8:13, line:9:32> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13a1287e0 <line:8:13> 'int ()' Function 0x13a128728 'AM_LOG_RERROR' 'int ()'
    |   |   | |-RecoveryExpr 0x13a809918 <col:27> '<dependent type>' contains-errors lvalue
    |   |   | |-RecoveryExpr 0x13a809938 <col:39> '<dependent type>' contains-errors lvalue
    |   |   | |-RecoveryExpr 0x13a809958 <col:50> '<dependent type>' contains-errors lvalue
    |   |   | |-RecoveryExpr 0x13a809848 <col:68> '<dependent type>' contains-errors lvalue
    |   |   | `-StringLiteral 0x13a8098b0 <line:9:27> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x13a8099f8 <line:10:13, col:20>
    |   |     `-RecoveryExpr 0x13a8099d8 <col:20> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x13a809d00 <line:12:9, line:17:9>
    |     |-BinaryOperator 0x13a809ae0 <line:12:13, col:19> 'int' '=='
    |     | |-ImplicitCastExpr 0x13a809ac8 <col:13, col:14> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x13a809ab0 <col:13, col:14> 'char' <LValueToRValue>
    |     | |   `-UnaryOperator 0x13a809a80 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x13a809a68 <col:14> 'const char *' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x13a809a48 <col:14> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    |     | `-CharacterLiteral 0x13a809a98 <col:19> 'int' 92
    |     `-CompoundStmt 0x13a809ce0 <col:25, line:17:9>
    |       |-CallExpr 0x13a809c50 <line:14:13, line:15:32> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x13a809b00 <line:14:13> 'int ()' Function 0x13a128728 'AM_LOG_RERROR' 'int ()'
    |       | |-RecoveryExpr 0x13a809bf0 <col:27> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x13a809c10 <col:39> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x13a809c30 <col:50> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x13a809b68 <col:68> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x13a809b88 <line:15:27> 'char[4]' lvalue "STR"
    |       `-ReturnStmt 0x13a809cd0 <line:16:13, col:20>
    |         `-RecoveryExpr 0x13a809cb0 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13a809db0 <line:20:5, col:12>
      `-RecoveryExpr 0x13a809d90 <col:12> '<dependent type>' contains-errors lvalue
