TranslationUnitDecl 0x14b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b855bd0 '__int128'
|-TypedefDecl 0x14b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b855bf0 'unsigned __int128'
|-TypedefDecl 0x14b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b926000 'struct __NSConstantString_tag'
|   `-Record 0x14b856580 '__NSConstantString_tag'
|-TypedefDecl 0x14b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b855d90 '__SVInt8_t'
|-TypedefDecl 0x14b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b855db0 '__SVInt16_t'
|-TypedefDecl 0x14b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b855dd0 '__SVInt32_t'
|-TypedefDecl 0x14b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b855df0 '__SVInt64_t'
|-TypedefDecl 0x14b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b855e10 '__SVUint8_t'
|-TypedefDecl 0x14b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b855e30 '__SVUint16_t'
|-TypedefDecl 0x14b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b855e50 '__SVUint32_t'
|-TypedefDecl 0x14b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b855e70 '__SVUint64_t'
|-TypedefDecl 0x14b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b855e90 '__SVFloat16_t'
|-TypedefDecl 0x14b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b856390 '__SVBool_t'
|-TypedefDecl 0x14b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b8563f0 '__SVCount_t'
|-TypedefDecl 0x14b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b927fb0 'char *'
|   `-BuiltinType 0x14b8556b0 'char'
|-TypedefDecl 0x14b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b927fb0 'char *'
|   `-BuiltinType 0x14b8556b0 'char'
|-FunctionDecl 0x14b928310 <dataset_diviso_filec/func2774_vuln.c:3:1, line:37:23> line:3:6 invalid dump_isom_sdp 'void (int *, char *, _Bool)'
| |-ParmVarDecl 0x14b928128 <col:20, col:32> col:32 referenced invalid file 'int *'
| |-ParmVarDecl 0x14b9281a8 <col:38, col:44> col:44 used inName 'char *'
| |-ParmVarDecl 0x14b928220 <col:52, col:57> col:57 used is_final_name '_Bool'
| `-CompoundStmt 0x14d009560 <line:4:1, line:37:23>
|   |-DeclStmt 0x14b928450 <line:5:2, col:17>
|   | `-VarDecl 0x14b9283e8 <col:2, col:14> col:14 used sdp 'const char *'
|   |-IfStmt 0x14d008cf0 <line:9:2, line:25:2> has_else
|   | |-ImplicitCastExpr 0x14b9284a0 <line:9:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14b928480 <col:6> 'char *' lvalue ParmVar 0x14b9281a8 'inName' 'char *'
|   | |-CompoundStmt 0x14d008bb8 <col:14, line:22:2>
|   | | |-DeclStmt 0x14b9285c8 <line:10:3, col:19>
|   | | | `-VarDecl 0x14b928560 <col:3, col:18> col:8 used szBuf 'char[1024]'
|   | | |-CallExpr 0x14c00a328 <line:11:3, col:23> 'char *'
|   | | | |-ImplicitCastExpr 0x14c00a310 <col:3> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14c00a250 <col:3> 'char *(char *, const char *)' Function 0x14c00a070 'strcpy' 'char *(char *, const char *)'
|   | | | |-ImplicitCastExpr 0x14c00a358 <col:10> 'char *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x14c00a270 <col:10> 'char[1024]' lvalue Var 0x14b928560 'szBuf' 'char[1024]'
|   | | | `-ImplicitCastExpr 0x14c00a388 <col:17> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x14c00a370 <col:17> 'char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x14c00a290 <col:17> 'char *' lvalue ParmVar 0x14b9281a8 'inName' 'char *'
|   | | |-IfStmt 0x14c00ac58 <line:12:3, line:16:3>
|   | | | |-UnaryOperator 0x14c00a3d8 <line:12:7, col:8> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x14c00a3c0 <col:8> '_Bool' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x14c00a3a0 <col:8> '_Bool' lvalue ParmVar 0x14b928220 'is_final_name' '_Bool'
|   | | | `-CompoundStmt 0x14c00ac30 <col:23, line:16:3>
|   | | |   |-DeclStmt 0x14c00a7a8 <line:13:4, col:34>
|   | | |   | `-VarDecl 0x14c00a408 <col:4, col:33> col:10 used ext 'char *' cinit
|   | | |   |   `-CallExpr 0x14c00a748 <col:16, col:33> 'char *'
|   | | |   |     |-ImplicitCastExpr 0x14c00a730 <col:16> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | |   |     | `-DeclRefExpr 0x14c00a690 <col:16> 'char *(const char *, int)' Function 0x14c00a4b0 'strchr' 'char *(const char *, int)'
|   | | |   |     |-ImplicitCastExpr 0x14c00a790 <col:23> 'const char *' <NoOp>
|   | | |   |     | `-ImplicitCastExpr 0x14c00a778 <col:23> 'char *' <ArrayToPointerDecay>
|   | | |   |     |   `-DeclRefExpr 0x14c00a6b0 <col:23> 'char[1024]' lvalue Var 0x14b928560 'szBuf' 'char[1024]'
|   | | |   |     `-CharacterLiteral 0x14c00a6d0 <col:30> 'int' 46
|   | | |   |-IfStmt 0x14c00a8c8 <line:14:4, col:22>
|   | | |   | |-ImplicitCastExpr 0x14c00a7e0 <col:8> 'char *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x14c00a7c0 <col:8> 'char *' lvalue Var 0x14c00a408 'ext' 'char *'
|   | | |   | `-BinaryOperator 0x14c00a8a8 <col:13, col:22> 'char' '='
|   | | |   |   |-ArraySubscriptExpr 0x14c00a850 <col:13, col:18> 'char' lvalue
|   | | |   |   | |-ImplicitCastExpr 0x14c00a838 <col:13> 'char *' <LValueToRValue>
|   | | |   |   | | `-DeclRefExpr 0x14c00a7f8 <col:13> 'char *' lvalue Var 0x14c00a408 'ext' 'char *'
|   | | |   |   | `-IntegerLiteral 0x14c00a818 <col:17> 'int' 0
|   | | |   |   `-ImplicitCastExpr 0x14c00a890 <col:22> 'char' <IntegralCast>
|   | | |   |     `-IntegerLiteral 0x14c00a870 <col:22> 'int' 0
|   | | |   `-CallExpr 0x14c00abb8 <line:15:4, col:23> 'char *'
|   | | |     |-ImplicitCastExpr 0x14c00aba0 <col:4> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x14c00aac8 <col:4> 'char *(char *, const char *)' Function 0x14c00a8e8 'strcat' 'char *(char *, const char *)'
|   | | |     |-ImplicitCastExpr 0x14c00abe8 <col:11> 'char *' <ArrayToPointerDecay>
|   | | |     | `-DeclRefExpr 0x14c00aae8 <col:11> 'char[1024]' lvalue Var 0x14b928560 'szBuf' 'char[1024]'
|   | | |     `-ImplicitCastExpr 0x14c00ac18 <col:18> 'const char *' <NoOp>
|   | | |       `-ImplicitCastExpr 0x14c00ac00 <col:18> 'char *' <ArrayToPointerDecay>
|   | | |         `-StringLiteral 0x14c00ab50 <col:18> 'char[4]' lvalue "STR"
|   | | `-IfStmt 0x14d008b98 <line:18:3, line:21:3>
|   | |   |-UnaryOperator 0x14d008968 <line:18:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   | `-ImplicitCastExpr 0x14d008950 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |   |   `-RecoveryExpr 0x14d008930 <col:8> '<dependent type>' contains-errors lvalue
|   | |   `-CompoundStmt 0x14d008b78 <col:14, line:21:3>
|   | |     |-CallExpr 0x14d008b30 <line:19:4, col:32> '<dependent type>' contains-errors
|   | |     | |-DeclRefExpr 0x14d008a60 <col:4> 'int ()' Function 0x14d0089a8 'fprintf' 'int ()'
|   | |     | |-RecoveryExpr 0x14d008b10 <col:12> '<dependent type>' contains-errors lvalue
|   | |     | |-StringLiteral 0x14d008a98 <col:20> 'char[4]' lvalue "STR"
|   | |     | `-DeclRefExpr 0x14d008ab8 <col:27> 'char[1024]' lvalue Var 0x14b928560 'szBuf' 'char[1024]'
|   | |     `-ReturnStmt 0x14d008b68 <line:20:4>
|   | `-CompoundStmt 0x14d008cd8 <line:22:9, line:25:2>
|   |   `-CallExpr 0x14d008ca8 <line:24:3, col:22> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14d008c00 <col:3> 'int ()' Function 0x14d0089a8 'fprintf' 'int ()'
|   |     |-RecoveryExpr 0x14d008c88 <col:11> '<dependent type>' contains-errors lvalue
|   |     `-StringLiteral 0x14d008c38 <col:17> 'char[4]' lvalue "STR"
|   `-CallExpr 0x14d008f68 <line:27:2, col:35> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x14d008e00 <col:2> 'int ()' Function 0x14d008d48 'gf_isom_sdp_get' 'int ()'
|     |-RecoveryExpr 0x14d008e20 <col:18> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x14d008e90 <col:24, col:25> 'const char **' prefix '&' cannot overflow
|     | `-DeclRefExpr 0x14d008e40 <col:25> 'const char *' lvalue Var 0x14b9283e8 'sdp' 'const char *'
|     `-UnaryOperator 0x14d008f50 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|       `-RecoveryExpr 0x14d008f30 <col:31> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x14c00a070 <line:11:3> col:3 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x14c00a170 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x14c00a1d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14c00a118 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x14c00a4b0 <line:13:16> col:16 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x14c00a5b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14c00a618 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x14c00a558 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x14c00a8e8 <line:15:4> col:4 implicit used strcat 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x14c00a9e8 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x14c00aa50 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14c00a990 <<invalid sloc>> Implicit 889
