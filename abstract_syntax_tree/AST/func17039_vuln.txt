TranslationUnitDecl 0x122855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122855bd0 '__int128'
|-TypedefDecl 0x122856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122855bf0 'unsigned __int128'
|-TypedefDecl 0x12300be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12300bc00 'struct __NSConstantString_tag'
|   `-Record 0x122856580 '__NSConstantString_tag'
|-TypedefDecl 0x12300be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122855d90 '__SVInt8_t'
|-TypedefDecl 0x12300bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122855db0 '__SVInt16_t'
|-TypedefDecl 0x12300bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122855dd0 '__SVInt32_t'
|-TypedefDecl 0x12300bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122855df0 '__SVInt64_t'
|-TypedefDecl 0x12300c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122855e10 '__SVUint8_t'
|-TypedefDecl 0x12300c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122855e30 '__SVUint16_t'
|-TypedefDecl 0x12300c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122855e50 '__SVUint32_t'
|-TypedefDecl 0x12300c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122855e70 '__SVUint64_t'
|-TypedefDecl 0x12300c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122855e90 '__SVFloat16_t'
|-TypedefDecl 0x12300c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12300c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12300c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12300c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12300c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12300c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12300c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12300c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12300c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12300c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12300c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12300c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12300c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12300c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12300c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12300c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12300c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1228560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12300c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1228560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12300c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1228560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12300c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12300ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12300cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12300cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12300cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12300d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1228561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12300d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1228561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12300d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1228561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12300d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12300d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12300d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12300d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12300d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12300d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12300d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12300d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12300d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12300d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12300d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12300d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12300da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122856390 '__SVBool_t'
|-TypedefDecl 0x12300da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12300dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12300db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228563f0 '__SVCount_t'
|-TypedefDecl 0x12300dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12300dbb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-TypedefDecl 0x12300dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12300dbb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
`-FunctionDecl 0x12300de88 <dataset_diviso_filec/func17039_vuln.c:1:1, line:37:1> line:1:12 invalid vp8dx_decode_bool 'int (int *, int)' static
  |-ParmVarDecl 0x12300dd28 <col:30, col:44> col:44 referenced invalid br 'int *'
  |-ParmVarDecl 0x12300dda8 <col:48, col:52> col:52 used probability 'int'
  `-CompoundStmt 0x122923df0 <col:65, line:37:1>
    |-DeclStmt 0x12300dff8 <line:2:3, col:23>
    | `-VarDecl 0x12300df58 <col:3, col:22> col:16 used bit 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x12300dfe0 <col:22> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x12300dfc0 <col:22> 'int' 0
    |-DeclStmt 0x12300e090 <line:4:3, col:21>
    | `-VarDecl 0x12300e028 <col:3, col:16> col:16 used split 'unsigned int'
    |-DeclStmt 0x12300e128 <line:6:3, col:12>
    | `-VarDecl 0x12300e0c0 <col:3, col:7> col:7 used count 'int'
    |-DeclStmt 0x12300e1c0 <line:7:3, col:21>
    | `-VarDecl 0x12300e158 <col:3, col:16> col:16 used range 'unsigned int'
    |-BinaryOperator 0x12300e3c0 <line:9:3, col:52> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x12300e1d8 <col:3> 'unsigned int' lvalue Var 0x12300e028 'split' 'unsigned int'
    | `-BinaryOperator 0x12300e3a0 <col:11, col:52> '<dependent type>' contains-errors '+'
    |   |-IntegerLiteral 0x12300e1f8 <col:11> 'int' 1
    |   `-ParenExpr 0x12300e380 <col:15, col:52> '<dependent type>' contains-errors
    |     `-BinaryOperator 0x12300e360 <col:16, col:51> '<dependent type>' contains-errors '>>'
    |       |-ParenExpr 0x12300e320 <col:16, col:46> '<dependent type>' contains-errors
    |       | `-BinaryOperator 0x12300e300 <col:17, col:35> '<dependent type>' contains-errors '*'
    |       |   |-ParenExpr 0x12300e2c0 <col:17, col:31> '<dependent type>' contains-errors
    |       |   | `-BinaryOperator 0x12300e2a0 <col:18, col:30> '<dependent type>' contains-errors '-'
    |       |   |   |-CXXDependentScopeMemberExpr 0x12300e238 <col:18, col:22> '<dependent type>' contains-errors lvalue ->range
    |       |   |   | `-RecoveryExpr 0x12300e218 <col:18> '<dependent type>' contains-errors lvalue
    |       |   |   `-IntegerLiteral 0x12300e280 <col:30> 'int' 1
    |       |   `-DeclRefExpr 0x12300e2e0 <col:35> 'int' lvalue ParmVar 0x12300dda8 'probability' 'int'
    |       `-IntegerLiteral 0x12300e340 <col:51> 'int' 8
    |-IfStmt 0x122923448 <line:11:3, col:48>
    | |-BinaryOperator 0x122923268 <col:7, col:19> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x122923200 <col:7, col:11> '<dependent type>' contains-errors lvalue ->count
    | | | `-RecoveryExpr 0x12300e3e0 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x122923248 <col:19> 'int' 0
    | `-CallExpr 0x122923420 <col:22, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1229233e0 <col:22> 'int ()' Function 0x122923328 'vp8dx_bool_decoder_fill' 'int ()'
    |   `-RecoveryExpr 0x122923400 <col:46> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x122923558 <line:14:3, col:15> 'int' contains-errors '='
    | |-DeclRefExpr 0x1229234d0 <col:3> 'int' lvalue Var 0x12300e0c0 'count' 'int'
    | `-CXXDependentScopeMemberExpr 0x122923510 <col:11, col:15> '<dependent type>' contains-errors lvalue ->count
    |   `-RecoveryExpr 0x1229234f0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1229235e8 <line:18:3, col:11> 'unsigned int' '='
    | |-DeclRefExpr 0x122923590 <col:3> 'unsigned int' lvalue Var 0x12300e158 'range' 'unsigned int'
    | `-ImplicitCastExpr 0x1229235d0 <col:11> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x1229235b0 <col:11> 'unsigned int' lvalue Var 0x12300e028 'split' 'unsigned int'
    |-IfStmt 0x122923888 <line:20:3, line:24:3>
    | |-BinaryOperator 0x122923698 <line:20:7, col:16> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x122923658 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x122923678 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x122923868 <col:26, line:24:3>
    |   |-BinaryOperator 0x122923780 <line:21:5, col:25> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x1229236b8 <col:5> 'unsigned int' lvalue Var 0x12300e158 'range' 'unsigned int'
    |   | `-BinaryOperator 0x122923760 <col:13, col:25> '<dependent type>' contains-errors '-'
    |   |   |-CXXDependentScopeMemberExpr 0x1229236f8 <col:13, col:17> '<dependent type>' contains-errors lvalue ->range
    |   |   | `-RecoveryExpr 0x1229236d8 <col:13> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x122923740 <col:25> 'unsigned int' lvalue Var 0x12300e028 'split' 'unsigned int'
    |   `-BinaryOperator 0x122923848 <line:23:5, col:11> 'unsigned int' '='
    |     |-DeclRefExpr 0x1229237f0 <col:5> 'unsigned int' lvalue Var 0x12300df58 'bit' 'unsigned int'
    |     `-ImplicitCastExpr 0x122923830 <col:11> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x122923810 <col:11> 'int' 1
    |-CompoundStmt 0x122923ac0 <line:26:3, line:31:3>
    | |-DeclStmt 0x122923960 <line:27:5, col:38>
    | | `-VarDecl 0x1229238c0 <col:5, col:15> col:15 used shift 'const int'
    | |-CompoundAssignOperator 0x1229239e8 <line:28:5, col:15> 'unsigned int' '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | | |-DeclRefExpr 0x122923978 <col:5> 'unsigned int' lvalue Var 0x12300e158 'range' 'unsigned int'
    | | `-ImplicitCastExpr 0x1229239d0 <col:15> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x122923998 <col:15> 'const int' lvalue Var 0x1229238c0 'shift' 'const int'
    | `-CompoundAssignOperator 0x122923a90 <line:30:5, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-DeclRefExpr 0x122923a38 <col:5> 'int' lvalue Var 0x12300e0c0 'count' 'int'
    |   `-ImplicitCastExpr 0x122923a78 <col:14> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x122923a58 <col:14> 'const int' lvalue Var 0x1229238c0 'shift' 'const int'
    |-BinaryOperator 0x122923bd0 <line:32:3, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x122923b30 <col:3, col:7> '<dependent type>' contains-errors lvalue ->value
    | | `-RecoveryExpr 0x122923b08 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x122923ae8 <col:3> 'int *' lvalue ParmVar 0x12300dd28 'br' 'int *'
    | `-RecoveryExpr 0x122923bb0 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x122923ca0 <line:33:3, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x122923c38 <col:3, col:7> '<dependent type>' contains-errors lvalue ->count
    | | `-RecoveryExpr 0x122923c10 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x122923bf0 <col:3> 'int *' lvalue ParmVar 0x12300dd28 'br' 'int *'
    | `-DeclRefExpr 0x122923c80 <col:15> 'int' lvalue Var 0x12300e0c0 'count' 'int'
    |-BinaryOperator 0x122923d70 <line:34:3, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x122923d08 <col:3, col:7> '<dependent type>' contains-errors lvalue ->range
    | | `-RecoveryExpr 0x122923ce0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x122923cc0 <col:3> 'int *' lvalue ParmVar 0x12300dd28 'br' 'int *'
    | `-DeclRefExpr 0x122923d50 <col:15> 'unsigned int' lvalue Var 0x12300e158 'range' 'unsigned int'
    `-ReturnStmt 0x122923de0 <line:36:3, col:10>
      `-ImplicitCastExpr 0x122923dc8 <col:10> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x122923db0 <col:10> 'unsigned int' <LValueToRValue>
          `-DeclRefExpr 0x122923d90 <col:10> 'unsigned int' lvalue Var 0x12300df58 'bit' 'unsigned int'
