TranslationUnitDecl 0x12f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f055bd0 '__int128'
|-TypedefDecl 0x12f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f055bf0 'unsigned __int128'
|-TypedefDecl 0x12f126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f126000 'struct __NSConstantString_tag'
|   `-Record 0x12f056580 '__NSConstantString_tag'
|-TypedefDecl 0x12f126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f055d90 '__SVInt8_t'
|-TypedefDecl 0x12f126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f055db0 '__SVInt16_t'
|-TypedefDecl 0x12f126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f055dd0 '__SVInt32_t'
|-TypedefDecl 0x12f1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f055df0 '__SVInt64_t'
|-TypedefDecl 0x12f126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f055e10 '__SVUint8_t'
|-TypedefDecl 0x12f1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f055e30 '__SVUint16_t'
|-TypedefDecl 0x12f126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f055e50 '__SVUint32_t'
|-TypedefDecl 0x12f126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f055e70 '__SVUint64_t'
|-TypedefDecl 0x12f1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f055e90 '__SVFloat16_t'
|-TypedefDecl 0x12f126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12f1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12f126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f056390 '__SVBool_t'
|-TypedefDecl 0x12f127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f0563f0 '__SVCount_t'
|-TypedefDecl 0x12f127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f127fb0 'char *'
|   `-BuiltinType 0x12f0556b0 'char'
|-TypedefDecl 0x12f128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f127fb0 'char *'
|   `-BuiltinType 0x12f0556b0 'char'
`-FunctionDecl 0x12f1281a8 <dataset_diviso_filec/func2656_nonvuln.c:1:5, line:29:5> line:1:18 referenced readBits 'unsigned int (int)'
  |-ParmVarDecl 0x12f1280d8 <col:27, col:31> col:31 used n 'int'
  `-CompoundStmt 0x12f808918 <line:2:5, line:29:5>
    |-DeclStmt 0x12f1283b8 <line:3:9, col:31>
    | |-VarDecl 0x12f1282b8 <col:9, col:22> col:22 used bit 'unsigned int'
    | `-VarDecl 0x12f128338 <col:9, col:27> col:27 used bits 'unsigned int'
    |-IfStmt 0x12f1284c0 <line:5:9, line:7:9>
    | |-BinaryOperator 0x12f128428 <line:5:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x12f128410 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f1283d0 <col:13> 'int' lvalue ParmVar 0x12f1280d8 'n' 'int'
    | | `-IntegerLiteral 0x12f1283f0 <col:17> 'int' 0
    | `-CompoundStmt 0x12f1284a8 <col:20, line:7:9>
    |   `-ReturnStmt 0x12f128498 <line:6:13, col:21>
    |     `-ImplicitCastExpr 0x12f128480 <col:20, col:21> 'unsigned int' <IntegralCast>
    |       `-UnaryOperator 0x12f128468 <col:20, col:21> 'int' prefix '-'
    |         `-IntegerLiteral 0x12f128448 <col:21> 'int' 1
    |-IfStmt 0x12f1285b8 <line:8:9, line:10:9>
    | |-BinaryOperator 0x12f128538 <line:8:13, col:18> 'int' '=='
    | | |-ImplicitCastExpr 0x12f128520 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f1284e0 <col:13> 'int' lvalue ParmVar 0x12f1280d8 'n' 'int'
    | | `-IntegerLiteral 0x12f128500 <col:18> 'int' 0
    | `-CompoundStmt 0x12f1285a0 <col:21, line:10:9>
    |   `-ReturnStmt 0x12f128590 <line:9:13, col:20>
    |     `-ImplicitCastExpr 0x12f128578 <col:20> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x12f128558 <col:20> 'int' 0
    |-IfStmt 0x12f808260 <line:12:9, line:14:9>
    | |-BinaryOperator 0x12f128630 <line:12:13, col:18> 'int' '=='
    | | |-ImplicitCastExpr 0x12f128618 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f1285d8 <col:13> 'int' lvalue ParmVar 0x12f1280d8 'n' 'int'
    | | `-IntegerLiteral 0x12f1285f8 <col:18> 'int' 1
    | `-CompoundStmt 0x12f808248 <col:21, line:14:9>
    |   `-ReturnStmt 0x12f808238 <line:13:13, col:28>
    |     `-ImplicitCastExpr 0x12f808220 <col:20, col:28> 'unsigned int' <IntegralCast>
    |       `-CallExpr 0x12f808200 <col:20, col:28> 'int'
    |         `-ImplicitCastExpr 0x12f1287d0 <col:20> 'int (*)()' <FunctionToPointerDecay>
    |           `-DeclRefExpr 0x12f128780 <col:20> 'int ()' Function 0x12f1286c8 'readBit' 'int ()'
    |-BinaryOperator 0x12f808310 <line:16:9, col:23> 'unsigned int' '='
    | |-DeclRefExpr 0x12f808280 <col:9> 'unsigned int' lvalue Var 0x12f1282b8 'bit' 'unsigned int'
    | `-ImplicitCastExpr 0x12f8082f8 <col:15, col:23> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x12f8082d8 <col:15, col:23> 'int'
    |     `-ImplicitCastExpr 0x12f8082c0 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x12f8082a0 <col:15> 'int ()' Function 0x12f1286c8 'readBit' 'int ()'
    |-IfStmt 0x12f808478 <line:17:9, line:19:9>
    | |-BinaryOperator 0x12f8083e0 <line:17:13, col:35> 'int' '=='
    | | |-ImplicitCastExpr 0x12f8083c8 <col:13> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f808330 <col:13> 'unsigned int' lvalue Var 0x12f1282b8 'bit' 'unsigned int'
    | | `-CStyleCastExpr 0x12f8083a0 <col:20, col:35> 'unsigned int' <IntegralCast>
    | |   `-UnaryOperator 0x12f808370 <col:34, col:35> 'int' prefix '-'
    | |     `-IntegerLiteral 0x12f808350 <col:35> 'int' 1
    | `-CompoundStmt 0x12f808460 <col:38, line:19:9>
    |   `-ReturnStmt 0x12f808450 <line:18:13, col:21>
    |     `-ImplicitCastExpr 0x12f808438 <col:20, col:21> 'unsigned int' <IntegralCast>
    |       `-UnaryOperator 0x12f808420 <col:20, col:21> 'int' prefix '-'
    |         `-IntegerLiteral 0x12f808400 <col:21> 'int' 1
    |-BinaryOperator 0x12f8085a8 <line:21:9, col:28> 'unsigned int' '='
    | |-DeclRefExpr 0x12f808498 <col:9> 'unsigned int' lvalue Var 0x12f1282b8 'bit' 'unsigned int'
    | `-BinaryOperator 0x12f808588 <col:15, col:28> 'unsigned int' '<<'
    |   |-ImplicitCastExpr 0x12f808570 <col:15> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12f8084b8 <col:15> 'unsigned int' lvalue Var 0x12f1282b8 'bit' 'unsigned int'
    |   `-ParenExpr 0x12f808550 <col:22, col:28> 'int'
    |     `-BinaryOperator 0x12f808530 <col:23, col:27> 'int' '-'
    |       |-ImplicitCastExpr 0x12f808518 <col:23> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x12f8084d8 <col:23> 'int' lvalue ParmVar 0x12f1280d8 'n' 'int'
    |       `-IntegerLiteral 0x12f8084f8 <col:27> 'int' 1
    |-BinaryOperator 0x12f8086f0 <line:23:9, col:30> 'unsigned int' '='
    | |-DeclRefExpr 0x12f8085c8 <col:9> 'unsigned int' lvalue Var 0x12f128338 'bits' 'unsigned int'
    | `-CallExpr 0x12f8086c8 <col:16, col:30> 'unsigned int'
    |   |-ImplicitCastExpr 0x12f8086b0 <col:16> 'unsigned int (*)(int)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12f8085e8 <col:16> 'unsigned int (int)' Function 0x12f1281a8 'readBits' 'unsigned int (int)'
    |   `-BinaryOperator 0x12f808660 <col:25, col:29> 'int' '-'
    |     |-ImplicitCastExpr 0x12f808648 <col:25> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x12f808608 <col:25> 'int' lvalue ParmVar 0x12f1280d8 'n' 'int'
    |     `-IntegerLiteral 0x12f808628 <col:29> 'int' 1
    |-IfStmt 0x12f808858 <line:24:9, line:26:9>
    | |-BinaryOperator 0x12f8087c0 <line:24:13, col:36> 'int' '=='
    | | |-ImplicitCastExpr 0x12f8087a8 <col:13> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f808710 <col:13> 'unsigned int' lvalue Var 0x12f128338 'bits' 'unsigned int'
    | | `-CStyleCastExpr 0x12f808780 <col:21, col:36> 'unsigned int' <IntegralCast>
    | |   `-UnaryOperator 0x12f808750 <col:35, col:36> 'int' prefix '-'
    | |     `-IntegerLiteral 0x12f808730 <col:36> 'int' 1
    | `-CompoundStmt 0x12f808840 <col:39, line:26:9>
    |   `-ReturnStmt 0x12f808830 <line:25:13, col:21>
    |     `-ImplicitCastExpr 0x12f808818 <col:20, col:21> 'unsigned int' <IntegralCast>
    |       `-UnaryOperator 0x12f808800 <col:20, col:21> 'int' prefix '-'
    |         `-IntegerLiteral 0x12f8087e0 <col:21> 'int' 1
    `-ReturnStmt 0x12f808908 <line:28:9, col:22>
      `-BinaryOperator 0x12f8088e8 <col:16, col:22> 'unsigned int' '|'
        |-ImplicitCastExpr 0x12f8088b8 <col:16> 'unsigned int' <LValueToRValue>
        | `-DeclRefExpr 0x12f808878 <col:16> 'unsigned int' lvalue Var 0x12f1282b8 'bit' 'unsigned int'
        `-ImplicitCastExpr 0x12f8088d0 <col:22> 'unsigned int' <LValueToRValue>
          `-DeclRefExpr 0x12f808898 <col:22> 'unsigned int' lvalue Var 0x12f128338 'bits' 'unsigned int'
