TranslationUnitDecl 0x150055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150055bd0 '__int128'
|-TypedefDecl 0x150056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150055bf0 'unsigned __int128'
|-TypedefDecl 0x150126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x150126000 'struct __NSConstantString_tag'
|   `-Record 0x150056580 '__NSConstantString_tag'
|-TypedefDecl 0x150126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150055d90 '__SVInt8_t'
|-TypedefDecl 0x150126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150055db0 '__SVInt16_t'
|-TypedefDecl 0x150126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150055dd0 '__SVInt32_t'
|-TypedefDecl 0x1501263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150055df0 '__SVInt64_t'
|-TypedefDecl 0x150126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150055e10 '__SVUint8_t'
|-TypedefDecl 0x1501264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150055e30 '__SVUint16_t'
|-TypedefDecl 0x150126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150055e50 '__SVUint32_t'
|-TypedefDecl 0x150126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150055e70 '__SVUint64_t'
|-TypedefDecl 0x1501265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150055e90 '__SVFloat16_t'
|-TypedefDecl 0x150126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1501266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150055ed0 '__SVFloat64_t'
|-TypedefDecl 0x150126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x150126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1501267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x150126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1501268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x150126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x150126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1501269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x150126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x150126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x150126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150056090 '__clang_svint8x3_t'
|-TypedefDecl 0x150126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x150126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1500560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x150126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1500560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x150126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x150126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x150126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x150126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x150126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1500561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1501278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1500561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1501279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150056230 '__clang_svint16x4_t'
|-TypedefDecl 0x150127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150056250 '__clang_svint32x4_t'
|-TypedefDecl 0x150127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150056270 '__clang_svint64x4_t'
|-TypedefDecl 0x150127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x150127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x150127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1500562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x150127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1500562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x150127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x150127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x150127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150056390 '__SVBool_t'
|-TypedefDecl 0x150127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x150127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1500563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x150127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1500563f0 '__SVCount_t'
|-TypedefDecl 0x150127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x150127fb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-TypedefDecl 0x150128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x150127fb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-FunctionDecl 0x150128238 <dataset_diviso_filec/func16770_vuln.c:1:1, line:46:1> line:1:14 load_text_file 'char *(const char *, unsigned int)' static
| |-ParmVarDecl 0x1501280d8 <col:29, col:41> col:41 used path 'const char *'
| |-ParmVarDecl 0x150128158 <col:47, col:56> col:56 used flags 'unsigned int'
| `-CompoundStmt 0x148009fa8 <line:2:1, line:46:1>
|   |-IfStmt 0x150141b28 <line:4:5, line:9:5>
|   | |-UnaryOperator 0x150128648 <line:4:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x150128630 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x150128610 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x150141b10 <line:5:5, line:9:5>
|   |   `-IfStmt 0x150141898 <line:6:9, line:7:35>
|   |     |-RecoveryExpr 0x1501286b8 <line:6:13, col:45> '_Bool' contains-errors
|   |     `-CallExpr 0x150141838 <line:7:13, col:35> 'int'
|   |       |-ImplicitCastExpr 0x150141820 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1501287b8 <col:13> 'int ()' Function 0x150128700 'perror_msg' 'int ()'
|   |       |-ImplicitCastExpr 0x150141868 <col:24> 'char *' <ArrayToPointerDecay>
|   |       | `-StringLiteral 0x1501287d8 <col:24> 'char[4]' lvalue "STR"
|   |       `-ImplicitCastExpr 0x150141880 <col:31> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x150141800 <col:31> 'const char *' lvalue ParmVar 0x1501280d8 'path' 'const char *'
|   |-DeclStmt 0x1501422a8 <line:11:5, col:46>
|   | |-RecordDecl 0x150141b48 <col:5, col:12> col:12 struct strbuf
|   | `-VarDecl 0x150141cb8 <col:5, col:45> col:20 used buf_content 'struct strbuf *' cinit
|   |   `-ImplicitCastExpr 0x150141e58 <col:34, col:45> 'struct strbuf *' <IntegralToPointer>
|   |     `-CallExpr 0x150141e38 <col:34, col:45> 'int'
|   |       `-ImplicitCastExpr 0x150141e20 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x150141e00 <col:34> 'int ()' Function 0x150141d48 'strbuf_new' 'int ()'
|   |-DeclStmt 0x150142360 <line:12:5, col:20>
|   | `-VarDecl 0x1501422d8 <col:5, col:19> col:9 used oneline 'int' cinit
|   |   `-IntegerLiteral 0x150142340 <col:19> 'int' 0
|   |-DeclStmt 0x1501423f8 <line:13:5, col:11>
|   | `-VarDecl 0x150142390 <col:5, col:9> col:9 used ch 'int'
|   |-WhileStmt 0x1480095b8 <line:14:5, line:24:5>
|   | |-RecoveryExpr 0x1501425a8 <line:14:12, col:32> '_Bool' contains-errors
|   | `-CompoundStmt 0x148009590 <line:15:5, line:24:5>
|   |   |-IfStmt 0x150142750 <line:18:9, line:19:40>
|   |   | |-BinaryOperator 0x150142618 <line:18:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x150142600 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1501425c8 <col:13> 'int' lvalue Var 0x150142390 'ch' 'int'
|   |   | | `-CharacterLiteral 0x1501425e8 <col:19> 'int' 10
|   |   | `-BinaryOperator 0x150142730 <line:19:13, col:40> 'int' '='
|   |   |   |-DeclRefExpr 0x150142638 <col:13> 'int' lvalue Var 0x1501422d8 'oneline' 'int'
|   |   |   `-BinaryOperator 0x150142710 <col:23, col:40> 'int' '|'
|   |   |     |-ParenExpr 0x1501426d0 <col:23, col:36> 'int'
|   |   |     | `-BinaryOperator 0x1501426b0 <col:24, col:35> 'int' '<<'
|   |   |     |   |-ImplicitCastExpr 0x150142698 <col:24> 'int' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x150142658 <col:24> 'int' lvalue Var 0x1501422d8 'oneline' 'int'
|   |   |     |   `-IntegerLiteral 0x150142678 <col:35> 'int' 1
|   |   |     `-IntegerLiteral 0x1501426f0 <col:40> 'int' 1
|   |   |-IfStmt 0x148009038 <line:20:9, line:21:18>
|   |   | |-BinaryOperator 0x1501427c0 <line:20:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1501427a8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x150142770 <col:13> 'int' lvalue Var 0x150142390 'ch' 'int'
|   |   | | `-CharacterLiteral 0x150142790 <col:19> 'int' 0
|   |   | `-BinaryOperator 0x148009018 <line:21:13, col:18> 'int' '='
|   |   |   |-DeclRefExpr 0x1501427e0 <col:13> 'int' lvalue Var 0x150142390 'ch' 'int'
|   |   |   `-CharacterLiteral 0x148009000 <col:18> 'int' 32
|   |   `-IfStmt 0x148009570 <line:22:9, line:23:47>
|   |     |-BinaryOperator 0x148009398 <line:22:13, col:34> 'int' '||'
|   |     | |-CallExpr 0x1480092e8 <col:13, col:23> 'int'
|   |     | | |-ImplicitCastExpr 0x1480092d0 <col:13> 'int (*)(int)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x148009258 <col:13> 'int (int)' Function 0x148009098 'isspace' 'int (int)'
|   |     | | `-ImplicitCastExpr 0x148009310 <col:21> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x148009278 <col:21> 'int' lvalue Var 0x150142390 'ch' 'int'
|   |     | `-BinaryOperator 0x148009378 <col:28, col:34> 'int' '>='
|   |     |   |-ImplicitCastExpr 0x148009360 <col:28> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x148009328 <col:28> 'int' lvalue Var 0x150142390 'ch' 'int'
|   |     |   `-CharacterLiteral 0x148009348 <col:34> 'int' 32
|   |     `-CallExpr 0x148009510 <line:23:13, col:47> 'int'
|   |       |-ImplicitCastExpr 0x1480094f8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x148009498 <col:13> 'int ()' Function 0x1480093e0 'strbuf_append_char' 'int ()'
|   |       |-ImplicitCastExpr 0x148009540 <col:32> 'struct strbuf *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1480094b8 <col:32> 'struct strbuf *' lvalue Var 0x150141cb8 'buf_content' 'struct strbuf *'
|   |       `-ImplicitCastExpr 0x148009558 <col:45> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1480094d8 <col:45> 'int' lvalue Var 0x150142390 'ch' 'int'
|   |-CallExpr 0x148009738 <line:25:5, col:14> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1480096b8 <col:5> 'int ()' Function 0x148009600 'fclose' 'int ()'
|   | `-RecoveryExpr 0x148009718 <col:12> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1480099d8 <line:27:5, col:74>
|   | `-VarDecl 0x148009770 <col:5, col:73> col:10 used last 'char' cinit
|   |   `-ConditionalOperator 0x1480099a8 <col:17, col:73> '<dependent type>' contains-errors
|   |     |-BinaryOperator 0x148009830 <col:17, col:28> 'int' '!='
|   |     | |-ImplicitCastExpr 0x148009818 <col:17> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1480097d8 <col:17> 'int' lvalue Var 0x1501422d8 'oneline' 'int'
|   |     | `-IntegerLiteral 0x1480097f8 <col:28> 'int' 0
|   |     |-ArraySubscriptExpr 0x148009968 <col:32, col:69> '<dependent type>' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x148009950 <col:32, col:45> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | `-RecoveryExpr 0x148009888 <col:32, col:45> '<dependent type>' contains-errors lvalue
|   |     | |   `-DeclRefExpr 0x148009850 <col:32> 'struct strbuf *' lvalue Var 0x150141cb8 'buf_content' 'struct strbuf *'
|   |     | `-BinaryOperator 0x148009930 <col:49, col:68> '<dependent type>' contains-errors '-'
|   |     |   |-RecoveryExpr 0x1480098e8 <col:49, col:62> '<dependent type>' contains-errors lvalue
|   |     |   | `-DeclRefExpr 0x1480098b0 <col:49> 'struct strbuf *' lvalue Var 0x150141cb8 'buf_content' 'struct strbuf *'
|   |     |   `-IntegerLiteral 0x148009910 <col:68> 'int' 1
|   |     `-IntegerLiteral 0x148009988 <col:73> 'int' 0
|   |-IfStmt 0x148009dd8 <line:28:5, line:43:5> has_else
|   | |-BinaryOperator 0x148009a58 <line:28:9, col:17> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x148009a40 <col:9> 'int' contains-errors <IntegralCast>
|   | | | `-ImplicitCastExpr 0x148009a28 <col:9> 'char' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1480099f0 <col:9> 'char' contains-errors lvalue Var 0x148009770 'last' 'char'
|   | | `-CharacterLiteral 0x148009a10 <col:17> 'int' 10
|   | |-CompoundStmt 0x148009c58 <line:29:5, line:33:5>
|   | | `-IfStmt 0x148009c38 <line:31:9, line:32:52>
|   | |   |-BinaryOperator 0x148009ad0 <line:31:13, col:24> 'int' '=='
|   | |   | |-ImplicitCastExpr 0x148009ab8 <col:13> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x148009a78 <col:13> 'int' lvalue Var 0x1501422d8 'oneline' 'int'
|   | |   | `-IntegerLiteral 0x148009a98 <col:24> 'int' 1
|   | |   `-BinaryOperator 0x148009c18 <line:32:13, col:52> '<dependent type>' contains-errors '='
|   | |     |-ArraySubscriptExpr 0x148009be0 <col:13, col:48> '<dependent type>' contains-errors lvalue
|   | |     | |-ImplicitCastExpr 0x148009bc8 <col:13, col:26> '<dependent type>' contains-errors <LValueToRValue>
|   | |     | | `-RecoveryExpr 0x148009b28 <col:13, col:26> '<dependent type>' contains-errors lvalue
|   | |     | |   `-DeclRefExpr 0x148009af0 <col:13> 'struct strbuf *' lvalue Var 0x150141cb8 'buf_content' 'struct strbuf *'
|   | |     | `-UnaryOperator 0x148009bb0 <col:30, col:45> '<dependent type>' contains-errors prefix '--' cannot overflow
|   | |     |   `-RecoveryExpr 0x148009b88 <col:32, col:45> '<dependent type>' contains-errors lvalue
|   | |     |     `-DeclRefExpr 0x148009b50 <col:32> 'struct strbuf *' lvalue Var 0x150141cb8 'buf_content' 'struct strbuf *'
|   | |     `-CharacterLiteral 0x148009c00 <col:52> 'int' 0
|   | `-CompoundStmt 0x148009dc0 <line:35:5, line:43:5>
|   |   `-IfStmt 0x148009da0 <line:41:9, line:42:49>
|   |     |-BinaryOperator 0x148009cc8 <line:41:13, col:24> 'int' '>='
|   |     | |-ImplicitCastExpr 0x148009cb0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x148009c70 <col:13> 'int' lvalue Var 0x1501422d8 'oneline' 'int'
|   |     | `-IntegerLiteral 0x148009c90 <col:24> 'int' 1
|   |     `-CallExpr 0x148009d58 <line:42:13, col:49> 'int'
|   |       |-ImplicitCastExpr 0x148009d40 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x148009ce8 <col:13> 'int ()' Function 0x1480093e0 'strbuf_append_char' 'int ()'
|   |       |-ImplicitCastExpr 0x148009d88 <col:32> 'struct strbuf *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x148009d08 <col:32> 'struct strbuf *' lvalue Var 0x150141cb8 'buf_content' 'struct strbuf *'
|   |       `-CharacterLiteral 0x148009d28 <col:45> 'int' 10
|   `-ReturnStmt 0x148009f98 <line:45:5, col:41>
|     `-ImplicitCastExpr 0x148009f80 <col:12, col:41> 'char *' <IntegralToPointer>
|       `-CallExpr 0x148009f40 <col:12, col:41> 'int'
|         |-ImplicitCastExpr 0x148009f28 <col:12> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x148009ee8 <col:12> 'int ()' Function 0x148009e30 'strbuf_free_nobuf' 'int ()'
|         `-ImplicitCastExpr 0x148009f68 <col:30> 'struct strbuf *' <LValueToRValue>
|           `-DeclRefExpr 0x148009f08 <col:30> 'struct strbuf *' lvalue Var 0x150141cb8 'buf_content' 'struct strbuf *'
`-FunctionDecl 0x148009098 <line:22:13> col:13 implicit used isspace 'int (int)' extern
  |-ParmVarDecl 0x148009198 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x148009140 <<invalid sloc>> Implicit 929
  |-NoThrowAttr 0x148009208 <col:13> Implicit
  `-PureAttr 0x148009230 <col:13> Implicit
