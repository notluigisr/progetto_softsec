TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b00dbb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b00dbb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-FunctionDecl 0x12b027438 <dataset_diviso_filec/func19807_vuln.c:1:1, line:67:1> line:1:1 invalid chpass_principal3_2_svc 'int (int *, struct svc_req *)'
| |-ParmVarDecl 0x12b00dd28 <col:25, col:38> col:38 invalid arg 'int *'
| |-ParmVarDecl 0x12b00e318 <col:43, col:59> col:59 used rqstp 'struct svc_req *'
| `-CompoundStmt 0x12b02c490 <line:2:1, line:67:1>
|   |-DeclStmt 0x12b027570 <line:3:5, col:40>
|   | `-VarDecl 0x12b027508 <col:5, col:37> col:37 referenced invalid ret 'int' static
|   |-DeclStmt 0x12b027608 <line:4:5, col:47>
|   | `-VarDecl 0x12b0275a0 <col:5, col:38> col:38 used prime_arg 'char *'
|   |-DeclStmt 0x12b0276d8 <line:9:5, col:51>
|   | `-VarDecl 0x12b027638 <col:5, col:47> col:38 used errmsg 'const char *' cinit
|   |   `-RecoveryExpr 0x12b0276b8 <col:47> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12b027910 <line:11:5, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12b027850 <col:5> 'int ()' Function 0x12b027798 'xdr_free' 'int ()'
|   | |-RecoveryExpr 0x12b0278f0 <col:14> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x12b0278a8 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x12b027888 <col:32> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12b027c40 <line:13:5, line:14:14>
|   | |-RecoveryExpr 0x12b027bb8 <line:13:9, col:72> '_Bool' contains-errors
|   | `-GotoStmt 0x12b027c28 <line:14:9, col:14> 'exit_func' 0x12b027bd8
|   |-IfStmt 0x12b027e30 <line:16:5, line:17:14>
|   | |-RecoveryExpr 0x12b027df8 <line:16:9, col:49> '_Bool' contains-errors
|   | `-GotoStmt 0x12b027e18 <line:17:9, col:14> 'exit_func' 0x12b027bd8
|   |-BinaryOperator 0x12b027fc8 <line:19:5, col:31> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12b027e98 <col:5, col:9> '<dependent type>' contains-errors lvalue .api_version
|   | | `-RecoveryExpr 0x12b027e70 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12b027e50 <col:5> 'int' lvalue Var 0x12b027508 'ret' 'int'
|   | `-CXXDependentScopeMemberExpr 0x12b027f80 <col:23, col:31> '<dependent type>' contains-errors lvalue ->api_version
|   |   `-RecoveryExpr 0x12b027f60 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12b029c00 <line:21:5, line:24:5>
|   | |-BinaryOperator 0x12b028288 <line:21:9, col:63> 'int' contains-errors '<'
|   | | |-CallExpr 0x12b028250 <col:9, col:59> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12b0280c8 <col:9> 'int ()' Function 0x12b028010 'setup_gss_names' 'int ()'
|   | | | |-DeclRefExpr 0x12b0280e8 <col:25> 'struct svc_req *' lvalue ParmVar 0x12b00e318 'rqstp' 'struct svc_req *'
|   | | | |-UnaryOperator 0x12b028200 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x12b0281e0 <col:33> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x12b028238 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x12b028218 <col:47> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x12b0281a0 <col:63> 'int' 0
|   | `-CompoundStmt 0x12b0283c8 <col:66, line:24:5>
|   |   |-BinaryOperator 0x12b028390 <line:22:9, col:20> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x12b0282f0 <col:9, col:13> '<dependent type>' contains-errors lvalue .code
|   |   | | `-RecoveryExpr 0x12b0282c8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x12b0282a8 <col:9> 'int' lvalue Var 0x12b027508 'ret' 'int'
|   |   | `-RecoveryExpr 0x12b028370 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x12b0283b0 <line:23:9, col:14> 'exit_func' 0x12b027bd8
|   |-IfStmt 0x12b029ff0 <line:25:5, line:28:5>
|   | |-CallExpr 0x12b029ef8 <line:25:9, col:66> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x12b029d00 <col:9> 'int ()' Function 0x12b029c48 'krb5_unparse_name' 'int ()'
|   | | |-CXXDependentScopeMemberExpr 0x12b029eb0 <col:27, col:35> '<dependent type>' contains-errors lvalue ->context
|   | | | `-RecoveryExpr 0x12b029e90 <col:27> '<dependent type>' contains-errors lvalue
|   | | |-CXXDependentScopeMemberExpr 0x12b029da0 <col:44, col:49> '<dependent type>' contains-errors lvalue ->princ
|   | | | `-RecoveryExpr 0x12b029d80 <col:44> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x12b029e40 <col:56, col:57> 'char **' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x12b029de8 <col:57> 'char *' lvalue Var 0x12b0275a0 'prime_arg' 'char *'
|   | `-CompoundStmt 0x12b029fd8 <col:69, line:28:5>
|   |   `-GotoStmt 0x12b029fc0 <line:27:9, col:14> 'exit_func' 0x12b027bd8
|   |-IfStmt 0x12b02b960 <line:30:5, line:48:5> has_else
|   | |-RecoveryExpr 0x12b02a320 <line:30:9, col:63> '_Bool' contains-errors
|   | |-CompoundStmt 0x12b02a6d8 <col:66, line:36:5>
|   | `-IfStmt 0x12b02b930 <col:12, line:48:5> has_else
|   |   |-RecoveryExpr 0x12b02aa98 <line:36:16, line:38:65> '_Bool' contains-errors
|   |   |-CompoundStmt 0x12b02b6e0 <col:68, line:44:5>
|   |   `-CompoundStmt 0x12b02b920 <col:12, line:48:5>
|   |-IfStmt 0x12b02bf38 <line:50:5, line:59:5>
|   | |-RecoveryExpr 0x12b02b9f8 <line:50:8, col:20> '_Bool' contains-errors
|   | `-CompoundStmt 0x12b02bf28 <col:41, line:59:5>
|   |-CallExpr 0x12b02c1a8 <line:61:5, col:19> 'void'
|   | |-ImplicitCastExpr 0x12b02c190 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12b02c108 <col:5> 'void (void *)' Function 0x12b02bf98 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x12b02c1e8 <col:10> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x12b02c1d0 <col:10> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12b02c128 <col:10> 'char *' lvalue Var 0x12b0275a0 'prime_arg' 'char *'
|   |-LabelStmt 0x12b02c428 <line:64:1, col:10> 'exit_func'
|   | `-NullStmt 0x12b02c420 <col:10>
|   `-ReturnStmt 0x12b02c480 <line:66:5, col:13>
|     `-UnaryOperator 0x12b02c468 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|       `-RecoveryExpr 0x12b02c448 <col:13> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x12b02bf98 <line:61:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12b02c098 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12b02c040 <<invalid sloc>> Implicit 873
