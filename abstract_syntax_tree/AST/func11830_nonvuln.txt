TranslationUnitDecl 0x156055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1560564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156055bd0 '__int128'
|-TypedefDecl 0x156056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156055bf0 'unsigned __int128'
|-TypedefDecl 0x15680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15680bc00 'struct __NSConstantString_tag'
|   `-Record 0x156056580 '__NSConstantString_tag'
|-TypedefDecl 0x15680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156055d90 '__SVInt8_t'
|-TypedefDecl 0x15680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156055db0 '__SVInt16_t'
|-TypedefDecl 0x15680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156055dd0 '__SVInt32_t'
|-TypedefDecl 0x15680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156055df0 '__SVInt64_t'
|-TypedefDecl 0x15680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156055e10 '__SVUint8_t'
|-TypedefDecl 0x15680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156055e30 '__SVUint16_t'
|-TypedefDecl 0x15680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156055e50 '__SVUint32_t'
|-TypedefDecl 0x15680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156055e70 '__SVUint64_t'
|-TypedefDecl 0x15680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156055e90 '__SVFloat16_t'
|-TypedefDecl 0x15680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1560560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1560560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1560560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1560561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1560561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1560561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1560562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1560562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1560562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156056390 '__SVBool_t'
|-TypedefDecl 0x15680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1560563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1560563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1560563f0 '__SVCount_t'
|-TypedefDecl 0x15680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-TypedefDecl 0x15680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-FunctionDecl 0x15680dda0 <dataset_diviso_filec/func11830_nonvuln.c:1:1, line:31:1> line:1:6 disable_file_or_dir 'void (const char *)'
| |-ParmVarDecl 0x15680dcd8 <col:26, col:38> col:38 used fname 'const char *'
| `-CompoundStmt 0x15682b038 <col:45, line:31:1>
|   |-CallExpr 0x15680e1a0 <line:2:2, col:23> 'int'
|   | |-ImplicitCastExpr 0x15680e188 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15680dfc0 <col:2> 'int ()' Function 0x15680df08 'assert' 'int ()'
|   | `-BinaryOperator 0x15680e168 <col:9, col:22> 'int' '=='
|   |   |-CallExpr 0x15680e128 <col:9, col:17> 'int'
|   |   | `-ImplicitCastExpr 0x15680e110 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x15680e0c0 <col:9> 'int ()' Function 0x15680e008 'geteuid' 'int ()'
|   |   `-IntegerLiteral 0x15680e148 <col:22> 'int' 0
|   |-CallExpr 0x15680e220 <line:3:2, col:14> 'int'
|   | |-ImplicitCastExpr 0x15680e208 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15680e1c8 <col:2> 'int ()' Function 0x15680df08 'assert' 'int ()'
|   | `-ImplicitCastExpr 0x15680e248 <col:9> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15680e1e8 <col:9> 'const char *' lvalue ParmVar 0x15680dcd8 'fname' 'const char *'
|   |-CallExpr 0x15680e378 <line:5:2, col:12> 'int'
|   | `-ImplicitCastExpr 0x15680e360 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x15680e340 <col:2> 'int ()' Function 0x15680e288 'EUID_USER' 'int ()'
|   |-DeclStmt 0x156828098 <line:6:2, col:40>
|   | `-VarDecl 0x156827e00 <col:2, col:39> col:6 used fd 'int' cinit
|   |   `-CallExpr 0x156828068 <col:11, col:39> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x156827f48 <col:11> 'int ()' Function 0x156827e90 'open' 'int ()'
|   |     |-DeclRefExpr 0x156827f68 <col:16> 'const char *' lvalue ParmVar 0x15680dcd8 'fname' 'const char *'
|   |     `-BinaryOperator 0x156828048 <col:23, col:30> '<dependent type>' contains-errors '|'
|   |       |-RecoveryExpr 0x156828008 <col:23> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x156828028 <col:30> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1568281c8 <line:7:2, col:12> 'int'
|   | `-ImplicitCastExpr 0x1568281b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x156828190 <col:2> 'int ()' Function 0x1568280d8 'EUID_ROOT' 'int ()'
|   |-IfStmt 0x156828270 <line:8:2, line:9:3>
|   | |-BinaryOperator 0x156828240 <line:8:6, col:11> 'int' contains-errors '<'
|   | | |-ImplicitCastExpr 0x156828228 <col:6> 'int' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x1568281e8 <col:6> 'int' contains-errors lvalue Var 0x156827e00 'fd' 'int'
|   | | `-IntegerLiteral 0x156828208 <col:11> 'int' 0
|   | `-ReturnStmt 0x156828260 <line:9:3>
|   |-DeclStmt 0x156828828 <line:11:2, col:15>
|   | |-RecordDecl 0x156828290 <col:2, col:9> col:9 struct stat
|   | `-VarDecl 0x156828388 <col:2, col:14> col:14 invalid s 'struct stat'
|   |-IfStmt 0x15682a450 <line:12:2, line:17:2>
|   | |-BinaryOperator 0x1568289e8 <line:12:6, col:22> 'int' contains-errors '<'
|   | | |-CallExpr 0x156828998 <col:6, col:18> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x156828920 <col:6> 'int ()' Function 0x156828868 'fstat' 'int ()'
|   | | | |-DeclRefExpr 0x156828940 <col:12> 'int' contains-errors lvalue Var 0x156827e00 'fd' 'int'
|   | | | `-UnaryOperator 0x156828980 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x156828960 <col:17> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x1568289c8 <col:22> 'int' 0
|   | `-CompoundStmt 0x15682a428 <col:25, line:17:2>
|   |   |-IfStmt 0x156828c78 <line:13:3, line:14:17>
|   |   | |-BinaryOperator 0x156828a98 <line:13:7, col:16> 'int' contains-errors '!='
|   |   | | |-RecoveryExpr 0x156828a58 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x156828a78 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x156828c38 <line:14:4, col:17> 'int'
|   |   |   |-ImplicitCastExpr 0x156828c20 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x156828b98 <col:4> 'int ()' Function 0x156828ae0 'errExit' 'int ()'
|   |   |   `-ImplicitCastExpr 0x156828c60 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x156828c00 <col:12> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x156828dd0 <line:15:3, col:11> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x156828db8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x156828d78 <col:3> 'int ()' Function 0x156828cc0 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x15682a400 <col:9> 'int' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x156828d98 <col:9> 'int' contains-errors lvalue Var 0x156827e00 'fd' 'int'
|   |   `-ReturnStmt 0x15682a418 <line:16:3>
|   |-IfStmt 0x15682a7d0 <line:19:2, line:20:22>
|   | |-RecoveryExpr 0x15682a488 <line:19:6> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x15682a758 <line:20:3, col:22> 'int'
|   |   |-ImplicitCastExpr 0x15682a740 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15682a698 <col:3> 'int (const char *, ...)' Function 0x15682a4f0 'printf' 'int (const char *, ...)'
|   |   |-ImplicitCastExpr 0x15682a7a0 <col:10> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x15682a788 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x15682a6b8 <col:10> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x15682a7b8 <col:17> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15682a6d8 <col:17> 'const char *' lvalue ParmVar 0x15680dcd8 'fname' 'const char *'
|   |-IfStmt 0x15682adb8 <line:21:2, line:28:2> has_else
|   | |-CallExpr 0x15682a958 <line:21:6, col:23> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x15682a8d0 <col:6> 'int ()' Function 0x15682a818 'S_ISDIR' 'int ()'
|   | | `-CXXDependentScopeMemberExpr 0x15682a910 <col:14, col:16> '<dependent type>' contains-errors lvalue .st_mode
|   | |   `-RecoveryExpr 0x15682a8f0 <col:14> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x15682ac50 <col:26, line:24:2>
|   | | `-IfStmt 0x15682ac30 <line:22:3, line:23:17>
|   | |   |-BinaryOperator 0x15682ab78 <line:22:7, col:47> 'int' contains-errors '<'
|   | |   | |-CallExpr 0x15682ab48 <col:7, col:43> '<dependent type>' contains-errors
|   | |   | | |-DeclRefExpr 0x15682aa60 <col:7> 'int ()' Function 0x15682a9a8 'bind_mount_path_to_fd' 'int ()'
|   | |   | | |-RecoveryExpr 0x15682ab28 <col:29> '<dependent type>' contains-errors lvalue
|   | |   | | `-DeclRefExpr 0x15682aa98 <col:41> 'int' contains-errors lvalue Var 0x156827e00 'fd' 'int'
|   | |   | `-IntegerLiteral 0x15682aae8 <col:47> 'int' 0
|   | |   `-CallExpr 0x15682abf0 <line:23:4, col:17> 'int'
|   | |     |-ImplicitCastExpr 0x15682abd8 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x15682ab98 <col:4> 'int ()' Function 0x156828ae0 'errExit' 'int ()'
|   | |     `-ImplicitCastExpr 0x15682ac18 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       `-StringLiteral 0x15682abb8 <col:12> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x15682ada0 <line:25:7, line:28:2>
|   |   `-IfStmt 0x15682ad80 <line:26:3, line:27:17>
|   |     |-RecoveryExpr 0x15682acc8 <line:26:7, col:48> '_Bool' contains-errors
|   |     `-CallExpr 0x15682ad40 <line:27:4, col:17> 'int'
|   |       |-ImplicitCastExpr 0x15682ad28 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x15682ace8 <col:4> 'int ()' Function 0x156828ae0 'errExit' 'int ()'
|   |       `-ImplicitCastExpr 0x15682ad68 <col:12> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x15682ad08 <col:12> 'char[4]' lvalue "STR"
|   |-CallExpr 0x15682ae40 <line:29:2, col:10> 'int' contains-errors
|   | |-ImplicitCastExpr 0x15682ae28 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15682ade8 <col:2> 'int ()' Function 0x156828cc0 'close' 'int ()'
|   | `-ImplicitCastExpr 0x15682ae68 <col:8> 'int' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x15682ae08 <col:8> 'int' contains-errors lvalue Var 0x156827e00 'fd' 'int'
|   `-CallExpr 0x15682afd8 <line:30:2, col:25> 'int'
|     |-ImplicitCastExpr 0x15682afc0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x15682af60 <col:2> 'int ()' Function 0x15682aea8 'fs_logger2' 'int ()'
|     |-ImplicitCastExpr 0x15682b008 <col:13> 'char *' <ArrayToPointerDecay>
|     | `-StringLiteral 0x15682af80 <col:13> 'char[4]' lvalue "STR"
|     `-ImplicitCastExpr 0x15682b020 <col:20> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x15682afa0 <col:20> 'const char *' lvalue ParmVar 0x15680dcd8 'fname' 'const char *'
`-FunctionDecl 0x15682a4f0 <line:20:3> col:3 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x15682a5f0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x15682a598 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x15682a660 <col:3> Implicit printf 1 2
