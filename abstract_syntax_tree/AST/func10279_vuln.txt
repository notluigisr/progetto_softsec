TranslationUnitDecl 0x147055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1470564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147055bd0 '__int128'
|-TypedefDecl 0x147056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147055bf0 'unsigned __int128'
|-TypedefDecl 0x15080be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15080bc00 'struct __NSConstantString_tag'
|   `-Record 0x147056580 '__NSConstantString_tag'
|-TypedefDecl 0x15080be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147055d90 '__SVInt8_t'
|-TypedefDecl 0x15080bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147055db0 '__SVInt16_t'
|-TypedefDecl 0x15080bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147055dd0 '__SVInt32_t'
|-TypedefDecl 0x15080bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147055df0 '__SVInt64_t'
|-TypedefDecl 0x15080c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147055e10 '__SVUint8_t'
|-TypedefDecl 0x15080c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147055e30 '__SVUint16_t'
|-TypedefDecl 0x15080c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147055e50 '__SVUint32_t'
|-TypedefDecl 0x15080c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147055e70 '__SVUint64_t'
|-TypedefDecl 0x15080c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147055e90 '__SVFloat16_t'
|-TypedefDecl 0x15080c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15080c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15080c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15080c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15080c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15080c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15080c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15080c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15080c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15080c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15080c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15080c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15080c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15080c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15080c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15080c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15080c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1470560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15080c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1470560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15080c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1470560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15080c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15080ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15080cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15080cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15080cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15080d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1470561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15080d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1470561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15080d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1470561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15080d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15080d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15080d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15080d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15080d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15080d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1470562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15080d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1470562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15080d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1470562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15080d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15080d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15080d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15080d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15080da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147056390 '__SVBool_t'
|-TypedefDecl 0x15080da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1470563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15080dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1470563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15080db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1470563f0 '__SVCount_t'
|-TypedefDecl 0x15080dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15080dbb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
|-TypedefDecl 0x15080dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15080dbb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
|-FunctionDecl 0x15080dda8 <dataset_diviso_filec/func10279_vuln.c:1:1, line:40:1> line:1:1 CreateDir 'int (const char *)'
| |-ParmVarDecl 0x15080dcd8 <col:11, col:23> col:23 used path 'const char *'
| `-CompoundStmt 0x15082f0e8 <line:2:1, line:40:1>
|   |-DeclStmt 0x150826648 <line:3:4, col:21>
|   | |-RecordDecl 0x15080dea0 <col:4, col:11> col:11 struct stat
|   | `-VarDecl 0x15080df98 <col:4, col:16> col:16 invalid stats 'struct stat'
|   |-DeclStmt 0x1508266e0 <line:4:4, col:15>
|   | `-VarDecl 0x150826678 <col:4, col:10> col:10 used token 'char *'
|   |-DeclStmt 0x150826778 <line:5:4, col:14>
|   | `-VarDecl 0x150826710 <col:4, col:10> col:10 used copy 'char *'
|   |-BinaryOperator 0x150826a38 <line:8:4, col:22> 'char *' '='
|   | |-DeclRefExpr 0x150826790 <col:4> 'char *' lvalue Var 0x150826710 'copy' 'char *'
|   | `-CallExpr 0x1508269f8 <col:11, col:22> 'char *'
|   |   |-ImplicitCastExpr 0x1508269e0 <col:11> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x150826958 <col:11> 'char *(const char *)' Function 0x1508267e8 'strdup' 'char *(const char *)'
|   |   `-ImplicitCastExpr 0x150826a20 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x150826978 <col:18> 'const char *' lvalue ParmVar 0x15080dcd8 'path' 'const char *'
|   |-ForStmt 0x15082efa0 <line:11:4, line:36:4>
|   | |-BinaryOperator 0x150826af0 <line:11:9, col:24> 'char *' '='
|   | | |-DeclRefExpr 0x150826a58 <col:9> 'char *' lvalue Var 0x150826678 'token' 'char *'
|   | | `-BinaryOperator 0x150826ad0 <col:17, col:24> 'char *' '+'
|   | |   |-ImplicitCastExpr 0x150826ab8 <col:17> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x150826a78 <col:17> 'char *' lvalue Var 0x150826710 'copy' 'char *'
|   | |   `-IntegerLiteral 0x150826a98 <col:24> 'int' 1
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x150826b60 <col:27, col:28> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x150826b48 <col:27, col:28> 'char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x150826b30 <col:28> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x150826b10 <col:28> 'char *' lvalue Var 0x150826678 'token' 'char *'
|   | |-UnaryOperator 0x150826b98 <col:35, col:37> 'char *' prefix '++'
|   | | `-DeclRefExpr 0x150826b78 <col:37> 'char *' lvalue Var 0x150826678 'token' 'char *'
|   | `-CompoundStmt 0x15082ef68 <col:44, line:36:4>
|   |   |-IfStmt 0x150826c88 <line:14:7, line:16:7>
|   |   | |-BinaryOperator 0x150826c48 <line:14:11, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x150826c30 <col:11, col:12> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x150826c18 <col:11, col:12> 'char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x150826be8 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x150826bd0 <col:12> 'char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x150826bb0 <col:12> 'char *' lvalue Var 0x150826678 'token' 'char *'
|   |   | | `-CharacterLiteral 0x150826c00 <col:21> 'int' 47
|   |   | `-CompoundStmt 0x150826c70 <col:26, line:16:7>
|   |   |   `-ContinueStmt 0x150826c68 <line:15:10>
|   |   |-BinaryOperator 0x150826d30 <line:19:7, col:16> 'char' '='
|   |   | |-UnaryOperator 0x150826ce0 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x150826cc8 <col:8> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x150826ca8 <col:8> 'char *' lvalue Var 0x150826678 'token' 'char *'
|   |   | `-ImplicitCastExpr 0x150826d18 <col:16> 'char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x150826cf8 <col:16> 'int' 0
|   |   |-CallExpr 0x150826f98 <line:21:7, col:34> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x150826e80 <col:7> 'int ()' Function 0x150826dc8 'sLog' 'int ()'
|   |   | |-RecoveryExpr 0x150826f78 <col:12> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x150826f00 <col:23> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x150826f20 <col:30> 'char *' lvalue Var 0x150826710 'copy' 'char *'
|   |   |-IfStmt 0x15082eea8 <line:24:7, line:32:7>
|   |   | |-UnaryOperator 0x150827388 <line:24:11, col:64> 'int' contains-errors prefix '!' cannot overflow
|   |   | | `-ParenExpr 0x150827368 <col:12, col:64> 'int' contains-errors
|   |   | |   `-BinaryOperator 0x150827348 <col:13, col:63> 'int' contains-errors '&&'
|   |   | |     |-ParenExpr 0x150827198 <col:13, col:37> 'int' contains-errors
|   |   | |     | `-BinaryOperator 0x150827178 <col:14, col:36> 'int' contains-errors '=='
|   |   | |     |   |-CallExpr 0x150827128 <col:14, col:31> '<dependent type>' contains-errors
|   |   | |     |   | |-DeclRefExpr 0x1508270b0 <col:14> 'int ()' Function 0x150826ff8 'stat' 'int ()'
|   |   | |     |   | |-DeclRefExpr 0x1508270d0 <col:19> 'char *' lvalue Var 0x150826710 'copy' 'char *'
|   |   | |     |   | `-UnaryOperator 0x150827110 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | |     |   |   `-RecoveryExpr 0x1508270f0 <col:26> '<dependent type>' contains-errors lvalue
|   |   | |     |   `-IntegerLiteral 0x150827158 <col:36> 'int' 0
|   |   | |     `-CallExpr 0x150827320 <col:42, col:63> '<dependent type>' contains-errors
|   |   | |       |-DeclRefExpr 0x150827298 <col:42> 'int ()' Function 0x1508271e0 'S_ISDIR' 'int ()'
|   |   | |       `-CXXDependentScopeMemberExpr 0x1508272d8 <col:50, col:56> '<dependent type>' contains-errors lvalue .st_mode
|   |   | |         `-RecoveryExpr 0x1508272b8 <col:50> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x15082ee90 <col:67, line:32:7>
|   |   |   `-IfStmt 0x15082ee70 <line:26:10, line:31:10>
|   |   |     |-BinaryOperator 0x1508275a8 <line:26:14, col:36> 'int' '=='
|   |   |     | |-CallExpr 0x150827528 <col:14, col:30> 'int'
|   |   |     | | |-ImplicitCastExpr 0x150827510 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | | | `-DeclRefExpr 0x150827480 <col:14> 'int ()' Function 0x1508273c8 'mkdir' 'int ()'
|   |   |     | | |-ImplicitCastExpr 0x150827558 <col:20> 'char *' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x1508274a0 <col:20> 'char *' lvalue Var 0x150826710 'copy' 'char *'
|   |   |     | | `-IntegerLiteral 0x1508274c0 <col:26> 'int' 448
|   |   |     | `-UnaryOperator 0x150827590 <col:35, col:36> 'int' prefix '-'
|   |   |     |   `-IntegerLiteral 0x150827570 <col:36> 'int' 1
|   |   |     `-CompoundStmt 0x15082ee48 <col:39, line:31:10>
|   |   |       |-CallExpr 0x15082eb20 <line:27:13, line:28:33> '<dependent type>' contains-errors
|   |   |       | |-DeclRefExpr 0x1508275c8 <line:27:13> 'int ()' Function 0x150826dc8 'sLog' 'int ()'
|   |   |       | |-RecoveryExpr 0x15082eaa0 <col:18> '<dependent type>' contains-errors lvalue
|   |   |       | |-StringLiteral 0x15082e800 <col:29> 'char[4]' lvalue "STR"
|   |   |       | |-DeclRefExpr 0x15082e820 <col:36> 'char *' lvalue Var 0x150826710 'copy' 'char *'
|   |   |       | `-CallExpr 0x15082eaf8 <line:28:18, col:32> '<dependent type>' contains-errors
|   |   |       |   |-DeclRefExpr 0x15082e9e8 <col:18> 'char *(int)' Function 0x15082e878 'strerror' 'char *(int)'
|   |   |       |   `-RecoveryExpr 0x15082eac0 <col:27> '<dependent type>' contains-errors lvalue
|   |   |       |-CallExpr 0x15082eda8 <line:29:13, col:22> 'void'
|   |   |       | |-ImplicitCastExpr 0x15082ed90 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x15082ed08 <col:13> 'void (void *)' Function 0x15082eb98 'free' 'void (void *)'
|   |   |       | `-ImplicitCastExpr 0x15082ede8 <col:18> 'void *' <BitCast>
|   |   |       |   `-ImplicitCastExpr 0x15082edd0 <col:18> 'char *' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x15082ed28 <col:18> 'char *' lvalue Var 0x150826710 'copy' 'char *'
|   |   |       `-ReturnStmt 0x15082ee38 <line:30:13, col:20>
|   |   |         `-RecoveryExpr 0x15082ee18 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x15082ef48 <line:35:7, col:16> 'char' '='
|   |     |-UnaryOperator 0x15082ef00 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x15082eee8 <col:8> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x15082eec8 <col:8> 'char *' lvalue Var 0x150826678 'token' 'char *'
|   |     `-ImplicitCastExpr 0x15082ef30 <col:16> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x15082ef18 <col:16> 'int' 47
|   |-CallExpr 0x15082f048 <line:38:4, col:13> 'void'
|   | |-ImplicitCastExpr 0x15082f030 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15082efd8 <col:4> 'void (void *)' Function 0x15082eb98 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x15082f088 <col:9> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x15082f070 <col:9> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15082eff8 <col:9> 'char *' lvalue Var 0x150826710 'copy' 'char *'
|   `-ReturnStmt 0x15082f0d8 <line:39:4, col:11>
|     `-RecoveryExpr 0x15082f0b8 <col:11> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x1508267e8 <line:8:11> col:11 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x1508268e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x150826890 <<invalid sloc>> Implicit 950
|-FunctionDecl 0x15082e878 <line:28:18> col:18 implicit used strerror 'char *(int)' extern
| |-ParmVarDecl 0x15082e978 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x15082e920 <<invalid sloc>> Implicit 901
`-FunctionDecl 0x15082eb98 <line:29:13> col:13 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x15082ec98 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x15082ec40 <<invalid sloc>> Implicit 873
