TranslationUnitDecl 0x11f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f855bd0 '__int128'
|-TypedefDecl 0x11f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f855bf0 'unsigned __int128'
|-TypedefDecl 0x10500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10500bc00 'struct __NSConstantString_tag'
|   `-Record 0x11f856580 '__NSConstantString_tag'
|-TypedefDecl 0x10500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f855d90 '__SVInt8_t'
|-TypedefDecl 0x10500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f855db0 '__SVInt16_t'
|-TypedefDecl 0x10500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f855dd0 '__SVInt32_t'
|-TypedefDecl 0x10500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f855df0 '__SVInt64_t'
|-TypedefDecl 0x10500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f855e10 '__SVUint8_t'
|-TypedefDecl 0x10500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f855e30 '__SVUint16_t'
|-TypedefDecl 0x10500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f855e50 '__SVUint32_t'
|-TypedefDecl 0x10500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f855e70 '__SVUint64_t'
|-TypedefDecl 0x10500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f855e90 '__SVFloat16_t'
|-TypedefDecl 0x10500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x10500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x10500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x10500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x10500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x10500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x10500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x10500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f856390 '__SVBool_t'
|-TypedefDecl 0x10500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8563f0 '__SVCount_t'
|-TypedefDecl 0x10500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-TypedefDecl 0x10500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-RecordDecl 0x10500dcc0 <dataset_diviso_filec/func14328_vuln.c:1:8, col:15> col:15 struct audit_chunk
`-FunctionDecl 0x10500df38 <col:1, line:21:1> line:1:28 alloc_chunk 'struct audit_chunk *(int)' static
  |-ParmVarDecl 0x10500dd78 <col:40, col:44> col:44 used count 'int'
  `-CompoundStmt 0x1050279c0 <line:2:1, line:21:1>
    |-DeclStmt 0x10500e120 <line:3:2, col:27>
    | `-VarDecl 0x10500e0b8 <col:2, col:22> col:22 used chunk 'struct audit_chunk *'
    |-UnaryExprOrTypeTraitExpr 0x10500e1a8 <line:4:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x10500e188 <col:9> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x10500e248 <line:5:2, col:7>
    | `-VarDecl 0x10500e1e0 <col:2, col:6> col:6 used i 'int'
    |-BinaryOperator 0x11f922d30 <line:8:2, col:34> 'struct audit_chunk *' contains-errors '='
    | |-DeclRefExpr 0x11f922b20 <col:2> 'struct audit_chunk *' lvalue Var 0x10500e0b8 'chunk' 'struct audit_chunk *'
    | `-CallExpr 0x11f922d00 <col:10, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f922c20 <col:10> 'int ()' Function 0x11f922b68 'kzalloc' 'int ()'
    |   |-RecoveryExpr 0x11f922cc0 <col:18> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x11f922ce0 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f922de8 <line:9:2, line:10:10>
    | |-UnaryOperator 0x11f922d88 <line:9:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11f922d70 <col:7> 'struct audit_chunk *' <LValueToRValue>
    | |   `-DeclRefExpr 0x11f922d50 <col:7> 'struct audit_chunk *' lvalue Var 0x10500e0b8 'chunk' 'struct audit_chunk *'
    | `-ReturnStmt 0x11f922dd8 <line:10:3, col:10>
    |   `-RecoveryExpr 0x11f922db8 <col:10> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f922f80 <line:12:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f922ee8 <col:2> 'int ()' Function 0x11f922e30 'INIT_LIST_HEAD' 'int ()'
    | `-UnaryOperator 0x11f922f68 <col:17, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x11f922f40 <col:18, col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11f922f08 <col:18> 'struct audit_chunk *' lvalue Var 0x10500e0b8 'chunk' 'struct audit_chunk *'
    |-CallExpr 0x11f923040 <line:13:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f922fa8 <col:2> 'int ()' Function 0x11f922e30 'INIT_LIST_HEAD' 'int ()'
    | `-UnaryOperator 0x11f923028 <col:17, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x11f923000 <col:18, col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11f922fc8 <col:18> 'struct audit_chunk *' lvalue Var 0x10500e0b8 'chunk' 'struct audit_chunk *'
    |-BinaryOperator 0x11f9230e8 <line:14:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11f9230a0 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11f923068 <col:2> 'struct audit_chunk *' lvalue Var 0x10500e0b8 'chunk' 'struct audit_chunk *'
    | `-DeclRefExpr 0x11f9230c8 <col:17> 'int' lvalue ParmVar 0x10500dd78 'count' 'int'
    |-ForStmt 0x11f923520 <line:15:2, line:18:2>
    | |-BinaryOperator 0x11f923148 <line:15:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x11f923108 <col:7> 'int' lvalue Var 0x10500e1e0 'i' 'int'
    | | `-IntegerLiteral 0x11f923128 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11f9231d8 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x11f9231a8 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11f923168 <col:14> 'int' lvalue Var 0x10500e1e0 'i' 'int'
    | | `-ImplicitCastExpr 0x11f9231c0 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11f923188 <col:18> 'int' lvalue ParmVar 0x10500dd78 'count' 'int'
    | |-UnaryOperator 0x11f923218 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x11f9231f8 <col:25> 'int' lvalue Var 0x10500e1e0 'i' 'int'
    | `-CompoundStmt 0x11f923500 <col:30, line:18:2>
    |   |-CallExpr 0x11f923380 <line:16:3, col:40> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11f923230 <col:3> 'int ()' Function 0x11f922e30 'INIT_LIST_HEAD' 'int ()'
    |   | `-UnaryOperator 0x11f923368 <col:18, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x11f923320 <col:19, col:36> '<dependent type>' contains-errors lvalue .list
    |   |     `-ArraySubscriptExpr 0x11f923300 <col:19, col:34> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x11f9232d0 <col:19, col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-RecoveryExpr 0x11f923288 <col:19, col:26> '<dependent type>' contains-errors lvalue
    |   |       |   `-DeclRefExpr 0x11f923250 <col:19> 'struct audit_chunk *' lvalue Var 0x10500e0b8 'chunk' 'struct audit_chunk *'
    |   |       `-ImplicitCastExpr 0x11f9232e8 <col:33> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x11f9232b0 <col:33> 'int' lvalue Var 0x10500e1e0 'i' 'int'
    |   `-BinaryOperator 0x11f9234e0 <line:17:3, col:28> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x11f923478 <col:3, col:20> '<dependent type>' contains-errors lvalue .index
    |     | `-ArraySubscriptExpr 0x11f923458 <col:3, col:18> '<dependent type>' contains-errors lvalue
    |     |   |-ImplicitCastExpr 0x11f923428 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | `-RecoveryExpr 0x11f9233e0 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |     |   |   `-DeclRefExpr 0x11f9233a8 <col:3> 'struct audit_chunk *' lvalue Var 0x10500e0b8 'chunk' 'struct audit_chunk *'
    |     |   `-ImplicitCastExpr 0x11f923440 <col:17> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x11f923408 <col:17> 'int' lvalue Var 0x10500e1e0 'i' 'int'
    |     `-DeclRefExpr 0x11f9234c0 <col:28> 'int' lvalue Var 0x10500e1e0 'i' 'int'
    |-CallExpr 0x105027950 <line:19:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1050278b8 <col:2> 'int ()' Function 0x105027800 'inotify_init_watch' 'int ()'
    | `-UnaryOperator 0x105027938 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x105027910 <col:22, col:29> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1050278d8 <col:22> 'struct audit_chunk *' lvalue Var 0x10500e0b8 'chunk' 'struct audit_chunk *'
    `-ReturnStmt 0x1050279b0 <line:20:2, col:9>
      `-ImplicitCastExpr 0x105027998 <col:9> 'struct audit_chunk *' <LValueToRValue>
        `-DeclRefExpr 0x105027978 <col:9> 'struct audit_chunk *' lvalue Var 0x10500e0b8 'chunk' 'struct audit_chunk *'
