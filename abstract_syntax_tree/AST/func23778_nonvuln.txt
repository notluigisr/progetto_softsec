TranslationUnitDecl 0x10301b408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x10301c2b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x10301b9d0 '__int128'
|-TypedefDecl 0x10301c328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x10301b9f0 'unsigned __int128'
|-TypedefDecl 0x120040c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120040a00 'struct __NSConstantString_tag'
|   `-Record 0x10301c380 '__NSConstantString_tag'
|-TypedefDecl 0x120040c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x10301bb90 '__SVInt8_t'
|-TypedefDecl 0x120040d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x10301bbb0 '__SVInt16_t'
|-TypedefDecl 0x120040d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x10301bbd0 '__SVInt32_t'
|-TypedefDecl 0x120040dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x10301bbf0 '__SVInt64_t'
|-TypedefDecl 0x120040e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x10301bc10 '__SVUint8_t'
|-TypedefDecl 0x120040ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x10301bc30 '__SVUint16_t'
|-TypedefDecl 0x120040f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x10301bc50 '__SVUint32_t'
|-TypedefDecl 0x120040f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x10301bc70 '__SVUint64_t'
|-TypedefDecl 0x120040fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x10301bc90 '__SVFloat16_t'
|-TypedefDecl 0x120041040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x10301bcb0 '__SVFloat32_t'
|-TypedefDecl 0x1200410a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x10301bcd0 '__SVFloat64_t'
|-TypedefDecl 0x120041110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x10301bcf0 '__SVBfloat16_t'
|-TypedefDecl 0x120041178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x10301bd10 '__clang_svint8x2_t'
|-TypedefDecl 0x1200411e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x10301bd30 '__clang_svint16x2_t'
|-TypedefDecl 0x120041248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x10301bd50 '__clang_svint32x2_t'
|-TypedefDecl 0x1200412b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x10301bd70 '__clang_svint64x2_t'
|-TypedefDecl 0x120041318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x10301bd90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120041380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x10301bdb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1200413e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x10301bdd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120041450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x10301bdf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1200414b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x10301be10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120041520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x10301be30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120041588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x10301be50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1200415f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x10301be70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120041658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x10301be90 '__clang_svint8x3_t'
|-TypedefDecl 0x1200416c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x10301beb0 '__clang_svint16x3_t'
|-TypedefDecl 0x120041728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x10301bed0 '__clang_svint32x3_t'
|-TypedefDecl 0x120041790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x10301bef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1200417f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x10301bf10 '__clang_svuint8x3_t'
|-TypedefDecl 0x120041860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x10301bf30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1200418c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x10301bf50 '__clang_svuint32x3_t'
|-TypedefDecl 0x120041930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x10301bf70 '__clang_svuint64x3_t'
|-TypedefDecl 0x120041998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x10301bf90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120047400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x10301bfb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120047468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x10301bfd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1200474d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x10301bff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120047538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x10301c010 '__clang_svint8x4_t'
|-TypedefDecl 0x1200475a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x10301c030 '__clang_svint16x4_t'
|-TypedefDecl 0x120047608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x10301c050 '__clang_svint32x4_t'
|-TypedefDecl 0x120047670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x10301c070 '__clang_svint64x4_t'
|-TypedefDecl 0x1200476d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x10301c090 '__clang_svuint8x4_t'
|-TypedefDecl 0x120047740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x10301c0b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1200477a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x10301c0d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120047810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x10301c0f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120047878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x10301c110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1200478e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x10301c130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120047948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x10301c150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1200479b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x10301c170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120047a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x10301c190 '__SVBool_t'
|-TypedefDecl 0x120047a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x10301c1b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120047ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x10301c1d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120047b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x10301c1f0 '__SVCount_t'
|-TypedefDecl 0x120047bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120047bb0 'char *'
|   `-BuiltinType 0x10301b4b0 'char'
|-TypedefDecl 0x120047c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120047bb0 'char *'
|   `-BuiltinType 0x10301b4b0 'char'
|-FunctionDecl 0x12005f2d8 <dataset_diviso_filec/func23778_nonvuln.c:1:1, line:13:1> line:1:12 invalid map_str_to_val 'int (const struct aiptek_map *, const char *, int)' static
| |-ParmVarDecl 0x120048248 <col:27, col:52> col:52 used map 'const struct aiptek_map *'
| |-ParmVarDecl 0x1200482c8 <col:57, col:69> col:69 used str 'const char *'
| |-ParmVarDecl 0x120048360 <col:74, col:81> col:81 referenced invalid count 'int'
| `-CompoundStmt 0x12005fc50 <line:2:1, line:13:1>
|   |-DeclStmt 0x12005f490 <line:3:2, col:28>
|   | `-VarDecl 0x12005f428 <col:2, col:27> col:27 used p 'const struct aiptek_map *'
|   |-IfStmt 0x12005f5f8 <line:5:2, line:6:8>
|   | |-BinaryOperator 0x12005f578 <line:5:6, col:24> 'int' contains-errors '=='
|   | | |-ArraySubscriptExpr 0x12005f540 <col:6, col:19> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x12005f528 <col:6> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x12005f4a8 <col:6> 'const char *' lvalue ParmVar 0x1200482c8 'str' 'const char *'
|   | | | `-BinaryOperator 0x12005f508 <col:10, col:18> '<dependent type>' contains-errors '-'
|   | | |   |-RecoveryExpr 0x12005f4c8 <col:10> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x12005f4e8 <col:18> 'int' 1
|   | | `-CharacterLiteral 0x12005f560 <col:24> 'int' 10
|   | `-UnaryOperator 0x12005f5e0 <line:6:3, col:8> '<dependent type>' contains-errors postfix '--' cannot overflow
|   |   `-RecoveryExpr 0x12005f5b8 <col:3> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12005f598 <col:3> 'int' lvalue ParmVar 0x120048360 'count' 'int'
|   |-ForStmt 0x12005fbd0 <line:8:2, line:10:14>
|   | |-BinaryOperator 0x12005f670 <line:8:7, col:11> 'const struct aiptek_map *' '='
|   | | |-DeclRefExpr 0x12005f618 <col:7> 'const struct aiptek_map *' lvalue Var 0x12005f428 'p' 'const struct aiptek_map *'
|   | | `-ImplicitCastExpr 0x12005f658 <col:11> 'const struct aiptek_map *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12005f638 <col:11> 'const struct aiptek_map *' lvalue ParmVar 0x120048248 'map' 'const struct aiptek_map *'
|   | |-<<<NULL>>>
|   | |-RecoveryExpr 0x12005f6c8 <col:16, col:19> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12005f690 <col:16> 'const struct aiptek_map *' lvalue Var 0x12005f428 'p' 'const struct aiptek_map *'
|   | |-ImplicitCastExpr 0x12005f738 <col:27, col:28> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-RecoveryExpr 0x12005f710 <col:27, col:28> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12005f6f0 <col:27> 'const struct aiptek_map *' lvalue Var 0x12005f428 'p' 'const struct aiptek_map *'
|   | `-IfStmt 0x12005fbb0 <line:9:10, line:10:14>
|   |   |-UnaryOperator 0x12005fb28 <line:9:14, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | `-CallExpr 0x12005faf0 <col:15, col:44> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12005f9e8 <col:15> 'int (const char *, const char *, unsigned long)' Function 0x12005f798 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   |-DeclRefExpr 0x12005fa08 <col:23> 'const char *' lvalue ParmVar 0x1200482c8 'str' 'const char *'
|   |   |   |-RecoveryExpr 0x12005fa60 <col:28, col:31> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x12005fa28 <col:28> 'const struct aiptek_map *' lvalue Var 0x12005f428 'p' 'const struct aiptek_map *'
|   |   |   `-RecoveryExpr 0x12005fa88 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x12005fba0 <line:10:4, col:14>
|   |     `-RecoveryExpr 0x12005fb78 <col:11, col:14> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x12005fb40 <col:11> 'const struct aiptek_map *' lvalue Var 0x12005f428 'p' 'const struct aiptek_map *'
|   `-ReturnStmt 0x12005fc40 <line:12:2, col:9>
|     `-RecoveryExpr 0x12005fc20 <col:9> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x12005f798 <line:9:15> col:15 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x12005f898 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12005f900 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12005f968 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12005f840 <<invalid sloc>> Implicit 888
