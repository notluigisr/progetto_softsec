TranslationUnitDecl 0x12e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e055bd0 '__int128'
|-TypedefDecl 0x12e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e055bf0 'unsigned __int128'
|-TypedefDecl 0x12e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e126000 'struct __NSConstantString_tag'
|   `-Record 0x12e056580 '__NSConstantString_tag'
|-TypedefDecl 0x12e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e055d90 '__SVInt8_t'
|-TypedefDecl 0x12e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e055db0 '__SVInt16_t'
|-TypedefDecl 0x12e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e055dd0 '__SVInt32_t'
|-TypedefDecl 0x12e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e055df0 '__SVInt64_t'
|-TypedefDecl 0x12e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e055e10 '__SVUint8_t'
|-TypedefDecl 0x12e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e055e30 '__SVUint16_t'
|-TypedefDecl 0x12e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e055e50 '__SVUint32_t'
|-TypedefDecl 0x12e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e055e70 '__SVUint64_t'
|-TypedefDecl 0x12e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e055e90 '__SVFloat16_t'
|-TypedefDecl 0x12e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e056390 '__SVBool_t'
|-TypedefDecl 0x12e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0563f0 '__SVCount_t'
|-TypedefDecl 0x12e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-TypedefDecl 0x12e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-FunctionDecl 0x12e128318 <dataset_diviso_filec/func4571_vuln.c:1:1, line:35:1> line:1:1 invalid gnutls_session_get_data 'int (int, void *, int *)'
| |-ParmVarDecl 0x12e1280f0 <col:26, col:43> col:43 referenced invalid session 'int'
| |-ParmVarDecl 0x12e128170 <line:2:26, col:32> col:32 used session_data 'void *'
| |-ParmVarDecl 0x12e128228 <col:46, col:55> col:55 invalid session_data_size 'int *'
| `-CompoundStmt 0x12f008898 <line:3:1, line:35:1>
|   |-DeclStmt 0x12e128458 <line:6:3, col:10>
|   | `-VarDecl 0x12e1283f0 <col:3, col:7> col:7 used ret 'int'
|   |-IfStmt 0x12e1285e0 <line:8:3, line:9:12>
|   | |-BinaryOperator 0x12e128578 <line:8:7, col:39> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x12e1284d8 <col:7, col:26> '<dependent type>' contains-errors lvalue .resumable
|   | | | `-CXXDependentScopeMemberExpr 0x12e128490 <col:7, col:16> '<dependent type>' contains-errors lvalue ->internals
|   | | |   `-RecoveryExpr 0x12e128470 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x12e128558 <col:39> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x12e1285d0 <line:9:5, col:12>
|   |   `-RecoveryExpr 0x12e1285b0 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12e1286b0 <line:11:3, col:19> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12e128648 <col:3, col:12> '<dependent type>' contains-errors lvalue .data
|   | | `-RecoveryExpr 0x12e128620 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12e128600 <col:3> 'int' lvalue ParmVar 0x12e1280f0 'session' 'int'
|   | `-DeclRefExpr 0x12e128690 <col:19> 'void *' lvalue ParmVar 0x12e128170 'session_data' 'void *'
|   |-BinaryOperator 0x12e141a00 <line:13:3, col:49> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12e1286d0 <col:3> 'int' lvalue Var 0x12e1283f0 'ret' 'int'
|   | `-CallExpr 0x12e1419d0 <col:9, col:49> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12e1418b8 <col:9> 'int ()' Function 0x12e141800 '_gnutls_session_pack' 'int ()'
|   |   |-RecoveryExpr 0x12e1418d8 <col:31> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x12e1419b8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12e141998 <col:41> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e141c70 <line:14:3, line:18:5>
|   | |-BinaryOperator 0x12e141a78 <line:14:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x12e141a60 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e141a20 <col:7> 'int' lvalue Var 0x12e1283f0 'ret' 'int'
|   | | `-IntegerLiteral 0x12e141a40 <col:13> 'int' 0
|   | `-CompoundStmt 0x12e141c50 <line:15:5, line:18:5>
|   |   |-CallExpr 0x12e141be8 <line:16:7, col:22> 'int'
|   |   | `-ImplicitCastExpr 0x12e141bd0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x12e141b78 <col:7> 'int ()' Function 0x12e141ac0 'gnutls_assert' 'int ()'
|   |   `-ReturnStmt 0x12e141c40 <line:17:7, col:14>
|   |     `-ImplicitCastExpr 0x12e141c28 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12e141c08 <col:14> 'int' lvalue Var 0x12e1283f0 'ret' 'int'
|   |-IfStmt 0x12e141f58 <line:20:3, line:24:5>
|   | |-BinaryOperator 0x12e141e18 <line:20:7, col:24> 'int' contains-errors '>'
|   | | |-CXXDependentScopeMemberExpr 0x12e141da0 <col:7, col:16> '<dependent type>' contains-errors lvalue .size
|   | | | `-RecoveryExpr 0x12e141d80 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x12e141e00 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x12e141de8 <col:24> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x12e141cf0 <col:24> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12e141f38 <line:21:5, line:24:5>
|   |   |-BinaryOperator 0x12e141eb0 <line:22:7, col:13> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x12e141e38 <col:7> 'int' lvalue Var 0x12e1283f0 'ret' 'int'
|   |   | `-RecoveryExpr 0x12e141e90 <col:13> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x12e141f20 <line:23:7, col:12> 'error' 0x12e141ed0
|   |-BinaryOperator 0x12e142130 <line:25:3, col:33> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x12e1420b0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12e142098 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12e141f78 <col:4> '<dependent type>' contains-errors lvalue
|   | `-CXXDependentScopeMemberExpr 0x12e1420e8 <col:24, col:33> '<dependent type>' contains-errors lvalue .size
|   |   `-RecoveryExpr 0x12e1420c8 <col:24> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12f0085d8 <line:27:3, line:28:55>
|   | |-BinaryOperator 0x12e1421c8 <line:27:7, col:23> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x12e142150 <col:7> 'void *' lvalue ParmVar 0x12e128170 'session_data' 'void *'
|   | | `-RecoveryExpr 0x12e1421a8 <col:23> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x12f0085a0 <line:28:5, col:55> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12f0082e8 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x12e142690 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   |-DeclRefExpr 0x12f008308 <col:13> 'void *' lvalue ParmVar 0x12e128170 'session_data' 'void *'
|   |   |-CXXDependentScopeMemberExpr 0x12f0084a8 <col:27, col:36> '<dependent type>' contains-errors lvalue .data
|   |   | `-RecoveryExpr 0x12f008488 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x12f008510 <col:42, col:51> '<dependent type>' contains-errors lvalue .size
|   |     `-RecoveryExpr 0x12f0084f0 <col:42> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12f008638 <line:30:3, col:9> 'int' '='
|   | |-DeclRefExpr 0x12f0085f8 <col:3> 'int' lvalue Var 0x12e1283f0 'ret' 'int'
|   | `-IntegerLiteral 0x12f008618 <col:9> 'int' 0
|   |-LabelStmt 0x12f008830 <line:32:1, line:33:32> 'error'
|   | `-CallExpr 0x12f008808 <col:3, col:32> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12f008738 <col:3> 'int ()' Function 0x12f008680 '_gnutls_free_datum' 'int ()'
|   |   `-UnaryOperator 0x12f0087f0 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12f0087d0 <col:24> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12f008888 <line:34:3, col:10>
|     `-ImplicitCastExpr 0x12f008870 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12f008850 <col:10> 'int' lvalue Var 0x12e1283f0 'ret' 'int'
`-FunctionDecl 0x12e142690 <line:28:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12e142790 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12f008200 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12f008268 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12e142738 <<invalid sloc>> Implicit 882
