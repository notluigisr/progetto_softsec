TranslationUnitDecl 0x141055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1410564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x141055bd0 '__int128'
|-TypedefDecl 0x141056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x141055bf0 'unsigned __int128'
|-TypedefDecl 0x141126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x141126800 'struct __NSConstantString_tag'
|   `-Record 0x141056580 '__NSConstantString_tag'
|-TypedefDecl 0x141126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x141055d90 '__SVInt8_t'
|-TypedefDecl 0x141126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x141055db0 '__SVInt16_t'
|-TypedefDecl 0x141126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x141055dd0 '__SVInt32_t'
|-TypedefDecl 0x141126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x141055df0 '__SVInt64_t'
|-TypedefDecl 0x141126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x141055e10 '__SVUint8_t'
|-TypedefDecl 0x141126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x141055e30 '__SVUint16_t'
|-TypedefDecl 0x141126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x141055e50 '__SVUint32_t'
|-TypedefDecl 0x141126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x141055e70 '__SVUint64_t'
|-TypedefDecl 0x141126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x141055e90 '__SVFloat16_t'
|-TypedefDecl 0x141126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x141055eb0 '__SVFloat32_t'
|-TypedefDecl 0x141126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x141055ed0 '__SVFloat64_t'
|-TypedefDecl 0x141126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x141055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x141126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x141055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x141126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x141055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x141127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x141055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1411270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x141055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x141127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x141055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x141127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x141055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1411271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x141055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x141127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x141055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1411272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x141056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x141127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x141056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x141127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x141056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1411273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x141056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x141127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x141056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1411274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1410560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x141127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1410560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x141127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1410560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1411275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x141056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x141127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x141056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1411276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x141056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x141127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x141056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x141127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x141056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x141128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1410561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x141128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1410561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1411280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1410561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x141128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x141056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1411281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x141056230 '__clang_svint16x4_t'
|-TypedefDecl 0x141128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x141056250 '__clang_svint32x4_t'
|-TypedefDecl 0x141128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x141056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1411282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x141056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x141128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1410562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1411283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1410562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x141128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1410562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x141128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x141056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1411284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x141056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x141128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x141056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1411285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x141056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x141128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x141056390 '__SVBool_t'
|-TypedefDecl 0x141128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1410563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1411286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1410563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x141128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1410563f0 '__SVCount_t'
|-TypedefDecl 0x1411287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1411287b0 'char *'
|   `-BuiltinType 0x1410556b0 'char'
|-TypedefDecl 0x141128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1411287b0 'char *'
|   `-BuiltinType 0x1410556b0 'char'
|-FunctionDecl 0x141141238 <dataset_diviso_filec/func21021_vuln.c:1:1, line:76:1> line:1:12 pop_sync_mailbox 'int (struct Context *, int *)' static
| |-ParmVarDecl 0x141128e48 <col:29, col:45> col:45 used ctx 'struct Context *'
| |-ParmVarDecl 0x141128ef8 <col:50, col:55> col:55 index_hint 'int *'
| `-CompoundStmt 0x142809a68 <line:2:1, line:76:1>
|   |-DeclStmt 0x1411414f8 <line:3:3, col:20>
|   | |-VarDecl 0x141141350 <col:3, col:7> col:7 used i 'int'
|   | |-VarDecl 0x1411413d0 <col:3, col:10> col:10 used j 'int'
|   | `-VarDecl 0x141141450 <col:3, col:19> col:13 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1411414b8 <col:19> 'int' 0
|   |-DeclStmt 0x1411415b8 <line:4:3, col:24>
|   | `-VarDecl 0x141141550 <col:3, col:8> col:8 invalid buf 'char'
|   |-DeclStmt 0x1411418c8 <line:5:3, col:58>
|   | |-RecordDecl 0x1411415d0 <col:3, col:10> col:10 struct PopData
|   | `-VarDecl 0x141141738 <col:3, col:54> col:19 used pop_data 'struct PopData *' cinit
|   |   `-CStyleCastExpr 0x141141888 <col:30, col:54> 'struct PopData *' contains-errors <Dependent>
|   |     `-RecoveryExpr 0x1411417d8 <col:49, col:54> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x1411417a0 <col:49> 'struct Context *' lvalue ParmVar 0x141128e48 'ctx' 'struct Context *'
|   |-DeclStmt 0x141141a58 <line:6:3, col:27>
|   | |-RecordDecl 0x1411418e0 <col:3, col:10> col:10 struct Progress
|   | `-VarDecl 0x1411419d8 <col:3, col:19> col:19 invalid progress 'struct Progress'
|   |-BinaryOperator 0x141141af0 <line:11:3, col:26> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x141141aa8 <col:3, col:13> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x141141a70 <col:3> 'struct PopData *' contains-errors lvalue Var 0x141141738 'pop_data' 'struct PopData *'
|   | `-IntegerLiteral 0x141141ad0 <col:26> 'int' 0
|   `-WhileStmt 0x142809a48 <line:13:3, line:75:3>
|     |-RecoveryExpr 0x141141b28 <line:13:10> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x142809a08 <line:14:3, line:75:3>
|       |-IfStmt 0x141141db0 <line:15:5, line:16:15>
|       | |-BinaryOperator 0x141141d48 <line:15:9, col:30> 'int' '<'
|       | | |-CallExpr 0x141141ce8 <col:9, col:26> 'int'
|       | | | |-ImplicitCastExpr 0x141141cd0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | | | `-DeclRefExpr 0x141141c60 <col:9> 'int ()' Function 0x141141ba8 'pop_reconnect' 'int ()'
|       | | | `-ImplicitCastExpr 0x141141d10 <col:23> 'struct Context *' <LValueToRValue>
|       | | |   `-DeclRefExpr 0x141141c80 <col:23> 'struct Context *' lvalue ParmVar 0x141128e48 'ctx' 'struct Context *'
|       | | `-IntegerLiteral 0x141141d28 <col:30> 'int' 0
|       | `-ReturnStmt 0x141141da0 <line:16:7, col:15>
|       |   `-UnaryOperator 0x141141d88 <col:14, col:15> 'int' prefix '-'
|       |     `-IntegerLiteral 0x141141d68 <col:15> 'int' 1
|       |-CallExpr 0x141809298 <line:18:5, line:19:65> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x141141eb0 <line:18:5> 'int ()' Function 0x141141df8 'mutt_progress_init' 'int ()'
|       | |-UnaryOperator 0x141141ef0 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | | `-RecoveryExpr 0x141141ed0 <col:25> '<dependent type>' contains-errors lvalue
|       | |-CallExpr 0x141809218 <col:35, col:42> 'int'
|       | | |-ImplicitCastExpr 0x141809200 <col:35> 'int (*)()' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x141141fe8 <col:35> 'int ()' Function 0x141141f30 '_' 'int ()'
|       | | `-ImplicitCastExpr 0x141809240 <col:37> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x141142050 <col:37> 'char[4]' lvalue "STR"
|       | |-RecoveryExpr 0x141809258 <line:19:24> '<dependent type>' contains-errors lvalue
|       | |-RecoveryExpr 0x141809278 <col:43> '<dependent type>' contains-errors lvalue
|       | `-RecoveryExpr 0x141142130 <col:53, col:58> '<dependent type>' contains-errors lvalue
|       |   `-DeclRefExpr 0x1411420f8 <col:53> 'struct Context *' lvalue ParmVar 0x141128e48 'ctx' 'struct Context *'
|       |-ForStmt 0x142809020 <line:25:5, line:50:5>
|       | |-BinaryOperator 0x141809420 <line:25:10, col:30> 'int' ','
|       | | |-BinaryOperator 0x1418093a0 <col:10, col:21> 'int' ','
|       | | | |-BinaryOperator 0x141809320 <col:10, col:14> 'int' '='
|       | | | | |-DeclRefExpr 0x1418092e0 <col:10> 'int' lvalue Var 0x141141350 'i' 'int'
|       | | | | `-IntegerLiteral 0x141809300 <col:14> 'int' 0
|       | | | `-BinaryOperator 0x141809380 <col:17, col:21> 'int' '='
|       | | |   |-DeclRefExpr 0x141809340 <col:17> 'int' lvalue Var 0x1411413d0 'j' 'int'
|       | | |   `-IntegerLiteral 0x141809360 <col:21> 'int' 0
|       | | `-BinaryOperator 0x141809400 <col:24, col:30> 'int' '='
|       | |   |-DeclRefExpr 0x1418093c0 <col:24> 'int' lvalue Var 0x141141450 'ret' 'int'
|       | |   `-IntegerLiteral 0x1418093e0 <col:30> 'int' 0
|       | |-<<<NULL>>>
|       | |-BinaryOperator 0x141809558 <col:33, col:54> 'int' contains-errors '&&'
|       | | |-BinaryOperator 0x141809498 <col:33, col:40> 'int' '=='
|       | | | |-ImplicitCastExpr 0x141809480 <col:33> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x141809440 <col:33> 'int' lvalue Var 0x141141450 'ret' 'int'
|       | | | `-IntegerLiteral 0x141809460 <col:40> 'int' 0
|       | | `-BinaryOperator 0x141809538 <col:45, col:54> 'int' contains-errors '<'
|       | |   |-DeclRefExpr 0x1418094b8 <col:45> 'int' lvalue Var 0x141141350 'i' 'int'
|       | |   `-RecoveryExpr 0x141809510 <col:49, col:54> '<dependent type>' contains-errors lvalue
|       | |     `-DeclRefExpr 0x1418094d8 <col:49> 'struct Context *' lvalue ParmVar 0x141128e48 'ctx' 'struct Context *'
|       | |-UnaryOperator 0x141809598 <col:64, col:65> 'int' postfix '++'
|       | | `-DeclRefExpr 0x141809578 <col:64> 'int' lvalue Var 0x141141350 'i' 'int'
|       | `-CompoundStmt 0x142809008 <line:26:5, line:50:5>
|       |   `-IfStmt 0x142808fe8 <line:27:7, line:41:7>
|       |     |-BinaryOperator 0x141809838 <line:27:11, col:60> 'int' contains-errors '&&'
|       |     | |-CXXDependentScopeMemberExpr 0x141809680 <col:11, col:25> '<dependent type>' contains-errors lvalue ->deleted
|       |     | | `-ArraySubscriptExpr 0x141809660 <col:11, col:22> '<dependent type>' contains-errors lvalue
|       |     | |   |-ImplicitCastExpr 0x141809630 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>
|       |     | |   | `-RecoveryExpr 0x1418095e8 <col:11, col:16> '<dependent type>' contains-errors lvalue
|       |     | |   |   `-DeclRefExpr 0x1418095b0 <col:11> 'struct Context *' lvalue ParmVar 0x141128e48 'ctx' 'struct Context *'
|       |     | |   `-ImplicitCastExpr 0x141809648 <col:21> 'int' <LValueToRValue>
|       |     | |     `-DeclRefExpr 0x141809610 <col:21> 'int' lvalue Var 0x141141350 'i' 'int'
|       |     | `-BinaryOperator 0x141809818 <col:36, col:60> 'int' contains-errors '!='
|       |     |   |-CXXDependentScopeMemberExpr 0x141809798 <col:36, col:50> '<dependent type>' contains-errors lvalue ->refno
|       |     |   | `-ArraySubscriptExpr 0x141809778 <col:36, col:47> '<dependent type>' contains-errors lvalue
|       |     |   |   |-ImplicitCastExpr 0x141809748 <col:36, col:41> '<dependent type>' contains-errors <LValueToRValue>
|       |     |   |   | `-RecoveryExpr 0x141809700 <col:36, col:41> '<dependent type>' contains-errors lvalue
|       |     |   |   |   `-DeclRefExpr 0x1418096c8 <col:36> 'struct Context *' lvalue ParmVar 0x141128e48 'ctx' 'struct Context *'
|       |     |   |   `-ImplicitCastExpr 0x141809760 <col:46> 'int' <LValueToRValue>
|       |     |   |     `-DeclRefExpr 0x141809728 <col:46> 'int' lvalue Var 0x141141350 'i' 'int'
|       |     |   `-UnaryOperator 0x141809800 <col:59, col:60> 'int' prefix '-'
|       |     |     `-IntegerLiteral 0x1418097e0 <col:60> 'int' 1
|       |     `-CompoundStmt 0x142808fb0 <line:28:7, line:41:7>
|       |       |-UnaryOperator 0x141809878 <line:29:9, col:10> 'int' postfix '++'
|       |       | `-DeclRefExpr 0x141809858 <col:9> 'int' lvalue Var 0x1411413d0 'j' 'int'
|       |       |-IfStmt 0x141809ae8 <line:30:9, line:31:48>
|       |       | |-UnaryOperator 0x141809908 <line:30:13, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
|       |       | | `-ImplicitCastExpr 0x1418098f0 <col:14, col:19> '<dependent type>' contains-errors <LValueToRValue>
|       |       | |   `-RecoveryExpr 0x1418098c8 <col:14, col:19> '<dependent type>' contains-errors lvalue
|       |       | |     `-DeclRefExpr 0x141809890 <col:14> 'struct Context *' lvalue ParmVar 0x141128e48 'ctx' 'struct Context *'
|       |       | `-CallExpr 0x141809ab0 <line:31:11, col:48> '<dependent type>' contains-errors
|       |       |   |-DeclRefExpr 0x141809a00 <col:11> 'int ()' Function 0x141809948 'mutt_progress_update' 'int ()'
|       |       |   |-UnaryOperator 0x141809a40 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |       |   | `-RecoveryExpr 0x141809a20 <col:33> '<dependent type>' contains-errors lvalue
|       |       |   |-DeclRefExpr 0x141809a58 <col:43> 'int' lvalue Var 0x1411413d0 'j' 'int'
|       |       |   `-UnaryOperator 0x141809a98 <col:46, col:47> 'int' prefix '-'
|       |       |     `-IntegerLiteral 0x141809a78 <col:47> 'int' 1
|       |       |-CallExpr 0x141809ff0 <line:32:9, col:62> '<dependent type>' contains-errors
|       |       | |-DeclRefExpr 0x141809de8 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x141809b60 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|       |       | |-RecoveryExpr 0x141809e08 <col:18> '<dependent type>' contains-errors lvalue
|       |       | |-UnaryExprOrTypeTraitExpr 0x141809e68 <col:23, col:33> 'unsigned long' contains-errors sizeof
|       |       | | `-ParenExpr 0x141809e48 <col:29, col:33> '<dependent type>' contains-errors lvalue
|       |       | |   `-RecoveryExpr 0x141809e28 <col:30> '<dependent type>' contains-errors lvalue
|       |       | |-StringLiteral 0x141809e88 <col:36> 'char[4]' lvalue "STR"
|       |       | `-CXXDependentScopeMemberExpr 0x141809f78 <col:43, col:57> '<dependent type>' contains-errors lvalue ->refno
|       |       |   `-ArraySubscriptExpr 0x141809f58 <col:43, col:54> '<dependent type>' contains-errors lvalue
|       |       |     |-ImplicitCastExpr 0x141809f28 <col:43, col:48> '<dependent type>' contains-errors <LValueToRValue>
|       |       |     | `-RecoveryExpr 0x141809ee0 <col:43, col:48> '<dependent type>' contains-errors lvalue
|       |       |     |   `-DeclRefExpr 0x141809ea8 <col:43> 'struct Context *' lvalue ParmVar 0x141128e48 'ctx' 'struct Context *'
|       |       |     `-ImplicitCastExpr 0x141809f40 <col:53> 'int' <LValueToRValue>
|       |       |       `-DeclRefExpr 0x141809f08 <col:53> 'int' lvalue Var 0x141141350 'i' 'int'
|       |       |-BinaryOperator 0x142808c38 <line:33:9, col:51> 'int' contains-errors '='
|       |       | |-DeclRefExpr 0x14180a030 <col:9> 'int' lvalue Var 0x141141450 'ret' 'int'
|       |       | `-CallExpr 0x142808c00 <col:15, col:51> '<dependent type>' contains-errors
|       |       |   |-DeclRefExpr 0x14180a130 <col:15> 'int ()' Function 0x14180a078 'pop_query' 'int ()'
|       |       |   |-DeclRefExpr 0x14180a150 <col:25> 'struct PopData *' contains-errors lvalue Var 0x141141738 'pop_data' 'struct PopData *'
|       |       |   |-RecoveryExpr 0x14180a170 <col:35> '<dependent type>' contains-errors lvalue
|       |       |   `-UnaryExprOrTypeTraitExpr 0x14180a1d0 <col:40, col:50> 'unsigned long' contains-errors sizeof
|       |       |     `-ParenExpr 0x14180a1b0 <col:46, col:50> '<dependent type>' contains-errors lvalue
|       |       |       `-RecoveryExpr 0x14180a190 <col:47> '<dependent type>' contains-errors lvalue
|       |       `-IfStmt 0x142808f90 <line:34:9, line:40:9>
|       |         |-BinaryOperator 0x142808cb0 <line:34:13, col:20> 'int' '=='
|       |         | |-ImplicitCastExpr 0x142808c98 <col:13> 'int' <LValueToRValue>
|       |         | | `-DeclRefExpr 0x142808c58 <col:13> 'int' lvalue Var 0x141141450 'ret' 'int'
|       |         | `-IntegerLiteral 0x142808c78 <col:20> 'int' 0
|       |         `-CompoundStmt 0x142808f78 <line:35:9, line:40:9>
|       |           `-CallExpr 0x142808f48 <line:36:11, col:63> '<dependent type>' contains-errors
|       |             |-DeclRefExpr 0x142808db0 <col:11> 'int ()' Function 0x142808cf8 'mutt_bcache_del' 'int ()'
|       |             |-RecoveryExpr 0x142808e08 <col:27, col:37> '<dependent type>' contains-errors lvalue
|       |             | `-DeclRefExpr 0x142808dd0 <col:27> 'struct PopData *' contains-errors lvalue Var 0x141141738 'pop_data' 'struct PopData *'
|       |             `-CXXDependentScopeMemberExpr 0x142808f00 <col:45, col:59> '<dependent type>' contains-errors lvalue ->data
|       |               `-ArraySubscriptExpr 0x142808ee0 <col:45, col:56> '<dependent type>' contains-errors lvalue
|       |                 |-ImplicitCastExpr 0x142808eb0 <col:45, col:50> '<dependent type>' contains-errors <LValueToRValue>
|       |                 | `-RecoveryExpr 0x142808e68 <col:45, col:50> '<dependent type>' contains-errors lvalue
|       |                 |   `-DeclRefExpr 0x142808e30 <col:45> 'struct Context *' lvalue ParmVar 0x141128e48 'ctx' 'struct Context *'
|       |                 `-ImplicitCastExpr 0x142808ec8 <col:55> 'int' <LValueToRValue>
|       |                   `-DeclRefExpr 0x142808e90 <col:55> 'int' lvalue Var 0x141141350 'i' 'int'
|       |-IfStmt 0x142809400 <line:56:5, line:60:5>
|       | |-BinaryOperator 0x1428090b0 <line:56:9, col:16> 'int' '=='
|       | | |-ImplicitCastExpr 0x142809098 <col:9> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x142809058 <col:9> 'int' lvalue Var 0x141141450 'ret' 'int'
|       | | `-IntegerLiteral 0x142809078 <col:16> 'int' 0
|       | `-CompoundStmt 0x1428093e0 <line:57:5, line:60:5>
|       |   |-CallExpr 0x142809270 <line:58:7, col:47> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x1428091b0 <col:7> 'int ()' Function 0x1428090f8 'mutt_str_strfcpy' 'int ()'
|       |   | |-RecoveryExpr 0x1428091d0 <col:24> '<dependent type>' contains-errors lvalue
|       |   | |-StringLiteral 0x1428091f0 <col:29> 'char[4]' lvalue "STR"
|       |   | `-UnaryExprOrTypeTraitExpr 0x142809250 <col:36, col:46> 'unsigned long' contains-errors sizeof
|       |   |   `-ParenExpr 0x142809230 <col:42, col:46> '<dependent type>' contains-errors lvalue
|       |   |     `-RecoveryExpr 0x142809210 <col:43> '<dependent type>' contains-errors lvalue
|       |   `-BinaryOperator 0x1428093c0 <line:59:7, col:49> 'int' contains-errors '='
|       |     |-DeclRefExpr 0x1428092a8 <col:7> 'int' lvalue Var 0x141141450 'ret' 'int'
|       |     `-CallExpr 0x142809388 <col:13, col:49> '<dependent type>' contains-errors
|       |       |-DeclRefExpr 0x1428092c8 <col:13> 'int ()' Function 0x14180a078 'pop_query' 'int ()'
|       |       |-DeclRefExpr 0x1428092e8 <col:23> 'struct PopData *' contains-errors lvalue Var 0x141141738 'pop_data' 'struct PopData *'
|       |       |-RecoveryExpr 0x142809308 <col:33> '<dependent type>' contains-errors lvalue
|       |       `-UnaryExprOrTypeTraitExpr 0x142809368 <col:38, col:48> 'unsigned long' contains-errors sizeof
|       |         `-ParenExpr 0x142809348 <col:44, col:48> '<dependent type>' contains-errors lvalue
|       |           `-RecoveryExpr 0x142809328 <col:45> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x142809720 <line:62:5, line:68:5>
|       | |-BinaryOperator 0x142809478 <line:62:9, col:16> 'int' '=='
|       | | |-ImplicitCastExpr 0x142809460 <col:9> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x142809420 <col:9> 'int' lvalue Var 0x141141450 'ret' 'int'
|       | | `-IntegerLiteral 0x142809440 <col:16> 'int' 0
|       | `-CompoundStmt 0x142809700 <line:63:5, line:68:5>
|       |   |-CallExpr 0x142809630 <line:65:7, col:31> 'int' contains-errors
|       |   | |-ImplicitCastExpr 0x142809618 <col:7> 'int (*)()' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x1428095d8 <col:7> 'int ()' Function 0x142809520 'pop_clear_cache' 'int ()'
|       |   | `-ImplicitCastExpr 0x142809658 <col:23> 'struct PopData *' contains-errors <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1428095f8 <col:23> 'struct PopData *' contains-errors lvalue Var 0x141141738 'pop_data' 'struct PopData *'
|       |   `-ReturnStmt 0x1428096f0 <line:67:7, col:14>
|       |     `-IntegerLiteral 0x1428096d0 <col:14> 'int' 0
|       `-IfStmt 0x1428099e8 <line:70:5, line:74:5>
|         |-BinaryOperator 0x1428097b0 <line:70:9, col:17> 'int' '=='
|         | |-ImplicitCastExpr 0x142809798 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x142809740 <col:9> 'int' lvalue Var 0x141141450 'ret' 'int'
|         | `-UnaryOperator 0x142809780 <col:16, col:17> 'int' prefix '-'
|         |   `-IntegerLiteral 0x142809760 <col:17> 'int' 2
|         `-CompoundStmt 0x1428099c8 <line:71:5, line:74:5>
|           |-CallExpr 0x142809950 <line:72:7, col:42> '<dependent type>' contains-errors
|           | |-DeclRefExpr 0x1428098b0 <col:7> 'int ()' Function 0x1428097f8 'mutt_error' 'int ()'
|           | |-StringLiteral 0x1428098d0 <col:18> 'char[4]' lvalue "STR"
|           | `-RecoveryExpr 0x142809928 <col:25, col:35> '<dependent type>' contains-errors lvalue
|           |   `-DeclRefExpr 0x1428098f0 <col:25> 'struct PopData *' contains-errors lvalue Var 0x141141738 'pop_data' 'struct PopData *'
|           `-ReturnStmt 0x1428099b8 <line:73:7, col:15>
|             `-UnaryOperator 0x1428099a0 <col:14, col:15> 'int' prefix '-'
|               `-IntegerLiteral 0x142809980 <col:15> 'int' 1
`-FunctionDecl 0x141809b60 <line:32:9> col:9 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x141809c60 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x141809cc8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x141809d30 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x141809c08 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x141809db0 <col:9> Implicit printf 3 4
