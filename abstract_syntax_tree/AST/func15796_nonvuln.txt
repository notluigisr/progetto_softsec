TranslationUnitDecl 0x13a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a055bd0 '__int128'
|-TypedefDecl 0x13a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a055bf0 'unsigned __int128'
|-TypedefDecl 0x13a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a126000 'struct __NSConstantString_tag'
|   `-Record 0x13a056580 '__NSConstantString_tag'
|-TypedefDecl 0x13a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a055d90 '__SVInt8_t'
|-TypedefDecl 0x13a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a055db0 '__SVInt16_t'
|-TypedefDecl 0x13a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a055dd0 '__SVInt32_t'
|-TypedefDecl 0x13a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a055df0 '__SVInt64_t'
|-TypedefDecl 0x13a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a055e10 '__SVUint8_t'
|-TypedefDecl 0x13a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a055e30 '__SVUint16_t'
|-TypedefDecl 0x13a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a055e50 '__SVUint32_t'
|-TypedefDecl 0x13a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a055e70 '__SVUint64_t'
|-TypedefDecl 0x13a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a055e90 '__SVFloat16_t'
|-TypedefDecl 0x13a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a056390 '__SVBool_t'
|-TypedefDecl 0x13a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a0563f0 '__SVCount_t'
|-TypedefDecl 0x13a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a127fb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-TypedefDecl 0x13a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a127fb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-FunctionDecl 0x13a1281d8 <dataset_diviso_filec/func15796_nonvuln.c:1:1, line:56:1> line:1:15 crunch_list 'char **(char *)' static
| |-ParmVarDecl 0x13a1280d8 <col:27, col:33> col:33 used list 'char *'
| `-CompoundStmt 0x13a1466a0 <line:2:1, line:56:1>
|   |-DeclStmt 0x13a1283e8 <line:3:2, col:14>
|   | |-VarDecl 0x13a1282e8 <col:2, col:6> col:6 used count 'int'
|   | `-VarDecl 0x13a128368 <col:2, col:13> col:13 used i 'int'
|   |-DeclStmt 0x13a128518 <line:4:2, col:13>
|   | |-VarDecl 0x13a128418 <col:2, col:8> col:8 used p 'char *'
|   | `-VarDecl 0x13a128498 <col:2, col:12> col:12 used q 'char *'
|   |-DeclStmt 0x13a128600 <line:5:2, col:22>
|   | `-VarDecl 0x13a128548 <col:2, col:18> col:9 used result 'char **' cinit
|   |   `-RecoveryExpr 0x13a1285e0 <col:18> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13a128670 <line:7:2, col:6> 'char *' '='
|   | |-DeclRefExpr 0x13a128618 <col:2> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   | `-ImplicitCastExpr 0x13a128658 <col:6> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13a128638 <col:6> 'char *' lvalue ParmVar 0x13a1280d8 'list' 'char *'
|   |-WhileStmt 0x13a1414b8 <line:10:2, line:13:2>
|   | |-BinaryOperator 0x13a141278 <line:10:9, col:27> 'int' contains-errors '=='
|   | | |-ArraySubscriptExpr 0x13a141238 <col:9, col:22> 'char' lvalue
|   | | | |-ImplicitCastExpr 0x13a141220 <col:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13a128690 <col:9> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   | | | `-BinaryOperator 0x13a141200 <col:11, col:21> 'unsigned long' '-'
|   | | |   |-CallExpr 0x13a141190 <col:11, col:19> 'unsigned long'
|   | | |   | |-ImplicitCastExpr 0x13a141178 <col:11> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x13a140ea0 <col:11> 'unsigned long (const char *)' Function 0x13a140d30 'strlen' 'unsigned long (const char *)'
|   | | |   | `-ImplicitCastExpr 0x13a1411d0 <col:18> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x13a1411b8 <col:18> 'char *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x13a140ec0 <col:18> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   | | |   `-ImplicitCastExpr 0x13a1411e8 <col:21> 'unsigned long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x13a140fa0 <col:21> 'int' 1
|   | | `-RecoveryExpr 0x13a141258 <col:27> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13a141498 <col:43, line:13:2>
|   |   |-UnaryOperator 0x13a1412b8 <line:11:3, col:8> 'int' postfix '--'
|   |   | `-DeclRefExpr 0x13a141298 <col:3> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   |   `-BinaryOperator 0x13a141478 <line:12:3, col:20> 'char' '='
|   |     |-ArraySubscriptExpr 0x13a141428 <col:3, col:16> 'char' lvalue
|   |     | |-ImplicitCastExpr 0x13a141410 <col:3> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13a1412d0 <col:3> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |     | `-BinaryOperator 0x13a1413f0 <col:5, col:15> 'unsigned long' '-'
|   |     |   |-CallExpr 0x13a141360 <col:5, col:13> 'unsigned long'
|   |     |   | |-ImplicitCastExpr 0x13a141348 <col:5> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     |   | | `-DeclRefExpr 0x13a1412f0 <col:5> 'unsigned long (const char *)' Function 0x13a140d30 'strlen' 'unsigned long (const char *)'
|   |     |   | `-ImplicitCastExpr 0x13a1413a0 <col:12> 'const char *' <NoOp>
|   |     |   |   `-ImplicitCastExpr 0x13a141388 <col:12> 'char *' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x13a141310 <col:12> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |     |   `-ImplicitCastExpr 0x13a1413d8 <col:15> 'unsigned long' <IntegralCast>
|   |     |     `-IntegerLiteral 0x13a1413b8 <col:15> 'int' 1
|   |     `-ImplicitCastExpr 0x13a141460 <col:20> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x13a141448 <col:20> 'int' 0
|   |-WhileStmt 0x13a1416c8 <line:15:2, line:18:2>
|   | |-BinaryOperator 0x13a141618 <line:15:9, col:17> 'int' contains-errors '=='
|   | | |-ArraySubscriptExpr 0x13a1415d8 <col:9, col:12> 'char' lvalue
|   | | | |-ImplicitCastExpr 0x13a1415c0 <col:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13a1414d8 <col:9> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   | | | `-IntegerLiteral 0x13a1414f8 <col:11> 'int' 0
|   | | `-RecoveryExpr 0x13a1415f8 <col:17> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13a1416a8 <col:33, line:18:2>
|   |   |-UnaryOperator 0x13a141658 <line:16:3, col:8> 'int' postfix '--'
|   |   | `-DeclRefExpr 0x13a141638 <col:3> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   |   `-UnaryOperator 0x13a141690 <line:17:3, col:4> 'char *' postfix '++'
|   |     `-DeclRefExpr 0x13a141670 <col:3> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |-ForStmt 0x13a142878 <line:21:2, line:22:36>
|   | |-BinaryOperator 0x13a141768 <line:21:7, col:15> 'int' '='
|   | | |-DeclRefExpr 0x13a1416e8 <col:7> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   | | `-BinaryOperator 0x13a141748 <col:13, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x13a141708 <col:13> 'int' lvalue Var 0x13a128368 'i' 'int'
|   | |   `-IntegerLiteral 0x13a141728 <col:15> 'int' 0
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x13a141818 <col:18, col:21> 'char' <LValueToRValue>
|   | | `-ArraySubscriptExpr 0x13a1417f8 <col:18, col:21> 'char' lvalue
|   | |   |-ImplicitCastExpr 0x13a1417c8 <col:18> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13a141788 <col:18> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   | |   `-ImplicitCastExpr 0x13a1417e0 <col:20> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13a1417a8 <col:20> 'int' lvalue Var 0x13a128368 'i' 'int'
|   | |-UnaryOperator 0x13a141850 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13a141830 <col:24> 'int' lvalue Var 0x13a128368 'i' 'int'
|   | `-IfStmt 0x13a142858 <line:22:3, col:36>
|   |   |-BinaryOperator 0x13a142800 <col:7, col:15> 'int' contains-errors '=='
|   |   | |-ArraySubscriptExpr 0x13a1419b0 <col:7, col:10> 'char' lvalue
|   |   | | |-ImplicitCastExpr 0x13a141980 <col:7> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13a141868 <col:7> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |   | | `-ImplicitCastExpr 0x13a141998 <col:9> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13a141888 <col:9> 'int' lvalue Var 0x13a128368 'i' 'int'
|   |   | `-RecoveryExpr 0x13a1419d0 <col:15> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x13a142840 <col:31, col:36> 'int' postfix '++'
|   |     `-DeclRefExpr 0x13a142820 <col:31> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   |-IfStmt 0x13a143600 <line:24:2, line:27:2>
|   | |-BinaryOperator 0x13a143028 <line:24:6, col:64> 'int' contains-errors '=='
|   | | |-ParenExpr 0x13a142fe8 <col:6, col:59> 'char **' contains-errors
|   | | | `-BinaryOperator 0x13a142fc8 <col:7, col:58> 'char **' contains-errors '='
|   | | |   |-DeclRefExpr 0x13a1428b0 <col:7> 'char **' contains-errors lvalue Var 0x13a128548 'result' 'char **'
|   | | |   `-CStyleCastExpr 0x13a142fa0 <col:16, col:58> 'char **' <BitCast>
|   | | |     `-CallExpr 0x13a142f78 <col:25, col:58> 'void *'
|   | | |       |-ImplicitCastExpr 0x13a142f60 <col:25> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x13a142aa8 <col:25> 'void *(unsigned long)' Function 0x13a142908 'malloc' 'void *(unsigned long)'
|   | | |       `-BinaryOperator 0x13a142f40 <col:32, col:57> 'unsigned long' '*'
|   | | |         |-UnaryExprOrTypeTraitExpr 0x13a142eb0 <col:32, col:45> 'unsigned long' sizeof 'char *'
|   | | |         `-ImplicitCastExpr 0x13a142f28 <col:49, col:57> 'unsigned long' <IntegralCast>
|   | | |           `-ParenExpr 0x13a142f08 <col:49, col:57> 'int'
|   | | |             `-BinaryOperator 0x13a142ee8 <col:50, col:56> 'int' '+'
|   | | |               |-ImplicitCastExpr 0x13a142ed0 <col:50> 'int' <LValueToRValue>
|   | | |               | `-DeclRefExpr 0x13a142b00 <col:50> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   | | |               `-IntegerLiteral 0x13a142b20 <col:56> 'int' 2
|   | | `-RecoveryExpr 0x13a143008 <col:64> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13a1435e0 <col:70, line:27:2>
|   |   |-CallExpr 0x13a143328 <line:25:3, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x13a143310 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13a143238 <col:3> 'int (const char *, ...)' Function 0x13a143090 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x13a143368 <col:11> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13a143350 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13a1432a0 <col:11> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x13a1435b8 <line:26:3, col:9> 'void'
|   |     |-ImplicitCastExpr 0x13a1435a0 <col:3> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13a143528 <col:3> 'void (int) __attribute__((noreturn))' Function 0x13a1433b8 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x13a143548 <col:8> 'int' 0
|   |-BinaryOperator 0x13a143660 <line:30:2, col:10> 'int' '='
|   | |-DeclRefExpr 0x13a143620 <col:2> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   | `-IntegerLiteral 0x13a143640 <col:10> 'int' 0
|   |-WhileStmt 0x13a1457b8 <line:31:2, line:41:2>
|   | |-RecoveryExpr 0x13a1449b8 <line:31:9, col:37> '_Bool' contains-errors
|   | `-CompoundStmt 0x13a145770 <col:40, line:41:2>
|   |   |-BinaryOperator 0x13a144c78 <line:32:3, col:61> 'char *' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x13a144a48 <col:3, col:15> 'char *' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x13a144a18 <col:3> 'char **' contains-errors <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13a1449d8 <col:3> 'char **' contains-errors lvalue Var 0x13a128548 'result' 'char **'
|   |   | | `-ImplicitCastExpr 0x13a144a30 <col:10> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13a1449f8 <col:10> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   |   | `-CStyleCastExpr 0x13a144c50 <col:19, col:61> 'char *' <BitCast>
|   |   |   `-CallExpr 0x13a144c10 <col:28, col:61> 'void *'
|   |   |     |-ImplicitCastExpr 0x13a144bf8 <col:28> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13a144a68 <col:28> 'void *(unsigned long)' Function 0x13a142908 'malloc' 'void *(unsigned long)'
|   |   |     `-BinaryOperator 0x13a144bd8 <col:35, col:60> 'unsigned long' '*'
|   |   |       |-ImplicitCastExpr 0x13a144bc0 <col:35, col:45> 'unsigned long' <IntegralCast>
|   |   |       | `-ParenExpr 0x13a144b70 <col:35, col:45> 'long'
|   |   |       |   `-BinaryOperator 0x13a144b50 <col:36, col:44> 'long' '+'
|   |   |       |     |-BinaryOperator 0x13a144af8 <col:36, col:40> 'long' '-'
|   |   |       |     | |-ImplicitCastExpr 0x13a144ac8 <col:36> 'char *' <LValueToRValue>
|   |   |       |     | | `-DeclRefExpr 0x13a144a88 <col:36> 'char *' lvalue Var 0x13a128498 'q' 'char *'
|   |   |       |     | `-ImplicitCastExpr 0x13a144ae0 <col:40> 'char *' <LValueToRValue>
|   |   |       |     |   `-DeclRefExpr 0x13a144aa8 <col:40> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |   |       |     `-ImplicitCastExpr 0x13a144b38 <col:44> 'long' <IntegralCast>
|   |   |       |       `-IntegerLiteral 0x13a144b18 <col:44> 'int' 1
|   |   |       `-UnaryExprOrTypeTraitExpr 0x13a144ba0 <col:49, col:60> 'unsigned long' sizeof 'char'
|   |   |-IfStmt 0x13a144fa8 <line:33:3, line:36:3>
|   |   | |-BinaryOperator 0x13a144e20 <line:33:7, col:24> 'int' contains-errors '=='
|   |   | | |-ArraySubscriptExpr 0x13a144de0 <col:7, col:19> 'char *' contains-errors lvalue
|   |   | | | |-ImplicitCastExpr 0x13a144db0 <col:7> 'char **' contains-errors <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x13a144c98 <col:7> 'char **' contains-errors lvalue Var 0x13a128548 'result' 'char **'
|   |   | | | `-ImplicitCastExpr 0x13a144dc8 <col:14> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x13a144cb8 <col:14> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   |   | | `-RecoveryExpr 0x13a144e00 <col:24> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x13a144f88 <col:30, line:36:3>
|   |   |   |-CallExpr 0x13a144eb0 <line:34:4, col:17> 'int'
|   |   |   | |-ImplicitCastExpr 0x13a144e98 <col:4> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13a144e40 <col:4> 'int (const char *, ...)' Function 0x13a143090 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x13a144ef0 <col:12> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x13a144ed8 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x13a144e60 <col:12> 'char[4]' lvalue "STR"
|   |   |   `-CallExpr 0x13a144f60 <line:35:4, col:10> 'void'
|   |   |     |-ImplicitCastExpr 0x13a144f48 <col:4> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13a144f08 <col:4> 'void (int) __attribute__((noreturn))' Function 0x13a1433b8 'exit' 'void (int) __attribute__((noreturn))'
|   |   |     `-IntegerLiteral 0x13a144f28 <col:9> 'int' 0
|   |   |-CallExpr 0x13a145448 <line:37:3, col:34> 'char *' contains-errors
|   |   | |-ImplicitCastExpr 0x13a145430 <col:3> 'char *(*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13a145268 <col:3> 'char *(char *, const char *, unsigned long)' Function 0x13a145018 'strncpy' 'char *(char *, const char *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x13a145480 <col:11, col:23> 'char *' contains-errors <LValueToRValue>
|   |   | | `-ArraySubscriptExpr 0x13a1452f8 <col:11, col:23> 'char *' contains-errors lvalue
|   |   | |   |-ImplicitCastExpr 0x13a1452c8 <col:11> 'char **' contains-errors <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x13a145288 <col:11> 'char **' contains-errors lvalue Var 0x13a128548 'result' 'char **'
|   |   | |   `-ImplicitCastExpr 0x13a1452e0 <col:18> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x13a1452a8 <col:18> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   |   | |-ImplicitCastExpr 0x13a1454b0 <col:26> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x13a145498 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13a145318 <col:26> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x13a1454c8 <col:29, col:33> 'unsigned long' <IntegralCast>
|   |   |   `-BinaryOperator 0x13a1453a8 <col:29, col:33> 'long' '-'
|   |   |     |-ImplicitCastExpr 0x13a145378 <col:29> 'char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x13a145338 <col:29> 'char *' lvalue Var 0x13a128498 'q' 'char *'
|   |   |     `-ImplicitCastExpr 0x13a145390 <col:33> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x13a145358 <col:33> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |   |-BinaryOperator 0x13a145668 <line:38:3, col:26> 'char' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x13a145618 <col:3, col:22> 'char' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x13a145600 <col:3, col:15> 'char *' contains-errors <LValueToRValue>
|   |   | | | `-ArraySubscriptExpr 0x13a145550 <col:3, col:15> 'char *' contains-errors lvalue
|   |   | | |   |-ImplicitCastExpr 0x13a145520 <col:3> 'char **' contains-errors <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x13a1454e0 <col:3> 'char **' contains-errors lvalue Var 0x13a128548 'result' 'char **'
|   |   | | |   `-ImplicitCastExpr 0x13a145538 <col:10> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x13a145500 <col:10> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   |   | | `-BinaryOperator 0x13a1455e0 <col:17, col:21> 'long' '-'
|   |   | |   |-ImplicitCastExpr 0x13a1455b0 <col:17> 'char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x13a145570 <col:17> 'char *' lvalue Var 0x13a128498 'q' 'char *'
|   |   | |   `-ImplicitCastExpr 0x13a1455c8 <col:21> 'char *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x13a145590 <col:21> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x13a145650 <col:26> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x13a145638 <col:26> 'int' 0
|   |   |-BinaryOperator 0x13a1456e0 <line:39:3, col:7> 'char *' '='
|   |   | |-DeclRefExpr 0x13a145688 <col:3> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x13a1456c8 <col:7> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13a1456a8 <col:7> 'char *' lvalue Var 0x13a128498 'q' 'char *'
|   |   |-UnaryOperator 0x13a145720 <col:10, col:11> 'char *' postfix '++'
|   |   | `-DeclRefExpr 0x13a145700 <col:10> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |   `-UnaryOperator 0x13a145758 <line:40:3, col:8> 'int' postfix '++'
|   |     `-DeclRefExpr 0x13a145738 <col:3> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   |-IfStmt 0x13a1460e0 <line:42:2, line:46:2>
|   | |-BinaryOperator 0x13a145f58 <line:42:6, line:43:56> 'int' contains-errors '=='
|   | | |-ParenExpr 0x13a145f18 <line:42:6, line:43:51> 'char *' contains-errors
|   | | | `-BinaryOperator 0x13a145ef8 <line:42:7, line:43:50> 'char *' contains-errors '='
|   | | |   |-ArraySubscriptExpr 0x13a145d48 <line:42:7, col:19> 'char *' contains-errors lvalue
|   | | |   | |-ImplicitCastExpr 0x13a145d18 <col:7> 'char **' contains-errors <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x13a1457d8 <col:7> 'char **' contains-errors lvalue Var 0x13a128548 'result' 'char **'
|   | | |   | `-ImplicitCastExpr 0x13a145d30 <col:14> 'int' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x13a145800 <col:14> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   | | |   `-CStyleCastExpr 0x13a145ed0 <line:43:7, col:50> 'char *' <BitCast>
|   | | |     `-CallExpr 0x13a145ea8 <col:15, col:50> 'void *'
|   | | |       |-ImplicitCastExpr 0x13a145e90 <col:15> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x13a145870 <col:15> 'void *(unsigned long)' Function 0x13a142908 'malloc' 'void *(unsigned long)'
|   | | |       `-BinaryOperator 0x13a145e70 <col:22, col:49> 'unsigned long' '+'
|   | | |         |-BinaryOperator 0x13a145e38 <col:22, col:45> 'unsigned long' '*'
|   | | |         | |-UnaryExprOrTypeTraitExpr 0x13a145d90 <col:22, col:33> 'unsigned long' sizeof 'char'
|   | | |         | `-CallExpr 0x13a145de0 <col:37, col:45> 'unsigned long'
|   | | |         |   |-ImplicitCastExpr 0x13a145dc8 <col:37> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |         |   | `-DeclRefExpr 0x13a1458c0 <col:37> 'unsigned long (const char *)' Function 0x13a140d30 'strlen' 'unsigned long (const char *)'
|   | | |         |   `-ImplicitCastExpr 0x13a145e20 <col:44> 'const char *' <NoOp>
|   | | |         |     `-ImplicitCastExpr 0x13a145e08 <col:44> 'char *' <LValueToRValue>
|   | | |         |       `-DeclRefExpr 0x13a1458e0 <col:44> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   | | |         `-ImplicitCastExpr 0x13a145e58 <col:49> 'unsigned long' <IntegralCast>
|   | | |           `-IntegerLiteral 0x13a1459a8 <col:49> 'int' 1
|   | | `-RecoveryExpr 0x13a145f38 <col:56> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13a1460c0 <col:62, line:46:2>
|   |   |-CallExpr 0x13a145fe8 <line:44:3, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x13a145fd0 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13a145f78 <col:3> 'int (const char *, ...)' Function 0x13a143090 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x13a146028 <col:11> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13a146010 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13a145f98 <col:11> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x13a146098 <line:45:3, col:9> 'void'
|   |     |-ImplicitCastExpr 0x13a146080 <col:3> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13a146040 <col:3> 'void (int) __attribute__((noreturn))' Function 0x13a1433b8 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x13a146060 <col:8> 'int' 0
|   |-CallExpr 0x13a146468 <line:47:2, col:24> 'char *' contains-errors
|   | |-ImplicitCastExpr 0x13a146450 <col:2> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13a146320 <col:2> 'char *(char *, const char *)' Function 0x13a146140 'strcpy' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x13a146498 <col:9, col:21> 'char *' contains-errors <LValueToRValue>
|   | | `-ArraySubscriptExpr 0x13a1463b0 <col:9, col:21> 'char *' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x13a146380 <col:9> 'char **' contains-errors <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13a146340 <col:9> 'char **' contains-errors lvalue Var 0x13a128548 'result' 'char **'
|   | |   `-ImplicitCastExpr 0x13a146398 <col:16> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13a146360 <col:16> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   | `-ImplicitCastExpr 0x13a1464c8 <col:23> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13a1464b0 <col:23> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13a1463d0 <col:23> 'char *' lvalue Var 0x13a128418 'p' 'char *'
|   |-BinaryOperator 0x13a146638 <line:48:2, col:20> 'char *' contains-errors '='
|   | |-ArraySubscriptExpr 0x13a1465f8 <col:2, col:16> 'char *' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x13a1465e0 <col:2> 'char **' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x13a1464e0 <col:2> 'char **' contains-errors lvalue Var 0x13a128548 'result' 'char **'
|   | | `-UnaryOperator 0x13a146520 <col:9, col:11> 'int' prefix '++'
|   | |   `-DeclRefExpr 0x13a146500 <col:11> 'int' lvalue Var 0x13a1282e8 'count' 'int'
|   | `-RecoveryExpr 0x13a146618 <col:20> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x13a146690 <line:55:2, col:9>
|     `-ImplicitCastExpr 0x13a146678 <col:9> 'char **' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x13a146658 <col:9> 'char **' contains-errors lvalue Var 0x13a128548 'result' 'char **'
|-FunctionDecl 0x13a140d30 <line:10:11> col:11 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13a140e30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13a140dd8 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x13a142908 <line:24:25> col:25 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x13a142a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x13a1429b0 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x13a142a78 <col:25> Implicit 1
|-FunctionDecl 0x13a143090 <line:25:3> col:3 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x13a143190 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x13a143138 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x13a143200 <col:3> Implicit printf 1 2
|-FunctionDecl 0x13a1433b8 <line:26:3> col:3 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x13a1434b8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13a143460 <<invalid sloc>> Implicit 869
|-FunctionDecl 0x13a1436e0 <line:31:12> col:12 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x13a144800 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13a144868 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13a143788 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x13a145018 <line:37:3> col:3 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x13a145118 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13a145180 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13a1451e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13a1450c0 <<invalid sloc>> Implicit 886
`-FunctionDecl 0x13a146140 <line:47:2> col:2 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x13a146240 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x13a1462a8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13a1461e8 <<invalid sloc>> Implicit 885
