TranslationUnitDecl 0x150055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150055bd0 '__int128'
|-TypedefDecl 0x150056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150055bf0 'unsigned __int128'
|-TypedefDecl 0x150126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x150126a00 'struct __NSConstantString_tag'
|   `-Record 0x150056580 '__NSConstantString_tag'
|-TypedefDecl 0x150126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150055d90 '__SVInt8_t'
|-TypedefDecl 0x150126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150055db0 '__SVInt16_t'
|-TypedefDecl 0x150126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150055dd0 '__SVInt32_t'
|-TypedefDecl 0x150126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150055df0 '__SVInt64_t'
|-TypedefDecl 0x150126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150055e10 '__SVUint8_t'
|-TypedefDecl 0x150126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150055e30 '__SVUint16_t'
|-TypedefDecl 0x150126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150055e50 '__SVUint32_t'
|-TypedefDecl 0x150126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150055e70 '__SVUint64_t'
|-TypedefDecl 0x150126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150055e90 '__SVFloat16_t'
|-TypedefDecl 0x150127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1501270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150055ed0 '__SVFloat64_t'
|-TypedefDecl 0x150127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x150127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1501271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x150127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1501272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x150127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x150127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1501273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x150127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1501274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1501275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1501276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x150127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1500560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x150127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1500560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1501277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x150127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1501278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x150127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x150127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1500561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1501282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1500561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1501283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150056230 '__clang_svint16x4_t'
|-TypedefDecl 0x150128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150056250 '__clang_svint32x4_t'
|-TypedefDecl 0x150128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1501284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x150128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1501285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1500562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x150128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1500562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x150128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1501286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1501287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150056390 '__SVBool_t'
|-TypedefDecl 0x150128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1501288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1500563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x150128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1500563f0 '__SVCount_t'
|-TypedefDecl 0x1501289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1501289b0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-TypedefDecl 0x150128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1501289b0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
`-FunctionDecl 0x150128e78 <dataset_diviso_filec/func2695_nonvuln.c:1:1, line:67:1> line:1:1 evdns_callback 'int (int, char, int, int, void *, void *)'
  |-ParmVarDecl 0x150128ad8 <col:16, col:20> col:20 used result 'int'
  |-ParmVarDecl 0x150128b50 <col:28, col:33> col:33 used type 'char'
  |-ParmVarDecl 0x150128bd0 <col:39, col:43> col:43 used count 'int'
  |-ParmVarDecl 0x150128c50 <col:50, col:54> col:54 used ttl 'int'
  |-ParmVarDecl 0x150128cd0 <col:59, col:65> col:65 used addresses 'void *'
  |-ParmVarDecl 0x150128d50 <line:2:16, col:22> col:22 used arg 'void *'
  `-CompoundStmt 0x14800bfc8 <line:3:1, line:67:1>
    |-DeclStmt 0x150129068 <line:4:3, col:29>
    | `-VarDecl 0x150128fb0 <col:3, col:26> col:9 used string_address 'char *' cinit
    |   `-ImplicitCastExpr 0x150129050 <col:26> 'char *' <BitCast>
    |     `-ImplicitCastExpr 0x150129038 <col:26> 'void *' <LValueToRValue>
    |       `-DeclRefExpr 0x150129018 <col:26> 'void *' lvalue ParmVar 0x150128d50 'arg' 'void *'
    |-DeclStmt 0x150129150 <line:6:3, col:44>
    | `-VarDecl 0x1501290b0 <col:3, col:16> col:7 used status 'int' cinit
    |   `-RecoveryExpr 0x150129130 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x150141420 <line:8:3, col:30>
    | `-VarDecl 0x150129180 <col:3, col:26> col:15 used hostname 'const char *' cinit
    |   `-RecoveryExpr 0x150141400 <col:26> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1501414d8 <line:9:3, col:25>
    | `-VarDecl 0x150141450 <col:3, col:24> col:7 used was_wildcarded 'int' cinit
    |   `-IntegerLiteral 0x1501414b8 <col:24> 'int' 0
    |-IfStmt 0x14800b9a8 <line:11:3, line:57:3> has_else
    | |-BinaryOperator 0x150141568 <line:11:7, col:17> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x1501414f0 <col:7> 'int' lvalue ParmVar 0x150128ad8 'result' 'int'
    | | `-RecoveryExpr 0x150141548 <col:17> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x14800b7e8 <col:31, line:54:3>
    | | `-IfStmt 0x14800b7b8 <line:12:5, line:53:5> has_else
    | |   |-BinaryOperator 0x150141660 <line:12:9, col:31> 'int' contains-errors '&&'
    | |   | |-BinaryOperator 0x150141640 <col:9, col:17> 'int' contains-errors '=='
    | |   | | |-DeclRefExpr 0x150141588 <col:9> 'char' lvalue ParmVar 0x150128b50 'type' 'char'
    | |   | | `-RecoveryExpr 0x150141620 <col:17> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x1501415e0 <col:31> 'int' lvalue ParmVar 0x150128bd0 'count' 'int'
    | |   |-CompoundStmt 0x148009e28 <col:38, line:37:5>
    | |   | |-DeclStmt 0x150141750 <line:13:7, col:43>
    | |   | | `-VarDecl 0x1501416e8 <col:7, col:12> col:12 invalid answer_buf 'char'
    | |   | |-DeclStmt 0x150141d08 <line:14:7, col:24>
    | |   | | |-RecordDecl 0x150141768 <col:7, col:14> col:14 struct in_addr
    | |   | | `-VarDecl 0x150141868 <col:7, col:22> col:22 referenced invalid in 'struct in_addr'
    | |   | |-DeclStmt 0x150141da0 <line:15:7, col:28>
    | |   | | `-VarDecl 0x150141d38 <col:7, col:13> col:13 used escaped_address 'char *'
    | |   | |-BinaryOperator 0x1501420a0 <line:19:7, col:16> 'int' contains-errors '='
    | |   | | |-DeclRefExpr 0x150142028 <col:7> 'int' contains-errors lvalue Var 0x1501290b0 'status' 'int'
    | |   | | `-RecoveryExpr 0x150142080 <col:16> '<dependent type>' contains-errors lvalue
    | |   | |-CallExpr 0x150142278 <line:20:7, col:56> '<dependent type>' contains-errors
    | |   | | |-DeclRefExpr 0x1501421a0 <col:7> 'int ()' Function 0x1501420e8 'tor_inet_ntoa' 'int ()'
    | |   | | |-UnaryOperator 0x1501421e0 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | | | `-RecoveryExpr 0x1501421c0 <col:22> '<dependent type>' contains-errors lvalue
    | |   | | |-RecoveryExpr 0x1501421f8 <col:26> '<dependent type>' contains-errors lvalue
    | |   | | `-UnaryExprOrTypeTraitExpr 0x150142258 <col:38, col:55> 'unsigned long' contains-errors sizeof
    | |   | |   `-ParenExpr 0x150142238 <col:44, col:55> '<dependent type>' contains-errors lvalue
    | |   | |     `-RecoveryExpr 0x150142218 <col:45> '<dependent type>' contains-errors lvalue
    | |   | |-BinaryOperator 0x1480094a0 <line:21:7, col:51> 'char *' '='
    | |   | | |-DeclRefExpr 0x1501422b0 <col:7> 'char *' lvalue Var 0x150141d38 'escaped_address' 'char *'
    | |   | | `-ImplicitCastExpr 0x148009488 <col:25, col:51> 'char *' <IntegralToPointer>
    | |   | |   `-CallExpr 0x148009448 <col:25, col:51> 'int'
    | |   | |     |-ImplicitCastExpr 0x148009430 <col:25> 'int (*)()' <FunctionToPointerDecay>
    | |   | |     | `-DeclRefExpr 0x1501423b0 <col:25> 'int ()' Function 0x1501422f8 'esc_for_log' 'int ()'
    | |   | |     `-ImplicitCastExpr 0x148009470 <col:37> 'char *' <LValueToRValue>
    | |   | |       `-DeclRefExpr 0x1501423d0 <col:37> 'char *' lvalue Var 0x150128fb0 'string_address' 'char *'
    | |   | |-IfStmt 0x148009c80 <line:23:7, line:35:7> has_else
    | |   | | |-CallExpr 0x1480095e0 <line:23:11, col:42> '<dependent type>' contains-errors
    | |   | | | |-DeclRefExpr 0x1480095a0 <col:11> 'int ()' Function 0x1480094e8 'answer_is_wildcarded' 'int ()'
    | |   | | | `-RecoveryExpr 0x1480095c0 <col:32> '<dependent type>' contains-errors lvalue
    | |   | | |-CompoundStmt 0x148009ad8 <col:45, line:31:7>
    | |   | | | `-BinaryOperator 0x148009a78 <line:28:9, col:26> 'int' '='
    | |   | | |   |-DeclRefExpr 0x148009a38 <col:9> 'int' lvalue Var 0x150141450 'was_wildcarded' 'int'
    | |   | | |   `-IntegerLiteral 0x148009a58 <col:26> 'int' 1
    | |   | | `-CompoundStmt 0x148009c70 <line:31:14, line:35:7>
    | |   | `-CallExpr 0x148009de8 <line:36:7, col:31> 'int'
    | |   |   |-ImplicitCastExpr 0x148009dd0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   |   | `-DeclRefExpr 0x148009d90 <col:7> 'int ()' Function 0x148009cd8 'tor_free' 'int ()'
    | |   |   `-ImplicitCastExpr 0x148009e10 <col:16> 'char *' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x148009db0 <col:16> 'char *' lvalue Var 0x150141d38 'escaped_address' 'char *'
    | |   `-IfStmt 0x14800b788 <line:37:12, line:53:5> has_else
    | |     |-RecoveryExpr 0x148009eb8 <line:37:16, col:35> '_Bool' contains-errors
    | |     |-CompoundStmt 0x14800b440 <col:42, line:47:5>
    | |     | |-DeclStmt 0x148009f58 <line:38:7, col:28>
    | |     | | `-VarDecl 0x148009ef0 <col:7, col:13> col:13 used escaped_address 'char *'
    | |     | |-BinaryOperator 0x14800a0e8 <line:40:7, col:39> 'const char *' contains-errors '='
    | |     | | |-DeclRefExpr 0x148009f90 <col:7> 'const char *' contains-errors lvalue Var 0x150129180 'hostname' 'const char *'
    | |     | | `-ImplicitCastExpr 0x14800a0d0 <col:18, col:39> 'const char *' <NoOp>
    | |     | |   `-ImplicitCastExpr 0x14800a0b8 <col:18, col:39> 'char *' <LValueToRValue>
    | |     | |     `-ArraySubscriptExpr 0x14800a098 <col:18, col:39> 'char *' lvalue
    | |     | |       |-ParenExpr 0x14800a058 <col:18, col:36> 'char **'
    | |     | |       | `-CStyleCastExpr 0x14800a030 <col:19, col:27> 'char **' <BitCast>
    | |     | |       |   `-ImplicitCastExpr 0x14800a018 <col:27> 'void *' <LValueToRValue> part_of_explicit_cast
    | |     | |       |     `-DeclRefExpr 0x148009fb0 <col:27> 'void *' lvalue ParmVar 0x150128cd0 'addresses' 'void *'
    | |     | |       `-IntegerLiteral 0x14800a078 <col:38> 'int' 0
    | |     | |-BinaryOperator 0x14800a1f8 <line:42:7, col:51> 'char *' '='
    | |     | | |-DeclRefExpr 0x14800a128 <col:7> 'char *' lvalue Var 0x148009ef0 'escaped_address' 'char *'
    | |     | | `-ImplicitCastExpr 0x14800a1e0 <col:25, col:51> 'char *' <IntegralToPointer>
    | |     | |   `-CallExpr 0x14800a1a0 <col:25, col:51> 'int'
    | |     | |     |-ImplicitCastExpr 0x14800a188 <col:25> 'int (*)()' <FunctionToPointerDecay>
    | |     | |     | `-DeclRefExpr 0x14800a148 <col:25> 'int ()' Function 0x1501422f8 'esc_for_log' 'int ()'
    | |     | |     `-ImplicitCastExpr 0x14800a1c8 <col:37> 'char *' <LValueToRValue>
    | |     | |       `-DeclRefExpr 0x14800a168 <col:37> 'char *' lvalue Var 0x150128fb0 'string_address' 'char *'
    | |     | `-CallExpr 0x14800b400 <line:46:7, col:31> 'int'
    | |     |   |-ImplicitCastExpr 0x14800a3c8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |     |   | `-DeclRefExpr 0x14800a388 <col:7> 'int ()' Function 0x148009cd8 'tor_free' 'int ()'
    | |     |   `-ImplicitCastExpr 0x14800b428 <col:16> 'char *' <LValueToRValue>
    | |     |     `-DeclRefExpr 0x14800a3a8 <col:16> 'char *' lvalue Var 0x148009ef0 'escaped_address' 'char *'
    | |     `-IfStmt 0x14800b758 <line:47:12, line:53:5> has_else
    | |       |-ImplicitCastExpr 0x14800b490 <line:47:16> 'int' <LValueToRValue>
    | |       | `-DeclRefExpr 0x14800b470 <col:16> 'int' lvalue ParmVar 0x150128bd0 'count' 'int'
    | |       |-CompoundStmt 0x14800b660 <col:23, line:50:5>
    | |       `-CompoundStmt 0x14800b748 <col:12, line:53:5>
    | `-CompoundStmt 0x14800b998 <line:54:10, line:57:3>
    |-IfStmt 0x14800bd50 <line:58:3, line:63:3>
    | |-ImplicitCastExpr 0x14800b9f8 <line:58:7> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14800b9d8 <col:7> 'int' lvalue Var 0x150141450 'was_wildcarded' 'int'
    | `-CompoundStmt 0x14800bd38 <col:23, line:63:3>
    |   `-IfStmt 0x14800bd18 <line:59:5, line:62:5>
    |     |-CallExpr 0x14800bb48 <line:59:9, col:39> 'int'
    |     | |-ImplicitCastExpr 0x14800bb30 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x14800baf0 <col:9> 'int ()' Function 0x14800ba38 'is_test_address' 'int ()'
    |     | `-ImplicitCastExpr 0x14800bb70 <col:25> 'char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x14800bb10 <col:25> 'char *' lvalue Var 0x150128fb0 'string_address' 'char *'
    |     `-CompoundStmt 0x14800bd00 <col:42, line:62:5>
    |       `-CallExpr 0x14800bcc0 <line:61:7, col:49> 'int'
    |         |-ImplicitCastExpr 0x14800bca8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x14800bc68 <col:7> 'int ()' Function 0x14800bbb0 'add_wildcarded_test_address' 'int ()'
    |         `-ImplicitCastExpr 0x14800bce8 <col:35> 'char *' <LValueToRValue>
    |           `-DeclRefExpr 0x14800bc88 <col:35> 'char *' lvalue Var 0x150128fb0 'string_address' 'char *'
    `-CallExpr 0x14800bf88 <line:66:3, col:26> 'int'
      |-ImplicitCastExpr 0x14800bf70 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x14800bf30 <col:3> 'int ()' Function 0x148009cd8 'tor_free' 'int ()'
      `-ImplicitCastExpr 0x14800bfb0 <col:12> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x14800bf50 <col:12> 'char *' lvalue Var 0x150128fb0 'string_address' 'char *'
