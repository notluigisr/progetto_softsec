TranslationUnitDecl 0x124855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1248564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124855bd0 '__int128'
|-TypedefDecl 0x124856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124855bf0 'unsigned __int128'
|-TypedefDecl 0x12500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12500bc00 'struct __NSConstantString_tag'
|   `-Record 0x124856580 '__NSConstantString_tag'
|-TypedefDecl 0x12500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124855d90 '__SVInt8_t'
|-TypedefDecl 0x12500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124855db0 '__SVInt16_t'
|-TypedefDecl 0x12500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124855dd0 '__SVInt32_t'
|-TypedefDecl 0x12500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124855df0 '__SVInt64_t'
|-TypedefDecl 0x12500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124855e10 '__SVUint8_t'
|-TypedefDecl 0x12500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124855e30 '__SVUint16_t'
|-TypedefDecl 0x12500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124855e50 '__SVUint32_t'
|-TypedefDecl 0x12500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124855e70 '__SVUint64_t'
|-TypedefDecl 0x12500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124855e90 '__SVFloat16_t'
|-TypedefDecl 0x12500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1248560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1248560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1248560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1248561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1248561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1248561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1248562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1248562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1248562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124856390 '__SVBool_t'
|-TypedefDecl 0x12500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1248563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1248563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1248563f0 '__SVCount_t'
|-TypedefDecl 0x12500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12500dbb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-TypedefDecl 0x12500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12500dbb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
`-FunctionDecl 0x12500ddf8 <dataset_diviso_filec/func15508_nonvuln.c:1:1, line:27:1> line:1:1 invalid next_int 'int (int *)'
  |-ParmVarDecl 0x12500dd28 <col:11, col:17> col:17 invalid fstream 'int *'
  `-CompoundStmt 0x125028020 <line:2:1, line:27:1>
    |-DeclStmt 0x12500df28 <line:3:2, col:8>
    | `-VarDecl 0x12500dec0 <col:2, col:6> col:6 used ch 'int'
    |-DeclStmt 0x12500dfe0 <line:4:2, col:15>
    | `-VarDecl 0x12500df58 <col:2, col:14> col:6 used value 'int' cinit
    |   `-IntegerLiteral 0x12500dfc0 <col:14> 'int' 0
    |-DeclStmt 0x12500e098 <line:5:2, col:16>
    | `-VarDecl 0x12500e010 <col:2, col:15> col:6 used gotone 'int' cinit
    |   `-IntegerLiteral 0x12500e078 <col:15> 'int' 0
    |-DeclStmt 0x12500e150 <line:6:2, col:14>
    | `-VarDecl 0x12500e0c8 <col:2, col:13> col:6 used done 'int' cinit
    |   `-IntegerLiteral 0x12500e130 <col:13> 'int' 0
    |-WhileStmt 0x125027fb8 <line:10:2, line:25:2>
    | |-UnaryOperator 0x12500e1a0 <line:10:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12500e188 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12500e168 <col:10> 'int' lvalue Var 0x12500e0c8 'done' 'int'
    | `-CompoundStmt 0x125027f98 <col:16, line:25:2>
    |   |-BinaryOperator 0x12500e398 <line:11:3, col:21> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12500e1b8 <col:3> 'int' lvalue Var 0x12500dec0 'ch' 'int'
    |   | `-CallExpr 0x12500e370 <col:8, col:21> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12500e330 <col:8> 'int ()' Function 0x12500e278 'getc' 'int ()'
    |   |   `-RecoveryExpr 0x12500e350 <col:14> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x125027f68 <line:12:3, line:24:3> has_else
    |     |-BinaryOperator 0x125027840 <line:12:7, col:13> 'int' contains-errors '=='
    |     | |-DeclRefExpr 0x12500e3b8 <col:7> 'int' lvalue Var 0x12500dec0 'ch' 'int'
    |     | `-RecoveryExpr 0x125027820 <col:13> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x125027910 <col:18, line:15:3>
    |     | |-BinaryOperator 0x1250278b8 <line:13:4, col:13> 'int' '='
    |     | | |-DeclRefExpr 0x125027860 <col:4> 'int' lvalue Var 0x12500df58 'value' 'int'
    |     | | `-UnaryOperator 0x1250278a0 <col:12, col:13> 'int' prefix '-'
    |     | |   `-IntegerLiteral 0x125027880 <col:13> 'int' 1
    |     | `-UnaryOperator 0x1250278f8 <line:14:4, col:8> 'int' postfix '++'
    |     |   `-DeclRefExpr 0x1250278d8 <col:4> 'int' lvalue Var 0x12500e0c8 'done' 'int'
    |     `-CompoundStmt 0x125027f48 <line:15:10, line:24:3>
    |       |-CompoundAssignOperator 0x125027970 <line:17:4, col:10> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x125027930 <col:4> 'int' lvalue Var 0x12500dec0 'ch' 'int'
    |       | `-IntegerLiteral 0x125027950 <col:10> 'int' 255
    |       `-IfStmt 0x125027f18 <line:18:4, line:23:4> has_else
    |         |-CallExpr 0x125027b08 <line:18:8, col:28> 'int'
    |         | |-ImplicitCastExpr 0x125027af0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x125027a80 <col:8> 'int ()' Function 0x1250279c8 'g_ascii_isxdigit' 'int ()'
    |         | `-ImplicitCastExpr 0x125027b30 <col:26> 'int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x125027aa0 <col:26> 'int' lvalue Var 0x12500dec0 'ch' 'int'
    |         |-CompoundStmt 0x125027df0 <col:31, line:21:4>
    |         | |-BinaryOperator 0x125027d98 <line:19:5, col:52> 'int' '='
    |         | | |-DeclRefExpr 0x125027b48 <col:5> 'int' lvalue Var 0x12500df58 'value' 'int'
    |         | | `-BinaryOperator 0x125027d78 <col:13, col:52> 'int' '+'
    |         | |   |-ParenExpr 0x125027be0 <col:13, col:24> 'int'
    |         | |   | `-BinaryOperator 0x125027bc0 <col:14, col:23> 'int' '<<'
    |         | |   |   |-ImplicitCastExpr 0x125027ba8 <col:14> 'int' <LValueToRValue>
    |         | |   |   | `-DeclRefExpr 0x125027b68 <col:14> 'int' lvalue Var 0x12500df58 'value' 'int'
    |         | |   |   `-IntegerLiteral 0x125027b88 <col:23> 'int' 4
    |         | |   `-CallExpr 0x125027d38 <col:28, col:52> 'int'
    |         | |     |-ImplicitCastExpr 0x125027d20 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |         | |     | `-DeclRefExpr 0x125027ce0 <col:28> 'int ()' Function 0x125027c28 'g_ascii_xdigit_value' 'int ()'
    |         | |     `-ImplicitCastExpr 0x125027d60 <col:50> 'int' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x125027d00 <col:50> 'int' lvalue Var 0x12500dec0 'ch' 'int'
    |         | `-UnaryOperator 0x125027dd8 <line:20:5, col:11> 'int' postfix '++'
    |         |   `-DeclRefExpr 0x125027db8 <col:5> 'int' lvalue Var 0x12500e010 'gotone' 'int'
    |         `-IfStmt 0x125027ef8 <line:21:11, line:23:4>
    |           |-RecoveryExpr 0x125027e88 <line:21:15, col:38> '_Bool' contains-errors
    |           `-CompoundStmt 0x125027ee0 <col:46, line:23:4>
    |             `-UnaryOperator 0x125027ec8 <line:22:5, col:9> 'int' postfix '++'
    |               `-DeclRefExpr 0x125027ea8 <col:5> 'int' lvalue Var 0x12500e0c8 'done' 'int'
    `-ReturnStmt 0x125028010 <line:26:2, col:9>
      `-ImplicitCastExpr 0x125027ff8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x125027fd8 <col:9> 'int' lvalue Var 0x12500df58 'value' 'int'
