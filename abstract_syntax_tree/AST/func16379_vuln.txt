TranslationUnitDecl 0x12f842008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f842eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f8425d0 '__int128'
|-TypedefDecl 0x12f842f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f8425f0 'unsigned __int128'
|-TypedefDecl 0x12e014430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e014200 'struct __NSConstantString_tag'
|   `-Record 0x12f842f80 '__NSConstantString_tag'
|-TypedefDecl 0x12e014498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f842790 '__SVInt8_t'
|-TypedefDecl 0x12e014500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f8427b0 '__SVInt16_t'
|-TypedefDecl 0x12e014568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f8427d0 '__SVInt32_t'
|-TypedefDecl 0x12e0145d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f8427f0 '__SVInt64_t'
|-TypedefDecl 0x12e014638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f842810 '__SVUint8_t'
|-TypedefDecl 0x12e0146a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f842830 '__SVUint16_t'
|-TypedefDecl 0x12e014708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f842850 '__SVUint32_t'
|-TypedefDecl 0x12e014770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f842870 '__SVUint64_t'
|-TypedefDecl 0x12e0147d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f842890 '__SVFloat16_t'
|-TypedefDecl 0x12e014840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f8428b0 '__SVFloat32_t'
|-TypedefDecl 0x12e0148a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f8428d0 '__SVFloat64_t'
|-TypedefDecl 0x12e014910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f8428f0 '__SVBfloat16_t'
|-TypedefDecl 0x12e014978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f842910 '__clang_svint8x2_t'
|-TypedefDecl 0x12e0149e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f842930 '__clang_svint16x2_t'
|-TypedefDecl 0x12e014a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f842950 '__clang_svint32x2_t'
|-TypedefDecl 0x12e014ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f842970 '__clang_svint64x2_t'
|-TypedefDecl 0x12e014b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f842990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e014b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f8429b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e014be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f8429d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e014c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f8429f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e014cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f842a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e014d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f842a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e014d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f842a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e014df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f842a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e014e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f842a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12e014ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f842ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e014f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f842ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e014f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f842af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e014ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f842b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e015060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f842b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e0150c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f842b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e015130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f842b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e015198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f842b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e01d600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f842bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e01d668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f842bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e01d6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f842bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e01d738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f842c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12e01d7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f842c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12e01d808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f842c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12e01d870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f842c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12e01d8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f842c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e01d940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f842cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e01d9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f842cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e01da10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f842cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e01da78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f842d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e01dae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f842d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e01db48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f842d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e01dbb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f842d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e01dc18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f842d90 '__SVBool_t'
|-TypedefDecl 0x12e01dc80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f842db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e01dce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f842dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e01dd50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f842df0 '__SVCount_t'
|-TypedefDecl 0x12e01ddf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e01ddb0 'char *'
|   `-BuiltinType 0x12f8420b0 'char'
|-TypedefDecl 0x12e01de68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e01ddb0 'char *'
|   `-BuiltinType 0x12f8420b0 'char'
|-RecordDecl 0x12e01dfd8 <dataset_diviso_filec/func16379_vuln.c:3:41, col:48> col:48 struct dump_dir
|-FunctionDecl 0x12e03a598 <line:1:1, line:42:1> line:1:5 invalid for_each_problem_in_dir 'int (const char *, int, int (*)(struct dump_dir *, void *), void *)'
| |-ParmVarDecl 0x12e01ded8 <col:29, col:41> col:41 used path 'const char *'
| |-ParmVarDecl 0x12e01df70 <line:2:25, col:31> col:31 invalid caller_uid 'int'
| |-ParmVarDecl 0x12e03a3c8 <line:3:25, col:71> col:31 used callback 'int (*)(struct dump_dir *, void *)'
| |-ParmVarDecl 0x12e03a448 <line:4:25, col:31> col:31 used arg 'void *'
| `-CompoundStmt 0x12f906320 <line:5:1, line:42:1>
|   |-IfStmt 0x12e03a978 <line:7:5, line:12:5>
|   | |-UnaryOperator 0x12e03a918 <line:7:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12e03a900 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12e03a8e0 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12e03a960 <line:8:5, line:12:5>
|   |   `-ReturnStmt 0x12e03a950 <line:11:9, col:16>
|   |     `-IntegerLiteral 0x12e03a930 <col:16> 'int' 0
|   |-DeclStmt 0x12e03aa38 <line:14:5, col:16>
|   | `-VarDecl 0x12e03a9b0 <col:5, col:15> col:9 used brk 'int' cinit
|   |   `-IntegerLiteral 0x12e03aa18 <col:15> 'int' 0
|   |-DeclStmt 0x12e03ac38 <line:15:5, col:24>
|   | |-RecordDecl 0x12e03aa50 <col:5, col:12> col:12 struct dirent
|   | `-VarDecl 0x12e03abb8 <col:5, col:20> col:20 used dent 'struct dirent *'
|   |-WhileStmt 0x12e03c928 <line:16:5, line:38:5>
|   | |-RecoveryExpr 0x12e03ade8 <line:16:12, col:36> '_Bool' contains-errors
|   | `-CompoundStmt 0x12e03c8f0 <line:17:5, line:38:5>
|   |   |-IfStmt 0x12e03af98 <line:18:9, line:19:13>
|   |   | |-CallExpr 0x12e03af68 <line:18:13, col:39> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x12e03aee8 <col:13> 'int ()' Function 0x12e03ae30 'dot_or_dotdot' 'int ()'
|   |   | | `-RecoveryExpr 0x12e03af40 <col:27, col:33> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x12e03af08 <col:27> 'struct dirent *' lvalue Var 0x12e03abb8 'dent' 'struct dirent *'
|   |   | `-ContinueStmt 0x12e03af90 <line:19:13>
|   |   |-DeclStmt 0x12e03b1e8 <line:21:9, col:63>
|   |   | `-VarDecl 0x12e03afd0 <col:9, col:62> col:15 used full_name 'char *' cinit
|   |   |   `-CallExpr 0x12e03b1b8 <col:27, col:62> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12e03b118 <col:27> 'int ()' Function 0x12e03b060 'concat_path_file' 'int ()'
|   |   |     |-DeclRefExpr 0x12e03b138 <col:44> 'const char *' lvalue ParmVar 0x12e01ded8 'path' 'const char *'
|   |   |     `-RecoveryExpr 0x12e03b190 <col:50, col:56> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x12e03b158 <col:50> 'struct dirent *' lvalue Var 0x12e03abb8 'dent' 'struct dirent *'
|   |   |-IfStmt 0x12e03c5d0 <line:22:9, line:34:9>
|   |   | |-BinaryOperator 0x12e03bbe8 <line:22:13, col:81> 'int' contains-errors '||'
|   |   | | |-BinaryOperator 0x12e03ba58 <col:13, col:28> 'int' contains-errors '=='
|   |   | | | |-RecoveryExpr 0x12e03ba00 <col:13> '<dependent type>' contains-errors lvalue
|   |   | | | `-UnaryOperator 0x12e03ba40 <col:27, col:28> 'int' prefix '-'
|   |   | | |   `-IntegerLiteral 0x12e03ba20 <col:28> 'int' 1
|   |   | | `-CallExpr 0x12e03bbb8 <col:33, col:81> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x12e03bb58 <col:33> 'int ()' Function 0x12e03baa0 'dump_dir_accessible_by_uid' 'int ()'
|   |   | |   |-DeclRefExpr 0x12e03bb78 <col:60> 'char *' contains-errors lvalue Var 0x12e03afd0 'full_name' 'char *'
|   |   | |   `-RecoveryExpr 0x12e03bb98 <col:71> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x12e03c5a8 <line:23:9, line:34:9>
|   |   |   |-DeclStmt 0x12e03bcc0 <line:25:13, col:37>
|   |   |   | `-VarDecl 0x12e03bc20 <col:13, col:30> col:17 used sv_logmode 'int' cinit
|   |   |   |   `-RecoveryExpr 0x12e03bca0 <col:30> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclStmt 0x12e03c190 <line:27:13, col:123>
|   |   |   | |-RecordDecl 0x12e03bcf8 <col:13, col:20> col:20 struct dump_dir
|   |   |   | `-VarDecl 0x12e03be68 <col:13, col:122> col:30 used dd 'struct dump_dir *' cinit
|   |   |   |   `-CallExpr 0x12e03c148 <col:35, col:122> '<dependent type>' contains-errors
|   |   |   |     |-DeclRefExpr 0x12e03bfb0 <col:35> 'int ()' Function 0x12e03bef8 'dd_opendir' 'int ()'
|   |   |   |     |-DeclRefExpr 0x12e03bfd0 <col:46> 'char *' contains-errors lvalue Var 0x12e03afd0 'full_name' 'char *'
|   |   |   |     `-BinaryOperator 0x12e03c128 <col:57, col:101> '<dependent type>' contains-errors '|'
|   |   |   |       |-BinaryOperator 0x12e03c0e8 <col:57, col:76> '<dependent type>' contains-errors '|'
|   |   |   |       | |-RecoveryExpr 0x12e03c0a8 <col:57> '<dependent type>' contains-errors lvalue
|   |   |   |       | `-RecoveryExpr 0x12e03c0c8 <col:76> '<dependent type>' contains-errors lvalue
|   |   |   |       `-RecoveryExpr 0x12e03c108 <col:101> '<dependent type>' contains-errors lvalue
|   |   |   `-IfStmt 0x12e03c588 <line:29:13, line:33:13>
|   |   |     |-ImplicitCastExpr 0x12e03c1e8 <line:29:17> 'struct dump_dir *' contains-errors <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12e03c1c8 <col:17> 'struct dump_dir *' contains-errors lvalue Var 0x12e03be68 'dd' 'struct dump_dir *'
|   |   |     `-CompoundStmt 0x12e03c568 <line:30:13, line:33:13>
|   |   |       |-BinaryOperator 0x12e03c3d0 <line:31:17, col:54> 'int' contains-errors '='
|   |   |       | |-DeclRefExpr 0x12e03c200 <col:17> 'int' lvalue Var 0x12e03a9b0 'brk' 'int'
|   |   |       | `-ConditionalOperator 0x12e03c3a0 <col:23, col:54> 'int' contains-errors
|   |   |       |   |-ImplicitCastExpr 0x12e03c388 <col:23> 'int (*)(struct dump_dir *, void *)' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x12e03c220 <col:23> 'int (*)(struct dump_dir *, void *)' lvalue ParmVar 0x12e03a3c8 'callback' 'int (*)(struct dump_dir *, void *)'
|   |   |       |   |-CallExpr 0x12e03c2b8 <col:34, col:50> 'int' contains-errors
|   |   |       |   | |-ImplicitCastExpr 0x12e03c2a0 <col:34> 'int (*)(struct dump_dir *, void *)' <LValueToRValue>
|   |   |       |   | | `-DeclRefExpr 0x12e03c240 <col:34> 'int (*)(struct dump_dir *, void *)' lvalue ParmVar 0x12e03a3c8 'callback' 'int (*)(struct dump_dir *, void *)'
|   |   |       |   | |-ImplicitCastExpr 0x12e03c300 <col:43> 'struct dump_dir *' contains-errors <BitCast>
|   |   |       |   | | `-ImplicitCastExpr 0x12e03c2e8 <col:43> 'struct dump_dir *' contains-errors <LValueToRValue>
|   |   |       |   | |   `-DeclRefExpr 0x12e03c260 <col:43> 'struct dump_dir *' contains-errors lvalue Var 0x12e03be68 'dd' 'struct dump_dir *'
|   |   |       |   | `-ImplicitCastExpr 0x12e03c350 <col:47> 'void *' <LValueToRValue>
|   |   |       |   |   `-DeclRefExpr 0x12e03c280 <col:47> 'void *' lvalue ParmVar 0x12e03a448 'arg' 'void *'
|   |   |       |   `-IntegerLiteral 0x12e03c368 <col:54> 'int' 0
|   |   |       `-CallExpr 0x12e03c528 <line:32:17, col:28> 'int' contains-errors
|   |   |         |-ImplicitCastExpr 0x12e03c510 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |         | `-DeclRefExpr 0x12e03c4d0 <col:17> 'int ()' Function 0x12e03c418 'dd_close' 'int ()'
|   |   |         `-ImplicitCastExpr 0x12e03c550 <col:26> 'struct dump_dir *' contains-errors <LValueToRValue>
|   |   |           `-DeclRefExpr 0x12e03c4f0 <col:26> 'struct dump_dir *' contains-errors lvalue Var 0x12e03be68 'dd' 'struct dump_dir *'
|   |   |-CallExpr 0x12e03c838 <line:35:9, col:23> 'void' contains-errors
|   |   | |-ImplicitCastExpr 0x12e03c820 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12e03c798 <col:9> 'void (void *)' Function 0x12e03c628 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x12e03c878 <col:14> 'void *' contains-errors <BitCast>
|   |   |   `-ImplicitCastExpr 0x12e03c860 <col:14> 'char *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12e03c7b8 <col:14> 'char *' contains-errors lvalue Var 0x12e03afd0 'full_name' 'char *'
|   |   `-IfStmt 0x12e03c8d0 <line:36:9, line:37:13>
|   |     |-ImplicitCastExpr 0x12e03c8b0 <line:36:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12e03c890 <col:13> 'int' lvalue Var 0x12e03a9b0 'brk' 'int'
|   |     `-BreakStmt 0x12e03c8c8 <line:37:13>
|   `-ReturnStmt 0x12f906310 <line:41:5, col:12>
|     `-ImplicitCastExpr 0x12f9062f8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12f9062d8 <col:12> 'int' lvalue Var 0x12e03a9b0 'brk' 'int'
`-FunctionDecl 0x12e03c628 <line:35:9> col:9 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12e03c728 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12e03c6d0 <<invalid sloc>> Implicit 873
