TranslationUnitDecl 0x144055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1440564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144055bd0 '__int128'
|-TypedefDecl 0x144056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144055bf0 'unsigned __int128'
|-TypedefDecl 0x144126630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x144126400 'struct __NSConstantString_tag'
|   `-Record 0x144056580 '__NSConstantString_tag'
|-TypedefDecl 0x144126698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144055d90 '__SVInt8_t'
|-TypedefDecl 0x144126700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144055db0 '__SVInt16_t'
|-TypedefDecl 0x144126768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144055dd0 '__SVInt32_t'
|-TypedefDecl 0x1441267d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144055df0 '__SVInt64_t'
|-TypedefDecl 0x144126838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144055e10 '__SVUint8_t'
|-TypedefDecl 0x1441268a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144055e30 '__SVUint16_t'
|-TypedefDecl 0x144126908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144055e50 '__SVUint32_t'
|-TypedefDecl 0x144126970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144055e70 '__SVUint64_t'
|-TypedefDecl 0x1441269d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144055e90 '__SVFloat16_t'
|-TypedefDecl 0x144126a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144055eb0 '__SVFloat32_t'
|-TypedefDecl 0x144126aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144055ed0 '__SVFloat64_t'
|-TypedefDecl 0x144126b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x144126b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x144126be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x144126c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x144126cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x144126d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x144126d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x144126de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x144126e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x144126eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x144126f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x144126f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x144126ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x144127058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1441270c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1440560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x144127128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1440560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x144127190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1440560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1441271f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x144127260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1441272c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x144127330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x144127398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x144127c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1440561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x144127c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1440561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x144127cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1440561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x144127d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144056210 '__clang_svint8x4_t'
|-TypedefDecl 0x144127da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144056230 '__clang_svint16x4_t'
|-TypedefDecl 0x144127e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144056250 '__clang_svint32x4_t'
|-TypedefDecl 0x144127e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144056270 '__clang_svint64x4_t'
|-TypedefDecl 0x144127ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x144127f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1440562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x144127fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1440562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x144128010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1440562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x144128078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1441280e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x144128148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1441281b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x144128218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144056390 '__SVBool_t'
|-TypedefDecl 0x144128280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1440563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1441282e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1440563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x144128350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1440563f0 '__SVCount_t'
|-TypedefDecl 0x1441283f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1441283b0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
|-TypedefDecl 0x144128468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1441283b0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
`-FunctionDecl 0x144128878 <dataset_diviso_filec/func24399_vuln.c:1:1, line:40:1> line:1:1 invalid onig_new_deluxe 'int (int **, const int *, const int *, int *, int *)'
  |-ParmVarDecl 0x144128560 <col:17, col:27> col:27 invalid reg 'int **'
  |-ParmVarDecl 0x1441285e0 <col:32, col:45> col:45 invalid pattern 'const int *'
  |-ParmVarDecl 0x144128660 <col:54, col:67> col:67 invalid pattern_end 'const int *'
  |-ParmVarDecl 0x1441286e0 <line:2:17, col:34> col:34 invalid ci 'int *'
  |-ParmVarDecl 0x144128760 <col:38, col:53> col:53 referenced invalid einfo 'int *'
  `-CompoundStmt 0x144143248 <line:3:1, line:40:1>
    |-DeclStmt 0x1441289c8 <line:4:3, col:8>
    | `-VarDecl 0x144128960 <col:3, col:7> col:7 used r 'int'
    |-IfStmt 0x1441422e0 <line:9:3, line:17:3> has_else
    | |-BinaryOperator 0x144141da0 <line:9:7, col:30> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x144141cf0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->pattern_enc
    | | | `-RecoveryExpr 0x144141cd0 <col:7> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x144141d58 <col:26, col:30> '<dependent type>' contains-errors lvalue ->target_enc
    | |   `-RecoveryExpr 0x144141d38 <col:26> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x144142280 <col:42, line:13:3>
    | | |-BinaryOperator 0x144142180 <line:10:5, line:11:39> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x144141dc0 <line:10:5> 'int' lvalue Var 0x144128960 'r' 'int'
    | | | `-CallExpr 0x144142130 <col:9, line:11:39> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x144141ec0 <line:10:9> 'int ()' Function 0x144141e08 'conv_encoding' 'int ()'
    | | |   |-CXXDependentScopeMemberExpr 0x144141f00 <col:23, col:27> '<dependent type>' contains-errors lvalue ->pattern_enc
    | | |   | `-RecoveryExpr 0x144141ee0 <col:23> '<dependent type>' contains-errors lvalue
    | | |   |-CXXDependentScopeMemberExpr 0x144141f68 <col:40, col:44> '<dependent type>' contains-errors lvalue ->target_enc
    | | |   | `-RecoveryExpr 0x144141f48 <col:40> '<dependent type>' contains-errors lvalue
    | | |   |-RecoveryExpr 0x144141fb0 <col:56> '<dependent type>' contains-errors lvalue
    | | |   |-RecoveryExpr 0x144141fd0 <col:65> '<dependent type>' contains-errors lvalue
    | | |   |-UnaryOperator 0x1441420e0 <line:11:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   | `-RecoveryExpr 0x1441420c0 <col:24> '<dependent type>' contains-errors lvalue
    | | |   `-UnaryOperator 0x144142118 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-RecoveryExpr 0x1441420f8 <col:31> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x144142260 <line:12:5, col:24>
    | |   |-BinaryOperator 0x1441421f8 <col:9, col:14> 'int' '!='
    | |   | |-ImplicitCastExpr 0x1441421e0 <col:9> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x1441421a0 <col:9> 'int' lvalue Var 0x144128960 'r' 'int'
    | |   | `-IntegerLiteral 0x1441421c0 <col:14> 'int' 0
    | |   `-ReturnStmt 0x144142250 <col:17, col:24>
    | |     `-ImplicitCastExpr 0x144142238 <col:24> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x144142218 <col:24> 'int' lvalue Var 0x144128960 'r' 'int'
    | `-CompoundStmt 0x1441422d0 <line:14:8, line:17:3>
    |-IfStmt 0x144142600 <line:20:3, line:23:3>
    | |-CallExpr 0x144142538 <line:20:7, col:19> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x144142470 <col:7> 'int ()' Function 0x1441423b8 'IS_NULL' 'int ()'
    | | `-UnaryOperator 0x144142520 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x144142508 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x144142490 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1441425e8 <col:22, line:23:3>
    |   `-GotoStmt 0x1441425d0 <line:22:5, col:10> 'err2' 0x144142580
    |-BinaryOperator 0x144142a10 <line:25:3, line:26:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x144142620 <line:25:3> 'int' lvalue Var 0x144128960 'r' 'int'
    | `-CallExpr 0x1441429c8 <col:7, line:26:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x144142720 <line:25:7> 'int ()' Function 0x144142668 'onig_reg_init' 'int ()'
    |   |-UnaryOperator 0x1441429b0 <col:21, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x144142998 <col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x144142740 <col:22> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x1441427b0 <col:27, col:31> '<dependent type>' contains-errors lvalue ->option
    |   | `-RecoveryExpr 0x144142790 <col:27> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x144142818 <col:39, col:43> '<dependent type>' contains-errors lvalue ->case_fold_flag
    |   | `-RecoveryExpr 0x1441427f8 <col:39> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x144142880 <col:59, col:63> '<dependent type>' contains-errors lvalue ->target_enc
    |   | `-RecoveryExpr 0x144142860 <col:59> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x1441428e8 <line:26:21, col:25> '<dependent type>' contains-errors lvalue ->syntax
    |     `-RecoveryExpr 0x1441428c8 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x144142b10 <line:27:3, col:20>
    | |-BinaryOperator 0x144142a88 <col:7, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x144142a70 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x144142a30 <col:7> 'int' lvalue Var 0x144128960 'r' 'int'
    | | `-IntegerLiteral 0x144142a50 <col:12> 'int' 0
    | `-GotoStmt 0x144142af8 <col:15, col:20> 'err' 0x144142aa8
    |-IfStmt 0x144143078 <line:30:3, line:34:3>
    | |-BinaryOperator 0x144142dd0 <line:30:7, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x144142db8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x144142d78 <col:7> 'int' lvalue Var 0x144128960 'r' 'int'
    | | `-IntegerLiteral 0x144142d98 <col:12> 'int' 0
    | `-CompoundStmt 0x144143060 <col:15, line:34:3>
    |   `-LabelStmt 0x144142fc0 <line:31:3, line:32:19> 'err'
    |     `-CallExpr 0x144142f98 <col:5, col:19> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x144142ed0 <col:5> 'int ()' Function 0x144142e18 'onig_free' 'int ()'
    |       `-UnaryOperator 0x144142f80 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x144142f68 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x144142ef0 <col:16> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x1441431e0 <line:36:2, col:6> 'err2'
    | `-NullStmt 0x1441431d8 <col:6>
    `-ReturnStmt 0x144143238 <line:39:3, col:10>
      `-ImplicitCastExpr 0x144143220 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x144143200 <col:10> 'int' lvalue Var 0x144128960 'r' 'int'
