TranslationUnitDecl 0x11f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f855bd0 '__int128'
|-TypedefDecl 0x11f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f855bf0 'unsigned __int128'
|-TypedefDecl 0x11f926c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f926a00 'struct __NSConstantString_tag'
|   `-Record 0x11f856580 '__NSConstantString_tag'
|-TypedefDecl 0x11f926c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f855d90 '__SVInt8_t'
|-TypedefDecl 0x11f926d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f855db0 '__SVInt16_t'
|-TypedefDecl 0x11f926d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f855dd0 '__SVInt32_t'
|-TypedefDecl 0x11f926dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f855df0 '__SVInt64_t'
|-TypedefDecl 0x11f926e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f855e10 '__SVUint8_t'
|-TypedefDecl 0x11f926ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f855e30 '__SVUint16_t'
|-TypedefDecl 0x11f926f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f855e50 '__SVUint32_t'
|-TypedefDecl 0x11f926f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f855e70 '__SVUint64_t'
|-TypedefDecl 0x11f926fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f855e90 '__SVFloat16_t'
|-TypedefDecl 0x11f927040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f9270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f927110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f927178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f9271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f927248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f9272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f927318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f927380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f9273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f927450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f9274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f927520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f927588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f9275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f927658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f9276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f927728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f927790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f9277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f927860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f9278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f927930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f927998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f928200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f928268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f9282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f928338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f9283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f928408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f928470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f9284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f928540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f9285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f928610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f928678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f9286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f928748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f9287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f928818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f856390 '__SVBool_t'
|-TypedefDecl 0x11f928880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f9288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f928950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8563f0 '__SVCount_t'
|-TypedefDecl 0x11f9289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f9289b0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-TypedefDecl 0x11f928a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f9289b0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-FunctionDecl 0x11f928ce0 <dataset_diviso_filec/func19638_vuln.c:1:1, line:78:1> line:1:13 invalid php_wddx_process_data 'void (void *, const int *, int)' static
| |-ParmVarDecl 0x11f928ad8 <col:35, col:41> col:41 user_data 'void *'
| |-ParmVarDecl 0x11f928b70 <col:52, col:68> col:68 invalid s 'const int *'
| |-ParmVarDecl 0x11f928bf0 <col:71, col:75> col:75 used len 'int'
| `-CompoundStmt 0x11f944a40 <line:2:1, line:78:1>
|   |-CallExpr 0x11f928fa8 <line:5:2, col:15> 'int'
|   | `-ImplicitCastExpr 0x11f928f90 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x11f928f40 <col:2> 'int ()' Function 0x11f928e88 'TSRMLS_FETCH' 'int ()'
|   `-IfStmt 0x11f944a20 <line:7:2, line:77:2>
|     |-BinaryOperator 0x11f9422d8 <line:7:6, col:45> 'int' contains-errors '&&'
|     | |-UnaryOperator 0x11f942228 <col:6, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow
|     | | `-CallExpr 0x11f942200 <col:7, col:32> '<dependent type>' contains-errors
|     | |   |-DeclRefExpr 0x11f9290a8 <col:7> 'int ()' Function 0x11f928ff0 'wddx_stack_is_empty' 'int ()'
|     | |   `-RecoveryExpr 0x11f9291d0 <col:27> '<dependent type>' contains-errors lvalue
|     | `-UnaryOperator 0x11f9422c0 <col:37, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x11f9422a8 <col:38, col:45> '<dependent type>' contains-errors <LValueToRValue>
|     |     `-CXXDependentScopeMemberExpr 0x11f942260 <col:38, col:45> '<dependent type>' contains-errors lvalue ->done
|     |       `-RecoveryExpr 0x11f942240 <col:38> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x11f944a08 <col:51, line:77:2>
|       `-SwitchStmt 0x11f942610 <line:9:3, line:76:3>
|         |-CallExpr 0x11f9425e8 <line:9:11, col:23> '<dependent type>' contains-errors
|         | |-DeclRefExpr 0x11f942568 <col:11> 'int ()' Function 0x11f9424b0 'Z_TYPE_P' 'int ()'
|         | `-RecoveryExpr 0x11f9425c8 <col:20> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x11f9449a8 <col:26, line:76:3>
|           |-IfStmt 0x11f943268 <line:11:5, line:20:5> has_else
|           | |-BinaryOperator 0x11f9428a8 <line:11:9, col:34> 'int' contains-errors '=='
|           | | |-CallExpr 0x11f942880 <col:9, col:29> '<dependent type>' contains-errors
|           | | | |-DeclRefExpr 0x11f942730 <col:9> 'int ()' Function 0x11f942678 'Z_STRLEN_P' 'int ()'
|           | | | `-CXXDependentScopeMemberExpr 0x11f942838 <col:20, col:25> '<dependent type>' contains-errors lvalue ->data
|           | | |   `-RecoveryExpr 0x11f942818 <col:20> '<dependent type>' contains-errors lvalue
|           | | `-IntegerLiteral 0x11f9427d8 <col:34> 'int' 0
|           | |-CompoundStmt 0x11f942c98 <col:37, line:15:5>
|           | `-CompoundStmt 0x11f943258 <col:12, line:20:5>
|           |-BreakStmt 0x11f943298 <line:21:5>
|           |-IfStmt 0x11f9435c8 <line:24:5, line:30:5> has_else
|           | |-RecoveryExpr 0x11f9432e0 <line:24:9, col:34> '_Bool' contains-errors
|           | |-CompoundStmt 0x11f943448 <col:37, line:27:5>
|           | `-CompoundStmt 0x11f9435b8 <col:12, line:30:5>
|           |-BreakStmt 0x11f943690 <line:33:5>
|           |-BreakStmt 0x11f9438a8 <line:40:5>
|           |-IfStmt 0x11f9440c0 <line:43:5, line:53:5> has_else
|           | |-UnaryOperator 0x11f943bd0 <line:43:9, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|           | | `-CallExpr 0x11f943ba0 <col:10, col:25> '<dependent type>' contains-errors
|           | |   |-DeclRefExpr 0x11f943ad0 <col:10> 'int (const char *, const char *)' Function 0x11f9438f0 'strcmp' 'int (const char *, const char *)'
|           | |   |-RecoveryExpr 0x11f943af0 <col:17> '<dependent type>' contains-errors lvalue
|           | |   `-StringLiteral 0x11f943b50 <col:20> 'char[4]' lvalue "STR"
|           | |-CompoundStmt 0x11f943d08 <col:28, line:45:5>
|           | `-IfStmt 0x11f944090 <col:12, line:53:5> has_else
|           |   |-UnaryOperator 0x11f943dd8 <line:45:16, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow
|           |   | `-CallExpr 0x11f943da8 <col:17, col:32> '<dependent type>' contains-errors
|           |   |   |-DeclRefExpr 0x11f943d18 <col:17> 'int (const char *, const char *)' Function 0x11f9438f0 'strcmp' 'int (const char *, const char *)'
|           |   |   |-RecoveryExpr 0x11f943d38 <col:24> '<dependent type>' contains-errors lvalue
|           |   |   `-StringLiteral 0x11f943d58 <col:27> 'char[4]' lvalue "STR"
|           |   |-CompoundStmt 0x11f943e30 <col:35, line:47:5>
|           |   `-CompoundStmt 0x11f944080 <col:12, line:53:5>
|           |-BreakStmt 0x11f9440f0 <line:54:5>
|           |-CompoundStmt 0x11f944938 <line:56:22, line:71:4>
|           | |-DeclStmt 0x11f944178 <line:57:5, col:14>
|           | | `-VarDecl 0x11f944110 <col:5, col:11> col:11 used tmp 'char *'
|           | |-BinaryOperator 0x11f9443a8 <line:59:5, col:26> 'char *' '='
|           | | |-DeclRefExpr 0x11f944190 <col:5> 'char *' lvalue Var 0x11f944110 'tmp' 'char *'
|           | | `-ImplicitCastExpr 0x11f944390 <col:11, col:26> 'char *' <IntegralToPointer>
|           | |   `-CallExpr 0x11f944368 <col:11, col:26> 'int'
|           | |     |-ImplicitCastExpr 0x11f944350 <col:11> 'int (*)()' <FunctionToPointerDecay>
|           | |     | `-DeclRefExpr 0x11f9442b8 <col:11> 'int ()' Function 0x11f944200 'emalloc' 'int ()'
|           | |     `-BinaryOperator 0x11f944330 <col:19, col:25> 'int' '+'
|           | |       |-ImplicitCastExpr 0x11f944318 <col:19> 'int' <LValueToRValue>
|           | |       | `-DeclRefExpr 0x11f9442d8 <col:19> 'int' lvalue ParmVar 0x11f928bf0 'len' 'int'
|           | |       `-IntegerLiteral 0x11f9442f8 <col:25> 'int' 1
|           | |-CallExpr 0x11f944490 <line:60:5, col:23> '<dependent type>' contains-errors
|           | | |-DeclRefExpr 0x11f9443c8 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x11f942ec8 'memcpy' 'void *(void *, const void *, unsigned long)'
|           | | |-DeclRefExpr 0x11f9443e8 <col:12> 'char *' lvalue Var 0x11f944110 'tmp' 'char *'
|           | | |-RecoveryExpr 0x11f944408 <col:17> '<dependent type>' contains-errors lvalue
|           | | `-DeclRefExpr 0x11f944428 <col:20> 'int' lvalue ParmVar 0x11f928bf0 'len' 'int'
|           | |-BinaryOperator 0x11f944588 <line:61:5, col:16> 'char' '='
|           | | |-ArraySubscriptExpr 0x11f944538 <col:5, col:12> 'char' lvalue
|           | | | |-ImplicitCastExpr 0x11f944508 <col:5> 'char *' <LValueToRValue>
|           | | | | `-DeclRefExpr 0x11f9444c8 <col:5> 'char *' lvalue Var 0x11f944110 'tmp' 'char *'
|           | | | `-ImplicitCastExpr 0x11f944520 <col:9> 'int' <LValueToRValue>
|           | | |   `-DeclRefExpr 0x11f9444e8 <col:9> 'int' lvalue ParmVar 0x11f928bf0 'len' 'int'
|           | | `-ImplicitCastExpr 0x11f944570 <col:16> 'char' <IntegralCast>
|           | |   `-CharacterLiteral 0x11f944558 <col:16> 'int' 0
|           | |-IfStmt 0x11f944880 <line:65:5, line:69:5>
|           | | |-RecoveryExpr 0x11f944740 <line:65:9, col:33> '_Bool' contains-errors
|           | | `-CompoundStmt 0x11f944870 <col:36, line:69:5>
|           | `-CallExpr 0x11f9448f8 <line:70:5, col:14> 'int'
|           |   |-ImplicitCastExpr 0x11f9448e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|           |   | `-DeclRefExpr 0x11f9448a0 <col:5> 'int ()' Function 0x11f943f88 'efree' 'int ()'
|           |   `-ImplicitCastExpr 0x11f944920 <col:11> 'char *' <LValueToRValue>
|           |     `-DeclRefExpr 0x11f9448c0 <col:11> 'char *' lvalue Var 0x11f944110 'tmp' 'char *'
|           |-BreakStmt 0x11f944978 <line:72:5>
|           `-DefaultStmt 0x11f944988 <line:74:4, line:75:5>
|             `-BreakStmt 0x11f944980 <col:5>
|-FunctionDecl 0x11f942ec8 <line:17:6> col:6 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x11f942fc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x11f943030 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x11f943098 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x11f942f70 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x11f9438f0 <line:43:10> col:10 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x11f9439f0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x11f943a58 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x11f943998 <<invalid sloc>> Implicit 887
