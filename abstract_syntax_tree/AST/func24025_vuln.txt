TranslationUnitDecl 0x126055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1260564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126055bd0 '__int128'
|-TypedefDecl 0x126056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126055bf0 'unsigned __int128'
|-TypedefDecl 0x12680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12680bc00 'struct __NSConstantString_tag'
|   `-Record 0x126056580 '__NSConstantString_tag'
|-TypedefDecl 0x12680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126055d90 '__SVInt8_t'
|-TypedefDecl 0x12680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126055db0 '__SVInt16_t'
|-TypedefDecl 0x12680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126055dd0 '__SVInt32_t'
|-TypedefDecl 0x12680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126055df0 '__SVInt64_t'
|-TypedefDecl 0x12680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126055e10 '__SVUint8_t'
|-TypedefDecl 0x12680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126055e30 '__SVUint16_t'
|-TypedefDecl 0x12680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126055e50 '__SVUint32_t'
|-TypedefDecl 0x12680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126055e70 '__SVUint64_t'
|-TypedefDecl 0x12680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126055e90 '__SVFloat16_t'
|-TypedefDecl 0x12680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1260560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1260560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1260560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1260561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1260561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1260561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1260562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1260562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1260562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126056390 '__SVBool_t'
|-TypedefDecl 0x12680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1260563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1260563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1260563f0 '__SVCount_t'
|-TypedefDecl 0x12680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-TypedefDecl 0x12680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
`-FunctionDecl 0x12680e038 <dataset_diviso_filec/func24025_vuln.c:1:1, line:40:1> line:1:1 invalid mcid_char_imp 'int (int *, int *, int *, int, int)'
  |-ParmVarDecl 0x12680dd28 <col:15, col:27> col:27 invalid ctx 'int *'
  |-ParmVarDecl 0x12680dda8 <col:32, col:54> col:54 invalid p 'int *'
  |-ParmVarDecl 0x12680de28 <col:57, col:69> col:69 referenced invalid tr 'int *'
  |-ParmVarDecl 0x12680dea8 <col:73, col:77> col:77 used uni 'int'
  |-ParmVarDecl 0x12680df28 <col:82, col:86> col:86 used remove 'int'
  `-CompoundStmt 0x126829858 <line:2:1, line:40:1>
    |-IfStmt 0x12680e1f8 <line:3:2, line:5:3>
    | |-BinaryOperator 0x12680e1c8 <line:3:6, col:22> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12680e128 <col:6, col:10> '<dependent type>' contains-errors lvalue ->mcid_obj
    | | | `-RecoveryExpr 0x12680e108 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12680e1a8 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12680e1e8 <line:5:3>
    |-IfStmt 0x126827c40 <line:7:2, line:13:2>
    | |-ImplicitCastExpr 0x12680e238 <line:7:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12680e218 <col:6> 'int' lvalue ParmVar 0x12680df28 'remove' 'int'
    | `-CompoundStmt 0x126827c20 <line:8:2, line:13:2>
    |   |-CallExpr 0x126827a28 <line:10:3, col:46> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12680e3b0 <col:3> 'int ()' Function 0x12680e2f8 'pdf_dict_del' 'int ()'
    |   | |-RecoveryExpr 0x12680e3d0 <col:16> '<dependent type>' contains-errors lvalue
    |   | |-CXXDependentScopeMemberExpr 0x126827820 <col:21, col:25> '<dependent type>' contains-errors lvalue ->mcid_obj
    |   | | `-RecoveryExpr 0x126827800 <col:21> '<dependent type>' contains-errors lvalue
    |   | `-CallExpr 0x126827a00 <col:35, col:45> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x126827948 <col:35> 'int ()' Function 0x126827890 'PDF_NAME' 'int ()'
    |   |   `-RecoveryExpr 0x1268279e0 <col:44> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x126827be8 <line:12:3, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x126827a60 <col:3> 'int ()' Function 0x12680e2f8 'pdf_dict_del' 'int ()'
    |     |-RecoveryExpr 0x126827a80 <col:16> '<dependent type>' contains-errors lvalue
    |     |-CXXDependentScopeMemberExpr 0x126827ac0 <col:21, col:25> '<dependent type>' contains-errors lvalue ->mcid_obj
    |     | `-RecoveryExpr 0x126827aa0 <col:21> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x126827bc0 <col:35, col:45> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x126827b08 <col:35> 'int ()' Function 0x126827890 'PDF_NAME' 'int ()'
    |       `-RecoveryExpr 0x126827ba0 <col:44> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x126827e40 <line:15:2, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x126827d40 <col:2> 'int ()' Function 0x126827c88 'walk_string' 'int ()'
    | |-RecoveryExpr 0x126827d60 <col:14> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x126827d80 <col:19> 'int' lvalue ParmVar 0x12680dea8 'uni' 'int'
    | |-DeclRefExpr 0x126827da0 <col:24> 'int' lvalue ParmVar 0x12680df28 'remove' 'int'
    | `-UnaryOperator 0x126827e28 <col:32, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x126827de0 <col:33, col:37> '<dependent type>' contains-errors lvalue ->alt
    |     `-RecoveryExpr 0x126827dc0 <col:33> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x126827f80 <line:17:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x126827e80 <col:2> 'int ()' Function 0x126827c88 'walk_string' 'int ()'
    | |-RecoveryExpr 0x126827ea0 <col:14> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x126827ec0 <col:19> 'int' lvalue ParmVar 0x12680dea8 'uni' 'int'
    | |-DeclRefExpr 0x126827ee0 <col:24> 'int' lvalue ParmVar 0x12680df28 'remove' 'int'
    | `-UnaryOperator 0x126827f68 <col:32, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x126827f20 <col:33, col:37> '<dependent type>' contains-errors lvalue ->actualtext
    |     `-RecoveryExpr 0x126827f00 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126828520 <line:19:2, line:25:2> has_else
    | |-ImplicitCastExpr 0x126827fe0 <line:19:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x126827fc0 <col:6> 'int' lvalue ParmVar 0x12680df28 'remove' 'int'
    | |-BinaryOperator 0x126828268 <line:20:3, col:58> 'int' contains-errors '='
    | | |-DeclRefExpr 0x126827ff8 <col:3> 'int' lvalue ParmVar 0x12680df28 'remove' 'int'
    | | `-ParenExpr 0x126828248 <col:12, col:58> 'int' contains-errors
    | |   `-BinaryOperator 0x126828228 <col:13, col:57> 'int' contains-errors '||'
    | |     |-BinaryOperator 0x126828100 <col:13, col:29> 'int' contains-errors '=='
    | |     | |-CXXDependentScopeMemberExpr 0x126828080 <col:13, col:21> '<dependent type>' contains-errors lvalue .pos
    | |     | | `-CXXDependentScopeMemberExpr 0x126828038 <col:13, col:17> '<dependent type>' contains-errors lvalue ->alt
    | |     | |   `-RecoveryExpr 0x126828018 <col:13> '<dependent type>' contains-errors lvalue
    | |     | `-UnaryOperator 0x1268280e8 <col:28, col:29> 'int' prefix '-'
    | |     |   `-IntegerLiteral 0x1268280c8 <col:29> 'int' 1
    | |     `-BinaryOperator 0x126828208 <col:34, col:57> 'int' contains-errors '=='
    | |       |-CXXDependentScopeMemberExpr 0x126828188 <col:34, col:49> '<dependent type>' contains-errors lvalue .pos
    | |       | `-CXXDependentScopeMemberExpr 0x126828140 <col:34, col:38> '<dependent type>' contains-errors lvalue ->actualtext
    | |       |   `-RecoveryExpr 0x126828120 <col:34> '<dependent type>' contains-errors lvalue
    | |       `-UnaryOperator 0x1268281f0 <col:56, col:57> 'int' prefix '-'
    | |         `-IntegerLiteral 0x1268281d0 <col:57> 'int' 1
    | `-IfStmt 0x126828500 <line:21:7, line:25:2>
    |   |-BinaryOperator 0x126828468 <line:21:11, col:53> 'int' contains-errors '||'
    |   | |-BinaryOperator 0x126828358 <col:11, col:26> 'int' contains-errors '>='
    |   | | |-CXXDependentScopeMemberExpr 0x1268282f0 <col:11, col:19> '<dependent type>' contains-errors lvalue .pos
    |   | | | `-CXXDependentScopeMemberExpr 0x1268282a8 <col:11, col:15> '<dependent type>' contains-errors lvalue ->alt
    |   | | |   `-RecoveryExpr 0x126828288 <col:11> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x126828338 <col:26> 'int' 0
    |   | `-BinaryOperator 0x126828448 <col:31, col:53> 'int' contains-errors '>='
    |   |   |-CXXDependentScopeMemberExpr 0x1268283e0 <col:31, col:46> '<dependent type>' contains-errors lvalue .pos
    |   |   | `-CXXDependentScopeMemberExpr 0x126828398 <col:31, col:35> '<dependent type>' contains-errors lvalue ->actualtext
    |   |   |   `-RecoveryExpr 0x126828378 <col:31> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x126828428 <col:53> 'int' 0
    |   `-CompoundStmt 0x1268284e8 <line:22:2, line:25:2>
    |     `-BinaryOperator 0x1268284c8 <line:24:3, col:12> 'int' '='
    |       |-DeclRefExpr 0x126828488 <col:3> 'int' lvalue ParmVar 0x12680df28 'remove' 'int'
    |       `-IntegerLiteral 0x1268284a8 <col:12> 'int' 0
    `-IfStmt 0x126829838 <line:26:2, line:39:2>
      |-ImplicitCastExpr 0x126828570 <line:26:6> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x126828550 <col:6> 'int' lvalue ParmVar 0x12680df28 'remove' 'int'
      `-CompoundStmt 0x1268297e8 <line:27:2, line:39:2>
        |-IfStmt 0x126828c60 <line:29:3, line:30:56>
        | |-BinaryOperator 0x126828670 <line:29:7, col:30> 'int' contains-errors '=='
        | | |-CXXDependentScopeMemberExpr 0x1268285f0 <col:7, col:22> '<dependent type>' contains-errors lvalue .pos
        | | | `-CXXDependentScopeMemberExpr 0x1268285a8 <col:7, col:11> '<dependent type>' contains-errors lvalue ->actualtext
        | | |   `-RecoveryExpr 0x126828588 <col:7> '<dependent type>' contains-errors lvalue
        | | `-UnaryOperator 0x126828658 <col:29, col:30> 'int' prefix '-'
        | |   `-IntegerLiteral 0x126828638 <col:30> 'int' 1
        | `-CallExpr 0x126828c28 <line:30:4, col:56> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x126828690 <col:4> 'int ()' Function 0x12680e2f8 'pdf_dict_del' 'int ()'
        |   |-RecoveryExpr 0x1268286b0 <col:17> '<dependent type>' contains-errors lvalue
        |   |-CXXDependentScopeMemberExpr 0x1268286f0 <col:22, col:26> '<dependent type>' contains-errors lvalue ->mcid_obj
        |   | `-RecoveryExpr 0x1268286d0 <col:22> '<dependent type>' contains-errors lvalue
        |   `-CallExpr 0x126828c00 <col:36, col:55> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x126828738 <col:36> 'int ()' Function 0x126827890 'PDF_NAME' 'int ()'
        |     `-RecoveryExpr 0x1268287d0 <col:45> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x126828f48 <line:31:3, line:32:49>
        | |-BinaryOperator 0x126828d68 <line:31:7, col:23> 'int' contains-errors '=='
        | | |-CXXDependentScopeMemberExpr 0x126828ce8 <col:7, col:15> '<dependent type>' contains-errors lvalue .pos
        | | | `-CXXDependentScopeMemberExpr 0x126828ca0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->alt
        | | |   `-RecoveryExpr 0x126828c80 <col:7> '<dependent type>' contains-errors lvalue
        | | `-UnaryOperator 0x126828d50 <col:22, col:23> 'int' prefix '-'
        | |   `-IntegerLiteral 0x126828d30 <col:23> 'int' 1
        | `-CallExpr 0x126828f10 <line:32:4, col:49> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x126828d88 <col:4> 'int ()' Function 0x12680e2f8 'pdf_dict_del' 'int ()'
        |   |-RecoveryExpr 0x126828da8 <col:17> '<dependent type>' contains-errors lvalue
        |   |-CXXDependentScopeMemberExpr 0x126828de8 <col:22, col:26> '<dependent type>' contains-errors lvalue ->mcid_obj
        |   | `-RecoveryExpr 0x126828dc8 <col:22> '<dependent type>' contains-errors lvalue
        |   `-CallExpr 0x126828ee8 <col:36, col:48> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x126828e30 <col:36> 'int ()' Function 0x126827890 'PDF_NAME' 'int ()'
        |     `-RecoveryExpr 0x126828ec8 <col:45> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x1268290f0 <line:33:3, col:33> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x126829048 <col:3> 'int ()' Function 0x126828f90 'pdf_drop_obj' 'int ()'
        | |-RecoveryExpr 0x126829068 <col:16> '<dependent type>' contains-errors lvalue
        | `-CXXDependentScopeMemberExpr 0x1268290a8 <col:21, col:25> '<dependent type>' contains-errors lvalue ->mcid_obj
        |   `-RecoveryExpr 0x126829088 <col:21> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x126829208 <line:34:3, col:18> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x126829168 <col:3, col:7> '<dependent type>' contains-errors lvalue ->mcid_obj
        | | `-RecoveryExpr 0x126829140 <col:3> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x126829120 <col:3> 'int *' lvalue ParmVar 0x12680de28 'tr' 'int *'
        | `-RecoveryExpr 0x1268291e8 <col:18> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x1268293f8 <line:35:3, col:28> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x126829308 <col:3> 'int ()' Function 0x126829250 'fz_free' 'int ()'
        | |-RecoveryExpr 0x126829328 <col:11> '<dependent type>' contains-errors lvalue
        | `-CXXDependentScopeMemberExpr 0x1268293b0 <col:16, col:24> '<dependent type>' contains-errors lvalue .utf8
        |   `-CXXDependentScopeMemberExpr 0x126829368 <col:16, col:20> '<dependent type>' contains-errors lvalue ->alt
        |     `-RecoveryExpr 0x126829348 <col:16> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x126829558 <line:36:3, col:18> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x1268294b8 <col:3, col:11> '<dependent type>' contains-errors lvalue .utf8
        | | `-CXXDependentScopeMemberExpr 0x126829470 <col:3, col:7> '<dependent type>' contains-errors lvalue ->alt
        | |   `-RecoveryExpr 0x126829448 <col:3> '<dependent type>' contains-errors lvalue
        | |     `-DeclRefExpr 0x126829428 <col:3> 'int *' lvalue ParmVar 0x12680de28 'tr' 'int *'
        | `-RecoveryExpr 0x126829538 <col:18> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x126829668 <line:37:3, col:35> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x126829578 <col:3> 'int ()' Function 0x126829250 'fz_free' 'int ()'
        | |-RecoveryExpr 0x126829598 <col:11> '<dependent type>' contains-errors lvalue
        | `-CXXDependentScopeMemberExpr 0x126829620 <col:16, col:31> '<dependent type>' contains-errors lvalue .utf8
        |   `-CXXDependentScopeMemberExpr 0x1268295d8 <col:16, col:20> '<dependent type>' contains-errors lvalue ->actualtext
        |     `-RecoveryExpr 0x1268295b8 <col:16> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x1268297c8 <line:38:3, col:25> '<dependent type>' contains-errors '='
          |-CXXDependentScopeMemberExpr 0x126829728 <col:3, col:18> '<dependent type>' contains-errors lvalue .utf8
          | `-CXXDependentScopeMemberExpr 0x1268296e0 <col:3, col:7> '<dependent type>' contains-errors lvalue ->actualtext
          |   `-RecoveryExpr 0x1268296b8 <col:3> '<dependent type>' contains-errors lvalue
          |     `-DeclRefExpr 0x126829698 <col:3> 'int *' lvalue ParmVar 0x12680de28 'tr' 'int *'
          `-RecoveryExpr 0x1268297a8 <col:25> '<dependent type>' contains-errors lvalue
