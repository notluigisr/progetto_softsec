TranslationUnitDecl 0x12b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b055bd0 '__int128'
|-TypedefDecl 0x12b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b055bf0 'unsigned __int128'
|-TypedefDecl 0x12b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b126000 'struct __NSConstantString_tag'
|   `-Record 0x12b056580 '__NSConstantString_tag'
|-TypedefDecl 0x12b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b055d90 '__SVInt8_t'
|-TypedefDecl 0x12b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b055db0 '__SVInt16_t'
|-TypedefDecl 0x12b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b055dd0 '__SVInt32_t'
|-TypedefDecl 0x12b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b055df0 '__SVInt64_t'
|-TypedefDecl 0x12b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b055e10 '__SVUint8_t'
|-TypedefDecl 0x12b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b055e30 '__SVUint16_t'
|-TypedefDecl 0x12b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b055e50 '__SVUint32_t'
|-TypedefDecl 0x12b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b055e70 '__SVUint64_t'
|-TypedefDecl 0x12b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b055e90 '__SVFloat16_t'
|-TypedefDecl 0x12b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b056390 '__SVBool_t'
|-TypedefDecl 0x12b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b0563f0 '__SVCount_t'
|-TypedefDecl 0x12b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b127fb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
|-TypedefDecl 0x12b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b127fb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
`-FunctionDecl 0x12b140be8 <dataset_diviso_filec/func20398_vuln.c:1:1, line:25:1> line:1:12 sco_send_frame 'int (struct sock *, struct msghdr *, int)' static
  |-ParmVarDecl 0x12b128648 <col:27, col:40> col:40 used sk 'struct sock *'
  |-ParmVarDecl 0x12b140a28 <col:44, col:59> col:59 used msg 'struct msghdr *'
  |-ParmVarDecl 0x12b140aa8 <col:64, col:68> col:68 used len 'int'
  `-CompoundStmt 0x12b809148 <line:2:1, line:25:1>
    |-DeclStmt 0x12b1410f8 <line:3:2, col:42>
    | |-RecordDecl 0x12b140cf0 <col:2, col:9> col:9 struct sco_conn
    | `-VarDecl 0x12b140e58 <col:2, col:38> col:19 used conn 'struct sco_conn *' cinit
    |   `-RecoveryExpr 0x12b1410b8 <col:26, col:38> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x12b141078 <col:26, col:35> 'int'
    |       |-ImplicitCastExpr 0x12b141060 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12b140ff0 <col:26> 'int ()' Function 0x12b140f38 'sco_pi' 'int ()'
    |       `-ImplicitCastExpr 0x12b1410a0 <col:33> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x12b141010 <col:33> 'struct sock *' lvalue ParmVar 0x12b128648 'sk' 'struct sock *'
    |-DeclStmt 0x12b1412f8 <line:4:2, col:21>
    | |-RecordDecl 0x12b141110 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x12b141278 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-DeclStmt 0x12b141390 <line:5:2, col:9>
    | `-VarDecl 0x12b141328 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x12b1414f0 <line:8:2, line:9:11>
    | |-BinaryOperator 0x12b141428 <line:8:6, col:18> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x12b1413a8 <col:6> 'int' lvalue ParmVar 0x12b140aa8 'len' 'int'
    | | `-RecoveryExpr 0x12b141400 <col:12, col:18> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12b1413c8 <col:12> 'struct sco_conn *' contains-errors lvalue Var 0x12b140e58 'conn' 'struct sco_conn *'
    | `-ReturnStmt 0x12b1414e0 <line:9:3, col:11>
    |   `-UnaryOperator 0x12b1414c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12b1414b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12b141490 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12b1416c8 <line:11:2, col:23> 'int'
    | |-ImplicitCastExpr 0x12b1416b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12b1415f0 <col:2> 'int ()' Function 0x12b141538 'BT_DBG' 'int ()'
    | |-ImplicitCastExpr 0x12b141700 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x12b141650 <col:9> 'char[4]' lvalue "STR"
    | |-ImplicitCastExpr 0x12b141718 <col:16> 'struct sock *' <LValueToRValue>
    | | `-DeclRefExpr 0x12b141670 <col:16> 'struct sock *' lvalue ParmVar 0x12b128648 'sk' 'struct sock *'
    | `-ImplicitCastExpr 0x12b141730 <col:20> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12b141690 <col:20> 'int' lvalue ParmVar 0x12b140aa8 'len' 'int'
    |-BinaryOperator 0x12b8088a0 <line:13:2, col:70> 'struct sk_buff *' contains-errors '='
    | |-DeclRefExpr 0x12b141748 <col:2> 'struct sk_buff *' lvalue Var 0x12b141278 'skb' 'struct sk_buff *'
    | `-CallExpr 0x12b808860 <col:8, col:70> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b141848 <col:8> 'int ()' Function 0x12b141790 'bt_skb_send_alloc' 'int ()'
    |   |-DeclRefExpr 0x12b141868 <col:26> 'struct sock *' lvalue ParmVar 0x12b128648 'sk' 'struct sock *'
    |   |-DeclRefExpr 0x12b141888 <col:30> 'int' lvalue ParmVar 0x12b140aa8 'len' 'int'
    |   |-BinaryOperator 0x12b808840 <col:35, col:52> '<dependent type>' contains-errors '&'
    |   | |-RecoveryExpr 0x12b1418e0 <col:35, col:40> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12b1418a8 <col:35> 'struct msghdr *' lvalue ParmVar 0x12b140a28 'msg' 'struct msghdr *'
    |   | `-RecoveryExpr 0x12b808820 <col:52> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x12b141990 <col:66, col:67> 'int *' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x12b141940 <col:67> 'int' lvalue Var 0x12b141328 'err' 'int'
    |-IfStmt 0x12b808958 <line:14:2, line:15:10>
    | |-UnaryOperator 0x12b8088f8 <line:14:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12b8088e0 <col:7> 'struct sk_buff *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12b8088c0 <col:7> 'struct sk_buff *' lvalue Var 0x12b141278 'skb' 'struct sk_buff *'
    | `-ReturnStmt 0x12b808948 <line:15:3, col:10>
    |   `-ImplicitCastExpr 0x12b808930 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12b808910 <col:10> 'int' lvalue Var 0x12b141328 'err' 'int'
    |-IfStmt 0x12b808f30 <line:17:2, line:20:2>
    | |-CallExpr 0x12b808c88 <line:17:6, col:49> 'int'
    | | |-ImplicitCastExpr 0x12b808c70 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12b808a58 <col:6> 'int ()' Function 0x12b8089a0 'memcpy_from_msg' 'int ()'
    | | |-CallExpr 0x12b808bd0 <col:22, col:38> 'int'
    | | | |-ImplicitCastExpr 0x12b808bb8 <col:22> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x12b808b58 <col:22> 'int ()' Function 0x12b808aa0 'skb_put' 'int ()'
    | | | |-ImplicitCastExpr 0x12b808c00 <col:30> 'struct sk_buff *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12b808b78 <col:30> 'struct sk_buff *' lvalue Var 0x12b141278 'skb' 'struct sk_buff *'
    | | | `-ImplicitCastExpr 0x12b808c18 <col:35> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12b808b98 <col:35> 'int' lvalue ParmVar 0x12b140aa8 'len' 'int'
    | | |-ImplicitCastExpr 0x12b808cc0 <col:41> 'struct msghdr *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12b808c30 <col:41> 'struct msghdr *' lvalue ParmVar 0x12b140a28 'msg' 'struct msghdr *'
    | | `-ImplicitCastExpr 0x12b808cd8 <col:46> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12b808c50 <col:46> 'int' lvalue ParmVar 0x12b140aa8 'len' 'int'
    | `-CompoundStmt 0x12b808f10 <col:52, line:20:2>
    |   |-CallExpr 0x12b808e28 <line:18:3, col:16> 'int'
    |   | |-ImplicitCastExpr 0x12b808e10 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12b808dd0 <col:3> 'int ()' Function 0x12b808d18 'kfree_skb' 'int ()'
    |   | `-ImplicitCastExpr 0x12b808e50 <col:13> 'struct sk_buff *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12b808df0 <col:13> 'struct sk_buff *' lvalue Var 0x12b141278 'skb' 'struct sk_buff *'
    |   `-ReturnStmt 0x12b808f00 <line:19:3, col:11>
    |     `-UnaryOperator 0x12b808ee8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12b808ed0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12b808eb0 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12b8090d0 <line:22:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b809030 <col:2> 'int ()' Function 0x12b808f78 'hci_send_sco' 'int ()'
    | |-RecoveryExpr 0x12b809088 <col:15, col:21> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12b809050 <col:15> 'struct sco_conn *' contains-errors lvalue Var 0x12b140e58 'conn' 'struct sco_conn *'
    | `-DeclRefExpr 0x12b8090b0 <col:27> 'struct sk_buff *' lvalue Var 0x12b141278 'skb' 'struct sk_buff *'
    `-ReturnStmt 0x12b809138 <line:24:2, col:9>
      `-ImplicitCastExpr 0x12b809120 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12b809100 <col:9> 'int' lvalue ParmVar 0x12b140aa8 'len' 'int'
