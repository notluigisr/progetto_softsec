TranslationUnitDecl 0x125055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1250564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125055bd0 '__int128'
|-TypedefDecl 0x125056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125055bf0 'unsigned __int128'
|-TypedefDecl 0x125126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x125126000 'struct __NSConstantString_tag'
|   `-Record 0x125056580 '__NSConstantString_tag'
|-TypedefDecl 0x125126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125055d90 '__SVInt8_t'
|-TypedefDecl 0x125126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125055db0 '__SVInt16_t'
|-TypedefDecl 0x125126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125055dd0 '__SVInt32_t'
|-TypedefDecl 0x1251263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125055df0 '__SVInt64_t'
|-TypedefDecl 0x125126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125055e10 '__SVUint8_t'
|-TypedefDecl 0x1251264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125055e30 '__SVUint16_t'
|-TypedefDecl 0x125126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125055e50 '__SVUint32_t'
|-TypedefDecl 0x125126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125055e70 '__SVUint64_t'
|-TypedefDecl 0x1251265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125055e90 '__SVFloat16_t'
|-TypedefDecl 0x125126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1251266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125055ed0 '__SVFloat64_t'
|-TypedefDecl 0x125126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x125126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1251267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x125126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1251268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x125126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x125126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1251269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x125126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x125126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x125126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x125126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x125126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x125126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125056090 '__clang_svint8x3_t'
|-TypedefDecl 0x125126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1250560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x125126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1250560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x125126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1250560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x125126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x125126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x125126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x125126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x125126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x125127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1250561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x125127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1250561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1251278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1250561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x125127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1251279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125056230 '__clang_svint16x4_t'
|-TypedefDecl 0x125127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125056250 '__clang_svint32x4_t'
|-TypedefDecl 0x125127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125056270 '__clang_svint64x4_t'
|-TypedefDecl 0x125127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x125127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1250562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x125127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1250562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x125127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1250562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x125127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x125127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x125127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x125127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x125127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125056390 '__SVBool_t'
|-TypedefDecl 0x125127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1250563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x125127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1250563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x125127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1250563f0 '__SVCount_t'
|-TypedefDecl 0x125127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x125127fb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-TypedefDecl 0x125128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x125127fb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-FunctionDecl 0x1251283d8 <dataset_diviso_filec/func17635_vuln.c:1:1, line:57:1> line:1:1 invalid rdp_in_unistr 'int (int, int, char **, int *)'
| |-ParmVarDecl 0x1251280f0 <col:15, col:22> col:22 referenced invalid s 'int'
| |-ParmVarDecl 0x125128170 <col:25, col:29> col:29 used in_len 'int'
| |-ParmVarDecl 0x125128228 <col:37, col:44> col:44 used string 'char **'
| |-ParmVarDecl 0x1251282d8 <col:52, col:61> col:61 invalid str_size 'int *'
| `-CompoundStmt 0x125143ea8 <line:2:1, line:57:1>
|   |-DeclStmt 0x125128520 <line:3:2, col:35>
|   | `-VarDecl 0x1251284b8 <col:2, col:17> col:17 referenced invalid icv_utf16_to_local 'int' static
|   |-BinaryOperator 0x125128608 <line:4:2, col:14> '<dependent type>' contains-errors ','
|   | |-UnaryExprOrTypeTraitExpr 0x1251285c8 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x1251285a8 <col:9> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x1251285e8 <col:14> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x125128740 <line:5:2, col:18>
|   | |-VarDecl 0x125128640 <col:2, col:8> col:8 used pin 'char *'
|   | `-VarDecl 0x1251286c0 <col:2, col:14> col:14 used pout 'char *'
|   |-IfStmt 0x1251424d8 <line:8:2, line:17:2>
|   | |-UnaryOperator 0x125128790 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x125128778 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x125128758 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1251424b8 <line:9:2, line:17:2>
|   |   |-BinaryOperator 0x125141a70 <line:10:3, col:63> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x1251287c8 <col:3> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x1251287a8 <col:3> 'int' lvalue Var 0x1251284b8 'icv_utf16_to_local' 'int'
|   |   | `-CallExpr 0x125141a40 <col:24, col:63> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x125141960 <col:24> 'int ()' Function 0x1251418a8 'iconv_open' 'int ()'
|   |   |   |-RecoveryExpr 0x125141a00 <col:35> '<dependent type>' contains-errors lvalue
|   |   |   `-RecoveryExpr 0x125141a20 <col:47> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x125142498 <line:11:3, line:16:3>
|   |     |-BinaryOperator 0x125141b78 <line:11:7, col:41> 'int' contains-errors '=='
|   |     | |-RecoveryExpr 0x125141a90 <col:7> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x125141b48 <col:29, col:41> '<dependent type>' contains-errors lvalue
|   |     |   |-ParenExpr 0x125141b08 <col:29, col:37> '<overloaded function type>' lvalue
|   |     |   | `-UnresolvedLookupExpr 0x125141ac8 <col:30> '<overloaded function type>' lvalue (no ADL) = 'iconv_t' empty
|   |     |   `-IntegerLiteral 0x125141b28 <col:41> 'int' 1
|   |     `-CompoundStmt 0x125142478 <line:12:3, line:16:3>
|   |       |-CallExpr 0x125141e50 <line:13:4, line:14:59> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x125141c78 <line:13:4> 'int ()' Function 0x125141bc0 'logger' 'int ()'
|   |       | |-RecoveryExpr 0x125141dd0 <col:11> '<dependent type>' contains-errors lvalue
|   |       | |-RecoveryExpr 0x125141df0 <col:21> '<dependent type>' contains-errors lvalue
|   |       | |-StringLiteral 0x125141d10 <col:28> 'char[4]' lvalue "STR"
|   |       | |-RecoveryExpr 0x125141e10 <line:14:11> '<dependent type>' contains-errors lvalue
|   |       | |-RecoveryExpr 0x125141e30 <col:29> '<dependent type>' contains-errors lvalue
|   |       | `-RecoveryExpr 0x125141d60 <col:41> '<dependent type>' contains-errors lvalue
|   |       `-CallExpr 0x125142458 <line:15:4, col:10> 'void'
|   |         `-ImplicitCastExpr 0x125142440 <col:4> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |           `-DeclRefExpr 0x1251423f0 <col:4> 'void (void) __attribute__((noreturn))' Function 0x1251422f0 'abort' 'void (void) __attribute__((noreturn))'
|   |-IfStmt 0x1251431b0 <line:20:2, line:25:2>
|   | |-BinaryOperator 0x125142600 <line:20:6, col:17> 'int' contains-errors '=='
|   | | |-UnaryOperator 0x1251425c8 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x1251425b0 <col:7> 'char **' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1251424f8 <col:7> 'char **' lvalue ParmVar 0x125128228 'string' 'char **'
|   | | `-RecoveryExpr 0x1251425e0 <col:17> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x125143190 <line:21:2, line:25:2>
|   |   |-BinaryOperator 0x125143088 <line:23:3, col:31> 'char *' '='
|   |   | |-UnaryOperator 0x125142658 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x125142640 <col:4> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x125142620 <col:4> 'char **' lvalue ParmVar 0x125128228 'string' 'char **'
|   |   | `-ImplicitCastExpr 0x125143070 <col:13, col:31> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x125143048 <col:13, col:31> 'int'
|   |   |     |-ImplicitCastExpr 0x125143030 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x125142750 <col:13> 'int ()' Function 0x125142698 'xmalloc' 'int ()'
|   |   |     `-BinaryOperator 0x1251427c8 <col:21, col:30> 'int' '*'
|   |   |       |-ImplicitCastExpr 0x1251427b0 <col:21> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x125142770 <col:21> 'int' lvalue ParmVar 0x125128170 'in_len' 'int'
|   |   |       `-IntegerLiteral 0x125142790 <col:30> 'int' 2
|   |   `-BinaryOperator 0x125143170 <line:24:3, col:24> '<dependent type>' contains-errors '='
|   |     |-UnaryOperator 0x1251430e0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x1251430c8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   `-RecoveryExpr 0x1251430a8 <col:4> '<dependent type>' contains-errors lvalue
|   |     `-BinaryOperator 0x125143150 <col:15, col:24> 'int' '*'
|   |       |-ImplicitCastExpr 0x125143138 <col:15> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1251430f8 <col:15> 'int' lvalue ParmVar 0x125128170 'in_len' 'int'
|   |       `-IntegerLiteral 0x125143118 <col:24> 'int' 2
|   |-BinaryOperator 0x125143348 <line:29:2, col:20> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x125143280 <col:2> 'char *' lvalue Var 0x125128640 'pin' 'char *'
|   | `-CStyleCastExpr 0x125143320 <col:8, col:20> 'char *' contains-errors <Dependent>
|   |   `-CXXDependentScopeMemberExpr 0x1251432c0 <col:17, col:20> '<dependent type>' contains-errors lvalue ->p
|   |     `-RecoveryExpr 0x1251432a0 <col:17> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1251433f0 <line:30:2, col:10> 'char *' '='
|   | |-DeclRefExpr 0x125143368 <col:2> 'char *' lvalue Var 0x1251286c0 'pout' 'char *'
|   | `-ImplicitCastExpr 0x1251433d8 <col:9, col:10> 'char *' <LValueToRValue>
|   |   `-UnaryOperator 0x1251433c0 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1251433a8 <col:10> 'char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x125143388 <col:10> 'char **' lvalue ParmVar 0x125128228 'string' 'char **'
|   |-IfStmt 0x125143b48 <line:32:2, line:48:2>
|   | |-RecoveryExpr 0x125143600 <line:32:6, col:81> '_Bool' contains-errors
|   | `-CompoundStmt 0x125143b28 <line:33:2, line:48:2>
|   |   |-IfStmt 0x125143aa0 <line:34:3, line:46:3> has_else
|   |   | |-RecoveryExpr 0x125143620 <line:34:7, col:16> '_Bool' contains-errors
|   |   | |-CompoundStmt 0x125143680 <line:35:3, line:38:3>
|   |   | `-CompoundStmt 0x125143a80 <line:40:3, line:46:3>
|   |   |   |-CallExpr 0x125143948 <line:43:4, col:16> 'void'
|   |   |   | |-ImplicitCastExpr 0x125143930 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x125143878 <col:4> 'void (void *)' Function 0x125143708 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x125143988 <col:9, col:10> 'void *' <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x125143970 <col:9, col:10> 'char *' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x1251438d0 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   |   |   |       `-ImplicitCastExpr 0x1251438b8 <col:10> 'char **' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x125143898 <col:10> 'char **' lvalue ParmVar 0x125128228 'string' 'char **'
|   |   |   `-BinaryOperator 0x125143a60 <line:45:4, col:16> '<dependent type>' contains-errors '='
|   |   |     |-UnaryOperator 0x125143a28 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x125143a10 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     |   `-RecoveryExpr 0x1251439f0 <col:5> '<dependent type>' contains-errors lvalue
|   |   |     `-IntegerLiteral 0x125143a40 <col:16> 'int' 0
|   |   `-CallExpr 0x125143b08 <line:47:3, col:9> 'void'
|   |     `-ImplicitCastExpr 0x125143af0 <col:3> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x125143ad0 <col:3> 'void (void) __attribute__((noreturn))' Function 0x1251422f0 'abort' 'void (void) __attribute__((noreturn))'
|   |-CompoundAssignOperator 0x125143c18 <line:51:2, col:10> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x125143bb0 <col:2, col:5> '<dependent type>' contains-errors lvalue ->p
|   | | `-RecoveryExpr 0x125143b88 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x125143b68 <col:2> 'int' lvalue ParmVar 0x1251280f0 's' 'int'
|   | `-DeclRefExpr 0x125143bf8 <col:10> 'int' lvalue ParmVar 0x125128170 'in_len' 'int'
|   |-BinaryOperator 0x125143cd0 <line:53:2, col:10> 'char' '='
|   | |-UnaryOperator 0x125143c80 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x125143c68 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x125143c48 <col:3> 'char *' lvalue Var 0x1251286c0 'pout' 'char *'
|   | `-ImplicitCastExpr 0x125143cb8 <col:10> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x125143c98 <col:10> 'int' 0
|   `-IfStmt 0x125143e88 <line:55:2, line:56:23>
|     |-ImplicitCastExpr 0x125143d40 <line:55:6, col:7> 'char *' <LValueToRValue>
|     | `-UnaryOperator 0x125143d28 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow
|     |   `-ImplicitCastExpr 0x125143d10 <col:7> 'char **' <LValueToRValue>
|     |     `-DeclRefExpr 0x125143cf0 <col:7> 'char **' lvalue ParmVar 0x125128228 'string' 'char **'
|     `-BinaryOperator 0x125143e68 <line:56:3, col:23> '<dependent type>' contains-errors '='
|       |-UnaryOperator 0x125143d90 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|       | `-ImplicitCastExpr 0x125143d78 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|       |   `-RecoveryExpr 0x125143d58 <col:4> '<dependent type>' contains-errors lvalue
|       `-BinaryOperator 0x125143e48 <col:15, col:23> 'long' '-'
|         |-ImplicitCastExpr 0x125143e18 <col:15> 'char *' <LValueToRValue>
|         | `-DeclRefExpr 0x125143da8 <col:15> 'char *' lvalue Var 0x1251286c0 'pout' 'char *'
|         `-ImplicitCastExpr 0x125143e30 <col:22, col:23> 'char *' <LValueToRValue>
|           `-UnaryOperator 0x125143e00 <col:22, col:23> 'char *' lvalue prefix '*' cannot overflow
|             `-ImplicitCastExpr 0x125143de8 <col:23> 'char **' <LValueToRValue>
|               `-DeclRefExpr 0x125143dc8 <col:23> 'char **' lvalue ParmVar 0x125128228 'string' 'char **'
|-FunctionDecl 0x1251422f0 <line:15:4> col:4 implicit used abort 'void (void) __attribute__((noreturn))' extern
| `-BuiltinAttr 0x125142398 <<invalid sloc>> Implicit 867
`-FunctionDecl 0x125143708 <line:43:4> col:4 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x125143808 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1251437b0 <<invalid sloc>> Implicit 873
