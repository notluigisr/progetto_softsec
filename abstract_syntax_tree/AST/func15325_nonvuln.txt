TranslationUnitDecl 0x142855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1428564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x142855bd0 '__int128'
|-TypedefDecl 0x142856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x142855bf0 'unsigned __int128'
|-TypedefDecl 0x142926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x142926000 'struct __NSConstantString_tag'
|   `-Record 0x142856580 '__NSConstantString_tag'
|-TypedefDecl 0x142926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x142855d90 '__SVInt8_t'
|-TypedefDecl 0x142926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x142855db0 '__SVInt16_t'
|-TypedefDecl 0x142926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x142855dd0 '__SVInt32_t'
|-TypedefDecl 0x1429263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x142855df0 '__SVInt64_t'
|-TypedefDecl 0x142926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x142855e10 '__SVUint8_t'
|-TypedefDecl 0x1429264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x142855e30 '__SVUint16_t'
|-TypedefDecl 0x142926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x142855e50 '__SVUint32_t'
|-TypedefDecl 0x142926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x142855e70 '__SVUint64_t'
|-TypedefDecl 0x1429265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x142855e90 '__SVFloat16_t'
|-TypedefDecl 0x142926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x142855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1429266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x142855ed0 '__SVFloat64_t'
|-TypedefDecl 0x142926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x142855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x142926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x142855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1429267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x142855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x142926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x142855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1429268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x142855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x142926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x142855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x142926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x142855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1429269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x142855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x142926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x142855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x142926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x142856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x142926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x142856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x142926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x142856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x142926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x142856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x142926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x142856090 '__clang_svint8x3_t'
|-TypedefDecl 0x142926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1428560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x142926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1428560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x142926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1428560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x142926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x142856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x142926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x142856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x142926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x142856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x142926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x142856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x142926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x142856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x142927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1428561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x142927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1428561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1429278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1428561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x142927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x142856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1429279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x142856230 '__clang_svint16x4_t'
|-TypedefDecl 0x142927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x142856250 '__clang_svint32x4_t'
|-TypedefDecl 0x142927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x142856270 '__clang_svint64x4_t'
|-TypedefDecl 0x142927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x142856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x142927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1428562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x142927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1428562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x142927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1428562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x142927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x142856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x142927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x142856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x142927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x142856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x142927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x142856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x142927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x142856390 '__SVBool_t'
|-TypedefDecl 0x142927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1428563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x142927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1428563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x142927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1428563f0 '__SVCount_t'
|-TypedefDecl 0x142927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x142927fb0 'char *'
|   `-BuiltinType 0x1428556b0 'char'
|-TypedefDecl 0x142928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x142927fb0 'char *'
|   `-BuiltinType 0x1428556b0 'char'
`-FunctionDecl 0x142928288 <dataset_diviso_filec/func15325_nonvuln.c:1:1, line:30:1> line:1:5 invalid hashTypeDelete 'int (int *, int)'
  |-ParmVarDecl 0x142928128 <col:20, col:26> col:26 referenced invalid o 'int *'
  |-ParmVarDecl 0x1429281a8 <col:29, col:33> col:33 invalid field 'int'
  `-CompoundStmt 0x1429448f8 <col:40, line:30:1>
    |-DeclStmt 0x1429283e0 <line:2:5, col:20>
    | `-VarDecl 0x142928358 <col:5, col:19> col:9 used deleted 'int' cinit
    |   `-IntegerLiteral 0x1429283c0 <col:19> 'int' 0
    |-IfStmt 0x142944880 <line:4:5, line:28:5> has_else
    | |-BinaryOperator 0x1429284b8 <line:4:9, col:24> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x142928418 <col:9, col:12> '<dependent type>' contains-errors lvalue ->encoding
    | | | `-RecoveryExpr 0x1429283f8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x142928498 <col:24> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x142944000 <col:46, line:18:5>
    | | |-DeclStmt 0x142928628 <line:5:9, col:33>
    | | | |-VarDecl 0x142928528 <col:9, col:24> col:24 used zl 'unsigned char *'
    | | | `-VarDecl 0x1429285a8 <col:9, col:29> col:29 used fptr 'unsigned char *'
    | | |-BinaryOperator 0x1429286c8 <line:7:9, col:17> 'unsigned char *' contains-errors '='
    | | | |-DeclRefExpr 0x142928640 <col:9> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'
    | | | `-CXXDependentScopeMemberExpr 0x142928680 <col:14, col:17> '<dependent type>' contains-errors lvalue ->ptr
    | | |   `-RecoveryExpr 0x142928660 <col:14> '<dependent type>' contains-errors lvalue
    | | |-BinaryOperator 0x1429419b0 <line:8:9, col:45> 'unsigned char *' contains-errors '='
    | | | |-DeclRefExpr 0x1429286e8 <col:9> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'
    | | | `-CallExpr 0x142941980 <col:16, col:45> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x1429418b8 <col:16> 'int ()' Function 0x142941800 'ziplistIndex' 'int ()'
    | | |   |-DeclRefExpr 0x1429418d8 <col:29> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'
    | | |   `-RecoveryExpr 0x142941960 <col:33> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x1429427e0 <line:9:9, line:17:9>
    | |   |-BinaryOperator 0x142941a48 <line:9:13, col:21> 'int' contains-errors '!='
    | |   | |-DeclRefExpr 0x1429419d0 <col:13> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'
    | |   | `-RecoveryExpr 0x142941a28 <col:21> '<dependent type>' contains-errors lvalue
    | |   `-CompoundStmt 0x1429427c0 <col:27, line:17:9>
    | |     |-BinaryOperator 0x142941db0 <line:10:13, col:77> 'unsigned char *' contains-errors '='
    | |     | |-DeclRefExpr 0x142941a68 <col:13> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'
    | |     | `-CallExpr 0x142941d70 <col:20, col:77> '<dependent type>' contains-errors
    | |     |   |-DeclRefExpr 0x142941b68 <col:20> 'int ()' Function 0x142941ab0 'ziplistFind' 'int ()'
    | |     |   |-DeclRefExpr 0x142941b88 <col:32> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'
    | |     |   |-CStyleCastExpr 0x142941be0 <col:38, col:54> 'unsigned char *' contains-errors <Dependent>
    | |     |   | `-RecoveryExpr 0x142941ba8 <col:54> '<dependent type>' contains-errors lvalue
    | |     |   |-CallExpr 0x142941d28 <col:61, col:73> '<dependent type>' contains-errors
    | |     |   | |-DeclRefExpr 0x142941ce8 <col:61> 'int ()' Function 0x142941c30 'sdslen' 'int ()'
    | |     |   | `-RecoveryExpr 0x142941d08 <col:68> '<dependent type>' contains-errors lvalue
    | |     |   `-IntegerLiteral 0x142941d50 <col:76> 'int' 1
    | |     `-IfStmt 0x1429427a0 <line:11:13, line:16:13>
    | |       |-BinaryOperator 0x142941e48 <line:11:17, col:25> 'int' contains-errors '!='
    | |       | |-DeclRefExpr 0x142941dd0 <col:17> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'
    | |       | `-RecoveryExpr 0x142941e28 <col:25> '<dependent type>' contains-errors lvalue
    | |       `-CompoundStmt 0x142942770 <col:31, line:16:13>
    | |         |-BinaryOperator 0x1429424f0 <line:12:17, col:44> 'unsigned char *' '='
    | |         | |-DeclRefExpr 0x142941e68 <col:17> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'
    | |         | `-ImplicitCastExpr 0x1429420b0 <col:22, col:44> 'unsigned char *' <IntegralToPointer>
    | |         |   `-CallExpr 0x142942068 <col:22, col:44> 'int'
    | |         |     |-ImplicitCastExpr 0x142942050 <col:22> 'int (*)()' <FunctionToPointerDecay>
    | |         |     | `-DeclRefExpr 0x142941f68 <col:22> 'int ()' Function 0x142941eb0 'ziplistDelete' 'int ()'
    | |         |     |-ImplicitCastExpr 0x142942098 <col:36> 'unsigned char *' <LValueToRValue>
    | |         |     | `-DeclRefExpr 0x142941f88 <col:36> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'
    | |         |     `-UnaryOperator 0x142942000 <col:39, col:40> 'unsigned char **' prefix '&' cannot overflow
    | |         |       `-DeclRefExpr 0x142941fa8 <col:40> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'
    | |         |-BinaryOperator 0x142942620 <line:13:17, col:44> 'unsigned char *' '='
    | |         | |-DeclRefExpr 0x142942510 <col:17> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'
    | |         | `-ImplicitCastExpr 0x142942608 <col:22, col:44> 'unsigned char *' <IntegralToPointer>
    | |         |   `-CallExpr 0x1429425c0 <col:22, col:44> 'int'
    | |         |     |-ImplicitCastExpr 0x1429425a8 <col:22> 'int (*)()' <FunctionToPointerDecay>
    | |         |     | `-DeclRefExpr 0x142942530 <col:22> 'int ()' Function 0x142941eb0 'ziplistDelete' 'int ()'
    | |         |     |-ImplicitCastExpr 0x1429425f0 <col:36> 'unsigned char *' <LValueToRValue>
    | |         |     | `-DeclRefExpr 0x142942550 <col:36> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'
    | |         |     `-UnaryOperator 0x142942590 <col:39, col:40> 'unsigned char **' prefix '&' cannot overflow
    | |         |       `-DeclRefExpr 0x142942570 <col:40> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'
    | |         |-BinaryOperator 0x1429426f0 <line:14:17, col:26> '<dependent type>' contains-errors '='
    | |         | |-CXXDependentScopeMemberExpr 0x142942688 <col:17, col:20> '<dependent type>' contains-errors lvalue ->ptr
    | |         | | `-RecoveryExpr 0x142942660 <col:17> '<dependent type>' contains-errors lvalue
    | |         | |   `-DeclRefExpr 0x142942640 <col:17> 'int *' lvalue ParmVar 0x142928128 'o' 'int *'
    | |         | `-DeclRefExpr 0x1429426d0 <col:26> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'
    | |         `-BinaryOperator 0x142942750 <line:15:17, col:27> 'int' '='
    | |           |-DeclRefExpr 0x142942710 <col:17> 'int' lvalue Var 0x142928358 'deleted' 'int'
    | |           `-IntegerLiteral 0x142942730 <col:27> 'int' 1
    | `-IfStmt 0x142944850 <line:18:12, line:28:5> has_else
    |   |-BinaryOperator 0x1429440f0 <line:18:16, col:31> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x142944050 <col:16, col:19> '<dependent type>' contains-errors lvalue ->encoding
    |   | | `-RecoveryExpr 0x142944030 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1429440d0 <col:31> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x142944660 <col:48, line:26:5>
    |   | `-IfStmt 0x142944640 <line:19:9, line:24:9>
    |   |   |-RecoveryExpr 0x142944260 <line:19:13, col:49> '_Bool' contains-errors
    |   |   `-CompoundStmt 0x142944620 <col:55, line:24:9>
    |   |     |-BinaryOperator 0x1429442c0 <line:20:13, col:23> 'int' '='
    |   |     | |-DeclRefExpr 0x142944280 <col:13> 'int' lvalue Var 0x142928358 'deleted' 'int'
    |   |     | `-IntegerLiteral 0x1429442a0 <col:23> 'int' 1
    |   |     `-IfStmt 0x142944600 <line:23:13, col:57>
    |   |       |-CallExpr 0x142944448 <col:17, col:37> '<dependent type>' contains-errors
    |   |       | |-DeclRefExpr 0x1429443c0 <col:17> 'int ()' Function 0x142944308 'htNeedsResize' 'int ()'
    |   |       | `-CXXDependentScopeMemberExpr 0x142944400 <col:31, col:34> '<dependent type>' contains-errors lvalue ->ptr
    |   |       |   `-RecoveryExpr 0x1429443e0 <col:31> '<dependent type>' contains-errors lvalue
    |   |       `-CallExpr 0x1429445d8 <col:40, col:57> '<dependent type>' contains-errors
    |   |         |-DeclRefExpr 0x142944550 <col:40> 'int ()' Function 0x142944498 'dictResize' 'int ()'
    |   |         `-CXXDependentScopeMemberExpr 0x142944590 <col:51, col:54> '<dependent type>' contains-errors lvalue ->ptr
    |   |           `-RecoveryExpr 0x142944570 <col:51> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x142944838 <line:26:12, line:28:5>
    |     `-CallExpr 0x1429447f8 <line:27:9, col:26> 'int'
    |       |-ImplicitCastExpr 0x1429447e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x142944758 <col:9> 'int ()' Function 0x1429446a0 'serverPanic' 'int ()'
    |       `-ImplicitCastExpr 0x142944820 <col:21> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x1429447c0 <col:21> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x1429448e8 <line:29:5, col:12>
      `-ImplicitCastExpr 0x1429448d0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1429448b0 <col:12> 'int' lvalue Var 0x142928358 'deleted' 'int'
