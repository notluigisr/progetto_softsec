TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x126926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x126926000 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x126926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x126926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x126926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x1269263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x126926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x1269264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x126926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x126926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x1269265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x126926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1269266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x126926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x126926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1269267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x126926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1269268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x126926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x126926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1269269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x126926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x126926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x126926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x126926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x126926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x126926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x126926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x126926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x126926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x126926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x126926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x126926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x126926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x126926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x126927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x126927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1269278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x126927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1269279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x126927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x126927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x126927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x126927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x126927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x126927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x126927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x126927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x126927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x126927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x126927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x126927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x126927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x126927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x126927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x126927fb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x126928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x126927fb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-FunctionDecl 0x126928318 <dataset_diviso_filec/func13634_vuln.c:1:1, line:19:1> line:1:1 invalid same_color 'int (int *, int *, int)'
| |-ParmVarDecl 0x126928128 <col:12, col:32> col:32 invalid oldcap 'int *'
| |-ParmVarDecl 0x1269281a8 <col:40, col:60> col:60 invalid newcap 'int *'
| |-ParmVarDecl 0x126928228 <col:68, col:72> col:72 used limit 'int'
| `-CompoundStmt 0x126943118 <line:2:1, line:19:1>
|   |-IfStmt 0x1269284b0 <line:4:5, line:5:10>
|   | |-BinaryOperator 0x126928430 <line:4:9, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x126928418 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1269283d8 <col:9> 'int' lvalue ParmVar 0x126928228 'limit' 'int'
|   | | `-IntegerLiteral 0x1269283f8 <col:17> 'int' 16
|   | `-BinaryOperator 0x126928490 <line:5:2, col:10> 'int' '='
|   |   |-DeclRefExpr 0x126928450 <col:2> 'int' lvalue ParmVar 0x126928228 'limit' 'int'
|   |   `-IntegerLiteral 0x126928470 <col:10> 'int' 16
|   |-IfStmt 0x1269430b0 <line:6:5, line:17:5>
|   | |-BinaryOperator 0x126928528 <line:6:9, col:18> 'int' '>='
|   | | |-ImplicitCastExpr 0x126928510 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1269284d0 <col:9> 'int' lvalue ParmVar 0x126928228 'limit' 'int'
|   | | `-IntegerLiteral 0x1269284f0 <col:18> 'int' 8
|   | `-CompoundStmt 0x126943088 <col:21, line:17:5>
|   |   |-DeclStmt 0x1269285c8 <line:7:2, col:7>
|   |   | `-VarDecl 0x126928560 <col:2, col:6> col:6 used n 'int'
|   |   |-DeclStmt 0x126928660 <line:8:2, col:10>
|   |   | `-VarDecl 0x1269285f8 <col:2, col:6> col:6 used same 'int'
|   |   `-ForStmt 0x126942fa0 <line:9:2, line:15:2>
|   |     |-BinaryOperator 0x1269286f8 <line:9:7, col:18> 'int' '='
|   |     | |-DeclRefExpr 0x126928678 <col:7> 'int' lvalue Var 0x126928560 'n' 'int'
|   |     | `-BinaryOperator 0x1269286d8 <col:11, col:18> 'int' '='
|   |     |   |-DeclRefExpr 0x126928698 <col:11> 'int' lvalue Var 0x1269285f8 'same' 'int'
|   |     |   `-IntegerLiteral 0x1269286b8 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x126928788 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x126928758 <col:21> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x126928718 <col:21> 'int' lvalue Var 0x126928560 'n' 'int'
|   |     | `-ImplicitCastExpr 0x126928770 <col:25> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x126928738 <col:25> 'int' lvalue ParmVar 0x126928228 'limit' 'int'
|   |     |-UnaryOperator 0x1269287c8 <col:32, col:34> 'int' prefix '++'
|   |     | `-DeclRefExpr 0x1269287a8 <col:34> 'int' lvalue Var 0x126928560 'n' 'int'
|   |     `-CompoundStmt 0x126942f68 <col:37, line:15:2>
|   |       |-DeclStmt 0x126942078 <line:10:6, col:49>
|   |       | `-VarDecl 0x126941800 <col:6, col:48> col:12 used oldvalue 'char *' cinit
|   |       |   `-CallExpr 0x126942050 <col:23, col:48> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x126941e40 <col:23> 'char *(const char *)' Function 0x126941cd0 'strdup' 'char *(const char *)'
|   |       |     `-CallExpr 0x126942020 <col:30, col:47> '<dependent type>' contains-errors
|   |       |       |-DeclRefExpr 0x126941fc0 <col:30> 'int ()' Function 0x126941f08 'TPARM_1' 'int ()'
|   |       |       |-RecoveryExpr 0x126941fe0 <col:38> '<dependent type>' contains-errors lvalue
|   |       |       `-DeclRefExpr 0x126942000 <col:46> 'int' lvalue Var 0x126928560 'n' 'int'
|   |       |-DeclStmt 0x1269421e8 <line:11:6, col:49>
|   |       | `-VarDecl 0x1269420a8 <col:6, col:48> col:12 used newvalue 'char *' cinit
|   |       |   `-CallExpr 0x1269421c0 <col:23, col:48> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x126942110 <col:23> 'char *(const char *)' Function 0x126941cd0 'strdup' 'char *(const char *)'
|   |       |     `-CallExpr 0x126942190 <col:30, col:47> '<dependent type>' contains-errors
|   |       |       |-DeclRefExpr 0x126942130 <col:30> 'int ()' Function 0x126941f08 'TPARM_1' 'int ()'
|   |       |       |-RecoveryExpr 0x126942150 <col:38> '<dependent type>' contains-errors lvalue
|   |       |       `-DeclRefExpr 0x126942170 <col:46> 'int' lvalue Var 0x126928560 'n' 'int'
|   |       |-CompoundAssignOperator 0x1269425c0 <line:12:6, col:40> 'int' contains-errors '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x126942200 <col:6> 'int' lvalue Var 0x1269285f8 'same' 'int'
|   |       | `-UnaryOperator 0x1269425a8 <col:14, col:40> 'int' contains-errors prefix '!' cannot overflow
|   |       |   `-CallExpr 0x126942518 <col:15, col:40> 'int' contains-errors
|   |       |     |-ImplicitCastExpr 0x126942500 <col:15> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x126942440 <col:15> 'int (const char *, const char *)' Function 0x126942260 'strcmp' 'int (const char *, const char *)'
|   |       |     |-ImplicitCastExpr 0x126942560 <col:22> 'const char *' contains-errors <NoOp>
|   |       |     | `-ImplicitCastExpr 0x126942548 <col:22> 'char *' contains-errors <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x126942460 <col:22> 'char *' contains-errors lvalue Var 0x126941800 'oldvalue' 'char *'
|   |       |     `-ImplicitCastExpr 0x126942590 <col:32> 'const char *' contains-errors <NoOp>
|   |       |       `-ImplicitCastExpr 0x126942578 <col:32> 'char *' contains-errors <LValueToRValue>
|   |       |         `-DeclRefExpr 0x126942480 <col:32> 'char *' contains-errors lvalue Var 0x1269420a8 'newvalue' 'char *'
|   |       |-CallExpr 0x126942e48 <line:13:6, col:19> 'void' contains-errors
|   |       | |-ImplicitCastExpr 0x126942e30 <col:6> 'void (*)(void *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x126942798 <col:6> 'void (void *)' Function 0x126942628 'free' 'void (void *)'
|   |       | `-ImplicitCastExpr 0x126942e88 <col:11> 'void *' contains-errors <BitCast>
|   |       |   `-ImplicitCastExpr 0x126942e70 <col:11> 'char *' contains-errors <LValueToRValue>
|   |       |     `-DeclRefExpr 0x1269427b8 <col:11> 'char *' contains-errors lvalue Var 0x126941800 'oldvalue' 'char *'
|   |       `-CallExpr 0x126942f10 <line:14:6, col:19> 'void' contains-errors
|   |         |-ImplicitCastExpr 0x126942ef8 <col:6> 'void (*)(void *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x126942ea0 <col:6> 'void (void *)' Function 0x126942628 'free' 'void (void *)'
|   |         `-ImplicitCastExpr 0x126942f50 <col:11> 'void *' contains-errors <BitCast>
|   |           `-ImplicitCastExpr 0x126942f38 <col:11> 'char *' contains-errors <LValueToRValue>
|   |             `-DeclRefExpr 0x126942ec0 <col:11> 'char *' contains-errors lvalue Var 0x1269420a8 'newvalue' 'char *'
|   `-ReturnStmt 0x126943108 <line:18:5, col:12>
|     `-RecoveryExpr 0x1269430e8 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x126941cd0 <line:10:23> col:23 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x126941dd0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x126941d78 <<invalid sloc>> Implicit 950
|-FunctionDecl 0x126942260 <line:12:15> col:15 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x126942360 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1269423c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x126942308 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x126942628 <line:13:6> col:6 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x126942728 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1269426d0 <<invalid sloc>> Implicit 873
