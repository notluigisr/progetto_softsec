TranslationUnitDecl 0x128855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128855bd0 '__int128'
|-TypedefDecl 0x128856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128855bf0 'unsigned __int128'
|-TypedefDecl 0x128926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128926000 'struct __NSConstantString_tag'
|   `-Record 0x128856580 '__NSConstantString_tag'
|-TypedefDecl 0x128926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128855d90 '__SVInt8_t'
|-TypedefDecl 0x128926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128855db0 '__SVInt16_t'
|-TypedefDecl 0x128926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128855dd0 '__SVInt32_t'
|-TypedefDecl 0x1289263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128855df0 '__SVInt64_t'
|-TypedefDecl 0x128926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128855e10 '__SVUint8_t'
|-TypedefDecl 0x1289264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128855e30 '__SVUint16_t'
|-TypedefDecl 0x128926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128855e50 '__SVUint32_t'
|-TypedefDecl 0x128926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128855e70 '__SVUint64_t'
|-TypedefDecl 0x1289265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128855e90 '__SVFloat16_t'
|-TypedefDecl 0x128926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1289266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128855ed0 '__SVFloat64_t'
|-TypedefDecl 0x128926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1289267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1289268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1289269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128856090 '__clang_svint8x3_t'
|-TypedefDecl 0x128926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1288560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1288560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1288560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1288561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1288561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1289278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1288561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1289279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128856230 '__clang_svint16x4_t'
|-TypedefDecl 0x128927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128856250 '__clang_svint32x4_t'
|-TypedefDecl 0x128927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128856270 '__clang_svint64x4_t'
|-TypedefDecl 0x128927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1288562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1288562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1288562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128856390 '__SVBool_t'
|-TypedefDecl 0x128927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1288563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1288563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1288563f0 '__SVCount_t'
|-TypedefDecl 0x128927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128927fb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-TypedefDecl 0x128928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128927fb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-FunctionDecl 0x128928318 <dataset_diviso_filec/func17576_vuln.c:1:1, line:35:1> line:1:1 invalid gnutls_session_get_data 'int (int, void *, int *)'
| |-ParmVarDecl 0x1289280f0 <col:26, col:43> col:43 referenced invalid session 'int'
| |-ParmVarDecl 0x128928170 <line:2:26, col:32> col:32 used session_data 'void *'
| |-ParmVarDecl 0x128928228 <col:46, col:55> col:55 invalid session_data_size 'int *'
| `-CompoundStmt 0x12a809698 <line:3:1, line:35:1>
|   |-DeclStmt 0x128928458 <line:6:3, col:10>
|   | `-VarDecl 0x1289283f0 <col:3, col:7> col:7 used ret 'int'
|   |-IfStmt 0x1289285e0 <line:8:3, line:9:12>
|   | |-BinaryOperator 0x128928578 <line:8:7, col:39> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x1289284d8 <col:7, col:26> '<dependent type>' contains-errors lvalue .resumable
|   | | | `-CXXDependentScopeMemberExpr 0x128928490 <col:7, col:16> '<dependent type>' contains-errors lvalue ->internals
|   | | |   `-RecoveryExpr 0x128928470 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x128928558 <col:39> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1289285d0 <line:9:5, col:12>
|   |   `-RecoveryExpr 0x1289285b0 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1289286b0 <line:11:3, col:19> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x128928648 <col:3, col:12> '<dependent type>' contains-errors lvalue .data
|   | | `-RecoveryExpr 0x128928620 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x128928600 <col:3> 'int' lvalue ParmVar 0x1289280f0 'session' 'int'
|   | `-DeclRefExpr 0x128928690 <col:19> 'void *' lvalue ParmVar 0x128928170 'session_data' 'void *'
|   |-BinaryOperator 0x128941a00 <line:13:3, col:49> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1289286d0 <col:3> 'int' lvalue Var 0x1289283f0 'ret' 'int'
|   | `-CallExpr 0x1289419d0 <col:9, col:49> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1289418b8 <col:9> 'int ()' Function 0x128941800 '_gnutls_session_pack' 'int ()'
|   |   |-RecoveryExpr 0x1289418d8 <col:31> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x1289419b8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x128941998 <col:41> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x128941c70 <line:14:3, line:18:5>
|   | |-BinaryOperator 0x128941a78 <line:14:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x128941a60 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x128941a20 <col:7> 'int' lvalue Var 0x1289283f0 'ret' 'int'
|   | | `-IntegerLiteral 0x128941a40 <col:13> 'int' 0
|   | `-CompoundStmt 0x128941c50 <line:15:5, line:18:5>
|   |   |-CallExpr 0x128941be8 <line:16:7, col:22> 'int'
|   |   | `-ImplicitCastExpr 0x128941bd0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x128941b78 <col:7> 'int ()' Function 0x128941ac0 'gnutls_assert' 'int ()'
|   |   `-ReturnStmt 0x128941c40 <line:17:7, col:14>
|   |     `-ImplicitCastExpr 0x128941c28 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x128941c08 <col:14> 'int' lvalue Var 0x1289283f0 'ret' 'int'
|   |-BinaryOperator 0x128941e48 <line:19:3, col:33> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x128941dc8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x128941db0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x128941c90 <col:4> '<dependent type>' contains-errors lvalue
|   | `-CXXDependentScopeMemberExpr 0x128941e00 <col:24, col:33> '<dependent type>' contains-errors lvalue .size
|   |   `-RecoveryExpr 0x128941de0 <col:24> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x128942130 <line:21:3, line:25:5>
|   | |-BinaryOperator 0x128941ff0 <line:21:7, col:24> 'int' contains-errors '>'
|   | | |-CXXDependentScopeMemberExpr 0x128941f78 <col:7, col:16> '<dependent type>' contains-errors lvalue .size
|   | | | `-RecoveryExpr 0x128941f58 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x128941fd8 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x128941fc0 <col:24> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x128941ec8 <col:24> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x128942110 <line:22:5, line:25:5>
|   |   |-BinaryOperator 0x128942088 <line:23:7, col:13> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x128942010 <col:7> 'int' lvalue Var 0x1289283f0 'ret' 'int'
|   |   | `-RecoveryExpr 0x128942068 <col:13> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x1289420f8 <line:24:7, col:12> 'error' 0x1289420a8
|   |-IfStmt 0x12a8093d8 <line:27:3, line:28:55>
|   | |-BinaryOperator 0x1289421c8 <line:27:7, col:23> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x128942150 <col:7> 'void *' lvalue ParmVar 0x128928170 'session_data' 'void *'
|   | | `-RecoveryExpr 0x1289421a8 <col:23> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x12a8093a0 <line:28:5, col:55> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12a8090e8 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x128942690 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   |-DeclRefExpr 0x12a809108 <col:13> 'void *' lvalue ParmVar 0x128928170 'session_data' 'void *'
|   |   |-CXXDependentScopeMemberExpr 0x12a8092a8 <col:27, col:36> '<dependent type>' contains-errors lvalue .data
|   |   | `-RecoveryExpr 0x12a809288 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x12a809310 <col:42, col:51> '<dependent type>' contains-errors lvalue .size
|   |     `-RecoveryExpr 0x12a8092f0 <col:42> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12a809438 <line:30:3, col:9> 'int' '='
|   | |-DeclRefExpr 0x12a8093f8 <col:3> 'int' lvalue Var 0x1289283f0 'ret' 'int'
|   | `-IntegerLiteral 0x12a809418 <col:9> 'int' 0
|   |-LabelStmt 0x12a809630 <line:32:1, line:33:32> 'error'
|   | `-CallExpr 0x12a809608 <col:3, col:32> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12a809538 <col:3> 'int ()' Function 0x12a809480 '_gnutls_free_datum' 'int ()'
|   |   `-UnaryOperator 0x12a8095f0 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12a8095d0 <col:24> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12a809688 <line:34:3, col:10>
|     `-ImplicitCastExpr 0x12a809670 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12a809650 <col:10> 'int' lvalue Var 0x1289283f0 'ret' 'int'
`-FunctionDecl 0x128942690 <line:28:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x128942790 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12a809000 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12a809068 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x128942738 <<invalid sloc>> Implicit 882
