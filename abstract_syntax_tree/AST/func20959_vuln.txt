TranslationUnitDecl 0x158832408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1588332b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1588329d0 '__int128'
|-TypedefDecl 0x158833328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1588329f0 'unsigned __int128'
|-TypedefDecl 0x158903030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x158902e00 'struct __NSConstantString_tag'
|   `-Record 0x158833380 '__NSConstantString_tag'
|-TypedefDecl 0x158903098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158832b90 '__SVInt8_t'
|-TypedefDecl 0x158903100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158832bb0 '__SVInt16_t'
|-TypedefDecl 0x158903168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158832bd0 '__SVInt32_t'
|-TypedefDecl 0x1589031d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158832bf0 '__SVInt64_t'
|-TypedefDecl 0x158903238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158832c10 '__SVUint8_t'
|-TypedefDecl 0x1589032a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158832c30 '__SVUint16_t'
|-TypedefDecl 0x158903308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158832c50 '__SVUint32_t'
|-TypedefDecl 0x158903370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158832c70 '__SVUint64_t'
|-TypedefDecl 0x1589033d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158832c90 '__SVFloat16_t'
|-TypedefDecl 0x158903440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158832cb0 '__SVFloat32_t'
|-TypedefDecl 0x1589034a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158832cd0 '__SVFloat64_t'
|-TypedefDecl 0x158903510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158832cf0 '__SVBfloat16_t'
|-TypedefDecl 0x158903578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158832d10 '__clang_svint8x2_t'
|-TypedefDecl 0x1589035e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158832d30 '__clang_svint16x2_t'
|-TypedefDecl 0x158903648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158832d50 '__clang_svint32x2_t'
|-TypedefDecl 0x1589036b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158832d70 '__clang_svint64x2_t'
|-TypedefDecl 0x158903718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158832d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x158903780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158832db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1589037e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158832dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x158903850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158832df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1589038b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158832e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x158903920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158832e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x158903988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158832e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1589039f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158832e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x158903a58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158832e90 '__clang_svint8x3_t'
|-TypedefDecl 0x158903ac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x158832eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x158903b28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x158832ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x158903b90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x158832ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x158903bf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158832f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x158903c60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158832f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x158903cc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158832f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x158903d30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158832f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x158903d98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158832f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x158904600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x158832fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x158904668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x158832fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1589046d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x158832ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x158904738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158833010 '__clang_svint8x4_t'
|-TypedefDecl 0x1589047a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158833030 '__clang_svint16x4_t'
|-TypedefDecl 0x158904808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158833050 '__clang_svint32x4_t'
|-TypedefDecl 0x158904870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158833070 '__clang_svint64x4_t'
|-TypedefDecl 0x1589048d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158833090 '__clang_svuint8x4_t'
|-TypedefDecl 0x158904940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1588330b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1589049a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1588330d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x158904a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1588330f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x158904a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158833110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x158904ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158833130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x158904b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158833150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x158904bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158833170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x158904c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158833190 '__SVBool_t'
|-TypedefDecl 0x158904c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1588331b0 '__clang_svboolx2_t'
|-TypedefDecl 0x158904ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1588331d0 '__clang_svboolx4_t'
|-TypedefDecl 0x158904d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1588331f0 '__SVCount_t'
|-TypedefDecl 0x158904df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x158904db0 'char *'
|   `-BuiltinType 0x1588324b0 'char'
|-TypedefDecl 0x158904e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x158904db0 'char *'
|   `-BuiltinType 0x1588324b0 'char'
|-FunctionDecl 0x15891d800 <dataset_diviso_filec/func20959_vuln.c:1:1, line:23:1> line:1:6 dd_get_item_size 'long (struct dump_dir *, const char *)'
| |-ParmVarDecl 0x158905448 <col:23, col:40> col:40 used dd 'struct dump_dir *'
| |-ParmVarDecl 0x1589054c8 <col:44, col:56> col:56 used name 'const char *'
| `-CompoundStmt 0x15891f8f8 <line:2:1, line:23:1>
|   |-IfStmt 0x15891dd08 <line:3:5, line:4:38>
|   | |-UnaryOperator 0x15891daf8 <line:3:9, col:38> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x15891dab8 <col:10, col:38> 'int'
|   | |   |-ImplicitCastExpr 0x15891daa0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x15891da30 <col:10> 'int ()' Function 0x15891d978 'str_is_correct_filename' 'int ()'
|   | |   `-ImplicitCastExpr 0x15891dae0 <col:34> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x15891da50 <col:34> 'const char *' lvalue ParmVar 0x1589054c8 'name' 'const char *'
|   | `-CallExpr 0x15891dca8 <line:4:9, col:38> 'int'
|   |   |-ImplicitCastExpr 0x15891dc90 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15891dbf0 <col:9> 'int ()' Function 0x15891db38 'error_msg_and_die' 'int ()'
|   |   |-ImplicitCastExpr 0x15891dcd8 <col:27> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x15891dc50 <col:27> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x15891dcf0 <col:34> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15891dc70 <col:34> 'const char *' lvalue ParmVar 0x1589054c8 'name' 'const char *'
|   |-DeclStmt 0x15891ddf8 <line:6:5, col:19>
|   | `-VarDecl 0x15891dd40 <col:5, col:18> col:10 used size 'long' cinit
|   |   `-ImplicitCastExpr 0x15891dde0 <col:17, col:18> 'long' <IntegralCast>
|   |     `-UnaryOperator 0x15891ddc8 <col:17, col:18> 'int' prefix '-'
|   |       `-IntegerLiteral 0x15891dda8 <col:18> 'int' 1
|   |-DeclStmt 0x15891e040 <line:7:5, col:57>
|   | `-VarDecl 0x15891de28 <col:5, col:56> col:11 used iname 'char *' cinit
|   |   `-CallExpr 0x15891e010 <col:19, col:56> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15891df70 <col:19> 'int ()' Function 0x15891deb8 'concat_path_file' 'int ()'
|   |     |-RecoveryExpr 0x15891dfc8 <col:36, col:40> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x15891df90 <col:36> 'struct dump_dir *' lvalue ParmVar 0x158905448 'dd' 'struct dump_dir *'
|   |     `-DeclRefExpr 0x15891dff0 <col:52> 'const char *' lvalue ParmVar 0x1589054c8 'name' 'const char *'
|   |-DeclStmt 0x15891e1d8 <line:8:5, col:24>
|   | |-RecordDecl 0x15891e058 <col:5, col:12> col:12 struct stat
|   | `-VarDecl 0x15891e158 <col:5, col:17> col:17 invalid statbuf 'struct stat'
|   |-IfStmt 0x15891f5d8 <line:10:5, line:18:5> has_else
|   | |-BinaryOperator 0x15891e548 <line:10:9, col:63> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x15891e398 <col:9, col:35> 'int' contains-errors '=='
|   | | | |-CallExpr 0x15891e348 <col:9, col:30> '<dependent type>' contains-errors
|   | | | | |-DeclRefExpr 0x15891e2d0 <col:9> 'int ()' Function 0x15891e218 'lstat' 'int ()'
|   | | | | |-DeclRefExpr 0x15891e2f0 <col:15> 'char *' contains-errors lvalue Var 0x15891de28 'iname' 'char *'
|   | | | | `-UnaryOperator 0x15891e330 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | |   `-RecoveryExpr 0x15891e310 <col:23> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x15891e378 <col:35> 'int' 0
|   | | `-CallExpr 0x15891e520 <col:40, col:63> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x15891e498 <col:40> 'int ()' Function 0x15891e3e0 'S_ISREG' 'int ()'
|   | |   `-CXXDependentScopeMemberExpr 0x15891e4d8 <col:48, col:56> '<dependent type>' contains-errors lvalue .st_mode
|   | |     `-RecoveryExpr 0x15891e4b8 <col:48> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x15891e5f0 <line:11:9, col:24> 'long' contains-errors '='
|   | | |-DeclRefExpr 0x15891e568 <col:9> 'long' lvalue Var 0x15891dd40 'size' 'long'
|   | | `-CXXDependentScopeMemberExpr 0x15891e5a8 <col:16, col:24> '<dependent type>' contains-errors lvalue .st_size
|   | |   `-RecoveryExpr 0x15891e588 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15891f5c0 <line:13:5, line:18:5>
|   |   `-IfStmt 0x15891f590 <line:14:9, line:17:36> has_else
|   |     |-BinaryOperator 0x15891e6a0 <line:14:13, col:22> 'int' contains-errors '=='
|   |     | |-RecoveryExpr 0x15891e660 <col:13> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x15891e680 <col:22> '<dependent type>' contains-errors lvalue
|   |     |-BinaryOperator 0x15891e718 <line:15:13, col:20> 'long' '='
|   |     | |-DeclRefExpr 0x15891e6c0 <col:13> 'long' lvalue Var 0x15891dd40 'size' 'long'
|   |     | `-ImplicitCastExpr 0x15891e700 <col:20> 'long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x15891e6e0 <col:20> 'int' 0
|   |     `-CallExpr 0x15891f530 <line:17:13, col:36> 'int' contains-errors
|   |       |-ImplicitCastExpr 0x15891f518 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x15891f4b8 <col:13> 'int ()' Function 0x15891f400 'perror_msg' 'int ()'
|   |       |-ImplicitCastExpr 0x15891f560 <col:24> 'char *' <ArrayToPointerDecay>
|   |       | `-StringLiteral 0x15891f4d8 <col:24> 'char[4]' lvalue "STR"
|   |       `-ImplicitCastExpr 0x15891f578 <col:31> 'char *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x15891f4f8 <col:31> 'char *' contains-errors lvalue Var 0x15891de28 'iname' 'char *'
|   |-CallExpr 0x15891f858 <line:20:5, col:15> 'void' contains-errors
|   | |-ImplicitCastExpr 0x15891f840 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15891f7b8 <col:5> 'void (void *)' Function 0x15891f648 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x15891f898 <col:10> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x15891f880 <col:10> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x15891f7d8 <col:10> 'char *' contains-errors lvalue Var 0x15891de28 'iname' 'char *'
|   `-ReturnStmt 0x15891f8e8 <line:22:5, col:12>
|     `-ImplicitCastExpr 0x15891f8d0 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x15891f8b0 <col:12> 'long' lvalue Var 0x15891dd40 'size' 'long'
`-FunctionDecl 0x15891f648 <line:20:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x15891f748 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x15891f6f0 <<invalid sloc>> Implicit 873
