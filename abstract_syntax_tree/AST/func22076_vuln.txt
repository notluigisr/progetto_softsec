TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126800 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x120126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x120126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x120126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x120126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x120126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1201272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1201273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1201274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1201275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1201276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1201282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1201283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1201284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1201285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1201286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x1201287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1201287b0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1201287b0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x120128910 <dataset_diviso_filec/func22076_vuln.c:1:1, line:60:1> line:1:13 php_hash_do_hash 'void ()' static
  `-CompoundStmt 0x120146590 <line:2:1, line:60:1>
    |-DeclStmt 0x120128ba0 <line:3:2, col:28>
    | |-VarDecl 0x120128a18 <col:2, col:8> col:8 used algo 'char *'
    | |-VarDecl 0x120128a98 <col:2, col:15> col:15 used data 'char *'
    | `-VarDecl 0x120128b18 <col:2, col:22> col:22 used digest 'char *'
    |-DeclStmt 0x120128cd0 <line:4:2, col:24>
    | |-VarDecl 0x120128bd0 <col:2, col:6> col:6 used algo_len 'int'
    | `-VarDecl 0x120128c50 <col:2, col:16> col:16 used data_len 'int'
    |-DeclStmt 0x120128d80 <line:6:2, col:25>
    | `-VarDecl 0x120128d18 <col:2, col:22> col:22 referenced invalid ops 'const int *'
    |-DeclStmt 0x120128e18 <line:7:2, col:15>
    | `-VarDecl 0x120128db0 <col:2, col:8> col:8 used context 'void *'
    |-IfStmt 0x1201421a8 <line:10:2, line:12:2>
    | |-RecoveryExpr 0x120142160 <line:10:6, col:114> '_Bool' contains-errors
    | `-CompoundStmt 0x120142190 <col:123, line:12:2>
    |   `-ReturnStmt 0x120142180 <line:11:3>
    |-BinaryOperator 0x1201423c8 <line:14:2, col:41> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1201421e8 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1201421c8 <col:2> 'const int *' lvalue Var 0x120128d18 'ops' 'const int *'
    | `-CallExpr 0x120142368 <col:8, col:41> 'int'
    |   |-ImplicitCastExpr 0x120142350 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1201422f0 <col:8> 'int ()' Function 0x120142238 'php_hash_fetch_ops' 'int ()'
    |   |-ImplicitCastExpr 0x120142398 <col:27> 'char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x120142310 <col:27> 'char *' lvalue Var 0x120128a18 'algo' 'char *'
    |   `-ImplicitCastExpr 0x1201423b0 <col:33> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x120142330 <col:33> 'int' lvalue Var 0x120128bd0 'algo_len' 'int'
    |-IfStmt 0x120142560 <line:15:2, line:18:2>
    | |-UnaryOperator 0x120142420 <line:15:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x120142408 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1201423e8 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x120142550 <col:12, line:18:2>
    |-IfStmt 0x120142a20 <line:19:2, line:28:2>
    | |-RecoveryExpr 0x120142598 <line:19:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x120142a00 <col:18, line:28:2>
    |   |-IfStmt 0x120142780 <line:20:3, line:22:3>
    |   | |-CallExpr 0x120142710 <line:20:7, col:37> 'int'
    |   | | |-ImplicitCastExpr 0x1201426f8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x120142698 <col:7> 'int ()' Function 0x1201425e0 'CHECK_NULL_PATH' 'int ()'
    |   | | |-ImplicitCastExpr 0x120142740 <col:23> 'char *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1201426b8 <col:23> 'char *' lvalue Var 0x120128a98 'data' 'char *'
    |   | | `-ImplicitCastExpr 0x120142758 <col:29> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1201426d8 <col:29> 'int' lvalue Var 0x120128c50 'data_len' 'int'
    |   | `-CompoundStmt 0x120142770 <col:40, line:22:3>
    |   `-IfStmt 0x1201429e0 <line:24:3, line:27:3>
    |     |-RecoveryExpr 0x1201429b0 <line:24:7, col:8> '_Bool' contains-errors
    |     `-CompoundStmt 0x1201429d0 <col:16, line:27:3>
    |-BinaryOperator 0x120142bf0 <line:30:2, col:37> 'void *' contains-errors '='
    | |-DeclRefExpr 0x120142a40 <col:2> 'void *' lvalue Var 0x120128db0 'context' 'void *'
    | `-CallExpr 0x120142bc8 <col:12, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120142b40 <col:12> 'int ()' Function 0x120142a88 'emalloc' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x120142b80 <col:20, col:25> '<dependent type>' contains-errors lvalue ->context_size
    |     `-RecoveryExpr 0x120142b60 <col:20> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x120142cc0 <line:31:2, col:24> '<dependent type>' contains-errors
    | |-CXXDependentScopeMemberExpr 0x120142c58 <col:2, col:7> '<dependent type>' contains-errors lvalue ->hash_init
    | | `-RecoveryExpr 0x120142c30 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x120142c10 <col:2> 'const int *' lvalue Var 0x120128d18 'ops' 'const int *'
    | `-DeclRefExpr 0x120142ca0 <col:17> 'void *' lvalue Var 0x120128db0 'context' 'void *'
    |-IfStmt 0x120144568 <line:33:2, line:43:2> has_else
    | |-RecoveryExpr 0x120142ce8 <line:33:6> '_Bool' contains-errors
    | |-CompoundStmt 0x1201443a8 <col:18, line:41:2>
    | | |-DeclStmt 0x120142e18 <line:34:3, col:17>
    | | | `-VarDecl 0x120142db0 <col:3, col:16> col:8 used buf 'char[1024]'
    | | |-DeclStmt 0x120142eb0 <line:35:3, col:8>
    | | | `-VarDecl 0x120142e48 <col:3, col:7> col:7 used n 'int'
    | | `-WhileStmt 0x120144288 <line:37:3, line:39:3>
    | |   |-RecoveryExpr 0x1201440a0 <line:37:10, col:60> '_Bool' contains-errors
    | |   `-CompoundStmt 0x120144270 <col:63, line:39:3>
    | |     `-CallExpr 0x120144238 <line:38:4, col:54> '<dependent type>' contains-errors
    | |       |-CXXDependentScopeMemberExpr 0x120144108 <col:4, col:9> '<dependent type>' contains-errors lvalue ->hash_update
    | |       | `-RecoveryExpr 0x1201440e0 <col:4> '<dependent type>' contains-errors lvalue
    | |       |   `-DeclRefExpr 0x1201440c0 <col:4> 'const int *' lvalue Var 0x120128d18 'ops' 'const int *'
    | |       |-DeclRefExpr 0x120144150 <col:21> 'void *' lvalue Var 0x120128db0 'context' 'void *'
    | |       |-CStyleCastExpr 0x1201441f0 <col:30, col:48> 'unsigned char *' <BitCast>
    | |       | `-ImplicitCastExpr 0x1201441d8 <col:48> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
    | |       |   `-DeclRefExpr 0x120144170 <col:48> 'char[1024]' lvalue Var 0x120142db0 'buf' 'char[1024]'
    | |       `-DeclRefExpr 0x120144218 <col:53> 'int' lvalue Var 0x120142e48 'n' 'int'
    | `-CompoundStmt 0x120144550 <line:41:9, line:43:2>
    |   `-CallExpr 0x120144518 <line:42:3, col:61> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x120144418 <col:3, col:8> '<dependent type>' contains-errors lvalue ->hash_update
    |     | `-RecoveryExpr 0x1201443f0 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x1201443d0 <col:3> 'const int *' lvalue Var 0x120128d18 'ops' 'const int *'
    |     |-DeclRefExpr 0x120144460 <col:20> 'void *' lvalue Var 0x120128db0 'context' 'void *'
    |     |-CStyleCastExpr 0x1201444d0 <col:29, col:47> 'unsigned char *' <BitCast>
    |     | `-ImplicitCastExpr 0x1201444b8 <col:47> 'char *' <LValueToRValue> part_of_explicit_cast
    |     |   `-DeclRefExpr 0x120144480 <col:47> 'char *' lvalue Var 0x120128a98 'data' 'char *'
    |     `-DeclRefExpr 0x1201444f8 <col:53> 'int' lvalue Var 0x120128c50 'data_len' 'int'
    |-BinaryOperator 0x1201446a8 <line:45:2, col:39> 'char *' contains-errors '='
    | |-DeclRefExpr 0x120144598 <col:2> 'char *' lvalue Var 0x120128b18 'digest' 'char *'
    | `-CallExpr 0x120144680 <col:11, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1201445b8 <col:11> 'int ()' Function 0x120142a88 'emalloc' 'int ()'
    |   `-BinaryOperator 0x120144660 <col:19, col:38> '<dependent type>' contains-errors '+'
    |     |-CXXDependentScopeMemberExpr 0x1201445f8 <col:19, col:24> '<dependent type>' contains-errors lvalue ->digest_size
    |     | `-RecoveryExpr 0x1201445d8 <col:19> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x120144640 <col:38> 'int' 1
    |-CallExpr 0x1201447f0 <line:46:2, col:51> '<dependent type>' contains-errors
    | |-CXXDependentScopeMemberExpr 0x120144710 <col:2, col:7> '<dependent type>' contains-errors lvalue ->hash_final
    | | `-RecoveryExpr 0x1201446e8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1201446c8 <col:2> 'const int *' lvalue Var 0x120128d18 'ops' 'const int *'
    | |-CStyleCastExpr 0x1201447a8 <col:18, col:36> 'unsigned char *' <BitCast>
    | | `-ImplicitCastExpr 0x120144790 <col:36> 'char *' <LValueToRValue> part_of_explicit_cast
    | |   `-DeclRefExpr 0x120144758 <col:36> 'char *' lvalue Var 0x120128b18 'digest' 'char *'
    | `-DeclRefExpr 0x1201447d0 <col:44> 'void *' lvalue Var 0x120128db0 'context' 'void *'
    |-CallExpr 0x120144958 <line:47:2, col:15> 'int'
    | |-ImplicitCastExpr 0x120144940 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x120144900 <col:2> 'int ()' Function 0x120144848 'efree' 'int ()'
    | `-ImplicitCastExpr 0x120144980 <col:8> 'void *' <LValueToRValue>
    |   `-DeclRefExpr 0x120144920 <col:8> 'void *' lvalue Var 0x120128db0 'context' 'void *'
    `-IfStmt 0x120146560 <line:49:2, line:59:2> has_else
      |-RecoveryExpr 0x120144998 <line:49:6> '_Bool' contains-errors
      |-CompoundStmt 0x120144cb0 <col:18, line:52:2>
      | |-BinaryOperator 0x120144ab0 <line:50:3, col:30> '<dependent type>' contains-errors '='
      | | |-ArraySubscriptExpr 0x120144a70 <col:3, col:26> '<dependent type>' contains-errors lvalue
      | | | |-ImplicitCastExpr 0x120144a40 <col:3> 'char *' <LValueToRValue>
      | | | | `-DeclRefExpr 0x1201449b8 <col:3> 'char *' lvalue Var 0x120128b18 'digest' 'char *'
      | | | `-ImplicitCastExpr 0x120144a58 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
      | | |   `-CXXDependentScopeMemberExpr 0x1201449f8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->digest_size
      | | |     `-RecoveryExpr 0x1201449d8 <col:10> '<dependent type>' contains-errors lvalue
      | | `-IntegerLiteral 0x120144a90 <col:30> 'int' 0
      | `-CallExpr 0x120144c78 <line:51:3, col:45> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x120144bb0 <col:3> 'int ()' Function 0x120144af8 'RETURN_STRINGL' 'int ()'
      |   |-DeclRefExpr 0x120144bd0 <col:18> 'char *' lvalue Var 0x120128b18 'digest' 'char *'
      |   |-CXXDependentScopeMemberExpr 0x120144c10 <col:26, col:31> '<dependent type>' contains-errors lvalue ->digest_size
      |   | `-RecoveryExpr 0x120144bf0 <col:26> '<dependent type>' contains-errors lvalue
      |   `-IntegerLiteral 0x120144c58 <col:44> 'int' 0
      `-CompoundStmt 0x120146528 <line:52:9, line:59:2>
        |-DeclStmt 0x120144f30 <line:53:3, col:58>
        | `-VarDecl 0x120144ce8 <col:3, col:57> col:9 used hex_digest 'char *' cinit
        |   `-CallExpr 0x120144ef8 <col:22, col:57> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x120144e30 <col:22> 'int ()' Function 0x120144d78 'safe_emalloc' 'int ()'
        |     |-CXXDependentScopeMemberExpr 0x120144e70 <col:35, col:40> '<dependent type>' contains-errors lvalue ->digest_size
        |     | `-RecoveryExpr 0x120144e50 <col:35> '<dependent type>' contains-errors lvalue
        |     |-IntegerLiteral 0x120144eb8 <col:53> 'int' 2
        |     `-IntegerLiteral 0x120144ed8 <col:56> 'int' 1
        |-CallExpr 0x1201461d8 <line:55:3, col:74> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x1201460b8 <col:3> 'int ()' Function 0x120146000 'php_hash_bin2hex' 'int ()'
        | |-DeclRefExpr 0x1201460d8 <col:20> 'char *' contains-errors lvalue Var 0x120144ce8 'hex_digest' 'char *'
        | |-CStyleCastExpr 0x120146148 <col:32, col:50> 'unsigned char *' <BitCast>
        | | `-ImplicitCastExpr 0x120146130 <col:50> 'char *' <LValueToRValue> part_of_explicit_cast
        | |   `-DeclRefExpr 0x1201460f8 <col:50> 'char *' lvalue Var 0x120128b18 'digest' 'char *'
        | `-CXXDependentScopeMemberExpr 0x120146190 <col:58, col:63> '<dependent type>' contains-errors lvalue ->digest_size
        |   `-RecoveryExpr 0x120146170 <col:58> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x120146330 <line:56:3, col:38> '<dependent type>' contains-errors '='
        | |-ArraySubscriptExpr 0x1201462f0 <col:3, col:34> '<dependent type>' contains-errors lvalue
        | | |-ImplicitCastExpr 0x1201462d8 <col:3> 'char *' contains-errors <LValueToRValue>
        | | | `-DeclRefExpr 0x120146210 <col:3> 'char *' contains-errors lvalue Var 0x120144ce8 'hex_digest' 'char *'
        | | `-BinaryOperator 0x1201462b8 <col:14, col:23> '<dependent type>' contains-errors '*'
        | |   |-IntegerLiteral 0x120146230 <col:14> 'int' 2
        | |   `-CXXDependentScopeMemberExpr 0x120146270 <col:18, col:23> '<dependent type>' contains-errors lvalue ->digest_size
        | |     `-RecoveryExpr 0x120146250 <col:18> '<dependent type>' contains-errors lvalue
        | `-IntegerLiteral 0x120146310 <col:38> 'int' 0
        |-CallExpr 0x1201463a8 <line:57:3, col:15> 'int'
        | |-ImplicitCastExpr 0x120146390 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x120146350 <col:3> 'int ()' Function 0x120144848 'efree' 'int ()'
        | `-ImplicitCastExpr 0x1201463d0 <col:9> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x120146370 <col:9> 'char *' lvalue Var 0x120128b18 'digest' 'char *'
        `-CallExpr 0x1201464f0 <line:58:3, col:53> '<dependent type>' contains-errors
          |-DeclRefExpr 0x1201463e8 <col:3> 'int ()' Function 0x120144af8 'RETURN_STRINGL' 'int ()'
          |-DeclRefExpr 0x120146408 <col:18> 'char *' contains-errors lvalue Var 0x120144ce8 'hex_digest' 'char *'
          |-BinaryOperator 0x1201464b0 <col:30, col:39> '<dependent type>' contains-errors '*'
          | |-IntegerLiteral 0x120146428 <col:30> 'int' 2
          | `-CXXDependentScopeMemberExpr 0x120146468 <col:34, col:39> '<dependent type>' contains-errors lvalue ->digest_size
          |   `-RecoveryExpr 0x120146448 <col:34> '<dependent type>' contains-errors lvalue
          `-IntegerLiteral 0x1201464d0 <col:52> 'int' 0
