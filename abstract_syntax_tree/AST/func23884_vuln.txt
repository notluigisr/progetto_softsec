TranslationUnitDecl 0x139855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1398564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x139855bd0 '__int128'
|-TypedefDecl 0x139856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x139855bf0 'unsigned __int128'
|-TypedefDecl 0x13a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x139856580 '__NSConstantString_tag'
|-TypedefDecl 0x13a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x139855d90 '__SVInt8_t'
|-TypedefDecl 0x13a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x139855db0 '__SVInt16_t'
|-TypedefDecl 0x13a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x139855dd0 '__SVInt32_t'
|-TypedefDecl 0x13a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x139855df0 '__SVInt64_t'
|-TypedefDecl 0x13a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x139855e10 '__SVUint8_t'
|-TypedefDecl 0x13a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x139855e30 '__SVUint16_t'
|-TypedefDecl 0x13a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x139855e50 '__SVUint32_t'
|-TypedefDecl 0x13a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x139855e70 '__SVUint64_t'
|-TypedefDecl 0x13a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x139855e90 '__SVFloat16_t'
|-TypedefDecl 0x13a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x139855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x139855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x139855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x139855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x139855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x139855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x139855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x139855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x139855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x139855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x139855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x139856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x139856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x139856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x139856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x139856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1398560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1398560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1398560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x139856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x139856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x139856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x139856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x139856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1398561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1398561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1398561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x139856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x139856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x139856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x139856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x139856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1398562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1398562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1398562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x139856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x139856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x139856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x139856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x139856390 '__SVBool_t'
|-TypedefDecl 0x13a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1398563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1398563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1398563f0 '__SVCount_t'
|-TypedefDecl 0x13a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a00dbb0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
|-TypedefDecl 0x13a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a00dbb0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
`-FunctionDecl 0x13a00de88 <dataset_diviso_filec/func23884_vuln.c:1:1, line:59:1> line:1:12 invalid vnc_update_client 'int (int *, int)' static
  |-ParmVarDecl 0x13a00dd28 <col:30, col:40> col:40 referenced invalid vs 'int *'
  |-ParmVarDecl 0x13a00dda8 <col:44, col:48> col:48 used has_dirty 'int'
  `-CompoundStmt 0x13a02ab30 <line:2:1, line:59:1>
    |-IfStmt 0x13a02a8b8 <line:3:5, line:53:5>
    | |-BinaryOperator 0x13a00e068 <line:3:9, col:42> 'int' contains-errors '&&'
    | | |-CXXDependentScopeMemberExpr 0x13a00df60 <col:9, col:13> '<dependent type>' contains-errors lvalue ->need_update
    | | | `-RecoveryExpr 0x13a00df40 <col:9> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13a00e048 <col:28, col:42> 'int' contains-errors '!='
    | |   |-CXXDependentScopeMemberExpr 0x13a00dfc8 <col:28, col:32> '<dependent type>' contains-errors lvalue ->csock
    | |   | `-RecoveryExpr 0x13a00dfa8 <col:28> '<dependent type>' contains-errors lvalue
    | |   `-UnaryOperator 0x13a00e030 <col:41, col:42> 'int' prefix '-'
    | |     `-IntegerLiteral 0x13a00e010 <col:42> 'int' 1
    | `-CompoundStmt 0x13a02a850 <col:45, line:53:5>
    |   |-DeclStmt 0x13a00e1a0 <line:6:9, col:14>
    |   | `-VarDecl 0x13a00e138 <col:9, col:13> col:13 used y 'int'
    |   |-DeclStmt 0x13a00e2d0 <line:7:9, col:26>
    |   | |-VarDecl 0x13a00e1d0 <col:9, col:13> col:13 used width 'int'
    |   | `-VarDecl 0x13a00e250 <col:9, col:20> col:20 used height 'int'
    |   |-DeclStmt 0x13a00e388 <line:8:9, col:18>
    |   | `-VarDecl 0x13a00e300 <col:9, col:17> col:13 used n 'int' cinit
    |   |   `-IntegerLiteral 0x13a00e368 <col:17> 'int' 0
    |   |-IfStmt 0x13a027630 <line:11:9, line:13:20>
    |   | |-BinaryOperator 0x13a0275e0 <line:11:13, col:57> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x13a027528 <col:13, col:39> 'int' contains-errors '&&'
    |   | | | |-CXXDependentScopeMemberExpr 0x13a027448 <col:13, col:24> '<dependent type>' contains-errors lvalue .offset
    |   | | | | `-CXXDependentScopeMemberExpr 0x13a027400 <col:13, col:17> '<dependent type>' contains-errors lvalue ->output
    |   | | | |   `-RecoveryExpr 0x13a00e3a0 <col:13> '<dependent type>' contains-errors lvalue
    |   | | | `-UnaryOperator 0x13a027510 <col:34, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | |   `-ImplicitCastExpr 0x13a0274f8 <col:35, col:39> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     `-CXXDependentScopeMemberExpr 0x13a0274b0 <col:35, col:39> '<dependent type>' contains-errors lvalue ->audio_cap
    |   | | |       `-RecoveryExpr 0x13a027490 <col:35> '<dependent type>' contains-errors lvalue
    |   | | `-UnaryOperator 0x13a0275c8 <col:52, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | |   `-ImplicitCastExpr 0x13a0275b0 <col:53, col:57> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-CXXDependentScopeMemberExpr 0x13a027568 <col:53, col:57> '<dependent type>' contains-errors lvalue ->force_update
    |   | |       `-RecoveryExpr 0x13a027548 <col:53> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x13a027620 <line:13:13, col:20>
    |   |   `-IntegerLiteral 0x13a027600 <col:20> 'int' 0
    |   |-IfStmt 0x13a027840 <line:15:9, line:16:20>
    |   | |-BinaryOperator 0x13a0277f0 <line:15:13, col:50> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x13a027738 <col:13, col:32> 'int' contains-errors '&&'
    |   | | | |-UnaryOperator 0x13a027688 <col:13, col:14> 'int' prefix '!' cannot overflow
    |   | | | | `-ImplicitCastExpr 0x13a027670 <col:14> 'int' <LValueToRValue>
    |   | | | |   `-DeclRefExpr 0x13a027650 <col:14> 'int' lvalue ParmVar 0x13a00dda8 'has_dirty' 'int'
    |   | | | `-UnaryOperator 0x13a027720 <col:27, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | |   `-ImplicitCastExpr 0x13a027708 <col:28, col:32> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     `-CXXDependentScopeMemberExpr 0x13a0276c0 <col:28, col:32> '<dependent type>' contains-errors lvalue ->audio_cap
    |   | | |       `-RecoveryExpr 0x13a0276a0 <col:28> '<dependent type>' contains-errors lvalue
    |   | | `-UnaryOperator 0x13a0277d8 <col:45, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | |   `-ImplicitCastExpr 0x13a0277c0 <col:46, col:50> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-CXXDependentScopeMemberExpr 0x13a027778 <col:46, col:50> '<dependent type>' contains-errors lvalue ->force_update
    |   | |       `-RecoveryExpr 0x13a027758 <col:46> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x13a027830 <line:16:13, col:20>
    |   |   `-IntegerLiteral 0x13a027810 <col:20> 'int' 0
    |   |-BinaryOperator 0x13a027d88 <line:21:9, col:56> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13a027a28 <col:9> 'int' lvalue Var 0x13a00e1d0 'width' 'int'
    |   | `-CallExpr 0x13a027d58 <col:17, col:56> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13a027b28 <col:17> 'int ()' Function 0x13a027a70 'MIN' 'int ()'
    |   |   |-CXXDependentScopeMemberExpr 0x13a027d10 <col:21, col:33> '<dependent type>' contains-errors lvalue ->width
    |   |   | `-CXXDependentScopeMemberExpr 0x13a027cc8 <col:21, col:25> '<dependent type>' contains-errors lvalue ->server
    |   |   |   `-RecoveryExpr 0x13a027ca8 <col:21> '<dependent type>' contains-errors lvalue
    |   |   `-CXXDependentScopeMemberExpr 0x13a027c10 <col:40, col:44> '<dependent type>' contains-errors lvalue ->client_width
    |   |     `-RecoveryExpr 0x13a027bf0 <col:40> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x13a028028 <line:22:9, col:59> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13a027da8 <col:9> 'int' lvalue Var 0x13a00e250 'height' 'int'
    |   | `-CallExpr 0x13a027ff8 <col:18, col:59> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13a027dc8 <col:18> 'int ()' Function 0x13a027a70 'MIN' 'int ()'
    |   |   |-CXXDependentScopeMemberExpr 0x13a027fb0 <col:22, col:34> '<dependent type>' contains-errors lvalue ->height
    |   |   | `-CXXDependentScopeMemberExpr 0x13a027f68 <col:22, col:26> '<dependent type>' contains-errors lvalue ->server
    |   |   |   `-RecoveryExpr 0x13a027f48 <col:22> '<dependent type>' contains-errors lvalue
    |   |   `-CXXDependentScopeMemberExpr 0x13a027eb0 <col:42, col:46> '<dependent type>' contains-errors lvalue ->client_height
    |   |     `-RecoveryExpr 0x13a027e90 <col:42> '<dependent type>' contains-errors lvalue
    |   |-ForStmt 0x13a02a578 <line:24:9, line:48:9>
    |   | |-BinaryOperator 0x13a028088 <line:24:14, col:18> 'int' '='
    |   | | |-DeclRefExpr 0x13a028048 <col:14> 'int' lvalue Var 0x13a00e138 'y' 'int'
    |   | | `-IntegerLiteral 0x13a028068 <col:18> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x13a028118 <col:21, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x13a0280e8 <col:21> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13a0280a8 <col:21> 'int' lvalue Var 0x13a00e138 'y' 'int'
    |   | | `-ImplicitCastExpr 0x13a028100 <col:25> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13a0280c8 <col:25> 'int' lvalue Var 0x13a00e250 'height' 'int'
    |   | |-UnaryOperator 0x13a028158 <col:33, col:34> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x13a028138 <col:33> 'int' lvalue Var 0x13a00e138 'y' 'int'
    |   | `-CompoundStmt 0x13a02a548 <col:38, line:48:9>
    |   |   |-DeclStmt 0x13a0281f0 <line:25:13, col:18>
    |   |   | `-VarDecl 0x13a028188 <col:13, col:17> col:17 used x 'int'
    |   |   |-DeclStmt 0x13a0282c0 <line:26:13, col:28>
    |   |   | `-VarDecl 0x13a028220 <col:13, col:27> col:17 used last_x 'int' cinit
    |   |   |   `-UnaryOperator 0x13a0282a8 <col:26, col:27> 'int' prefix '-'
    |   |   |     `-IntegerLiteral 0x13a028288 <col:27> 'int' 1
    |   |   |-ForStmt 0x13a0294c0 <line:27:13, line:42:13>
    |   |   | |-BinaryOperator 0x13a028318 <line:27:18, col:22> 'int' '='
    |   |   | | |-DeclRefExpr 0x13a0282d8 <col:18> 'int' lvalue Var 0x13a028188 'x' 'int'
    |   |   | | `-IntegerLiteral 0x13a0282f8 <col:22> 'int' 0
    |   |   | |-<<<NULL>>>
    |   |   | |-BinaryOperator 0x13a028800 <col:25, col:37> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x13a0283d0 <col:25> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x13a028338 <col:25> 'int' lvalue Var 0x13a028188 'x' 'int'
    |   |   | | `-BinaryOperator 0x13a0283b0 <col:29, col:37> 'int' '/'
    |   |   | |   |-ImplicitCastExpr 0x13a028398 <col:29> 'int' <LValueToRValue>
    |   |   | |   | `-DeclRefExpr 0x13a028358 <col:29> 'int' lvalue Var 0x13a00e1d0 'width' 'int'
    |   |   | |   `-IntegerLiteral 0x13a028378 <col:37> 'int' 16
    |   |   | |-UnaryOperator 0x13a028840 <col:41, col:42> 'int' postfix '++'
    |   |   | | `-DeclRefExpr 0x13a028820 <col:41> 'int' lvalue Var 0x13a028188 'x' 'int'
    |   |   | `-CompoundStmt 0x13a0294a8 <col:46, line:42:13>
    |   |   |   `-IfStmt 0x13a029478 <line:28:17, line:41:17> has_else
    |   |   |     |-CallExpr 0x13a028a50 <line:28:21, col:55> '<dependent type>' contains-errors
    |   |   |     | |-DeclRefExpr 0x13a028938 <col:21> 'int ()' Function 0x13a028880 'test_and_clear_bit' 'int ()'
    |   |   |     | |-DeclRefExpr 0x13a028958 <col:40> 'int' lvalue Var 0x13a028188 'x' 'int'
    |   |   |     | `-ArraySubscriptExpr 0x13a028a30 <col:43, col:54> '<dependent type>' contains-errors lvalue
    |   |   |     |   |-ImplicitCastExpr 0x13a028a00 <col:43, col:47> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     |   | `-CXXDependentScopeMemberExpr 0x13a028998 <col:43, col:47> '<dependent type>' contains-errors lvalue ->dirty
    |   |   |     |   |   `-RecoveryExpr 0x13a028978 <col:43> '<dependent type>' contains-errors lvalue
    |   |   |     |   `-ImplicitCastExpr 0x13a028a18 <col:53> 'int' <LValueToRValue>
    |   |   |     |     `-DeclRefExpr 0x13a0289e0 <col:53> 'int' lvalue Var 0x13a00e138 'y' 'int'
    |   |   |     |-CompoundStmt 0x13a028bc0 <col:58, line:32:17>
    |   |   |     | `-IfStmt 0x13a028ba0 <line:29:21, line:31:21>
    |   |   |     |   |-BinaryOperator 0x13a028af0 <line:29:25, col:36> 'int' '=='
    |   |   |     |   | |-ImplicitCastExpr 0x13a028ad8 <col:25> 'int' <LValueToRValue>
    |   |   |     |   | | `-DeclRefExpr 0x13a028a80 <col:25> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |   |     |   | `-UnaryOperator 0x13a028ac0 <col:35, col:36> 'int' prefix '-'
    |   |   |     |   |   `-IntegerLiteral 0x13a028aa0 <col:36> 'int' 1
    |   |   |     |   `-CompoundStmt 0x13a028b88 <col:39, line:31:21>
    |   |   |     |     `-BinaryOperator 0x13a028b68 <line:30:25, col:34> 'int' '='
    |   |   |     |       |-DeclRefExpr 0x13a028b10 <col:25> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |   |     |       `-ImplicitCastExpr 0x13a028b50 <col:34> 'int' <LValueToRValue>
    |   |   |     |         `-DeclRefExpr 0x13a028b30 <col:34> 'int' lvalue Var 0x13a028188 'x' 'int'
    |   |   |     `-CompoundStmt 0x13a029458 <line:32:24, line:41:17>
    |   |   |       |-IfStmt 0x13a0293c0 <line:33:21, line:39:21>
    |   |   |       | |-BinaryOperator 0x13a028c48 <line:33:25, col:36> 'int' '!='
    |   |   |       | | |-ImplicitCastExpr 0x13a028c30 <col:25> 'int' <LValueToRValue>
    |   |   |       | | | `-DeclRefExpr 0x13a028bd8 <col:25> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |   |       | | `-UnaryOperator 0x13a028c18 <col:35, col:36> 'int' prefix '-'
    |   |   |       | |   `-IntegerLiteral 0x13a028bf8 <col:36> 'int' 1
    |   |   |       | `-CompoundStmt 0x13a0293a0 <col:39, line:39:21>
    |   |   |       |   |-DeclStmt 0x13a028ed0 <line:34:25, line:35:68>
    |   |   |       |   | `-VarDecl 0x13a028c80 <line:34:25, line:35:67> line:34:29 used h 'int' cinit
    |   |   |       |   |   `-CallExpr 0x13a028e88 <col:33, line:35:67> '<dependent type>' contains-errors
    |   |   |       |   |     |-DeclRefExpr 0x13a028dc8 <line:34:33> 'int ()' Function 0x13a028d10 'find_and_clear_dirty_height' 'int ()'
    |   |   |       |   |     |-RecoveryExpr 0x13a028de8 <col:61> '<dependent type>' contains-errors lvalue
    |   |   |       |   |     |-DeclRefExpr 0x13a028e08 <col:65> 'int' lvalue Var 0x13a00e138 'y' 'int'
    |   |   |       |   |     |-DeclRefExpr 0x13a028e28 <col:68> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |   |       |   |     |-DeclRefExpr 0x13a028e48 <col:76> 'int' lvalue Var 0x13a028188 'x' 'int'
    |   |   |       |   |     `-DeclRefExpr 0x13a028e68 <line:35:61> 'int' lvalue Var 0x13a00e250 'height' 'int'
    |   |   |       |   `-CompoundAssignOperator 0x13a029370 <line:37:25, line:38:67> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |       |     |-DeclRefExpr 0x13a028ee8 <line:37:25> 'int' lvalue Var 0x13a00e300 'n' 'int'
    |   |   |       |     `-CallExpr 0x13a029328 <col:30, line:38:67> '<dependent type>' contains-errors
    |   |   |       |       |-DeclRefExpr 0x13a028fe8 <line:37:30> 'int ()' Function 0x13a028f30 'vnc_job_add_rect' 'int ()'
    |   |   |       |       |-RecoveryExpr 0x13a029240 <col:47> '<dependent type>' contains-errors lvalue
    |   |   |       |       |-BinaryOperator 0x13a029278 <col:52, col:61> 'int' '*'
    |   |   |       |       | |-ImplicitCastExpr 0x13a029260 <col:52> 'int' <LValueToRValue>
    |   |   |       |       | | `-DeclRefExpr 0x13a029020 <col:52> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |   |       |       | `-IntegerLiteral 0x13a029040 <col:61> 'int' 16
    |   |   |       |       |-DeclRefExpr 0x13a029098 <col:65> 'int' lvalue Var 0x13a00e138 'y' 'int'
    |   |   |       |       |-BinaryOperator 0x13a029308 <line:38:47, col:62> 'int' '*'
    |   |   |       |       | |-ParenExpr 0x13a0292e8 <col:47, col:58> 'int'
    |   |   |       |       | | `-BinaryOperator 0x13a0292c8 <col:48, col:52> 'int' '-'
    |   |   |       |       | |   |-ImplicitCastExpr 0x13a029298 <col:48> 'int' <LValueToRValue>
    |   |   |       |       | |   | `-DeclRefExpr 0x13a0290b8 <col:48> 'int' lvalue Var 0x13a028188 'x' 'int'
    |   |   |       |       | |   `-ImplicitCastExpr 0x13a0292b0 <col:52> 'int' <LValueToRValue>
    |   |   |       |       | |     `-DeclRefExpr 0x13a0290d8 <col:52> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |   |       |       | `-IntegerLiteral 0x13a029168 <col:62> 'int' 16
    |   |   |       |       `-DeclRefExpr 0x13a0291a8 <col:66> 'int' contains-errors lvalue Var 0x13a028c80 'h' 'int'
    |   |   |       `-BinaryOperator 0x13a029438 <line:40:21, col:31> 'int' '='
    |   |   |         |-DeclRefExpr 0x13a0293e0 <col:21> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |   |         `-UnaryOperator 0x13a029420 <col:30, col:31> 'int' prefix '-'
    |   |   |           `-IntegerLiteral 0x13a029400 <col:31> 'int' 1
    |   |   `-IfStmt 0x13a02a528 <line:43:13, line:47:13>
    |   |     |-BinaryOperator 0x13a029568 <line:43:17, col:28> 'int' '!='
    |   |     | |-ImplicitCastExpr 0x13a029550 <col:17> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x13a0294f8 <col:17> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |     | `-UnaryOperator 0x13a029538 <col:27, col:28> 'int' prefix '-'
    |   |     |   `-IntegerLiteral 0x13a029518 <col:28> 'int' 1
    |   |     `-CompoundStmt 0x13a02a508 <col:31, line:47:13>
    |   |       |-DeclStmt 0x13a029710 <line:44:17, col:78>
    |   |       | `-VarDecl 0x13a0295a0 <col:17, col:77> col:21 used h 'int' cinit
    |   |       |   `-CallExpr 0x13a0296c8 <col:25, col:77> '<dependent type>' contains-errors
    |   |       |     |-DeclRefExpr 0x13a029608 <col:25> 'int ()' Function 0x13a028d10 'find_and_clear_dirty_height' 'int ()'
    |   |       |     |-RecoveryExpr 0x13a029628 <col:53> '<dependent type>' contains-errors lvalue
    |   |       |     |-DeclRefExpr 0x13a029648 <col:57> 'int' lvalue Var 0x13a00e138 'y' 'int'
    |   |       |     |-DeclRefExpr 0x13a029668 <col:60> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |       |     |-DeclRefExpr 0x13a029688 <col:68> 'int' lvalue Var 0x13a028188 'x' 'int'
    |   |       |     `-DeclRefExpr 0x13a0296a8 <col:71> 'int' lvalue Var 0x13a00e250 'height' 'int'
    |   |       `-CompoundAssignOperator 0x13a02a4d8 <line:45:17, line:46:59> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |         |-DeclRefExpr 0x13a029728 <line:45:17> 'int' lvalue Var 0x13a00e300 'n' 'int'
    |   |         `-CallExpr 0x13a02a490 <col:22, line:46:59> '<dependent type>' contains-errors
    |   |           |-DeclRefExpr 0x13a029748 <line:45:22> 'int ()' Function 0x13a028f30 'vnc_job_add_rect' 'int ()'
    |   |           |-RecoveryExpr 0x13a02a3a8 <col:39> '<dependent type>' contains-errors lvalue
    |   |           |-BinaryOperator 0x13a02a3e0 <col:44, col:53> 'int' '*'
    |   |           | |-ImplicitCastExpr 0x13a02a3c8 <col:44> 'int' <LValueToRValue>
    |   |           | | `-DeclRefExpr 0x13a029780 <col:44> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |           | `-IntegerLiteral 0x13a0297a0 <col:53> 'int' 16
    |   |           |-DeclRefExpr 0x13a02a200 <col:57> 'int' lvalue Var 0x13a00e138 'y' 'int'
    |   |           |-BinaryOperator 0x13a02a470 <line:46:39, col:54> 'int' '*'
    |   |           | |-ParenExpr 0x13a02a450 <col:39, col:50> 'int'
    |   |           | | `-BinaryOperator 0x13a02a430 <col:40, col:44> 'int' '-'
    |   |           | |   |-ImplicitCastExpr 0x13a02a400 <col:40> 'int' <LValueToRValue>
    |   |           | |   | `-DeclRefExpr 0x13a02a220 <col:40> 'int' lvalue Var 0x13a028188 'x' 'int'
    |   |           | |   `-ImplicitCastExpr 0x13a02a418 <col:44> 'int' <LValueToRValue>
    |   |           | |     `-DeclRefExpr 0x13a02a240 <col:44> 'int' lvalue Var 0x13a028220 'last_x' 'int'
    |   |           | `-IntegerLiteral 0x13a02a2d0 <col:54> 'int' 16
    |   |           `-DeclRefExpr 0x13a02a310 <col:58> 'int' contains-errors lvalue Var 0x13a0295a0 'h' 'int'
    |   |-CallExpr 0x13a02a710 <line:50:9, col:25> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13a02a690 <col:9> 'int ()' Function 0x13a02a5d8 'vnc_job_push' 'int ()'
    |   | `-RecoveryExpr 0x13a02a6f0 <col:22> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x13a02a7e8 <line:51:9, col:28> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x13a02a780 <col:9, col:13> '<dependent type>' contains-errors lvalue ->force_update
    |   | | `-RecoveryExpr 0x13a02a758 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13a02a738 <col:9> 'int *' lvalue ParmVar 0x13a00dd28 'vs' 'int *'
    |   | `-IntegerLiteral 0x13a02a7c8 <col:28> 'int' 0
    |   `-ReturnStmt 0x13a02a840 <line:52:9, col:16>
    |     `-ImplicitCastExpr 0x13a02a828 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x13a02a808 <col:16> 'int' lvalue Var 0x13a00e300 'n' 'int'
    |-IfStmt 0x13a02aae0 <line:55:5, line:56:33>
    | |-BinaryOperator 0x13a02a978 <line:55:9, col:23> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x13a02a8f8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->csock
    | | | `-RecoveryExpr 0x13a02a8d8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x13a02a960 <col:22, col:23> 'int' prefix '-'
    | |   `-IntegerLiteral 0x13a02a940 <col:23> 'int' 1
    | `-CallExpr 0x13a02aab8 <line:56:9, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13a02aa78 <col:9> 'int ()' Function 0x13a02a9c0 'vnc_disconnect_finish' 'int ()'
    |   `-RecoveryExpr 0x13a02aa98 <col:31> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13a02ab20 <line:58:5, col:12>
      `-IntegerLiteral 0x13a02ab00 <col:12> 'int' 0
