TranslationUnitDecl 0x14783d008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14783deb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14783d5d0 '__int128'
|-TypedefDecl 0x14783df28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14783d5f0 'unsigned __int128'
|-TypedefDecl 0x14790e430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14790e200 'struct __NSConstantString_tag'
|   `-Record 0x14783df80 '__NSConstantString_tag'
|-TypedefDecl 0x14790e498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14783d790 '__SVInt8_t'
|-TypedefDecl 0x14790e500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14783d7b0 '__SVInt16_t'
|-TypedefDecl 0x14790e568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14783d7d0 '__SVInt32_t'
|-TypedefDecl 0x14790e5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14783d7f0 '__SVInt64_t'
|-TypedefDecl 0x14790e638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14783d810 '__SVUint8_t'
|-TypedefDecl 0x14790e6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14783d830 '__SVUint16_t'
|-TypedefDecl 0x14790e708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14783d850 '__SVUint32_t'
|-TypedefDecl 0x14790e770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14783d870 '__SVUint64_t'
|-TypedefDecl 0x14790e7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14783d890 '__SVFloat16_t'
|-TypedefDecl 0x14790e840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14783d8b0 '__SVFloat32_t'
|-TypedefDecl 0x14790e8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14783d8d0 '__SVFloat64_t'
|-TypedefDecl 0x14790e910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14783d8f0 '__SVBfloat16_t'
|-TypedefDecl 0x14790e978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14783d910 '__clang_svint8x2_t'
|-TypedefDecl 0x14790e9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14783d930 '__clang_svint16x2_t'
|-TypedefDecl 0x14790ea48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14783d950 '__clang_svint32x2_t'
|-TypedefDecl 0x14790eab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14783d970 '__clang_svint64x2_t'
|-TypedefDecl 0x14790eb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14783d990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14790eb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14783d9b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14790ebe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14783d9d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14790ec50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14783d9f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14790ecb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14783da10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14790ed20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14783da30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14790ed88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14783da50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14790edf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14783da70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14790ee58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14783da90 '__clang_svint8x3_t'
|-TypedefDecl 0x14790eec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14783dab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14790ef28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14783dad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14790ef90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14783daf0 '__clang_svint64x3_t'
|-TypedefDecl 0x14790eff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14783db10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14790f060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14783db30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14790f0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14783db50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14790f130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14783db70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14790f198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14783db90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14790fa00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14783dbb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14790fa68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14783dbd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14790fad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14783dbf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14790fb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14783dc10 '__clang_svint8x4_t'
|-TypedefDecl 0x14790fba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14783dc30 '__clang_svint16x4_t'
|-TypedefDecl 0x14790fc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14783dc50 '__clang_svint32x4_t'
|-TypedefDecl 0x14790fc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14783dc70 '__clang_svint64x4_t'
|-TypedefDecl 0x14790fcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14783dc90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14790fd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14783dcb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14790fda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14783dcd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14790fe10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14783dcf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14790fe78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14783dd10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14790fee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14783dd30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14790ff48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14783dd50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14790ffb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14783dd70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x147910018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14783dd90 '__SVBool_t'
|-TypedefDecl 0x147910080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14783ddb0 '__clang_svboolx2_t'
|-TypedefDecl 0x1479100e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14783ddd0 '__clang_svboolx4_t'
|-TypedefDecl 0x147910150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14783ddf0 '__SVCount_t'
|-TypedefDecl 0x1479101f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1479101b0 'char *'
|   `-BuiltinType 0x14783d0b0 'char'
|-TypedefDecl 0x147910268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1479101b0 'char *'
|   `-BuiltinType 0x14783d0b0 'char'
|-FunctionDecl 0x147910318 <dataset_diviso_filec/func16791_vuln.c:1:1, line:82:1> line:1:1 SYSCALL_DEFINE1 'int ()'
| `-CompoundStmt 0x14680b548 <line:2:1, line:82:1>
|   |-DeclStmt 0x1479109a8 <line:3:2, col:23>
|   | |-RecordDecl 0x147910408 <col:2, col:9> col:9 struct rtas_args
|   | `-VarDecl 0x147910508 <col:2, col:19> col:19 referenced invalid args 'struct rtas_args'
|   |-DeclStmt 0x147928c68 <line:4:2, col:21>
|   | `-VarDecl 0x147928c00 <col:2, col:16> col:16 used flags 'unsigned long'
|   |-DeclStmt 0x147928de8 <line:5:2, col:33>
|   | |-VarDecl 0x147928c98 <col:2, col:8> col:8 used buff_copy 'char *'
|   | `-VarDecl 0x147928d18 <col:2, col:29> col:20 used errbuf 'char *' cinit
|   |   `-RecoveryExpr 0x147928db0 <col:29> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x147928fa0 <line:6:2, col:24>
|   | |-VarDecl 0x147928e18 <col:2, col:6> col:6 used nargs 'int'
|   | |-VarDecl 0x147928e98 <col:2, col:13> col:13 used nret 'int'
|   | `-VarDecl 0x147928f18 <col:2, col:19> col:19 used token 'int'
|   |-IfStmt 0x147929218 <line:8:2, line:9:11>
|   | |-UnaryOperator 0x147929158 <line:8:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x147929130 <col:7, col:28> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x147929098 <col:7> 'int ()' Function 0x147928fe0 'capable' 'int ()'
|   | |   `-RecoveryExpr 0x147929110 <col:15> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x147929208 <line:9:3, col:11>
|   |   `-UnaryOperator 0x1479291f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x1479291d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x1479291b8 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x147929408 <line:11:2, line:12:11>
|   | |-UnaryOperator 0x147929348 <line:11:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x147929330 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x1479292e8 <col:7, col:12> '<dependent type>' contains-errors lvalue .entry
|   | |     `-RecoveryExpr 0x1479292c8 <col:7> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1479293f8 <line:12:3, col:11>
|   |   `-UnaryOperator 0x1479293e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x1479293c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x1479293a8 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1479296d8 <line:14:2, line:15:11>
|   | |-RecoveryExpr 0x147929610 <line:14:6, col:55> '_Bool' contains-errors
|   | `-ReturnStmt 0x1479296c8 <line:15:3, col:11>
|   |   `-UnaryOperator 0x1479296b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x147929698 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x147929678 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1479298a8 <line:17:2, col:32> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1479296f8 <col:2> 'int' lvalue Var 0x147928e18 'nargs' 'int'
|   | `-CallExpr 0x147929880 <col:10, col:32> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1479297f8 <col:10> 'int ()' Function 0x147929740 'be32_to_cpu' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x147929838 <col:22, col:27> '<dependent type>' contains-errors lvalue .nargs
|   |     `-RecoveryExpr 0x147929818 <col:22> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x147929998 <line:18:2, col:31> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1479298c8 <col:2> 'int' lvalue Var 0x147928e98 'nret' 'int'
|   | `-CallExpr 0x147929970 <col:10, col:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1479298e8 <col:10> 'int ()' Function 0x147929740 'be32_to_cpu' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x147929928 <col:22, col:27> '<dependent type>' contains-errors lvalue .nret
|   |     `-RecoveryExpr 0x147929908 <col:22> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x147929a88 <line:19:2, col:32> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1479299b8 <col:2> 'int' lvalue Var 0x147928f18 'token' 'int'
|   | `-CallExpr 0x147929a60 <col:10, col:32> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1479299d8 <col:10> 'int ()' Function 0x147929740 'be32_to_cpu' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x147929a18 <col:22, col:27> '<dependent type>' contains-errors lvalue .token
|   |     `-RecoveryExpr 0x1479299f8 <col:22> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1460149c8 <line:21:2, line:24:11>
|   | |-BinaryOperator 0x146014900 <line:21:6, line:23:44> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x146014780 <line:21:6, line:22:36> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x146014670 <line:21:6, col:35> 'int' contains-errors '>='
|   | | | | |-DeclRefExpr 0x147929aa8 <col:6> 'int' lvalue Var 0x147928e18 'nargs' 'int'
|   | | | | `-CallExpr 0x146014648 <col:15, col:35> '<dependent type>' contains-errors
|   | | | |   |-DeclRefExpr 0x147929ba8 <col:15> 'int ()' Function 0x147929af0 'ARRAY_SIZE' 'int ()'
|   | | | |   `-CXXDependentScopeMemberExpr 0x146014600 <col:26, col:31> '<dependent type>' contains-errors lvalue .args
|   | | | |     `-RecoveryExpr 0x147929bc8 <col:26> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x146014760 <line:22:9, col:36> 'int' contains-errors '>'
|   | | |   |-DeclRefExpr 0x146014690 <col:9> 'int' lvalue Var 0x147928e98 'nret' 'int'
|   | | |   `-CallExpr 0x146014738 <col:16, col:36> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x1460146b0 <col:16> 'int ()' Function 0x147929af0 'ARRAY_SIZE' 'int ()'
|   | | |     `-CXXDependentScopeMemberExpr 0x1460146f0 <col:27, col:32> '<dependent type>' contains-errors lvalue .args
|   | | |       `-RecoveryExpr 0x1460146d0 <col:27> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1460148e0 <line:23:9, col:44> 'int' contains-errors '>'
|   | |   |-BinaryOperator 0x146014810 <col:9, col:17> 'int' '+'
|   | |   | |-ImplicitCastExpr 0x1460147e0 <col:9> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1460147a0 <col:9> 'int' lvalue Var 0x147928e18 'nargs' 'int'
|   | |   | `-ImplicitCastExpr 0x1460147f8 <col:17> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1460147c0 <col:17> 'int' lvalue Var 0x147928e98 'nret' 'int'
|   | |   `-CallExpr 0x1460148b8 <col:24, col:44> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x146014830 <col:24> 'int ()' Function 0x147929af0 'ARRAY_SIZE' 'int ()'
|   | |     `-CXXDependentScopeMemberExpr 0x146014870 <col:35, col:40> '<dependent type>' contains-errors lvalue .args
|   | |       `-RecoveryExpr 0x146014850 <col:35> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1460149b8 <line:24:3, col:11>
|   |   `-UnaryOperator 0x1460149a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x146014988 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x146014968 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x146014c48 <line:27:2, line:29:11>
|   | |-RecoveryExpr 0x146014b80 <line:27:6, line:28:38> '_Bool' contains-errors
|   | `-ReturnStmt 0x146014c38 <line:29:3, col:11>
|   |   `-UnaryOperator 0x146014c20 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x146014c08 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x146014be8 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x146014e80 <line:34:2, col:30> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x146014d48 <col:2, col:7> '<dependent type>' contains-errors lvalue .rets
|   | | `-RecoveryExpr 0x146014d20 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x146014d00 <col:2> 'struct rtas_args' lvalue Var 0x147910508 'args' 'struct rtas_args'
|   | `-UnaryOperator 0x146014e68 <col:14, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-ArraySubscriptExpr 0x146014e48 <col:15, col:30> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x146014e18 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x146014db0 <col:15, col:20> '<dependent type>' contains-errors lvalue .args
|   |     |   `-RecoveryExpr 0x146014d90 <col:15> '<dependent type>' contains-errors lvalue
|   |     `-ImplicitCastExpr 0x146014e30 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x146014df8 <col:25> 'int' lvalue Var 0x147928e18 'nargs' 'int'
|   |-IfStmt 0x146809e88 <line:38:2, line:52:2>
|   | |-RecoveryExpr 0x146015220 <line:38:6, col:15> '_Bool' contains-errors
|   | `-CompoundStmt 0x146809e60 <col:37, line:52:2>
|   |   |-DeclStmt 0x1460152e0 <line:41:3, col:13>
|   |   | `-VarDecl 0x146015258 <col:3, col:12> col:7 used rc 'int' cinit
|   |   |   `-IntegerLiteral 0x1460152c0 <col:12> 'int' 0
|   |   |-IfStmt 0x146809dc8 <line:45:3, line:50:11> has_else
|   |   | |-RecoveryExpr 0x146015438 <line:45:7, col:14> '_Bool' contains-errors
|   |   | |-NullStmt 0x146809dc0 <line:46:4>
|   |   | `-IfStmt 0x146809d90 <line:47:8, line:50:11> has_else
|   |   |   |-RecoveryExpr 0x146809af8 <line:47:12, col:19> '_Bool' contains-errors
|   |   |   |-BinaryOperator 0x146809cd0 <line:48:4, col:33> '<dependent type>' contains-errors '='
|   |   |   | |-ArraySubscriptExpr 0x146809be0 <col:4, col:15> '<dependent type>' contains-errors lvalue
|   |   |   | | |-ImplicitCastExpr 0x146809bc8 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | | `-CXXDependentScopeMemberExpr 0x146809b60 <col:4, col:9> '<dependent type>' contains-errors lvalue .rets
|   |   |   | | |   `-RecoveryExpr 0x146809b38 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   | | |     `-DeclRefExpr 0x146809b18 <col:4> 'struct rtas_args' lvalue Var 0x147910508 'args' 'struct rtas_args'
|   |   |   | | `-IntegerLiteral 0x146809ba8 <col:14> 'int' 0
|   |   |   | `-CallExpr 0x146809ca8 <col:19, col:33> 'int'
|   |   |   |   |-ImplicitCastExpr 0x146809c90 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x146809c00 <col:19> 'int ()' Function 0x146809a00 'cpu_to_be32' 'int ()'
|   |   |   |   `-UnaryOperator 0x146809c40 <col:31, col:32> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x146809c20 <col:32> 'int' 1
|   |   |   `-IfStmt 0x146809d70 <line:49:8, line:50:11>
|   |   |     |-ImplicitCastExpr 0x146809d10 <line:49:12> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x146809cf0 <col:12> 'int' lvalue Var 0x146015258 'rc' 'int'
|   |   |     `-ReturnStmt 0x146809d60 <line:50:4, col:11>
|   |   |       `-ImplicitCastExpr 0x146809d48 <col:11> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x146809d28 <col:11> 'int' lvalue Var 0x146015258 'rc' 'int'
|   |   `-GotoStmt 0x146809e48 <line:51:3, col:8> 'copy_return' 0x146809df8
|   |-BinaryOperator 0x14680a018 <line:54:2, col:34> 'char *' '='
|   | |-DeclRefExpr 0x146809ea8 <col:2> 'char *' lvalue Var 0x147928c98 'buff_copy' 'char *'
|   | `-ImplicitCastExpr 0x14680a000 <col:14, col:34> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x146809fe0 <col:14, col:34> 'int'
|   |     `-ImplicitCastExpr 0x146809fc8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x146809fa8 <col:14> 'int ()' Function 0x146809ef0 'get_errorlog_buffer' 'int ()'
|   |-BinaryOperator 0x14680a1a8 <line:56:2, col:20> 'unsigned long' '='
|   | |-DeclRefExpr 0x14680a038 <col:2> 'unsigned long' lvalue Var 0x147928c00 'flags' 'unsigned long'
|   | `-ImplicitCastExpr 0x14680a190 <col:10, col:20> 'unsigned long' <IntegralCast>
|   |   `-CallExpr 0x14680a170 <col:10, col:20> 'int'
|   |     `-ImplicitCastExpr 0x14680a158 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x14680a138 <col:10> 'int ()' Function 0x14680a080 'lock_rtas' 'int ()'
|   |-IfStmt 0x14680a760 <line:63:2, line:64:45>
|   | |-BinaryOperator 0x14680a570 <line:63:6, col:36> 'int' contains-errors '=='
|   | | |-CallExpr 0x14680a510 <col:6, col:30> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14680a430 <col:6> 'int ()' Function 0x147929740 'be32_to_cpu' 'int ()'
|   | | | `-ArraySubscriptExpr 0x14680a4f0 <col:18, col:29> '<dependent type>' contains-errors lvalue
|   | | |   |-ImplicitCastExpr 0x14680a4d8 <col:18, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | `-CXXDependentScopeMemberExpr 0x14680a470 <col:18, col:23> '<dependent type>' contains-errors lvalue .rets
|   | | |   |   `-RecoveryExpr 0x14680a450 <col:18> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x14680a4b8 <col:28> 'int' 0
|   | | `-UnaryOperator 0x14680a558 <col:35, col:36> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14680a538 <col:36> 'int' 1
|   | `-BinaryOperator 0x14680a740 <line:64:3, col:45> 'char *' contains-errors '='
|   |   |-DeclRefExpr 0x14680a590 <col:3> 'char *' contains-errors lvalue Var 0x147928d18 'errbuf' 'char *'
|   |   `-ImplicitCastExpr 0x14680a728 <col:12, col:45> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x14680a6e8 <col:12, col:45> 'int'
|   |       |-ImplicitCastExpr 0x14680a6d0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14680a690 <col:12> 'int ()' Function 0x14680a5d8 '__fetch_rtas_last_error' 'int ()'
|   |       `-ImplicitCastExpr 0x14680a710 <col:36> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14680a6b0 <col:36> 'char *' lvalue Var 0x147928c98 'buff_copy' 'char *'
|   |-CallExpr 0x14680a8b8 <line:66:2, col:19> 'int'
|   | |-ImplicitCastExpr 0x14680a8a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14680a860 <col:2> 'int ()' Function 0x14680a7a8 'unlock_rtas' 'int ()'
|   | `-ImplicitCastExpr 0x14680a8e0 <col:14> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x14680a880 <col:14> 'unsigned long' lvalue Var 0x147928c00 'flags' 'unsigned long'
|   |-IfStmt 0x14680b2a8 <line:68:2, line:72:2>
|   | |-ImplicitCastExpr 0x14680a918 <line:68:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14680a8f8 <col:6> 'char *' lvalue Var 0x147928c98 'buff_copy' 'char *'
|   | `-CompoundStmt 0x14680b290 <col:17, line:72:2>
|   |   `-CallExpr 0x14680b250 <line:71:3, col:18> 'int'
|   |     |-ImplicitCastExpr 0x14680b238 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14680b1f8 <col:3> 'int ()' Function 0x14680b140 'kfree' 'int ()'
|   |     `-ImplicitCastExpr 0x14680b278 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14680b218 <col:9> 'char *' lvalue Var 0x147928c98 'buff_copy' 'char *'
|   |-LabelStmt 0x14680b4f8 <line:74:2, col:13> 'copy_return'
|   | `-NullStmt 0x14680b4f0 <col:13>
|   `-ReturnStmt 0x14680b538 <line:81:2, col:9>
|     `-IntegerLiteral 0x14680b518 <col:9> 'int' 0
`-FunctionDecl 0x146014ee8 <line:35:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x146014fe8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x146015050 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1460150b8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x146014f90 <<invalid sloc>> Implicit 900
