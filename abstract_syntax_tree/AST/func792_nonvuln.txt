TranslationUnitDecl 0x12803c408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12803d2b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12803c9d0 '__int128'
|-TypedefDecl 0x12803d328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12803c9f0 'unsigned __int128'
|-TypedefDecl 0x12810d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12810d600 'struct __NSConstantString_tag'
|   `-Record 0x12803d380 '__NSConstantString_tag'
|-TypedefDecl 0x12810d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12803cb90 '__SVInt8_t'
|-TypedefDecl 0x12810d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12803cbb0 '__SVInt16_t'
|-TypedefDecl 0x12810d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12803cbd0 '__SVInt32_t'
|-TypedefDecl 0x12810d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12803cbf0 '__SVInt64_t'
|-TypedefDecl 0x12810da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12803cc10 '__SVUint8_t'
|-TypedefDecl 0x12810daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12803cc30 '__SVUint16_t'
|-TypedefDecl 0x12810db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12803cc50 '__SVUint32_t'
|-TypedefDecl 0x12810db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12803cc70 '__SVUint64_t'
|-TypedefDecl 0x12810dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12803cc90 '__SVFloat16_t'
|-TypedefDecl 0x12810dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12803ccb0 '__SVFloat32_t'
|-TypedefDecl 0x12810dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12803ccd0 '__SVFloat64_t'
|-TypedefDecl 0x12810dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12803ccf0 '__SVBfloat16_t'
|-TypedefDecl 0x12810dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12803cd10 '__clang_svint8x2_t'
|-TypedefDecl 0x12810dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12803cd30 '__clang_svint16x2_t'
|-TypedefDecl 0x12810de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12803cd50 '__clang_svint32x2_t'
|-TypedefDecl 0x12810deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12803cd70 '__clang_svint64x2_t'
|-TypedefDecl 0x12810df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12803cd90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12810df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12803cdb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12810dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12803cdd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12810e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12803cdf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12810e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12803ce10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12810e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12803ce30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12810e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12803ce50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12810e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12803ce70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12810e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12803ce90 '__clang_svint8x3_t'
|-TypedefDecl 0x12810e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12803ceb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12810e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12803ced0 '__clang_svint32x3_t'
|-TypedefDecl 0x12810e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12803cef0 '__clang_svint64x3_t'
|-TypedefDecl 0x12810e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12803cf10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12810e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12803cf30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12810e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12803cf50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12810e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12803cf70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12810e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12803cf90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12810ee00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12803cfb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12810ee68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12803cfd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12810eed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12803cff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12810ef38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12803d010 '__clang_svint8x4_t'
|-TypedefDecl 0x12810efa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12803d030 '__clang_svint16x4_t'
|-TypedefDecl 0x12810f008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12803d050 '__clang_svint32x4_t'
|-TypedefDecl 0x12810f070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12803d070 '__clang_svint64x4_t'
|-TypedefDecl 0x12810f0d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12803d090 '__clang_svuint8x4_t'
|-TypedefDecl 0x12810f140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12803d0b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12810f1a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12803d0d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12810f210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12803d0f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12810f278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12803d110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12810f2e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12803d130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12810f348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12803d150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12810f3b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12803d170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12810f418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12803d190 '__SVBool_t'
|-TypedefDecl 0x12810f480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12803d1b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12810f4e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12803d1d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12810f550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12803d1f0 '__SVCount_t'
|-TypedefDecl 0x12810f5f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12810f5b0 'char *'
|   `-BuiltinType 0x12803c4b0 'char'
|-TypedefDecl 0x12810f668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12810f5b0 'char *'
|   `-BuiltinType 0x12803c4b0 'char'
|-FunctionDecl 0x12810f710 <dataset_diviso_filec/func792_nonvuln.c:1:1, line:76:1> line:1:13 test_simple_update 'void ()' static
| `-CompoundStmt 0x12812d8c8 <line:2:1, line:76:1>
|   |-DeclStmt 0x12810f8b0 <line:4:3, col:16>
|   | `-VarDecl 0x12810f848 <col:3, col:14> col:14 used rc 'int'
|   |-DeclStmt 0x12810f9d8 <line:5:3, col:24>
|   | `-VarDecl 0x12810f970 <col:3, col:23> col:14 used szData 'char[25]'
|   |-DeclStmt 0x12810fa90 <line:6:3, col:22>
|   | `-VarDecl 0x12810fa08 <col:3, col:21> col:14 used nData 'int' cinit
|   |   `-IntegerLiteral 0x12810fa70 <col:21> 'int' 1
|   |-DeclStmt 0x12810fbd0 <line:9:3, col:23>
|   | `-VarDecl 0x12810fb68 <col:3, col:22> col:14 used length 'long[2]'
|   |-DeclStmt 0x12810fc78 <line:10:3, col:36>
|   | `-VarDecl 0x12810fc10 <col:3, col:8> col:8 invalid query 'char'
|   |-CallExpr 0x128128e68 <line:12:3, col:17> 'int'
|   | |-ImplicitCastExpr 0x128128e50 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12810fda0 <col:3> 'int ()' Function 0x12810fce8 'myheader' 'int ()'
|   | `-ImplicitCastExpr 0x128128e90 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x128128e00 <col:12> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x1281290b8 <line:14:3, col:35> 'int' contains-errors '='
|   | |-DeclRefExpr 0x128128ea8 <col:3> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   | `-CallExpr 0x128129088 <col:7, col:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x128128fa8 <col:7> 'int ()' Function 0x128128ef0 'mysql_autocommit' 'int ()'
|   |   |-RecoveryExpr 0x128129048 <col:24> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x128129068 <col:31> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x128129210 <line:15:3, col:13> 'int'
|   | |-ImplicitCastExpr 0x1281291f8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1281291b8 <col:3> 'int ()' Function 0x128129100 'myquery' 'int ()'
|   | `-ImplicitCastExpr 0x128129238 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1281291d8 <col:11> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   |-BinaryOperator 0x128129448 <line:17:3, col:31> 'int' contains-errors '='
|   | |-DeclRefExpr 0x128129250 <col:3> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   | `-CallExpr 0x128129418 <col:7, col:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x128129350 <col:7> 'int ()' Function 0x128129298 'mysql_query' 'int ()'
|   |   |-RecoveryExpr 0x1281293f8 <col:19> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x128129388 <col:26> 'char[4]' lvalue "STR"
|   |-CallExpr 0x1281294c0 <line:18:3, col:13> 'int'
|   | |-ImplicitCastExpr 0x1281294a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128129468 <col:3> 'int ()' Function 0x128129100 'myquery' 'int ()'
|   | `-ImplicitCastExpr 0x1281294e8 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x128129488 <col:11> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   |-BinaryOperator 0x128129668 <line:20:3, line:21:31> 'int' contains-errors '='
|   | |-DeclRefExpr 0x128129500 <line:20:3> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   | `-CallExpr 0x128129638 <col:7, line:21:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x128129520 <line:20:7> 'int ()' Function 0x128129298 'mysql_query' 'int ()'
|   |   |-RecoveryExpr 0x128129618 <col:19> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x1281295a0 <col:26, line:21:26> 'char[7]' lvalue "STRSTR"
|   |-CallExpr 0x1281296e0 <line:22:3, col:13> 'int'
|   | |-ImplicitCastExpr 0x1281296c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128129688 <col:3> 'int ()' Function 0x128129100 'myquery' 'int ()'
|   | `-ImplicitCastExpr 0x128129708 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1281296a8 <col:11> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   |-BinaryOperator 0x128129838 <line:24:3, col:31> 'int' contains-errors '='
|   | |-DeclRefExpr 0x128129720 <col:3> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   | `-CallExpr 0x128129808 <col:7, col:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x128129740 <col:7> 'int ()' Function 0x128129298 'mysql_query' 'int ()'
|   |   |-RecoveryExpr 0x1281297e8 <col:19> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x128129778 <col:26> 'char[4]' lvalue "STR"
|   |-CallExpr 0x1281298b0 <line:25:3, col:13> 'int'
|   | |-ImplicitCastExpr 0x128129898 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128129858 <col:3> 'int ()' Function 0x128129100 'myquery' 'int ()'
|   | `-ImplicitCastExpr 0x1281298d8 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x128129878 <col:11> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   |-CallExpr 0x128129a28 <line:27:3, col:25> 'int'
|   | |-ImplicitCastExpr 0x128129a10 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1281299d0 <col:3> 'int ()' Function 0x128129918 'verify_affected_rows' 'int ()'
|   | `-IntegerLiteral 0x1281299f0 <col:24> 'int' 1
|   |-BinaryOperator 0x128129c18 <line:29:3, col:25> 'int' contains-errors '='
|   | |-DeclRefExpr 0x128129a50 <col:3> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   | `-CallExpr 0x128129bf0 <col:7, col:25> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x128129b50 <col:7> 'int ()' Function 0x128129a98 'mysql_commit' 'int ()'
|   |   `-RecoveryExpr 0x128129bd0 <col:20> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x128129c90 <line:30:3, col:13> 'int'
|   | |-ImplicitCastExpr 0x128129c78 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128129c38 <col:3> 'int ()' Function 0x128129100 'myquery' 'int ()'
|   | `-ImplicitCastExpr 0x128129cb8 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x128129c58 <col:11> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   |-CallExpr 0x12812a420 <line:33:3, col:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128129db0 <col:3> 'int ()' Function 0x128129cf8 'my_stpcpy' 'int ()'
|   | |-RecoveryExpr 0x128129dd0 <col:13> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x12812a400 <col:20> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x12812aaa8 <line:42:3, col:10> 'int' '='
|   | |-DeclRefExpr 0x12812aa68 <col:3> 'int' lvalue Var 0x12810fa08 'nData' 'int'
|   | `-IntegerLiteral 0x12812aa88 <col:10> 'int' 1
|   |-BinaryOperator 0x12812b0d8 <line:47:3, col:35> 'long' '='
|   | |-ArraySubscriptExpr 0x12812ace8 <col:3, col:11> 'long' lvalue
|   | | |-ImplicitCastExpr 0x12812acd0 <col:3> 'long *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x12812ac90 <col:3> 'long[2]' lvalue Var 0x12810fb68 'length' 'long[2]'
|   | | `-IntegerLiteral 0x12812acb0 <col:10> 'int' 0
|   | `-ImplicitCastExpr 0x12812b0c0 <col:14, col:35> 'long' <IntegralCast>
|   |   `-CallExpr 0x12812b048 <col:14, col:35> 'int'
|   |     |-ImplicitCastExpr 0x12812b030 <col:14> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12812af70 <col:14> 'int (char *, const char *, ...)' Function 0x12812ad58 'sprintf' 'int (char *, const char *, ...)'
|   |     |-ImplicitCastExpr 0x12812b078 <col:22> 'char *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x12812af90 <col:22> 'char[25]' lvalue Var 0x12810f970 'szData' 'char[25]'
|   |     `-ImplicitCastExpr 0x12812b0a8 <col:30> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x12812b090 <col:30> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x12812afb0 <col:30> 'char[4]' lvalue "STR"
|   |-CallExpr 0x12812cff8 <line:57:3, col:25> 'int'
|   | |-ImplicitCastExpr 0x12812cfe0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12812cfa0 <col:3> 'int ()' Function 0x128129918 'verify_affected_rows' 'int ()'
|   | `-IntegerLiteral 0x12812cfc0 <col:24> 'int' 1
|   |-CallExpr 0x12812d1b8 <line:63:3, col:13> 'int'
|   | |-ImplicitCastExpr 0x12812d1a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12812d160 <col:3> 'int ()' Function 0x128129100 'myquery' 'int ()'
|   | `-ImplicitCastExpr 0x12812d1e0 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x12812d180 <col:11> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   |-CallExpr 0x12812d2b0 <line:67:3, col:13> 'int'
|   | |-ImplicitCastExpr 0x12812d298 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12812d258 <col:3> 'int ()' Function 0x128129100 'myquery' 'int ()'
|   | `-ImplicitCastExpr 0x12812d2d8 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x12812d278 <col:11> 'int' lvalue Var 0x12810f848 'rc' 'int'
|   `-CallExpr 0x12812d7a0 <line:74:3, col:21> 'int'
|     |-ImplicitCastExpr 0x12812d788 <col:3> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x12812d6f0 <col:3> 'int ()' Function 0x12812d638 'DIE_UNLESS' 'int ()'
|     `-BinaryOperator 0x12812d768 <col:14, col:20> 'int' '=='
|       |-ImplicitCastExpr 0x12812d750 <col:14> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x12812d710 <col:14> 'int' lvalue Var 0x12810f848 'rc' 'int'
|       `-IntegerLiteral 0x12812d730 <col:20> 'int' 1
|-FunctionDecl 0x12812a7d8 <line:40:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x12812a8d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12812a940 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x12812a9a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12812a880 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x12812ad58 <line:47:14> col:14 implicit used sprintf 'int (char *, const char *, ...)' extern
  |-ParmVarDecl 0x12812ae58 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x12812aec0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x12812ae00 <<invalid sloc>> Implicit 906
  `-FormatAttr 0x12812af38 <col:14> Implicit printf 2 3
