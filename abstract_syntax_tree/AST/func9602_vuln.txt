TranslationUnitDecl 0x122055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1220564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122055bd0 '__int128'
|-TypedefDecl 0x122056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122055bf0 'unsigned __int128'
|-TypedefDecl 0x12280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12280bc00 'struct __NSConstantString_tag'
|   `-Record 0x122056580 '__NSConstantString_tag'
|-TypedefDecl 0x12280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122055d90 '__SVInt8_t'
|-TypedefDecl 0x12280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122055db0 '__SVInt16_t'
|-TypedefDecl 0x12280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122055dd0 '__SVInt32_t'
|-TypedefDecl 0x12280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122055df0 '__SVInt64_t'
|-TypedefDecl 0x12280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122055e10 '__SVUint8_t'
|-TypedefDecl 0x12280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122055e30 '__SVUint16_t'
|-TypedefDecl 0x12280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122055e50 '__SVUint32_t'
|-TypedefDecl 0x12280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122055e70 '__SVUint64_t'
|-TypedefDecl 0x12280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122055e90 '__SVFloat16_t'
|-TypedefDecl 0x12280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1220560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1220560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1220560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1220561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1220561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1220561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1220562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1220562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1220562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122056390 '__SVBool_t'
|-TypedefDecl 0x12280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1220563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1220563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1220563f0 '__SVCount_t'
|-TypedefDecl 0x12280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-TypedefDecl 0x12280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
`-FunctionDecl 0x12280dec0 <dataset_diviso_filec/func9602_vuln.c:1:1, line:68:1> line:1:13 server 'void (int, unsigned int, const char *)' static
  |-ParmVarDecl 0x12280dcd8 <col:20, col:24> col:24 used fd 'int'
  |-ParmVarDecl 0x12280dd58 <col:28, col:37> col:37 used rounds 'unsigned int'
  |-ParmVarDecl 0x12280ddd8 <col:45, col:57> col:57 used prio 'const char *'
  `-CompoundStmt 0x12380a5c8 <line:2:1, line:68:1>
    |-DeclStmt 0x12280e048 <line:3:2, col:12>
    | `-VarDecl 0x12280dfe0 <col:2, col:6> col:6 used retval 'int'
    |-CallExpr 0x12280e1f8 <line:8:2, col:17> 'int'
    | `-ImplicitCastExpr 0x12280e1e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12280e190 <col:2> 'int ()' Function 0x12280e0d8 'virt_time_init' 'int ()'
    |-IfStmt 0x122827620 <line:10:2, line:12:2>
    | |-BinaryOperator 0x122827428 <line:10:6, col:64> 'int' contains-errors '<'
    | | |-CallExpr 0x122827400 <col:6, col:60> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12280e2f8 <col:6> 'int ()' Function 0x12280e240 'gnutls_session_ticket_key_generate' 'int ()'
    | | | `-UnaryOperator 0x12280e3d0 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x12280e3b0 <col:42> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12280e370 <col:64> 'int' 0
    | `-CompoundStmt 0x122827608 <col:67, line:12:2>
    |   `-CallExpr 0x1228275c8 <line:11:3, col:13> 'int'
    |     |-ImplicitCastExpr 0x1228275b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x122827528 <col:3> 'int ()' Function 0x122827470 'fail' 'int ()'
    |     `-ImplicitCastExpr 0x1228275f0 <col:8> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x122827590 <col:8> 'char[4]' lvalue "STR"
    `-ForStmt 0x12380a3d0 <line:14:2, line:60:2>
      |-DeclStmt 0x1228276f8 <line:14:7, col:21>
      | `-VarDecl 0x122827658 <col:7, col:20> col:16 used i 'unsigned int' cinit
      |   `-ImplicitCastExpr 0x1228276e0 <col:20> 'unsigned int' <IntegralCast>
      |     `-IntegerLiteral 0x1228276c0 <col:20> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x122827780 <col:23, col:27> 'int' '<'
      | |-ImplicitCastExpr 0x122827750 <col:23> 'unsigned int' <LValueToRValue>
      | | `-DeclRefExpr 0x122827710 <col:23> 'unsigned int' lvalue Var 0x122827658 'i' 'unsigned int'
      | `-ImplicitCastExpr 0x122827768 <col:27> 'unsigned int' <LValueToRValue>
      |   `-DeclRefExpr 0x122827730 <col:27> 'unsigned int' lvalue ParmVar 0x12280dd58 'rounds' 'unsigned int'
      |-UnaryOperator 0x1228277c0 <col:35, col:36> 'unsigned int' postfix '++'
      | `-DeclRefExpr 0x1228277a0 <col:35> 'unsigned int' lvalue Var 0x122827658 'i' 'unsigned int'
      `-CompoundStmt 0x12380a380 <col:40, line:60:2>
        |-CallExpr 0x122827b60 <line:15:3, col:49> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x1228278b8 <col:3> 'int ()' Function 0x122827800 'assert' 'int ()'
        | `-BinaryOperator 0x122827b40 <col:10, col:48> 'int' contains-errors '>='
        |   |-CallExpr 0x122827b10 <col:10, col:45> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x1228279b8 <col:10> 'int ()' Function 0x122827900 'gnutls_init' 'int ()'
        |   | |-UnaryOperator 0x122827ad8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   | | `-RecoveryExpr 0x122827ab8 <col:23> '<dependent type>' contains-errors lvalue
        |   | `-RecoveryExpr 0x122827af0 <col:32> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x122827a50 <col:48> 'int' 0
        |-CallExpr 0x122827de8 <line:17:3, col:69> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x122827b88 <col:3> 'int ()' Function 0x122827800 'assert' 'int ()'
        | `-BinaryOperator 0x122827dc8 <col:10, col:68> 'int' contains-errors '>='
        |   |-CallExpr 0x122827da0 <col:10, col:65> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x122827c88 <col:10> 'int ()' Function 0x122827bd0 'gnutls_certificate_allocate_credentials' 'int ()'
        |   | `-UnaryOperator 0x122827d88 <col:50, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |   `-RecoveryExpr 0x122827d68 <col:51> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x122827d00 <col:68> 'int' 0
        |-BinaryOperator 0x122828110 <line:18:3, line:20:26> 'int' contains-errors '='
        | |-DeclRefExpr 0x122827e10 <line:18:3> 'int' lvalue Var 0x12280dfe0 'retval' 'int'
        | `-CallExpr 0x1228280d0 <col:12, line:20:26> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x122827f10 <line:18:12> 'int ()' Function 0x122827e58 'gnutls_certificate_set_x509_key_mem' 'int ()'
        |   |-RecoveryExpr 0x122828020 <col:48> '<dependent type>' contains-errors lvalue
        |   |-UnaryOperator 0x122828060 <line:19:7, col:8> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   | `-RecoveryExpr 0x122828040 <col:8> '<dependent type>' contains-errors lvalue
        |   |-UnaryOperator 0x122828098 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   | `-RecoveryExpr 0x122828078 <col:22> '<dependent type>' contains-errors lvalue
        |   `-RecoveryExpr 0x1228280b0 <line:20:7> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x1228283c0 <line:21:3, line:22:39>
        | |-BinaryOperator 0x122828188 <line:21:7, col:16> 'int' '<'
        | | |-ImplicitCastExpr 0x122828170 <col:7> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x122828130 <col:7> 'int' lvalue Var 0x12280dfe0 'retval' 'int'
        | | `-IntegerLiteral 0x122828150 <col:16> 'int' 0
        | `-CallExpr 0x122828378 <line:22:4, col:39> 'int'
        |   |-ImplicitCastExpr 0x122828360 <col:4> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x1228281a8 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'
        |   |-ImplicitCastExpr 0x1228283a8 <col:9> 'char *' <ArrayToPointerDecay>
        |   | `-StringLiteral 0x1228281c8 <col:9> 'char[4]' lvalue "STR"
        |   `-CallExpr 0x122828320 <col:16, col:38> 'int'
        |     |-ImplicitCastExpr 0x122828308 <col:16> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x1228282c8 <col:16> 'int ()' Function 0x122828210 'gnutls_strerror' 'int ()'
        |     `-ImplicitCastExpr 0x122828348 <col:32> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x1228282e8 <col:32> 'int' lvalue Var 0x12280dfe0 'retval' 'int'
        |-IfStmt 0x123808ef0 <line:32:3, line:34:3>
        | |-RecoveryExpr 0x123808d80 <line:32:7, col:17> '_Bool' contains-errors
        | `-CompoundStmt 0x123808ed8 <col:35, line:34:3>
        |   `-CallExpr 0x123808e90 <line:33:4, col:39> 'int'
        |     |-ImplicitCastExpr 0x123808e78 <col:4> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x123808da0 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'
        |     |-ImplicitCastExpr 0x123808ec0 <col:9> 'char *' <ArrayToPointerDecay>
        |     | `-StringLiteral 0x123808dc0 <col:9> 'char[4]' lvalue "STR"
        |     `-CallExpr 0x123808e38 <col:16, col:38> 'int'
        |       |-ImplicitCastExpr 0x123808e20 <col:16> 'int (*)()' <FunctionToPointerDecay>
        |       | `-DeclRefExpr 0x123808de0 <col:16> 'int ()' Function 0x122828210 'gnutls_strerror' 'int ()'
        |       `-ImplicitCastExpr 0x123808e60 <col:32> 'int' <LValueToRValue>
        |         `-DeclRefExpr 0x123808e00 <col:32> 'int' lvalue Var 0x12280dfe0 'retval' 'int'
        |-DoStmt 0x123809440 <line:41:3, line:43:70>
        | |-CompoundStmt 0x1238093d0 <line:41:6, line:43:3>
        | `-RecoveryExpr 0x123809420 <col:12, col:50> '_Bool' contains-errors
        |-IfStmt 0x1238097b8 <line:45:3, line:49:3> has_else
        | |-BinaryOperator 0x1238094b8 <line:45:7, col:16> 'int' '<'
        | | |-ImplicitCastExpr 0x1238094a0 <col:7> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x123809460 <col:7> 'int' lvalue Var 0x12280dfe0 'retval' 'int'
        | | `-IntegerLiteral 0x123809480 <col:16> 'int' 0
        | |-CompoundStmt 0x123809610 <col:19, line:47:3>
        | | `-CallExpr 0x1238095c8 <line:46:4, col:39> 'int'
        | |   |-ImplicitCastExpr 0x1238095b0 <col:4> 'int (*)()' <FunctionToPointerDecay>
        | |   | `-DeclRefExpr 0x1238094d8 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'
        | |   |-ImplicitCastExpr 0x1238095f8 <col:9> 'char *' <ArrayToPointerDecay>
        | |   | `-StringLiteral 0x1238094f8 <col:9> 'char[4]' lvalue "STR"
        | |   `-CallExpr 0x123809570 <col:16, col:38> 'int'
        | |     |-ImplicitCastExpr 0x123809558 <col:16> 'int (*)()' <FunctionToPointerDecay>
        | |     | `-DeclRefExpr 0x123809518 <col:16> 'int ()' Function 0x122828210 'gnutls_strerror' 'int ()'
        | |     `-ImplicitCastExpr 0x123809598 <col:32> 'int' <LValueToRValue>
        | |       `-DeclRefExpr 0x123809538 <col:32> 'int' lvalue Var 0x12280dfe0 'retval' 'int'
        | `-CompoundStmt 0x1238097a0 <line:47:10, line:49:3>
        |   `-CallExpr 0x123809760 <line:48:4, col:17> 'int'
        |     |-ImplicitCastExpr 0x123809748 <col:4> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x123809708 <col:4> 'int ()' Function 0x123809650 'success' 'int ()'
        |     `-ImplicitCastExpr 0x123809788 <col:12> 'char *' <ArrayToPointerDecay>
        |       `-StringLiteral 0x123809728 <col:12> 'char[4]' lvalue "STR"
        `-IfStmt 0x12380a050 <line:51:3, line:54:17> has_else
          |-RecoveryExpr 0x123809f00 <line:51:7, col:40> '_Bool' contains-errors
          |-CallExpr 0x123809f78 <line:52:4, col:14> 'int'
          | |-ImplicitCastExpr 0x123809f60 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x123809f20 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'
          | `-ImplicitCastExpr 0x123809fa0 <col:9> 'char *' <ArrayToPointerDecay>
          |   `-StringLiteral 0x123809f40 <col:9> 'char[4]' lvalue "STR"
          `-CallExpr 0x12380a010 <line:54:4, col:17> 'int'
            |-ImplicitCastExpr 0x123809ff8 <col:4> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x123809fb8 <col:4> 'int ()' Function 0x123809650 'success' 'int ()'
            `-ImplicitCastExpr 0x12380a038 <col:12> 'char *' <ArrayToPointerDecay>
              `-StringLiteral 0x123809fd8 <col:12> 'char[4]' lvalue "STR"
