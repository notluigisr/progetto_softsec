TranslationUnitDecl 0x143055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1430564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x143055bd0 '__int128'
|-TypedefDecl 0x143056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x143055bf0 'unsigned __int128'
|-TypedefDecl 0x143126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x143126800 'struct __NSConstantString_tag'
|   `-Record 0x143056580 '__NSConstantString_tag'
|-TypedefDecl 0x143126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x143055d90 '__SVInt8_t'
|-TypedefDecl 0x143126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x143055db0 '__SVInt16_t'
|-TypedefDecl 0x143126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x143055dd0 '__SVInt32_t'
|-TypedefDecl 0x143126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x143055df0 '__SVInt64_t'
|-TypedefDecl 0x143126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x143055e10 '__SVUint8_t'
|-TypedefDecl 0x143126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x143055e30 '__SVUint16_t'
|-TypedefDecl 0x143126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x143055e50 '__SVUint32_t'
|-TypedefDecl 0x143126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x143055e70 '__SVUint64_t'
|-TypedefDecl 0x143126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x143055e90 '__SVFloat16_t'
|-TypedefDecl 0x143126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x143055eb0 '__SVFloat32_t'
|-TypedefDecl 0x143126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x143055ed0 '__SVFloat64_t'
|-TypedefDecl 0x143126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x143055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x143126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x143055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x143126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x143055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x143127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x143055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1431270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x143055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x143127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x143055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x143127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x143055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1431271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x143055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x143127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x143055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1431272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x143056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x143127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x143056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x143127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x143056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1431273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x143056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x143127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x143056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1431274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1430560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x143127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1430560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x143127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1430560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1431275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x143056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x143127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x143056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1431276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x143056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x143127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x143056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x143127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x143056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x143128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1430561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x143128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1430561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1431280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1430561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x143128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x143056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1431281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x143056230 '__clang_svint16x4_t'
|-TypedefDecl 0x143128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x143056250 '__clang_svint32x4_t'
|-TypedefDecl 0x143128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x143056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1431282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x143056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x143128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1430562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1431283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1430562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x143128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1430562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x143128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x143056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1431284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x143056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x143128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x143056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1431285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x143056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x143128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x143056390 '__SVBool_t'
|-TypedefDecl 0x143128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1430563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1431286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1430563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x143128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1430563f0 '__SVCount_t'
|-TypedefDecl 0x1431287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1431287b0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-TypedefDecl 0x143128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1431287b0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-FunctionDecl 0x143128b18 <dataset_diviso_filec/func18299_nonvuln.c:1:1, line:51:1> line:1:14 invalid core_analysis_graph_label 'char *(int *, int *, int)' static
| |-ParmVarDecl 0x143128928 <col:40, col:48> col:48 invalid core 'int *'
| |-ParmVarDecl 0x1431289a8 <col:54, col:71> col:71 invalid bb 'int *'
| |-ParmVarDecl 0x143128a28 <col:75, col:79> col:79 used opts 'int'
| `-CompoundStmt 0x14380b3d8 <col:85, line:51:1>
|   |-DeclStmt 0x143142298 <line:2:2, col:44>
|   | `-VarDecl 0x143128bf0 <col:2, col:37> col:6 used is_html 'int' cinit
|   |   `-RecoveryExpr 0x143142270 <col:16, col:37> '<dependent type>' contains-errors lvalue
|   |     `-CallExpr 0x143128e18 <col:16, col:34> 'int'
|   |       `-ImplicitCastExpr 0x143128e00 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x143128db0 <col:16> 'int ()' Function 0x143128cf8 'rz_cons_singleton' 'int ()'
|   |-DeclStmt 0x1431423c8 <line:3:2, col:44>
|   | `-VarDecl 0x1431422c8 <col:2, col:23> col:6 used is_json 'int' cinit
|   |   `-BinaryOperator 0x1431423a8 <col:16, col:23> '<dependent type>' contains-errors '&'
|   |     |-DeclRefExpr 0x143142330 <col:16> 'int' lvalue ParmVar 0x143128a28 'opts' 'int'
|   |     `-RecoveryExpr 0x143142388 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x143142808 <line:4:2, col:74>
|   | |-VarDecl 0x143142480 <col:2, col:15> col:7 used cmd 'char[1024]'
|   | |-VarDecl 0x143142548 <col:2, col:27> col:18 used file 'char[1024]'
|   | |-VarDecl 0x1431425c8 <col:2, col:40> col:31 used cmdstr 'char *' cinit
|   | | `-RecoveryExpr 0x143142648 <col:40> '<dependent type>' contains-errors lvalue
|   | |-VarDecl 0x143142680 <col:2, col:57> col:47 used filestr 'char *' cinit
|   | | `-RecoveryExpr 0x143142700 <col:57> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x143142738 <col:2, col:70> col:64 used str 'char *' cinit
|   |   `-RecoveryExpr 0x1431427b8 <col:70> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x143142a20 <line:5:2, col:34>
|   | |-VarDecl 0x143142838 <col:2, col:13> col:6 used line 'int' cinit
|   | | `-IntegerLiteral 0x1431428a0 <col:13> 'int' 0
|   | |-VarDecl 0x1431428d8 <col:2, col:24> col:16 used oline 'int' cinit
|   | | `-IntegerLiteral 0x143142940 <col:24> 'int' 0
|   | `-VarDecl 0x143142978 <col:2, col:33> col:27 used idx 'int' cinit
|   |   `-IntegerLiteral 0x1431429e0 <col:33> 'int' 0
|   |-IfStmt 0x14380b050 <line:8:2, line:45:2> has_else
|   | |-BinaryOperator 0x143142ab0 <line:8:6, col:13> '<dependent type>' contains-errors '&'
|   | | |-DeclRefExpr 0x143142a38 <col:6> 'int' lvalue ParmVar 0x143128a28 'opts' 'int'
|   | | `-RecoveryExpr 0x143142a90 <col:13> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x143809f38 <col:42, line:33:2>
|   | | `-ForStmt 0x143809f00 <line:9:3, line:32:3>
|   | |   |-<<<NULL>>>
|   | |   |-<<<NULL>>>
|   | |   |-BinaryOperator 0x143142cb8 <line:9:23, col:43> 'int' contains-errors '<'
|   | |   | |-RecoveryExpr 0x143142c98 <col:23> '<dependent type>' contains-errors lvalue
|   | |   | `-BinaryOperator 0x143142c58 <col:28, col:43> '<dependent type>' contains-errors '+'
|   | |   |   |-CXXDependentScopeMemberExpr 0x143142ba8 <col:28, col:32> '<dependent type>' contains-errors lvalue ->addr
|   | |   |   | `-RecoveryExpr 0x143142b88 <col:28> '<dependent type>' contains-errors lvalue
|   | |   |   `-CXXDependentScopeMemberExpr 0x143142c10 <col:39, col:43> '<dependent type>' contains-errors lvalue ->size
|   | |   |     `-RecoveryExpr 0x143142bf0 <col:39> '<dependent type>' contains-errors lvalue
|   | |   |-CompoundAssignOperator 0x143142d60 <col:49, col:55> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |   | |-RecoveryExpr 0x143142d40 <col:49> '<dependent type>' contains-errors lvalue
|   | |   | `-IntegerLiteral 0x143142cf0 <col:55> 'int' 2
|   | |   `-CompoundStmt 0x143809ed8 <col:58, line:32:3>
|   | |     |-CallExpr 0x143143ad8 <line:10:4, col:65> '<dependent type>' contains-errors
|   | |     | |-DeclRefExpr 0x143142e70 <col:4> 'int ()' Function 0x143142db8 'rz_bin_addr2line' 'int ()'
|   | |     | |-CXXDependentScopeMemberExpr 0x143142eb0 <col:21, col:27> '<dependent type>' contains-errors lvalue ->bin
|   | |     | | `-RecoveryExpr 0x143142e90 <col:21> '<dependent type>' contains-errors lvalue
|   | |     | |-RecoveryExpr 0x143143a80 <col:32> '<dependent type>' contains-errors lvalue
|   | |     | |-DeclRefExpr 0x143142f10 <col:36> 'char[1024]' lvalue Var 0x143142548 'file' 'char[1024]'
|   | |     | |-BinaryOperator 0x143143ab8 <col:42, col:57> 'unsigned long' '-'
|   | |     | | |-UnaryExprOrTypeTraitExpr 0x143142f70 <col:42, col:53> 'unsigned long' sizeof
|   | |     | | | `-ParenExpr 0x143142f50 <col:48, col:53> 'char[1024]' lvalue
|   | |     | | |   `-DeclRefExpr 0x143142f30 <col:49> 'char[1024]' lvalue Var 0x143142548 'file' 'char[1024]' non_odr_use_unevaluated
|   | |     | | `-ImplicitCastExpr 0x143143aa0 <col:57> 'unsigned long' <IntegralCast>
|   | |     | |   `-IntegerLiteral 0x143142f90 <col:57> 'int' 1
|   | |     | `-UnaryOperator 0x143143a20 <col:60, col:61> 'int *' prefix '&' cannot overflow
|   | |     |   `-DeclRefExpr 0x143143a00 <col:61> 'int' lvalue Var 0x143142838 'line' 'int'
|   | |     |-IfStmt 0x143809e40 <line:11:4, line:30:4>
|   | |     | |-BinaryOperator 0x143144018 <line:11:8, col:56> 'int' '&&'
|   | |     | | |-BinaryOperator 0x143143c28 <col:8, col:29> 'int' '&&'
|   | |     | | | |-BinaryOperator 0x143143b78 <col:8, col:16> 'int' '!='
|   | |     | | | | |-ImplicitCastExpr 0x143143b60 <col:8> 'int' <LValueToRValue>
|   | |     | | | | | `-DeclRefExpr 0x143143b20 <col:8> 'int' lvalue Var 0x143142838 'line' 'int'
|   | |     | | | | `-IntegerLiteral 0x143143b40 <col:16> 'int' 0
|   | |     | | | `-BinaryOperator 0x143143c08 <col:21, col:29> 'int' '!='
|   | |     | | |   |-ImplicitCastExpr 0x143143bd8 <col:21> 'int' <LValueToRValue>
|   | |     | | |   | `-DeclRefExpr 0x143143b98 <col:21> 'int' lvalue Var 0x143142838 'line' 'int'
|   | |     | | |   `-ImplicitCastExpr 0x143143bf0 <col:29> 'int' <LValueToRValue>
|   | |     | | |     `-DeclRefExpr 0x143143bb8 <col:29> 'int' lvalue Var 0x1431428d8 'oline' 'int'
|   | |     | | `-CallExpr 0x143143f88 <col:38, col:56> 'int'
|   | |     | |   |-ImplicitCastExpr 0x143143f70 <col:38> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |     | |   | `-DeclRefExpr 0x143143e70 <col:38> 'int (const char *, const char *)' Function 0x143143c90 'strcmp' 'int (const char *, const char *)'
|   | |     | |   |-ImplicitCastExpr 0x143143fd0 <col:45> 'const char *' <NoOp>
|   | |     | |   | `-ImplicitCastExpr 0x143143fb8 <col:45> 'char *' <ArrayToPointerDecay>
|   | |     | |   |   `-DeclRefExpr 0x143143e90 <col:45> 'char[1024]' lvalue Var 0x143142548 'file' 'char[1024]'
|   | |     | |   `-ImplicitCastExpr 0x143144000 <col:51> 'const char *' <NoOp>
|   | |     | |     `-ImplicitCastExpr 0x143143fe8 <col:51> 'char *' <ArrayToPointerDecay>
|   | |     | |       `-StringLiteral 0x143143ef0 <col:51> 'char[4]' lvalue "STR"
|   | |     | `-CompoundStmt 0x143809e20 <col:59, line:30:4>
|   | |     |   |-BinaryOperator 0x143144250 <line:12:5, col:47> 'char *' contains-errors '='
|   | |     |   | |-DeclRefExpr 0x143144038 <col:5> 'char *' contains-errors lvalue Var 0x143142680 'filestr' 'char *'
|   | |     |   | `-ImplicitCastExpr 0x143144238 <col:15, col:47> 'char *' <IntegralToPointer>
|   | |     |   |   `-CallExpr 0x1431441d0 <col:15, col:47> 'int'
|   | |     |   |     |-ImplicitCastExpr 0x1431441b8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   | |     |   |     | `-DeclRefExpr 0x143144138 <col:15> 'int ()' Function 0x143144080 'rz_file_slurp_line' 'int ()'
|   | |     |   |     |-ImplicitCastExpr 0x143144208 <col:34> 'char *' <ArrayToPointerDecay>
|   | |     |   |     | `-DeclRefExpr 0x143144158 <col:34> 'char[1024]' lvalue Var 0x143142548 'file' 'char[1024]'
|   | |     |   |     |-ImplicitCastExpr 0x143144220 <col:40> 'int' <LValueToRValue>
|   | |     |   |     | `-DeclRefExpr 0x143144178 <col:40> 'int' lvalue Var 0x143142838 'line' 'int'
|   | |     |   |     `-IntegerLiteral 0x143144198 <col:46> 'int' 0
|   | |     |   `-IfStmt 0x143809e00 <line:13:5, line:29:5>
|   | |     |     |-ImplicitCastExpr 0x143144290 <line:13:9> 'char *' contains-errors <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x143144270 <col:9> 'char *' contains-errors lvalue Var 0x143142680 'filestr' 'char *'
|   | |     |     `-CompoundStmt 0x143809dc0 <col:18, line:29:5>
|   | |     |       |-DeclStmt 0x1431445e8 <line:14:6, col:32>
|   | |     |       | `-VarDecl 0x1431442c0 <col:6, col:31> col:10 used flen 'int' cinit
|   | |     |       |   `-ImplicitCastExpr 0x1431445d0 <col:17, col:31> 'int' contains-errors <IntegralCast>
|   | |     |       |     `-CallExpr 0x143144578 <col:17, col:31> 'unsigned long' contains-errors
|   | |     |       |       |-ImplicitCastExpr 0x143144560 <col:17> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |     |       |       | `-DeclRefExpr 0x1431444d8 <col:17> 'unsigned long (const char *)' Function 0x143144368 'strlen' 'unsigned long (const char *)'
|   | |     |       |       `-ImplicitCastExpr 0x1431445b8 <col:24> 'const char *' contains-errors <NoOp>
|   | |     |       |         `-ImplicitCastExpr 0x1431445a0 <col:24> 'char *' contains-errors <LValueToRValue>
|   | |     |       |           `-DeclRefExpr 0x1431444f8 <col:24> 'char *' contains-errors lvalue Var 0x143142680 'filestr' 'char *'
|   | |     |       |-BinaryOperator 0x143808c90 <line:15:6, col:45> 'char *' contains-errors '='
|   | |     |       | |-DeclRefExpr 0x143144600 <col:6> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   | |     |       | `-ImplicitCastExpr 0x143808c78 <col:15, col:45> 'char *' contains-errors <BitCast>
|   | |     |       |   `-CallExpr 0x143808c00 <col:15, col:45> 'void *' contains-errors
|   | |     |       |     |-ImplicitCastExpr 0x1431449d0 <col:15> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
|   | |     |       |     | `-DeclRefExpr 0x143144870 <col:15> 'void *(void *, unsigned long)' Function 0x143144660 'realloc' 'void *(void *, unsigned long)'
|   | |     |       |     |-ImplicitCastExpr 0x143808c48 <col:23> 'void *' contains-errors <BitCast>
|   | |     |       |     | `-ImplicitCastExpr 0x143808c30 <col:23> 'char *' contains-errors <LValueToRValue>
|   | |     |       |     |   `-DeclRefExpr 0x143144890 <col:23> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   | |     |       |     `-ImplicitCastExpr 0x143808c60 <col:31, col:44> 'unsigned long' contains-errors <IntegralCast>
|   | |     |       |       `-BinaryOperator 0x143144960 <col:31, col:44> 'int' contains-errors '+'
|   | |     |       |         |-BinaryOperator 0x143144920 <col:31, col:37> 'int' contains-errors '+'
|   | |     |       |         | |-ImplicitCastExpr 0x1431448f0 <col:31> 'int' <LValueToRValue>
|   | |     |       |         | | `-DeclRefExpr 0x1431448b0 <col:31> 'int' lvalue Var 0x143142978 'idx' 'int'
|   | |     |       |         | `-ImplicitCastExpr 0x143144908 <col:37> 'int' contains-errors <LValueToRValue>
|   | |     |       |         |   `-DeclRefExpr 0x1431448d0 <col:37> 'int' contains-errors lvalue Var 0x1431442c0 'flen' 'int'
|   | |     |       |         `-IntegerLiteral 0x143144940 <col:44> 'int' 8
|   | |     |       |-CallExpr 0x1438090e8 <line:16:6, col:40> 'void *' contains-errors
|   | |     |       | |-ImplicitCastExpr 0x1438090d0 <col:6> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |     |       | | `-DeclRefExpr 0x143808f78 <col:6> 'void *(void *, const void *, unsigned long)' Function 0x143808d28 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     |       | |-ImplicitCastExpr 0x143809120 <col:13, col:22> 'void *' contains-errors <BitCast>
|   | |     |       | | `-BinaryOperator 0x143809008 <col:13, col:22> 'char *' contains-errors '+'
|   | |     |       | |   |-ImplicitCastExpr 0x143808fd8 <col:13> 'char *' contains-errors <LValueToRValue>
|   | |     |       | |   | `-DeclRefExpr 0x143808f98 <col:13> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   | |     |       | |   `-ImplicitCastExpr 0x143808ff0 <col:22> 'int' <LValueToRValue>
|   | |     |       | |     `-DeclRefExpr 0x143808fb8 <col:22> 'int' lvalue Var 0x143142978 'idx' 'int'
|   | |     |       | |-ImplicitCastExpr 0x143809150 <col:27> 'const void *' contains-errors <BitCast>
|   | |     |       | | `-ImplicitCastExpr 0x143809138 <col:27> 'char *' contains-errors <LValueToRValue>
|   | |     |       | |   `-DeclRefExpr 0x143809028 <col:27> 'char *' contains-errors lvalue Var 0x143142680 'filestr' 'char *'
|   | |     |       | `-ImplicitCastExpr 0x143809180 <col:36> 'unsigned long' contains-errors <IntegralCast>
|   | |     |       |   `-ImplicitCastExpr 0x143809168 <col:36> 'int' contains-errors <LValueToRValue>
|   | |     |       |     `-DeclRefExpr 0x143809048 <col:36> 'int' contains-errors lvalue Var 0x1431442c0 'flen' 'int'
|   | |     |       |-CompoundAssignOperator 0x1438091f0 <line:17:6, col:13> 'int' contains-errors '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     |       | |-DeclRefExpr 0x143809198 <col:6> 'int' lvalue Var 0x143142978 'idx' 'int'
|   | |     |       | `-ImplicitCastExpr 0x1438091d8 <col:13> 'int' contains-errors <LValueToRValue>
|   | |     |       |   `-DeclRefExpr 0x1438091b8 <col:13> 'int' contains-errors lvalue Var 0x1431442c0 'flen' 'int'
|   | |     |       |-IfStmt 0x143809af0 <line:18:6, line:27:6> has_else
|   | |     |       | |-ImplicitCastExpr 0x143809240 <line:18:10> 'int' contains-errors <LValueToRValue>
|   | |     |       | | `-DeclRefExpr 0x143809220 <col:10> 'int' contains-errors lvalue Var 0x1431422c8 'is_json' 'int'
|   | |     |       | |-CompoundStmt 0x143809688 <col:19, line:21:6>
|   | |     |       | | |-CallExpr 0x1438095b8 <line:19:7, col:33> 'char *' contains-errors
|   | |     |       | | | |-ImplicitCastExpr 0x1438095a0 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | |     |       | | | | `-DeclRefExpr 0x143809480 <col:7> 'char *(char *, const char *)' Function 0x1438092a0 'strcpy' 'char *(char *, const char *)'
|   | |     |       | | | |-BinaryOperator 0x143809510 <col:14, col:23> 'char *' contains-errors '+'
|   | |     |       | | | | |-ImplicitCastExpr 0x1438094e0 <col:14> 'char *' contains-errors <LValueToRValue>
|   | |     |       | | | | | `-DeclRefExpr 0x1438094a0 <col:14> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   | |     |       | | | | `-ImplicitCastExpr 0x1438094f8 <col:23> 'int' <LValueToRValue>
|   | |     |       | | | |   `-DeclRefExpr 0x1438094c0 <col:23> 'int' lvalue Var 0x143142978 'idx' 'int'
|   | |     |       | | | `-ImplicitCastExpr 0x143809600 <col:28> 'const char *' <NoOp>
|   | |     |       | | |   `-ImplicitCastExpr 0x1438095e8 <col:28> 'char *' <ArrayToPointerDecay>
|   | |     |       | | |     `-StringLiteral 0x143809530 <col:28> 'char[4]' lvalue "STR"
|   | |     |       | | `-CompoundAssignOperator 0x143809658 <line:20:7, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     |       | |   |-DeclRefExpr 0x143809618 <col:7> 'int' lvalue Var 0x143142978 'idx' 'int'
|   | |     |       | |   `-IntegerLiteral 0x143809638 <col:14> 'int' 2
|   | |     |       | `-IfStmt 0x143809ac0 <line:21:13, line:27:6> has_else
|   | |     |       |   |-ImplicitCastExpr 0x1438096c8 <line:21:17> 'int' contains-errors <LValueToRValue>
|   | |     |       |   | `-DeclRefExpr 0x1438096a8 <col:17> 'int' contains-errors lvalue Var 0x143128bf0 'is_html' 'int'
|   | |     |       |   |-CompoundStmt 0x1438098b0 <col:26, line:24:6>
|   | |     |       |   | |-CallExpr 0x1438097e0 <line:22:7, col:33> 'char *' contains-errors
|   | |     |       |   | | |-ImplicitCastExpr 0x1438097c8 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | |     |       |   | | | `-DeclRefExpr 0x1438096e0 <col:7> 'char *(char *, const char *)' Function 0x1438092a0 'strcpy' 'char *(char *, const char *)'
|   | |     |       |   | | |-BinaryOperator 0x143809770 <col:14, col:23> 'char *' contains-errors '+'
|   | |     |       |   | | | |-ImplicitCastExpr 0x143809740 <col:14> 'char *' contains-errors <LValueToRValue>
|   | |     |       |   | | | | `-DeclRefExpr 0x143809700 <col:14> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   | |     |       |   | | | `-ImplicitCastExpr 0x143809758 <col:23> 'int' <LValueToRValue>
|   | |     |       |   | | |   `-DeclRefExpr 0x143809720 <col:23> 'int' lvalue Var 0x143142978 'idx' 'int'
|   | |     |       |   | | `-ImplicitCastExpr 0x143809828 <col:28> 'const char *' <NoOp>
|   | |     |       |   | |   `-ImplicitCastExpr 0x143809810 <col:28> 'char *' <ArrayToPointerDecay>
|   | |     |       |   | |     `-StringLiteral 0x143809790 <col:28> 'char[4]' lvalue "STR"
|   | |     |       |   | `-CompoundAssignOperator 0x143809880 <line:23:7, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     |       |   |   |-DeclRefExpr 0x143809840 <col:7> 'int' lvalue Var 0x143142978 'idx' 'int'
|   | |     |       |   |   `-IntegerLiteral 0x143809860 <col:14> 'int' 6
|   | |     |       |   `-CompoundStmt 0x143809aa0 <line:24:13, line:27:6>
|   | |     |       |     |-CallExpr 0x1438099d0 <line:25:7, col:33> 'char *' contains-errors
|   | |     |       |     | |-ImplicitCastExpr 0x1438099b8 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | |     |       |     | | `-DeclRefExpr 0x1438098d0 <col:7> 'char *(char *, const char *)' Function 0x1438092a0 'strcpy' 'char *(char *, const char *)'
|   | |     |       |     | |-BinaryOperator 0x143809960 <col:14, col:23> 'char *' contains-errors '+'
|   | |     |       |     | | |-ImplicitCastExpr 0x143809930 <col:14> 'char *' contains-errors <LValueToRValue>
|   | |     |       |     | | | `-DeclRefExpr 0x1438098f0 <col:14> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   | |     |       |     | | `-ImplicitCastExpr 0x143809948 <col:23> 'int' <LValueToRValue>
|   | |     |       |     | |   `-DeclRefExpr 0x143809910 <col:23> 'int' lvalue Var 0x143142978 'idx' 'int'
|   | |     |       |     | `-ImplicitCastExpr 0x143809a18 <col:28> 'const char *' <NoOp>
|   | |     |       |     |   `-ImplicitCastExpr 0x143809a00 <col:28> 'char *' <ArrayToPointerDecay>
|   | |     |       |     |     `-StringLiteral 0x143809980 <col:28> 'char[4]' lvalue "STR"
|   | |     |       |     `-CompoundAssignOperator 0x143809a70 <line:26:7, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     |       |       |-DeclRefExpr 0x143809a30 <col:7> 'int' lvalue Var 0x143142978 'idx' 'int'
|   | |     |       |       `-IntegerLiteral 0x143809a50 <col:14> 'int' 2
|   | |     |       `-CallExpr 0x143809d68 <line:28:6, col:18> 'void' contains-errors
|   | |     |         |-ImplicitCastExpr 0x143809d50 <col:6> 'void (*)(void *)' <FunctionToPointerDecay>
|   | |     |         | `-DeclRefExpr 0x143809cc8 <col:6> 'void (void *)' Function 0x143809b58 'free' 'void (void *)'
|   | |     |         `-ImplicitCastExpr 0x143809da8 <col:11> 'void *' contains-errors <BitCast>
|   | |     |           `-ImplicitCastExpr 0x143809d90 <col:11> 'char *' contains-errors <LValueToRValue>
|   | |     |             `-DeclRefExpr 0x143809ce8 <col:11> 'char *' contains-errors lvalue Var 0x143142680 'filestr' 'char *'
|   | |     `-BinaryOperator 0x143809eb8 <line:31:4, col:12> 'int' '='
|   | |       |-DeclRefExpr 0x143809e60 <col:4> 'int' lvalue Var 0x1431428d8 'oline' 'int'
|   | |       `-ImplicitCastExpr 0x143809ea0 <col:12> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x143809e80 <col:12> 'int' lvalue Var 0x143142838 'line' 'int'
|   | `-IfStmt 0x14380b020 <line:33:9, line:45:2> has_else
|   |   |-RecoveryExpr 0x143809f70 <line:33:13, col:20> '_Bool' contains-errors
|   |   |-CompoundStmt 0x14380a4d8 <col:43, line:36:2>
|   |   | `-BinaryOperator 0x14380a4b8 <line:35:3, col:34> 'char *' contains-errors '='
|   |   |   |-DeclRefExpr 0x14380a328 <col:3> 'char *' contains-errors lvalue Var 0x143142738 'str' 'char *'
|   |   |   `-CallExpr 0x14380a488 <col:9, col:34> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x14380a428 <col:9> 'int ()' Function 0x14380a370 'rz_core_cmd_str' 'int ()'
|   |   |     |-RecoveryExpr 0x14380a448 <col:25> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x14380a468 <col:31> 'char[1024]' lvalue Var 0x143142480 'cmd' 'char[1024]'
|   |   `-IfStmt 0x14380b000 <line:36:9, line:45:2>
|   |     |-RecoveryExpr 0x14380a510 <line:36:13, col:20> '_Bool' contains-errors
|   |     `-CompoundStmt 0x14380afc0 <col:48, line:45:2>
|   |       |-DeclStmt 0x14380a768 <line:37:3, col:59>
|   |       | `-VarDecl 0x14380a548 <col:3, col:14> col:14 invalid scrColor 'const int'
|   |       |-DeclStmt 0x14380a8d8 <line:38:3, col:58>
|   |       | `-VarDecl 0x14380a798 <col:3, col:14> col:14 invalid scrUtf8 'const int'
|   |       |-CallExpr 0x14380ac00 <line:40:3, col:36> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x14380ab58 <col:3> 'int ()' Function 0x14380aaa0 'rz_config_set' 'int ()'
|   |       | |-CXXDependentScopeMemberExpr 0x14380ab98 <col:17, col:23> '<dependent type>' contains-errors lvalue ->config
|   |       | | `-RecoveryExpr 0x14380ab78 <col:17> '<dependent type>' contains-errors lvalue
|   |       | `-StringLiteral 0x14380abe0 <col:31> 'char[4]' lvalue "STR"
|   |       |-BinaryOperator 0x14380ada0 <line:42:3, col:37> 'char *' contains-errors '='
|   |       | |-DeclRefExpr 0x14380acf0 <col:3> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   |       | `-CallExpr 0x14380ad70 <col:12, col:37> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x14380ad10 <col:12> 'int ()' Function 0x14380a370 'rz_core_cmd_str' 'int ()'
|   |       |   |-RecoveryExpr 0x14380ad30 <col:28> '<dependent type>' contains-errors lvalue
|   |       |   `-DeclRefExpr 0x14380ad50 <col:34> 'char[1024]' lvalue Var 0x143142480 'cmd' 'char[1024]'
|   |       |-CallExpr 0x14380ae88 <line:43:3, col:48> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x14380adc0 <col:3> 'int ()' Function 0x14380a918 'rz_config_set_i' 'int ()'
|   |       | |-CXXDependentScopeMemberExpr 0x14380ae00 <col:19, col:25> '<dependent type>' contains-errors lvalue ->config
|   |       | | `-RecoveryExpr 0x14380ade0 <col:19> '<dependent type>' contains-errors lvalue
|   |       | |-StringLiteral 0x14380ae48 <col:33> 'char[4]' lvalue "STR"
|   |       | `-RecoveryExpr 0x14380ae68 <col:40> '<dependent type>' contains-errors lvalue
|   |       `-CallExpr 0x14380af88 <line:44:3, col:47> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x14380aec0 <col:3> 'int ()' Function 0x14380a918 'rz_config_set_i' 'int ()'
|   |         |-CXXDependentScopeMemberExpr 0x14380af00 <col:19, col:25> '<dependent type>' contains-errors lvalue ->config
|   |         | `-RecoveryExpr 0x14380aee0 <col:19> '<dependent type>' contains-errors lvalue
|   |         |-StringLiteral 0x14380af48 <col:33> 'char[4]' lvalue "STR"
|   |         `-RecoveryExpr 0x14380af68 <col:40> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14380b370 <line:46:2, line:49:2>
|   | |-ImplicitCastExpr 0x14380b0a0 <line:46:6> 'char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x14380b080 <col:6> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   | `-CompoundStmt 0x14380b350 <col:14, line:49:2>
|   |   |-BinaryOperator 0x14380b268 <line:47:3, col:33> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x14380b0b8 <col:3> 'char *' contains-errors lvalue Var 0x143142738 'str' 'char *'
|   |   | `-ImplicitCastExpr 0x14380b250 <col:9, col:33> 'char *' contains-errors <IntegralToPointer>
|   |   |   `-CallExpr 0x14380b210 <col:9, col:33> 'int' contains-errors
|   |   |     |-ImplicitCastExpr 0x14380b1f8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x14380b1b8 <col:9> 'int ()' Function 0x14380b100 'rz_str_escape_dot' 'int ()'
|   |   |     `-ImplicitCastExpr 0x14380b238 <col:27> 'char *' contains-errors <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14380b1d8 <col:27> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   |   `-CallExpr 0x14380b2f8 <line:48:3, col:14> 'void' contains-errors
|   |     |-ImplicitCastExpr 0x14380b2e0 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14380b288 <col:3> 'void (void *)' Function 0x143809b58 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x14380b338 <col:8> 'void *' contains-errors <BitCast>
|   |       `-ImplicitCastExpr 0x14380b320 <col:8> 'char *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x14380b2a8 <col:8> 'char *' contains-errors lvalue Var 0x1431425c8 'cmdstr' 'char *'
|   `-ReturnStmt 0x14380b3c8 <line:50:2, col:9>
|     `-ImplicitCastExpr 0x14380b3b0 <col:9> 'char *' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x14380b390 <col:9> 'char *' contains-errors lvalue Var 0x143142738 'str' 'char *'
|-FunctionDecl 0x143143c90 <line:11:38> col:38 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x143143d90 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x143143df8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x143143d38 <<invalid sloc>> Implicit 887
|-FunctionDecl 0x143144368 <line:14:17> col:17 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x143144468 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x143144410 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x143144660 <line:15:15> col:15 implicit used realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x143144760 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1431447c8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x143144708 <<invalid sloc>> Implicit 872
| `-AllocSizeAttr 0x143144840 <col:15> Implicit 2
|-FunctionDecl 0x143808d28 <line:16:6> col:6 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x143808e28 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x143808e90 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x143808ef8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x143808dd0 <<invalid sloc>> Implicit 882
|-FunctionDecl 0x1438092a0 <line:19:7> col:7 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1438093a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x143809408 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x143809348 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x143809b58 <line:28:6> col:6 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x143809c58 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x143809c00 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x143809fe0 <line:34:3> col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x14380a0e0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x14380a148 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x14380a1b0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x14380a088 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x14380a230 <col:3> Implicit printf 3 4
