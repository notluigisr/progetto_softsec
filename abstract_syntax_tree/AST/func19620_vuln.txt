TranslationUnitDecl 0x133055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1330564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x133055bd0 '__int128'
|-TypedefDecl 0x133056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x133055bf0 'unsigned __int128'
|-TypedefDecl 0x133126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x133126a00 'struct __NSConstantString_tag'
|   `-Record 0x133056580 '__NSConstantString_tag'
|-TypedefDecl 0x133126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x133055d90 '__SVInt8_t'
|-TypedefDecl 0x133126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x133055db0 '__SVInt16_t'
|-TypedefDecl 0x133126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x133055dd0 '__SVInt32_t'
|-TypedefDecl 0x133126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x133055df0 '__SVInt64_t'
|-TypedefDecl 0x133126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x133055e10 '__SVUint8_t'
|-TypedefDecl 0x133126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x133055e30 '__SVUint16_t'
|-TypedefDecl 0x133126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x133055e50 '__SVUint32_t'
|-TypedefDecl 0x133126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x133055e70 '__SVUint64_t'
|-TypedefDecl 0x133126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x133055e90 '__SVFloat16_t'
|-TypedefDecl 0x133127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x133055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1331270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x133055ed0 '__SVFloat64_t'
|-TypedefDecl 0x133127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x133055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x133127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x133055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1331271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x133055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x133127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x133055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1331272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x133055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x133127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x133055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x133127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x133055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1331273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x133055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x133127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x133055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1331274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x133056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x133127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x133056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x133127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x133056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1331275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x133056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x133127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x133056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1331276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1330560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x133127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1330560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x133127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1330560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1331277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x133056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x133127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x133056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1331278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x133056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x133127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x133056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x133127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x133056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x133128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1330561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x133128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1330561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1331282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1330561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x133128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x133056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1331283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x133056230 '__clang_svint16x4_t'
|-TypedefDecl 0x133128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x133056250 '__clang_svint32x4_t'
|-TypedefDecl 0x133128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x133056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1331284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x133056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x133128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1330562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1331285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1330562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x133128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1330562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x133128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x133056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1331286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x133056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x133128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x133056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1331287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x133056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x133128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x133056390 '__SVBool_t'
|-TypedefDecl 0x133128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1330563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1331288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1330563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x133128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1330563f0 '__SVCount_t'
|-TypedefDecl 0x1331289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1331289b0 'char *'
|   `-BuiltinType 0x1330556b0 'char'
|-TypedefDecl 0x133128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1331289b0 'char *'
|   `-BuiltinType 0x1330556b0 'char'
|-FunctionDecl 0x1331423f0 <dataset_diviso_filec/func19620_vuln.c:1:1, line:44:1> line:1:13 invalid handle_global 'void (void *, struct wl_registry *, int, const char *, int)' static
| |-ParmVarDecl 0x133128ad8 <col:27, col:33> col:33 used data 'void *'
| |-ParmVarDecl 0x1331290c8 <col:39, col:59> col:59 used registry 'struct wl_registry *'
| |-ParmVarDecl 0x133129160 <line:2:3, col:12> col:12 invalid name 'int'
| |-ParmVarDecl 0x133142200 <col:18, col:30> col:30 used interface 'const char *'
| |-ParmVarDecl 0x133142280 <col:41, col:50> col:50 invalid version 'int'
| `-CompoundStmt 0x13314a8f8 <col:59, line:44:1>
|   |-DeclStmt 0x1331426f8 <line:3:2, col:37>
|   | |-RecordDecl 0x1331424c0 <col:2, col:9> col:9 struct swaylock_state
|   | `-VarDecl 0x133142628 <col:2, col:33> col:25 used state 'struct swaylock_state *' cinit
|   |   `-ImplicitCastExpr 0x1331426c8 <col:33> 'struct swaylock_state *' <BitCast>
|   |     `-ImplicitCastExpr 0x1331426b0 <col:33> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x133142690 <col:33> 'void *' lvalue ParmVar 0x133128ad8 'data' 'void *'
|   `-IfStmt 0x13314a8c8 <line:4:2, line:43:2> has_else
|     |-BinaryOperator 0x133142b38 <line:4:6, col:57> 'int' contains-errors '=='
|     | |-CallExpr 0x133142b08 <col:6, col:52> '<dependent type>' contains-errors
|     | | |-DeclRefExpr 0x133142930 <col:6> 'int (const char *, const char *)' Function 0x133142750 'strcmp' 'int (const char *, const char *)'
|     | | |-DeclRefExpr 0x133142950 <col:13> 'const char *' lvalue ParmVar 0x133142200 'interface' 'const char *'
|     | | `-CXXDependentScopeMemberExpr 0x133142a90 <col:24, col:48> '<dependent type>' contains-errors lvalue .name
|     | |   `-RecoveryExpr 0x133142a70 <col:24> '<dependent type>' contains-errors lvalue
|     | `-IntegerLiteral 0x133142a30 <col:57> 'int' 0
|     |-CompoundStmt 0x133142eb8 <col:60, line:7:2>
|     | `-BinaryOperator 0x133142e98 <line:5:3, line:6:32> '<dependent type>' contains-errors '='
|     |   |-RecoveryExpr 0x133142b90 <line:5:3, col:10> '<dependent type>' contains-errors lvalue
|     |   | `-DeclRefExpr 0x133142b58 <col:3> 'struct swaylock_state *' lvalue Var 0x133142628 'state' 'struct swaylock_state *'
|     |   `-CallExpr 0x133142e58 <col:23, line:6:32> '<dependent type>' contains-errors
|     |     |-DeclRefExpr 0x133142d10 <line:5:23> 'int ()' Function 0x133142c58 'wl_registry_bind' 'int ()'
|     |     |-DeclRefExpr 0x133142d30 <col:40> 'struct wl_registry *' lvalue ParmVar 0x1331290c8 'registry' 'struct wl_registry *'
|     |     |-RecoveryExpr 0x133142d50 <col:50> '<dependent type>' contains-errors lvalue
|     |     |-UnaryOperator 0x133142e40 <line:6:5, col:6> '<dependent type>' contains-errors prefix '&' cannot overflow
|     |     | `-RecoveryExpr 0x133142e20 <col:6> '<dependent type>' contains-errors lvalue
|     |     `-IntegerLiteral 0x133142da0 <col:31> 'int' 4
|     `-IfStmt 0x13314a898 <line:7:9, line:43:2> has_else
|       |-BinaryOperator 0x1331430d8 <line:7:13, col:67> 'int' contains-errors '=='
|       | |-CallExpr 0x1331430a8 <col:13, col:62> '<dependent type>' contains-errors
|       | | |-DeclRefExpr 0x133142ed0 <col:13> 'int (const char *, const char *)' Function 0x133142750 'strcmp' 'int (const char *, const char *)'
|       | | |-DeclRefExpr 0x133142ef0 <col:20> 'const char *' lvalue ParmVar 0x133142200 'interface' 'const char *'
|       | | `-CXXDependentScopeMemberExpr 0x133143030 <col:31, col:58> '<dependent type>' contains-errors lvalue .name
|       | |   `-RecoveryExpr 0x133143010 <col:31> '<dependent type>' contains-errors lvalue
|       | `-IntegerLiteral 0x133142fd0 <col:67> 'int' 0
|       |-CompoundStmt 0x133143318 <col:70, line:10:2>
|       | `-BinaryOperator 0x1331432f8 <line:8:3, line:9:35> '<dependent type>' contains-errors '='
|       |   |-RecoveryExpr 0x133143130 <line:8:3, col:10> '<dependent type>' contains-errors lvalue
|       |   | `-DeclRefExpr 0x1331430f8 <col:3> 'struct swaylock_state *' lvalue Var 0x133142628 'state' 'struct swaylock_state *'
|       |   `-CallExpr 0x1331432b8 <col:26, line:9:35> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x133143158 <line:8:26> 'int ()' Function 0x133142c58 'wl_registry_bind' 'int ()'
|       |     |-DeclRefExpr 0x133143178 <col:43> 'struct wl_registry *' lvalue ParmVar 0x1331290c8 'registry' 'struct wl_registry *'
|       |     |-RecoveryExpr 0x133143198 <col:53> '<dependent type>' contains-errors lvalue
|       |     |-UnaryOperator 0x1331432a0 <line:9:5, col:6> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |     | `-RecoveryExpr 0x133143280 <col:6> '<dependent type>' contains-errors lvalue
|       |     `-IntegerLiteral 0x133143200 <col:34> 'int' 1
|       `-IfStmt 0x13314a868 <line:10:9, line:43:2> has_else
|         |-BinaryOperator 0x133143538 <line:10:13, col:57> 'int' contains-errors '=='
|         | |-CallExpr 0x133143508 <col:13, col:52> '<dependent type>' contains-errors
|         | | |-DeclRefExpr 0x133143330 <col:13> 'int (const char *, const char *)' Function 0x133142750 'strcmp' 'int (const char *, const char *)'
|         | | |-DeclRefExpr 0x133143350 <col:20> 'const char *' lvalue ParmVar 0x133142200 'interface' 'const char *'
|         | | `-CXXDependentScopeMemberExpr 0x133143490 <col:31, col:48> '<dependent type>' contains-errors lvalue .name
|         | |   `-RecoveryExpr 0x133143470 <col:31> '<dependent type>' contains-errors lvalue
|         | `-IntegerLiteral 0x133143430 <col:57> 'int' 0
|         |-CompoundStmt 0x133143760 <col:60, line:13:2>
|         | `-BinaryOperator 0x133143740 <line:11:3, line:12:25> '<dependent type>' contains-errors '='
|         |   |-RecoveryExpr 0x133143590 <line:11:3, col:10> '<dependent type>' contains-errors lvalue
|         |   | `-DeclRefExpr 0x133143558 <col:3> 'struct swaylock_state *' lvalue Var 0x133142628 'state' 'struct swaylock_state *'
|         |   `-CallExpr 0x133143700 <col:16, line:12:25> '<dependent type>' contains-errors
|         |     |-DeclRefExpr 0x1331435b8 <line:11:16> 'int ()' Function 0x133142c58 'wl_registry_bind' 'int ()'
|         |     |-DeclRefExpr 0x1331435d8 <col:33> 'struct wl_registry *' lvalue ParmVar 0x1331290c8 'registry' 'struct wl_registry *'
|         |     |-RecoveryExpr 0x1331435f8 <col:43> '<dependent type>' contains-errors lvalue
|         |     |-UnaryOperator 0x1331436e8 <line:12:5, col:6> '<dependent type>' contains-errors prefix '&' cannot overflow
|         |     | `-RecoveryExpr 0x1331436c8 <col:6> '<dependent type>' contains-errors lvalue
|         |     `-IntegerLiteral 0x133143648 <col:24> 'int' 1
|         `-IfStmt 0x13314a838 <line:13:9, line:43:2> has_else
|           |-BinaryOperator 0x133143980 <line:13:13, col:58> 'int' contains-errors '=='
|           | |-CallExpr 0x133143950 <col:13, col:53> '<dependent type>' contains-errors
|           | | |-DeclRefExpr 0x133143778 <col:13> 'int (const char *, const char *)' Function 0x133142750 'strcmp' 'int (const char *, const char *)'
|           | | |-DeclRefExpr 0x133143798 <col:20> 'const char *' lvalue ParmVar 0x133142200 'interface' 'const char *'
|           | | `-CXXDependentScopeMemberExpr 0x1331438d8 <col:31, col:49> '<dependent type>' contains-errors lvalue .name
|           | |   `-RecoveryExpr 0x1331438b8 <col:31> '<dependent type>' contains-errors lvalue
|           | `-IntegerLiteral 0x133143878 <col:58> 'int' 0
|           |-CompoundStmt 0x1331495e0 <col:61, line:20:2>
|           | |-DeclStmt 0x133143cf0 <line:14:3, line:15:43>
|           | | |-RecordDecl 0x1331439a0 <line:14:3, col:10> col:10 struct wl_seat
|           | | `-VarDecl 0x133143b08 <col:3, line:15:42> line:14:19 used seat 'struct wl_seat *' cinit
|           | |   `-CallExpr 0x133143c98 <col:26, line:15:42> '<dependent type>' contains-errors
|           | |     |-DeclRefExpr 0x133143b70 <line:14:26> 'int ()' Function 0x133142c58 'wl_registry_bind' 'int ()'
|           | |     |-DeclRefExpr 0x133143b90 <line:15:5> 'struct wl_registry *' lvalue ParmVar 0x1331290c8 'registry' 'struct wl_registry *'
|           | |     |-RecoveryExpr 0x133143bb0 <col:15> '<dependent type>' contains-errors lvalue
|           | |     |-UnaryOperator 0x133143c80 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|           | |     | `-RecoveryExpr 0x133143c60 <col:22> '<dependent type>' contains-errors lvalue
|           | |     `-IntegerLiteral 0x133143c00 <col:41> 'int' 4
|           | |-DeclStmt 0x1331441d8 <line:16:3, line:17:43>
|           | | |-RecordDecl 0x133143d08 <line:16:3, col:10> col:10 struct swaylock_seat
|           | | `-VarDecl 0x133143e78 <col:3, col:25> col:25 used swaylock_seat 'struct swaylock_seat *'
|           | `-BinaryOperator 0x133149480 <line:18:3, col:26> '<dependent type>' contains-errors '='
|           |   |-RecoveryExpr 0x133149438 <col:3, col:18> '<dependent type>' contains-errors lvalue
|           |   | `-DeclRefExpr 0x133149400 <col:3> 'struct swaylock_seat *' lvalue Var 0x133143e78 'swaylock_seat' 'struct swaylock_seat *'
|           |   `-DeclRefExpr 0x133149460 <col:26> 'struct swaylock_state *' lvalue Var 0x133142628 'state' 'struct swaylock_state *'
|           `-IfStmt 0x13314a808 <line:20:9, line:43:2> has_else
|             |-RecoveryExpr 0x133149668 <line:20:13, col:70> '_Bool' contains-errors
|             |-CompoundStmt 0x133149768 <col:73, line:23:2>
|             `-IfStmt 0x13314a7d8 <col:9, line:43:2> has_else
|               |-RecoveryExpr 0x1331497d8 <line:23:13, col:80> '_Bool' contains-errors
|               |-CompoundStmt 0x1331498d8 <col:83, line:26:2>
|               `-IfStmt 0x13314a7a8 <col:9, line:43:2> has_else
|                 |-RecoveryExpr 0x133149948 <line:26:13, col:73> '_Bool' contains-errors
|                 |-CompoundStmt 0x133149a48 <col:76, line:29:2>
|                 `-IfStmt 0x13314a788 <col:9, line:43:2>
|                   |-RecoveryExpr 0x133149ab8 <line:29:13, col:60> '_Bool' contains-errors
|                   `-CompoundStmt 0x13314a750 <col:63, line:43:2>
|                     |-DeclStmt 0x133149d58 <line:30:3, line:31:46>
|                     | |-RecordDecl 0x133149ad8 <line:30:3, col:10> col:10 struct swaylock_surface
|                     | `-VarDecl 0x133149c48 <col:3, col:28> col:28 used surface 'struct swaylock_surface *'
|                     |-BinaryOperator 0x133149df0 <line:32:3, col:20> '<dependent type>' contains-errors '='
|                     | |-RecoveryExpr 0x133149da8 <col:3, col:12> '<dependent type>' contains-errors lvalue
|                     | | `-DeclRefExpr 0x133149d70 <col:3> 'struct swaylock_surface *' lvalue Var 0x133149c48 'surface' 'struct swaylock_surface *'
|                     | `-DeclRefExpr 0x133149dd0 <col:20> 'struct swaylock_state *' lvalue Var 0x133142628 'state' 'struct swaylock_state *'
|                     |-BinaryOperator 0x133149f70 <line:35:3, col:33> '<dependent type>' contains-errors '='
|                     | |-RecoveryExpr 0x133149f28 <col:3, col:12> '<dependent type>' contains-errors lvalue
|                     | | `-DeclRefExpr 0x133149ef0 <col:3> 'struct swaylock_surface *' lvalue Var 0x133149c48 'surface' 'struct swaylock_surface *'
|                     | `-RecoveryExpr 0x133149f50 <col:33> '<dependent type>' contains-errors lvalue
|                     |-CallExpr 0x13314a300 <line:37:3, col:50> '<dependent type>' contains-errors
|                     | |-DeclRefExpr 0x13314a1f0 <col:3> 'int ()' Function 0x13314a138 'wl_list_insert' 'int ()'
|                     | |-UnaryOperator 0x13314a270 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|                     | | `-RecoveryExpr 0x13314a248 <col:19, col:26> '<dependent type>' contains-errors lvalue
|                     | |   `-DeclRefExpr 0x13314a210 <col:19> 'struct swaylock_state *' lvalue Var 0x133142628 'state' 'struct swaylock_state *'
|                     | `-UnaryOperator 0x13314a2e8 <col:36, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|                     |   `-RecoveryExpr 0x13314a2c0 <col:37, col:46> '<dependent type>' contains-errors lvalue
|                     |     `-DeclRefExpr 0x13314a288 <col:37> 'struct swaylock_surface *' lvalue Var 0x133149c48 'surface' 'struct swaylock_surface *'
|                     `-IfStmt 0x13314a730 <line:39:3, line:42:3>
|                       |-RecoveryExpr 0x13314a368 <line:39:7, col:14> '<dependent type>' contains-errors lvalue
|                       | `-DeclRefExpr 0x13314a330 <col:7> 'struct swaylock_state *' lvalue Var 0x133142628 'state' 'struct swaylock_state *'
|                       `-CompoundStmt 0x13314a710 <col:27, line:42:3>
|                         |-CallExpr 0x13314a548 <line:40:4, col:32> 'int'
|                         | |-ImplicitCastExpr 0x13314a530 <col:4> 'int (*)()' <FunctionToPointerDecay>
|                         | | `-DeclRefExpr 0x13314a4b8 <col:4> 'int ()' Function 0x13314a400 'create_layer_surface' 'int ()'
|                         | `-ImplicitCastExpr 0x13314a570 <col:25> 'struct swaylock_surface *' <LValueToRValue>
|                         |   `-DeclRefExpr 0x13314a4d8 <col:25> 'struct swaylock_surface *' lvalue Var 0x133149c48 'surface' 'struct swaylock_surface *'
|                         `-CallExpr 0x13314a6e8 <line:41:4, col:39> '<dependent type>' contains-errors
|                           |-DeclRefExpr 0x13314a668 <col:4> 'int ()' Function 0x13314a5b0 'wl_display_roundtrip' 'int ()'
|                           `-RecoveryExpr 0x13314a6c0 <col:25, col:32> '<dependent type>' contains-errors lvalue
|                             `-DeclRefExpr 0x13314a688 <col:25> 'struct swaylock_state *' lvalue Var 0x133142628 'state' 'struct swaylock_state *'
|-FunctionDecl 0x133142750 <line:4:6> col:6 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x133142850 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1331428b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1331427f8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x133143f20 <line:17:4> col:4 implicit used calloc 'void *(unsigned long, unsigned long)' extern
  |-ParmVarDecl 0x133144020 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x133144088 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x133143fc8 <<invalid sloc>> Implicit 868
  `-AllocSizeAttr 0x133144100 <col:4> Implicit 1 2
