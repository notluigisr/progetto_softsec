TranslationUnitDecl 0x124855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1248564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124855bd0 '__int128'
|-TypedefDecl 0x124856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124855bf0 'unsigned __int128'
|-TypedefDecl 0x124926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x124926000 'struct __NSConstantString_tag'
|   `-Record 0x124856580 '__NSConstantString_tag'
|-TypedefDecl 0x124926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124855d90 '__SVInt8_t'
|-TypedefDecl 0x124926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124855db0 '__SVInt16_t'
|-TypedefDecl 0x124926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124855dd0 '__SVInt32_t'
|-TypedefDecl 0x1249263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124855df0 '__SVInt64_t'
|-TypedefDecl 0x124926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124855e10 '__SVUint8_t'
|-TypedefDecl 0x1249264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124855e30 '__SVUint16_t'
|-TypedefDecl 0x124926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124855e50 '__SVUint32_t'
|-TypedefDecl 0x124926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124855e70 '__SVUint64_t'
|-TypedefDecl 0x1249265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124855e90 '__SVFloat16_t'
|-TypedefDecl 0x124926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1249266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124855ed0 '__SVFloat64_t'
|-TypedefDecl 0x124926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x124926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1249267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x124926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1249268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x124926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x124926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1249269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x124926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x124926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x124926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x124926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x124926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x124926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124856090 '__clang_svint8x3_t'
|-TypedefDecl 0x124926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1248560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x124926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1248560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x124926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1248560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x124926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x124926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x124926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x124926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x124926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x124927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1248561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x124927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1248561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1249278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1248561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x124927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1249279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124856230 '__clang_svint16x4_t'
|-TypedefDecl 0x124927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124856250 '__clang_svint32x4_t'
|-TypedefDecl 0x124927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124856270 '__clang_svint64x4_t'
|-TypedefDecl 0x124927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x124927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1248562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x124927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1248562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x124927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1248562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x124927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x124927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x124927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x124927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x124927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124856390 '__SVBool_t'
|-TypedefDecl 0x124927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1248563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x124927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1248563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x124927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1248563f0 '__SVCount_t'
|-TypedefDecl 0x124927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x124927fb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-TypedefDecl 0x124928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x124927fb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
`-FunctionDecl 0x124928238 <dataset_diviso_filec/func17725_vuln.c:1:1, line:39:1> line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x124928158 <col:12> col:12 SplFileObject 'int'
  |-ParmVarDecl 0x1249280d8 <col:27> col:27 setCsvControl 'int'
  `-CompoundStmt 0x125009c28 <line:2:1, line:39:1>
    |-DeclStmt 0x124928598 <line:4:2, col:52>
    | |-VarDecl 0x124928390 <col:2, col:19> col:7 used delimiter 'char' cinit
    | | `-ImplicitCastExpr 0x124928410 <col:19> 'char' <IntegralCast>
    | |   `-CharacterLiteral 0x1249283f8 <col:19> 'int' 44
    | |-VarDecl 0x124928438 <col:2, col:36> col:24 used enclosure 'char' cinit
    | | `-ImplicitCastExpr 0x1249284b8 <col:36> 'char' <IntegralCast>
    | |   `-CharacterLiteral 0x1249284a0 <col:36> 'int' 34
    | `-VarDecl 0x1249284e0 <col:2, col:48> col:41 used escape 'char' cinit
    |   `-ImplicitCastExpr 0x124928560 <col:48> 'char' <IntegralCast>
    |     `-CharacterLiteral 0x124928548 <col:48> 'int' 92
    |-DeclStmt 0x125008e00 <line:5:2, col:48>
    | |-VarDecl 0x1249285c8 <col:2, col:16> col:8 used delim 'char *' cinit
    | | `-RecoveryExpr 0x124928648 <col:16> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x124928680 <col:2, col:31> col:23 used enclo 'char *' cinit
    | | `-RecoveryExpr 0x124928700 <col:31> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x124928738 <col:2, col:44> col:38 used esc 'char *' cinit
    |   `-RecoveryExpr 0x1249287b8 <col:44> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x125009018 <line:6:2, col:39>
    | |-VarDecl 0x125008e30 <col:2, col:14> col:6 used d_len 'int' cinit
    | | `-IntegerLiteral 0x125008e98 <col:14> 'int' 0
    | |-VarDecl 0x125008ed0 <col:2, col:25> col:17 used e_len 'int' cinit
    | | `-IntegerLiteral 0x125008f38 <col:25> 'int' 0
    | `-VarDecl 0x125008f70 <col:2, col:38> col:28 used esc_len 'int' cinit
    |   `-IntegerLiteral 0x125008fd8 <col:38> 'int' 0
    `-IfStmt 0x125009c08 <line:8:2, line:38:2>
      |-RecoveryExpr 0x1250092e0 <line:8:6, col:113> '_Bool' contains-errors
      `-CompoundStmt 0x125009bf0 <col:122, line:38:2>
        `-SwitchStmt 0x125009358 <line:9:3, line:34:3>
          |-CallExpr 0x125009338 <line:9:10, col:24> 'int'
          | `-ImplicitCastExpr 0x125009320 <col:10> 'int (*)()' <FunctionToPointerDecay>
          |   `-DeclRefExpr 0x125009300 <col:10> 'int ()' Function 0x125009188 'ZEND_NUM_ARGS' 'int ()'
          `-CompoundStmt 0x125009b48 <line:10:3, line:34:3>
            |-CaseStmt 0x1250093b8 <line:11:3, line:15:4>
            | |-ConstantExpr 0x1250093a0 <line:11:8> 'int'
            | | `-IntegerLiteral 0x125009380 <col:8> 'int' 3
            | `-IfStmt 0x125009580 <line:12:4, line:15:4>
            |   |-BinaryOperator 0x125009438 <line:12:8, col:19> 'int' '!='
            |   | |-ImplicitCastExpr 0x125009420 <col:8> 'int' <LValueToRValue>
            |   | | `-DeclRefExpr 0x1250093e0 <col:8> 'int' lvalue Var 0x125008f70 'esc_len' 'int'
            |   | `-IntegerLiteral 0x125009400 <col:19> 'int' 1
            |   `-CompoundStmt 0x125009570 <col:22, line:15:4>
            |-BinaryOperator 0x125009650 <line:16:4, col:18> 'char' contains-errors '='
            | |-DeclRefExpr 0x1250095a0 <col:4> 'char' lvalue Var 0x1249284e0 'escape' 'char'
            | `-ImplicitCastExpr 0x125009638 <col:13, col:18> 'char' contains-errors <LValueToRValue>
            |   `-ArraySubscriptExpr 0x125009618 <col:13, col:18> 'char' contains-errors lvalue
            |     |-ImplicitCastExpr 0x125009600 <col:13> 'char *' contains-errors <LValueToRValue>
            |     | `-DeclRefExpr 0x1250095c0 <col:13> 'char *' contains-errors lvalue Var 0x124928738 'esc' 'char *'
            |     `-IntegerLiteral 0x1250095e0 <col:17> 'int' 0
            |-CaseStmt 0x1250096a8 <line:18:3, line:22:4>
            | |-ConstantExpr 0x125009690 <line:18:8> 'int'
            | | `-IntegerLiteral 0x125009670 <col:8> 'int' 2
            | `-IfStmt 0x125009790 <line:19:4, line:22:4>
            |   |-BinaryOperator 0x125009728 <line:19:8, col:17> 'int' '!='
            |   | |-ImplicitCastExpr 0x125009710 <col:8> 'int' <LValueToRValue>
            |   | | `-DeclRefExpr 0x1250096d0 <col:8> 'int' lvalue Var 0x125008ed0 'e_len' 'int'
            |   | `-IntegerLiteral 0x1250096f0 <col:17> 'int' 1
            |   `-CompoundStmt 0x125009780 <col:20, line:22:4>
            |-BinaryOperator 0x125009860 <line:23:4, col:23> 'char' contains-errors '='
            | |-DeclRefExpr 0x1250097b0 <col:4> 'char' lvalue Var 0x124928438 'enclosure' 'char'
            | `-ImplicitCastExpr 0x125009848 <col:16, col:23> 'char' contains-errors <LValueToRValue>
            |   `-ArraySubscriptExpr 0x125009828 <col:16, col:23> 'char' contains-errors lvalue
            |     |-ImplicitCastExpr 0x125009810 <col:16> 'char *' contains-errors <LValueToRValue>
            |     | `-DeclRefExpr 0x1250097d0 <col:16> 'char *' contains-errors lvalue Var 0x124928680 'enclo' 'char *'
            |     `-IntegerLiteral 0x1250097f0 <col:22> 'int' 0
            |-CaseStmt 0x1250098b8 <line:25:3, line:29:4>
            | |-ConstantExpr 0x1250098a0 <line:25:8> 'int'
            | | `-IntegerLiteral 0x125009880 <col:8> 'int' 1
            | `-IfStmt 0x1250099f0 <line:26:4, line:29:4>
            |   |-BinaryOperator 0x125009938 <line:26:8, col:17> 'int' '!='
            |   | |-ImplicitCastExpr 0x125009920 <col:8> 'int' <LValueToRValue>
            |   | | `-DeclRefExpr 0x1250098e0 <col:8> 'int' lvalue Var 0x125008e30 'd_len' 'int'
            |   | `-IntegerLiteral 0x125009900 <col:17> 'int' 1
            |   `-CompoundStmt 0x1250099e0 <col:20, line:29:4>
            |-BinaryOperator 0x125009ac0 <line:30:4, col:23> 'char' contains-errors '='
            | |-DeclRefExpr 0x125009a10 <col:4> 'char' lvalue Var 0x124928390 'delimiter' 'char'
            | `-ImplicitCastExpr 0x125009aa8 <col:16, col:23> 'char' contains-errors <LValueToRValue>
            |   `-ArraySubscriptExpr 0x125009a88 <col:16, col:23> 'char' contains-errors lvalue
            |     |-ImplicitCastExpr 0x125009a70 <col:16> 'char *' contains-errors <LValueToRValue>
            |     | `-DeclRefExpr 0x125009a30 <col:16> 'char *' contains-errors lvalue Var 0x1249285c8 'delim' 'char *'
            |     `-IntegerLiteral 0x125009a50 <col:22> 'int' 0
            `-CaseStmt 0x125009b18 <line:32:3, line:33:4>
              |-ConstantExpr 0x125009b00 <line:32:8> 'int'
              | `-IntegerLiteral 0x125009ae0 <col:8> 'int' 0
              `-BreakStmt 0x125009b40 <line:33:4>
