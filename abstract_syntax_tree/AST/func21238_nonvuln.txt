TranslationUnitDecl 0x15402e808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15402f6b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15402edd0 '__int128'
|-TypedefDecl 0x15402f728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15402edf0 'unsigned __int128'
|-TypedefDecl 0x1540ff030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1540fee00 'struct __NSConstantString_tag'
|   `-Record 0x15402f780 '__NSConstantString_tag'
|-TypedefDecl 0x1540ff098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15402ef90 '__SVInt8_t'
|-TypedefDecl 0x1540ff100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15402efb0 '__SVInt16_t'
|-TypedefDecl 0x1540ff168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15402efd0 '__SVInt32_t'
|-TypedefDecl 0x1540ff1d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15402eff0 '__SVInt64_t'
|-TypedefDecl 0x1540ff238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15402f010 '__SVUint8_t'
|-TypedefDecl 0x1540ff2a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15402f030 '__SVUint16_t'
|-TypedefDecl 0x1540ff308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15402f050 '__SVUint32_t'
|-TypedefDecl 0x1540ff370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15402f070 '__SVUint64_t'
|-TypedefDecl 0x1540ff3d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15402f090 '__SVFloat16_t'
|-TypedefDecl 0x1540ff440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15402f0b0 '__SVFloat32_t'
|-TypedefDecl 0x1540ff4a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15402f0d0 '__SVFloat64_t'
|-TypedefDecl 0x1540ff510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15402f0f0 '__SVBfloat16_t'
|-TypedefDecl 0x1540ff578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15402f110 '__clang_svint8x2_t'
|-TypedefDecl 0x1540ff5e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15402f130 '__clang_svint16x2_t'
|-TypedefDecl 0x1540ff648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15402f150 '__clang_svint32x2_t'
|-TypedefDecl 0x1540ff6b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15402f170 '__clang_svint64x2_t'
|-TypedefDecl 0x1540ff718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15402f190 '__clang_svuint8x2_t'
|-TypedefDecl 0x1540ff780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15402f1b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1540ff7e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15402f1d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1540ff850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15402f1f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1540ff8b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15402f210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1540ff920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15402f230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1540ff988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15402f250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1540ff9f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15402f270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1540ffa58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15402f290 '__clang_svint8x3_t'
|-TypedefDecl 0x1540ffac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15402f2b0 '__clang_svint16x3_t'
|-TypedefDecl 0x1540ffb28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15402f2d0 '__clang_svint32x3_t'
|-TypedefDecl 0x1540ffb90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15402f2f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1540ffbf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15402f310 '__clang_svuint8x3_t'
|-TypedefDecl 0x1540ffc60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15402f330 '__clang_svuint16x3_t'
|-TypedefDecl 0x1540ffcc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15402f350 '__clang_svuint32x3_t'
|-TypedefDecl 0x1540ffd30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15402f370 '__clang_svuint64x3_t'
|-TypedefDecl 0x1540ffd98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15402f390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x154100200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15402f3b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x154100268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15402f3d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1541002d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15402f3f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x154100338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15402f410 '__clang_svint8x4_t'
|-TypedefDecl 0x1541003a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15402f430 '__clang_svint16x4_t'
|-TypedefDecl 0x154100408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15402f450 '__clang_svint32x4_t'
|-TypedefDecl 0x154100470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15402f470 '__clang_svint64x4_t'
|-TypedefDecl 0x1541004d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15402f490 '__clang_svuint8x4_t'
|-TypedefDecl 0x154100540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15402f4b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1541005a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15402f4d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x154100610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15402f4f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x154100678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15402f510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1541006e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15402f530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x154100748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15402f550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1541007b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15402f570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x154100818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15402f590 '__SVBool_t'
|-TypedefDecl 0x154100880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15402f5b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1541008e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15402f5d0 '__clang_svboolx4_t'
|-TypedefDecl 0x154100950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15402f5f0 '__SVCount_t'
|-TypedefDecl 0x1541009f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1541009b0 'char *'
|   `-BuiltinType 0x15402e8b0 'char'
|-TypedefDecl 0x154100a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1541009b0 'char *'
|   `-BuiltinType 0x15402e8b0 'char'
`-FunctionDecl 0x154100d18 <dataset_diviso_filec/func21238_nonvuln.c:1:1, line:31:1> line:1:12 invalid mkpath2file 'int (int *, const char *, unsigned int)' static
  |-ParmVarDecl 0x154100b28 <line:2:2, col:17> col:17 referenced invalid data 'int *'
  |-ParmVarDecl 0x154100ba8 <col:23, col:35> col:35 used path 'const char *'
  |-ParmVarDecl 0x154100c28 <col:41, col:54> col:54 used mode 'unsigned int'
  `-CompoundStmt 0x15411b4d8 <line:3:1, line:31:1>
    |-DeclStmt 0x15411a3b8 <line:4:2, col:16>
    | |-RecordDecl 0x154100dd8 <col:2, col:9> col:9 struct stat
    | `-VarDecl 0x154100ed8 <col:2, col:14> col:14 invalid st 'struct stat'
    |-DeclStmt 0x15411a4e0 <line:6:2, line:8:22>
    | `-VarDecl 0x15411a3e8 <line:6:2, col:15> col:15 used flags 'unsigned int'
    |-DeclStmt 0x15411a578 <line:9:2, col:11>
    | `-VarDecl 0x15411a510 <col:2, col:6> col:6 used error 'int'
    |-IfStmt 0x15411a970 <line:11:2, line:13:10>
    | |-BinaryOperator 0x15411a908 <line:11:6, line:12:61> 'int' contains-errors '<'
    | | |-ParenExpr 0x15411a8c8 <line:11:6, line:12:57> 'int' contains-errors
    | | | `-BinaryOperator 0x15411a8a8 <line:11:7, line:12:56> 'int' contains-errors '='
    | | |   |-DeclRefExpr 0x15411a590 <line:11:7> 'int' lvalue Var 0x15411a510 'error' 'int'
    | | |   `-CallExpr 0x15411a860 <col:15, line:12:56> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x15411a710 <line:11:15> 'int ()' Function 0x15411a658 'checkout_mkdir' 'int ()'
    | | |     |-RecoveryExpr 0x15411a730 <line:12:4> '<dependent type>' contains-errors lvalue
    | | |     |-DeclRefExpr 0x15411a750 <col:10> 'const char *' lvalue ParmVar 0x154100ba8 'path' 'const char *'
    | | |     |-CXXDependentScopeMemberExpr 0x15411a7d8 <col:16, col:27> '<dependent type>' contains-errors lvalue .target_directory
    | | |     | `-CXXDependentScopeMemberExpr 0x15411a790 <col:16, col:22> '<dependent type>' contains-errors lvalue ->opts
    | | |     |   `-RecoveryExpr 0x15411a770 <col:16> '<dependent type>' contains-errors lvalue
    | | |     |-DeclRefExpr 0x15411a820 <col:45> 'unsigned int' lvalue ParmVar 0x154100c28 'mode' 'unsigned int'
    | | |     `-DeclRefExpr 0x15411a840 <col:51> 'unsigned int' lvalue Var 0x15411a3e8 'flags' 'unsigned int'
    | | `-IntegerLiteral 0x15411a8e8 <col:61> 'int' 0
    | `-ReturnStmt 0x15411a960 <line:13:3, col:10>
    |   `-ImplicitCastExpr 0x15411a948 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x15411a928 <col:10> 'int' lvalue Var 0x15411a510 'error' 'int'
    |-IfStmt 0x15411b470 <line:15:2, line:28:2>
    | |-RecoveryExpr 0x15411a9a8 <line:15:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15411b450 <col:23, line:28:2>
    |   |-UnaryOperator 0x15411aaa0 <line:16:3, col:28> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x15411aa58 <col:3, col:18> '<dependent type>' contains-errors lvalue .stat_calls
    |   |   `-CXXDependentScopeMemberExpr 0x15411aa10 <col:3, col:9> '<dependent type>' contains-errors lvalue ->perfdata
    |   |     `-RecoveryExpr 0x15411a9e8 <col:3> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x15411a9c8 <col:3> 'int *' lvalue ParmVar 0x154100b28 'data' 'int *'
    |   `-IfStmt 0x15411b420 <line:18:3, line:27:3> has_else
    |     |-BinaryOperator 0x15411ac60 <line:18:7, col:29> 'int' contains-errors '=='
    |     | |-CallExpr 0x15411ac10 <col:7, col:24> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x15411ab98 <col:7> 'int ()' Function 0x15411aae0 'p_lstat' 'int ()'
    |     | | |-DeclRefExpr 0x15411abb8 <col:15> 'const char *' lvalue ParmVar 0x154100ba8 'path' 'const char *'
    |     | | `-UnaryOperator 0x15411abf8 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |   `-RecoveryExpr 0x15411abd8 <col:22> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x15411ac40 <col:29> 'int' 0
    |     |-CompoundStmt 0x15411aee0 <col:32, line:22:3>
    |     | `-BinaryOperator 0x15411aec0 <line:21:4, col:65> 'int' contains-errors '='
    |     |   |-DeclRefExpr 0x15411ac80 <col:4> 'int' lvalue Var 0x15411a510 'error' 'int'
    |     |   `-CallExpr 0x15411ae88 <col:12, col:65> '<dependent type>' contains-errors
    |     |     |-DeclRefExpr 0x15411ad80 <col:12> 'int ()' Function 0x15411acc8 'git_futils_rmdir_r' 'int ()'
    |     |     |-DeclRefExpr 0x15411ada0 <col:31> 'const char *' lvalue ParmVar 0x154100ba8 'path' 'const char *'
    |     |     |-RecoveryExpr 0x15411ae48 <col:37> '<dependent type>' contains-errors lvalue
    |     |     `-RecoveryExpr 0x15411ae68 <col:43> '<dependent type>' contains-errors lvalue
    |     `-IfStmt 0x15411b3f0 <line:22:10, line:27:3> has_else
    |       |-BinaryOperator 0x15411afa8 <line:22:14, col:23> 'int' contains-errors '!='
    |       | |-RecoveryExpr 0x15411af68 <col:14> '<dependent type>' contains-errors lvalue
    |       | `-RecoveryExpr 0x15411af88 <col:23> '<dependent type>' contains-errors lvalue
    |       |-CompoundStmt 0x15411b248 <col:31, line:25:3>
    |       | |-CallExpr 0x15411b1b8 <line:23:4, col:43> '<dependent type>' contains-errors
    |       | | |-DeclRefExpr 0x15411b0a8 <col:4> 'int ()' Function 0x15411aff0 'git_error_set' 'int ()'
    |       | | |-RecoveryExpr 0x15411b198 <col:18> '<dependent type>' contains-errors lvalue
    |       | | |-StringLiteral 0x15411b120 <col:32> 'char[4]' lvalue "STR"
    |       | | `-DeclRefExpr 0x15411b140 <col:39> 'const char *' lvalue ParmVar 0x154100ba8 'path' 'const char *'
    |       | `-ReturnStmt 0x15411b238 <line:24:4, col:11>
    |       |   `-RecoveryExpr 0x15411b218 <col:11> '<dependent type>' contains-errors lvalue
    |       `-CompoundStmt 0x15411b3d8 <line:25:10, line:27:3>
    |         `-CallExpr 0x15411b3b8 <line:26:4, col:20> 'int'
    |           `-ImplicitCastExpr 0x15411b3a0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |             `-DeclRefExpr 0x15411b348 <col:4> 'int ()' Function 0x15411b290 'git_error_clear' 'int ()'
    `-ReturnStmt 0x15411b4c8 <line:30:2, col:9>
      `-ImplicitCastExpr 0x15411b4b0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15411b490 <col:9> 'int' lvalue Var 0x15411a510 'error' 'int'
