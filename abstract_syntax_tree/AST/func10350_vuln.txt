TranslationUnitDecl 0x136055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1360564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136055bd0 '__int128'
|-TypedefDecl 0x136056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136055bf0 'unsigned __int128'
|-TypedefDecl 0x13680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13680bc00 'struct __NSConstantString_tag'
|   `-Record 0x136056580 '__NSConstantString_tag'
|-TypedefDecl 0x13680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136055d90 '__SVInt8_t'
|-TypedefDecl 0x13680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136055db0 '__SVInt16_t'
|-TypedefDecl 0x13680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136055dd0 '__SVInt32_t'
|-TypedefDecl 0x13680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136055df0 '__SVInt64_t'
|-TypedefDecl 0x13680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136055e10 '__SVUint8_t'
|-TypedefDecl 0x13680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136055e30 '__SVUint16_t'
|-TypedefDecl 0x13680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136055e50 '__SVUint32_t'
|-TypedefDecl 0x13680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136055e70 '__SVUint64_t'
|-TypedefDecl 0x13680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136055e90 '__SVFloat16_t'
|-TypedefDecl 0x13680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1360560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1360560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1360560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1360561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1360561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1360561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1360562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1360562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1360562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136056390 '__SVBool_t'
|-TypedefDecl 0x13680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1360563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1360563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1360563f0 '__SVCount_t'
|-TypedefDecl 0x13680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13680dbb0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
|-TypedefDecl 0x13680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13680dbb0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
|-FunctionDecl 0x13680dee8 <dataset_diviso_filec/func10350_vuln.c:1:1, line:37:1> line:1:1 invalid xmlBufAdd 'int (int, const int *, int)'
| |-ParmVarDecl 0x13680dcf0 <col:11, col:21> col:21 referenced invalid buf 'int'
| |-ParmVarDecl 0x13680dd70 <col:26, col:41> col:41 invalid str 'const int *'
| |-ParmVarDecl 0x13680ddf0 <col:46, col:50> col:50 used len 'int'
| `-CompoundStmt 0x13682a720 <col:55, line:37:1>
|   |-DeclStmt 0x13680e028 <line:2:5, col:26>
|   | `-VarDecl 0x13680dfc0 <col:5, col:18> col:18 used needSize 'unsigned int'
|   |-IfStmt 0x13680e1e0 <line:4:5, line:5:10>
|   | |-RecoveryExpr 0x13680e178 <line:4:9, col:54> '_Bool' contains-errors
|   | `-ReturnStmt 0x13680e1d0 <line:5:2, col:10>
|   |   `-UnaryOperator 0x13680e1b8 <col:9, col:10> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13680e198 <col:10> 'int' 1
|   |-CallExpr 0x13680e3a0 <line:6:5, col:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13680e360 <col:5> 'int ()' Function 0x13680e2a8 'CHECK_COMPAT' 'int ()'
|   | `-RecoveryExpr 0x13680e380 <col:18> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x136827508 <line:8:5, col:59>
|   | |-BinaryOperator 0x1368274a0 <col:9, col:23> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x136827400 <col:9, col:14> '<dependent type>' contains-errors lvalue ->alloc
|   | | | `-RecoveryExpr 0x13680e3c8 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x136827480 <col:23> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1368274f8 <col:51, col:59>
|   |   `-UnaryOperator 0x1368274e0 <col:58, col:59> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1368274c0 <col:59> 'int' 1
|   |-IfStmt 0x136827618 <line:9:5, line:15:5>
|   | |-BinaryOperator 0x136827598 <line:9:9, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x136827580 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x136827528 <col:9> 'int' lvalue ParmVar 0x13680ddf0 'len' 'int'
|   | | `-UnaryOperator 0x136827568 <col:15, col:16> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x136827548 <col:16> 'int' 1
|   | `-CompoundStmt 0x136827600 <col:19, line:15:5>
|   |   `-ReturnStmt 0x1368275f0 <line:14:2, col:10>
|   |     `-UnaryOperator 0x1368275d8 <col:9, col:10> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1368275b8 <col:10> 'int' 1
|   |-IfStmt 0x1368276e0 <line:16:5, col:26>
|   | |-BinaryOperator 0x136827690 <col:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x136827678 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x136827638 <col:9> 'int' lvalue ParmVar 0x13680ddf0 'len' 'int'
|   | | `-IntegerLiteral 0x136827658 <col:16> 'int' 0
|   | `-ReturnStmt 0x1368276d0 <col:19, col:26>
|   |   `-IntegerLiteral 0x1368276b0 <col:26> 'int' 0
|   |-IfStmt 0x136827900 <line:18:5, line:19:28>
|   | |-BinaryOperator 0x136827758 <line:18:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x136827740 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x136827700 <col:9> 'int' lvalue ParmVar 0x13680ddf0 'len' 'int'
|   | | `-IntegerLiteral 0x136827720 <col:15> 'int' 0
|   | `-BinaryOperator 0x1368278e0 <line:19:9, col:28> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x136827778 <col:9> 'int' lvalue ParmVar 0x13680ddf0 'len' 'int'
|   |   `-CallExpr 0x1368278b8 <col:15, col:28> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x136827878 <col:15> 'int ()' Function 0x1368277c0 'xmlStrlen' 'int ()'
|   |     `-RecoveryExpr 0x136827898 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1368279e0 <line:21:5, col:26>
|   | |-BinaryOperator 0x136827978 <col:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x136827960 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x136827920 <col:9> 'int' lvalue ParmVar 0x13680ddf0 'len' 'int'
|   | | `-IntegerLiteral 0x136827940 <col:15> 'int' 0
|   | `-ReturnStmt 0x1368279d0 <col:18, col:26>
|   |   `-UnaryOperator 0x1368279b8 <col:25, col:26> 'int' prefix '-'
|   |     `-IntegerLiteral 0x136827998 <col:26> 'int' 1
|   |-IfStmt 0x136827aa8 <line:22:5, col:26>
|   | |-BinaryOperator 0x136827a58 <col:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x136827a40 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x136827a00 <col:9> 'int' lvalue ParmVar 0x13680ddf0 'len' 'int'
|   | | `-IntegerLiteral 0x136827a20 <col:16> 'int' 0
|   | `-ReturnStmt 0x136827a98 <col:19, col:26>
|   |   `-IntegerLiteral 0x136827a78 <col:26> 'int' 0
|   |-BinaryOperator 0x136827bd0 <line:24:5, col:33> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x136827ac8 <col:5> 'unsigned int' lvalue Var 0x13680dfc0 'needSize' 'unsigned int'
|   | `-BinaryOperator 0x136827bb0 <col:16, col:33> '<dependent type>' contains-errors '+'
|   |   |-BinaryOperator 0x136827b70 <col:16, col:27> '<dependent type>' contains-errors '+'
|   |   | |-CXXDependentScopeMemberExpr 0x136827b08 <col:16, col:21> '<dependent type>' contains-errors lvalue ->use
|   |   | | `-RecoveryExpr 0x136827ae8 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x136827b50 <col:27> 'int' lvalue ParmVar 0x13680ddf0 'len' 'int'
|   |   `-IntegerLiteral 0x136827b90 <col:33> 'int' 2
|   |-IfStmt 0x136828070 <line:25:5, line:30:5>
|   | |-BinaryOperator 0x136827c78 <line:25:9, col:25> 'int' contains-errors '>'
|   | | |-DeclRefExpr 0x136827bf0 <col:9> 'unsigned int' lvalue Var 0x13680dfc0 'needSize' 'unsigned int'
|   | | `-CXXDependentScopeMemberExpr 0x136827c30 <col:20, col:25> '<dependent type>' contains-errors lvalue ->size
|   | |   `-RecoveryExpr 0x136827c10 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x136828058 <col:30, line:30:5>
|   |   `-IfStmt 0x136828038 <line:26:9, line:29:9>
|   |     |-UnaryOperator 0x136827e08 <line:26:13, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | `-CallExpr 0x136827dd8 <col:14, col:40> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x136827d78 <col:14> 'int ()' Function 0x136827cc0 'xmlBufResize' 'int ()'
|   |     |   |-RecoveryExpr 0x136827d98 <col:27> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x136827db8 <col:32> 'unsigned int' lvalue Var 0x13680dfc0 'needSize' 'unsigned int'
|   |     `-CompoundStmt 0x136828018 <col:42, line:29:9>
|   |       |-CallExpr 0x136827fa0 <line:27:6, col:34> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x136827f00 <col:6> 'int ()' Function 0x136827e48 'xmlBufMemoryError' 'int ()'
|   |       | |-RecoveryExpr 0x136827f20 <col:24> '<dependent type>' contains-errors lvalue
|   |       | `-StringLiteral 0x136827f80 <col:29> 'char[4]' lvalue "STR"
|   |       `-ReturnStmt 0x136828008 <line:28:13, col:20>
|   |         `-RecoveryExpr 0x136827fe8 <col:20> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x13682a3f0 <line:33:5, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x13682a388 <col:5, col:10> '<dependent type>' contains-errors lvalue ->use
|   | | `-RecoveryExpr 0x13682a360 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13682a340 <col:5> 'int' lvalue ParmVar 0x13680dcf0 'buf' 'int'
|   | `-DeclRefExpr 0x13682a3d0 <col:17> 'int' lvalue ParmVar 0x13680ddf0 'len' 'int'
|   |-BinaryOperator 0x13682a588 <line:34:5, col:30> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x13682a548 <col:5, col:26> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x13682a518 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x13682a468 <col:5, col:10> '<dependent type>' contains-errors lvalue ->content
|   | | |   `-RecoveryExpr 0x13682a440 <col:5> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x13682a420 <col:5> 'int' lvalue ParmVar 0x13680dcf0 'buf' 'int'
|   | | `-ImplicitCastExpr 0x13682a530 <col:18, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x13682a4d0 <col:18, col:23> '<dependent type>' contains-errors lvalue ->use
|   | |     `-RecoveryExpr 0x13682a4b0 <col:18> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x13682a568 <col:30> 'int' 0
|   |-CallExpr 0x13682a6c8 <line:35:5, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13682a688 <col:5> 'int ()' Function 0x13682a5d0 'UPDATE_COMPAT' 'int ()'
|   | `-RecoveryExpr 0x13682a6a8 <col:19> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x13682a710 <line:36:5, col:12>
|     `-IntegerLiteral 0x13682a6f0 <col:12> 'int' 0
`-FunctionDecl 0x136829f40 <line:32:5> col:5 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13682a040 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13682a0a8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13682a110 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x136829fe8 <<invalid sloc>> Implicit 884
