TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x127926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x127926000 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x127926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x127926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x127926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x1279263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x127926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x1279264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x127926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x127926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x1279265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x127926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1279266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x127926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x127926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1279267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x127926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1279268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x127926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x127926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1279269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x127926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x127926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x127926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x127926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x127926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x127926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x127926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x127926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x127926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x127926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x127926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x127926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x127926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x127926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x127927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x127927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1279278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x127927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1279279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x127927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x127927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x127927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x127927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x127927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x127927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x127927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x127927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x127927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x127927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x127927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x127927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x127927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x127927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x127927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x127928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-FunctionDecl 0x127928318 <dataset_diviso_filec/func17517_nonvuln.c:1:1, line:23:1> line:1:1 invalid _GetCountedString 'int (char **, int, char **)'
| |-ParmVarDecl 0x127928108 <col:19, col:26> col:26 used wire_inout 'char **'
| |-ParmVarDecl 0x1279281a0 <col:38, col:48> col:48 invalid client 'int'
| |-ParmVarDecl 0x127928220 <col:56, col:63> col:63 used str 'char **'
| `-CompoundStmt 0x127944db0 <line:2:1, line:23:1>
|   |-DeclStmt 0x1279284f0 <line:3:5, col:22>
|   | |-VarDecl 0x1279283f0 <col:5, col:11> col:11 used wire 'char *'
|   | `-VarDecl 0x127928470 <col:5, col:18> col:18 used next 'char *'
|   |-BinaryOperator 0x127928590 <line:6:5, col:13> 'char *' '='
|   | |-DeclRefExpr 0x127928508 <col:5> 'char *' lvalue Var 0x1279283f0 'wire' 'char *'
|   | `-ImplicitCastExpr 0x127928578 <col:12, col:13> 'char *' <LValueToRValue>
|   |   `-UnaryOperator 0x127928560 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x127928548 <col:13> 'char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x127928528 <col:13> 'char **' lvalue ParmVar 0x127928108 'wire_inout' 'char **'
|   |-IfStmt 0x1279418a0 <line:8:5, line:10:5>
|   | |-CXXDependentScopeMemberExpr 0x1279285e8 <line:8:9, col:17> '<dependent type>' contains-errors lvalue ->swapped
|   | | `-RecoveryExpr 0x1279285c8 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x127941888 <col:26, line:10:5>
|   |   `-CallExpr 0x127941860 <line:9:9, col:19> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x127928790 <col:9> 'int ()' Function 0x1279286d8 'swaps' 'int ()'
|   |     `-UnaryOperator 0x127941848 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-RecoveryExpr 0x127941828 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x127941b48 <line:11:5, col:40> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1279418c0 <col:5> 'char *' lvalue Var 0x127928470 'next' 'char *'
|   | `-BinaryOperator 0x127941b28 <col:12, col:40> '<dependent type>' contains-errors '+'
|   |   |-DeclRefExpr 0x1279418e0 <col:12> 'char *' lvalue Var 0x1279283f0 'wire' 'char *'
|   |   `-CallExpr 0x127941b00 <col:19, col:40> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1279419e0 <col:19> 'int ()' Function 0x127941928 'XkbPaddedSize' 'int ()'
|   |     `-BinaryOperator 0x127941ae0 <col:33, col:39> '<dependent type>' contains-errors '+'
|   |       |-RecoveryExpr 0x127941ac0 <col:33> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x127941a18 <col:39> 'int' 2
|   |-IfStmt 0x127941ea8 <line:13:5, line:15:16>
|   | |-BinaryOperator 0x127941e40 <line:13:9, line:14:61> 'int' contains-errors '<'
|   | | |-CXXDependentScopeMemberExpr 0x127941b88 <line:13:9, col:17> '<dependent type>' contains-errors lvalue ->req_len
|   | | | `-RecoveryExpr 0x127941b68 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x127941e18 <line:14:9, col:61> 'int' contains-errors
|   | |   |-ImplicitCastExpr 0x127941e00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x127941cb0 <col:9> 'int ()' Function 0x127941bf8 'bytes_to_int32' 'int ()'
|   | |   `-BinaryOperator 0x127941db0 <col:24, col:48> 'long' contains-errors '-'
|   | |     |-ImplicitCastExpr 0x127941d98 <col:24> 'char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x127941cd0 <col:24> 'char *' lvalue Var 0x127928470 'next' 'char *'
|   | |     `-CStyleCastExpr 0x127941d70 <col:31, col:48> 'char *' contains-errors <Dependent>
|   | |       `-CXXDependentScopeMemberExpr 0x127941d10 <col:40, col:48> '<dependent type>' contains-errors lvalue ->requestBuffer
|   | |         `-RecoveryExpr 0x127941cf0 <col:40> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x127941e98 <line:15:9, col:16>
|   |   `-RecoveryExpr 0x127941e78 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1279426a8 <line:16:5, col:26> 'char *' contains-errors '='
|   | |-UnaryOperator 0x127942628 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x127942610 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127941ec8 <col:6> 'char **' lvalue ParmVar 0x127928220 'str' 'char **'
|   | `-CallExpr 0x127942680 <col:12, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x127942520 <col:12> 'void *(unsigned long)' Function 0x127942380 'malloc' 'void *(unsigned long)'
|   |   `-BinaryOperator 0x127942660 <col:19, col:25> '<dependent type>' contains-errors '+'
|   |     |-RecoveryExpr 0x127942640 <col:19> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x127942558 <col:25> 'int' 1
|   |-IfStmt 0x127944600 <line:17:5, line:18:16>
|   | |-UnaryOperator 0x127942730 <line:17:9, col:11> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x127942718 <col:10, col:11> 'char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x127942700 <col:10, col:11> 'char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x1279426e8 <col:11> 'char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1279426c8 <col:11> 'char **' lvalue ParmVar 0x127928220 'str' 'char **'
|   | `-ReturnStmt 0x1279427e0 <line:18:9, col:16>
|   |   `-ImplicitCastExpr 0x1279427c8 <col:16> 'int' <PointerToIntegral>
|   |     `-ImplicitCastExpr 0x1279427b0 <col:16> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x127942760 <col:16> 'void *(unsigned long)' Function 0x127942380 'malloc' 'void *(unsigned long)'
|   |-CallExpr 0x127944bb8 <line:19:5, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1279448e8 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x127944698 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-UnaryOperator 0x127944b00 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x127944ae8 <col:13> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127944908 <col:13> 'char **' lvalue ParmVar 0x127928220 'str' 'char **'
|   | |-UnaryOperator 0x127944b50 <col:18, col:25> 'char *' prefix '&' cannot overflow
|   | | `-ArraySubscriptExpr 0x127944b30 <col:19, col:25> 'char' lvalue
|   | |   |-ImplicitCastExpr 0x127944b18 <col:19> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x127944958 <col:19> 'char *' lvalue Var 0x1279283f0 'wire' 'char *'
|   | |   `-IntegerLiteral 0x127944978 <col:24> 'int' 2
|   | `-RecoveryExpr 0x127944b68 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x127944d48 <line:21:5, col:19> 'char *' '='
|   | |-UnaryOperator 0x127944cf8 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x127944ce0 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127944cc0 <col:6> 'char **' lvalue ParmVar 0x127928108 'wire_inout' 'char **'
|   | `-ImplicitCastExpr 0x127944d30 <col:19> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x127944d10 <col:19> 'char *' lvalue Var 0x127928470 'next' 'char *'
|   `-ReturnStmt 0x127944da0 <line:22:5, col:12>
|     `-RecoveryExpr 0x127944d80 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x127942380 <line:16:12> col:12 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x127942480 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x127942428 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x1279424f0 <col:12> Implicit 1
`-FunctionDecl 0x127944698 <line:19:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x127944798 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x127944800 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x127944868 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x127944740 <<invalid sloc>> Implicit 882
