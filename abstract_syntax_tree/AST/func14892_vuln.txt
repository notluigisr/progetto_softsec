TranslationUnitDecl 0x136834a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1368358b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136834fd0 '__int128'
|-TypedefDecl 0x136835928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136834ff0 'unsigned __int128'
|-TypedefDecl 0x140019c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x140019a00 'struct __NSConstantString_tag'
|   `-Record 0x136835980 '__NSConstantString_tag'
|-TypedefDecl 0x140019c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136835190 '__SVInt8_t'
|-TypedefDecl 0x140019d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1368351b0 '__SVInt16_t'
|-TypedefDecl 0x140019d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1368351d0 '__SVInt32_t'
|-TypedefDecl 0x140019dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1368351f0 '__SVInt64_t'
|-TypedefDecl 0x140019e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136835210 '__SVUint8_t'
|-TypedefDecl 0x140019ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136835230 '__SVUint16_t'
|-TypedefDecl 0x140019f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136835250 '__SVUint32_t'
|-TypedefDecl 0x140019f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136835270 '__SVUint64_t'
|-TypedefDecl 0x140019fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136835290 '__SVFloat16_t'
|-TypedefDecl 0x14001a040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1368352b0 '__SVFloat32_t'
|-TypedefDecl 0x14001a0a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1368352d0 '__SVFloat64_t'
|-TypedefDecl 0x14001a110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1368352f0 '__SVBfloat16_t'
|-TypedefDecl 0x14001a178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136835310 '__clang_svint8x2_t'
|-TypedefDecl 0x14001a1e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136835330 '__clang_svint16x2_t'
|-TypedefDecl 0x14001a248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136835350 '__clang_svint32x2_t'
|-TypedefDecl 0x14001a2b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136835370 '__clang_svint64x2_t'
|-TypedefDecl 0x14001a318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136835390 '__clang_svuint8x2_t'
|-TypedefDecl 0x14001a380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1368353b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14001a3e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1368353d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14001a450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1368353f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14001a4b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136835410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14001a520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136835430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14001a588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136835450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14001a5f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136835470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14001a658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136835490 '__clang_svint8x3_t'
|-TypedefDecl 0x14001a6c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1368354b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14001a728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1368354d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14001a790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1368354f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14001a7f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136835510 '__clang_svuint8x3_t'
|-TypedefDecl 0x14001a860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136835530 '__clang_svuint16x3_t'
|-TypedefDecl 0x14001a8c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136835550 '__clang_svuint32x3_t'
|-TypedefDecl 0x14001a930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136835570 '__clang_svuint64x3_t'
|-TypedefDecl 0x14001a998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136835590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14001ae00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1368355b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14001ae68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1368355d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14001aed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1368355f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14001af38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136835610 '__clang_svint8x4_t'
|-TypedefDecl 0x14001afa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136835630 '__clang_svint16x4_t'
|-TypedefDecl 0x14001b008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136835650 '__clang_svint32x4_t'
|-TypedefDecl 0x14001b070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136835670 '__clang_svint64x4_t'
|-TypedefDecl 0x14001b0d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136835690 '__clang_svuint8x4_t'
|-TypedefDecl 0x14001b140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1368356b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14001b1a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1368356d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14001b210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1368356f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14001b278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136835710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14001b2e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136835730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14001b348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136835750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14001b3b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136835770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14001b418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136835790 '__SVBool_t'
|-TypedefDecl 0x14001b480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1368357b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14001b4e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1368357d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14001b550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1368357f0 '__SVCount_t'
|-TypedefDecl 0x14001b5f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14001b5b0 'char *'
|   `-BuiltinType 0x136834ab0 'char'
|-TypedefDecl 0x14001b668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14001b5b0 'char *'
|   `-BuiltinType 0x136834ab0 'char'
|-FunctionDecl 0x14001b7c8 <dataset_diviso_filec/func14892_vuln.c:1:1, line:40:1> line:1:10 invalid SAPI_POST_HANDLER_FUNC 'int (int)'
| |-ParmVarDecl 0x14001b6f0 <col:33> col:33 php_std_post_handler 'int'
| `-CompoundStmt 0x13706bb48 <line:2:1, line:40:1>
|   |-DeclStmt 0x14001bb28 <line:3:2, col:29>
|   | |-VarDecl 0x14001b890 <col:2, col:8> col:8 used var 'char *'
|   | |-VarDecl 0x14001b910 <col:2, col:14> col:14 used val 'char *'
|   | |-VarDecl 0x14001b990 <col:2, col:20> col:20 used e 'char *'
|   | |-VarDecl 0x14001ba10 <col:2, col:24> col:24 used s 'char *'
|   | `-VarDecl 0x14001ba90 <col:2, col:28> col:28 used p 'char *'
|   |-DeclStmt 0x14001bc88 <line:5:2, col:16>
|   | `-VarDecl 0x14001bbe8 <col:2, col:15> col:7 used count 'long' cinit
|   |   `-ImplicitCastExpr 0x14001bc70 <col:15> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x14001bc50 <col:15> 'int' 0
|   |-IfStmt 0x13687ffd8 <line:7:2, line:9:2>
|   | |-BinaryOperator 0x13687ff90 <line:7:6, col:36> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x13687ff28 <col:6, col:23> '<dependent type>' contains-errors lvalue .post_data
|   | | | `-CallExpr 0x13687ff00 <col:6, col:21> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x13687fe00 <col:6> 'int ()' Function 0x14001bd48 'SG' 'int ()'
|   | | |   `-RecoveryExpr 0x13687fee0 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x13687ff70 <col:36> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13687ffc0 <col:42, line:9:2>
|   |   `-ReturnStmt 0x13687ffb0 <line:8:3>
|   |-BinaryOperator 0x136880170 <line:11:2, col:23> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x13687fff8 <col:2> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   | `-CXXDependentScopeMemberExpr 0x136880128 <col:6, col:23> '<dependent type>' contains-errors lvalue .post_data
|   |   `-CallExpr 0x136880100 <col:6, col:21> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x136880018 <col:6> 'int ()' Function 0x14001bd48 'SG' 'int ()'
|   |     `-RecoveryExpr 0x1368800e0 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x136880368 <line:12:2, col:27> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x136880190 <col:2> 'char *' lvalue Var 0x14001b990 'e' 'char *'
|   | `-BinaryOperator 0x136880348 <col:6, col:27> '<dependent type>' contains-errors '+'
|   |   |-DeclRefExpr 0x1368801b0 <col:6> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   |   `-CXXDependentScopeMemberExpr 0x136880300 <col:10, col:27> '<dependent type>' contains-errors lvalue .post_data_length
|   |     `-CallExpr 0x1368802d8 <col:10, col:25> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x1368801d0 <col:10> 'int ()' Function 0x14001bd48 'SG' 'int ()'
|   |       `-RecoveryExpr 0x1368802b8 <col:13> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x13706b9c8 <line:14:2, line:35:2>
|   | |-BinaryOperator 0x136880d70 <line:14:9, col:46> 'int' '&&'
|   | | |-BinaryOperator 0x1368803f8 <col:9, col:13> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1368803c8 <col:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x136880388 <col:9> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   | | | `-ImplicitCastExpr 0x1368803e0 <col:13> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1368803a8 <col:13> 'char *' lvalue Var 0x14001b990 'e' 'char *'
|   | | `-ParenExpr 0x136880d50 <col:18, col:46> 'char *'
|   | |   `-BinaryOperator 0x136880d30 <col:19, col:45> 'char *' '='
|   | |     |-DeclRefExpr 0x136880418 <col:19> 'char *' lvalue Var 0x14001ba90 'p' 'char *'
|   | |     `-ImplicitCastExpr 0x136880d18 <col:23, col:45> 'char *' <BitCast>
|   | |       `-CallExpr 0x136880c98 <col:23, col:45> 'void *'
|   | |         |-ImplicitCastExpr 0x136880c80 <col:23> 'void *(*)(const void *, int, unsigned long)' <FunctionToPointerDecay>
|   | |         | `-DeclRefExpr 0x136880b30 <col:23> 'void *(const void *, int, unsigned long)' Function 0x1368808e0 'memchr' 'void *(const void *, int, unsigned long)'
|   | |         |-ImplicitCastExpr 0x136880ce8 <col:30> 'const void *' <BitCast>
|   | |         | `-ImplicitCastExpr 0x136880cd0 <col:30> 'char *' <LValueToRValue>
|   | |         |   `-DeclRefExpr 0x136880b50 <col:30> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   | |         |-CharacterLiteral 0x136880b70 <col:33> 'int' 38
|   | |         `-ImplicitCastExpr 0x136880d00 <col:38, col:44> 'unsigned long' <IntegralCast>
|   | |           `-ParenExpr 0x136880c18 <col:38, col:44> 'long'
|   | |             `-BinaryOperator 0x136880bf8 <col:39, col:43> 'long' '-'
|   | |               |-ImplicitCastExpr 0x136880bc8 <col:39> 'char *' <LValueToRValue>
|   | |               | `-DeclRefExpr 0x136880b88 <col:39> 'char *' lvalue Var 0x14001b990 'e' 'char *'
|   | |               `-ImplicitCastExpr 0x136880be0 <col:43> 'char *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x136880ba8 <col:43> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   | `-CompoundStmt 0x13706b9a8 <col:49, line:35:2>
|   |   |-LabelStmt 0x13706b8d0 <line:15:1, line:33:3> 'last_value'
|   |   | `-IfStmt 0x13706b860 <line:16:3, line:33:3>
|   |   |   |-ParenExpr 0x13706a7b0 <line:16:7, col:37> 'char *'
|   |   |   | `-BinaryOperator 0x13706a790 <col:8, col:36> 'char *' '='
|   |   |   |   |-DeclRefExpr 0x136880d90 <col:8> 'char *' lvalue Var 0x14001b910 'val' 'char *'
|   |   |   |   `-ImplicitCastExpr 0x13706a778 <col:14, col:36> 'char *' <BitCast>
|   |   |   |     `-CallExpr 0x13706a6f8 <col:14, col:36> 'void *'
|   |   |   |       |-ImplicitCastExpr 0x13706a6e0 <col:14> 'void *(*)(const void *, int, unsigned long)' <FunctionToPointerDecay>
|   |   |   |       | `-DeclRefExpr 0x136880db0 <col:14> 'void *(const void *, int, unsigned long)' Function 0x1368808e0 'memchr' 'void *(const void *, int, unsigned long)'
|   |   |   |       |-ImplicitCastExpr 0x13706a748 <col:21> 'const void *' <BitCast>
|   |   |   |       | `-ImplicitCastExpr 0x13706a730 <col:21> 'char *' <LValueToRValue>
|   |   |   |       |   `-DeclRefExpr 0x136880dd0 <col:21> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   |   |   |       |-CharacterLiteral 0x13706a600 <col:24> 'int' 61
|   |   |   |       `-ImplicitCastExpr 0x13706a760 <col:29, col:35> 'unsigned long' <IntegralCast>
|   |   |   |         `-ParenExpr 0x13706a6a8 <col:29, col:35> 'long'
|   |   |   |           `-BinaryOperator 0x13706a688 <col:30, col:34> 'long' '-'
|   |   |   |             |-ImplicitCastExpr 0x13706a658 <col:30> 'char *' <LValueToRValue>
|   |   |   |             | `-DeclRefExpr 0x13706a618 <col:30> 'char *' lvalue Var 0x14001ba90 'p' 'char *'
|   |   |   |             `-ImplicitCastExpr 0x13706a670 <col:34> 'char *' <LValueToRValue>
|   |   |   |               `-DeclRefExpr 0x13706a638 <col:34> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   |   |   `-CompoundStmt 0x13706b808 <col:40, line:33:3>
|   |   |     |-DeclStmt 0x13706a8e8 <line:17:4, col:37>
|   |   |     | |-VarDecl 0x13706a7e8 <col:4, col:17> col:17 used val_len 'unsigned int'
|   |   |     | `-VarDecl 0x13706a868 <col:4, col:26> col:26 used new_val_len 'unsigned int'
|   |   |     |-IfStmt 0x13706ac40 <line:19:4, line:22:4>
|   |   |     | |-BinaryOperator 0x13706aae0 <line:19:8, col:35> 'int' contains-errors '>'
|   |   |     | | |-UnaryOperator 0x13706a920 <col:8, col:10> 'long' prefix '++'
|   |   |     | | | `-DeclRefExpr 0x13706a900 <col:10> 'long' lvalue Var 0x14001bbe8 'count' 'long'
|   |   |     | | `-CallExpr 0x13706aab8 <col:18, col:35> '<dependent type>' contains-errors
|   |   |     | |   |-DeclRefExpr 0x13706aa18 <col:18> 'int ()' Function 0x13706a960 'PG' 'int ()'
|   |   |     | |   `-RecoveryExpr 0x13706aa98 <col:21> '<dependent type>' contains-errors lvalue
|   |   |     | `-CompoundStmt 0x13706ac28 <col:38, line:22:4>
|   |   |     |   `-ReturnStmt 0x13706ac18 <line:21:5>
|   |   |     |-BinaryOperator 0x13706acb8 <line:23:4, col:10> 'char *' '='
|   |   |     | |-DeclRefExpr 0x13706ac60 <col:4> 'char *' lvalue Var 0x14001b890 'var' 'char *'
|   |   |     | `-ImplicitCastExpr 0x13706aca0 <col:10> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x13706ac80 <col:10> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   |   |     |-CallExpr 0x13706aef8 <line:25:4, col:33> 'int'
|   |   |     | |-ImplicitCastExpr 0x13706aee0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x13706adb8 <col:4> 'int ()' Function 0x13706ad00 'php_url_decode' 'int ()'
|   |   |     | |-ImplicitCastExpr 0x13706af28 <col:19> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x13706add8 <col:19> 'char *' lvalue Var 0x14001b890 'var' 'char *'
|   |   |     | `-ParenExpr 0x13706ae88 <col:24, col:32> 'long'
|   |   |     |   `-BinaryOperator 0x13706ae68 <col:25, col:31> 'long' '-'
|   |   |     |     |-ImplicitCastExpr 0x13706ae38 <col:25> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x13706adf8 <col:25> 'char *' lvalue Var 0x14001b910 'val' 'char *'
|   |   |     |     `-ImplicitCastExpr 0x13706ae50 <col:31> 'char *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x13706ae18 <col:31> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   |   |     |-UnaryOperator 0x13706af60 <line:26:4, col:7> 'char *' postfix '++'
|   |   |     | `-DeclRefExpr 0x13706af40 <col:4> 'char *' lvalue Var 0x14001b910 'val' 'char *'
|   |   |     |-BinaryOperator 0x13706b100 <line:27:4, col:43> 'unsigned int' '='
|   |   |     | |-DeclRefExpr 0x13706af78 <col:4> 'unsigned int' lvalue Var 0x13706a7e8 'val_len' 'unsigned int'
|   |   |     | `-ImplicitCastExpr 0x13706b0e8 <col:14, col:43> 'unsigned int' <IntegralCast>
|   |   |     |   `-CallExpr 0x13706b0a0 <col:14, col:43> 'int'
|   |   |     |     |-ImplicitCastExpr 0x13706b088 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x13706af98 <col:14> 'int ()' Function 0x13706ad00 'php_url_decode' 'int ()'
|   |   |     |     |-ImplicitCastExpr 0x13706b0d0 <col:29> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x13706afb8 <col:29> 'char *' lvalue Var 0x14001b910 'val' 'char *'
|   |   |     |     `-ParenExpr 0x13706b068 <col:34, col:42> 'long'
|   |   |     |       `-BinaryOperator 0x13706b048 <col:35, col:39> 'long' '-'
|   |   |     |         |-ImplicitCastExpr 0x13706b018 <col:35> 'char *' <LValueToRValue>
|   |   |     |         | `-DeclRefExpr 0x13706afd8 <col:35> 'char *' lvalue Var 0x14001ba90 'p' 'char *'
|   |   |     |         `-ImplicitCastExpr 0x13706b030 <col:39> 'char *' <LValueToRValue>
|   |   |     |           `-DeclRefExpr 0x13706aff8 <col:39> 'char *' lvalue Var 0x14001b910 'val' 'char *'
|   |   |     |-BinaryOperator 0x13706b310 <line:28:4, col:31> 'char *' '='
|   |   |     | |-DeclRefExpr 0x13706b120 <col:4> 'char *' lvalue Var 0x14001b910 'val' 'char *'
|   |   |     | `-ImplicitCastExpr 0x13706b2f8 <col:10, col:31> 'char *' <IntegralToPointer>
|   |   |     |   `-CallExpr 0x13706b298 <col:10, col:31> 'int'
|   |   |     |     |-ImplicitCastExpr 0x13706b280 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x13706b220 <col:10> 'int ()' Function 0x13706b168 'estrndup' 'int ()'
|   |   |     |     |-ImplicitCastExpr 0x13706b2c8 <col:19> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x13706b240 <col:19> 'char *' lvalue Var 0x14001b910 'val' 'char *'
|   |   |     |     `-ImplicitCastExpr 0x13706b2e0 <col:24> 'unsigned int' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x13706b260 <col:24> 'unsigned int' lvalue Var 0x13706a7e8 'val_len' 'unsigned int'
|   |   |     |-IfStmt 0x13706b670 <line:29:4, line:31:4>
|   |   |     | |-RecoveryExpr 0x13706b4c8 <line:29:8, col:87> '_Bool' contains-errors
|   |   |     | `-CompoundStmt 0x13706b660 <col:90, line:31:4>
|   |   |     `-CallExpr 0x13706b7c8 <line:32:4, col:13> 'int'
|   |   |       |-ImplicitCastExpr 0x13706b7b0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x13706b770 <col:4> 'int ()' Function 0x13706b6b8 'efree' 'int ()'
|   |   |       `-ImplicitCastExpr 0x13706b7f0 <col:10> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x13706b790 <col:10> 'char *' lvalue Var 0x14001b910 'val' 'char *'
|   |   `-BinaryOperator 0x13706b988 <line:34:3, col:11> 'char *' '='
|   |     |-DeclRefExpr 0x13706b8f0 <col:3> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|   |     `-BinaryOperator 0x13706b968 <col:7, col:11> 'char *' '+'
|   |       |-ImplicitCastExpr 0x13706b950 <col:7> 'char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13706b910 <col:7> 'char *' lvalue Var 0x14001ba90 'p' 'char *'
|   |       `-IntegerLiteral 0x13706b930 <col:11> 'int' 1
|   `-IfStmt 0x13706bb28 <line:36:2, line:39:2>
|     |-BinaryOperator 0x13706ba58 <line:36:6, col:10> 'int' '<'
|     | |-ImplicitCastExpr 0x13706ba28 <col:6> 'char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x13706b9e8 <col:6> 'char *' lvalue Var 0x14001ba10 's' 'char *'
|     | `-ImplicitCastExpr 0x13706ba40 <col:10> 'char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x13706ba08 <col:10> 'char *' lvalue Var 0x14001b990 'e' 'char *'
|     `-CompoundStmt 0x13706bb08 <col:13, line:39:2>
|       |-BinaryOperator 0x13706bad0 <line:37:3, col:7> 'char *' '='
|       | |-DeclRefExpr 0x13706ba78 <col:3> 'char *' lvalue Var 0x14001ba90 'p' 'char *'
|       | `-ImplicitCastExpr 0x13706bab8 <col:7> 'char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x13706ba98 <col:7> 'char *' lvalue Var 0x14001b990 'e' 'char *'
|       `-GotoStmt 0x13706baf0 <line:38:3, col:8> 'last_value' 0x13706b880
`-FunctionDecl 0x1368808e0 <line:14:23> col:23 implicit used memchr 'void *(const void *, int, unsigned long)' extern
  |-ParmVarDecl 0x1368809e0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x136880a48 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x136880ab0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x136880988 <<invalid sloc>> Implicit 892
