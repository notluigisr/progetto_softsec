TranslationUnitDecl 0x14c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c855bd0 '__int128'
|-TypedefDecl 0x14c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c855bf0 'unsigned __int128'
|-TypedefDecl 0x14d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c856580 '__NSConstantString_tag'
|-TypedefDecl 0x14d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c855d90 '__SVInt8_t'
|-TypedefDecl 0x14d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c855db0 '__SVInt16_t'
|-TypedefDecl 0x14d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c855dd0 '__SVInt32_t'
|-TypedefDecl 0x14d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c855df0 '__SVInt64_t'
|-TypedefDecl 0x14d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c855e10 '__SVUint8_t'
|-TypedefDecl 0x14d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c855e30 '__SVUint16_t'
|-TypedefDecl 0x14d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c855e50 '__SVUint32_t'
|-TypedefDecl 0x14d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c855e70 '__SVUint64_t'
|-TypedefDecl 0x14d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c855e90 '__SVFloat16_t'
|-TypedefDecl 0x14d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c856390 '__SVBool_t'
|-TypedefDecl 0x14d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c8563f0 '__SVCount_t'
|-TypedefDecl 0x14d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
|-TypedefDecl 0x14d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
`-FunctionDecl 0x14d00de88 <dataset_diviso_filec/func19660_vuln.c:1:1, line:50:1> line:1:1 invalid eval_next_line 'int (char *, int *)'
  |-ParmVarDecl 0x14d00dcf0 <col:16, col:24> col:24 used arg 'char *'
  |-ParmVarDecl 0x14d00dda8 <col:29, col:40> col:40 referenced invalid evalarg 'int *'
  `-CompoundStmt 0x14c926140 <line:2:1, line:50:1>
    |-DeclStmt 0x14d00e058 <line:4:5, col:17>
    | `-VarDecl 0x14d00dff0 <col:5, col:13> col:13 used line 'char *'
    |-IfStmt 0x14c9237e8 <line:6:5, line:14:5>
    | |-BinaryOperator 0x14d00e0e8 <line:6:9, col:16> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x14d00e070 <col:9> 'char *' lvalue ParmVar 0x14d00dcf0 'arg' 'char *'
    | | `-RecoveryExpr 0x14d00e0c8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14c9237c8 <line:7:5, line:14:5>
    |   |-IfStmt 0x14c923068 <line:8:2, line:9:38>
    |   | |-BinaryOperator 0x14d00e210 <line:8:6, col:14> 'int' contains-errors '=='
    |   | | |-UnaryOperator 0x14d00e1d8 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
    |   | | | `-ImplicitCastExpr 0x14d00e1c0 <col:7> 'char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x14d00e108 <col:7> 'char *' lvalue ParmVar 0x14d00dcf0 'arg' 'char *'
    |   | | `-RecoveryExpr 0x14d00e1f0 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x14c923058 <line:9:6, col:38>
    |   |   `-CallExpr 0x14c923018 <col:13, col:38> 'int'
    |   |     |-ImplicitCastExpr 0x14c923000 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14d00e390 <col:13> 'int ()' Function 0x14d00e2d8 'newline_skip_comments' 'int ()'
    |   |     `-ImplicitCastExpr 0x14c923040 <col:35> 'char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14d00e3b0 <col:35> 'char *' lvalue ParmVar 0x14d00dcf0 'arg' 'char *'
    |   `-IfStmt 0x14c9237a8 <line:12:2, line:13:13>
    |     |-BinaryOperator 0x14c923660 <line:12:6, col:25> 'int' contains-errors '=='
    |     | |-RecoveryExpr 0x14c923620 <col:6, col:20> '<dependent type>' contains-errors lvalue
    |     | | `-CallExpr 0x14c9231c0 <col:7, col:20> 'int'
    |     | |   |-ImplicitCastExpr 0x14c9231a8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | |   | `-DeclRefExpr 0x14c923168 <col:7> 'int ()' Function 0x14c9230b0 'skipwhite' 'int ()'
    |     | |   `-ImplicitCastExpr 0x14c9231e8 <col:17> 'char *' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x14c923188 <col:17> 'char *' lvalue ParmVar 0x14d00dcf0 'arg' 'char *'
    |     | `-CharacterLiteral 0x14c923648 <col:25> 'int' 35
    |     `-BinaryOperator 0x14c923788 <line:13:6, col:13> 'char' contains-errors '='
    |       |-UnaryOperator 0x14c923750 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
    |       | `-ImplicitCastExpr 0x14c923738 <col:7> 'char *' <LValueToRValue>
    |       |   `-DeclRefExpr 0x14c923680 <col:7> 'char *' lvalue ParmVar 0x14d00dcf0 'arg' 'char *'
    |       `-RecoveryExpr 0x14c923768 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c923d70 <line:16:5, line:20:56> has_else
    | |-BinaryOperator 0x14c9238c8 <line:16:9, col:33> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x14c923828 <col:9, col:18> '<dependent type>' contains-errors lvalue ->eval_cookie
    | | | `-RecoveryExpr 0x14c923808 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14c9238a8 <col:33> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x14c923af0 <line:17:2, line:18:29> 'char *' contains-errors '='
    | | |-DeclRefExpr 0x14c9238e8 <line:17:2> 'char *' lvalue Var 0x14d00dff0 'line' 'char *'
    | | `-CallExpr 0x14c923ab0 <col:9, line:18:29> '<dependent type>' contains-errors
    | |   |-CXXDependentScopeMemberExpr 0x14c923928 <line:17:9, col:18> '<dependent type>' contains-errors lvalue ->eval_getline
    | |   | `-RecoveryExpr 0x14c923908 <col:9> '<dependent type>' contains-errors lvalue
    | |   |-IntegerLiteral 0x14c923970 <col:31> 'int' 0
    | |   |-CXXDependentScopeMemberExpr 0x14c9239b0 <col:34, col:43> '<dependent type>' contains-errors lvalue ->eval_cookie
    | |   | `-RecoveryExpr 0x14c923990 <col:34> '<dependent type>' contains-errors lvalue
    | |   |-IntegerLiteral 0x14c9239f8 <col:56> 'int' 0
    | |   `-RecoveryExpr 0x14c923a90 <line:18:11> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14c923d50 <line:20:2, col:56> 'char *' contains-errors '='
    |   |-DeclRefExpr 0x14c923b10 <col:2> 'char *' lvalue Var 0x14d00dff0 'line' 'char *'
    |   `-CallExpr 0x14c923d20 <col:9, col:56> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14c923c10 <col:9> 'int ()' Function 0x14c923b58 'next_line_from_context' 'int ()'
    |     |-CXXDependentScopeMemberExpr 0x14c923c50 <col:32, col:41> '<dependent type>' contains-errors lvalue ->eval_cctx
    |     | `-RecoveryExpr 0x14c923c30 <col:32> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14c923d00 <col:52> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c923e80 <line:21:5, line:22:9>
    | |-BinaryOperator 0x14c923e18 <line:21:9, col:17> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x14c923da0 <col:9> 'char *' lvalue Var 0x14d00dff0 'line' 'char *'
    | | `-RecoveryExpr 0x14c923df8 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14c923e70 <line:22:2, col:9>
    |   `-RecoveryExpr 0x14c923e50 <col:9> '<dependent type>' contains-errors lvalue
    |-UnaryOperator 0x14c923f08 <line:24:5, col:16> '<dependent type>' contains-errors prefix '++' cannot overflow
    | `-CXXDependentScopeMemberExpr 0x14c923ec0 <col:7, col:16> '<dependent type>' contains-errors lvalue ->eval_break_count
    |   `-RecoveryExpr 0x14c923ea0 <col:7> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c925fd8 <line:25:5, line:44:5> has_else
    | |-BinaryOperator 0x14c9258b0 <line:25:9, col:52> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x14c925800 <col:9, col:28> 'int' contains-errors '>'
    | | | |-CXXDependentScopeMemberExpr 0x14c9257b8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->ga_itemsize
    | | | | `-RecoveryExpr 0x14c925798 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x14c923f80 <col:28> 'int' 0
    | | `-BinaryOperator 0x14c925890 <col:33, col:52> 'int' contains-errors '=='
    | |   |-CallExpr 0x14c925840 <col:33, col:47> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x14c9256b8 <col:33> 'int ()' Function 0x14c925600 'ga_grow' 'int ()'
    | |   | |-RecoveryExpr 0x14c925820 <col:41> '<dependent type>' contains-errors lvalue
    | |   | `-IntegerLiteral 0x14c9256f0 <col:46> 'int' 1
    | |   `-RecoveryExpr 0x14c925870 <col:52> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x14c925d78 <line:26:5, line:39:5>
    | | `-IfStmt 0x14c925d38 <line:31:2, line:35:2>
    | |   |-RecoveryExpr 0x14c925a68 <line:31:6, col:39> '_Bool' contains-errors
    | |   `-CompoundStmt 0x14c925d20 <line:32:2, line:35:2>
    | |     `-CallExpr 0x14c925bc0 <line:33:6, col:19> 'int'
    | |       |-ImplicitCastExpr 0x14c925ba8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x14c925b68 <col:6> 'int ()' Function 0x14c925ab0 'vim_free' 'int ()'
    | |       `-ImplicitCastExpr 0x14c925be8 <col:15> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x14c925b88 <col:15> 'char *' lvalue Var 0x14d00dff0 'line' 'char *'
    | `-IfStmt 0x14c925fb8 <line:40:10, line:44:5>
    |   |-RecoveryExpr 0x14c925df8 <line:40:14, col:38> '_Bool' contains-errors
    |   `-CompoundStmt 0x14c925f98 <line:41:5, line:44:5>
    |     |-CallExpr 0x14c925ea0 <line:42:2, col:31> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x14c925e18 <col:2> 'int ()' Function 0x14c925ab0 'vim_free' 'int ()'
    |     | `-CXXDependentScopeMemberExpr 0x14c925e58 <col:11, col:20> '<dependent type>' contains-errors lvalue ->eval_tofree
    |     |   `-RecoveryExpr 0x14c925e38 <col:11> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x14c925f78 <line:43:2, col:25> '<dependent type>' contains-errors '='
    |       |-CXXDependentScopeMemberExpr 0x14c925f10 <col:2, col:11> '<dependent type>' contains-errors lvalue ->eval_tofree
    |       | `-RecoveryExpr 0x14c925ee8 <col:2> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x14c925ec8 <col:2> 'int *' lvalue ParmVar 0x14d00dda8 'evalarg' 'int *'
    |       `-DeclRefExpr 0x14c925f58 <col:25> 'char *' lvalue Var 0x14d00dff0 'line' 'char *'
    `-ReturnStmt 0x14c926130 <line:49:5, col:26>
      `-CallExpr 0x14c9260f0 <col:12, col:26> 'int'
        |-ImplicitCastExpr 0x14c9260d8 <col:12> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x14c926098 <col:12> 'int ()' Function 0x14c9230b0 'skipwhite' 'int ()'
        `-ImplicitCastExpr 0x14c926118 <col:22> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x14c9260b8 <col:22> 'char *' lvalue Var 0x14d00dff0 'line' 'char *'
