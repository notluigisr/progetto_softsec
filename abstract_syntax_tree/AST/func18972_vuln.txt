TranslationUnitDecl 0x11f827808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8286b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f827dd0 '__int128'
|-TypedefDecl 0x11f828728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f827df0 'unsigned __int128'
|-TypedefDecl 0x12880be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12880bc00 'struct __NSConstantString_tag'
|   `-Record 0x11f828780 '__NSConstantString_tag'
|-TypedefDecl 0x12880be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f827f90 '__SVInt8_t'
|-TypedefDecl 0x12880bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f827fb0 '__SVInt16_t'
|-TypedefDecl 0x12880bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f827fd0 '__SVInt32_t'
|-TypedefDecl 0x12880bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f827ff0 '__SVInt64_t'
|-TypedefDecl 0x12880c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f828010 '__SVUint8_t'
|-TypedefDecl 0x12880c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f828030 '__SVUint16_t'
|-TypedefDecl 0x12880c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f828050 '__SVUint32_t'
|-TypedefDecl 0x12880c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f828070 '__SVUint64_t'
|-TypedefDecl 0x12880c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f828090 '__SVFloat16_t'
|-TypedefDecl 0x12880c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f8280b0 '__SVFloat32_t'
|-TypedefDecl 0x12880c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f8280d0 '__SVFloat64_t'
|-TypedefDecl 0x12880c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f8280f0 '__SVBfloat16_t'
|-TypedefDecl 0x12880c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f828110 '__clang_svint8x2_t'
|-TypedefDecl 0x12880c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f828130 '__clang_svint16x2_t'
|-TypedefDecl 0x12880c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f828150 '__clang_svint32x2_t'
|-TypedefDecl 0x12880c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f828170 '__clang_svint64x2_t'
|-TypedefDecl 0x12880c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f828190 '__clang_svuint8x2_t'
|-TypedefDecl 0x12880c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f8281b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12880c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f8281d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12880c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f8281f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12880c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f828210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12880c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f828230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12880c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f828250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12880c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f828270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12880c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f828290 '__clang_svint8x3_t'
|-TypedefDecl 0x12880c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8282b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12880c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8282d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12880c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8282f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12880c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f828310 '__clang_svuint8x3_t'
|-TypedefDecl 0x12880ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f828330 '__clang_svuint16x3_t'
|-TypedefDecl 0x12880cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f828350 '__clang_svuint32x3_t'
|-TypedefDecl 0x12880cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f828370 '__clang_svuint64x3_t'
|-TypedefDecl 0x12880cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f828390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12880d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8283b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12880d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8283d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12880d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8283f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12880d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f828410 '__clang_svint8x4_t'
|-TypedefDecl 0x12880d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f828430 '__clang_svint16x4_t'
|-TypedefDecl 0x12880d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f828450 '__clang_svint32x4_t'
|-TypedefDecl 0x12880d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f828470 '__clang_svint64x4_t'
|-TypedefDecl 0x12880d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f828490 '__clang_svuint8x4_t'
|-TypedefDecl 0x12880d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8284b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12880d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8284d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12880d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8284f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12880d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f828510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12880d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f828530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12880d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f828550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12880d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f828570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12880da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f828590 '__SVBool_t'
|-TypedefDecl 0x12880da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8285b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12880dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8285d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12880db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8285f0 '__SVCount_t'
|-TypedefDecl 0x12880dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12880dbb0 'char *'
|   `-BuiltinType 0x11f8278b0 'char'
|-TypedefDecl 0x12880dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12880dbb0 'char *'
|   `-BuiltinType 0x11f8278b0 'char'
|-FunctionDecl 0x12880df18 <dataset_diviso_filec/func18972_vuln.c:1:1, line:53:1> line:1:7 invalid curl_easy_escape 'char *(int *, const char *, int)'
| |-ParmVarDecl 0x12880dd28 <col:24, col:30> col:30 invalid handle 'int *'
| |-ParmVarDecl 0x12880dda8 <col:38, col:50> col:50 used string 'const char *'
| |-ParmVarDecl 0x12880de28 <col:58, col:62> col:62 used inlength 'int'
| `-CompoundStmt 0x11f03c578 <line:2:1, line:53:1>
|   |-DeclStmt 0x12880e1a0 <line:4:3, col:11>
|   | `-VarDecl 0x12880e138 <col:3, col:9> col:9 used ns 'char *'
|   |-DeclStmt 0x12880e270 <line:5:3, col:27>
|   | `-VarDecl 0x12880e1d0 <col:3, col:23> col:9 used testing_ptr 'char *' cinit
|   |   `-RecoveryExpr 0x12880e250 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12880e308 <line:6:3, col:19>
|   | `-VarDecl 0x12880e2a0 <col:3, col:17> col:17 used in 'unsigned char'
|   |-BinaryOperator 0x11f030600 <line:7:3, col:19> 'unsigned long' contains-errors '='
|   | |-UnaryExprOrTypeTraitExpr 0x12880e3b0 <col:3, col:10> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x12880e390 <col:10> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12880e3d0 <col:19> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x11f0306c0 <line:8:3, col:17>
|   | `-VarDecl 0x11f030638 <col:3, col:16> col:7 used strindex 'int' cinit
|   |   `-IntegerLiteral 0x11f0306a0 <col:16> 'int' 0
|   |-UnaryExprOrTypeTraitExpr 0x11f030730 <line:9:3, col:10> 'unsigned long' sizeof
|   | `-DeclRefExpr 0x11f030710 <col:10> 'int' lvalue ParmVar 0x12880de28 'inlength' 'int' non_odr_use_unevaluated
|   |-BinaryOperator 0x11f030f00 <line:12:3, col:20> 'char *' '='
|   | |-DeclRefExpr 0x11f030750 <col:3> 'char *' lvalue Var 0x12880e138 'ns' 'char *'
|   | `-ImplicitCastExpr 0x11f030ee8 <col:8, col:20> 'char *' <BitCast>
|   |   `-CallExpr 0x11f030e90 <col:8, col:20> 'void *'
|   |     |-ImplicitCastExpr 0x11f030e78 <col:8> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x11f030d70 <col:8> 'void *(unsigned long)' Function 0x11f030bd0 'malloc' 'void *(unsigned long)'
|   |     `-ImplicitCastExpr 0x11f030ed0 <col:15> 'unsigned long' <PointerToIntegral>
|   |       `-ImplicitCastExpr 0x11f030eb8 <col:15> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x11f030e08 <col:15> 'void *(unsigned long)' Function 0x11f030bd0 'malloc' 'void *(unsigned long)'
|   |-IfStmt 0x11f030fb8 <line:13:3, line:14:12>
|   | |-UnaryOperator 0x11f030f58 <line:13:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x11f030f40 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11f030f20 <col:7> 'char *' lvalue Var 0x12880e138 'ns' 'char *'
|   | `-ReturnStmt 0x11f030fa8 <line:14:5, col:12>
|   |   `-RecoveryExpr 0x11f030f88 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11f0310e0 <line:16:3, col:18> 'int' '='
|   | |-DeclRefExpr 0x11f030fd8 <col:3> 'int' lvalue ParmVar 0x12880de28 'inlength' 'int'
|   | `-ImplicitCastExpr 0x11f0310c8 <col:12, col:18> 'int' <PointerToIntegral>
|   |   `-BinaryOperator 0x11f0310a8 <col:12, col:18> 'void *(*)(unsigned long)' '-'
|   |     |-ImplicitCastExpr 0x11f031090 <col:12> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x11f031070 <col:12> 'void *(unsigned long)' Function 0x11f030bd0 'malloc' 'void *(unsigned long)'
|   |     `-IntegerLiteral 0x11f031010 <col:18> 'int' 1
|   |-WhileStmt 0x11f03c428 <line:17:3, line:50:3>
|   | |-UnaryOperator 0x11f031150 <line:17:9, col:15> 'int' postfix '--'
|   | | `-DeclRefExpr 0x11f031130 <col:9> 'int' lvalue ParmVar 0x12880de28 'inlength' 'int'
|   | `-CompoundStmt 0x11f03c400 <col:19, line:50:3>
|   |   |-BinaryOperator 0x11f031208 <line:18:5, col:11> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x11f031168 <col:5> 'unsigned char' lvalue Var 0x12880e2a0 'in' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x11f0311f0 <col:10, col:11> 'unsigned char' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x11f0311d8 <col:10, col:11> 'char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x11f0311c0 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x11f0311a8 <col:11> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x11f031188 <col:11> 'const char *' lvalue ParmVar 0x12880dda8 'string' 'const char *'
|   |   |-IfStmt 0x11f03c390 <line:20:5, line:48:5> has_else
|   |   | |-CallExpr 0x11f031408 <line:20:8, col:28> 'int'
|   |   | | |-ImplicitCastExpr 0x11f0313f0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x11f031380 <col:8> 'int ()' Function 0x11f0312c8 'Curl_isunreserved' 'int ()'
|   |   | | `-ImplicitCastExpr 0x11f031448 <col:26> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x11f031430 <col:26> 'unsigned char' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x11f0313a0 <col:26> 'unsigned char' lvalue Var 0x12880e2a0 'in' 'unsigned char'
|   |   | |-BinaryOperator 0x11f031540 <line:22:7, col:22> 'char' '='
|   |   | | |-ArraySubscriptExpr 0x11f0314d0 <col:7, col:20> 'char' lvalue
|   |   | | | |-ImplicitCastExpr 0x11f0314b8 <col:7> 'char *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x11f031460 <col:7> 'char *' lvalue Var 0x12880e138 'ns' 'char *'
|   |   | | | `-UnaryOperator 0x11f0314a0 <col:10, col:18> 'int' postfix '++'
|   |   | | |   `-DeclRefExpr 0x11f031480 <col:10> 'int' lvalue Var 0x11f030638 'strindex' 'int'
|   |   | | `-ImplicitCastExpr 0x11f031528 <col:22> 'char' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x11f031510 <col:22> 'unsigned char' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x11f0314f0 <col:22> 'unsigned char' lvalue Var 0x12880e2a0 'in' 'unsigned char'
|   |   | `-CompoundStmt 0x11f03c360 <line:23:10, line:48:5>
|   |   |   |-IfStmt 0x11f03ba70 <line:26:7, line:36:7>
|   |   |   | |-RecoveryExpr 0x11f031580 <line:26:10, col:19> '_Bool' contains-errors
|   |   |   | `-CompoundStmt 0x11f03ba58 <col:26, line:36:7>
|   |   |   |   `-IfStmt 0x11f03ba28 <line:29:9, line:35:9> has_else
|   |   |   |     |-UnaryOperator 0x11f03b6c8 <line:29:12, col:13> 'int' contains-errors prefix '!' cannot overflow
|   |   |   |     | `-ImplicitCastExpr 0x11f03b6b0 <col:13> 'char *' contains-errors <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x11f03b690 <col:13> 'char *' contains-errors lvalue Var 0x12880e1d0 'testing_ptr' 'char *'
|   |   |   |     |-CompoundStmt 0x11f03b980 <col:26, line:32:9>
|   |   |   |     | `-CallExpr 0x11f03b928 <line:30:11, col:20> 'void'
|   |   |   |     |   |-ImplicitCastExpr 0x11f03b910 <col:11> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x11f03b888 <col:11> 'void (void *)' Function 0x11f03b718 'free' 'void (void *)'
|   |   |   |     |   `-ImplicitCastExpr 0x11f03b968 <col:17> 'void *' <BitCast>
|   |   |   |     |     `-ImplicitCastExpr 0x11f03b950 <col:17> 'char *' <LValueToRValue>
|   |   |   |     |       `-DeclRefExpr 0x11f03b8a8 <col:17> 'char *' lvalue Var 0x12880e138 'ns' 'char *'
|   |   |   |     `-CompoundStmt 0x11f03ba10 <line:33:14, line:35:9>
|   |   |   |       `-BinaryOperator 0x11f03b9f0 <line:34:11, col:16> 'char *' contains-errors '='
|   |   |   |         |-DeclRefExpr 0x11f03b998 <col:11> 'char *' lvalue Var 0x12880e138 'ns' 'char *'
|   |   |   |         `-ImplicitCastExpr 0x11f03b9d8 <col:16> 'char *' contains-errors <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x11f03b9b8 <col:16> 'char *' contains-errors lvalue Var 0x12880e1d0 'testing_ptr' 'char *'
|   |   |   |-IfStmt 0x11f03bd70 <line:39:7, line:43:7>
|   |   |   | |-RecoveryExpr 0x11f03bc70 <line:39:10> '_Bool' contains-errors
|   |   |   | `-CompoundStmt 0x11f03bd58 <col:15, line:43:7>
|   |   |   |   `-CallExpr 0x11f03bd00 <line:41:9, col:16> 'void'
|   |   |   |     |-ImplicitCastExpr 0x11f03bce8 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x11f03bc90 <col:9> 'void (void *)' Function 0x11f03b718 'free' 'void (void *)'
|   |   |   |     `-ImplicitCastExpr 0x11f03bd40 <col:14> 'void *' <BitCast>
|   |   |   |       `-ImplicitCastExpr 0x11f03bd28 <col:14> 'char *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x11f03bcb0 <col:14> 'char *' lvalue Var 0x12880e138 'ns' 'char *'
|   |   |   |-CallExpr 0x11f03c238 <line:45:7, col:43> 'int'
|   |   |   | |-ImplicitCastExpr 0x11f03c220 <col:7> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x11f03c068 <col:7> 'int (char *, unsigned long, const char *, ...)' Function 0x11f03bde0 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   |   | |-UnaryOperator 0x11f03c118 <col:16, col:28> 'char *' prefix '&' cannot overflow
|   |   |   | | `-ArraySubscriptExpr 0x11f03c0f8 <col:17, col:28> 'char' lvalue
|   |   |   | |   |-ImplicitCastExpr 0x11f03c0c8 <col:17> 'char *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x11f03c088 <col:17> 'char *' lvalue Var 0x12880e138 'ns' 'char *'
|   |   |   | |   `-ImplicitCastExpr 0x11f03c0e0 <col:20> 'int' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x11f03c0a8 <col:20> 'int' lvalue Var 0x11f030638 'strindex' 'int'
|   |   |   | |-ImplicitCastExpr 0x11f03c278 <col:31> 'unsigned long' <IntegralCast>
|   |   |   | | `-IntegerLiteral 0x11f03c130 <col:31> 'int' 4
|   |   |   | |-ImplicitCastExpr 0x11f03c2a8 <col:34> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x11f03c290 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x11f03c190 <col:34> 'char[4]' lvalue "STR"
|   |   |   | `-ImplicitCastExpr 0x11f03c2d8 <col:41> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x11f03c2c0 <col:41> 'unsigned char' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x11f03c1b0 <col:41> 'unsigned char' lvalue Var 0x12880e2a0 'in' 'unsigned char'
|   |   |   `-CompoundAssignOperator 0x11f03c330 <line:47:7, col:17> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x11f03c2f0 <col:7> 'int' lvalue Var 0x11f030638 'strindex' 'int'
|   |   |     `-IntegerLiteral 0x11f03c310 <col:17> 'int' 3
|   |   `-UnaryOperator 0x11f03c3e0 <line:49:5, col:11> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x11f03c3c0 <col:5> 'const char *' lvalue ParmVar 0x12880dda8 'string' 'const char *'
|   |-BinaryOperator 0x11f03c510 <line:51:3, col:16> 'char' '='
|   | |-ArraySubscriptExpr 0x11f03c4b8 <col:3, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x11f03c488 <col:3> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11f03c448 <col:3> 'char *' lvalue Var 0x12880e138 'ns' 'char *'
|   | | `-ImplicitCastExpr 0x11f03c4a0 <col:6> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11f03c468 <col:6> 'int' lvalue Var 0x11f030638 'strindex' 'int'
|   | `-ImplicitCastExpr 0x11f03c4f8 <col:16> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x11f03c4d8 <col:16> 'int' 0
|   `-ReturnStmt 0x11f03c568 <line:52:3, col:10>
|     `-ImplicitCastExpr 0x11f03c550 <col:10> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x11f03c530 <col:10> 'char *' lvalue Var 0x12880e138 'ns' 'char *'
|-FunctionDecl 0x11f030bd0 <line:12:8> col:8 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x11f030cd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x11f030c78 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x11f030d40 <col:8> Implicit 1
|-FunctionDecl 0x11f03b440 <line:28:23> col:23 implicit used realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x11f03b540 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x11f03b5a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x11f03b4e8 <<invalid sloc>> Implicit 872
| `-AllocSizeAttr 0x11f03b620 <col:23> Implicit 2
|-FunctionDecl 0x11f03b718 <line:30:11> col:11 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x11f03b818 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x11f03b7c0 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x11f03bde0 <line:45:7> col:7 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x11f03bee0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x11f03bf48 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x11f03bfb0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x11f03be88 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x11f03c030 <col:7> Implicit printf 3 4
