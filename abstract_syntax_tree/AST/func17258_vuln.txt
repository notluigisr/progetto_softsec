TranslationUnitDecl 0x12b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b855bd0 '__int128'
|-TypedefDecl 0x12b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b855bf0 'unsigned __int128'
|-TypedefDecl 0x12c00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12b856580 '__NSConstantString_tag'
|-TypedefDecl 0x12c00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b855d90 '__SVInt8_t'
|-TypedefDecl 0x12c00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b855db0 '__SVInt16_t'
|-TypedefDecl 0x12c00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b855dd0 '__SVInt32_t'
|-TypedefDecl 0x12c00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b855df0 '__SVInt64_t'
|-TypedefDecl 0x12c00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b855e10 '__SVUint8_t'
|-TypedefDecl 0x12c00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b855e30 '__SVUint16_t'
|-TypedefDecl 0x12c00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b855e50 '__SVUint32_t'
|-TypedefDecl 0x12c00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b855e70 '__SVUint64_t'
|-TypedefDecl 0x12c00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b855e90 '__SVFloat16_t'
|-TypedefDecl 0x12c00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b856390 '__SVBool_t'
|-TypedefDecl 0x12c00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b8563f0 '__SVCount_t'
|-TypedefDecl 0x12c00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c00dbb0 'char *'
|   `-BuiltinType 0x12b8556b0 'char'
|-TypedefDecl 0x12c00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c00dbb0 'char *'
|   `-BuiltinType 0x12b8556b0 'char'
|-FunctionDecl 0x12c00ddf8 <dataset_diviso_filec/func17258_vuln.c:1:1, line:73:1> line:1:1 invalid ambsdtar_selfcheck 'int (int *)'
| |-ParmVarDecl 0x12c00dd28 <line:2:5, col:29> col:29 invalid argument 'int *'
| `-CompoundStmt 0x12b927558 <line:3:1, line:73:1>
|   |-DeclStmt 0x12c00df28 <line:4:5, col:17>
|   | `-VarDecl 0x12c00dec0 <col:5, col:11> col:11 used option 'char *'
|   |-IfStmt 0x12b9230e0 <line:6:5, line:10:5>
|   | |-CXXDependentScopeMemberExpr 0x12c00dfa8 <line:6:9, col:23> '<dependent type>' contains-errors lvalue .disk
|   | | `-CXXDependentScopeMemberExpr 0x12c00df60 <col:9, col:19> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x12c00df40 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12b9230b8 <col:29, line:10:5>
|   |   |-DeclStmt 0x12c00e2c8 <line:7:2, col:48>
|   |   | `-VarDecl 0x12c00e008 <col:2, col:47> col:8 used qdisk 'char *' cinit
|   |   |   `-CallExpr 0x12c00e2a0 <col:16, col:47> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12c00e1d0 <col:16> 'int ()' Function 0x12c00e118 'quote_string' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x12c00e258 <col:29, col:43> '<dependent type>' contains-errors lvalue .disk
|   |   |       `-CXXDependentScopeMemberExpr 0x12c00e210 <col:29, col:39> '<dependent type>' contains-errors lvalue ->dle
|   |   |         `-RecoveryExpr 0x12c00e1f0 <col:29> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x12b922ed8 <line:8:2, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12c00e3c0 <col:2> 'int ()' Function 0x12c00e308 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x12b922eb8 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x12b922e40 <col:18> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x12b922e60 <col:25> 'char *' contains-errors lvalue Var 0x12c00e008 'qdisk' 'char *'
|   |   `-CallExpr 0x12b923078 <line:9:2, col:14> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x12b923060 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12b922ff0 <col:2> 'int ()' Function 0x12b922f38 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x12b9230a0 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x12b923010 <col:9> 'char *' contains-errors lvalue Var 0x12c00e008 'qdisk' 'char *'
|   |-CallExpr 0x12b9237e0 <line:12:5, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12b923708 <col:5> 'int (const char *, ...)' Function 0x12b923560 'printf' 'int (const char *, ...)'
|   | |-StringLiteral 0x12b923728 <col:12> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x12b9237a8 <col:19> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12b923ae0 <line:13:5, col:71> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12b9238f0 <col:5> 'int ()' Function 0x12b923838 'ambsdtar_build_exinclude' 'int ()'
|   | |-UnaryOperator 0x12b923978 <col:30, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x12b923930 <col:31, col:41> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x12b923910 <col:31> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x12b923990 <col:46> 'int' 1
|   | |-RecoveryExpr 0x12b923a60 <col:49> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x12b923a80 <col:55> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x12b923aa0 <col:61> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12b923ac0 <col:67> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12b923bd8 <line:15:5, col:17> 'int'
|   | |-ImplicitCastExpr 0x12b923bc0 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12b923b30 <col:5> 'int (const char *, ...)' Function 0x12b923560 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x12b923c18 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x12b923c00 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x12b923b50 <col:12> 'char[4]' lvalue "STR"
|   |-IfStmt 0x12b926100 <line:17:5, line:19:5>
|   | |-ParenExpr 0x12b923db8 <line:17:9, col:53> 'char *' contains-errors
|   | | `-BinaryOperator 0x12b923d98 <col:10, col:52> 'char *' contains-errors '='
|   | |   |-DeclRefExpr 0x12b923c30 <col:10> 'char *' lvalue Var 0x12c00dec0 'option' 'char *'
|   | |   `-CallExpr 0x12b923d70 <col:19, col:52> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x12b923d30 <col:19> 'int ()' Function 0x12b923c78 'validate_command_options' 'int ()'
|   | |     `-RecoveryExpr 0x12b923d50 <col:44> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12b9260e8 <col:56, line:19:5>
|   |   `-CallExpr 0x12b9260b0 <line:18:2, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12b923dd8 <col:2> 'int ()' Function 0x12c00e308 'fprintf' 'int ()'
|   |     |-RecoveryExpr 0x12b926090 <col:10> '<dependent type>' contains-errors lvalue
|   |     |-StringLiteral 0x12b926018 <col:18> 'char[4]' lvalue "STR"
|   |     `-DeclRefExpr 0x12b926038 <col:25> 'char *' lvalue Var 0x12c00dec0 'option' 'char *'
|   |-IfStmt 0x12b925548 <line:21:5, line:48:5> has_else
|   | |-RecoveryExpr 0x12b926138 <line:21:9> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x12b925408 <col:22, line:46:5>
|   | | `-IfStmt 0x12b9253e8 <line:22:2, line:45:2>
|   | |   |-CallExpr 0x12b9262f8 <line:22:6, col:34> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x12b926238 <col:6> 'int ()' Function 0x12b926180 'check_file' 'int ()'
|   | |   | |-RecoveryExpr 0x12b9262b8 <col:17> '<dependent type>' contains-errors lvalue
|   | |   | `-RecoveryExpr 0x12b9262d8 <col:30> '<dependent type>' contains-errors lvalue
|   | |   `-CompoundStmt 0x12b9253d0 <col:37, line:45:2>
|   | |     `-IfStmt 0x12b9253b0 <line:23:6, line:44:6>
|   | |       |-RecoveryExpr 0x12b926428 <line:23:10, col:47> '_Bool' contains-errors
|   | |       `-CompoundStmt 0x12b925388 <col:50, line:44:6>
|   | |         |-DeclStmt 0x12b9264c8 <line:24:3, col:23>
|   | |         | `-VarDecl 0x12b926460 <col:3, col:9> col:9 used bsdtar_version 'char *'
|   | |         |-IfStmt 0x12b9251c0 <line:32:3, line:40:3> has_else
|   | |         | |-ImplicitCastExpr 0x12b9268b8 <line:32:7> 'char *' <LValueToRValue>
|   | |         | | `-DeclRefExpr 0x12b926898 <col:7> 'char *' lvalue Var 0x12b926460 'bsdtar_version' 'char *'
|   | |         | |-CompoundStmt 0x12b924fe0 <col:23, line:38:3>
|   | |         | | |-DeclStmt 0x12b9269e8 <line:33:7, col:20>
|   | |         | | | |-VarDecl 0x12b9268e8 <col:7, col:13> col:13 used tv 'char *'
|   | |         | | | `-VarDecl 0x12b926968 <col:7, col:18> col:18 used bv 'char *'
|   | |         | | |-ForStmt 0x12b926d30 <line:34:7, col:68>
|   | |         | | | |-BinaryOperator 0x12b926a58 <col:12, col:17> 'char *' '='
|   | |         | | | | |-DeclRefExpr 0x12b926a00 <col:12> 'char *' lvalue Var 0x12b9268e8 'tv' 'char *'
|   | |         | | | | `-ImplicitCastExpr 0x12b926a40 <col:17> 'char *' <LValueToRValue>
|   | |         | | | |   `-DeclRefExpr 0x12b926a20 <col:17> 'char *' lvalue Var 0x12b926460 'bsdtar_version' 'char *'
|   | |         | | | |-<<<NULL>>>
|   | |         | | | |-BinaryOperator 0x12b926cd0 <col:33, col:60> 'int' '&&'
|   | |         | | | | |-ImplicitCastExpr 0x12b926cb8 <col:33, col:34> 'int' <IntegralCast>
|   | |         | | | | | `-ImplicitCastExpr 0x12b926ca0 <col:33, col:34> 'char' <LValueToRValue>
|   | |         | | | | |   `-UnaryOperator 0x12b926ab0 <col:33, col:34> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | | |     `-ImplicitCastExpr 0x12b926a98 <col:34> 'char *' <LValueToRValue>
|   | |         | | | | |       `-DeclRefExpr 0x12b926a78 <col:34> 'char *' lvalue Var 0x12b9268e8 'tv' 'char *'
|   | |         | | | | `-UnaryOperator 0x12b926c88 <col:40, col:60> 'int' prefix '!' cannot overflow
|   | |         | | | |   `-CallExpr 0x12b926c30 <col:41, col:60> 'int'
|   | |         | | | |     |-ImplicitCastExpr 0x12b926c18 <col:41> 'int (*)()' <FunctionToPointerDecay>
|   | |         | | | |     | `-DeclRefExpr 0x12b926ba8 <col:41> 'int ()' Function 0x12b926af0 'g_ascii_isdigit' 'int ()'
|   | |         | | | |     `-ImplicitCastExpr 0x12b926c70 <col:57, col:58> 'int' <IntegralCast>
|   | |         | | | |       `-ImplicitCastExpr 0x12b926c58 <col:57, col:58> 'char' <LValueToRValue>
|   | |         | | | |         `-UnaryOperator 0x12b926c00 <col:57, col:58> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | |           `-ImplicitCastExpr 0x12b926be8 <col:58> 'char *' <LValueToRValue>
|   | |         | | | |             `-DeclRefExpr 0x12b926bc8 <col:58> 'char *' lvalue Var 0x12b9268e8 'tv' 'char *'
|   | |         | | | |-UnaryOperator 0x12b926d10 <col:63, col:65> 'char *' postfix '++'
|   | |         | | | | `-DeclRefExpr 0x12b926cf0 <col:63> 'char *' lvalue Var 0x12b9268e8 'tv' 'char *'
|   | |         | | | `-NullStmt 0x12b926d28 <col:68>
|   | |         | | |-ForStmt 0x12b926f78 <line:35:7, col:45>
|   | |         | | | |-BinaryOperator 0x12b926dc0 <col:12, col:17> 'char *' '='
|   | |         | | | | |-DeclRefExpr 0x12b926d68 <col:12> 'char *' lvalue Var 0x12b926968 'bv' 'char *'
|   | |         | | | | `-ImplicitCastExpr 0x12b926da8 <col:17> 'char *' <LValueToRValue>
|   | |         | | | |   `-DeclRefExpr 0x12b926d88 <col:17> 'char *' lvalue Var 0x12b9268e8 'tv' 'char *'
|   | |         | | | |-<<<NULL>>>
|   | |         | | | |-BinaryOperator 0x12b926f18 <col:21, col:35> 'int' '&&'
|   | |         | | | | |-ImplicitCastExpr 0x12b926f00 <col:21, col:22> 'int' <IntegralCast>
|   | |         | | | | | `-ImplicitCastExpr 0x12b926ee8 <col:21, col:22> 'char' <LValueToRValue>
|   | |         | | | | |   `-UnaryOperator 0x12b926e18 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | | |     `-ImplicitCastExpr 0x12b926e00 <col:22> 'char *' <LValueToRValue>
|   | |         | | | | |       `-DeclRefExpr 0x12b926de0 <col:22> 'char *' lvalue Var 0x12b926968 'bv' 'char *'
|   | |         | | | | `-BinaryOperator 0x12b926ec8 <col:28, col:35> 'int' '!='
|   | |         | | | |   |-ImplicitCastExpr 0x12b926eb0 <col:28, col:29> 'int' <IntegralCast>
|   | |         | | | |   | `-ImplicitCastExpr 0x12b926e98 <col:28, col:29> 'char' <LValueToRValue>
|   | |         | | | |   |   `-UnaryOperator 0x12b926e68 <col:28, col:29> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | |   |     `-ImplicitCastExpr 0x12b926e50 <col:29> 'char *' <LValueToRValue>
|   | |         | | | |   |       `-DeclRefExpr 0x12b926e30 <col:29> 'char *' lvalue Var 0x12b926968 'bv' 'char *'
|   | |         | | | |   `-CharacterLiteral 0x12b926e80 <col:35> 'int' 32
|   | |         | | | |-UnaryOperator 0x12b926f58 <col:40, col:42> 'char *' postfix '++'
|   | |         | | | | `-DeclRefExpr 0x12b926f38 <col:40> 'char *' lvalue Var 0x12b926968 'bv' 'char *'
|   | |         | | | `-NullStmt 0x12b926f70 <col:45>
|   | |         | | |-IfStmt 0x12b924eb8 <line:36:7, col:22>
|   | |         | | | |-ImplicitCastExpr 0x12b924e00 <col:11, col:12> 'char' <LValueToRValue>
|   | |         | | | | `-UnaryOperator 0x12b926fe8 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | |   `-ImplicitCastExpr 0x12b926fd0 <col:12> 'char *' <LValueToRValue>
|   | |         | | | |     `-DeclRefExpr 0x12b926fb0 <col:12> 'char *' lvalue Var 0x12b926968 'bv' 'char *'
|   | |         | | | `-BinaryOperator 0x12b924e98 <col:16, col:22> 'char' '='
|   | |         | | |   |-UnaryOperator 0x12b924e50 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
|   | |         | | |   | `-ImplicitCastExpr 0x12b924e38 <col:17> 'char *' <LValueToRValue>
|   | |         | | |   |   `-DeclRefExpr 0x12b924e18 <col:17> 'char *' lvalue Var 0x12b926968 'bv' 'char *'
|   | |         | | |   `-ImplicitCastExpr 0x12b924e80 <col:22> 'char' <IntegralCast>
|   | |         | | |     `-CharacterLiteral 0x12b924e68 <col:22> 'int' 0
|   | |         | | `-CallExpr 0x12b924f68 <line:37:7, col:23> 'int'
|   | |         | |   |-ImplicitCastExpr 0x12b924f50 <col:7> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |         | |   | `-DeclRefExpr 0x12b924ed8 <col:7> 'int (const char *, ...)' Function 0x12b923560 'printf' 'int (const char *, ...)'
|   | |         | |   |-ImplicitCastExpr 0x12b924fb0 <col:14> 'const char *' <NoOp>
|   | |         | |   | `-ImplicitCastExpr 0x12b924f98 <col:14> 'char *' <ArrayToPointerDecay>
|   | |         | |   |   `-StringLiteral 0x12b924ef8 <col:14> 'char[4]' lvalue "STR"
|   | |         | |   `-ImplicitCastExpr 0x12b924fc8 <col:21> 'char *' <LValueToRValue>
|   | |         | |     `-DeclRefExpr 0x12b924f18 <col:21> 'char *' lvalue Var 0x12b9268e8 'tv' 'char *'
|   | |         | `-CompoundStmt 0x12b9251b0 <line:38:10, line:40:3>
|   | |         `-CallExpr 0x12b925348 <line:43:3, col:24> 'int'
|   | |           |-ImplicitCastExpr 0x12b925330 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | |           | `-DeclRefExpr 0x12b9252f0 <col:3> 'int ()' Function 0x12b922f38 'amfree' 'int ()'
|   | |           `-ImplicitCastExpr 0x12b925370 <col:10> 'char *' <LValueToRValue>
|   | |             `-DeclRefExpr 0x12b925310 <col:10> 'char *' lvalue Var 0x12b926460 'bsdtar_version' 'char *'
|   | `-CompoundStmt 0x12b925530 <line:46:12, line:48:5>
|   |   `-CallExpr 0x12b9254f0 <line:47:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x12b9254d8 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12b925420 <col:2> 'int (const char *, ...)' Function 0x12b923560 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x12b925518 <col:9, col:16> 'const char *' <IntegralToPointer>
|   |       `-CallExpr 0x12b925498 <col:9, col:16> 'int'
|   |         |-ImplicitCastExpr 0x12b925480 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x12b925440 <col:9> 'int ()' Function 0x12b925060 '_' 'int ()'
|   |         `-ImplicitCastExpr 0x12b9254c0 <col:11> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x12b925460 <col:11> 'char[4]' lvalue "STR"
|   |-CallExpr 0x12b9256b0 <line:50:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x12b925698 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12b925658 <col:5> 'int ()' Function 0x12b9255a0 'set_root_privs' 'int ()'
|   | `-IntegerLiteral 0x12b925678 <col:20> 'int' 1
|   |-IfStmt 0x12b925b40 <line:53:5, line:57:5> has_else
|   | |-RecoveryExpr 0x12b9258e8 <line:53:9> '_Bool' contains-errors
|   | |-CompoundStmt 0x12b925a08 <col:20, line:55:5>
|   | `-CompoundStmt 0x12b925b28 <col:12, line:57:5>
|   |   `-CallExpr 0x12b925ae8 <line:56:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x12b925ad0 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12b925a18 <col:2> 'int (const char *, ...)' Function 0x12b923560 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x12b925b10 <col:9, col:16> 'const char *' <IntegralToPointer>
|   |       `-CallExpr 0x12b925a90 <col:9, col:16> 'int'
|   |         |-ImplicitCastExpr 0x12b925a78 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x12b925a38 <col:9> 'int ()' Function 0x12b925060 '_' 'int ()'
|   |         `-ImplicitCastExpr 0x12b925ab8 <col:11> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x12b925a58 <col:11> 'char[4]' lvalue "STR"
|   |-IfStmt 0x12b925d70 <line:59:5, line:63:5> has_else
|   | |-RecoveryExpr 0x12b925b70 <line:59:9> '_Bool' contains-errors
|   | |-CompoundStmt 0x12b925bb0 <col:27, line:61:5>
|   | `-IfStmt 0x12b925d50 <col:12, line:63:5>
|   |   |-CXXDependentScopeMemberExpr 0x12b925c28 <line:61:16, col:30> '<dependent type>' contains-errors lvalue .device
|   |   | `-CXXDependentScopeMemberExpr 0x12b925be0 <col:16, col:26> '<dependent type>' contains-errors lvalue ->dle
|   |   |   `-RecoveryExpr 0x12b925bc0 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x12b925d40 <col:38, line:63:5>
|   |-IfStmt 0x12b9274b8 <line:65:5, line:71:5>
|   | |-CXXDependentScopeMemberExpr 0x12b927000 <line:65:9, col:19> '<dependent type>' contains-errors lvalue ->calcsize
|   | | `-RecoveryExpr 0x12b925da0 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12b927490 <col:29, line:71:5>
|   |   |-DeclStmt 0x12b9271e8 <line:66:2, col:61>
|   |   | `-VarDecl 0x12b927060 <col:2, col:8> col:8 used calcsize 'char *'
|   |   |-CallExpr 0x12b9273b8 <line:69:2, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x12b9273a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12b927360 <col:2> 'int ()' Function 0x12b9272a8 'check_suid' 'int ()'
|   |   | `-ImplicitCastExpr 0x12b9273e0 <col:13> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12b927380 <col:13> 'char *' lvalue Var 0x12b927060 'calcsize' 'char *'
|   |   `-CallExpr 0x12b927450 <line:70:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x12b927438 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12b9273f8 <col:2> 'int ()' Function 0x12b922f38 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x12b927478 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x12b927418 <col:9> 'char *' lvalue Var 0x12b927060 'calcsize' 'char *'
|   `-CallExpr 0x12b927530 <line:72:5, col:21> 'int'
|     |-ImplicitCastExpr 0x12b927518 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x12b9274d8 <col:5> 'int ()' Function 0x12b9255a0 'set_root_privs' 'int ()'
|     `-IntegerLiteral 0x12b9274f8 <col:20> 'int' 0
|-FunctionDecl 0x12b923560 <line:12:5> col:5 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x12b923660 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x12b923608 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x12b9236d0 <col:5> Implicit printf 1 2
`-FunctionDecl 0x12b925718 <line:51:22> col:22 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x12b925818 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12b9257c0 <<invalid sloc>> Implicit 902
