TranslationUnitDecl 0x135855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1358564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135855bd0 '__int128'
|-TypedefDecl 0x135856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135855bf0 'unsigned __int128'
|-TypedefDecl 0x135926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135926000 'struct __NSConstantString_tag'
|   `-Record 0x135856580 '__NSConstantString_tag'
|-TypedefDecl 0x135926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135855d90 '__SVInt8_t'
|-TypedefDecl 0x135926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135855db0 '__SVInt16_t'
|-TypedefDecl 0x135926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135855dd0 '__SVInt32_t'
|-TypedefDecl 0x1359263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135855df0 '__SVInt64_t'
|-TypedefDecl 0x135926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135855e10 '__SVUint8_t'
|-TypedefDecl 0x1359264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135855e30 '__SVUint16_t'
|-TypedefDecl 0x135926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135855e50 '__SVUint32_t'
|-TypedefDecl 0x135926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135855e70 '__SVUint64_t'
|-TypedefDecl 0x1359265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135855e90 '__SVFloat16_t'
|-TypedefDecl 0x135926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1359266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135855ed0 '__SVFloat64_t'
|-TypedefDecl 0x135926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1359267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1359268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1359269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x135926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x135926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135856090 '__clang_svint8x3_t'
|-TypedefDecl 0x135926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1358560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1358560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1358560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x135926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x135926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1358561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1358561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1359278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1358561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1359279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135856230 '__clang_svint16x4_t'
|-TypedefDecl 0x135927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135856250 '__clang_svint32x4_t'
|-TypedefDecl 0x135927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135856270 '__clang_svint64x4_t'
|-TypedefDecl 0x135927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1358562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x135927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1358562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1358562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x135927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x135927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135856390 '__SVBool_t'
|-TypedefDecl 0x135927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1358563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x135927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1358563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1358563f0 '__SVCount_t'
|-TypedefDecl 0x135927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x135927fb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-TypedefDecl 0x135928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x135927fb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
`-FunctionDecl 0x135940ea8 <dataset_diviso_filec/func22948_vuln.c:1:1, line:54:1> line:1:1 check_entry_size_and_hooks 'int (struct ipt_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)'
  |-ParmVarDecl 0x135928648 <col:28, col:46> col:46 used e 'struct ipt_entry *'
  |-ParmVarDecl 0x135940a28 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x135940ad8 <line:3:7, col:28> col:28 used base 'const unsigned char *'
  |-ParmVarDecl 0x135940b58 <line:4:7, col:28> col:28 used limit 'const unsigned char *'
  |-ParmVarDecl 0x135940c08 <line:5:7, col:27> col:27 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x135940c88 <line:6:7, col:27> col:27 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x135940d08 <line:7:7, col:20> col:20 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x135943cb8 <line:8:1, line:54:1>
    |-DeclStmt 0x135941050 <line:9:2, col:16>
    | `-VarDecl 0x135940fe8 <col:2, col:15> col:15 used h 'unsigned int'
    |-DeclStmt 0x1359410e8 <line:10:2, col:9>
    | `-VarDecl 0x135941080 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x135941770 <line:12:2, line:17:2>
    | |-RecoveryExpr 0x135941410 <line:12:6, line:14:44> '_Bool' contains-errors
    | `-CompoundStmt 0x135941750 <col:51, line:17:2>
    |   |-CallExpr 0x135941648 <line:15:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x135941630 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x135941560 <col:3> 'int ()' Function 0x1359414a8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x135941678 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x1359415c0 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x135941690 <col:19> 'struct ipt_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1359415e0 <col:19> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    |   `-ReturnStmt 0x135941740 <line:16:3, col:11>
    |     `-UnaryOperator 0x135941728 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x135941710 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1359416f0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x136009b00 <line:19:2, line:24:2>
    | |-RecoveryExpr 0x135941908 <line:19:6, line:20:64> '_Bool' contains-errors
    | `-CompoundStmt 0x136009ae0 <col:67, line:24:2>
    |   |-CallExpr 0x136009a00 <line:21:3, line:22:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x135941928 <line:21:3> 'int ()' Function 0x1359414a8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x135941948 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x135941968 <line:22:5> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    |   | `-RecoveryExpr 0x1359419c0 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x135941988 <col:8> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    |   `-ReturnStmt 0x136009ad0 <line:23:3, col:11>
    |     `-UnaryOperator 0x136009ab8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x136009aa0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x136009a80 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x136009d80 <line:26:2, line:27:11>
    | |-UnaryOperator 0x136009cc0 <line:26:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x136009c98 <col:7, col:27> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x136009c00 <col:7> 'int ()' Function 0x136009b48 'ip_checkentry' 'int ()'
    | |   `-UnaryOperator 0x136009c80 <col:21, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x136009c58 <col:22, col:25> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x136009c20 <col:22> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    | `-ReturnStmt 0x136009d70 <line:27:3, col:11>
    |   `-UnaryOperator 0x136009d58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x136009d40 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x136009d20 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x136009fd8 <line:29:2, col:66> 'int' contains-errors '='
    | |-DeclRefExpr 0x136009da0 <col:2> 'int' lvalue Var 0x135941080 'err' 'int'
    | `-CallExpr 0x136009fa0 <col:8, col:66> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x136009ea0 <col:8> 'int ()' Function 0x136009de8 'xt_check_entry_offsets' 'int ()'
    |   |-DeclRefExpr 0x136009ec0 <col:31> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    |   |-RecoveryExpr 0x136009f18 <col:34, col:37> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x136009ee0 <col:34> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    |   `-RecoveryExpr 0x136009f78 <col:52, col:55> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x136009f40 <col:52> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    |-IfStmt 0x13600a078 <line:30:2, line:31:10>
    | |-ImplicitCastExpr 0x13600a018 <line:30:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x136009ff8 <col:6> 'int' lvalue Var 0x135941080 'err' 'int'
    | `-ReturnStmt 0x13600a068 <line:31:3, col:10>
    |   `-ImplicitCastExpr 0x13600a050 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13600a030 <col:10> 'int' lvalue Var 0x135941080 'err' 'int'
    |-ForStmt 0x1359439c8 <line:34:2, line:48:2>
    | |-BinaryOperator 0x13600a0f0 <line:34:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x13600a098 <col:7> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x13600a0d8 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x13600a0b8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13600a188 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13600a110 <col:14> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x13600a168 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13600a1c8 <col:36, col:37> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x13600a1a8 <col:36> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    | `-CompoundStmt 0x1359439a0 <col:41, line:48:2>
    |   |-IfStmt 0x13600a328 <line:35:3, line:36:4>
    |   | |-UnaryOperator 0x13600a308 <line:35:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x13600a2e8 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x13600a2c8 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x13600a298 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x13600a1e0 <col:9> 'unsigned int' lvalue ParmVar 0x135940d08 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x13600a2b0 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x13600a278 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x13600a258 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x13600a200 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x13600a240 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x13600a220 <col:29> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x13600a320 <line:36:4>
    |   |-IfStmt 0x13600a678 <line:37:3, line:38:43>
    |   | |-BinaryOperator 0x13600a4d8 <line:37:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x13600a3f8 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x13600a398 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x13600a380 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x13600a348 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    |   | | | `-ImplicitCastExpr 0x13600a3e0 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x13600a3c0 <col:28> 'const unsigned char *' lvalue ParmVar 0x135940ad8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x13600a4c0 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x13600a4a8 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x13600a488 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x13600a458 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x13600a418 <col:36> 'const unsigned int *' lvalue ParmVar 0x135940c08 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x13600a470 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x13600a438 <col:49> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x13600a658 <line:38:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x13600a5a8 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x13600a578 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x13600a530 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x13600a4f8 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x135940a28 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x13600a590 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x13600a558 <col:24> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x13600a638 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x13600a608 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x13600a5c8 <col:29> 'const unsigned int *' lvalue ParmVar 0x135940c08 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x13600a620 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x13600a5e8 <col:42> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    |   `-IfStmt 0x135943980 <line:39:3, line:47:3>
    |     |-BinaryOperator 0x13600a828 <line:39:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x13600a748 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x13600a6e8 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x13600a6d0 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x13600a698 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    |     | | `-ImplicitCastExpr 0x13600a730 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x13600a710 <col:28> 'const unsigned char *' lvalue ParmVar 0x135940ad8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x13600a810 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x13600a7f8 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x13600a7d8 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x13600a7a8 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x13600a768 <col:36> 'const unsigned int *' lvalue ParmVar 0x135940c88 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x13600a7c0 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x13600a788 <col:47> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    |     `-CompoundStmt 0x135943960 <col:51, line:47:3>
    |       |-IfStmt 0x1359437c0 <line:40:4, line:45:4>
    |       | |-UnaryOperator 0x13600a9c0 <line:40:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x13600a980 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x13600a968 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x13600a928 <col:9> 'int ()' Function 0x13600a870 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x13600a9a8 <col:25> 'struct ipt_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x13600a948 <col:25> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    |       | `-CompoundStmt 0x1359437a8 <col:29, line:45:4>
    |       |   `-CallExpr 0x135943768 <line:41:5, line:43:12> 'int'
    |       |     |-ImplicitCastExpr 0x135943750 <line:41:5> 'int (*)()' <FunctionToPointerDecay>
    |       |     | `-DeclRefExpr 0x1359436b8 <col:5> 'int ()' Function 0x135943600 'pr_debug' 'int ()'
    |       |     `-ImplicitCastExpr 0x135943790 <col:14, line:43:7> 'char *' <ArrayToPointerDecay>
    |       |       `-StringLiteral 0x135943720 <line:41:14, line:43:7> 'char[10]' lvalue "STRSTRSTR"
    |       `-BinaryOperator 0x135943940 <line:46:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x135943890 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x135943860 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x135943818 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x1359437e0 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x135940a28 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x135943878 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x135943840 <col:23> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x135943920 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x1359438f0 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x1359438b0 <col:28> 'const unsigned int *' lvalue ParmVar 0x135940c88 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x135943908 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x1359438d0 <col:39> 'unsigned int' lvalue Var 0x135940fe8 'h' 'unsigned int'
    |-BinaryOperator 0x135943c68 <line:52:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x135943c20 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x135943be8 <col:2> 'struct ipt_entry *' lvalue ParmVar 0x135928648 'e' 'struct ipt_entry *'
    | `-IntegerLiteral 0x135943c48 <col:16> 'int' 0
    `-ReturnStmt 0x135943ca8 <line:53:2, col:9>
      `-IntegerLiteral 0x135943c88 <col:9> 'int' 0
