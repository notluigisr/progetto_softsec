TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x128126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128126000 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x128126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x128126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x128126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x1281263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x128126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x1281264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x128126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x128126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x1281265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x128126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1281266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x128126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1281267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1281268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1281269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x128126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1281278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1281279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x128127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x128127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x128127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x128127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x128127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x128128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-FunctionDecl 0x128128318 <dataset_diviso_filec/func17786_vuln.c:1:1, line:45:2> line:1:1 invalid dtls1_retrieve_buffered_fragment 'int (int *, long, int *)'
| |-ParmVarDecl 0x128128128 <col:34, col:39> col:39 referenced invalid s 'int *'
| |-ParmVarDecl 0x1281281a8 <col:42, col:47> col:47 used max 'long'
| |-ParmVarDecl 0x128128228 <col:52, col:57> col:57 used ok 'int *'
| `-CompoundStmt 0x128141f78 <line:2:2, line:45:2>
|   |-DeclStmt 0x128128488 <line:6:2, col:8>
|   | `-VarDecl 0x128128420 <col:2, col:6> col:6 used al 'int'
|   |-BinaryOperator 0x128128510 <line:8:2, col:8> 'int' '='
|   | |-UnaryOperator 0x1281284d8 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1281284c0 <col:3> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1281284a0 <col:3> 'int *' lvalue ParmVar 0x128128228 'ok' 'int *'
|   | `-IntegerLiteral 0x1281284f0 <col:8> 'int' 0
|   |-IfStmt 0x102808c70 <line:10:2, line:11:10>
|   | |-BinaryOperator 0x102808c20 <line:10:7, col:15> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x1281287d8 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x102808c00 <col:15> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x102808c60 <line:11:3, col:10>
|   |   `-IntegerLiteral 0x102808c40 <col:10> 'int' 0
|   `-IfStmt 0x128141f48 <line:15:2, line:44:10> has_else
|     |-BinaryOperator 0x102808ed0 <line:15:7, col:53> 'int' contains-errors '=='
|     | |-CXXDependentScopeMemberExpr 0x102808d10 <col:7, col:14> '<dependent type>' contains-errors lvalue ->handshake_read_seq
|     | | `-CXXDependentScopeMemberExpr 0x102808cc8 <col:7, col:10> '<dependent type>' contains-errors lvalue ->d1
|     | |   `-RecoveryExpr 0x102808ca8 <col:7> '<dependent type>' contains-errors lvalue
|     | `-CXXDependentScopeMemberExpr 0x102808e88 <col:36, col:53> '<dependent type>' contains-errors lvalue .seq
|     |   `-CXXDependentScopeMemberExpr 0x102808e40 <col:36, col:42> '<dependent type>' contains-errors lvalue ->msg_header
|     |     `-RecoveryExpr 0x102808e20 <col:36> '<dependent type>' contains-errors lvalue
|     |-CompoundStmt 0x128141ec8 <line:16:3, line:42:3>
|     | |-DeclStmt 0x1028090c8 <line:17:3, col:53>
|     | | `-VarDecl 0x102808f08 <col:3, col:45> col:17 used frag_len 'unsigned long' cinit
|     | |   `-CXXDependentScopeMemberExpr 0x102809080 <col:28, col:45> '<dependent type>' contains-errors lvalue .frag_len
|     | |     `-CXXDependentScopeMemberExpr 0x102809038 <col:28, col:34> '<dependent type>' contains-errors lvalue ->msg_header
|     | |       `-RecoveryExpr 0x102809018 <col:28> '<dependent type>' contains-errors lvalue
|     | |-CallExpr 0x102809290 <line:18:3, col:38> '<dependent type>' contains-errors
|     | | |-DeclRefExpr 0x1028091c0 <col:3> 'int ()' Function 0x102809108 'pqueue_pop' 'int ()'
|     | | `-CXXDependentScopeMemberExpr 0x102809248 <col:14, col:21> '<dependent type>' contains-errors lvalue ->buffered_messages
|     | |   `-CXXDependentScopeMemberExpr 0x102809200 <col:14, col:17> '<dependent type>' contains-errors lvalue ->d1
|     | |     `-RecoveryExpr 0x1028091e0 <col:14> '<dependent type>' contains-errors lvalue
|     | |-BinaryOperator 0x1028095a0 <line:20:3, col:55> 'int' contains-errors '='
|     | | |-DeclRefExpr 0x1028092b8 <col:3> 'int' lvalue Var 0x128128420 'al' 'int'
|     | | `-CallExpr 0x102809568 <col:6, col:55> '<dependent type>' contains-errors
|     | |   |-DeclRefExpr 0x1028093b8 <col:6> 'int ()' Function 0x102809300 'dtls1_preprocess_fragment' 'int ()'
|     | |   |-RecoveryExpr 0x1028093d8 <col:32> '<dependent type>' contains-errors lvalue
|     | |   |-UnaryOperator 0x102809550 <col:34, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|     | |   | `-CXXDependentScopeMemberExpr 0x102809508 <col:35, col:41> '<dependent type>' contains-errors lvalue ->msg_header
|     | |   |   `-RecoveryExpr 0x1028094e8 <col:35> '<dependent type>' contains-errors lvalue
|     | |   `-DeclRefExpr 0x102809470 <col:52> 'long' lvalue ParmVar 0x1281281a8 'max' 'long'
|     | |-IfStmt 0x128141818 <line:22:3, line:27:4>
|     | | |-BinaryOperator 0x102809618 <line:22:7, col:11> 'int' '=='
|     | | | |-ImplicitCastExpr 0x102809600 <col:7> 'int' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1028095c0 <col:7> 'int' lvalue Var 0x128128420 'al' 'int'
|     | | | `-IntegerLiteral 0x1028095e0 <col:11> 'int' 0
|     | | `-CompoundStmt 0x128141800 <line:23:4, line:27:4>
|     | |   `-DeclStmt 0x1028098d8 <line:24:4, col:80>
|     | |     `-VarDecl 0x102809688 <col:4, col:58> col:19 used p 'unsigned char *' cinit
|     | |       `-BinaryOperator 0x1028098b8 <col:23, col:58> '<dependent type>' contains-errors '+'
|     | |         |-CStyleCastExpr 0x102809870 <col:23, col:53> 'unsigned char *' contains-errors <Dependent>
|     | |         | `-CXXDependentScopeMemberExpr 0x102809758 <col:40, col:53> '<dependent type>' contains-errors lvalue ->data
|     | |         |   `-CXXDependentScopeMemberExpr 0x102809710 <col:40, col:43> '<dependent type>' contains-errors lvalue ->init_buf
|     | |         |     `-RecoveryExpr 0x1028096f0 <col:40> '<dependent type>' contains-errors lvalue
|     | |         `-RecoveryExpr 0x102809898 <col:58> '<dependent type>' contains-errors lvalue
|     | |-IfStmt 0x128141bc0 <line:32:3, line:36:4>
|     | | |-BinaryOperator 0x128141a90 <line:32:7, col:11> 'int' '=='
|     | | | |-ImplicitCastExpr 0x128141a78 <col:7> 'int' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x128141a38 <col:7> 'int' lvalue Var 0x128128420 'al' 'int'
|     | | | `-IntegerLiteral 0x128141a58 <col:11> 'int' 0
|     | | `-CompoundStmt 0x128141ba0 <line:33:4, line:36:4>
|     | |   |-BinaryOperator 0x128141b20 <line:34:4, col:10> 'int' '='
|     | |   | |-UnaryOperator 0x128141ae8 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
|     | |   | | `-ImplicitCastExpr 0x128141ad0 <col:5> 'int *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x128141ab0 <col:5> 'int *' lvalue ParmVar 0x128128228 'ok' 'int *'
|     | |   | `-IntegerLiteral 0x128141b00 <col:10> 'int' 1
|     | |   `-ReturnStmt 0x128141b90 <line:35:4, col:11>
|     | |     `-ImplicitCastExpr 0x128141b78 <col:11> 'int' contains-errors <IntegralCast>
|     | |       `-ImplicitCastExpr 0x128141b60 <col:11> 'unsigned long' contains-errors <LValueToRValue>
|     | |         `-DeclRefExpr 0x128141b40 <col:11> 'unsigned long' contains-errors lvalue Var 0x102808f08 'frag_len' 'unsigned long'
|     | |-BinaryOperator 0x128141dd0 <line:39:3, col:17> '<dependent type>' contains-errors '='
|     | | |-CXXDependentScopeMemberExpr 0x128141d68 <col:3, col:6> '<dependent type>' contains-errors lvalue ->init_num
|     | | | `-RecoveryExpr 0x128141d40 <col:3> '<dependent type>' contains-errors lvalue
|     | | |   `-DeclRefExpr 0x128141d20 <col:3> 'int *' lvalue ParmVar 0x128128128 's' 'int *'
|     | | `-IntegerLiteral 0x128141db0 <col:17> 'int' 0
|     | |-BinaryOperator 0x128141e60 <line:40:3, col:9> 'int' '='
|     | | |-UnaryOperator 0x128141e28 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|     | | | `-ImplicitCastExpr 0x128141e10 <col:4> 'int *' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x128141df0 <col:4> 'int *' lvalue ParmVar 0x128128228 'ok' 'int *'
|     | | `-IntegerLiteral 0x128141e40 <col:9> 'int' 0
|     | `-ReturnStmt 0x128141eb8 <line:41:3, col:11>
|     |   `-UnaryOperator 0x128141ea0 <col:10, col:11> 'int' prefix '-'
|     |     `-IntegerLiteral 0x128141e80 <col:11> 'int' 1
|     `-ReturnStmt 0x128141f38 <line:44:3, col:10>
|       `-IntegerLiteral 0x128141f18 <col:10> 'int' 0
`-FunctionDecl 0x102809968 <line:25:4> col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x102809a68 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x102809ad0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x102809b38 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x102809a10 <<invalid sloc>> Implicit 882
