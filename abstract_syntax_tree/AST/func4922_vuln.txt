TranslationUnitDecl 0x150855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1508564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150855bd0 '__int128'
|-TypedefDecl 0x150856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150855bf0 'unsigned __int128'
|-TypedefDecl 0x150926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x150926000 'struct __NSConstantString_tag'
|   `-Record 0x150856580 '__NSConstantString_tag'
|-TypedefDecl 0x150926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150855d90 '__SVInt8_t'
|-TypedefDecl 0x150926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150855db0 '__SVInt16_t'
|-TypedefDecl 0x150926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150855dd0 '__SVInt32_t'
|-TypedefDecl 0x1509263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150855df0 '__SVInt64_t'
|-TypedefDecl 0x150926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150855e10 '__SVUint8_t'
|-TypedefDecl 0x1509264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150855e30 '__SVUint16_t'
|-TypedefDecl 0x150926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150855e50 '__SVUint32_t'
|-TypedefDecl 0x150926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150855e70 '__SVUint64_t'
|-TypedefDecl 0x1509265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150855e90 '__SVFloat16_t'
|-TypedefDecl 0x150926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1509266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150855ed0 '__SVFloat64_t'
|-TypedefDecl 0x150926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x150926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1509267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x150926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1509268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x150926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x150926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1509269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x150926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x150926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x150926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150856090 '__clang_svint8x3_t'
|-TypedefDecl 0x150926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1508560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x150926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1508560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x150926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1508560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x150926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x150926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x150926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x150926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x150926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1508561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1508561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1509278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1508561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1509279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150856230 '__clang_svint16x4_t'
|-TypedefDecl 0x150927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150856250 '__clang_svint32x4_t'
|-TypedefDecl 0x150927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150856270 '__clang_svint64x4_t'
|-TypedefDecl 0x150927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x150927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1508562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x150927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1508562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x150927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1508562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x150927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x150927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x150927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150856390 '__SVBool_t'
|-TypedefDecl 0x150927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1508563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x150927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1508563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x150927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1508563f0 '__SVCount_t'
|-TypedefDecl 0x150927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x150927fb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-TypedefDecl 0x150928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x150927fb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-FunctionDecl 0x150928288 <dataset_diviso_filec/func4922_vuln.c:1:1, line:45:1> line:1:1 invalid cib_send_tls 'int (int *, int *)'
| |-ParmVarDecl 0x150928128 <col:14, col:31> col:31 invalid session 'int *'
| |-ParmVarDecl 0x1509281a8 <col:40, col:50> col:50 invalid msg 'int *'
| `-CompoundStmt 0x151008a88 <line:2:1, line:45:1>
|   |-DeclStmt 0x1509283f8 <line:3:5, col:26>
|   | `-VarDecl 0x150928358 <col:5, col:22> col:11 used xml_text 'char *' cinit
|   |   `-RecoveryExpr 0x1509283d8 <col:22> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1509285f8 <line:12:5, col:40> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x150928410 <col:5> 'char *' contains-errors lvalue Var 0x150928358 'xml_text' 'char *'
|   | `-CallExpr 0x1509285d0 <col:16, col:40> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x150928590 <col:16> 'int ()' Function 0x1509284d8 'dump_xml_unformatted' 'int ()'
|   |   `-RecoveryExpr 0x1509285b0 <col:37> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x151008780 <line:13:5, line:41:5>
|   | |-BinaryOperator 0x150928690 <line:13:9, col:21> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x150928618 <col:9> 'char *' contains-errors lvalue Var 0x150928358 'xml_text' 'char *'
|   | | `-RecoveryExpr 0x150928670 <col:21> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x151008740 <col:27, line:41:5>
|   |   |-DeclStmt 0x150928768 <line:14:9, col:32>
|   |   | `-VarDecl 0x1509286c8 <col:9, col:24> col:15 used unsent 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x150928750 <col:24> 'char *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x150928730 <col:24> 'char *' contains-errors lvalue Var 0x150928358 'xml_text' 'char *'
|   |   |-DeclStmt 0x1509422e8 <line:15:9, col:35>
|   |   | `-VarDecl 0x150928798 <col:9, col:34> col:13 used len 'int' cinit
|   |   |   `-ImplicitCastExpr 0x1509422d0 <col:19, col:34> 'int' contains-errors <IntegralCast>
|   |   |     `-CallExpr 0x150942278 <col:19, col:34> 'unsigned long' contains-errors
|   |   |       |-ImplicitCastExpr 0x150942260 <col:19> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1509421d0 <col:19> 'unsigned long (const char *)' Function 0x150942060 'strlen' 'unsigned long (const char *)'
|   |   |       `-ImplicitCastExpr 0x1509422b8 <col:26> 'const char *' contains-errors <NoOp>
|   |   |         `-ImplicitCastExpr 0x1509422a0 <col:26> 'char *' contains-errors <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1509421f0 <col:26> 'char *' contains-errors lvalue Var 0x150928358 'xml_text' 'char *'
|   |   |-DeclStmt 0x1509423a0 <line:16:9, col:19>
|   |   | `-VarDecl 0x150942318 <col:9, col:18> col:13 used rc 'int' cinit
|   |   |   `-IntegerLiteral 0x150942380 <col:18> 'int' 0
|   |   |-UnaryOperator 0x1509423d8 <line:18:9, col:12> 'int' contains-errors postfix '++'
|   |   | `-DeclRefExpr 0x1509423b8 <col:9> 'int' contains-errors lvalue Var 0x150928798 'len' 'int'
|   |   |-CallExpr 0x1509425b8 <line:19:9, col:29> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x1509425a0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1509424d0 <col:9> 'int ()' Function 0x150942418 'crm_trace' 'int ()'
|   |   | |-ImplicitCastExpr 0x1509425e8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x150942530 <col:19> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x150942600 <col:26> 'int' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x150942550 <col:26> 'int' contains-errors lvalue Var 0x150928798 'len' 'int'
|   |   `-WhileStmt 0x151008720 <line:21:9, line:39:9>
|   |     |-RecoveryExpr 0x150942630 <line:21:16> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x1510086f8 <col:22, line:39:9>
|   |       |-BinaryOperator 0x150942838 <line:22:13, col:58> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x150942650 <col:13> 'int' lvalue Var 0x150942318 'rc' 'int'
|   |       | `-CallExpr 0x150942800 <col:18, col:58> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x150942750 <col:18> 'int ()' Function 0x150942698 'gnutls_record_send' 'int ()'
|   |       |   |-UnaryOperator 0x1509427a8 <col:37, col:38> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x150942790 <col:38> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   |   `-RecoveryExpr 0x150942770 <col:38> '<dependent type>' contains-errors lvalue
|   |       |   |-DeclRefExpr 0x1509427c0 <col:47> 'char *' contains-errors lvalue Var 0x1509286c8 'unsent' 'char *'
|   |       |   `-DeclRefExpr 0x1509427e0 <col:55> 'int' contains-errors lvalue Var 0x150928798 'len' 'int'
|   |       |-CallExpr 0x1509429b0 <line:23:13, col:32> 'int'
|   |       | |-ImplicitCastExpr 0x150942998 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x150942938 <col:13> 'int ()' Function 0x150942880 'crm_debug' 'int ()'
|   |       | |-ImplicitCastExpr 0x1509429e0 <col:23> 'char *' <ArrayToPointerDecay>
|   |       | | `-StringLiteral 0x150942958 <col:23> 'char[4]' lvalue "STR"
|   |       | `-ImplicitCastExpr 0x1509429f8 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x150942978 <col:30> 'int' lvalue Var 0x150942318 'rc' 'int'
|   |       `-IfStmt 0x1510086c8 <line:25:13, line:38:13> has_else
|   |         |-BinaryOperator 0x150942b60 <line:25:17, col:53> 'int' contains-errors '||'
|   |         | |-BinaryOperator 0x150942b00 <col:17, col:23> 'int' contains-errors '=='
|   |         | | |-DeclRefExpr 0x150942a10 <col:17> 'int' lvalue Var 0x150942318 'rc' 'int'
|   |         | | `-RecoveryExpr 0x150942ae0 <col:23> '<dependent type>' contains-errors lvalue
|   |         | `-BinaryOperator 0x150942b40 <col:47, col:53> 'int' contains-errors '=='
|   |         |   |-DeclRefExpr 0x150942a68 <col:47> 'int' lvalue Var 0x150942318 'rc' 'int'
|   |         |   `-RecoveryExpr 0x150942b20 <col:53> '<dependent type>' contains-errors lvalue
|   |         |-CompoundStmt 0x151008218 <col:69, line:28:13>
|   |         | `-CallExpr 0x150942bd8 <line:26:17, col:32> 'int'
|   |         |   |-ImplicitCastExpr 0x150942bc0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |         |   | `-DeclRefExpr 0x150942b80 <col:17> 'int ()' Function 0x150942880 'crm_debug' 'int ()'
|   |         |   `-ImplicitCastExpr 0x151008200 <col:27> 'char *' <ArrayToPointerDecay>
|   |         |     `-StringLiteral 0x150942ba0 <col:27> 'char[4]' lvalue "STR"
|   |         `-IfStmt 0x151008698 <line:28:20, line:38:13> has_else
|   |           |-BinaryOperator 0x151008288 <line:28:24, col:29> 'int' '<'
|   |           | |-ImplicitCastExpr 0x151008270 <col:24> 'int' <LValueToRValue>
|   |           | | `-DeclRefExpr 0x151008230 <col:24> 'int' lvalue Var 0x150942318 'rc' 'int'
|   |           | `-IntegerLiteral 0x151008250 <col:29> 'int' 0
|   |           |-CompoundStmt 0x151008348 <col:32, line:32:13>
|   |           | |-CallExpr 0x151008300 <line:29:17, col:32> 'int'
|   |           | | |-ImplicitCastExpr 0x1510082e8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |           | | | `-DeclRefExpr 0x1510082a8 <col:17> 'int ()' Function 0x150942880 'crm_debug' 'int ()'
|   |           | | `-ImplicitCastExpr 0x151008328 <col:27> 'char *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x1510082c8 <col:27> 'char[4]' lvalue "STR"
|   |           | `-BreakStmt 0x151008340 <line:30:17>
|   |           `-IfStmt 0x151008668 <line:32:20, line:38:13> has_else
|   |             |-BinaryOperator 0x1510083d8 <line:32:24, col:29> 'int' contains-errors '<'
|   |             | |-ImplicitCastExpr 0x1510083a8 <col:24> 'int' <LValueToRValue>
|   |             | | `-DeclRefExpr 0x151008368 <col:24> 'int' lvalue Var 0x150942318 'rc' 'int'
|   |             | `-ImplicitCastExpr 0x1510083c0 <col:29> 'int' contains-errors <LValueToRValue>
|   |             |   `-DeclRefExpr 0x151008388 <col:29> 'int' contains-errors lvalue Var 0x150928798 'len' 'int'
|   |             |-CompoundStmt 0x151008620 <col:34, line:36:13>
|   |             | |-CallExpr 0x151008490 <line:33:17, col:41> 'int' contains-errors
|   |             | | |-ImplicitCastExpr 0x151008478 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |             | | | `-DeclRefExpr 0x1510083f8 <col:17> 'int ()' Function 0x150942880 'crm_debug' 'int ()'
|   |             | | |-ImplicitCastExpr 0x1510084c8 <col:27> 'char *' <ArrayToPointerDecay>
|   |             | | | `-StringLiteral 0x151008418 <col:27> 'char[4]' lvalue "STR"
|   |             | | |-ImplicitCastExpr 0x1510084e0 <col:34> 'int' <LValueToRValue>
|   |             | | | `-DeclRefExpr 0x151008438 <col:34> 'int' lvalue Var 0x150942318 'rc' 'int'
|   |             | | `-ImplicitCastExpr 0x1510084f8 <col:38> 'int' contains-errors <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x151008458 <col:38> 'int' contains-errors lvalue Var 0x150928798 'len' 'int'
|   |             | |-CompoundAssignOperator 0x151008568 <line:34:17, col:24> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |             | | |-DeclRefExpr 0x151008510 <col:17> 'int' contains-errors lvalue Var 0x150928798 'len' 'int'
|   |             | | `-ImplicitCastExpr 0x151008550 <col:24> 'int' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x151008530 <col:24> 'int' lvalue Var 0x150942318 'rc' 'int'
|   |             | `-CompoundAssignOperator 0x1510085f0 <line:35:17, col:27> 'char *' contains-errors '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |             |   |-DeclRefExpr 0x151008598 <col:17> 'char *' contains-errors lvalue Var 0x1509286c8 'unsent' 'char *'
|   |             |   `-ImplicitCastExpr 0x1510085d8 <col:27> 'int' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x1510085b8 <col:27> 'int' lvalue Var 0x150942318 'rc' 'int'
|   |             `-CompoundStmt 0x151008650 <line:36:20, line:38:13>
|   |               `-BreakStmt 0x151008648 <line:37:17>
|   |-CallExpr 0x1510089e8 <line:42:5, col:18> 'void' contains-errors
|   | |-ImplicitCastExpr 0x1510089d0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x151008948 <col:5> 'void (void *)' Function 0x1510087d8 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x151008a28 <col:10> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x151008a10 <col:10> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x151008968 <col:10> 'char *' contains-errors lvalue Var 0x150928358 'xml_text' 'char *'
|   `-ReturnStmt 0x151008a78 <line:43:5, col:12>
|     `-RecoveryExpr 0x151008a58 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x150942060 <line:15:19> col:19 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x150942160 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x150942108 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x1510087d8 <line:42:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x1510088d8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x151008880 <<invalid sloc>> Implicit 873
