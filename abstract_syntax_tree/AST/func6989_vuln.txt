TranslationUnitDecl 0x129855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1298564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129855bd0 '__int128'
|-TypedefDecl 0x129856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129855bf0 'unsigned __int128'
|-TypedefDecl 0x12a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x129856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129855d90 '__SVInt8_t'
|-TypedefDecl 0x12a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129855db0 '__SVInt16_t'
|-TypedefDecl 0x12a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129855df0 '__SVInt64_t'
|-TypedefDecl 0x12a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129855e10 '__SVUint8_t'
|-TypedefDecl 0x12a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129855e30 '__SVUint16_t'
|-TypedefDecl 0x12a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129855e50 '__SVUint32_t'
|-TypedefDecl 0x12a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129855e70 '__SVUint64_t'
|-TypedefDecl 0x12a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1298560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1298560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1298560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1298561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1298561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1298561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1298562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1298562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1298562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129856390 '__SVBool_t'
|-TypedefDecl 0x12a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1298563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1298563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1298563f0 '__SVCount_t'
|-TypedefDecl 0x12a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-TypedefDecl 0x12a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-FunctionDecl 0x12a026688 <dataset_diviso_filec/func6989_vuln.c:1:1, line:69:1> line:1:1 get_one_option 'int (int, const struct my_option *, char *)'
| |-ParmVarDecl 0x12a00dcd8 <col:16, col:20> col:20 used optid 'int'
| |-ParmVarDecl 0x12a00e2c8 <col:27, col:51> col:51 used opt 'const struct my_option *'
| |-ParmVarDecl 0x12a00e348 <line:2:16, col:22> col:22 used argument 'char *'
| `-CompoundStmt 0x12a029a90 <line:3:1, line:69:1>
|   |-SwitchStmt 0x12a0267e0 <line:6:3, line:61:3>
|   | |-ImplicitCastExpr 0x12a0267c8 <line:6:11> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12a0267a8 <col:11> 'int' lvalue ParmVar 0x12a00dcd8 'optid' 'int'
|   | `-CompoundStmt 0x12a029918 <col:18, line:61:3>
|   |   |-CaseStmt 0x12a026838 <line:8:3, line:10:77>
|   |   | |-ConstantExpr 0x12a026820 <line:8:8> 'int'
|   |   | | `-CharacterLiteral 0x12a026808 <col:8> 'int' 63
|   |   | `-CallExpr 0x12a026c68 <line:9:5, line:10:77> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12a026a48 <line:9:5> 'int (const char *, ...)' Function 0x12a0268a0 'printf' 'int (const char *, ...)'
|   |   |   |-StringLiteral 0x12a026ab0 <col:12> 'char[4]' lvalue "STR"
|   |   |   |-RecoveryExpr 0x12a026bb0 <line:10:12> '<dependent type>' contains-errors lvalue
|   |   |   |-RecoveryExpr 0x12a026bd0 <col:25> '<dependent type>' contains-errors lvalue
|   |   |   |-RecoveryExpr 0x12a026bf0 <col:30> '<dependent type>' contains-errors lvalue
|   |   |   |-RecoveryExpr 0x12a026c10 <col:52> '<dependent type>' contains-errors lvalue
|   |   |   `-RecoveryExpr 0x12a026c30 <col:65> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x12a026fb0 <line:11:5, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x12a026f98 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12a026dd0 <col:5> 'int ()' Function 0x12a026d18 'puts' 'int ()'
|   |   | `-CallExpr 0x12a026f58 <col:10, col:47> 'int'
|   |   |   |-ImplicitCastExpr 0x12a026f40 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12a026ed0 <col:10> 'int ()' Function 0x12a026e18 'ORACLE_WELCOME_COPYRIGHT_NOTICE' 'int ()'
|   |   |   `-ImplicitCastExpr 0x12a026f80 <col:42> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x12a026ef0 <col:42> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x12a027030 <line:12:5, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x12a027018 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12a026fd8 <col:5> 'int ()' Function 0x12a026d18 'puts' 'int ()'
|   |   | `-ImplicitCastExpr 0x12a027058 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x12a026ff8 <col:10> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x12a0271d0 <line:13:5, col:34> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12a027150 <col:5> 'int ()' Function 0x12a027098 'my_print_help' 'int ()'
|   |   | `-RecoveryExpr 0x12a0271b0 <col:19> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x12a027438 <line:14:5, col:11> 'void'
|   |   | |-ImplicitCastExpr 0x12a027420 <col:5> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12a0273a8 <col:5> 'void (int) __attribute__((noreturn))' Function 0x12a027238 'exit' 'void (int) __attribute__((noreturn))'
|   |   | `-IntegerLiteral 0x12a0273c8 <col:10> 'int' 0
|   |   |-BreakStmt 0x12a027460 <line:15:5>
|   |   |-CaseStmt 0x12a027498 <line:17:3, line:18:56>
|   |   | |-ConstantExpr 0x12a027480 <line:17:8> 'int'
|   |   | | `-CharacterLiteral 0x12a027468 <col:8> 'int' 35
|   |   | `-CallExpr 0x12a028ec0 <line:18:5, col:56> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12a0275a0 <col:5> 'int ()' Function 0x12a0274e8 'DBUG_PUSH' 'int ()'
|   |   |   `-ConditionalOperator 0x12a028e90 <col:15, col:37> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12a0275c0 <col:15> 'char *' lvalue ParmVar 0x12a00e348 'argument' 'char *'
|   |   |     |-DeclRefExpr 0x12a0275e0 <col:26> 'char *' lvalue ParmVar 0x12a00e348 'argument' 'char *'
|   |   |     `-RecoveryExpr 0x12a028e70 <col:37> '<dependent type>' contains-errors lvalue
|   |   |-BreakStmt 0x12a028f20 <line:21:5>
|   |   |-CaseStmt 0x12a028f58 <line:23:3, line:25:25>
|   |   | |-ConstantExpr 0x12a028f40 <line:23:8> 'int'
|   |   | | `-CharacterLiteral 0x12a028f28 <col:8> 'int' 112
|   |   | `-IfStmt 0x12a029110 <line:24:5, line:25:25>
|   |   |   |-BinaryOperator 0x12a028ff8 <line:24:9, col:21> 'int' contains-errors '=='
|   |   |   | |-DeclRefExpr 0x12a028f80 <col:9> 'char *' lvalue ParmVar 0x12a00e348 'argument' 'char *'
|   |   |   | `-RecoveryExpr 0x12a028fd8 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   `-BinaryOperator 0x12a0290f0 <line:25:7, col:25> 'char *' '='
|   |   |     |-DeclRefExpr 0x12a029018 <col:7> 'char *' lvalue ParmVar 0x12a00e348 'argument' 'char *'
|   |   |     `-CStyleCastExpr 0x12a0290c8 <col:17, col:25> 'char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x12a0290b0 <col:25> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |         `-StringLiteral 0x12a029080 <col:25> 'char[1]' lvalue ""
|   |   |-IfStmt 0x12a029428 <line:28:5, line:35:5>
|   |   | |-ImplicitCastExpr 0x12a029170 <line:28:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12a029150 <col:9> 'char *' lvalue ParmVar 0x12a00e348 'argument' 'char *'
|   |   | `-CompoundStmt 0x12a029410 <line:29:5, line:35:5>
|   |   |   `-WhileStmt 0x12a0293d0 <line:32:7, line:33:22>
|   |   |     |-ImplicitCastExpr 0x12a029318 <line:32:14, col:15> 'char' <LValueToRValue>
|   |   |     | `-UnaryOperator 0x12a029300 <col:14, col:15> 'char' lvalue prefix '*' cannot overflow
|   |   |     |   `-ImplicitCastExpr 0x12a0292e8 <col:15> 'char *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x12a0292c8 <col:15> 'char *' lvalue ParmVar 0x12a00e348 'argument' 'char *'
|   |   |     `-BinaryOperator 0x12a0293b0 <line:33:9, col:22> 'char' '='
|   |   |       |-UnaryOperator 0x12a029368 <col:9, col:18> 'char' lvalue prefix '*' cannot overflow
|   |   |       | `-UnaryOperator 0x12a029350 <col:10, col:18> 'char *' postfix '++'
|   |   |       |   `-DeclRefExpr 0x12a029330 <col:10> 'char *' lvalue ParmVar 0x12a00e348 'argument' 'char *'
|   |   |       `-ImplicitCastExpr 0x12a029398 <col:22> 'char' <IntegralCast>
|   |   |         `-CharacterLiteral 0x12a029380 <col:22> 'int' 120
|   |   |-BreakStmt 0x12a029448 <line:36:5>
|   |   |-CaseStmt 0x12a029480 <line:38:3, <invalid sloc>>
|   |   | |-ConstantExpr 0x12a029468 <col:8> 'int'
|   |   | | `-CharacterLiteral 0x12a029450 <col:8> 'int' 116
|   |   | `-NullStmt 0x12a0295c8 <<invalid sloc>>
|   |   |-BreakStmt 0x12a0295d0 <line:41:5>
|   |   |-CaseStmt 0x12a029608 <line:43:3, <invalid sloc>>
|   |   | |-ConstantExpr 0x12a0295f0 <col:8> 'int'
|   |   | | `-CharacterLiteral 0x12a0295d8 <col:8> 'int' 107
|   |   | `-CaseStmt 0x12a029660 <line:44:3, <invalid sloc>>
|   |   |   |-ConstantExpr 0x12a029648 <col:8> 'int'
|   |   |   | `-CharacterLiteral 0x12a029630 <col:8> 'int' 118
|   |   |   `-CaseStmt 0x12a0296b8 <line:45:3, <invalid sloc>>
|   |   |     |-ConstantExpr 0x12a0296a0 <col:8> 'int'
|   |   |     | `-CharacterLiteral 0x12a029688 <col:8> 'int' 102
|   |   |     `-CaseStmt 0x12a029710 <line:46:3, <invalid sloc>>
|   |   |       |-ConstantExpr 0x12a0296f8 <col:8> 'int'
|   |   |       | `-CharacterLiteral 0x12a0296e0 <col:8> 'int' 115
|   |   |       `-NullStmt 0x12a029738 <<invalid sloc>>
|   |   |-BreakStmt 0x12a029740 <line:49:5>
|   |   |-CaseStmt 0x12a029778 <line:51:3, <invalid sloc>>
|   |   | |-ConstantExpr 0x12a029760 <col:8> 'int'
|   |   | | `-CharacterLiteral 0x12a029748 <col:8> 'int' 104
|   |   | `-CaseStmt 0x12a0297d0 <line:52:3, <invalid sloc>>
|   |   |   |-ConstantExpr 0x12a0297b8 <col:8> 'int'
|   |   |   | `-CharacterLiteral 0x12a0297a0 <col:8> 'int' 87
|   |   |   `-CaseStmt 0x12a029828 <line:53:3, <invalid sloc>>
|   |   |     |-ConstantExpr 0x12a029810 <col:8> 'int'
|   |   |     | `-CharacterLiteral 0x12a0297f8 <col:8> 'int' 80
|   |   |     `-CaseStmt 0x12a029880 <line:54:3, <invalid sloc>>
|   |   |       |-ConstantExpr 0x12a029868 <col:8> 'int'
|   |   |       | `-CharacterLiteral 0x12a029850 <col:8> 'int' 83
|   |   |       `-NullStmt 0x12a029908 <<invalid sloc>>
|   |   `-BreakStmt 0x12a029910 <line:60:5>
|   |-IfStmt 0x12a029a40 <line:63:3, line:67:3>
|   | |-RecoveryExpr 0x12a0299b0 <line:63:7> '_Bool' contains-errors
|   | `-CompoundStmt 0x12a029a30 <line:64:3, line:67:3>
|   `-ReturnStmt 0x12a029a80 <line:68:3, col:10>
|     `-IntegerLiteral 0x12a029a60 <col:10> 'int' 0
|-FunctionDecl 0x12a0268a0 <line:9:5> col:5 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x12a0269a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x12a026948 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x12a026a10 <col:5> Implicit printf 1 2
`-FunctionDecl 0x12a027238 <line:14:5> col:5 implicit used exit 'void (int) __attribute__((noreturn))' extern
  |-ParmVarDecl 0x12a027338 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12a0272e0 <<invalid sloc>> Implicit 869
