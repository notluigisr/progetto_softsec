TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x13000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13000bc00 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x13000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x13000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x13000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x13000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x13000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x13000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x13000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x13000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x13000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x13000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x13000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x13000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x13000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-FunctionDecl 0x130026740 <dataset_diviso_filec/func8724_nonvuln.c:1:1, line:38:1> line:1:6 mpol_shared_policy_init 'void (struct shared_policy *, struct mempolicy *)'
| |-ParmVarDecl 0x13000e248 <col:30, col:52> col:52 used sp 'struct shared_policy *'
| |-ParmVarDecl 0x130026628 <col:56, col:74> col:74 used mpol 'struct mempolicy *'
| `-CompoundStmt 0x13002b300 <line:2:1, line:38:1>
|   |-DeclStmt 0x1300268c0 <line:3:2, col:9>
|   | `-VarDecl 0x130026858 <col:2, col:6> col:6 used ret 'int'
|   |-BinaryOperator 0x1300269a8 <line:5:2, col:13> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x130026910 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1300268d8 <col:2> 'struct shared_policy *' lvalue ParmVar 0x13000e248 'sp' 'struct shared_policy *'
|   | `-RecoveryExpr 0x130026988 <col:13> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x130026b78 <line:6:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x130026ae0 <col:2> 'int ()' Function 0x130026a28 'spin_lock_init' 'int ()'
|   | `-UnaryOperator 0x130026b60 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x130026b38 <col:18, col:22> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x130026b00 <col:18> 'struct shared_policy *' lvalue ParmVar 0x13000e248 'sp' 'struct shared_policy *'
|   `-IfStmt 0x13002b2e0 <line:8:2, line:37:2>
|     |-ImplicitCastExpr 0x130026bc0 <line:8:6> 'struct mempolicy *' <LValueToRValue>
|     | `-DeclRefExpr 0x130026ba0 <col:6> 'struct mempolicy *' lvalue ParmVar 0x130026628 'mpol' 'struct mempolicy *'
|     `-CompoundStmt 0x13002b260 <col:12, line:37:2>
|       |-DeclStmt 0x130026d58 <line:9:3, col:29>
|       | |-RecordDecl 0x130026bd8 <col:3, col:10> col:10 struct vm_area_struct
|       | `-VarDecl 0x130026cd8 <col:3, col:25> col:25 referenced invalid pvma 'struct vm_area_struct'
|       |-DeclStmt 0x130026e60 <line:10:3, col:24>
|       | `-VarDecl 0x130026df8 <col:3, col:21> col:21 used new 'struct mempolicy *'
|       |-CallExpr 0x130026fd8 <line:11:3, col:27> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x130026f58 <col:3> 'int ()' Function 0x130026ea0 'NODEMASK_SCRATCH' 'int ()'
|       | `-RecoveryExpr 0x130026fb8 <col:20> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x130027100 <line:13:3, line:14:9>
|       | |-UnaryOperator 0x130027080 <line:13:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x130027068 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|       | |   `-RecoveryExpr 0x130027048 <col:8> '<dependent type>' contains-errors lvalue
|       | `-GotoStmt 0x1300270e8 <line:14:4, col:9> 'put_mpol' 0x130027098
|       |-BinaryOperator 0x1300273f8 <line:16:3, col:65> 'struct mempolicy *' contains-errors '='
|       | |-DeclRefExpr 0x130027120 <col:3> 'struct mempolicy *' lvalue Var 0x130026df8 'new' 'struct mempolicy *'
|       | `-CallExpr 0x1300273c0 <col:9, col:65> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x130027220 <col:9> 'int ()' Function 0x130027168 'mpol_new' 'int ()'
|       |   |-RecoveryExpr 0x130027278 <col:18, col:24> '<dependent type>' contains-errors lvalue
|       |   | `-DeclRefExpr 0x130027240 <col:18> 'struct mempolicy *' lvalue ParmVar 0x130026628 'mpol' 'struct mempolicy *'
|       |   |-RecoveryExpr 0x1300272d8 <col:30, col:36> '<dependent type>' contains-errors lvalue
|       |   | `-DeclRefExpr 0x1300272a0 <col:30> 'struct mempolicy *' lvalue ParmVar 0x130026628 'mpol' 'struct mempolicy *'
|       |   `-UnaryOperator 0x1300273a8 <col:43, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |     `-CXXDependentScopeMemberExpr 0x130027360 <col:44, col:52> '<dependent type>' contains-errors lvalue .user_nodemask
|       |       `-RecoveryExpr 0x130027338 <col:44, col:50> '<dependent type>' contains-errors lvalue
|       |         `-DeclRefExpr 0x130027300 <col:44> 'struct mempolicy *' lvalue ParmVar 0x130026628 'mpol' 'struct mempolicy *'
|       |-IfStmt 0x130029268 <line:17:3, line:18:9>
|       | |-CallExpr 0x130027588 <line:17:7, col:17> 'int'
|       | | |-ImplicitCastExpr 0x130027570 <col:7> 'int (*)()' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x1300274f8 <col:7> 'int ()' Function 0x130027440 'IS_ERR' 'int ()'
|       | | `-ImplicitCastExpr 0x1300275b0 <col:14> 'struct mempolicy *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x130027518 <col:14> 'struct mempolicy *' lvalue Var 0x130026df8 'new' 'struct mempolicy *'
|       | `-GotoStmt 0x130029250 <line:18:4, col:9> 'free_scratch' 0x130029200
|       |-CallExpr 0x1300293e8 <line:20:3, col:20> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x130029368 <col:3> 'int ()' Function 0x1300292b0 'task_lock' 'int ()'
|       | `-RecoveryExpr 0x1300293c8 <col:13> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x1300296d8 <line:21:3, col:63> 'int' contains-errors '='
|       | |-DeclRefExpr 0x130029410 <col:3> 'int' lvalue Var 0x130026858 'ret' 'int'
|       | `-CallExpr 0x1300296a0 <col:9, col:63> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x130029510 <col:9> 'int ()' Function 0x130029458 'mpol_set_nodemask' 'int ()'
|       |   |-DeclRefExpr 0x130029530 <col:27> 'struct mempolicy *' lvalue Var 0x130026df8 'new' 'struct mempolicy *'
|       |   |-UnaryOperator 0x1300295f8 <col:32, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |   | `-CXXDependentScopeMemberExpr 0x1300295b0 <col:33, col:41> '<dependent type>' contains-errors lvalue .user_nodemask
|       |   |   `-RecoveryExpr 0x130029588 <col:33, col:39> '<dependent type>' contains-errors lvalue
|       |   |     `-DeclRefExpr 0x130029550 <col:33> 'struct mempolicy *' lvalue ParmVar 0x130026628 'mpol' 'struct mempolicy *'
|       |   `-RecoveryExpr 0x130029680 <col:56> '<dependent type>' contains-errors lvalue
|       |-CallExpr 0x130029858 <line:22:3, col:22> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x1300297d8 <col:3> 'int ()' Function 0x130029720 'task_unlock' 'int ()'
|       | `-RecoveryExpr 0x130029838 <col:15> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x130029920 <line:23:3, line:24:9>
|       | |-ImplicitCastExpr 0x1300298a0 <line:23:7> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x130029880 <col:7> 'int' lvalue Var 0x130026858 'ret' 'int'
|       | `-GotoStmt 0x130029908 <line:24:4, col:9> 'put_new' 0x1300298b8
|       |-CallExpr 0x130029ea8 <line:29:3, col:40> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x130029e10 <col:3> 'int ()' Function 0x130029d58 'mpol_set_shared_policy' 'int ()'
|       | |-DeclRefExpr 0x130029e30 <col:26> 'struct shared_policy *' lvalue ParmVar 0x13000e248 'sp' 'struct shared_policy *'
|       | |-UnaryOperator 0x130029e70 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | | `-RecoveryExpr 0x130029e50 <col:31> '<dependent type>' contains-errors lvalue
|       | `-DeclRefExpr 0x130029e88 <col:37> 'struct mempolicy *' lvalue Var 0x130026df8 'new' 'struct mempolicy *'
|       |-LabelStmt 0x13002a058 <line:31:1, line:32:15> 'put_new'
|       | `-CallExpr 0x13002a018 <col:3, col:15> 'int'
|       |   |-ImplicitCastExpr 0x13002a000 <col:3> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x130029fc0 <col:3> 'int ()' Function 0x130029f08 'mpol_put' 'int ()'
|       |   `-ImplicitCastExpr 0x13002a040 <col:12> 'struct mempolicy *' <LValueToRValue>
|       |     `-DeclRefExpr 0x130029fe0 <col:12> 'struct mempolicy *' lvalue Var 0x130026df8 'new' 'struct mempolicy *'
|       |-LabelStmt 0x13002a180 <line:33:1, col:13> 'free_scratch'
|       | `-NullStmt 0x13002a178 <col:13>
|       `-LabelStmt 0x13002b240 <line:35:1, line:36:16> 'put_mpol'
|         `-CallExpr 0x13002b200 <col:3, col:16> 'int'
|           |-ImplicitCastExpr 0x13002a1e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x13002a1a0 <col:3> 'int ()' Function 0x130029f08 'mpol_put' 'int ()'
|           `-ImplicitCastExpr 0x13002b228 <col:12> 'struct mempolicy *' <LValueToRValue>
|             `-DeclRefExpr 0x13002a1c0 <col:12> 'struct mempolicy *' lvalue ParmVar 0x130026628 'mpol' 'struct mempolicy *'
`-FunctionDecl 0x130029988 <line:27:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x130029a88 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x130029af0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x130029b58 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x130029a30 <<invalid sloc>> Implicit 900
