TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x126926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x126926800 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x126926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x126926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x126926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x126926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x126926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x126926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x126926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x126926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x126926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x126926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x126926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x126926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x126926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x126926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x126927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1269270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x126927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x126927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1269271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x126927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1269272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x126927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x126927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1269273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x126927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1269274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x126927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x126927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1269275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x126927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1269276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x126927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x126927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x126928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x126928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1269280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x126928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1269281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x126928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x126928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1269282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x126928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1269283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x126928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x126928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1269284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x126928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1269285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x126928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x126928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1269286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x126928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x1269287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1269287b0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x126928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1269287b0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
`-FunctionDecl 0x126928ba8 <dataset_diviso_filec/func23572_vuln.c:1:1, line:64:1> line:1:12 invalid spl_array_has_dimension_ex 'int (int, int *, int *, int)' static
  |-ParmVarDecl 0x1269288d8 <col:39, col:43> col:43 used check_inherited 'int'
  |-ParmVarDecl 0x1269289a8 <col:60, col:66> col:66 invalid object 'int *'
  |-ParmVarDecl 0x126928a28 <col:74, col:80> col:80 invalid offset 'int *'
  |-ParmVarDecl 0x126928aa8 <col:88, col:92> col:92 used check_empty 'int'
  `-CompoundStmt 0x126942ec8 <line:2:1, line:64:1>
    |-DeclStmt 0x126928d20 <line:4:2, col:12>
    | `-VarDecl 0x126928cb8 <col:2, col:7> col:7 used index 'long'
    |-IfStmt 0x127009cf0 <line:7:2, line:19:2>
    | |-BinaryOperator 0x126928eb8 <line:7:6, col:33> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x126928db0 <col:6> 'int' lvalue ParmVar 0x1269288d8 'check_inherited' 'int'
    | | `-CXXDependentScopeMemberExpr 0x126928e70 <col:25, col:33> '<dependent type>' contains-errors lvalue ->fptr_offset_has
    | |   `-RecoveryExpr 0x126928e50 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x127009cb0 <col:50, line:19:2>
    |   |-CallExpr 0x1270092f8 <line:8:3, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1270092b8 <col:3> 'int ()' Function 0x127009200 'SEPARATE_ARG_IF_REF' 'int ()'
    |   | `-RecoveryExpr 0x1270092d8 <col:23> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x1270097d8 <line:9:3, col:106> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127009400 <col:3> 'int ()' Function 0x127009348 'zend_call_method_with_1_params' 'int ()'
    |   | |-UnaryOperator 0x127009440 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x127009420 <col:35> '<dependent type>' contains-errors lvalue
    |   | |-CallExpr 0x127009578 <col:43, col:59> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x127009538 <col:43> 'int ()' Function 0x127009480 'Z_OBJCE_P' 'int ()'
    |   | | `-RecoveryExpr 0x127009558 <col:53> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x127009788 <col:62, col:71> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x127009740 <col:63, col:71> '<dependent type>' contains-errors lvalue ->fptr_offset_has
    |   | |   `-RecoveryExpr 0x127009720 <col:63> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x127009660 <col:88> 'char[4]' lvalue "STR"
    |   | |-UnaryOperator 0x1270097c0 <col:95, col:96> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x1270097a0 <col:96> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1270096b0 <col:100> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x127009960 <line:10:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127009908 <col:3> 'int ()' Function 0x127009850 'zval_ptr_dtor' 'int ()'
    |   | `-UnaryOperator 0x127009948 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x127009928 <col:18> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x127009bf0 <line:11:3, line:14:3>
    |   | |-BinaryOperator 0x127009b68 <line:11:7, col:28> 'int' contains-errors '&&'
    |   | | |-RecoveryExpr 0x127009b00 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x127009b40 <col:13, col:28> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x127009a80 <col:13> 'int ()' Function 0x1270099c8 'zend_is_true' 'int ()'
    |   | |   `-RecoveryExpr 0x127009b20 <col:26> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x127009bd8 <col:31, line:14:3>
    |   |   `-ReturnStmt 0x127009bc8 <line:13:4, col:11>
    |   |     `-IntegerLiteral 0x127009ba8 <col:11> 'int' 1
    |   |-IfStmt 0x127009c60 <line:15:3, line:17:3>
    |   | |-RecoveryExpr 0x127009c10 <line:15:7> '_Bool' contains-errors
    |   | `-CompoundStmt 0x127009c50 <col:11, line:17:3>
    |   `-ReturnStmt 0x127009ca0 <line:18:3, col:10>
    |     `-IntegerLiteral 0x127009c80 <col:10> 'int' 0
    |-SwitchStmt 0x127009e58 <line:21:2, line:62:2>
    | |-CallExpr 0x127009e30 <line:21:9, col:24> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x127009df0 <col:9> 'int ()' Function 0x127009d38 'Z_TYPE_P' 'int ()'
    | | `-RecoveryExpr 0x127009e10 <col:18> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x126942e68 <col:27, line:62:2>
    |   |-CompoundStmt 0x1269424a8 <line:23:4, line:35:4>
    |   | `-IfStmt 0x126942488 <line:25:5, line:34:5>
    |   |   |-RecoveryExpr 0x126942188 <line:25:9, col:93> '_Bool' contains-errors
    |   |   `-CompoundStmt 0x126942470 <col:102, line:34:5>
    |   |     `-SwitchStmt 0x1269421e0 <line:26:6, line:33:6>
    |   |       |-ImplicitCastExpr 0x1269421c8 <line:26:14> 'int' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x1269421a8 <col:14> 'int' lvalue ParmVar 0x126928aa8 'check_empty' 'int'
    |   |       `-CompoundStmt 0x126942448 <col:27, line:33:6>
    |   |         |-CaseStmt 0x126942240 <line:27:7, <invalid sloc>>
    |   |         | |-ConstantExpr 0x126942228 <col:12> 'int'
    |   |         | | `-IntegerLiteral 0x126942208 <col:12> 'int' 0
    |   |         | `-NullStmt 0x126942368 <<invalid sloc>>
    |   |         |-CaseStmt 0x1269423a8 <line:29:7, line:30:15>
    |   |         | |-ConstantExpr 0x126942390 <line:29:12> 'int'
    |   |         | | `-IntegerLiteral 0x126942370 <col:12> 'int' 2
    |   |         | `-ReturnStmt 0x1269423f0 <line:30:8, col:15>
    |   |         |   `-IntegerLiteral 0x1269423d0 <col:15> 'int' 1
    |   |         `-DefaultStmt 0x126942428 <line:31:7, col:14>
    |   |           `-NullStmt 0x126942420 <col:14>
    |   |-ReturnStmt 0x1269424e0 <line:36:4, col:11>
    |   | `-IntegerLiteral 0x1269424c0 <col:11> 'int' 0
    |   |-CompoundStmt 0x126942cf8 <line:41:4, line:59:4>
    |   | |-IfStmt 0x126942938 <line:43:5, line:47:5> has_else
    |   | | |-RecoveryExpr 0x126942598 <line:43:9, col:25> '_Bool' contains-errors
    |   | | |-CompoundStmt 0x126942780 <col:36, line:45:5>
    |   | | | `-BinaryOperator 0x126942760 <line:44:6, col:35> 'long' contains-errors '='
    |   | | |   |-DeclRefExpr 0x1269425b8 <col:6> 'long' lvalue Var 0x126928cb8 'index' 'long'
    |   | | |   `-CStyleCastExpr 0x126942738 <col:14, col:35> 'long' contains-errors <Dependent>
    |   | | |     `-CallExpr 0x1269426f8 <col:20, col:35> '<dependent type>' contains-errors
    |   | | |       |-DeclRefExpr 0x1269426b8 <col:20> 'int ()' Function 0x126942600 'Z_DVAL_P' 'int ()'
    |   | | |       `-RecoveryExpr 0x1269426d8 <col:29> '<dependent type>' contains-errors lvalue
    |   | | `-CompoundStmt 0x126942920 <line:45:12, line:47:5>
    |   | |   `-BinaryOperator 0x126942900 <line:46:6, col:29> 'long' contains-errors '='
    |   | |     |-DeclRefExpr 0x126942798 <col:6> 'long' lvalue Var 0x126928cb8 'index' 'long'
    |   | |     `-CallExpr 0x1269428d8 <col:14, col:29> '<dependent type>' contains-errors
    |   | |       |-DeclRefExpr 0x126942898 <col:14> 'int ()' Function 0x1269427e0 'Z_LVAL_P' 'int ()'
    |   | |       `-RecoveryExpr 0x1269428b8 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-IfStmt 0x126942ca8 <line:48:5, line:57:5>
    |   | | |-RecoveryExpr 0x126942a88 <line:48:9, col:59> '_Bool' contains-errors
    |   | | `-CompoundStmt 0x126942c90 <col:68, line:57:5>
    |   | |   `-SwitchStmt 0x126942ae0 <line:49:6, line:56:6>
    |   | |     |-ImplicitCastExpr 0x126942ac8 <line:49:14> 'int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x126942aa8 <col:14> 'int' lvalue ParmVar 0x126928aa8 'check_empty' 'int'
    |   | |     `-CompoundStmt 0x126942c68 <col:27, line:56:6>
    |   | |       |-CaseStmt 0x126942b40 <line:50:7, <invalid sloc>>
    |   | |       | |-ConstantExpr 0x126942b28 <col:12> 'int'
    |   | |       | | `-IntegerLiteral 0x126942b08 <col:12> 'int' 0
    |   | |       | `-NullStmt 0x126942b88 <<invalid sloc>>
    |   | |       |-CaseStmt 0x126942bc8 <line:52:7, line:53:15>
    |   | |       | |-ConstantExpr 0x126942bb0 <line:52:12> 'int'
    |   | |       | | `-IntegerLiteral 0x126942b90 <col:12> 'int' 2
    |   | |       | `-ReturnStmt 0x126942c10 <line:53:8, col:15>
    |   | |       |   `-IntegerLiteral 0x126942bf0 <col:15> 'int' 1
    |   | |       `-DefaultStmt 0x126942c48 <line:54:7, col:14>
    |   | |         `-NullStmt 0x126942c40 <col:14>
    |   | `-ReturnStmt 0x126942ce8 <line:58:5, col:12>
    |   |   `-IntegerLiteral 0x126942cc8 <col:12> 'int' 0
    |   `-DefaultStmt 0x126942e48 <line:60:3, col:10>
    |     `-NullStmt 0x126942e40 <col:10>
    `-ReturnStmt 0x126942eb8 <line:63:2, col:9>
      `-IntegerLiteral 0x126942e98 <col:9> 'int' 0
