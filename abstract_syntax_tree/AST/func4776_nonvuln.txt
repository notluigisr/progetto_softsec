TranslationUnitDecl 0x144055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1440564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144055bd0 '__int128'
|-TypedefDecl 0x144056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144055bf0 'unsigned __int128'
|-TypedefDecl 0x144126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x144126800 'struct __NSConstantString_tag'
|   `-Record 0x144056580 '__NSConstantString_tag'
|-TypedefDecl 0x144126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144055d90 '__SVInt8_t'
|-TypedefDecl 0x144126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144055db0 '__SVInt16_t'
|-TypedefDecl 0x144126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144055dd0 '__SVInt32_t'
|-TypedefDecl 0x144126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144055df0 '__SVInt64_t'
|-TypedefDecl 0x144126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144055e10 '__SVUint8_t'
|-TypedefDecl 0x144126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144055e30 '__SVUint16_t'
|-TypedefDecl 0x144126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144055e50 '__SVUint32_t'
|-TypedefDecl 0x144126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144055e70 '__SVUint64_t'
|-TypedefDecl 0x144126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144055e90 '__SVFloat16_t'
|-TypedefDecl 0x144126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144055eb0 '__SVFloat32_t'
|-TypedefDecl 0x144126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144055ed0 '__SVFloat64_t'
|-TypedefDecl 0x144126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x144126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x144126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x144127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1441270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x144127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x144127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1441271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x144127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1441272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x144127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x144127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1441273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x144127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1441274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1440560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x144127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1440560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x144127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1440560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1441275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x144127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1441276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x144127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x144127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x144128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1440561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x144128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1440561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1441280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1440561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x144128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1441281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144056230 '__clang_svint16x4_t'
|-TypedefDecl 0x144128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144056250 '__clang_svint32x4_t'
|-TypedefDecl 0x144128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1441282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x144128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1440562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1441283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1440562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x144128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1440562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x144128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1441284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x144128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1441285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x144128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144056390 '__SVBool_t'
|-TypedefDecl 0x144128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1440563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1441286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1440563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x144128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1440563f0 '__SVCount_t'
|-TypedefDecl 0x1441287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1441287b0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
|-TypedefDecl 0x144128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1441287b0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
`-FunctionDecl 0x1441289f8 <dataset_diviso_filec/func4776_nonvuln.c:1:1, line:59:1> line:1:12 invalid lua_ap_regex 'int (int *)' static
  |-ParmVarDecl 0x144128928 <col:25, col:36> col:36 invalid L 'int *'
  `-CompoundStmt 0x145809bc0 <line:2:1, line:59:1>
    |-DeclStmt 0x144128c60 <line:4:5, line:6:14>
    | |-VarDecl 0x144128ad8 <line:4:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x144128b58 <col:5, line:5:9> col:9 used rv 'int'
    | `-VarDecl 0x144128bd8 <line:4:5, line:6:9> col:9 used flags 'int'
    |-DeclStmt 0x144128d90 <line:7:5, line:8:12>
    | |-VarDecl 0x144128c90 <line:7:5, col:21> col:21 used pattern 'const char *'
    | `-VarDecl 0x144128d10 <col:5, line:8:6> col:6 used source 'const char *'
    |-DeclStmt 0x144128e28 <line:9:5, col:24>
    | `-VarDecl 0x144128dc0 <col:5, col:21> col:21 used err 'char *'
    |-CallExpr 0x144808870 <line:13:5, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x144128fa0 <col:5> 'int ()' Function 0x144128ee8 'luaL_checktype' 'int ()'
    | |-RecoveryExpr 0x144128fc0 <col:20> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x144128fe0 <col:23> 'int' 1
    | `-RecoveryExpr 0x144808850 <col:26> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x144808978 <line:14:5, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1448088a8 <col:5> 'int ()' Function 0x144128ee8 'luaL_checktype' 'int ()'
    | |-RecoveryExpr 0x1448088c8 <col:20> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x1448088e8 <col:23> 'int' 2
    | `-RecoveryExpr 0x144808958 <col:26> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x144808a80 <line:15:5, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1448089b0 <col:5> 'int ()' Function 0x144128ee8 'luaL_checktype' 'int ()'
    | |-RecoveryExpr 0x1448089d0 <col:20> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x1448089f0 <col:23> 'int' 3
    | `-RecoveryExpr 0x144808a60 <col:26> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x144808db8 <line:17:5, col:31> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x144808c28 <col:5> 'const char *' lvalue Var 0x144128d10 'source' 'const char *'
    | `-CallExpr 0x144808d88 <col:14, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x144808d28 <col:14> 'int ()' Function 0x144808c70 'lua_tostring' 'int ()'
    |   |-RecoveryExpr 0x144808d48 <col:27> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x144808d68 <col:30> 'int' 2
    |-BinaryOperator 0x144808e88 <line:18:5, col:32> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x144808dd8 <col:5> 'const char *' lvalue Var 0x144128c90 'pattern' 'const char *'
    | `-CallExpr 0x144808e58 <col:15, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x144808df8 <col:15> 'int ()' Function 0x144808c70 'lua_tostring' 'int ()'
    |   |-RecoveryExpr 0x144808e18 <col:28> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x144808e38 <col:31> 'int' 3
    |-BinaryOperator 0x144809060 <line:19:5, col:36> 'int' contains-errors '='
    | |-DeclRefExpr 0x144808ea8 <col:5> 'int' lvalue Var 0x144128bd8 'flags' 'int'
    | `-CallExpr 0x144809028 <col:13, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x144808fa8 <col:13> 'int ()' Function 0x144808ef0 'luaL_optinteger' 'int ()'
    |   |-RecoveryExpr 0x144808fc8 <col:29> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x144808fe8 <col:32> 'int' 4
    |   `-IntegerLiteral 0x144809008 <col:35> 'int' 0
    |-BinaryOperator 0x1448092d8 <line:21:5, col:43> 'int' contains-errors '='
    | |-DeclRefExpr 0x144809080 <col:5> 'int' lvalue Var 0x144128b58 'rv' 'int'
    | `-CallExpr 0x1448092a0 <col:10, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x144809180 <col:10> 'int ()' Function 0x1448090c8 'ap_regcomp' 'int ()'
    |   |-UnaryOperator 0x144809288 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x144809268 <col:22> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x1448091d0 <col:29> 'const char *' lvalue Var 0x144128c90 'pattern' 'const char *'
    |   `-DeclRefExpr 0x1448091f0 <col:38> 'int' lvalue Var 0x144128bd8 'flags' 'int'
    |-IfStmt 0x145808bf8 <line:22:5, line:28:5>
    | |-ImplicitCastExpr 0x144809318 <line:22:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1448092f8 <col:9> 'int' lvalue Var 0x144128b58 'rv' 'int'
    | `-CompoundStmt 0x145808bc0 <col:13, line:28:5>
    |   |-CallExpr 0x144809470 <line:23:9, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x144809410 <col:9> 'int ()' Function 0x144809358 'lua_pushboolean' 'int ()'
    |   | |-RecoveryExpr 0x144809430 <col:25> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x144809450 <col:28> 'int' 0
    |   |-BinaryOperator 0x144809728 <line:24:9, col:38> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x1448094a0 <col:9> 'char *' lvalue Var 0x144128dc0 'err' 'char *'
    |   | `-CallExpr 0x1448096f8 <col:15, col:38> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1448095a0 <col:15> 'int ()' Function 0x1448094e8 'apr_palloc' 'int ()'
    |   |   |-CXXDependentScopeMemberExpr 0x1448096b0 <col:26, col:29> '<dependent type>' contains-errors lvalue ->pool
    |   |   | `-RecoveryExpr 0x144809690 <col:26> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x144809620 <col:35> 'int' 256
    |   |-CallExpr 0x1458089e0 <line:25:9, col:41> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1458088b8 <col:9> 'int ()' Function 0x145808800 'ap_regerror' 'int ()'
    |   | |-DeclRefExpr 0x1458088d8 <col:21> 'int' lvalue Var 0x144128b58 'rv' 'int'
    |   | |-UnaryOperator 0x1458089c8 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x1458089a8 <col:26> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x145808928 <col:33> 'char *' lvalue Var 0x144128dc0 'err' 'char *'
    |   | `-IntegerLiteral 0x145808948 <col:38> 'int' 256
    |   |-CallExpr 0x145808b60 <line:26:9, col:30> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x145808b00 <col:9> 'int ()' Function 0x145808a48 'lua_pushstring' 'int ()'
    |   | |-RecoveryExpr 0x145808b20 <col:24> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x145808b40 <col:27> 'char *' lvalue Var 0x144128dc0 'err' 'char *'
    |   `-ReturnStmt 0x145808bb0 <line:27:9, col:16>
    |     `-IntegerLiteral 0x145808b90 <col:16> 'int' 2
    |-IfStmt 0x145808fb8 <line:30:5, line:38:5>
    | |-RecoveryExpr 0x145808c18 <line:30:9, col:25> '_Bool' contains-errors
    | `-CompoundStmt 0x145808f90 <col:47, line:38:5>
    |   |-CallExpr 0x145808c98 <line:31:9, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x145808c38 <col:9> 'int ()' Function 0x144809358 'lua_pushboolean' 'int ()'
    |   | |-RecoveryExpr 0x145808c58 <col:25> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x145808c78 <col:28> 'int' 0
    |   |-CallExpr 0x145808f30 <line:36:9, col:30> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x145808ed0 <col:9> 'int ()' Function 0x145808a48 'lua_pushstring' 'int ()'
    |   | |-RecoveryExpr 0x145808ef0 <col:24> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x145808f10 <col:27> 'char *' lvalue Var 0x144128dc0 'err' 'char *'
    |   `-ReturnStmt 0x145808f80 <line:37:9, col:16>
    |     `-IntegerLiteral 0x145808f60 <col:16> 'int' 2
    |-IfStmt 0x145809258 <line:41:5, line:44:5>
    | |-RecoveryExpr 0x145809158 <line:41:9, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x145809238 <col:31, line:44:5>
    |   |-CallExpr 0x1458091d8 <line:42:9, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x145809178 <col:9> 'int ()' Function 0x144809358 'lua_pushboolean' 'int ()'
    |   | |-RecoveryExpr 0x145809198 <col:25> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x1458091b8 <col:28> 'int' 0
    |   `-ReturnStmt 0x145809228 <line:43:9, col:16>
    |     `-IntegerLiteral 0x145809208 <col:16> 'int' 1
    |-CallExpr 0x145809398 <line:46:5, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145809358 <col:5> 'int ()' Function 0x1458092a0 'lua_newtable' 'int ()'
    | `-RecoveryExpr 0x145809378 <col:18> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x145809bb0 <line:58:5, col:12>
      `-IntegerLiteral 0x145809b90 <col:12> 'int' 1
