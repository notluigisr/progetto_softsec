TranslationUnitDecl 0x144017008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x144017eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1440175d0 '__int128'
|-TypedefDecl 0x144017f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1440175f0 'unsigned __int128'
|-TypedefDecl 0x1440cc830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1440cc600 'struct __NSConstantString_tag'
|   `-Record 0x144017f80 '__NSConstantString_tag'
|-TypedefDecl 0x1440cc898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144017790 '__SVInt8_t'
|-TypedefDecl 0x1440cc900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1440177b0 '__SVInt16_t'
|-TypedefDecl 0x1440cc968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1440177d0 '__SVInt32_t'
|-TypedefDecl 0x1440cc9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1440177f0 '__SVInt64_t'
|-TypedefDecl 0x1440cca38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144017810 '__SVUint8_t'
|-TypedefDecl 0x1440ccaa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144017830 '__SVUint16_t'
|-TypedefDecl 0x1440ccb08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144017850 '__SVUint32_t'
|-TypedefDecl 0x1440ccb70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144017870 '__SVUint64_t'
|-TypedefDecl 0x1440ccbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144017890 '__SVFloat16_t'
|-TypedefDecl 0x1440ccc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1440178b0 '__SVFloat32_t'
|-TypedefDecl 0x1440ccca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1440178d0 '__SVFloat64_t'
|-TypedefDecl 0x1440ccd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1440178f0 '__SVBfloat16_t'
|-TypedefDecl 0x1440ccd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144017910 '__clang_svint8x2_t'
|-TypedefDecl 0x1440ccde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144017930 '__clang_svint16x2_t'
|-TypedefDecl 0x1440cce48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144017950 '__clang_svint32x2_t'
|-TypedefDecl 0x1440cceb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144017970 '__clang_svint64x2_t'
|-TypedefDecl 0x1440ccf18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144017990 '__clang_svuint8x2_t'
|-TypedefDecl 0x1440ccf80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1440179b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1440ccfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1440179d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1440cd050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1440179f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1440cd0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144017a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1440cd120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144017a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1440cd188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144017a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1440cd1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144017a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1440cd258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144017a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1440cd2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x144017ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x1440cd328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x144017ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x1440cd390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x144017af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1440cd3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144017b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1440cd460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144017b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1440cd4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144017b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1440cd530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144017b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1440cd598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144017b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1440cd600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x144017bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1440cd668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x144017bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1440cd6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x144017bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1440cd738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144017c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1440cd7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144017c30 '__clang_svint16x4_t'
|-TypedefDecl 0x1440cd808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144017c50 '__clang_svint32x4_t'
|-TypedefDecl 0x1440cd870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144017c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1440cd8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144017c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1440cd940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x144017cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1440cd9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x144017cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1440cda10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x144017cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1440cda78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144017d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1440cdae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144017d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1440cdb48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144017d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1440cdbb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144017d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1440cdc18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144017d90 '__SVBool_t'
|-TypedefDecl 0x1440cdc80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x144017db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1440cdce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x144017dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1440cdd50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x144017df0 '__SVCount_t'
|-TypedefDecl 0x1440cddf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1440cddb0 'char *'
|   `-BuiltinType 0x1440170b0 'char'
|-TypedefDecl 0x1440cde68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1440cddb0 'char *'
|   `-BuiltinType 0x1440170b0 'char'
|-FunctionDecl 0x1440cdfa8 <dataset_diviso_filec/func24182_vuln.c:1:1, line:41:1> line:1:14 get_private_subtags 'char *(const char *)' static
| |-ParmVarDecl 0x1440cded8 <col:34, col:46> col:46 used loc_name 'const char *'
| `-CompoundStmt 0x1440e6e80 <line:2:1, line:41:1>
|   |-DeclStmt 0x1440ce170 <line:3:2, col:21>
|   | `-VarDecl 0x1440ce0b8 <col:2, col:17> col:9 used result 'char *' cinit
|   |   `-RecoveryExpr 0x1440ce150 <col:17> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1440ce228 <line:4:2, col:23>
|   | `-VarDecl 0x1440ce1a0 <col:2, col:22> col:7 used singletonPos 'int' cinit
|   |   `-IntegerLiteral 0x1440ce208 <col:22> 'int' 0
|   |-DeclStmt 0x1440ce2e0 <line:5:2, col:13>
|   | `-VarDecl 0x1440ce258 <col:2, col:12> col:7 used len 'int' cinit
|   |   `-IntegerLiteral 0x1440ce2c0 <col:12> 'int' 0
|   |-DeclStmt 0x1440ce3b0 <line:6:2, col:33>
|   | `-VarDecl 0x1440ce310 <col:2, col:29> col:15 used mod_loc_name 'const char *' cinit
|   |   `-RecoveryExpr 0x1440ce390 <col:29> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1440e6e18 <line:8:2, line:38:2>
|   | |-BinaryOperator 0x143840978 <line:8:6, col:44> 'int' '&&'
|   | | |-ImplicitCastExpr 0x143840960 <col:6> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1440ce3c8 <col:6> 'const char *' lvalue ParmVar 0x1440cded8 'loc_name' 'const char *'
|   | | `-ParenExpr 0x143840940 <col:18, col:44> 'int'
|   | |   `-BinaryOperator 0x143840920 <col:19, col:42> 'int' '='
|   | |     |-DeclRefExpr 0x1440ce3e8 <col:19> 'int' lvalue Var 0x1440ce258 'len' 'int'
|   | |     `-BinaryOperator 0x143840900 <col:25, col:42> 'int' '>'
|   | |       |-CallExpr 0x143840888 <col:25, col:40> 'unsigned long'
|   | |       | |-ImplicitCastExpr 0x143840870 <col:25> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |       | | `-DeclRefExpr 0x1438407e0 <col:25> 'unsigned long (const char *)' Function 0x143840670 'strlen' 'unsigned long (const char *)'
|   | |       | `-ImplicitCastExpr 0x1438408b0 <col:32> 'const char *' <LValueToRValue>
|   | |       |   `-DeclRefExpr 0x143840800 <col:32> 'const char *' lvalue ParmVar 0x1440cded8 'loc_name' 'const char *'
|   | |       `-ImplicitCastExpr 0x1438408e8 <col:42> 'unsigned long' <IntegralCast>
|   | |         `-IntegerLiteral 0x1438408c8 <col:42> 'int' 0
|   | `-CompoundStmt 0x1440e6df0 <col:47, line:38:2>
|   |   |-BinaryOperator 0x1438409f0 <line:9:3, col:18> 'const char *' contains-errors '='
|   |   | |-DeclRefExpr 0x143840998 <col:3> 'const char *' contains-errors lvalue Var 0x1440ce310 'mod_loc_name' 'const char *'
|   |   | `-ImplicitCastExpr 0x1438409d8 <col:18> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1438409b8 <col:18> 'const char *' lvalue ParmVar 0x1440cded8 'loc_name' 'const char *'
|   |   |-BinaryOperator 0x143840af8 <line:10:3, col:30> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x143840a10 <col:3> 'int' lvalue Var 0x1440ce258 'len' 'int'
|   |   | `-ImplicitCastExpr 0x143840ae0 <col:11, col:30> 'int' contains-errors <IntegralCast>
|   |   |   `-CallExpr 0x143840aa0 <col:11, col:30> 'unsigned long' contains-errors
|   |   |     |-ImplicitCastExpr 0x143840a88 <col:11> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x143840a30 <col:11> 'unsigned long (const char *)' Function 0x143840670 'strlen' 'unsigned long (const char *)'
|   |   |     `-ImplicitCastExpr 0x143840ac8 <col:18> 'const char *' contains-errors <LValueToRValue>
|   |   |       `-DeclRefExpr 0x143840a50 <col:18> 'const char *' contains-errors lvalue Var 0x1440ce310 'mod_loc_name' 'const char *'
|   |   `-WhileStmt 0x1440e6dd0 <line:11:3, line:37:3>
|   |     |-BinaryOperator 0x143840d90 <line:11:10, col:60> 'int' contains-errors '!='
|   |     | |-ParenExpr 0x143840d38 <col:10, col:55> 'int' contains-errors
|   |     | | `-BinaryOperator 0x143840d18 <col:11, col:54> 'int' contains-errors '='
|   |     | |   |-DeclRefExpr 0x143840b18 <col:11> 'int' lvalue Var 0x1440ce1a0 'singletonPos' 'int'
|   |     | |   `-CallExpr 0x143840cd8 <col:26, col:54> 'int' contains-errors
|   |     | |     |-ImplicitCastExpr 0x143840cc0 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |     | |     | `-DeclRefExpr 0x143840c50 <col:26> 'int ()' Function 0x143840b98 'getSingletonPos' 'int ()'
|   |     | |     `-ImplicitCastExpr 0x143840d00 <col:42> 'const char *' contains-errors <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x143840c70 <col:42> 'const char *' contains-errors lvalue Var 0x1440ce310 'mod_loc_name' 'const char *'
|   |     | `-UnaryOperator 0x143840d78 <col:59, col:60> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x143840d58 <col:60> 'int' 1
|   |     `-CompoundStmt 0x1440e6db8 <col:62, line:37:3>
|   |       `-IfStmt 0x1440e6d98 <line:13:4, line:35:4>
|   |         |-BinaryOperator 0x143840e20 <line:13:8, col:23> 'int' '!='
|   |         | |-ImplicitCastExpr 0x143840e08 <col:8> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x143840db0 <col:8> 'int' lvalue Var 0x1440ce1a0 'singletonPos' 'int'
|   |         | `-UnaryOperator 0x143840df0 <col:22, col:23> 'int' prefix '-'
|   |         |   `-IntegerLiteral 0x143840dd0 <col:23> 'int' 1
|   |         `-CompoundStmt 0x1440e6d80 <col:25, line:35:4>
|   |           `-IfStmt 0x1440e6d50 <line:14:5, line:34:5> has_else
|   |             |-BinaryOperator 0x1438410e0 <line:14:9, col:82> 'int' contains-errors '||'
|   |             | |-ParenExpr 0x143840f70 <col:9, col:43> 'int' contains-errors
|   |             | | `-BinaryOperator 0x143840f50 <col:10, col:40> 'int' contains-errors '=='
|   |             | |   |-ImplicitCastExpr 0x143840f38 <col:10, col:37> 'int' contains-errors <IntegralCast>
|   |             | |   | `-ImplicitCastExpr 0x143840f20 <col:10, col:37> 'char' contains-errors <LValueToRValue>
|   |             | |   |   `-UnaryOperator 0x143840ef0 <col:10, col:37> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |             | |   |     `-ParenExpr 0x143840ed0 <col:11, col:37> 'const char *' contains-errors
|   |             | |   |       `-BinaryOperator 0x143840eb0 <col:12, col:25> 'const char *' contains-errors '+'
|   |             | |   |         |-ImplicitCastExpr 0x143840e80 <col:12> 'const char *' contains-errors <LValueToRValue>
|   |             | |   |         | `-DeclRefExpr 0x143840e40 <col:12> 'const char *' contains-errors lvalue Var 0x1440ce310 'mod_loc_name' 'const char *'
|   |             | |   |         `-ImplicitCastExpr 0x143840e98 <col:25> 'int' <LValueToRValue>
|   |             | |   |           `-DeclRefExpr 0x143840e60 <col:25> 'int' lvalue Var 0x1440ce1a0 'singletonPos' 'int'
|   |             | |   `-CharacterLiteral 0x143840f08 <col:40> 'int' 120
|   |             | `-ParenExpr 0x1438410c0 <col:48, col:82> 'int' contains-errors
|   |             |   `-BinaryOperator 0x1438410a0 <col:49, col:79> 'int' contains-errors '=='
|   |             |     |-ImplicitCastExpr 0x143841088 <col:49, col:76> 'int' contains-errors <IntegralCast>
|   |             |     | `-ImplicitCastExpr 0x143841070 <col:49, col:76> 'char' contains-errors <LValueToRValue>
|   |             |     |   `-UnaryOperator 0x143841040 <col:49, col:76> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |             |     |     `-ParenExpr 0x143841020 <col:50, col:76> 'const char *' contains-errors
|   |             |     |       `-BinaryOperator 0x143841000 <col:51, col:64> 'const char *' contains-errors '+'
|   |             |     |         |-ImplicitCastExpr 0x143840fd0 <col:51> 'const char *' contains-errors <LValueToRValue>
|   |             |     |         | `-DeclRefExpr 0x143840f90 <col:51> 'const char *' contains-errors lvalue Var 0x1440ce310 'mod_loc_name' 'const char *'
|   |             |     |         `-ImplicitCastExpr 0x143840fe8 <col:64> 'int' <LValueToRValue>
|   |             |     |           `-DeclRefExpr 0x143840fb0 <col:64> 'int' lvalue Var 0x1440ce1a0 'singletonPos' 'int'
|   |             |     `-CharacterLiteral 0x143841058 <col:79> 'int' 88
|   |             |-CompoundStmt 0x1440e69c0 <col:85, line:24:5>
|   |             | |-IfStmt 0x1440e6988 <line:16:6, line:22:6> has_else
|   |             | | |-BinaryOperator 0x1438411b0 <line:16:10, col:31> 'int' '=='
|   |             | | | |-BinaryOperator 0x143841158 <col:10, col:25> 'int' '+'
|   |             | | | | |-ImplicitCastExpr 0x143841140 <col:10> 'int' <LValueToRValue>
|   |             | | | | | `-DeclRefExpr 0x143841100 <col:10> 'int' lvalue Var 0x1440ce1a0 'singletonPos' 'int'
|   |             | | | | `-IntegerLiteral 0x143841120 <col:25> 'int' 2
|   |             | | | `-ImplicitCastExpr 0x143841198 <col:31> 'int' <LValueToRValue>
|   |             | | |   `-DeclRefExpr 0x143841178 <col:31> 'int' lvalue Var 0x1440ce258 'len' 'int'
|   |             | | |-CompoundStmt 0x1438411d0 <col:35, line:18:6>
|   |             | | `-CompoundStmt 0x1440e6970 <line:19:10, line:22:6>
|   |             | |   `-BinaryOperator 0x1440e6950 <line:21:7, col:85> 'char *' contains-errors '='
|   |             | |     |-DeclRefExpr 0x1438411e0 <col:7> 'char *' contains-errors lvalue Var 0x1440ce0b8 'result' 'char *'
|   |             | |     `-ImplicitCastExpr 0x1440e6938 <col:16, col:85> 'char *' contains-errors <IntegralToPointer>
|   |             | |       `-CallExpr 0x1440e6908 <col:16, col:85> 'int' contains-errors
|   |             | |         |-ImplicitCastExpr 0x1440e68f0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |             | |         | `-DeclRefExpr 0x1438412e0 <col:16> 'int ()' Function 0x143841228 'estrndup' 'int ()'
|   |             | |         |-BinaryOperator 0x1438413b0 <col:25, col:53> 'const char *' contains-errors '+'
|   |             | |         | |-BinaryOperator 0x143841370 <col:25, col:40> 'const char *' contains-errors '+'
|   |             | |         | | |-ImplicitCastExpr 0x143841340 <col:25> 'const char *' contains-errors <LValueToRValue>
|   |             | |         | | | `-DeclRefExpr 0x143841300 <col:25> 'const char *' contains-errors lvalue Var 0x1440ce310 'mod_loc_name' 'const char *'
|   |             | |         | | `-ImplicitCastExpr 0x143841358 <col:40> 'int' <LValueToRValue>
|   |             | |         | |   `-DeclRefExpr 0x143841320 <col:40> 'int' lvalue Var 0x1440ce1a0 'singletonPos' 'int'
|   |             | |         | `-IntegerLiteral 0x143841390 <col:53> 'int' 2
|   |             | |         `-ParenExpr 0x1440e68d0 <col:58, col:83> 'int'
|   |             | |           `-BinaryOperator 0x1440e68b0 <col:59, col:81> 'int' '-'
|   |             | |             |-ImplicitCastExpr 0x1440e6898 <col:59> 'int' <LValueToRValue>
|   |             | |             | `-DeclRefExpr 0x1438413d0 <col:59> 'int' lvalue Var 0x1440ce258 'len' 'int'
|   |             | |             `-ParenExpr 0x1440e6878 <col:64, col:81> 'int'
|   |             | |               `-BinaryOperator 0x1440e6858 <col:66, col:80> 'int' '+'
|   |             | |                 |-ImplicitCastExpr 0x1440e6840 <col:66> 'int' <LValueToRValue>
|   |             | |                 | `-DeclRefExpr 0x1440e6800 <col:66> 'int' lvalue Var 0x1440ce1a0 'singletonPos' 'int'
|   |             | |                 `-IntegerLiteral 0x1440e6820 <col:80> 'int' 2
|   |             | `-BreakStmt 0x1440e69b8 <line:23:6>
|   |             `-CompoundStmt 0x1440e6d38 <line:25:9, line:34:5>
|   |               `-IfStmt 0x1440e6d08 <line:26:6, line:33:6> has_else
|   |                 |-BinaryOperator 0x1440e6a90 <line:26:10, col:31> 'int' '>='
|   |                 | |-BinaryOperator 0x1440e6a38 <col:10, col:25> 'int' '+'
|   |                 | | |-ImplicitCastExpr 0x1440e6a20 <col:10> 'int' <LValueToRValue>
|   |                 | | | `-DeclRefExpr 0x1440e69e0 <col:10> 'int' lvalue Var 0x1440ce1a0 'singletonPos' 'int'
|   |                 | | `-IntegerLiteral 0x1440e6a00 <col:25> 'int' 1
|   |                 | `-ImplicitCastExpr 0x1440e6a78 <col:31> 'int' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x1440e6a58 <col:31> 'int' lvalue Var 0x1440ce258 'len' 'int'
|   |                 |-CompoundStmt 0x1440e6ab8 <col:35, line:29:6>
|   |                 | `-BreakStmt 0x1440e6ab0 <line:28:7>
|   |                 `-CompoundStmt 0x1440e6ce8 <line:29:13, line:33:6>
|   |                   |-BinaryOperator 0x1440e6bc0 <line:31:7, col:51> 'const char *' contains-errors '='
|   |                   | |-DeclRefExpr 0x1440e6ad0 <col:7> 'const char *' contains-errors lvalue Var 0x1440ce310 'mod_loc_name' 'const char *'
|   |                   | `-BinaryOperator 0x1440e6ba0 <col:22, col:51> 'const char *' contains-errors '+'
|   |                   |   |-BinaryOperator 0x1440e6b60 <col:22, col:37> 'const char *' contains-errors '+'
|   |                   |   | |-ImplicitCastExpr 0x1440e6b30 <col:22> 'const char *' contains-errors <LValueToRValue>
|   |                   |   | | `-DeclRefExpr 0x1440e6af0 <col:22> 'const char *' contains-errors lvalue Var 0x1440ce310 'mod_loc_name' 'const char *'
|   |                   |   | `-ImplicitCastExpr 0x1440e6b48 <col:37> 'int' <LValueToRValue>
|   |                   |   |   `-DeclRefExpr 0x1440e6b10 <col:37> 'int' lvalue Var 0x1440ce1a0 'singletonPos' 'int'
|   |                   |   `-IntegerLiteral 0x1440e6b80 <col:51> 'int' 1
|   |                   `-BinaryOperator 0x1440e6cc8 <line:32:7, col:32> 'int' contains-errors '='
|   |                     |-DeclRefExpr 0x1440e6be0 <col:7> 'int' lvalue Var 0x1440ce258 'len' 'int'
|   |                     `-ImplicitCastExpr 0x1440e6cb0 <col:13, col:32> 'int' contains-errors <IntegralCast>
|   |                       `-CallExpr 0x1440e6c70 <col:13, col:32> 'unsigned long' contains-errors
|   |                         |-ImplicitCastExpr 0x1440e6c58 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |                         | `-DeclRefExpr 0x1440e6c00 <col:13> 'unsigned long (const char *)' Function 0x143840670 'strlen' 'unsigned long (const char *)'
|   |                         `-ImplicitCastExpr 0x1440e6c98 <col:20> 'const char *' contains-errors <LValueToRValue>
|   |                           `-DeclRefExpr 0x1440e6c20 <col:20> 'const char *' contains-errors lvalue Var 0x1440ce310 'mod_loc_name' 'const char *'
|   `-ReturnStmt 0x1440e6e70 <line:40:2, col:9>
|     `-ImplicitCastExpr 0x1440e6e58 <col:9> 'char *' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x1440e6e38 <col:9> 'char *' contains-errors lvalue Var 0x1440ce0b8 'result' 'char *'
`-FunctionDecl 0x143840670 <line:8:25> col:25 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x143840770 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x143840718 <<invalid sloc>> Implicit 902
