TranslationUnitDecl 0x132855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1328564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132855bd0 '__int128'
|-TypedefDecl 0x132856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132855bf0 'unsigned __int128'
|-TypedefDecl 0x132926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132926800 'struct __NSConstantString_tag'
|   `-Record 0x132856580 '__NSConstantString_tag'
|-TypedefDecl 0x132926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132855d90 '__SVInt8_t'
|-TypedefDecl 0x132926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132855db0 '__SVInt16_t'
|-TypedefDecl 0x132926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132855dd0 '__SVInt32_t'
|-TypedefDecl 0x132926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132855df0 '__SVInt64_t'
|-TypedefDecl 0x132926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132855e10 '__SVUint8_t'
|-TypedefDecl 0x132926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132855e30 '__SVUint16_t'
|-TypedefDecl 0x132926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132855e50 '__SVUint32_t'
|-TypedefDecl 0x132926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132855e70 '__SVUint64_t'
|-TypedefDecl 0x132926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132855e90 '__SVFloat16_t'
|-TypedefDecl 0x132926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132855eb0 '__SVFloat32_t'
|-TypedefDecl 0x132926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132855ed0 '__SVFloat64_t'
|-TypedefDecl 0x132926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x132926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1329270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1329271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1329272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1329273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1329274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1328560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1328560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1328560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1329275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1329276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1328561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1328561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1329280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1328561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1329281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132856230 '__clang_svint16x4_t'
|-TypedefDecl 0x132928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132856250 '__clang_svint32x4_t'
|-TypedefDecl 0x132928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1329282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1328562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1329283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1328562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1328562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1329284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1329285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132856390 '__SVBool_t'
|-TypedefDecl 0x132928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1328563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1329286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1328563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1328563f0 '__SVCount_t'
|-TypedefDecl 0x1329287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1329287b0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-TypedefDecl 0x132928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1329287b0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-FunctionDecl 0x132928990 <dataset_diviso_filec/func20430_vuln.c:1:1, line:74:1> line:1:6 M_LoadDefaults 'void (void)'
| `-CompoundStmt 0x13400bab0 <line:2:1, line:74:1>
|   |-DeclStmt 0x132928b00 <line:3:5, col:11>
|   | `-VarDecl 0x132928a98 <col:5, col:10> col:10 used i 'int'
|   |-DeclStmt 0x132928b98 <line:4:5, col:13>
|   | `-VarDecl 0x132928b30 <col:5, col:10> col:10 used len 'int'
|   |-DeclStmt 0x132928ce8 <line:6:5, col:17>
|   | `-VarDecl 0x132928c80 <col:5, col:16> col:10 used def 'char[80]'
|   |-DeclStmt 0x132928e08 <line:7:5, col:22>
|   | `-VarDecl 0x132928da0 <col:5, col:21> col:10 used strparm 'char[100]'
|   |-DeclStmt 0x132928ea0 <line:8:5, col:20>
|   | `-VarDecl 0x132928e38 <col:5, col:11> col:11 used newstring 'char *'
|   |-DeclStmt 0x132928f38 <line:9:5, col:14>
|   | `-VarDecl 0x132928ed0 <col:5, col:10> col:10 used parm 'int'
|   |-BinaryOperator 0x132942378 <line:18:5, col:27> 'int' '='
|   | |-DeclRefExpr 0x132942140 <col:5> 'int' lvalue Var 0x132928a98 'i' 'int'
|   | `-CallExpr 0x132942338 <col:9, col:27> 'int'
|   |   |-ImplicitCastExpr 0x132942320 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x132942270 <col:9> 'int ()' Function 0x1329421b8 'M_CheckParm' 'int ()'
|   |   `-ImplicitCastExpr 0x132942360 <col:22> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1329422d0 <col:22> 'char[4]' lvalue "STR"
|   |-IfStmt 0x132942cc8 <line:19:5, line:25:2> has_else
|   | |-BinaryOperator 0x1329424d0 <line:19:9, col:23> 'int' contains-errors '&&'
|   | | |-DeclRefExpr 0x132942398 <col:9> 'int' lvalue Var 0x132928a98 'i' 'int'
|   | | `-BinaryOperator 0x1329424b0 <col:14, col:23> 'int' contains-errors '<'
|   | |   |-DeclRefExpr 0x1329423b8 <col:14> 'int' lvalue Var 0x132928a98 'i' 'int'
|   | |   `-BinaryOperator 0x132942490 <col:16, col:23> '<dependent type>' contains-errors '-'
|   | |     |-RecoveryExpr 0x132942470 <col:16> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x1329423f0 <col:23> 'int' 1
|   | |-CompoundStmt 0x132942c90 <line:20:5, line:23:5>
|   | | `-CallExpr 0x132942c60 <line:22:2, col:27> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x132942b88 <col:2> 'int (const char *, ...)' Function 0x1329429e0 'printf' 'int (const char *, ...)'
|   | |   |-StringLiteral 0x132942ba8 <col:10> 'char[4]' lvalue "STR"
|   | |   `-RecoveryExpr 0x132942c28 <col:16> '<dependent type>' contains-errors lvalue
|   | `-NullStmt 0x132942cc0 <line:25:2>
|   `-IfStmt 0x13400b890 <line:29:5, line:63:5>
|     |-RecoveryExpr 0x132942e60 <line:29:9> '_Bool' contains-errors
|     `-CompoundStmt 0x13400b878 <line:30:5, line:63:5>
|       `-WhileStmt 0x13400b758 <line:31:2, line:60:2>
|         |-RecoveryExpr 0x132942f80 <line:31:9, col:16> '_Bool' contains-errors
|         `-CompoundStmt 0x13400b740 <line:32:2, line:60:2>
|           `-IfStmt 0x13400b720 <line:34:6, line:59:6>
|             |-RecoveryExpr 0x134008d58 <line:34:10, col:45> '_Bool' contains-errors
|             `-CompoundStmt 0x13400b708 <line:35:6, line:59:6>
|               `-IfStmt 0x13400b240 <line:36:3, line:48:35> has_else
|                 |-BinaryOperator 0x134008e38 <line:36:7, col:21> 'int' '=='
|                 | |-ImplicitCastExpr 0x134008e20 <col:7, col:16> 'int' <IntegralCast>
|                 | | `-ImplicitCastExpr 0x134008e08 <col:7, col:16> 'char' <LValueToRValue>
|                 | |   `-ArraySubscriptExpr 0x134008dd0 <col:7, col:16> 'char' lvalue
|                 | |     |-ImplicitCastExpr 0x134008db8 <col:7> 'char *' <ArrayToPointerDecay>
|                 | |     | `-DeclRefExpr 0x134008d78 <col:7> 'char[100]' lvalue Var 0x132928da0 'strparm' 'char[100]'
|                 | |     `-IntegerLiteral 0x134008d98 <col:15> 'int' 0
|                 | `-CharacterLiteral 0x134008df0 <col:21> 'int' 34
|                 |-CompoundStmt 0x134009978 <line:37:3, line:44:3>
|                 | |-BinaryOperator 0x134009138 <line:40:7, col:27> 'int' '='
|                 | | |-DeclRefExpr 0x134008e58 <col:7> 'int' lvalue Var 0x132928b30 'len' 'int'
|                 | | `-ImplicitCastExpr 0x134009120 <col:13, col:27> 'int' <IntegralCast>
|                 | |   `-CallExpr 0x1340090c8 <col:13, col:27> 'unsigned long'
|                 | |     |-ImplicitCastExpr 0x1340090b0 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|                 | |     | `-DeclRefExpr 0x134009028 <col:13> 'unsigned long (const char *)' Function 0x134008eb8 'strlen' 'unsigned long (const char *)'
|                 | |     `-ImplicitCastExpr 0x134009108 <col:20> 'const char *' <NoOp>
|                 | |       `-ImplicitCastExpr 0x1340090f0 <col:20> 'char *' <ArrayToPointerDecay>
|                 | |         `-DeclRefExpr 0x134009048 <col:20> 'char[100]' lvalue Var 0x132928da0 'strparm' 'char[100]'
|                 | |-BinaryOperator 0x134009490 <line:41:7, col:38> 'char *' '='
|                 | | |-DeclRefExpr 0x134009158 <col:7> 'char *' lvalue Var 0x132928e38 'newstring' 'char *'
|                 | | `-CStyleCastExpr 0x134009468 <col:19, col:38> 'char *' <BitCast>
|                 | |   `-CallExpr 0x1340093f8 <col:28, col:38> 'void *'
|                 | |     |-ImplicitCastExpr 0x1340093e0 <col:28> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|                 | |     | `-DeclRefExpr 0x134009358 <col:28> 'void *(unsigned long)' Function 0x1340091b8 'malloc' 'void *(unsigned long)'
|                 | |     `-ImplicitCastExpr 0x134009438 <col:35> 'unsigned long' <IntegralCast>
|                 | |       `-ImplicitCastExpr 0x134009420 <col:35> 'int' <LValueToRValue>
|                 | |         `-DeclRefExpr 0x134009378 <col:35> 'int' lvalue Var 0x132928b30 'len' 'int'
|                 | |-BinaryOperator 0x1340095b8 <line:42:7, col:24> 'char' '='
|                 | | |-ArraySubscriptExpr 0x134009560 <col:7, col:20> 'char' lvalue
|                 | | | |-ImplicitCastExpr 0x134009548 <col:7> 'char *' <ArrayToPointerDecay>
|                 | | | | `-DeclRefExpr 0x1340094b0 <col:7> 'char[100]' lvalue Var 0x132928da0 'strparm' 'char[100]'
|                 | | | `-BinaryOperator 0x134009528 <col:15, col:19> 'int' '-'
|                 | | |   |-ImplicitCastExpr 0x134009510 <col:15> 'int' <LValueToRValue>
|                 | | |   | `-DeclRefExpr 0x1340094d0 <col:15> 'int' lvalue Var 0x132928b30 'len' 'int'
|                 | | |   `-IntegerLiteral 0x1340094f0 <col:19> 'int' 1
|                 | | `-ImplicitCastExpr 0x1340095a0 <col:24> 'char' <IntegralCast>
|                 | |   `-IntegerLiteral 0x134009580 <col:24> 'int' 0
|                 | `-CallExpr 0x134009918 <line:43:7, col:34> 'char *'
|                 |   |-ImplicitCastExpr 0x134009900 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|                 |   | `-DeclRefExpr 0x134009800 <col:7> 'char *(char *, const char *)' Function 0x134009620 'strcpy' 'char *(char *, const char *)'
|                 |   |-ImplicitCastExpr 0x134009948 <col:14> 'char *' <LValueToRValue>
|                 |   | `-DeclRefExpr 0x134009820 <col:14> 'char *' lvalue Var 0x132928e38 'newstring' 'char *'
|                 |   `-ImplicitCastExpr 0x134009960 <col:25, col:33> 'const char *' <NoOp>
|                 |     `-BinaryOperator 0x134009898 <col:25, col:33> 'char *' '+'
|                 |       |-ImplicitCastExpr 0x134009880 <col:25> 'char *' <ArrayToPointerDecay>
|                 |       | `-DeclRefExpr 0x134009840 <col:25> 'char[100]' lvalue Var 0x132928da0 'strparm' 'char[100]'
|                 |       `-IntegerLiteral 0x134009860 <col:33> 'int' 1
|                 `-IfStmt 0x13400b210 <line:45:8, line:48:35> has_else
|                   |-BinaryOperator 0x134009b68 <line:45:12, col:47> 'int' '&&'
|                   | |-BinaryOperator 0x134009a68 <col:12, col:26> 'int' '=='
|                   | | |-ImplicitCastExpr 0x134009a50 <col:12, col:21> 'int' <IntegralCast>
|                   | | | `-ImplicitCastExpr 0x134009a38 <col:12, col:21> 'char' <LValueToRValue>
|                   | | |   `-ArraySubscriptExpr 0x134009a00 <col:12, col:21> 'char' lvalue
|                   | | |     |-ImplicitCastExpr 0x1340099e8 <col:12> 'char *' <ArrayToPointerDecay>
|                   | | |     | `-DeclRefExpr 0x1340099a8 <col:12> 'char[100]' lvalue Var 0x132928da0 'strparm' 'char[100]'
|                   | | |     `-IntegerLiteral 0x1340099c8 <col:20> 'int' 0
|                   | | `-CharacterLiteral 0x134009a20 <col:26> 'int' 48
|                   | `-BinaryOperator 0x134009b48 <col:33, col:47> 'int' '=='
|                   |   |-ImplicitCastExpr 0x134009b30 <col:33, col:42> 'int' <IntegralCast>
|                   |   | `-ImplicitCastExpr 0x134009b18 <col:33, col:42> 'char' <LValueToRValue>
|                   |   |   `-ArraySubscriptExpr 0x134009ae0 <col:33, col:42> 'char' lvalue
|                   |   |     |-ImplicitCastExpr 0x134009ac8 <col:33> 'char *' <ArrayToPointerDecay>
|                   |   |     | `-DeclRefExpr 0x134009a88 <col:33> 'char[100]' lvalue Var 0x132928da0 'strparm' 'char[100]'
|                   |   |     `-IntegerLiteral 0x134009aa8 <col:41> 'int' 1
|                   |   `-CharacterLiteral 0x134009b00 <col:47> 'int' 120
|                   |-CallExpr 0x13400b018 <line:46:7, col:37> 'int'
|                   | |-ImplicitCastExpr 0x13400b000 <col:7> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|                   | | `-DeclRefExpr 0x13400ae60 <col:7> 'int (const char *restrict, const char *restrict, ...)' Function 0x13400ac48 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|                   | |-ImplicitCastExpr 0x13400b050 <col:14, col:22> 'const char *' <NoOp>
|                   | | `-BinaryOperator 0x13400aed8 <col:14, col:22> 'char *' '+'
|                   | |   |-ImplicitCastExpr 0x13400aec0 <col:14> 'char *' <ArrayToPointerDecay>
|                   | |   | `-DeclRefExpr 0x13400ae80 <col:14> 'char[100]' lvalue Var 0x132928da0 'strparm' 'char[100]'
|                   | |   `-IntegerLiteral 0x13400aea0 <col:22> 'int' 2
|                   | |-ImplicitCastExpr 0x13400b080 <col:25> 'const char *' <NoOp>
|                   | | `-ImplicitCastExpr 0x13400b068 <col:25> 'char *' <ArrayToPointerDecay>
|                   | |   `-StringLiteral 0x13400aef8 <col:25> 'char[4]' lvalue "STR"
|                   | `-UnaryOperator 0x13400af70 <col:32, col:33> 'int *' prefix '&' cannot overflow
|                   |   `-DeclRefExpr 0x13400af18 <col:33> 'int' lvalue Var 0x132928ed0 'parm' 'int'
|                   `-CallExpr 0x13400b178 <line:48:7, col:35> 'int'
|                     |-ImplicitCastExpr 0x13400b160 <col:7> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|                     | `-DeclRefExpr 0x13400b098 <col:7> 'int (const char *restrict, const char *restrict, ...)' Function 0x13400ac48 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|                     |-ImplicitCastExpr 0x13400b1c8 <col:14> 'const char *' <NoOp>
|                     | `-ImplicitCastExpr 0x13400b1b0 <col:14> 'char *' <ArrayToPointerDecay>
|                     |   `-DeclRefExpr 0x13400b0b8 <col:14> 'char[100]' lvalue Var 0x132928da0 'strparm' 'char[100]'
|                     |-ImplicitCastExpr 0x13400b1f8 <col:23> 'const char *' <NoOp>
|                     | `-ImplicitCastExpr 0x13400b1e0 <col:23> 'char *' <ArrayToPointerDecay>
|                     |   `-StringLiteral 0x13400b0d8 <col:23> 'char[4]' lvalue "STR"
|                     `-UnaryOperator 0x13400b118 <col:30, col:31> 'int *' prefix '&' cannot overflow
|                       `-DeclRefExpr 0x13400b0f8 <col:31> 'int' lvalue Var 0x132928ed0 'parm' 'int'
|-FunctionDecl 0x1329429e0 <line:22:2> col:2 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x132942ae0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x132942a88 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x132942b50 <col:2> Implicit printf 1 2
|-FunctionDecl 0x134008eb8 <line:40:13> col:13 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x134008fb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x134008f60 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1340091b8 <line:41:28> col:28 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x1340092b8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x134009260 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x134009328 <col:28> Implicit 1
|-FunctionDecl 0x134009620 <line:43:7> col:7 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x134009720 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x134009788 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1340096c8 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x13400ac48 <line:46:7> col:7 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x13400ad48 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x13400adb0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-BuiltinAttr 0x13400acf0 <<invalid sloc>> Implicit 913
| `-FormatAttr 0x13400ae28 <col:7> Implicit scanf 2 3
`-FunctionDecl 0x13400b370 <line:50:12> col:12 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x13400b470 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13400b4d8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13400b418 <<invalid sloc>> Implicit 887
