TranslationUnitDecl 0x14c853008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c853eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c8535d0 '__int128'
|-TypedefDecl 0x14c853f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c8535f0 'unsigned __int128'
|-TypedefDecl 0x14d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c853f80 '__NSConstantString_tag'
|-TypedefDecl 0x14d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c853790 '__SVInt8_t'
|-TypedefDecl 0x14d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c8537b0 '__SVInt16_t'
|-TypedefDecl 0x14d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c8537d0 '__SVInt32_t'
|-TypedefDecl 0x14d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c8537f0 '__SVInt64_t'
|-TypedefDecl 0x14d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c853810 '__SVUint8_t'
|-TypedefDecl 0x14d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c853830 '__SVUint16_t'
|-TypedefDecl 0x14d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c853850 '__SVUint32_t'
|-TypedefDecl 0x14d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c853870 '__SVUint64_t'
|-TypedefDecl 0x14d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c853890 '__SVFloat16_t'
|-TypedefDecl 0x14d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c8538b0 '__SVFloat32_t'
|-TypedefDecl 0x14d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c8538d0 '__SVFloat64_t'
|-TypedefDecl 0x14d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c8538f0 '__SVBfloat16_t'
|-TypedefDecl 0x14d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c853910 '__clang_svint8x2_t'
|-TypedefDecl 0x14d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c853930 '__clang_svint16x2_t'
|-TypedefDecl 0x14d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c853950 '__clang_svint32x2_t'
|-TypedefDecl 0x14d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c853970 '__clang_svint64x2_t'
|-TypedefDecl 0x14d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c853990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c8539b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c8539d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c8539f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c853a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c853a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c853a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c853a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c853a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c853ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c853ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c853af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c853b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c853b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c853b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c853b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c853b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c853bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c853bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c853bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c853c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c853c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c853c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c853c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c853c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c853cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c853cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c853cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c853d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c853d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c853d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c853d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c853d90 '__SVBool_t'
|-TypedefDecl 0x14d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c853db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c853dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c853df0 '__SVCount_t'
|-TypedefDecl 0x14d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d80dbb0 'char *'
|   `-BuiltinType 0x14c8530b0 'char'
|-TypedefDecl 0x14d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d80dbb0 'char *'
|   `-BuiltinType 0x14c8530b0 'char'
`-FunctionDecl 0x14d8266b8 <dataset_diviso_filec/func11194_vuln.c:1:1, line:26:1> line:1:12 copy_verifier_state 'int (struct bpf_verifier_state *, const struct bpf_verifier_state *)' static
  |-ParmVarDecl 0x14d80e248 <col:32, col:59> col:59 used dst_state 'struct bpf_verifier_state *'
  |-ParmVarDecl 0x14d80e368 <line:2:11, col:44> col:44 used src 'const struct bpf_verifier_state *'
  `-CompoundStmt 0x14c00b850 <line:3:1, line:26:1>
    |-DeclStmt 0x14d8269a8 <line:4:2, col:28>
    | |-RecordDecl 0x14d8267b8 <col:2, col:9> col:9 struct bpf_func_state
    | `-VarDecl 0x14d826928 <col:2, col:25> col:25 used dst 'struct bpf_func_state *'
    |-DeclStmt 0x14d826ad8 <line:5:2, col:12>
    | |-VarDecl 0x14d8269d8 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x14d826a58 <col:2, col:9> col:9 used err 'int'
    |-ForStmt 0x14d8270f0 <line:8:2, line:11:2>
    | |-BinaryOperator 0x14d826bb0 <line:8:7, col:27> 'int' contains-errors '='
    | | |-DeclRefExpr 0x14d826af0 <col:7> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    | | `-BinaryOperator 0x14d826b90 <col:11, col:27> '<dependent type>' contains-errors '+'
    | |   |-RecoveryExpr 0x14d826b48 <col:11, col:16> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14d826b10 <col:11> 'const struct bpf_verifier_state *' lvalue ParmVar 0x14d80e368 'src' 'const struct bpf_verifier_state *'
    | |   `-IntegerLiteral 0x14d826b70 <col:27> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d826c50 <col:30, col:46> 'int' contains-errors '<='
    | | |-DeclRefExpr 0x14d826bd0 <col:30> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    | | `-RecoveryExpr 0x14d826c28 <col:35, col:46> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14d826bf0 <col:35> 'struct bpf_verifier_state *' lvalue ParmVar 0x14d80e248 'dst_state' 'struct bpf_verifier_state *'
    | |-UnaryOperator 0x14d826c90 <col:56, col:57> 'int' postfix '++'
    | | `-DeclRefExpr 0x14d826c70 <col:56> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    | `-CompoundStmt 0x14d8270d0 <col:61, line:11:2>
    |   |-CallExpr 0x14d826ec0 <line:9:3, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d826dd0 <col:3> 'int ()' Function 0x14d826d18 'free_func_state' 'int ()'
    |   | `-ArraySubscriptExpr 0x14d826ea0 <col:19, col:37> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x14d826e70 <col:19, col:30> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x14d826e28 <col:19, col:30> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x14d826df0 <col:19> 'struct bpf_verifier_state *' lvalue ParmVar 0x14d80e248 'dst_state' 'struct bpf_verifier_state *'
    |   |   `-ImplicitCastExpr 0x14d826e88 <col:36> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14d826e50 <col:36> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    |   `-BinaryOperator 0x14d8270b0 <line:10:3, col:25> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x14d827070 <col:3, col:21> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x14d827040 <col:3, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-RecoveryExpr 0x14d826f20 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x14d826ee8 <col:3> 'struct bpf_verifier_state *' lvalue ParmVar 0x14d80e248 'dst_state' 'struct bpf_verifier_state *'
    |     | `-ImplicitCastExpr 0x14d827058 <col:20> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x14d826f48 <col:20> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    |     `-RecoveryExpr 0x14d827090 <col:25> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d8271e8 <line:12:2, col:29> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d827160 <col:2, col:13> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d827128 <col:2> 'struct bpf_verifier_state *' lvalue ParmVar 0x14d80e248 'dst_state' 'struct bpf_verifier_state *'
    | `-RecoveryExpr 0x14d8271c0 <col:24, col:29> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14d827188 <col:24> 'const struct bpf_verifier_state *' lvalue ParmVar 0x14d80e368 'src' 'const struct bpf_verifier_state *'
    |-ForStmt 0x14c00b7e8 <line:13:2, line:24:2>
    | |-BinaryOperator 0x14d827248 <line:13:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x14d827208 <col:7> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    | | `-IntegerLiteral 0x14d827228 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d8272e8 <col:14, col:24> 'int' contains-errors '<='
    | | |-DeclRefExpr 0x14d827268 <col:14> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    | | `-RecoveryExpr 0x14d8272c0 <col:19, col:24> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14d827288 <col:19> 'const struct bpf_verifier_state *' lvalue ParmVar 0x14d80e368 'src' 'const struct bpf_verifier_state *'
    | |-UnaryOperator 0x14d827328 <col:34, col:35> 'int' postfix '++'
    | | `-DeclRefExpr 0x14d827308 <col:34> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    | `-CompoundStmt 0x14c00b7b8 <col:39, line:24:2>
    |   |-BinaryOperator 0x14d827430 <line:14:3, col:27> 'struct bpf_func_state *' contains-errors '='
    |   | |-DeclRefExpr 0x14d827340 <col:3> 'struct bpf_func_state *' lvalue Var 0x14d826928 'dst' 'struct bpf_func_state *'
    |   | `-ArraySubscriptExpr 0x14d827410 <col:9, col:27> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x14d8273e0 <col:9, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x14d827398 <col:9, col:20> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x14d827360 <col:9> 'struct bpf_verifier_state *' lvalue ParmVar 0x14d80e248 'dst_state' 'struct bpf_verifier_state *'
    |   |   `-ImplicitCastExpr 0x14d8273f8 <col:26> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14d8273c0 <col:26> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    |   |-IfStmt 0x14c00b498 <line:15:3, line:20:3>
    |   | |-UnaryOperator 0x14d827488 <line:15:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x14d827470 <col:8> 'struct bpf_func_state *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14d827450 <col:8> 'struct bpf_func_state *' lvalue Var 0x14d826928 'dst' 'struct bpf_func_state *'
    |   | `-CompoundStmt 0x14c00b478 <col:13, line:20:3>
    |   |   |-IfStmt 0x14c00b348 <line:17:4, line:18:13>
    |   |   | |-UnaryOperator 0x14c00b288 <line:17:8, col:9> 'int' prefix '!' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x14c00b270 <col:9> 'struct bpf_func_state *' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x14c00b250 <col:9> 'struct bpf_func_state *' lvalue Var 0x14d826928 'dst' 'struct bpf_func_state *'
    |   |   | `-ReturnStmt 0x14c00b338 <line:18:5, col:13>
    |   |   |   `-UnaryOperator 0x14c00b320 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   |     `-ImplicitCastExpr 0x14c00b308 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |       `-RecoveryExpr 0x14c00b2e8 <col:13> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x14c00b458 <line:19:4, col:26> '<dependent type>' contains-errors '='
    |   |     |-ArraySubscriptExpr 0x14c00b418 <col:4, col:22> '<dependent type>' contains-errors lvalue
    |   |     | |-ImplicitCastExpr 0x14c00b3e8 <col:4, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | | `-RecoveryExpr 0x14c00b3a0 <col:4, col:15> '<dependent type>' contains-errors lvalue
    |   |     | |   `-DeclRefExpr 0x14c00b368 <col:4> 'struct bpf_verifier_state *' lvalue ParmVar 0x14d80e248 'dst_state' 'struct bpf_verifier_state *'
    |   |     | `-ImplicitCastExpr 0x14c00b400 <col:21> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x14c00b3c8 <col:21> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    |   |     `-DeclRefExpr 0x14c00b438 <col:26> 'struct bpf_func_state *' lvalue Var 0x14d826928 'dst' 'struct bpf_func_state *'
    |   |-BinaryOperator 0x14c00b6f8 <line:21:3, col:43> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14c00b4b8 <col:3> 'int' lvalue Var 0x14d826a58 'err' 'int'
    |   | `-CallExpr 0x14c00b6c8 <col:9, col:43> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14c00b5b8 <col:9> 'int ()' Function 0x14c00b500 'copy_func_state' 'int ()'
    |   |   |-DeclRefExpr 0x14c00b5d8 <col:25> 'struct bpf_func_state *' lvalue Var 0x14d826928 'dst' 'struct bpf_func_state *'
    |   |   `-ArraySubscriptExpr 0x14c00b6a8 <col:30, col:42> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x14c00b678 <col:30, col:35> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x14c00b630 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x14c00b5f8 <col:30> 'const struct bpf_verifier_state *' lvalue ParmVar 0x14d80e368 'src' 'const struct bpf_verifier_state *'
    |   |     `-ImplicitCastExpr 0x14c00b690 <col:41> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14c00b658 <col:41> 'int' lvalue Var 0x14d8269d8 'i' 'int'
    |   `-IfStmt 0x14c00b798 <line:22:3, line:23:11>
    |     |-ImplicitCastExpr 0x14c00b738 <line:22:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x14c00b718 <col:7> 'int' lvalue Var 0x14d826a58 'err' 'int'
    |     `-ReturnStmt 0x14c00b788 <line:23:4, col:11>
    |       `-ImplicitCastExpr 0x14c00b770 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x14c00b750 <col:11> 'int' lvalue Var 0x14d826a58 'err' 'int'
    `-ReturnStmt 0x14c00b840 <line:25:2, col:9>
      `-IntegerLiteral 0x14c00b820 <col:9> 'int' 0
