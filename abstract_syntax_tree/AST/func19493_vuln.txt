TranslationUnitDecl 0x14e831408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e8322b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e8319d0 '__int128'
|-TypedefDecl 0x14e832328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e8319f0 'unsigned __int128'
|-TypedefDecl 0x14d814830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d814600 'struct __NSConstantString_tag'
|   `-Record 0x14e832380 '__NSConstantString_tag'
|-TypedefDecl 0x14d814898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e831b90 '__SVInt8_t'
|-TypedefDecl 0x14d814900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e831bb0 '__SVInt16_t'
|-TypedefDecl 0x14d814968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e831bd0 '__SVInt32_t'
|-TypedefDecl 0x14d8149d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e831bf0 '__SVInt64_t'
|-TypedefDecl 0x14d814a38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e831c10 '__SVUint8_t'
|-TypedefDecl 0x14d814aa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e831c30 '__SVUint16_t'
|-TypedefDecl 0x14d814b08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e831c50 '__SVUint32_t'
|-TypedefDecl 0x14d814b70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e831c70 '__SVUint64_t'
|-TypedefDecl 0x14d814bd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e831c90 '__SVFloat16_t'
|-TypedefDecl 0x14d814c40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e831cb0 '__SVFloat32_t'
|-TypedefDecl 0x14d814ca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e831cd0 '__SVFloat64_t'
|-TypedefDecl 0x14d814d10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e831cf0 '__SVBfloat16_t'
|-TypedefDecl 0x14d814d78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e831d10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d814de0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e831d30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d814e48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e831d50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d814eb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e831d70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d814f18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e831d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d814f80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e831db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d814fe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e831dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d815050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e831df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d8150b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e831e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d815120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e831e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d815188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e831e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d8151f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e831e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d815258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e831e90 '__clang_svint8x3_t'
|-TypedefDecl 0x14d8152c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e831eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d815328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e831ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d815390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e831ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d8153f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e831f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d815460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e831f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d8154c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e831f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d815530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e831f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d815598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e831f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d815600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e831fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d815668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e831fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d8156d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e831ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d815738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e832010 '__clang_svint8x4_t'
|-TypedefDecl 0x14d8157a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e832030 '__clang_svint16x4_t'
|-TypedefDecl 0x14d815808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e832050 '__clang_svint32x4_t'
|-TypedefDecl 0x14d815870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e832070 '__clang_svint64x4_t'
|-TypedefDecl 0x14d8158d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e832090 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d815940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e8320b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d8159a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e8320d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d815a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e8320f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d815a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e832110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d815ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e832130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d815b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e832150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d815bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e832170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d815c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e832190 '__SVBool_t'
|-TypedefDecl 0x14d815c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e8321b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d815ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e8321d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d815d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e8321f0 '__SVCount_t'
|-TypedefDecl 0x14d815df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d815db0 'char *'
|   `-BuiltinType 0x14e8314b0 'char'
|-TypedefDecl 0x14d815e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d815db0 'char *'
|   `-BuiltinType 0x14e8314b0 'char'
|-FunctionDecl 0x14d8162f8 <dataset_diviso_filec/func19493_vuln.c:1:1, line:40:1> line:1:1 rleUncompress 'int (int, int, const signed char *, char *)'
| |-ParmVarDecl 0x14d815ed8 <col:16, col:20> col:20 used inLength 'int'
| |-ParmVarDecl 0x14d815f58 <col:30, col:34> col:34 used maxLength 'int'
| |-ParmVarDecl 0x14d8160b0 <col:45, col:66> col:63 used in 'const signed char *'
| |-ParmVarDecl 0x14d8161a0 <col:69, col:78> col:74 used out 'char *'
| `-CompoundStmt 0x14e90eb18 <line:2:1, line:40:1>
|   |-DeclStmt 0x14d8164c0 <line:3:5, col:25>
|   | `-VarDecl 0x14d816420 <col:5, col:22> col:11 used outStart 'char *' cinit
|   |   `-ImplicitCastExpr 0x14d8164a8 <col:22> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14d816488 <col:22> 'char *' lvalue ParmVar 0x14d8161a0 'out' 'char *'
|   |-WhileStmt 0x14e90ea40 <line:5:5, line:37:5>
|   | |-BinaryOperator 0x14d816530 <line:5:12, col:23> 'int' '>'
|   | | |-ImplicitCastExpr 0x14d816518 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14d8164d8 <col:12> 'int' lvalue ParmVar 0x14d815ed8 'inLength' 'int'
|   | | `-IntegerLiteral 0x14d8164f8 <col:23> 'int' 0
|   | `-CompoundStmt 0x14e90ea28 <line:6:5, line:37:5>
|   |   `-IfStmt 0x14e90e9f8 <line:7:2, line:36:2> has_else
|   |     |-BinaryOperator 0x14e90b400 <line:7:6, col:12> 'int' '<'
|   |     | |-ImplicitCastExpr 0x14d8165d8 <col:6, col:7> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x14d8165c0 <col:6, col:7> 'signed char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x14d816588 <col:6, col:7> 'const signed char' lvalue prefix '*' cannot overflow
|   |     | |     `-ImplicitCastExpr 0x14d816570 <col:7> 'const signed char *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x14d816550 <col:7> 'const signed char *' lvalue ParmVar 0x14d8160b0 'in' 'const signed char *'
|   |     | `-IntegerLiteral 0x14d8165a0 <col:12> 'int' 0
|   |     |-CompoundStmt 0x14e90c240 <line:8:2, line:23:2>
|   |     | |-DeclStmt 0x14e90b580 <line:9:6, col:31>
|   |     | | `-VarDecl 0x14e90b438 <col:6, col:30> col:10 used count 'int' cinit
|   |     | |   `-UnaryOperator 0x14e90b568 <col:18, col:30> 'int' prefix '-'
|   |     | |     `-ParenExpr 0x14e90b548 <col:19, col:30> 'int'
|   |     | |       `-CStyleCastExpr 0x14e90b520 <col:20, col:28> 'int' <IntegralCast>
|   |     | |         `-ImplicitCastExpr 0x14e90b508 <col:25, col:28> 'signed char' <LValueToRValue> part_of_explicit_cast
|   |     | |           `-UnaryOperator 0x14e90b4d8 <col:25, col:28> 'const signed char' lvalue prefix '*' cannot overflow
|   |     | |             `-UnaryOperator 0x14e90b4c0 <col:26, col:28> 'const signed char *' postfix '++'
|   |     | |               `-DeclRefExpr 0x14e90b4a0 <col:26> 'const signed char *' lvalue ParmVar 0x14d8160b0 'in' 'const signed char *'
|   |     | |-CompoundAssignOperator 0x14e90b630 <line:10:6, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | | |-DeclRefExpr 0x14e90b598 <col:6> 'int' lvalue ParmVar 0x14d815ed8 'inLength' 'int'
|   |     | | `-BinaryOperator 0x14e90b610 <col:18, col:26> 'int' '+'
|   |     | |   |-ImplicitCastExpr 0x14e90b5f8 <col:18> 'int' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x14e90b5b8 <col:18> 'int' lvalue Var 0x14e90b438 'count' 'int'
|   |     | |   `-IntegerLiteral 0x14e90b5d8 <col:26> 'int' 1
|   |     | |-IfStmt 0x14e90b778 <line:12:6, line:13:10>
|   |     | | |-BinaryOperator 0x14e90b728 <line:12:10, col:33> 'int' '>'
|   |     | | | |-IntegerLiteral 0x14e90b660 <col:10> 'int' 0
|   |     | | | `-ParenExpr 0x14e90b708 <col:14, col:33> 'int'
|   |     | | |   `-CompoundAssignOperator 0x14e90b6d8 <col:15, col:28> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | | |     |-DeclRefExpr 0x14e90b680 <col:15> 'int' lvalue ParmVar 0x14d815f58 'maxLength' 'int'
|   |     | | |     `-ImplicitCastExpr 0x14e90b6c0 <col:28> 'int' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x14e90b6a0 <col:28> 'int' lvalue Var 0x14e90b438 'count' 'int'
|   |     | | `-ReturnStmt 0x14e90b768 <line:13:3, col:10>
|   |     | |   `-IntegerLiteral 0x14e90b748 <col:10> 'int' 0
|   |     | |-IfStmt 0x14e90b840 <line:17:9, line:18:18>
|   |     | | |-BinaryOperator 0x14e90b7f0 <line:17:13, col:24> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x14e90b7d8 <col:13> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x14e90b798 <col:13> 'int' lvalue ParmVar 0x14d815ed8 'inLength' 'int'
|   |     | | | `-IntegerLiteral 0x14e90b7b8 <col:24> 'int' 0
|   |     | | `-ReturnStmt 0x14e90b830 <line:18:11, col:18>
|   |     | |   `-IntegerLiteral 0x14e90b810 <col:18> 'int' 0
|   |     | |-CallExpr 0x14e90c068 <line:20:9, col:30> 'void *'
|   |     | | |-ImplicitCastExpr 0x14e90c050 <col:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x14e90bf50 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x14e90bd00 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |     | | |-ImplicitCastExpr 0x14e90c0b8 <col:16> 'void *' <BitCast>
|   |     | | | `-ImplicitCastExpr 0x14e90c0a0 <col:16> 'char *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x14e90bf70 <col:16> 'char *' lvalue ParmVar 0x14d8161a0 'out' 'char *'
|   |     | | |-ImplicitCastExpr 0x14e90c0e8 <col:21> 'const void *' <BitCast>
|   |     | | | `-ImplicitCastExpr 0x14e90c0d0 <col:21> 'const signed char *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x14e90bf90 <col:21> 'const signed char *' lvalue ParmVar 0x14d8160b0 'in' 'const signed char *'
|   |     | | `-ImplicitCastExpr 0x14e90c118 <col:25> 'unsigned long' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x14e90c100 <col:25> 'int' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x14e90bfb0 <col:25> 'int' lvalue Var 0x14e90b438 'count' 'int'
|   |     | |-CompoundAssignOperator 0x14e90c188 <line:21:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     | | |-DeclRefExpr 0x14e90c130 <col:9> 'char *' lvalue ParmVar 0x14d8161a0 'out' 'char *'
|   |     | | `-ImplicitCastExpr 0x14e90c170 <col:16> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x14e90c150 <col:16> 'int' lvalue Var 0x14e90b438 'count' 'int'
|   |     | `-CompoundAssignOperator 0x14e90c210 <line:22:9, col:16> 'const signed char *' '+=' ComputeLHSTy='const signed char *' ComputeResultTy='const signed char *'
|   |     |   |-DeclRefExpr 0x14e90c1b8 <col:9> 'const signed char *' lvalue ParmVar 0x14d8160b0 'in' 'const signed char *'
|   |     |   `-ImplicitCastExpr 0x14e90c1f8 <col:16> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x14e90c1d8 <col:16> 'int' lvalue Var 0x14e90b438 'count' 'int'
|   |     `-CompoundStmt 0x14e90e9b8 <line:25:2, line:36:2>
|   |       |-DeclStmt 0x14e90c388 <line:26:6, col:23>
|   |       | `-VarDecl 0x14e90c2a0 <col:6, col:21> col:10 used count 'int' cinit
|   |       |   `-ImplicitCastExpr 0x14e90c370 <col:18, col:21> 'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x14e90c358 <col:18, col:21> 'signed char' <LValueToRValue>
|   |       |       `-UnaryOperator 0x14e90c340 <col:18, col:21> 'const signed char' lvalue prefix '*' cannot overflow
|   |       |         `-UnaryOperator 0x14e90c328 <col:19, col:21> 'const signed char *' postfix '++'
|   |       |           `-DeclRefExpr 0x14e90c308 <col:19> 'const signed char *' lvalue ParmVar 0x14d8160b0 'in' 'const signed char *'
|   |       |-CompoundAssignOperator 0x14e90e200 <line:27:6, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x14e90c3a0 <col:6> 'int' lvalue ParmVar 0x14d815ed8 'inLength' 'int'
|   |       | `-IntegerLiteral 0x14e90c3c0 <col:18> 'int' 2
|   |       |-IfStmt 0x14e90e388 <line:29:6, line:30:10>
|   |       | |-BinaryOperator 0x14e90e338 <line:29:10, col:37> 'int' '>'
|   |       | | |-IntegerLiteral 0x14e90e230 <col:10> 'int' 0
|   |       | | `-ParenExpr 0x14e90e318 <col:14, col:37> 'int'
|   |       | |   `-CompoundAssignOperator 0x14e90e2e8 <col:15, col:36> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |     |-DeclRefExpr 0x14e90e250 <col:15> 'int' lvalue ParmVar 0x14d815f58 'maxLength' 'int'
|   |       | |     `-BinaryOperator 0x14e90e2c8 <col:28, col:36> 'int' '+'
|   |       | |       |-ImplicitCastExpr 0x14e90e2b0 <col:28> 'int' <LValueToRValue>
|   |       | |       | `-DeclRefExpr 0x14e90e270 <col:28> 'int' lvalue Var 0x14e90c2a0 'count' 'int'
|   |       | |       `-IntegerLiteral 0x14e90e290 <col:36> 'int' 1
|   |       | `-ReturnStmt 0x14e90e378 <line:30:3, col:10>
|   |       |   `-IntegerLiteral 0x14e90e358 <col:10> 'int' 0
|   |       |-CallExpr 0x14e90e808 <line:32:9, col:40> 'void *'
|   |       | |-ImplicitCastExpr 0x14e90e7f0 <col:9> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14e90e648 <col:9> 'void *(void *, int, unsigned long)' Function 0x14e90e3f8 'memset' 'void *(void *, int, unsigned long)'
|   |       | |-ImplicitCastExpr 0x14e90e858 <col:16> 'void *' <BitCast>
|   |       | | `-ImplicitCastExpr 0x14e90e840 <col:16> 'char *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x14e90e668 <col:16> 'char *' lvalue ParmVar 0x14d8161a0 'out' 'char *'
|   |       | |-ImplicitCastExpr 0x14e90e888 <col:21, col:29> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x14e90e870 <col:21, col:29> 'char' <LValueToRValue>
|   |       | |   `-UnaryOperator 0x14e90e700 <col:21, col:29> 'char' lvalue prefix '*' cannot overflow
|   |       | |     `-CStyleCastExpr 0x14e90e6d8 <col:22, col:29> 'char *' <BitCast>
|   |       | |       `-ImplicitCastExpr 0x14e90e6c0 <col:29> 'const signed char *' <LValueToRValue> part_of_explicit_cast
|   |       | |         `-DeclRefExpr 0x14e90e688 <col:29> 'const signed char *' lvalue ParmVar 0x14d8160b0 'in' 'const signed char *'
|   |       | `-ImplicitCastExpr 0x14e90e8a0 <col:33, col:39> 'unsigned long' <IntegralCast>
|   |       |   `-BinaryOperator 0x14e90e770 <col:33, col:39> 'int' '+'
|   |       |     |-ImplicitCastExpr 0x14e90e758 <col:33> 'int' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x14e90e718 <col:33> 'int' lvalue Var 0x14e90c2a0 'count' 'int'
|   |       |     `-IntegerLiteral 0x14e90e738 <col:39> 'int' 1
|   |       |-CompoundAssignOperator 0x14e90e950 <line:33:9, col:22> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |       | |-DeclRefExpr 0x14e90e8b8 <col:9> 'char *' lvalue ParmVar 0x14d8161a0 'out' 'char *'
|   |       | `-BinaryOperator 0x14e90e930 <col:16, col:22> 'int' '+'
|   |       |   |-ImplicitCastExpr 0x14e90e918 <col:16> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x14e90e8d8 <col:16> 'int' lvalue Var 0x14e90c2a0 'count' 'int'
|   |       |   `-IntegerLiteral 0x14e90e8f8 <col:22> 'int' 1
|   |       `-UnaryOperator 0x14e90e9a0 <line:35:6, col:8> 'const signed char *' postfix '++'
|   |         `-DeclRefExpr 0x14e90e980 <col:6> 'const signed char *' lvalue ParmVar 0x14d8160b0 'in' 'const signed char *'
|   `-ReturnStmt 0x14e90eb08 <line:39:5, col:18>
|     `-ImplicitCastExpr 0x14e90eaf0 <col:12, col:18> 'int' <IntegralCast>
|       `-BinaryOperator 0x14e90ead0 <col:12, col:18> 'long' '-'
|         |-ImplicitCastExpr 0x14e90eaa0 <col:12> 'char *' <LValueToRValue>
|         | `-DeclRefExpr 0x14e90ea60 <col:12> 'char *' lvalue ParmVar 0x14d8161a0 'out' 'char *'
|         `-ImplicitCastExpr 0x14e90eab8 <col:18> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x14e90ea80 <col:18> 'char *' lvalue Var 0x14d816420 'outStart' 'char *'
|-FunctionDecl 0x14e90bd00 <line:20:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x14e90be00 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x14e90be68 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x14e90bed0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14e90bda8 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x14e90e3f8 <line:32:9> col:9 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x14e90e4f8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14e90e560 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x14e90e5c8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14e90e4a0 <<invalid sloc>> Implicit 900
