TranslationUnitDecl 0x156855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1568564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156855bd0 '__int128'
|-TypedefDecl 0x156856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156855bf0 'unsigned __int128'
|-TypedefDecl 0x156926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x156926000 'struct __NSConstantString_tag'
|   `-Record 0x156856580 '__NSConstantString_tag'
|-TypedefDecl 0x156926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156855d90 '__SVInt8_t'
|-TypedefDecl 0x156926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156855db0 '__SVInt16_t'
|-TypedefDecl 0x156926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156855dd0 '__SVInt32_t'
|-TypedefDecl 0x1569263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156855df0 '__SVInt64_t'
|-TypedefDecl 0x156926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156855e10 '__SVUint8_t'
|-TypedefDecl 0x1569264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156855e30 '__SVUint16_t'
|-TypedefDecl 0x156926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156855e50 '__SVUint32_t'
|-TypedefDecl 0x156926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156855e70 '__SVUint64_t'
|-TypedefDecl 0x1569265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156855e90 '__SVFloat16_t'
|-TypedefDecl 0x156926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1569266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156855ed0 '__SVFloat64_t'
|-TypedefDecl 0x156926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x156926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1569267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x156926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1569268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x156926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x156926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1569269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x156926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x156926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x156926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x156926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x156926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x156926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156856090 '__clang_svint8x3_t'
|-TypedefDecl 0x156926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1568560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x156926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1568560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x156926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1568560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x156926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x156926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x156926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x156926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x156926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x156927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1568561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x156927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1568561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1569278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1568561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x156927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1569279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156856230 '__clang_svint16x4_t'
|-TypedefDecl 0x156927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156856250 '__clang_svint32x4_t'
|-TypedefDecl 0x156927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156856270 '__clang_svint64x4_t'
|-TypedefDecl 0x156927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x156927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1568562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x156927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1568562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x156927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1568562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x156927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x156927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x156927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x156927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x156927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156856390 '__SVBool_t'
|-TypedefDecl 0x156927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1568563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x156927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1568563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x156927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1568563f0 '__SVCount_t'
|-TypedefDecl 0x156927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x156927fb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-TypedefDecl 0x156928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x156927fb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
`-FunctionDecl 0x156940a80 <dataset_diviso_filec/func12500_vuln.c:1:1, line:62:1> line:1:6 base64_encode_xmlrpc 'void (struct buffer_st *, const char *, int)'
  |-ParmVarDecl 0x156928648 <col:27, col:45> col:45 used b 'struct buffer_st *'
  |-ParmVarDecl 0x1569286c8 <col:48, col:60> col:60 used source 'const char *'
  |-ParmVarDecl 0x156928748 <col:68, col:72> col:72 used length 'int'
  `-CompoundStmt 0x156945d98 <line:2:1, line:62:1>
    |-DeclStmt 0x156940cc0 <line:3:3, col:20>
    | |-VarDecl 0x156940ba0 <col:3, col:7> col:7 used i 'int'
    | `-VarDecl 0x156940c20 <col:3, col:19> col:10 used hiteof 'int' cinit
    |   `-IntegerLiteral 0x156940c88 <col:19> 'int' 0
    |-DeclStmt 0x156940d78 <line:4:3, col:17>
    | `-VarDecl 0x156940cf0 <col:3, col:16> col:7 used offset 'int' cinit
    |   `-IntegerLiteral 0x156940d58 <col:16> 'int' 0
    |-DeclStmt 0x156940e10 <line:5:3, col:11>
    | `-VarDecl 0x156940da8 <col:3, col:7> col:7 used olen 'int'
    |-BinaryOperator 0x156940e68 <line:7:3, col:10> 'int' '='
    | |-DeclRefExpr 0x156940e28 <col:3> 'int' lvalue Var 0x156940da8 'olen' 'int'
    | `-IntegerLiteral 0x156940e48 <col:10> 'int' 0
    |-CallExpr 0x156941038 <line:9:3, col:15> 'int'
    | |-ImplicitCastExpr 0x156941020 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x156940fb0 <col:3> 'int ()' Function 0x156940ef8 'buffer_new' 'int ()'
    | `-ImplicitCastExpr 0x156941060 <col:14> 'struct buffer_st *' <LValueToRValue>
    |   `-DeclRefExpr 0x156940fd0 <col:14> 'struct buffer_st *' lvalue ParmVar 0x156928648 'b' 'struct buffer_st *'
    |-ForStmt 0x156941230 <line:13:3, line:16:3>
    | |-BinaryOperator 0x1569410b8 <line:13:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x156941078 <col:8> 'int' lvalue Var 0x156940ba0 'i' 'int'
    | | `-IntegerLiteral 0x156941098 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x156941130 <col:15, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x156941118 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1569410d8 <col:15> 'int' lvalue Var 0x156940ba0 'i' 'int'
    | | `-IntegerLiteral 0x1569410f8 <col:19> 'int' 26
    | |-UnaryOperator 0x156941170 <col:23, col:24> 'int' postfix '++'
    | | `-DeclRefExpr 0x156941150 <col:23> 'int' lvalue Var 0x156940ba0 'i' 'int'
    | `-CompoundStmt 0x156941220 <col:28, line:16:3>
    |-ForStmt 0x156941400 <line:17:3, line:19:3>
    | |-BinaryOperator 0x1569412a8 <line:17:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x156941268 <col:8> 'int' lvalue Var 0x156940ba0 'i' 'int'
    | | `-IntegerLiteral 0x156941288 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x156941320 <col:15, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x156941308 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1569412c8 <col:15> 'int' lvalue Var 0x156940ba0 'i' 'int'
    | | `-IntegerLiteral 0x1569412e8 <col:19> 'int' 10
    | |-UnaryOperator 0x156941360 <col:23, col:24> 'int' postfix '++'
    | | `-DeclRefExpr 0x156941340 <col:23> 'int' lvalue Var 0x156940ba0 'i' 'int'
    | `-CompoundStmt 0x1569413f0 <col:28, line:19:3>
    |-WhileStmt 0x156945cc0 <line:23:3, line:59:3>
    | |-UnaryOperator 0x1569414b0 <line:23:10, col:11> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x156941498 <col:11> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x156941478 <col:11> 'int' lvalue Var 0x156940c20 'hiteof' 'int'
    | `-CompoundStmt 0x156945c88 <col:19, line:59:3>
    |   |-DeclStmt 0x156941708 <line:24:5, col:39>
    |   | |-VarDecl 0x156941578 <col:5, col:27> col:19 used igroup 'unsigned char[3]'
    |   | `-VarDecl 0x156941688 <col:5, col:38> col:30 used ogroup 'unsigned char[4]'
    |   |-DeclStmt 0x156941838 <line:25:5, col:13>
    |   | |-VarDecl 0x156941738 <col:5, col:9> col:9 used c 'int'
    |   | `-VarDecl 0x1569417b8 <col:5, col:12> col:12 used n 'int'
    |   |-BinaryOperator 0x156943478 <line:27:5, col:41> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x1569418d8 <col:5, col:13> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x1569418c0 <col:5> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x156941850 <col:5> 'unsigned char[3]' lvalue Var 0x156941578 'igroup' 'unsigned char[3]'
    |   | | `-IntegerLiteral 0x156941870 <col:12> 'int' 0
    |   | `-BinaryOperator 0x156943458 <col:17, col:41> 'unsigned char' '='
    |   |   |-ArraySubscriptExpr 0x156941950 <col:17, col:25> 'unsigned char' lvalue
    |   |   | |-ImplicitCastExpr 0x156941938 <col:17> 'unsigned char *' <ArrayToPointerDecay>
    |   |   | | `-DeclRefExpr 0x1569418f8 <col:17> 'unsigned char[3]' lvalue Var 0x156941578 'igroup' 'unsigned char[3]'
    |   |   | `-IntegerLiteral 0x156941918 <col:24> 'int' 1
    |   |   `-BinaryOperator 0x156943438 <col:29, col:41> 'unsigned char' '='
    |   |     |-ArraySubscriptExpr 0x1569419c8 <col:29, col:37> 'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1569419b0 <col:29> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | | `-DeclRefExpr 0x156941970 <col:29> 'unsigned char[3]' lvalue Var 0x156941578 'igroup' 'unsigned char[3]'
    |   |     | `-IntegerLiteral 0x156941990 <col:36> 'int' 2
    |   |     `-ImplicitCastExpr 0x156943420 <col:41> 'unsigned char' <IntegralCast>
    |   |       `-IntegerLiteral 0x156943400 <col:41> 'int' 0
    |   |-ForStmt 0x1569439e8 <line:28:5, line:36:5>
    |   | |-BinaryOperator 0x1569434d8 <line:28:10, col:14> 'int' '='
    |   | | |-DeclRefExpr 0x156943498 <col:10> 'int' lvalue Var 0x1569417b8 'n' 'int'
    |   | | `-IntegerLiteral 0x1569434b8 <col:14> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x156943550 <col:17, col:21> 'int' '<'
    |   | | |-ImplicitCastExpr 0x156943538 <col:17> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1569434f8 <col:17> 'int' lvalue Var 0x1569417b8 'n' 'int'
    |   | | `-IntegerLiteral 0x156943518 <col:21> 'int' 3
    |   | |-UnaryOperator 0x156943590 <col:24, col:25> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x156943570 <col:24> 'int' lvalue Var 0x1569417b8 'n' 'int'
    |   | `-CompoundStmt 0x1569439b8 <col:29, line:36:5>
    |   |   |-BinaryOperator 0x156943668 <line:29:7, col:21> 'int' '='
    |   |   | |-DeclRefExpr 0x1569435a8 <col:7> 'int' lvalue Var 0x156941738 'c' 'int'
    |   |   | `-ImplicitCastExpr 0x156943650 <col:11, col:21> 'int' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x156943638 <col:11, col:21> 'char' <LValueToRValue>
    |   |   |     `-UnaryOperator 0x156943620 <col:11, col:21> 'const char' lvalue prefix '*' cannot overflow
    |   |   |       `-ParenExpr 0x156943600 <col:12, col:21> 'const char *'
    |   |   |         `-UnaryOperator 0x1569435e8 <col:13, col:19> 'const char *' postfix '++'
    |   |   |           `-DeclRefExpr 0x1569435c8 <col:13> 'const char *' lvalue ParmVar 0x1569286c8 'source' 'const char *'
    |   |   |-UnaryOperator 0x1569436a8 <line:30:7, col:13> 'int' postfix '++'
    |   |   | `-DeclRefExpr 0x156943688 <col:7> 'int' lvalue Var 0x156940cf0 'offset' 'int'
    |   |   |-IfStmt 0x156943870 <line:31:7, line:34:7>
    |   |   | |-BinaryOperator 0x1569437c8 <line:31:11, col:40> 'int' '||'
    |   |   | | |-BinaryOperator 0x156943730 <col:11, col:20> 'int' '>'
    |   |   | | | |-ImplicitCastExpr 0x156943700 <col:11> 'int' <LValueToRValue>
    |   |   | | | | `-DeclRefExpr 0x1569436c0 <col:11> 'int' lvalue Var 0x156940cf0 'offset' 'int'
    |   |   | | | `-ImplicitCastExpr 0x156943718 <col:20> 'int' <LValueToRValue>
    |   |   | | |   `-DeclRefExpr 0x1569436e0 <col:20> 'int' lvalue ParmVar 0x156928748 'length' 'int'
    |   |   | | `-BinaryOperator 0x1569437a8 <col:30, col:40> 'int' '<='
    |   |   | |   |-ImplicitCastExpr 0x156943790 <col:30> 'int' <LValueToRValue>
    |   |   | |   | `-DeclRefExpr 0x156943750 <col:30> 'int' lvalue Var 0x156940cf0 'offset' 'int'
    |   |   | |   `-IntegerLiteral 0x156943770 <col:40> 'int' 0
    |   |   | `-CompoundStmt 0x156943850 <col:43, line:34:7>
    |   |   |   |-BinaryOperator 0x156943828 <line:32:2, col:11> 'int' '='
    |   |   |   | |-DeclRefExpr 0x1569437e8 <col:2> 'int' lvalue Var 0x156940c20 'hiteof' 'int'
    |   |   |   | `-IntegerLiteral 0x156943808 <col:11> 'int' 1
    |   |   |   `-BreakStmt 0x156943848 <line:33:2>
    |   |   `-BinaryOperator 0x156943998 <line:35:7, col:35> 'unsigned char' '='
    |   |     |-ArraySubscriptExpr 0x156943900 <col:7, col:15> 'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1569438d0 <col:7> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | | `-DeclRefExpr 0x156943890 <col:7> 'unsigned char[3]' lvalue Var 0x156941578 'igroup' 'unsigned char[3]'
    |   |     | `-ImplicitCastExpr 0x1569438e8 <col:14> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1569438b0 <col:14> 'int' lvalue Var 0x1569417b8 'n' 'int'
    |   |     `-CStyleCastExpr 0x156943970 <col:19, col:35> 'unsigned char' <IntegralCast>
    |   |       `-ImplicitCastExpr 0x156943958 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
    |   |         `-DeclRefExpr 0x156943920 <col:35> 'int' lvalue Var 0x156941738 'c' 'int'
    |   `-IfStmt 0x156945c68 <line:37:5, line:58:5>
    |     |-BinaryOperator 0x156943a78 <line:37:9, col:13> 'int' '>'
    |     | |-ImplicitCastExpr 0x156943a60 <col:9> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x156943a20 <col:9> 'int' lvalue Var 0x1569417b8 'n' 'int'
    |     | `-IntegerLiteral 0x156943a40 <col:13> 'int' 0
    |     `-CompoundStmt 0x156945c48 <col:16, line:58:5>
    |       |-IfStmt 0x1569456b8 <line:45:7, line:50:7>
    |       | |-BinaryOperator 0x156945438 <line:45:11, col:15> 'int' '<'
    |       | | |-ImplicitCastExpr 0x156945420 <col:11> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x1569443c8 <col:11> 'int' lvalue Var 0x1569417b8 'n' 'int'
    |       | | `-IntegerLiteral 0x156945400 <col:15> 'int' 3
    |       | `-CompoundStmt 0x156945698 <col:18, line:50:7>
    |       |   |-BinaryOperator 0x156945500 <line:46:2, col:14> 'unsigned char' '='
    |       |   | |-ArraySubscriptExpr 0x1569454b0 <col:2, col:10> 'unsigned char' lvalue
    |       |   | | |-ImplicitCastExpr 0x156945498 <col:2> 'unsigned char *' <ArrayToPointerDecay>
    |       |   | | | `-DeclRefExpr 0x156945458 <col:2> 'unsigned char[4]' lvalue Var 0x156941688 'ogroup' 'unsigned char[4]'
    |       |   | | `-IntegerLiteral 0x156945478 <col:9> 'int' 3
    |       |   | `-ImplicitCastExpr 0x1569454e8 <col:14> 'unsigned char' <IntegralCast>
    |       |   |   `-CharacterLiteral 0x1569454d0 <col:14> 'int' 61
    |       |   `-IfStmt 0x156945678 <line:47:2, line:49:2>
    |       |     |-BinaryOperator 0x156945578 <line:47:6, col:10> 'int' '<'
    |       |     | |-ImplicitCastExpr 0x156945560 <col:6> 'int' <LValueToRValue>
    |       |     | | `-DeclRefExpr 0x156945520 <col:6> 'int' lvalue Var 0x1569417b8 'n' 'int'
    |       |     | `-IntegerLiteral 0x156945540 <col:10> 'int' 2
    |       |     `-CompoundStmt 0x156945660 <col:13, line:49:2>
    |       |       `-BinaryOperator 0x156945640 <line:48:4, col:16> 'unsigned char' '='
    |       |         |-ArraySubscriptExpr 0x1569455f0 <col:4, col:12> 'unsigned char' lvalue
    |       |         | |-ImplicitCastExpr 0x1569455d8 <col:4> 'unsigned char *' <ArrayToPointerDecay>
    |       |         | | `-DeclRefExpr 0x156945598 <col:4> 'unsigned char[4]' lvalue Var 0x156941688 'ogroup' 'unsigned char[4]'
    |       |         | `-IntegerLiteral 0x1569455b8 <col:11> 'int' 2
    |       |         `-ImplicitCastExpr 0x156945628 <col:16> 'unsigned char' <IntegralCast>
    |       |           `-CharacterLiteral 0x156945610 <col:16> 'int' 61
    |       `-ForStmt 0x156945c10 <line:51:7, line:57:7>
    |         |-BinaryOperator 0x156945718 <line:51:12, col:16> 'int' '='
    |         | |-DeclRefExpr 0x1569456d8 <col:12> 'int' lvalue Var 0x156940ba0 'i' 'int'
    |         | `-IntegerLiteral 0x1569456f8 <col:16> 'int' 0
    |         |-<<<NULL>>>
    |         |-BinaryOperator 0x156945790 <col:19, col:23> 'int' '<'
    |         | |-ImplicitCastExpr 0x156945778 <col:19> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x156945738 <col:19> 'int' lvalue Var 0x156940ba0 'i' 'int'
    |         | `-IntegerLiteral 0x156945758 <col:23> 'int' 4
    |         |-UnaryOperator 0x1569457d0 <col:26, col:27> 'int' postfix '++'
    |         | `-DeclRefExpr 0x1569457b0 <col:26> 'int' lvalue Var 0x156940ba0 'i' 'int'
    |         `-CompoundStmt 0x156945bf0 <col:31, line:57:7>
    |           |-CallExpr 0x1569459b0 <line:52:2, col:25> 'int'
    |           | |-ImplicitCastExpr 0x156945998 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |           | | `-DeclRefExpr 0x1569458c8 <col:2> 'int ()' Function 0x156945810 'buffer_add' 'int ()'
    |           | |-ImplicitCastExpr 0x1569459e0 <col:13> 'struct buffer_st *' <LValueToRValue>
    |           | | `-DeclRefExpr 0x1569458e8 <col:13> 'struct buffer_st *' lvalue ParmVar 0x156928648 'b' 'struct buffer_st *'
    |           | `-ImplicitCastExpr 0x156945a10 <col:16, col:24> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x1569459f8 <col:16, col:24> 'unsigned char' <LValueToRValue>
    |           |     `-ArraySubscriptExpr 0x156945978 <col:16, col:24> 'unsigned char' lvalue
    |           |       |-ImplicitCastExpr 0x156945948 <col:16> 'unsigned char *' <ArrayToPointerDecay>
    |           |       | `-DeclRefExpr 0x156945908 <col:16> 'unsigned char[4]' lvalue Var 0x156941688 'ogroup' 'unsigned char[4]'
    |           |       `-ImplicitCastExpr 0x156945960 <col:23> 'int' <LValueToRValue>
    |           |         `-DeclRefExpr 0x156945928 <col:23> 'int' lvalue Var 0x156940ba0 'i' 'int'
    |           `-IfStmt 0x156945bd0 <line:53:2, line:56:2>
    |             |-UnaryOperator 0x156945ae8 <line:53:6, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    |             | `-ParenExpr 0x156945ac8 <col:7, col:22> '<dependent type>' contains-errors
    |             |   `-BinaryOperator 0x156945aa8 <col:8, col:20> '<dependent type>' contains-errors '%'
    |             |     |-RecoveryExpr 0x156945a60 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |             |     | `-DeclRefExpr 0x156945a28 <col:8> 'struct buffer_st *' lvalue ParmVar 0x156928648 'b' 'struct buffer_st *'
    |             |     `-IntegerLiteral 0x156945a88 <col:20> 'int' 72
    |             `-CompoundStmt 0x156945bb8 <col:25, line:56:2>
    |               `-CallExpr 0x156945b70 <line:55:4, col:22> 'int'
    |                 |-ImplicitCastExpr 0x156945b58 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |                 | `-DeclRefExpr 0x156945b00 <col:4> 'int ()' Function 0x156945810 'buffer_add' 'int ()'
    |                 |-ImplicitCastExpr 0x156945ba0 <col:15> 'struct buffer_st *' <LValueToRValue>
    |                 | `-DeclRefExpr 0x156945b20 <col:15> 'struct buffer_st *' lvalue ParmVar 0x156928648 'b' 'struct buffer_st *'
    |                 `-CharacterLiteral 0x156945b40 <col:18> 'int' 10
    `-CallExpr 0x156945d50 <line:61:3, col:21> 'int'
      |-ImplicitCastExpr 0x156945d38 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x156945ce0 <col:3> 'int ()' Function 0x156945810 'buffer_add' 'int ()'
      |-ImplicitCastExpr 0x156945d80 <col:14> 'struct buffer_st *' <LValueToRValue>
      | `-DeclRefExpr 0x156945d00 <col:14> 'struct buffer_st *' lvalue ParmVar 0x156928648 'b' 'struct buffer_st *'
      `-CharacterLiteral 0x156945d20 <col:17> 'int' 10
