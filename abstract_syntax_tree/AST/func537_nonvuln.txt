TranslationUnitDecl 0x13a029608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a02a4b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a029bd0 '__int128'
|-TypedefDecl 0x13a02a528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a029bf0 'unsigned __int128'
|-TypedefDecl 0x13a81dc30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a81da00 'struct __NSConstantString_tag'
|   `-Record 0x13a02a580 '__NSConstantString_tag'
|-TypedefDecl 0x13a81dc98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a029d90 '__SVInt8_t'
|-TypedefDecl 0x13a81dd00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a029db0 '__SVInt16_t'
|-TypedefDecl 0x13a81dd68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a029dd0 '__SVInt32_t'
|-TypedefDecl 0x13a81ddd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a029df0 '__SVInt64_t'
|-TypedefDecl 0x13a81de38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a029e10 '__SVUint8_t'
|-TypedefDecl 0x13a81dea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a029e30 '__SVUint16_t'
|-TypedefDecl 0x13a81df08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a029e50 '__SVUint32_t'
|-TypedefDecl 0x13a81df70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a029e70 '__SVUint64_t'
|-TypedefDecl 0x13a81dfd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a029e90 '__SVFloat16_t'
|-TypedefDecl 0x13a81e040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a029eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a81e0a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a029ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a81e110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a029ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a81e178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a029f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a81e1e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a029f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a81e248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a029f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a81e2b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a029f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a81e318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a029f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a81e380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a029fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a81e3e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a029fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a81e450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a029ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a81e4b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a02a010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a81e520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a02a030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a81e588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a02a050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a81e5f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a02a070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a81e658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a02a090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a81e6c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a02a0b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a81e728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a02a0d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a81e790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a02a0f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a81e7f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a02a110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a81e860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a02a130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a81e8c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a02a150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a81e930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a02a170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a81e998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a02a190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a82fa00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a02a1b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a82fa68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a02a1d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a82fad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a02a1f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a82fb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a02a210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a82fba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a02a230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a82fc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a02a250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a82fc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a02a270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a82fcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a02a290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a82fd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a02a2b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a82fda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a02a2d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a82fe10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a02a2f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a82fe78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a02a310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a82fee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a02a330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a82ff48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a02a350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a82ffb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a02a370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a830018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a02a390 '__SVBool_t'
|-TypedefDecl 0x13a830080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a02a3b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a8300e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a02a3d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a830150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a02a3f0 '__SVCount_t'
|-TypedefDecl 0x13a8301f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a8301b0 'char *'
|   `-BuiltinType 0x13a0296b0 'char'
|-TypedefDecl 0x13a830268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a8301b0 'char *'
|   `-BuiltinType 0x13a0296b0 'char'
`-FunctionDecl 0x13a830958 <dataset_diviso_filec/func537_nonvuln.c:1:1, line:29:1> line:1:12 platform_drv_probe 'int (struct device *)' static
  |-ParmVarDecl 0x13a830848 <col:31, col:46> col:46 used _dev 'struct device *'
  `-CompoundStmt 0x13a0f7448 <line:2:1, line:29:1>
    |-DeclStmt 0x13a853c10 <line:3:2, col:64>
    | |-RecordDecl 0x13a853850 <col:2, col:9> col:9 struct platform_driver
    | `-VarDecl 0x13a8539b8 <col:2, col:63> col:26 used drv 'struct platform_driver *' cinit
    |   `-CallExpr 0x13a853bd0 <col:32, col:63> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13a853b50 <col:32> 'int ()' Function 0x13a853a98 'to_platform_driver' 'int ()'
    |     `-RecoveryExpr 0x13a853ba8 <col:51, col:57> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13a853b70 <col:51> 'struct device *' lvalue ParmVar 0x13a830848 '_dev' 'struct device *'
    |-DeclStmt 0x13a853fd8 <line:4:2, col:56>
    | |-RecordDecl 0x13a853c28 <col:2, col:9> col:9 struct platform_device
    | `-VarDecl 0x13a853d98 <col:2, col:55> col:26 used dev 'struct platform_device *' cinit
    |   `-ImplicitCastExpr 0x13a853fa8 <col:32, col:55> 'struct platform_device *' <IntegralToPointer>
    |     `-CallExpr 0x13a853f68 <col:32, col:55> 'int'
    |       |-ImplicitCastExpr 0x13a853f50 <col:32> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13a853ee0 <col:32> 'int ()' Function 0x13a853e28 'to_platform_device' 'int ()'
    |       `-ImplicitCastExpr 0x13a853f90 <col:51> 'struct device *' <LValueToRValue>
    |         `-DeclRefExpr 0x13a853f00 <col:51> 'struct device *' lvalue ParmVar 0x13a830848 '_dev' 'struct device *'
    |-DeclStmt 0x13a854070 <line:5:2, col:9>
    | `-VarDecl 0x13a854008 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x13a8542c0 <line:7:2, col:48> 'int' contains-errors '='
    | |-DeclRefExpr 0x13a854088 <col:2> 'int' lvalue Var 0x13a854008 'ret' 'int'
    | `-CallExpr 0x13a854290 <col:8, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13a854188 <col:8> 'int ()' Function 0x13a8540d0 'of_clk_set_defaults' 'int ()'
    |   |-RecoveryExpr 0x13a8541e0 <col:28, col:34> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x13a8541a8 <col:28> 'struct device *' lvalue ParmVar 0x13a830848 '_dev' 'struct device *'
    |   `-RecoveryExpr 0x13a854270 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13a8543a0 <line:8:2, line:9:10>
    | |-BinaryOperator 0x13a854338 <line:8:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x13a854320 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13a8542e0 <col:6> 'int' lvalue Var 0x13a854008 'ret' 'int'
    | | `-IntegerLiteral 0x13a854300 <col:12> 'int' 0
    | `-ReturnStmt 0x13a854390 <line:9:3, col:10>
    |   `-ImplicitCastExpr 0x13a854378 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13a854358 <col:10> 'int' lvalue Var 0x13a854008 'ret' 'int'
    |-BinaryOperator 0x13a8545b8 <line:11:2, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x13a8543c0 <col:2> 'int' lvalue Var 0x13a854008 'ret' 'int'
    | `-CallExpr 0x13a854588 <col:8, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13a8544c0 <col:8> 'int ()' Function 0x13a854408 'dev_pm_domain_attach' 'int ()'
    |   |-DeclRefExpr 0x13a8544e0 <col:29> 'struct device *' lvalue ParmVar 0x13a830848 '_dev' 'struct device *'
    |   `-RecoveryExpr 0x13a854568 <col:35> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13a0f6f10 <line:12:2, line:21:2>
    | |-BinaryOperator 0x13a8546b0 <line:12:6, col:14> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x13a8545d8 <col:6> 'int' lvalue Var 0x13a854008 'ret' 'int'
    | | `-UnaryOperator 0x13a854698 <col:13, col:14> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |   `-ImplicitCastExpr 0x13a854680 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x13a854660 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13a0f6ef8 <col:28, line:21:2>
    |   `-IfStmt 0x13a0f6ec8 <line:13:3, line:20:3> has_else
    |     |-RecoveryExpr 0x13a854708 <line:13:7, col:12> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x13a8546d0 <col:7> 'struct platform_driver *' contains-errors lvalue Var 0x13a8539b8 'drv' 'struct platform_driver *'
    |     |-CompoundStmt 0x13a0f6e30 <col:19, line:17:3>
    |     | |-BinaryOperator 0x13a0f6c00 <line:14:4, col:24> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x13a854730 <col:4> 'int' lvalue Var 0x13a854008 'ret' 'int'
    |     | | `-CallExpr 0x13a8547d0 <col:10, col:24> '<dependent type>' contains-errors
    |     | |   |-RecoveryExpr 0x13a854788 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |     | |   | `-DeclRefExpr 0x13a854750 <col:10> 'struct platform_driver *' contains-errors lvalue Var 0x13a8539b8 'drv' 'struct platform_driver *'
    |     | |   `-DeclRefExpr 0x13a8547b0 <col:21> 'struct platform_device *' lvalue Var 0x13a853d98 'dev' 'struct platform_device *'
    |     | `-IfStmt 0x13a0f6e10 <line:15:4, line:16:36>
    |     |   |-ImplicitCastExpr 0x13a0f6c40 <line:15:8> 'int' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x13a0f6c20 <col:8> 'int' lvalue Var 0x13a854008 'ret' 'int'
    |     |   `-CallExpr 0x13a0f6de0 <line:16:5, col:36> '<dependent type>' contains-errors
    |     |     |-DeclRefExpr 0x13a0f6d38 <col:5> 'int ()' Function 0x13a0f6c80 'dev_pm_domain_detach' 'int ()'
    |     |     |-DeclRefExpr 0x13a0f6d58 <col:26> 'struct device *' lvalue ParmVar 0x13a830848 '_dev' 'struct device *'
    |     |     `-RecoveryExpr 0x13a0f6dc0 <col:32> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x13a0f6eb0 <line:17:10, line:20:3>
    |       `-BinaryOperator 0x13a0f6e90 <line:19:4, col:10> 'int' '='
    |         |-DeclRefExpr 0x13a0f6e50 <col:4> 'int' lvalue Var 0x13a854008 'ret' 'int'
    |         `-IntegerLiteral 0x13a0f6e70 <col:10> 'int' 0
    |-IfStmt 0x13a0f73e0 <line:23:2, line:26:2>
    | |-BinaryOperator 0x13a0f70a8 <line:23:6, col:45> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x13a0f6f68 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x13a0f6f30 <col:6> 'struct platform_driver *' contains-errors lvalue Var 0x13a8539b8 'drv' 'struct platform_driver *'
    | | `-BinaryOperator 0x13a0f7088 <col:37, col:45> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x13a0f6f90 <col:37> 'int' lvalue Var 0x13a854008 'ret' 'int'
    | |   `-UnaryOperator 0x13a0f7070 <col:44, col:45> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |     `-ImplicitCastExpr 0x13a0f7058 <col:45> '<dependent type>' contains-errors <LValueToRValue>
    | |       `-RecoveryExpr 0x13a0f7038 <col:45> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13a0f73c0 <col:59, line:26:2>
    |   |-CallExpr 0x13a0f7268 <line:24:3, col:23> 'int'
    |   | |-ImplicitCastExpr 0x13a0f7250 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13a0f71a8 <col:3> 'int ()' Function 0x13a0f70f0 'dev_warn' 'int ()'
    |   | |-ImplicitCastExpr 0x13a0f7298 <col:12> 'struct device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13a0f71c8 <col:12> 'struct device *' lvalue ParmVar 0x13a830848 '_dev' 'struct device *'
    |   | `-ImplicitCastExpr 0x13a0f72b0 <col:18> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x13a0f7230 <col:18> 'char[4]' lvalue "STR"
    |   `-BinaryOperator 0x13a0f73a0 <line:25:3, col:10> 'int' contains-errors '='
    |     |-DeclRefExpr 0x13a0f72c8 <col:3> 'int' lvalue Var 0x13a854008 'ret' 'int'
    |     `-UnaryOperator 0x13a0f7388 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x13a0f7370 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x13a0f7350 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13a0f7438 <line:28:2, col:9>
      `-ImplicitCastExpr 0x13a0f7420 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13a0f7400 <col:9> 'int' lvalue Var 0x13a854008 'ret' 'int'
