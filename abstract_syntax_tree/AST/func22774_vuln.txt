TranslationUnitDecl 0x158055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1580564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158055bd0 '__int128'
|-TypedefDecl 0x158056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158055bf0 'unsigned __int128'
|-TypedefDecl 0x15000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15000bc00 'struct __NSConstantString_tag'
|   `-Record 0x158056580 '__NSConstantString_tag'
|-TypedefDecl 0x15000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158055d90 '__SVInt8_t'
|-TypedefDecl 0x15000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158055db0 '__SVInt16_t'
|-TypedefDecl 0x15000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158055dd0 '__SVInt32_t'
|-TypedefDecl 0x15000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158055df0 '__SVInt64_t'
|-TypedefDecl 0x15000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158055e10 '__SVUint8_t'
|-TypedefDecl 0x15000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158055e30 '__SVUint16_t'
|-TypedefDecl 0x15000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158055e50 '__SVUint32_t'
|-TypedefDecl 0x15000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158055e70 '__SVUint64_t'
|-TypedefDecl 0x15000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158055e90 '__SVFloat16_t'
|-TypedefDecl 0x15000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1580560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1580560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1580560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1580561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1580561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1580561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1580562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1580562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1580562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158056390 '__SVBool_t'
|-TypedefDecl 0x15000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1580563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1580563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1580563f0 '__SVCount_t'
|-TypedefDecl 0x15000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
|-TypedefDecl 0x15000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
|-FunctionDecl 0x15000de88 <dataset_diviso_filec/func22774_vuln.c:1:1, line:59:1> line:1:1 invalid parse_rfc1123_time 'int (const char *, int *)'
| |-ParmVarDecl 0x15000dcd8 <col:20, col:32> col:32 used buf 'const char *'
| |-ParmVarDecl 0x15000dda8 <col:37, col:45> col:45 invalid t 'int *'
| `-CompoundStmt 0x158125278 <line:2:1, line:59:1>
|   |-DeclStmt 0x150027528 <line:3:3, col:15>
|   | |-RecordDecl 0x15000df40 <col:3, col:10> col:10 struct tm
|   | `-VarDecl 0x15000e038 <col:3, col:13> col:13 referenced invalid tm 'struct tm'
|   |-DeclStmt 0x150027648 <line:4:3, col:16>
|   | `-VarDecl 0x1500275e0 <col:3, col:15> col:8 used month 'char[4]'
|   |-DeclStmt 0x150027728 <line:5:3, col:18>
|   | `-VarDecl 0x1500276c0 <col:3, col:17> col:8 used weekday 'char[4]'
|   |-DeclStmt 0x150027858 <line:6:3, col:11>
|   | |-VarDecl 0x150027758 <col:3, col:7> col:7 used i 'int'
|   | `-VarDecl 0x1500277d8 <col:3, col:10> col:10 used m 'int'
|   |-DeclStmt 0x150027b20 <line:7:3, col:53>
|   | |-VarDecl 0x150027888 <col:3, col:12> col:12 used tm_mday 'unsigned int'
|   | |-VarDecl 0x150027908 <col:3, col:21> col:21 used tm_year 'unsigned int'
|   | |-VarDecl 0x150027988 <col:3, col:30> col:30 used tm_hour 'unsigned int'
|   | |-VarDecl 0x150027a08 <col:3, col:39> col:39 used tm_min 'unsigned int'
|   | `-VarDecl 0x150027a88 <col:3, col:47> col:47 used tm_sec 'unsigned int'
|   |-IfStmt 0x150027f68 <line:9:3, line:10:13>
|   | |-BinaryOperator 0x150027f00 <line:9:7, col:22> 'int' contains-errors '!='
|   | | |-CallExpr 0x150027ea0 <col:7, col:17> 'unsigned long'
|   | | | |-ImplicitCastExpr 0x150027e88 <col:7> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x150027ce8 <col:7> 'unsigned long (const char *)' Function 0x150027b78 'strlen' 'unsigned long (const char *)'
|   | | | `-ImplicitCastExpr 0x150027ec8 <col:14> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x150027d08 <col:14> 'const char *' lvalue ParmVar 0x15000dcd8 'buf' 'const char *'
|   | | `-RecoveryExpr 0x150027ee0 <col:22> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x150027f58 <line:10:5, col:13>
|   |   `-UnaryOperator 0x150027f40 <col:12, col:13> 'int' prefix '-'
|   |     `-IntegerLiteral 0x150027f20 <col:13> 'int' 1
|   |-CallExpr 0x150028300 <line:11:3, col:28> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x150028228 <col:3> 'void *(void *, int, unsigned long)' Function 0x150027fd8 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x150028268 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x150028248 <col:11> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x150028280 <col:15> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1500282e0 <col:18, col:27> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x1500282c0 <col:24, col:27> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x1500282a0 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15002a600 <line:12:3, line:19:3>
|   | |-BinaryOperator 0x150029fe0 <line:12:7, line:14:34> 'int' '<'
|   | | |-CallExpr 0x150029ef8 <line:12:7, line:14:30> 'int'
|   | | | |-ImplicitCastExpr 0x150029ee0 <line:12:7> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x150029cb8 <col:7> 'int ()' Function 0x150029c00 'tor_sscanf' 'int ()'
|   | | | |-ImplicitCastExpr 0x150029f60 <col:18> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x150029cd8 <col:18> 'const char *' lvalue ParmVar 0x15000dcd8 'buf' 'const char *'
|   | | | |-ImplicitCastExpr 0x150029f78 <col:23> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x150029cf8 <col:23> 'char[4]' lvalue "STR"
|   | | | |-ImplicitCastExpr 0x150029f90 <col:30> 'char *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x150029d18 <col:30> 'char[4]' lvalue Var 0x1500276c0 'weekday' 'char[4]'
|   | | | |-UnaryOperator 0x150029d90 <line:13:14, col:15> 'unsigned int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x150029d38 <col:15> 'unsigned int' lvalue Var 0x150027888 'tm_mday' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x150029fa8 <col:24> 'char *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x150029da8 <col:24> 'char[4]' lvalue Var 0x1500275e0 'month' 'char[4]'
|   | | | |-UnaryOperator 0x150029de8 <col:31, col:32> 'unsigned int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x150029dc8 <col:32> 'unsigned int' lvalue Var 0x150027908 'tm_year' 'unsigned int'
|   | | | |-UnaryOperator 0x150029e20 <col:41, col:42> 'unsigned int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x150029e00 <col:42> 'unsigned int' lvalue Var 0x150027988 'tm_hour' 'unsigned int'
|   | | | |-UnaryOperator 0x150029e58 <line:14:14, col:15> 'unsigned int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x150029e38 <col:15> 'unsigned int' lvalue Var 0x150027a08 'tm_min' 'unsigned int'
|   | | | `-UnaryOperator 0x150029e90 <col:23, col:24> 'unsigned int *' prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x150029e70 <col:24> 'unsigned int' lvalue Var 0x150027a88 'tm_sec' 'unsigned int'
|   | | `-IntegerLiteral 0x150029fc0 <col:34> 'int' 7
|   | `-CompoundStmt 0x15002a5d0 <col:37, line:19:3>
|   |   |-DeclStmt 0x15002a210 <line:15:5, col:33>
|   |   | `-VarDecl 0x15002a018 <col:5, col:32> col:11 used esc 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x15002a1f8 <col:17, col:32> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x15002a1b8 <col:17, col:32> 'int'
|   |   |       |-ImplicitCastExpr 0x15002a1a0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x15002a160 <col:17> 'int ()' Function 0x15002a0a8 'esc_for_log' 'int ()'
|   |   |       `-ImplicitCastExpr 0x15002a1e0 <col:29> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x15002a180 <col:29> 'const char *' lvalue ParmVar 0x15000dcd8 'buf' 'const char *'
|   |   |-CallExpr 0x15002a3d8 <line:16:5, col:36> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15002a308 <col:5> 'int ()' Function 0x15002a250 'log_warn' 'int ()'
|   |   | |-RecoveryExpr 0x15002a3b8 <col:14> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x15002a340 <col:26> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x15002a360 <col:33> 'char *' lvalue Var 0x15002a018 'esc' 'char *'
|   |   |-CallExpr 0x15002a548 <line:17:5, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x15002a530 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15002a4f0 <col:5> 'int ()' Function 0x15002a438 'tor_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x15002a570 <col:14> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15002a510 <col:14> 'char *' lvalue Var 0x15002a018 'esc' 'char *'
|   |   `-ReturnStmt 0x15002a5c0 <line:18:5, col:13>
|   |     `-UnaryOperator 0x15002a5a8 <col:12, col:13> 'int' prefix '-'
|   |       `-IntegerLiteral 0x15002a588 <col:13> 'int' 1
|   |-IfStmt 0x1581226d0 <line:20:3, line:26:3>
|   | |-BinaryOperator 0x15002a950 <line:20:7, line:21:16> 'int' '||'
|   | | |-BinaryOperator 0x15002a8a0 <line:20:7, col:63> 'int' '||'
|   | | | |-BinaryOperator 0x15002a7f0 <col:7, col:48> 'int' '||'
|   | | | | |-BinaryOperator 0x15002a740 <col:7, col:32> 'int' '||'
|   | | | | | |-BinaryOperator 0x15002a690 <col:7, col:17> 'int' '<'
|   | | | | | | |-ImplicitCastExpr 0x15002a660 <col:7> 'unsigned int' <LValueToRValue>
|   | | | | | | | `-DeclRefExpr 0x15002a620 <col:7> 'unsigned int' lvalue Var 0x150027888 'tm_mday' 'unsigned int'
|   | | | | | | `-ImplicitCastExpr 0x15002a678 <col:17> 'unsigned int' <IntegralCast>
|   | | | | | |   `-IntegerLiteral 0x15002a640 <col:17> 'int' 1
|   | | | | | `-BinaryOperator 0x15002a720 <col:22, col:32> 'int' '>'
|   | | | | |   |-ImplicitCastExpr 0x15002a6f0 <col:22> 'unsigned int' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x15002a6b0 <col:22> 'unsigned int' lvalue Var 0x150027888 'tm_mday' 'unsigned int'
|   | | | | |   `-ImplicitCastExpr 0x15002a708 <col:32> 'unsigned int' <IntegralCast>
|   | | | | |     `-IntegerLiteral 0x15002a6d0 <col:32> 'int' 31
|   | | | | `-BinaryOperator 0x15002a7d0 <col:38, col:48> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x15002a7a0 <col:38> 'unsigned int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x15002a760 <col:38> 'unsigned int' lvalue Var 0x150027988 'tm_hour' 'unsigned int'
|   | | | |   `-ImplicitCastExpr 0x15002a7b8 <col:48> 'unsigned int' <IntegralCast>
|   | | | |     `-IntegerLiteral 0x15002a780 <col:48> 'int' 23
|   | | | `-BinaryOperator 0x15002a880 <col:54, col:63> 'int' '>'
|   | | |   |-ImplicitCastExpr 0x15002a850 <col:54> 'unsigned int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x15002a810 <col:54> 'unsigned int' lvalue Var 0x150027a08 'tm_min' 'unsigned int'
|   | | |   `-ImplicitCastExpr 0x15002a868 <col:63> 'unsigned int' <IntegralCast>
|   | | |     `-IntegerLiteral 0x15002a830 <col:63> 'int' 59
|   | | `-BinaryOperator 0x15002a930 <line:21:7, col:16> 'int' '>'
|   | |   |-ImplicitCastExpr 0x15002a900 <col:7> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x15002a8c0 <col:7> 'unsigned int' lvalue Var 0x150027a88 'tm_sec' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x15002a918 <col:16> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x15002a8e0 <col:16> 'int' 60
|   | `-CompoundStmt 0x1581226a0 <col:20, line:26:3>
|   |   |-DeclStmt 0x15002aaa0 <line:22:5, col:33>
|   |   | `-VarDecl 0x15002a988 <col:5, col:32> col:11 used esc 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x15002aa88 <col:17, col:32> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x15002aa48 <col:17, col:32> 'int'
|   |   |       |-ImplicitCastExpr 0x15002aa30 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x15002a9f0 <col:17> 'int ()' Function 0x15002a0a8 'esc_for_log' 'int ()'
|   |   |       `-ImplicitCastExpr 0x15002aa70 <col:29> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x15002aa10 <col:29> 'const char *' lvalue ParmVar 0x15000dcd8 'buf' 'const char *'
|   |   |-CallExpr 0x15002ab88 <line:23:5, col:36> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15002aab8 <col:5> 'int ()' Function 0x15002a250 'log_warn' 'int ()'
|   |   | |-RecoveryExpr 0x15002ab68 <col:14> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x15002aaf0 <col:26> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x15002ab10 <col:33> 'char *' lvalue Var 0x15002a988 'esc' 'char *'
|   |   |-CallExpr 0x158122618 <line:24:5, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x158122600 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15002abc0 <col:5> 'int ()' Function 0x15002a438 'tor_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x158122640 <col:14> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15002abe0 <col:14> 'char *' lvalue Var 0x15002a988 'esc' 'char *'
|   |   `-ReturnStmt 0x158122690 <line:25:5, col:13>
|   |     `-UnaryOperator 0x158122678 <col:12, col:13> 'int' prefix '-'
|   |       `-IntegerLiteral 0x158122658 <col:13> 'int' 1
|   |-BinaryOperator 0x1581227f8 <line:27:3, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x158122738 <col:3, col:6> '<dependent type>' contains-errors lvalue .tm_mday
|   | | `-RecoveryExpr 0x158122710 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1581226f0 <col:3> 'struct tm' lvalue Var 0x15000e038 'tm' 'struct tm'
|   | `-CStyleCastExpr 0x1581227d0 <col:16, col:21> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1581227b8 <col:21> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x158122780 <col:21> 'unsigned int' lvalue Var 0x150027888 'tm_mday' 'unsigned int'
|   |-BinaryOperator 0x158122920 <line:28:3, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x158122860 <col:3, col:6> '<dependent type>' contains-errors lvalue .tm_year
|   | | `-RecoveryExpr 0x158122838 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x158122818 <col:3> 'struct tm' lvalue Var 0x15000e038 'tm' 'struct tm'
|   | `-CStyleCastExpr 0x1581228f8 <col:16, col:21> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1581228e0 <col:21> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1581228a8 <col:21> 'unsigned int' lvalue Var 0x150027908 'tm_year' 'unsigned int'
|   |-BinaryOperator 0x158122a48 <line:29:3, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x158122988 <col:3, col:6> '<dependent type>' contains-errors lvalue .tm_hour
|   | | `-RecoveryExpr 0x158122960 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x158122940 <col:3> 'struct tm' lvalue Var 0x15000e038 'tm' 'struct tm'
|   | `-CStyleCastExpr 0x158122a20 <col:16, col:21> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x158122a08 <col:21> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1581229d0 <col:21> 'unsigned int' lvalue Var 0x150027988 'tm_hour' 'unsigned int'
|   |-BinaryOperator 0x158122b70 <line:30:3, col:20> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x158122ab0 <col:3, col:6> '<dependent type>' contains-errors lvalue .tm_min
|   | | `-RecoveryExpr 0x158122a88 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x158122a68 <col:3> 'struct tm' lvalue Var 0x15000e038 'tm' 'struct tm'
|   | `-CStyleCastExpr 0x158122b48 <col:15, col:20> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x158122b30 <col:20> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x158122af8 <col:20> 'unsigned int' lvalue Var 0x150027a08 'tm_min' 'unsigned int'
|   |-BinaryOperator 0x158122c98 <line:31:3, col:20> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x158122bd8 <col:3, col:6> '<dependent type>' contains-errors lvalue .tm_sec
|   | | `-RecoveryExpr 0x158122bb0 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x158122b90 <col:3> 'struct tm' lvalue Var 0x15000e038 'tm' 'struct tm'
|   | `-CStyleCastExpr 0x158122c70 <col:15, col:20> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x158122c58 <col:20> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x158122c20 <col:20> 'unsigned int' lvalue Var 0x150027a88 'tm_sec' 'unsigned int'
|   |-BinaryOperator 0x158122d10 <line:33:3, col:8> 'int' '='
|   | |-DeclRefExpr 0x158122cb8 <col:3> 'int' lvalue Var 0x1500277d8 'm' 'int'
|   | `-UnaryOperator 0x158122cf8 <col:7, col:8> 'int' prefix '-'
|   |   `-IntegerLiteral 0x158122cd8 <col:8> 'int' 1
|   |-ForStmt 0x1581231d0 <line:34:3, line:39:3>
|   | |-BinaryOperator 0x158122d70 <line:34:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x158122d30 <col:8> 'int' lvalue Var 0x150027758 'i' 'int'
|   | | `-IntegerLiteral 0x158122d50 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x158122de8 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x158122dd0 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x158122d90 <col:15> 'int' lvalue Var 0x150027758 'i' 'int'
|   | | `-IntegerLiteral 0x158122db0 <col:19> 'int' 12
|   | |-UnaryOperator 0x158122e28 <col:23, col:25> 'int' prefix '++'
|   | | `-DeclRefExpr 0x158122e08 <col:25> 'int' lvalue Var 0x150027758 'i' 'int'
|   | `-CompoundStmt 0x1581231b8 <col:28, line:39:3>
|   |   `-IfStmt 0x158123198 <line:35:5, line:38:5>
|   |     |-RecoveryExpr 0x1581230d8 <line:35:9, col:38> '_Bool' contains-errors
|   |     `-CompoundStmt 0x158123178 <col:41, line:38:5>
|   |       |-BinaryOperator 0x158123150 <line:36:7, col:11> 'int' '='
|   |       | |-DeclRefExpr 0x1581230f8 <col:7> 'int' lvalue Var 0x1500277d8 'm' 'int'
|   |       | `-ImplicitCastExpr 0x158123138 <col:11> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x158123118 <col:11> 'int' lvalue Var 0x150027758 'i' 'int'
|   |       `-BreakStmt 0x158123170 <line:37:7>
|   |-IfStmt 0x158123530 <line:40:3, line:45:3>
|   | |-BinaryOperator 0x158123260 <line:40:7, col:9> 'int' '<'
|   | | |-ImplicitCastExpr 0x158123248 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x158123208 <col:7> 'int' lvalue Var 0x1500277d8 'm' 'int'
|   | | `-IntegerLiteral 0x158123228 <col:9> 'int' 0
|   | `-CompoundStmt 0x158123508 <col:12, line:45:3>
|   |   |-DeclStmt 0x1581233b0 <line:41:5, col:33>
|   |   | `-VarDecl 0x158123298 <col:5, col:32> col:11 used esc 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x158123398 <col:17, col:32> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x158123358 <col:17, col:32> 'int'
|   |   |       |-ImplicitCastExpr 0x158123340 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x158123300 <col:17> 'int ()' Function 0x15002a0a8 'esc_for_log' 'int ()'
|   |   |       `-ImplicitCastExpr 0x158123380 <col:29> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x158123320 <col:29> 'const char *' lvalue ParmVar 0x15000dcd8 'buf' 'const char *'
|   |   |-CallExpr 0x158123480 <line:43:5, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x158123468 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x158123428 <col:5> 'int ()' Function 0x15002a438 'tor_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1581234a8 <col:14> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x158123448 <col:14> 'char *' lvalue Var 0x158123298 'esc' 'char *'
|   |   `-ReturnStmt 0x1581234f8 <line:44:5, col:13>
|   |     `-UnaryOperator 0x1581234e0 <col:12, col:13> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1581234c0 <col:13> 'int' 1
|   |-BinaryOperator 0x158124c00 <line:46:3, col:15> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x158123598 <col:3, col:6> '<dependent type>' contains-errors lvalue .tm_mon
|   | | `-RecoveryExpr 0x158123570 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x158123550 <col:3> 'struct tm' lvalue Var 0x15000e038 'tm' 'struct tm'
|   | `-DeclRefExpr 0x1581235e0 <col:15> 'int' lvalue Var 0x1500277d8 'm' 'int'
|   |-IfStmt 0x158124f78 <line:48:3, line:54:3>
|   | |-BinaryOperator 0x158124ca8 <line:48:7, col:20> 'int' contains-errors '<'
|   | | |-CXXDependentScopeMemberExpr 0x158124c40 <col:7, col:10> '<dependent type>' contains-errors lvalue .tm_year
|   | | | `-RecoveryExpr 0x158124c20 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x158124c88 <col:20> 'int' 1970
|   | `-CompoundStmt 0x158124f50 <col:26, line:54:3>
|   |   |-DeclStmt 0x158124df8 <line:49:5, col:33>
|   |   | `-VarDecl 0x158124ce0 <col:5, col:32> col:11 used esc 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x158124de0 <col:17, col:32> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x158124da0 <col:17, col:32> 'int'
|   |   |       |-ImplicitCastExpr 0x158124d88 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x158124d48 <col:17> 'int ()' Function 0x15002a0a8 'esc_for_log' 'int ()'
|   |   |       `-ImplicitCastExpr 0x158124dc8 <col:29> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x158124d68 <col:29> 'const char *' lvalue ParmVar 0x15000dcd8 'buf' 'const char *'
|   |   |-CallExpr 0x158124ec8 <line:52:5, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x158124eb0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x158124e70 <col:5> 'int ()' Function 0x15002a438 'tor_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x158124ef0 <col:14> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x158124e90 <col:14> 'char *' lvalue Var 0x158124ce0 'esc' 'char *'
|   |   `-ReturnStmt 0x158124f40 <line:53:5, col:13>
|   |     `-UnaryOperator 0x158124f28 <col:12, col:13> 'int' prefix '-'
|   |       `-IntegerLiteral 0x158124f08 <col:13> 'int' 1
|   |-CompoundAssignOperator 0x158125048 <line:55:3, col:17> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x158124fe0 <col:3, col:6> '<dependent type>' contains-errors lvalue .tm_year
|   | | `-RecoveryExpr 0x158124fb8 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x158124f98 <col:3> 'struct tm' lvalue Var 0x15000e038 'tm' 'struct tm'
|   | `-IntegerLiteral 0x158125028 <col:17> 'int' 1900
|   |-BinaryOperator 0x158125228 <line:57:3, col:22> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x1581250b0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x158125098 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x158125078 <col:4> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x158125200 <col:8, col:22> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1581251a8 <col:8> 'int ()' Function 0x1581250f0 'tor_timegm' 'int ()'
|   |   `-UnaryOperator 0x1581251e8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x1581251c8 <col:20> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x158125268 <line:58:3, col:10>
|     `-IntegerLiteral 0x158125248 <col:10> 'int' 0
|-FunctionDecl 0x150027b78 <line:9:7> col:7 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x150027c78 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x150027c20 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x150027fd8 <line:11:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x1500280d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x150028140 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x1500281a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x150028080 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x158122e80 <line:35:10> col:10 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x158122f80 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x158122fe8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x158122f28 <<invalid sloc>> Implicit 887
