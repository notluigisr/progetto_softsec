TranslationUnitDecl 0x11e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e855bd0 '__int128'
|-TypedefDecl 0x11e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e855bf0 'unsigned __int128'
|-TypedefDecl 0x11e926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e926800 'struct __NSConstantString_tag'
|   `-Record 0x11e856580 '__NSConstantString_tag'
|-TypedefDecl 0x11e926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e855d90 '__SVInt8_t'
|-TypedefDecl 0x11e926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e855db0 '__SVInt16_t'
|-TypedefDecl 0x11e926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e855dd0 '__SVInt32_t'
|-TypedefDecl 0x11e926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e855df0 '__SVInt64_t'
|-TypedefDecl 0x11e926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e855e10 '__SVUint8_t'
|-TypedefDecl 0x11e926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e855e30 '__SVUint16_t'
|-TypedefDecl 0x11e926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e855e50 '__SVUint32_t'
|-TypedefDecl 0x11e926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e855e70 '__SVUint64_t'
|-TypedefDecl 0x11e926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e855e90 '__SVFloat16_t'
|-TypedefDecl 0x11e926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e856390 '__SVBool_t'
|-TypedefDecl 0x11e928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e8563f0 '__SVCount_t'
|-TypedefDecl 0x11e9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e9287b0 'char *'
|   `-BuiltinType 0x11e8556b0 'char'
|-TypedefDecl 0x11e928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e9287b0 'char *'
|   `-BuiltinType 0x11e8556b0 'char'
|-FunctionDecl 0x11e928ba8 <dataset_diviso_filec/func19678_vuln.c:1:1, line:68:1> line:1:9 invalid v9fs_list_xattr 'int (int *, const char *, void *, int)'
| |-ParmVarDecl 0x11e928928 <col:25, col:36> col:36 invalid ctx 'int *'
| |-ParmVarDecl 0x11e9289a8 <col:41, col:53> col:53 used path 'const char *'
| |-ParmVarDecl 0x11e928a28 <line:2:25, col:31> col:31 used value 'void *'
| |-ParmVarDecl 0x11e928aa8 <col:38, col:45> col:45 referenced invalid vsize 'int'
| `-CompoundStmt 0x11e944a60 <line:3:1, line:68:1>
|   |-DeclStmt 0x11e928d28 <line:5:5, col:25>
|   | `-VarDecl 0x11e928c88 <col:5, col:20> col:11 used ovalue 'void *' cinit
|   |   `-ImplicitCastExpr 0x11e928d10 <col:20> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x11e928cf0 <col:20> 'void *' lvalue ParmVar 0x11e928a28 'value' 'void *'
|   |-DeclStmt 0x11e928e70 <line:7:5, col:40>
|   | |-VarDecl 0x11e928d70 <col:5, col:11> col:11 used orig_value 'char *'
|   | `-VarDecl 0x11e928df0 <col:5, col:24> col:24 used orig_value_start 'char *'
|   |-DeclStmt 0x11e928fa0 <line:9:5, col:25>
|   | |-VarDecl 0x11e928ea0 <col:5, col:11> col:11 used dirpath 'char *'
|   | `-VarDecl 0x11e928f20 <col:5, col:21> col:21 used name 'char *'
|   |-DeclStmt 0x11e942068 <line:10:5, col:14>
|   | `-VarDecl 0x11e942000 <col:5, col:9> col:9 used dirfd 'int'
|   |-BinaryOperator 0x11e942700 <line:13:5, col:38> 'char *' '='
|   | |-DeclRefExpr 0x11e942080 <col:5> 'char *' lvalue Var 0x11e928ea0 'dirpath' 'char *'
|   | `-ImplicitCastExpr 0x11e9422c8 <col:15, col:38> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x11e942288 <col:15, col:38> 'int'
|   |     |-ImplicitCastExpr 0x11e942270 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x11e942200 <col:15> 'int ()' Function 0x11e942148 'g_path_get_dirname' 'int ()'
|   |     `-ImplicitCastExpr 0x11e9422b0 <col:34> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x11e942220 <col:34> 'const char *' lvalue ParmVar 0x11e9289a8 'path' 'const char *'
|   |-BinaryOperator 0x11e9428b0 <line:14:5, col:48> 'int' contains-errors '='
|   | |-DeclRefExpr 0x11e942720 <col:5> 'int' lvalue Var 0x11e942000 'dirfd' 'int'
|   | `-CallExpr 0x11e942880 <col:13, col:48> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11e942820 <col:13> 'int ()' Function 0x11e942768 'local_opendir_nofollow' 'int ()'
|   |   |-RecoveryExpr 0x11e942840 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x11e942860 <col:41> 'char *' lvalue Var 0x11e928ea0 'dirpath' 'char *'
|   |-CallExpr 0x11e942a08 <line:15:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x11e9429f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11e9429b0 <col:5> 'int ()' Function 0x11e9428f8 'g_free' 'int ()'
|   | `-ImplicitCastExpr 0x11e942a30 <col:12> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x11e9429d0 <col:12> 'char *' lvalue Var 0x11e928ea0 'dirpath' 'char *'
|   |-IfStmt 0x11e942b38 <line:16:5, line:18:5>
|   | |-BinaryOperator 0x11e942ab8 <line:16:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x11e942aa0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e942a48 <col:9> 'int' lvalue Var 0x11e942000 'dirfd' 'int'
|   | | `-UnaryOperator 0x11e942a88 <col:18, col:19> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x11e942a68 <col:19> 'int' 1
|   | `-CompoundStmt 0x11e942b20 <col:22, line:18:5>
|   |   `-ReturnStmt 0x11e942b10 <line:17:9, col:17>
|   |     `-UnaryOperator 0x11e942af8 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x11e942ad8 <col:17> 'int' 1
|   |-BinaryOperator 0x11e942d08 <line:20:5, col:36> 'char *' '='
|   | |-DeclRefExpr 0x11e942b58 <col:5> 'char *' lvalue Var 0x11e928f20 'name' 'char *'
|   | `-ImplicitCastExpr 0x11e942cf0 <col:12, col:36> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x11e942cb0 <col:12, col:36> 'int'
|   |     |-ImplicitCastExpr 0x11e942c98 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x11e942c58 <col:12> 'int ()' Function 0x11e942ba0 'g_path_get_basename' 'int ()'
|   |     `-ImplicitCastExpr 0x11e942cd8 <col:32> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x11e942c78 <col:32> 'const char *' lvalue ParmVar 0x11e9289a8 'path' 'const char *'
|   |-IfStmt 0x11e943a60 <line:22:5, line:26:5>
|   | |-BinaryOperator 0x11e942fc0 <line:22:9, col:22> 'int' contains-errors '<='
|   | | |-RecoveryExpr 0x11e942fa0 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x11e942f60 <col:22> 'int' 0
|   | `-CompoundStmt 0x11e943a38 <col:25, line:26:5>
|   |   |-CallExpr 0x11e943838 <line:23:9, col:20> 'int'
|   |   | |-ImplicitCastExpr 0x11e943820 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x11e942fe0 <col:9> 'int ()' Function 0x11e9428f8 'g_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x11e943860 <col:16> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x11e943800 <col:16> 'char *' lvalue Var 0x11e928f20 'name' 'char *'
|   |   |-CallExpr 0x11e9439b0 <line:24:9, col:35> 'int'
|   |   | |-ImplicitCastExpr 0x11e943998 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x11e943958 <col:9> 'int ()' Function 0x11e9438a0 'close_preserve_errno' 'int ()'
|   |   | `-ImplicitCastExpr 0x11e9439d8 <col:30> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x11e943978 <col:30> 'int' lvalue Var 0x11e942000 'dirfd' 'int'
|   |   `-ReturnStmt 0x11e943a28 <line:25:9, col:16>
|   |     `-RecoveryExpr 0x11e943a08 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11e943c48 <line:29:5, col:36> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x11e943a80 <col:5> 'char *' lvalue Var 0x11e928d70 'orig_value' 'char *'
|   | `-CallExpr 0x11e943c20 <col:18, col:36> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11e943b80 <col:18> 'int ()' Function 0x11e943ac8 'g_malloc' 'int ()'
|   |   `-RecoveryExpr 0x11e943c00 <col:27> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x11e943d40 <line:31:5, col:16> 'int'
|   | |-ImplicitCastExpr 0x11e943d28 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11e943ce8 <col:5> 'int ()' Function 0x11e9428f8 'g_free' 'int ()'
|   | `-ImplicitCastExpr 0x11e943d68 <col:12> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x11e943d08 <col:12> 'char *' lvalue Var 0x11e928f20 'name' 'char *'
|   |-CallExpr 0x11e943dd8 <line:32:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x11e943dc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11e943d80 <col:5> 'int ()' Function 0x11e9438a0 'close_preserve_errno' 'int ()'
|   | `-ImplicitCastExpr 0x11e943e00 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x11e943da0 <col:26> 'int' lvalue Var 0x11e942000 'dirfd' 'int'
|   |-IfStmt 0x11e943eb8 <line:33:5, line:35:5>
|   | |-RecoveryExpr 0x11e943e38 <line:33:9, col:21> '_Bool' contains-errors
|   | `-CompoundStmt 0x11e943ea0 <col:24, line:35:5>
|   |   `-ReturnStmt 0x11e943e90 <line:34:9, col:17>
|   |     `-UnaryOperator 0x11e943e78 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x11e943e58 <col:17> 'int' 1
|   |-BinaryOperator 0x11e943f30 <line:38:5, col:24> 'char *' '='
|   | |-DeclRefExpr 0x11e943ed8 <col:5> 'char *' lvalue Var 0x11e928df0 'orig_value_start' 'char *'
|   | `-ImplicitCastExpr 0x11e943f18 <col:24> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x11e943ef8 <col:24> 'char *' lvalue Var 0x11e928d70 'orig_value' 'char *'
|   |-WhileStmt 0x11e944890 <line:39:5, line:60:5>
|   | |-RecoveryExpr 0x11e943f50 <line:39:12, col:24> '_Bool' contains-errors
|   | `-CompoundStmt 0x11e944868 <col:36, line:60:5>
|   |   |-IfStmt 0x11e9441c8 <line:41:9, line:43:9>
|   |   | |-RecoveryExpr 0x11e944128 <line:41:13, col:14> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x11e9441b0 <col:20, line:43:9>
|   |   |   `-GotoStmt 0x11e944198 <line:42:13, col:18> 'next_entry' 0x11e944148
|   |   |-IfStmt 0x11e9444e8 <line:45:9, line:54:9> has_else
|   |   | |-UnaryOperator 0x11e944220 <line:45:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x11e944208 <col:14> 'void *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x11e9441e8 <col:14> 'void *' lvalue ParmVar 0x11e928a28 'value' 'void *'
|   |   | |-CompoundStmt 0x11e9442d8 <col:21, line:47:9>
|   |   | `-CompoundStmt 0x11e9444d0 <col:16, line:54:9>
|   |   |   `-IfStmt 0x11e944448 <line:49:13, line:51:13>
|   |   |     |-RecoveryExpr 0x11e9443a8 <line:49:17, col:24> '_Bool' contains-errors
|   |   |     `-CompoundStmt 0x11e944430 <col:27, line:51:13>
|   |   |       `-GotoStmt 0x11e944418 <line:50:17, col:22> 'err_out' 0x11e9443c8
|   |   `-LabelStmt 0x11e944828 <line:55:1, col:11> 'next_entry'
|   |     `-NullStmt 0x11e944820 <col:11>
|   |-IfStmt 0x11e944988 <line:61:5, line:63:5>
|   | |-ImplicitCastExpr 0x11e9448d0 <line:61:9> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x11e9448b0 <col:9> 'void *' lvalue ParmVar 0x11e928a28 'value' 'void *'
|   | `-CompoundStmt 0x11e944978 <col:16, line:63:5>
|   `-LabelStmt 0x11e944a40 <line:65:1, line:66:28> 'err_out'
|     `-CallExpr 0x11e944a00 <col:5, col:28> 'int'
|       |-ImplicitCastExpr 0x11e9449e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x11e9449a8 <col:5> 'int ()' Function 0x11e9428f8 'g_free' 'int ()'
|       `-ImplicitCastExpr 0x11e944a28 <col:12> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x11e9449c8 <col:12> 'char *' lvalue Var 0x11e928df0 'orig_value_start' 'char *'
`-FunctionDecl 0x11e944558 <line:57:20> col:20 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x11e944658 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x11e944600 <<invalid sloc>> Implicit 902
