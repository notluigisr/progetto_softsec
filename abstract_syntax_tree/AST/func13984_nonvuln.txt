TranslationUnitDecl 0x129855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1298564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129855bd0 '__int128'
|-TypedefDecl 0x129856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129855bf0 'unsigned __int128'
|-TypedefDecl 0x12a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x129856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129855d90 '__SVInt8_t'
|-TypedefDecl 0x12a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129855db0 '__SVInt16_t'
|-TypedefDecl 0x12a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129855df0 '__SVInt64_t'
|-TypedefDecl 0x12a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129855e10 '__SVUint8_t'
|-TypedefDecl 0x12a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129855e30 '__SVUint16_t'
|-TypedefDecl 0x12a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129855e50 '__SVUint32_t'
|-TypedefDecl 0x12a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129855e70 '__SVUint64_t'
|-TypedefDecl 0x12a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1298560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1298560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1298560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1298561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1298561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1298561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1298562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1298562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1298562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129856390 '__SVBool_t'
|-TypedefDecl 0x12a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1298563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1298563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1298563f0 '__SVCount_t'
|-TypedefDecl 0x12a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-TypedefDecl 0x12a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a00dbb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-FunctionDecl 0x12a0274b8 <dataset_diviso_filec/func13984_nonvuln.c:1:1, line:47:1> line:1:1 invalid parse_enumlist 'int (int *, struct enum_list **)'
| |-ParmVarDecl 0x12a00dd28 <col:16, col:23> col:23 invalid fp 'int *'
| |-ParmVarDecl 0x12a00e378 <col:27, col:46> col:46 used retp 'struct enum_list **'
| `-CompoundStmt 0x12a02c5d8 <line:2:1, line:47:1>
|   |-DeclStmt 0x12a0275f0 <line:3:5, col:25>
|   | `-VarDecl 0x12a027588 <col:5, col:21> col:21 used type 'int' register
|   |-DeclStmt 0x12a027698 <line:4:5, col:36>
|   | `-VarDecl 0x12a027630 <col:5, col:21> col:21 invalid token 'char'
|   |-DeclStmt 0x12a0278f0 <line:5:5, col:45>
|   | |-VarDecl 0x12a027738 <col:5, col:28> col:23 used ep 'struct enum_list *' cinit
|   | | `-RecoveryExpr 0x12a0277b8 <col:28> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x12a027838 <col:5, col:43> col:36 used epp 'struct enum_list **' cinit
|   |   `-UnaryOperator 0x12a0278c0 <col:42, col:43> 'struct enum_list **' contains-errors prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x12a0278a0 <col:43> 'struct enum_list *' contains-errors lvalue Var 0x12a027738 'ep' 'struct enum_list *'
|   |-CallExpr 0x12a027ae8 <line:7:5, col:20> 'int'
|   | |-ImplicitCastExpr 0x12a027ad0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12a027a60 <col:5> 'int ()' Function 0x12a0279a8 'free_enums' 'int ()'
|   | `-ImplicitCastExpr 0x12a027b10 <col:16> 'struct enum_list **' <LValueToRValue>
|   |   `-DeclRefExpr 0x12a027a80 <col:16> 'struct enum_list **' lvalue ParmVar 0x12a00e378 'retp' 'struct enum_list **'
|   |-WhileStmt 0x12a02c380 <line:9:5, line:40:5>
|   | |-RecoveryExpr 0x12a027d10 <line:9:12, col:55> '_Bool' contains-errors
|   | `-CompoundStmt 0x12a02c360 <col:66, line:40:5>
|   |   |-IfStmt 0x12a027dd0 <line:10:9, line:11:13>
|   |   | |-BinaryOperator 0x12a027da8 <line:10:13, col:21> 'int' contains-errors '=='
|   |   | | |-DeclRefExpr 0x12a027d30 <col:13> 'int' lvalue Var 0x12a027588 'type' 'int'
|   |   | | `-RecoveryExpr 0x12a027d88 <col:21> '<dependent type>' contains-errors lvalue
|   |   | `-BreakStmt 0x12a027dc8 <line:11:13>
|   |   `-IfStmt 0x12a02c340 <line:14:9, line:39:9>
|   |     |-BinaryOperator 0x12a027f40 <line:14:13, col:38> 'int' contains-errors '||'
|   |     | |-BinaryOperator 0x12a027ee0 <col:13, col:21> 'int' contains-errors '=='
|   |     | | |-DeclRefExpr 0x12a027df0 <col:13> 'int' lvalue Var 0x12a027588 'type' 'int'
|   |     | | `-RecoveryExpr 0x12a027ec0 <col:21> '<dependent type>' contains-errors lvalue
|   |     | `-BinaryOperator 0x12a027f20 <col:30, col:38> 'int' contains-errors '=='
|   |     |   |-DeclRefExpr 0x12a027e48 <col:30> 'int' lvalue Var 0x12a027588 'type' 'int'
|   |     |   `-RecoveryExpr 0x12a027f00 <col:38> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x12a02c300 <col:50, line:39:9>
|   |       |-BinaryOperator 0x12a02b688 <line:21:13, col:41> '<dependent type>' contains-errors '='
|   |       | |-RecoveryExpr 0x12a02b438 <col:13, col:21> '<dependent type>' contains-errors lvalue
|   |       | | `-ParenExpr 0x12a02b400 <col:13, col:18> 'struct enum_list *' contains-errors lvalue
|   |       | |   `-UnaryOperator 0x12a0283d8 <col:14, col:15> 'struct enum_list *' contains-errors lvalue prefix '*' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x12a0283c0 <col:15> 'struct enum_list **' contains-errors <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x12a0283a0 <col:15> 'struct enum_list **' contains-errors lvalue Var 0x12a027838 'epp' 'struct enum_list **'
|   |       | `-CallExpr 0x12a02b660 <col:29, col:41> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x12a02b608 <col:29> 'char *(const char *)' Function 0x12a02b498 'strdup' 'char *(const char *)'
|   |       |   `-RecoveryExpr 0x12a02b628 <col:36> '<dependent type>' contains-errors lvalue
|   |       |-BinaryOperator 0x12a02b7f0 <line:22:13, col:49> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x12a02b6a8 <col:13> 'int' lvalue Var 0x12a027588 'type' 'int'
|   |       | `-CallExpr 0x12a02b7b8 <col:20, col:49> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x12a02b6c8 <col:20> 'int ()' Function 0x12a027b70 'get_token' 'int ()'
|   |       |   |-RecoveryExpr 0x12a02b6e8 <col:30> '<dependent type>' contains-errors lvalue
|   |       |   |-RecoveryExpr 0x12a02b708 <col:34> '<dependent type>' contains-errors lvalue
|   |       |   `-RecoveryExpr 0x12a02b798 <col:41> '<dependent type>' contains-errors lvalue
|   |       |-IfStmt 0x12a02baa0 <line:23:13, line:26:13>
|   |       | |-BinaryOperator 0x12a02b888 <line:23:17, col:25> 'int' contains-errors '!='
|   |       | | |-DeclRefExpr 0x12a02b810 <col:17> 'int' lvalue Var 0x12a027588 'type' 'int'
|   |       | | `-RecoveryExpr 0x12a02b868 <col:25> '<dependent type>' contains-errors lvalue
|   |       | `-CompoundStmt 0x12a02ba88 <col:36, line:26:13>
|   |       |   `-CallExpr 0x12a02ba50 <line:24:17, col:47> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x12a02b988 <col:17> 'int ()' Function 0x12a02b8d0 'print_error' 'int ()'
|   |       |     |-StringLiteral 0x12a02b9f0 <col:29> 'char[4]' lvalue "STR"
|   |       |     |-RecoveryExpr 0x12a02ba10 <col:36> '<dependent type>' contains-errors lvalue
|   |       |     `-DeclRefExpr 0x12a02ba30 <col:43> 'int' lvalue Var 0x12a027588 'type' 'int'
|   |       |-IfStmt 0x12a02bc50 <line:28:13, line:31:13>
|   |       | |-RecoveryExpr 0x12a02bb60 <line:28:17, col:25> '_Bool' contains-errors
|   |       | `-CompoundStmt 0x12a02bc38 <col:33, line:31:13>
|   |       |   `-CallExpr 0x12a02bc00 <line:29:17, col:47> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x12a02bb80 <col:17> 'int ()' Function 0x12a02b8d0 'print_error' 'int ()'
|   |       |     |-StringLiteral 0x12a02bba0 <col:29> 'char[4]' lvalue "STR"
|   |       |     |-RecoveryExpr 0x12a02bbc0 <col:36> '<dependent type>' contains-errors lvalue
|   |       |     `-DeclRefExpr 0x12a02bbe0 <col:43> 'int' lvalue Var 0x12a027588 'type' 'int'
|   |       |-IfStmt 0x12a02c1d8 <line:34:13, line:37:13>
|   |       | |-RecoveryExpr 0x12a02c0e8 <line:34:17, col:25> '_Bool' contains-errors
|   |       | `-CompoundStmt 0x12a02c1c0 <col:37, line:37:13>
|   |       |   `-CallExpr 0x12a02c188 <line:35:17, col:47> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x12a02c108 <col:17> 'int ()' Function 0x12a02b8d0 'print_error' 'int ()'
|   |       |     |-StringLiteral 0x12a02c128 <col:29> 'char[4]' lvalue "STR"
|   |       |     |-RecoveryExpr 0x12a02c148 <col:36> '<dependent type>' contains-errors lvalue
|   |       |     `-DeclRefExpr 0x12a02c168 <col:43> 'int' lvalue Var 0x12a027588 'type' 'int'
|   |       `-BinaryOperator 0x12a02c2e0 <line:38:13, col:28> 'struct enum_list **' contains-errors '='
|   |         |-DeclRefExpr 0x12a02c1f8 <col:13> 'struct enum_list **' contains-errors lvalue Var 0x12a027838 'epp' 'struct enum_list **'
|   |         `-UnaryOperator 0x12a02c2c8 <col:19, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |           `-RecoveryExpr 0x12a02c2a0 <col:20, col:28> '<dependent type>' contains-errors lvalue
|   |             `-ParenExpr 0x12a02c268 <col:20, col:25> 'struct enum_list *' contains-errors lvalue
|   |               `-UnaryOperator 0x12a02c250 <col:21, col:22> 'struct enum_list *' contains-errors lvalue prefix '*' cannot overflow
|   |                 `-ImplicitCastExpr 0x12a02c238 <col:22> 'struct enum_list **' contains-errors <LValueToRValue>
|   |                   `-DeclRefExpr 0x12a02c218 <col:22> 'struct enum_list **' contains-errors lvalue Var 0x12a027838 'epp' 'struct enum_list **'
|   |-IfStmt 0x12a02c4b0 <line:41:5, line:44:5>
|   | |-RecoveryExpr 0x12a02c3c0 <line:41:9, col:17> '_Bool' contains-errors
|   | `-CompoundStmt 0x12a02c498 <col:28, line:44:5>
|   |   `-CallExpr 0x12a02c460 <line:42:9, col:39> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12a02c3e0 <col:9> 'int ()' Function 0x12a02b8d0 'print_error' 'int ()'
|   |     |-StringLiteral 0x12a02c400 <col:21> 'char[4]' lvalue "STR"
|   |     |-RecoveryExpr 0x12a02c420 <col:28> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12a02c440 <col:35> 'int' lvalue Var 0x12a027588 'type' 'int'
|   |-BinaryOperator 0x12a02c558 <line:45:5, col:13> 'struct enum_list *' contains-errors '='
|   | |-UnaryOperator 0x12a02c508 <col:5, col:6> 'struct enum_list *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12a02c4f0 <col:6> 'struct enum_list **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12a02c4d0 <col:6> 'struct enum_list **' lvalue ParmVar 0x12a00e378 'retp' 'struct enum_list **'
|   | `-ImplicitCastExpr 0x12a02c540 <col:13> 'struct enum_list *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x12a02c520 <col:13> 'struct enum_list *' contains-errors lvalue Var 0x12a027738 'ep' 'struct enum_list *'
|   `-ReturnStmt 0x12a02c5c8 <line:46:5, col:12>
|     `-ImplicitCastExpr 0x12a02c5b0 <col:12> 'int' contains-errors <PointerToIntegral>
|       `-ImplicitCastExpr 0x12a02c598 <col:12> 'struct enum_list *' contains-errors <LValueToRValue>
|         `-DeclRefExpr 0x12a02c578 <col:12> 'struct enum_list *' contains-errors lvalue Var 0x12a027738 'ep' 'struct enum_list *'
|-FunctionDecl 0x12a027ff0 <line:17:38> col:38 implicit used calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x12a0280f0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x12a028158 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x12a028098 <<invalid sloc>> Implicit 868
| `-AllocSizeAttr 0x12a0281d0 <col:38> Implicit 1 2
|-FunctionDecl 0x12a02b498 <line:21:29> col:29 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x12a02b598 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12a02b540 <<invalid sloc>> Implicit 950
`-FunctionDecl 0x12a02bd98 <line:32:29> col:29 implicit used strtol 'long (const char *, char **, int)' extern
  |-ParmVarDecl 0x12a02be98 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12a02bf00 <<invalid sloc>> <invalid sloc> 'char **'
  |-ParmVarDecl 0x12a02bf68 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12a02be40 <<invalid sloc>> Implicit 877
