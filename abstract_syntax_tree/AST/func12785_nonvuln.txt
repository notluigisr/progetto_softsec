TranslationUnitDecl 0x134017408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1340182b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1340179d0 '__int128'
|-TypedefDecl 0x134018328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1340179f0 'unsigned __int128'
|-TypedefDecl 0x1340e6630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1340e6400 'struct __NSConstantString_tag'
|   `-Record 0x134018380 '__NSConstantString_tag'
|-TypedefDecl 0x1340e6698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134017b90 '__SVInt8_t'
|-TypedefDecl 0x1340e6700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134017bb0 '__SVInt16_t'
|-TypedefDecl 0x1340e6768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134017bd0 '__SVInt32_t'
|-TypedefDecl 0x1340e67d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134017bf0 '__SVInt64_t'
|-TypedefDecl 0x1340e6838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134017c10 '__SVUint8_t'
|-TypedefDecl 0x1340e68a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134017c30 '__SVUint16_t'
|-TypedefDecl 0x1340e6908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134017c50 '__SVUint32_t'
|-TypedefDecl 0x1340e6970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134017c70 '__SVUint64_t'
|-TypedefDecl 0x1340e69d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134017c90 '__SVFloat16_t'
|-TypedefDecl 0x1340e6a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134017cb0 '__SVFloat32_t'
|-TypedefDecl 0x1340e6aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134017cd0 '__SVFloat64_t'
|-TypedefDecl 0x1340e6b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134017cf0 '__SVBfloat16_t'
|-TypedefDecl 0x1340e6b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134017d10 '__clang_svint8x2_t'
|-TypedefDecl 0x1340e6be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134017d30 '__clang_svint16x2_t'
|-TypedefDecl 0x1340e6c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134017d50 '__clang_svint32x2_t'
|-TypedefDecl 0x1340e6cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134017d70 '__clang_svint64x2_t'
|-TypedefDecl 0x1340e6d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134017d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1340e6d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134017db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1340e6de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134017dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1340e6e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134017df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1340e6eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134017e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1340e6f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134017e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1340e6f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134017e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1340e6ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134017e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1340e7058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134017e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1340e70c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x134017eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x1340e7128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x134017ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x1340e7190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x134017ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1340e71f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134017f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1340e7260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134017f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1340e72c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134017f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1340e7330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134017f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1340e7398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134017f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1340e7c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x134017fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1340e7c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x134017fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1340e7cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x134017ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1340e7d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134018010 '__clang_svint8x4_t'
|-TypedefDecl 0x1340e7da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134018030 '__clang_svint16x4_t'
|-TypedefDecl 0x1340e7e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134018050 '__clang_svint32x4_t'
|-TypedefDecl 0x1340e7e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134018070 '__clang_svint64x4_t'
|-TypedefDecl 0x1340e7ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134018090 '__clang_svuint8x4_t'
|-TypedefDecl 0x1340e7f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1340180b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1340e7fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1340180d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1340e8010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1340180f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1340e8078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134018110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1340e80e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134018130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1340e8148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134018150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1340e81b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134018170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1340e8218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134018190 '__SVBool_t'
|-TypedefDecl 0x1340e8280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1340181b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1340e82e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1340181d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1340e8350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1340181f0 '__SVCount_t'
|-TypedefDecl 0x1340e83f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1340e83b0 'char *'
|   `-BuiltinType 0x1340174b0 'char'
|-TypedefDecl 0x1340e8468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1340e83b0 'char *'
|   `-BuiltinType 0x1340174b0 'char'
|-FunctionDecl 0x1340e8718 <dataset_diviso_filec/func12785_nonvuln.c:1:1, line:61:1> line:1:1 invalid bgp_open_print 'int (int *, const char *, int)'
| |-ParmVarDecl 0x1340e8528 <col:16, col:36> col:36 invalid ndo 'int *'
| |-ParmVarDecl 0x1340e85a8 <line:2:16, col:30> col:30 used dat 'const char *'
| |-ParmVarDecl 0x1340e8628 <col:35, col:39> col:39 used length 'int'
| `-CompoundStmt 0x134101ae8 <line:3:1, line:61:1>
|   |-DeclStmt 0x13480cbb8 <line:4:2, col:22>
|   | |-RecordDecl 0x1340e87d8 <col:2, col:9> col:9 struct bgp_open
|   | `-VarDecl 0x1340e88d8 <col:2, col:18> col:18 invalid bgpo 'struct bgp_open'
|   |-DeclStmt 0x13480cd48 <line:5:2, col:23>
|   | |-RecordDecl 0x13480cbd0 <col:2, col:9> col:9 struct bgp_opt
|   | `-VarDecl 0x13480ccc8 <col:2, col:17> col:17 invalid bgpopt 'struct bgp_opt'
|   |-DeclStmt 0x13480cde0 <line:6:2, col:19>
|   | `-VarDecl 0x13480cd78 <col:2, col:16> col:16 used opt 'const char *'
|   |-DeclStmt 0x13480ce78 <line:7:2, col:7>
|   | `-VarDecl 0x13480ce10 <col:2, col:6> col:6 used i 'int'
|   |-CallExpr 0x13480d160 <line:9:2, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13480cff0 <col:2> 'int ()' Function 0x13480cf38 'ND_TCHECK2' 'int ()'
|   | |-ArraySubscriptExpr 0x13480d120 <col:13, col:18> 'const char' lvalue
|   | | |-ImplicitCastExpr 0x13480d108 <col:13> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13480d010 <col:13> 'const char *' lvalue ParmVar 0x1340e85a8 'dat' 'const char *'
|   | | `-IntegerLiteral 0x13480d030 <col:17> 'int' 0
|   | `-RecoveryExpr 0x13480d140 <col:21> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13480d5a0 <line:10:2, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13480d458 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x13480d208 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-UnaryOperator 0x13480d498 <col:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x13480d478 <col:10> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x13480d4b0 <col:16> 'const char *' lvalue ParmVar 0x1340e85a8 'dat' 'const char *'
|   | `-RecoveryExpr 0x13480d550 <col:21> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13480d828 <line:12:2, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13480d6b8 <col:2> 'int ()' Function 0x13480d600 'ND_PRINT' 'int ()'
|   | `-ParenExpr 0x13480d808 <col:11, col:41> '<dependent type>' contains-errors
|   |   `-BinaryOperator 0x13480d7e8 <col:12, col:29> '<dependent type>' contains-errors ','
|   |     |-BinaryOperator 0x13480d760 <col:12, col:17> 'char[4]' contains-errors ','
|   |     | |-RecoveryExpr 0x13480d6d8 <col:12> '<dependent type>' contains-errors lvalue
|   |     | `-StringLiteral 0x13480d740 <col:17> 'char[4]' lvalue "STR"
|   |     `-CXXDependentScopeMemberExpr 0x13480d7a0 <col:24, col:29> '<dependent type>' contains-errors lvalue .bgpo_version
|   |       `-RecoveryExpr 0x13480d780 <col:24> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x135008f30 <line:15:2, col:50> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x135008dc0 <col:2> 'int ()' Function 0x13480d600 'ND_PRINT' 'int ()'
|   | `-ParenExpr 0x135008f10 <col:11, col:49> '<dependent type>' contains-errors
|   |   `-BinaryOperator 0x135008ef0 <col:12, col:48> '<dependent type>' contains-errors ','
|   |     |-BinaryOperator 0x135008e20 <col:12, col:17> 'char[4]' contains-errors ','
|   |     | |-RecoveryExpr 0x135008de0 <col:12> '<dependent type>' contains-errors lvalue
|   |     | `-StringLiteral 0x135008e00 <col:17> 'char[4]' lvalue "STR"
|   |     `-CallExpr 0x135008ec8 <col:24, col:48> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x135008e40 <col:24> 'int ()' Function 0x135008c58 'ntohs' 'int ()'
|   |       `-CXXDependentScopeMemberExpr 0x135008e80 <col:30, col:35> '<dependent type>' contains-errors lvalue .bgpo_holdtime
|   |         `-RecoveryExpr 0x135008e60 <col:30> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1350091e8 <line:16:2, col:58> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x135008f58 <col:2> 'int ()' Function 0x13480d600 'ND_PRINT' 'int ()'
|   | `-ParenExpr 0x1350091c8 <col:11, col:57> '<dependent type>' contains-errors
|   |   `-BinaryOperator 0x1350091a8 <col:12, col:56> '<dependent type>' contains-errors ','
|   |     |-BinaryOperator 0x135008fb8 <col:12, col:17> 'char[4]' contains-errors ','
|   |     | |-RecoveryExpr 0x135008f78 <col:12> '<dependent type>' contains-errors lvalue
|   |     | `-StringLiteral 0x135008f98 <col:17> 'char[4]' lvalue "STR"
|   |     `-CallExpr 0x135009178 <col:24, col:56> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x1350090b8 <col:24> 'int ()' Function 0x135009000 'ipaddr_string' 'int ()'
|   |       |-RecoveryExpr 0x1350090d8 <col:38> '<dependent type>' contains-errors lvalue
|   |       `-UnaryOperator 0x135009160 <col:43, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |         `-CXXDependentScopeMemberExpr 0x135009118 <col:44, col:49> '<dependent type>' contains-errors lvalue .bgpo_id
|   |           `-RecoveryExpr 0x1350090f8 <col:44> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x135009338 <line:17:2, col:41> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x135009210 <col:2> 'int ()' Function 0x13480d600 'ND_PRINT' 'int ()'
|   | `-ParenExpr 0x135009318 <col:11, col:40> '<dependent type>' contains-errors
|   |   `-BinaryOperator 0x1350092f8 <col:12, col:29> '<dependent type>' contains-errors ','
|   |     |-BinaryOperator 0x135009270 <col:12, col:17> 'char[4]' contains-errors ','
|   |     | |-RecoveryExpr 0x135009230 <col:12> '<dependent type>' contains-errors lvalue
|   |     | `-StringLiteral 0x135009250 <col:17> 'char[4]' lvalue "STR"
|   |     `-CXXDependentScopeMemberExpr 0x1350092b0 <col:24, col:29> '<dependent type>' contains-errors lvalue .bgpo_optlen
|   |       `-RecoveryExpr 0x135009290 <col:24> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1350094b0 <line:20:9, line:21:13>
|   | |-BinaryOperator 0x135009480 <line:20:13, col:39> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x135009360 <col:13> 'int' lvalue ParmVar 0x1340e8628 'length' 'int'
|   | | `-BinaryOperator 0x135009460 <col:22, col:39> '<dependent type>' contains-errors '+'
|   | |   |-CXXDependentScopeMemberExpr 0x1350093a0 <col:22, col:27> '<dependent type>' contains-errors lvalue .bgpo_optlen
|   | |   | `-RecoveryExpr 0x135009380 <col:22> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x135009440 <col:39> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1350094a0 <line:21:13>
|   |-BinaryOperator 0x135009668 <line:24:2, col:41> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x1350094d0 <col:2> 'const char *' lvalue Var 0x13480cd78 'opt' 'const char *'
|   | `-UnaryOperator 0x135009650 <col:8, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x135009628 <col:9, col:41> '<dependent type>' contains-errors lvalue
|   |     `-ParenExpr 0x135009608 <col:9, col:38> 'const struct bgp_open *'
|   |       `-CStyleCastExpr 0x1350095e0 <col:10, col:35> 'const struct bgp_open *' <BitCast>
|   |         `-ImplicitCastExpr 0x1350095c8 <col:35> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x1350094f0 <col:35> 'const char *' lvalue ParmVar 0x1340e85a8 'dat' 'const char *'
|   |-UnaryOperator 0x1350096a8 <line:25:2, col:5> 'const char *' postfix '++'
|   | `-DeclRefExpr 0x135009688 <col:2> 'const char *' lvalue Var 0x13480cd78 'opt' 'const char *'
|   |-BinaryOperator 0x135009700 <line:27:2, col:6> 'int' '='
|   | |-DeclRefExpr 0x1350096c0 <col:2> 'int' lvalue Var 0x13480ce10 'i' 'int'
|   | `-IntegerLiteral 0x1350096e0 <col:6> 'int' 0
|   |-WhileStmt 0x1341019c0 <line:28:2, line:57:2>
|   | |-BinaryOperator 0x1350097a8 <line:28:9, col:18> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x135009720 <col:9> 'int' lvalue Var 0x13480ce10 'i' 'int'
|   | | `-CXXDependentScopeMemberExpr 0x135009760 <col:13, col:18> '<dependent type>' contains-errors lvalue .bgpo_optlen
|   | |   `-RecoveryExpr 0x135009740 <col:13> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x134101990 <col:31, line:57:2>
|   |   |-CallExpr 0x135009980 <line:29:3, col:34> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1350097c8 <col:3> 'int ()' Function 0x13480cf38 'ND_TCHECK2' 'int ()'
|   |   | |-ArraySubscriptExpr 0x135009940 <col:14, col:19> 'const char' lvalue
|   |   | | |-ImplicitCastExpr 0x135009910 <col:14> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1350097e8 <col:14> 'const char *' lvalue Var 0x13480cd78 'opt' 'const char *'
|   |   | | `-ImplicitCastExpr 0x135009928 <col:18> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x135009808 <col:18> 'int' lvalue Var 0x13480ce10 'i' 'int'
|   |   | `-RecoveryExpr 0x135009960 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x134100e38 <line:30:3, col:40> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1350099b0 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13480d208 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-UnaryOperator 0x1350099f0 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x1350099d0 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x135009bd0 <col:19, col:25> 'const char *' prefix '&' cannot overflow
|   |   | | `-ArraySubscriptExpr 0x135009bb0 <col:20, col:25> 'const char' lvalue
|   |   | |   |-ImplicitCastExpr 0x135009b80 <col:20> 'const char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x135009a08 <col:20> 'const char *' lvalue Var 0x13480cd78 'opt' 'const char *'
|   |   | |   `-ImplicitCastExpr 0x135009b98 <col:24> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x135009a28 <col:24> 'int' lvalue Var 0x13480ce10 'i' 'int'
|   |   | `-RecoveryExpr 0x134100e00 <col:28> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x1341011f8 <line:31:3, line:34:3>
|   |   | |-BinaryOperator 0x134100fd8 <line:31:7, col:40> 'int' contains-errors '>'
|   |   | | |-BinaryOperator 0x134100f50 <col:7, col:22> '<dependent type>' contains-errors '+'
|   |   | | | |-BinaryOperator 0x134100ec8 <col:7, col:11> 'int' '+'
|   |   | | | | |-ImplicitCastExpr 0x134100eb0 <col:7> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x134100e70 <col:7> 'int' lvalue Var 0x13480ce10 'i' 'int'
|   |   | | | | `-IntegerLiteral 0x134100e90 <col:11> 'int' 2
|   |   | | | `-CXXDependentScopeMemberExpr 0x134100f08 <col:15, col:22> '<dependent type>' contains-errors lvalue .bgpopt_len
|   |   | | |   `-RecoveryExpr 0x134100ee8 <col:15> '<dependent type>' contains-errors lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x134100f90 <col:35, col:40> '<dependent type>' contains-errors lvalue .bgpo_optlen
|   |   | |   `-RecoveryExpr 0x134100f70 <col:35> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x1341011d8 <col:53, line:34:3>
|   |   |   |-CallExpr 0x1341011a8 <line:32:4, col:64> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x134100ff8 <col:4> 'int ()' Function 0x13480d600 'ND_PRINT' 'int ()'
|   |   |   | `-ParenExpr 0x134101188 <col:13, col:63> '<dependent type>' contains-errors
|   |   |   |   `-BinaryOperator 0x134101168 <col:14, col:53> '<dependent type>' contains-errors ','
|   |   |   |     |-BinaryOperator 0x1341010e0 <col:14, col:33> '<dependent type>' contains-errors ','
|   |   |   |     | |-BinaryOperator 0x134101058 <col:14, col:19> 'char[4]' contains-errors ','
|   |   |   |     | | |-RecoveryExpr 0x134101018 <col:14> '<dependent type>' contains-errors lvalue
|   |   |   |     | | `-StringLiteral 0x134101038 <col:19> 'char[4]' lvalue "STR"
|   |   |   |     | `-CXXDependentScopeMemberExpr 0x134101098 <col:26, col:33> '<dependent type>' contains-errors lvalue .bgpopt_type
|   |   |   |     |   `-RecoveryExpr 0x134101078 <col:26> '<dependent type>' contains-errors lvalue
|   |   |   |     `-CXXDependentScopeMemberExpr 0x134101120 <col:46, col:53> '<dependent type>' contains-errors lvalue .bgpopt_len
|   |   |   |       `-RecoveryExpr 0x134101100 <col:46> '<dependent type>' contains-errors lvalue
|   |   |   `-BreakStmt 0x1341011d0 <line:33:4>
|   |   `-SwitchStmt 0x134101570 <line:43:3, line:55:3>
|   |     |-ImplicitCastExpr 0x134101558 <line:43:10, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x134101510 <col:10, col:17> '<dependent type>' contains-errors lvalue .bgpopt_type
|   |     |   `-RecoveryExpr 0x1341014f0 <col:10> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x1341018e0 <col:30, line:55:3>
|   |       |-BreakStmt 0x134101760 <line:48:4>
|   |       |-DefaultStmt 0x1341018b8 <line:51:3, line:53:26>
|   |       | `-CallExpr 0x134101890 <line:52:10, line:53:26> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x134101768 <line:52:10> 'int ()' Function 0x13480d600 'ND_PRINT' 'int ()'
|   |       |   `-ParenExpr 0x134101870 <col:19, line:53:25> '<dependent type>' contains-errors
|   |       |     `-BinaryOperator 0x134101850 <line:52:20, line:53:14> '<dependent type>' contains-errors ','
|   |       |       |-BinaryOperator 0x1341017c8 <line:52:20, col:25> 'char[4]' contains-errors ','
|   |       |       | |-RecoveryExpr 0x134101788 <col:20> '<dependent type>' contains-errors lvalue
|   |       |       | `-StringLiteral 0x1341017a8 <col:25> 'char[4]' lvalue "STR"
|   |       |       `-CXXDependentScopeMemberExpr 0x134101808 <line:53:7, col:14> '<dependent type>' contains-errors lvalue .bgpopt_type
|   |       |         `-RecoveryExpr 0x1341017e8 <col:7> '<dependent type>' contains-errors lvalue
|   |       `-BreakStmt 0x1341018d8 <line:54:10>
|   |-ReturnStmt 0x1341019e0 <line:58:2>
|   `-LabelStmt 0x134101ac8 <line:59:1, col:6> 'trunc'
|     `-NullStmt 0x134101a70 <col:6>
`-FunctionDecl 0x13480d208 <line:10:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13480d308 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13480d370 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13480d3d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13480d2b0 <<invalid sloc>> Implicit 882
