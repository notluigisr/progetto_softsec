TranslationUnitDecl 0x157855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1578564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157855bd0 '__int128'
|-TypedefDecl 0x157856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157855bf0 'unsigned __int128'
|-TypedefDecl 0x157926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x157926000 'struct __NSConstantString_tag'
|   `-Record 0x157856580 '__NSConstantString_tag'
|-TypedefDecl 0x157926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157855d90 '__SVInt8_t'
|-TypedefDecl 0x157926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157855db0 '__SVInt16_t'
|-TypedefDecl 0x157926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157855dd0 '__SVInt32_t'
|-TypedefDecl 0x1579263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157855df0 '__SVInt64_t'
|-TypedefDecl 0x157926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157855e10 '__SVUint8_t'
|-TypedefDecl 0x1579264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157855e30 '__SVUint16_t'
|-TypedefDecl 0x157926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157855e50 '__SVUint32_t'
|-TypedefDecl 0x157926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157855e70 '__SVUint64_t'
|-TypedefDecl 0x1579265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157855e90 '__SVFloat16_t'
|-TypedefDecl 0x157926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1579266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157855ed0 '__SVFloat64_t'
|-TypedefDecl 0x157926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x157926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1579267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x157926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1579268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x157926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x157926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1579269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x157926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x157926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x157926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x157926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x157926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x157926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157856090 '__clang_svint8x3_t'
|-TypedefDecl 0x157926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1578560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x157926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1578560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x157926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1578560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x157926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x157926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x157926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x157926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x157926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x157927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1578561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x157927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1578561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1579278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1578561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x157927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1579279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157856230 '__clang_svint16x4_t'
|-TypedefDecl 0x157927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157856250 '__clang_svint32x4_t'
|-TypedefDecl 0x157927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157856270 '__clang_svint64x4_t'
|-TypedefDecl 0x157927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x157927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1578562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x157927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1578562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x157927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1578562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x157927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x157927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x157927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x157927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x157927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157856390 '__SVBool_t'
|-TypedefDecl 0x157927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1578563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x157927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1578563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x157927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1578563f0 '__SVCount_t'
|-TypedefDecl 0x157927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x157927fb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-TypedefDecl 0x157928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x157927fb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-FunctionDecl 0x157928238 <dataset_diviso_filec/func16704_nonvuln.c:1:1, line:38:1> line:1:1 hostname_completion_function 'int (const char *, int)'
| |-ParmVarDecl 0x1579280d8 <line:2:6, col:18> col:18 used text 'const char *'
| |-ParmVarDecl 0x157928158 <line:3:6, col:10> col:10 used state 'int'
| `-CompoundStmt 0x157945110 <line:4:1, line:38:1>
|   |-DeclStmt 0x157928438 <line:5:3, col:37>
|   | `-VarDecl 0x157928388 <col:3, col:17> col:17 used list 'char **' static
|   |-DeclStmt 0x1579284f0 <line:6:3, col:28>
|   | `-VarDecl 0x157928468 <col:3, col:27> col:14 used list_index 'int' static cinit
|   |   `-IntegerLiteral 0x1579284d0 <col:27> 'int' 0
|   |-DeclStmt 0x157928620 <line:7:3, col:40>
|   | |-VarDecl 0x157928520 <col:3, col:14> col:14 used first_char 'int' static
|   | `-VarDecl 0x1579285a0 <col:3, col:26> col:26 used first_char_loc 'int' static
|   |-IfStmt 0x1579421f0 <line:10:3, line:24:5>
|   | |-BinaryOperator 0x157928690 <line:10:7, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x157928678 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x157928638 <col:7> 'int' lvalue ParmVar 0x157928158 'state' 'int'
|   | | `-IntegerLiteral 0x157928658 <col:16> 'int' 0
|   | `-CompoundStmt 0x1579421b0 <line:11:5, line:24:5>
|   |   |-CallExpr 0x157941848 <line:12:7, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x157941830 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1579287c0 <col:7> 'int ()' Function 0x157928708 'FREE' 'int ()'
|   |   | `-ImplicitCastExpr 0x157941870 <col:13> 'char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1579287e0 <col:13> 'char **' lvalue Var 0x157928388 'list' 'char **'
|   |   |-BinaryOperator 0x157941918 <line:16:7, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x1579418d8 <col:7> 'int' lvalue Var 0x1579285a0 'first_char_loc' 'int'
|   |   | `-IntegerLiteral 0x1579418f8 <col:24> 'int' 0
|   |   |-BinaryOperator 0x1579419d8 <line:17:7, col:21> 'int' '='
|   |   | |-DeclRefExpr 0x157941938 <col:7> 'int' lvalue Var 0x157928520 'first_char' 'int'
|   |   | `-ImplicitCastExpr 0x1579419c0 <col:20, col:21> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1579419a8 <col:20, col:21> 'char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x157941990 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x157941978 <col:21> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x157941958 <col:21> 'const char *' lvalue ParmVar 0x1579280d8 'text' 'const char *'
|   |   |-IfStmt 0x157941aa0 <line:19:7, line:20:16>
|   |   | |-BinaryOperator 0x157941a48 <line:19:11, col:25> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x157941a30 <col:11> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1579419f8 <col:11> 'int' lvalue Var 0x157928520 'first_char' 'int'
|   |   | | `-CharacterLiteral 0x157941a18 <col:25> 'int' 64
|   |   | `-UnaryOperator 0x157941a88 <line:20:2, col:16> 'int' postfix '++'
|   |   |   `-DeclRefExpr 0x157941a68 <col:2> 'int' lvalue Var 0x1579285a0 'first_char_loc' 'int'
|   |   |-BinaryOperator 0x157942130 <line:22:7, col:61> 'char **' '='
|   |   | |-DeclRefExpr 0x157941ac0 <col:7> 'char **' lvalue Var 0x157928388 'list' 'char **'
|   |   | `-ImplicitCastExpr 0x157941cf0 <col:14, col:61> 'char **' <IntegralToPointer>
|   |   |   `-CallExpr 0x157941cc8 <col:14, col:61> 'int'
|   |   |     |-ImplicitCastExpr 0x157941cb0 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x157941bc0 <col:14> 'int ()' Function 0x157941b08 'hostnames_matching' 'int ()'
|   |   |     `-BinaryOperator 0x157941c90 <col:34, col:47> 'char *' '+'
|   |   |       |-CStyleCastExpr 0x157941c30 <col:34, col:42> 'char *' <NoOp>
|   |   |       | `-ImplicitCastExpr 0x157941c18 <col:42> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   |       |   `-DeclRefExpr 0x157941be0 <col:42> 'const char *' lvalue ParmVar 0x1579280d8 'text' 'const char *'
|   |   |       `-ImplicitCastExpr 0x157941c78 <col:47> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x157941c58 <col:47> 'int' lvalue Var 0x1579285a0 'first_char_loc' 'int'
|   |   `-BinaryOperator 0x157942190 <line:23:7, col:20> 'int' '='
|   |     |-DeclRefExpr 0x157942150 <col:7> 'int' lvalue Var 0x157928468 'list_index' 'int'
|   |     `-IntegerLiteral 0x157942170 <col:20> 'int' 0
|   `-IfStmt 0x1579450c0 <line:26:3, line:35:5>
|     |-BinaryOperator 0x1579422f0 <line:26:7, col:30> 'int' '&&'
|     | |-ImplicitCastExpr 0x1579422c0 <col:7> 'char **' <LValueToRValue>
|     | | `-DeclRefExpr 0x157942210 <col:7> 'char **' lvalue Var 0x157928388 'list' 'char **'
|     | `-ImplicitCastExpr 0x1579422d8 <col:15, col:30> 'char *' <LValueToRValue>
|     |   `-ArraySubscriptExpr 0x1579422a0 <col:15, col:30> 'char *' lvalue
|     |     |-ImplicitCastExpr 0x157942270 <col:15> 'char **' <LValueToRValue>
|     |     | `-DeclRefExpr 0x157942230 <col:15> 'char **' lvalue Var 0x157928388 'list' 'char **'
|     |     `-ImplicitCastExpr 0x157942288 <col:20> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x157942250 <col:20> 'int' lvalue Var 0x157928468 'list_index' 'int'
|     `-CompoundStmt 0x157945080 <line:27:5, line:35:5>
|       |-DeclStmt 0x157942390 <line:28:7, col:14>
|       | `-VarDecl 0x157942328 <col:7, col:13> col:13 used t 'char *'
|       |-BinaryOperator 0x157944ab8 <line:30:7, col:57> 'char *' '='
|       | |-DeclRefExpr 0x1579423a8 <col:7> 'char *' lvalue Var 0x157942328 't' 'char *'
|       | `-CStyleCastExpr 0x157944a90 <col:11, col:57> 'char *' <IntegralToPointer>
|       |   `-CallExpr 0x157944a50 <col:19, col:57> 'int'
|       |     |-ImplicitCastExpr 0x157944a38 <col:19> 'int (*)()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x1579424a8 <col:19> 'int ()' Function 0x1579423f0 'xmalloc' 'int ()'
|       |     `-BinaryOperator 0x157944a18 <col:28, col:56> 'unsigned long' '+'
|       |       |-ImplicitCastExpr 0x157944a00 <col:28> 'unsigned long' <IntegralCast>
|       |       | `-IntegerLiteral 0x1579424c8 <col:28> 'int' 2
|       |       `-CallExpr 0x1579427a8 <col:32, col:56> 'unsigned long'
|       |         |-ImplicitCastExpr 0x157942790 <col:32> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|       |         | `-DeclRefExpr 0x157942698 <col:32> 'unsigned long (const char *)' Function 0x157942528 'strlen' 'unsigned long (const char *)'
|       |         `-ImplicitCastExpr 0x1579427e8 <col:40, col:55> 'const char *' <NoOp>
|       |           `-ImplicitCastExpr 0x1579427d0 <col:40, col:55> 'char *' <LValueToRValue>
|       |             `-ArraySubscriptExpr 0x157942728 <col:40, col:55> 'char *' lvalue
|       |               |-ImplicitCastExpr 0x1579426f8 <col:40> 'char **' <LValueToRValue>
|       |               | `-DeclRefExpr 0x1579426b8 <col:40> 'char **' lvalue Var 0x157928388 'list' 'char **'
|       |               `-ImplicitCastExpr 0x157942710 <col:45> 'int' <LValueToRValue>
|       |                 `-DeclRefExpr 0x1579426d8 <col:45> 'int' lvalue Var 0x157928468 'list_index' 'int'
|       |-BinaryOperator 0x157944b78 <line:31:7, col:12> 'char' '='
|       | |-UnaryOperator 0x157944b10 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|       | | `-ImplicitCastExpr 0x157944af8 <col:8> 'char *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x157944ad8 <col:8> 'char *' lvalue Var 0x157942328 't' 'char *'
|       | `-ImplicitCastExpr 0x157944b60 <col:12> 'char' <IntegralCast>
|       |   `-ImplicitCastExpr 0x157944b48 <col:12> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x157944b28 <col:12> 'int' lvalue Var 0x157928520 'first_char' 'int'
|       |-CallExpr 0x157944f68 <line:32:7, col:51> 'char *'
|       | |-ImplicitCastExpr 0x157944f50 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x157944dc0 <col:7> 'char *(char *, const char *)' Function 0x157944be0 'strcpy' 'char *(char *, const char *)'
|       | |-BinaryOperator 0x157944e50 <col:15, col:19> 'char *' '+'
|       | | |-ImplicitCastExpr 0x157944e20 <col:15> 'char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x157944de0 <col:15> 'char *' lvalue Var 0x157942328 't' 'char *'
|       | | `-ImplicitCastExpr 0x157944e38 <col:19> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x157944e00 <col:19> 'int' lvalue Var 0x1579285a0 'first_char_loc' 'int'
|       | `-ImplicitCastExpr 0x157944fb0 <col:35, col:50> 'const char *' <NoOp>
|       |   `-ImplicitCastExpr 0x157944f98 <col:35, col:50> 'char *' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x157944ee0 <col:35, col:50> 'char *' lvalue
|       |       |-ImplicitCastExpr 0x157944eb0 <col:35> 'char **' <LValueToRValue>
|       |       | `-DeclRefExpr 0x157944e70 <col:35> 'char **' lvalue Var 0x157928388 'list' 'char **'
|       |       `-ImplicitCastExpr 0x157944ec8 <col:40> 'int' <LValueToRValue>
|       |         `-DeclRefExpr 0x157944e90 <col:40> 'int' lvalue Var 0x157928468 'list_index' 'int'
|       |-UnaryOperator 0x157944fe8 <line:33:7, col:17> 'int' postfix '++'
|       | `-DeclRefExpr 0x157944fc8 <col:7> 'int' lvalue Var 0x157928468 'list_index' 'int'
|       `-ReturnStmt 0x157945070 <line:34:7, col:16>
|         `-ImplicitCastExpr 0x157945058 <col:14, col:16> 'int' <PointerToIntegral>
|           `-ImplicitCastExpr 0x157945040 <col:14, col:16> 'char *' <LValueToRValue>
|             `-ParenExpr 0x157945020 <col:14, col:16> 'char *' lvalue
|               `-DeclRefExpr 0x157945000 <col:15> 'char *' lvalue Var 0x157942328 't' 'char *'
|-FunctionDecl 0x157942528 <line:30:32> col:32 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x157942628 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1579425d0 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x157944be0 <line:32:7> col:7 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x157944ce0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x157944d48 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x157944c88 <<invalid sloc>> Implicit 885
