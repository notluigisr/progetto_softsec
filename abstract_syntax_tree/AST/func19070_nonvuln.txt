TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x13780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13780bc00 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x13780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x13780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x13780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x13780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x13780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x13780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x13780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x13780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x13780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x13780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x13780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x13780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13780dbb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x13780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13780dbb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-FunctionDecl 0x13780de00 <dataset_diviso_filec/func19070_nonvuln.c:1:1, line:47:1> line:1:6 invalid int_to_float 'void (const int *const)'
| |-ParmVarDecl 0x13780dcf0 <col:19, col:43> col:43 invalid JXL_RESTRICT 'const int *const'
| `-CompoundStmt 0x1378287a8 <line:3:55, line:47:1>
|   |-IfStmt 0x1371249a0 <line:4:3, line:9:3>
|   | |-BinaryOperator 0x13780df28 <line:4:7, col:15> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x13780df08 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x13780dec8 <col:15> 'int' 32
|   | `-CompoundStmt 0x137124978 <col:19, line:9:3>
|   |   |-CallExpr 0x13780e1f0 <line:6:5, col:29> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13780e110 <col:5> 'int ()' Function 0x13780dfe8 'JXL_ASSERT' 'int ()'
|   |   | `-BinaryOperator 0x13780e1d0 <col:16, col:28> 'int' contains-errors '=='
|   |   |   |-RecoveryExpr 0x13780e1b0 <col:16> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x13780e148 <col:28> 'int' 8
|   |   |-CallExpr 0x137124930 <line:7:5, col:50> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x137124720 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x1371244d0 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-RecoveryExpr 0x137124848 <col:12> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x137124868 <col:21> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x1371248e0 <col:29, col:49> '<dependent type>' contains-errors '*'
|   |   |   |-RecoveryExpr 0x137124888 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   `-UnaryExprOrTypeTraitExpr 0x1371248c0 <col:37, col:49> 'unsigned long' sizeof 'float'
|   |   `-ReturnStmt 0x137124968 <line:8:5>
|   |-DeclStmt 0x137124bb0 <line:10:3, col:43>
|   | `-VarDecl 0x1371249d8 <col:3, col:42> col:7 used exp_bias 'int' cinit
|   |   `-BinaryOperator 0x137124b90 <col:18, col:42> 'int' '-'
|   |     |-ParenExpr 0x137124b50 <col:18, col:38> 'int'
|   |     | `-BinaryOperator 0x137124b30 <col:19, col:37> 'int' '<<'
|   |     |   |-IntegerLiteral 0x137124a40 <col:19> 'int' 1
|   |     |   `-ParenExpr 0x137124b10 <col:24, col:37> 'int'
|   |     |     `-BinaryOperator 0x137124af0 <col:25, col:36> 'int' '-'
|   |     |       |-ImplicitCastExpr 0x137124ad8 <col:25> 'int' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x137124ab8 <col:25> 'int' lvalue Var 0x1371249d8 'exp_bias' 'int'
|   |     |       `-IntegerLiteral 0x137124a78 <col:36> 'int' 1
|   |     `-IntegerLiteral 0x137124b70 <col:42> 'int' 1
|   |-DeclStmt 0x137124ce0 <line:11:3, col:28>
|   | `-VarDecl 0x137124be0 <col:3, col:27> col:7 used sign_shift 'int' cinit
|   |   `-BinaryOperator 0x137124cc0 <col:20, col:27> '<dependent type>' contains-errors '-'
|   |     |-RecoveryExpr 0x137124ca0 <col:20> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x137124c60 <col:27> 'int' 1
|   |-DeclStmt 0x137124e88 <line:12:3, col:38>
|   | `-VarDecl 0x137124d10 <col:3, col:37> col:7 used mant_bits 'int' cinit
|   |   `-BinaryOperator 0x137124e68 <col:19, col:37> '<dependent type>' contains-errors '-'
|   |     |-BinaryOperator 0x137124e48 <col:19, col:26> '<dependent type>' contains-errors '-'
|   |     | |-RecoveryExpr 0x137124e08 <col:19> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x137124e28 <col:26> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x137124dc8 <col:37> 'int' 1
|   |-DeclStmt 0x137124f98 <line:13:3, col:34>
|   | `-VarDecl 0x137124eb8 <col:3, col:25> col:7 used mant_shift 'int' cinit
|   |   `-BinaryOperator 0x137124f78 <col:20, col:25> 'int' contains-errors '-'
|   |     |-IntegerLiteral 0x137124f20 <col:20> 'int' 23
|   |     `-ImplicitCastExpr 0x137124f60 <col:25> 'int' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x137124f40 <col:25> 'int' contains-errors lvalue Var 0x137124d10 'mant_bits' 'int'
|   `-ForStmt 0x137828770 <line:14:3, line:46:3>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-BinaryOperator 0x1371250e0 <line:14:22, col:26> 'int' contains-errors '<'
|     | |-RecoveryExpr 0x1371250a0 <col:22> '<dependent type>' contains-errors lvalue
|     | `-RecoveryExpr 0x1371250c0 <col:26> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x137125150 <col:33, col:35> '<dependent type>' contains-errors prefix '++' cannot overflow
|     | `-RecoveryExpr 0x137125130 <col:35> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x137828718 <col:38, line:46:3>
|       |-DeclStmt 0x137827a88 <line:17:5, col:36>
|       | `-VarDecl 0x137827a00 <col:5, col:9> col:9 used signbit 'int'
|       |-IfStmt 0x137827cb8 <line:19:5, line:22:5>
|       | |-RecoveryExpr 0x137827b98 <line:19:9, col:14> '_Bool' contains-errors
|       | `-CompoundStmt 0x137827ca0 <col:17, line:22:5>
|       |   `-ContinueStmt 0x137827c98 <line:21:7>
|       |-DeclStmt 0x137827d78 <line:23:5, col:31>
|       | `-VarDecl 0x137827cf0 <col:5, col:9> col:9 used exp 'int'
|       |-DeclStmt 0x137827f08 <line:24:5, col:48>
|       | `-VarDecl 0x137827da8 <col:5, col:9> col:9 used mantissa 'int'
|       |-CompoundAssignOperator 0x137827f90 <line:25:5, col:18> 'int' contains-errors '<<=' ComputeLHSTy='int' ComputeResultTy='int'
|       | |-DeclRefExpr 0x137827f20 <col:5> 'int' lvalue Var 0x137827da8 'mantissa' 'int'
|       | `-ImplicitCastExpr 0x137827f78 <col:18> 'int' contains-errors <LValueToRValue>
|       |   `-DeclRefExpr 0x137827f40 <col:18> 'int' contains-errors lvalue Var 0x137124eb8 'mant_shift' 'int'
|       |-IfStmt 0x137828320 <line:27:5, line:36:5>
|       | |-RecoveryExpr 0x137828058 <line:27:9, col:32> '_Bool' contains-errors
|       | `-CompoundStmt 0x1378282f8 <col:35, line:36:5>
|       |   |-WhileStmt 0x137828230 <line:29:7, line:32:7>
|       |   | |-BinaryOperator 0x137828130 <line:29:14, col:39> 'int' '=='
|       |   | | |-ParenExpr 0x1378280f0 <col:14, col:34> 'int'
|       |   | | | `-BinaryOperator 0x1378280d0 <col:15, col:26> 'int' '&'
|       |   | | |   |-ImplicitCastExpr 0x1378280b8 <col:15> 'int' <LValueToRValue>
|       |   | | |   | `-DeclRefExpr 0x137828078 <col:15> 'int' lvalue Var 0x137827da8 'mantissa' 'int'
|       |   | | |   `-IntegerLiteral 0x137828098 <col:26> 'int' 8388608
|       |   | | `-IntegerLiteral 0x137828110 <col:39> 'int' 0
|       |   | `-CompoundStmt 0x137828210 <col:42, line:32:7>
|       |   |   |-CompoundAssignOperator 0x1378281a8 <line:30:9, col:22> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
|       |   |   | |-DeclRefExpr 0x137828150 <col:9> 'int' lvalue Var 0x137827da8 'mantissa' 'int'
|       |   |   | `-IntegerLiteral 0x137828170 <col:22> 'int' 1
|       |   |   `-UnaryOperator 0x1378281f8 <line:31:9, col:12> 'int' postfix '--'
|       |   |     `-DeclRefExpr 0x1378281d8 <col:9> 'int' lvalue Var 0x137827cf0 'exp' 'int'
|       |   |-UnaryOperator 0x137828270 <line:33:7, col:10> 'int' postfix '++'
|       |   | `-DeclRefExpr 0x137828250 <col:7> 'int' lvalue Var 0x137827cf0 'exp' 'int'
|       |   `-CompoundAssignOperator 0x1378282c8 <line:35:7, col:19> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|       |     |-DeclRefExpr 0x137828288 <col:7> 'int' lvalue Var 0x137827da8 'mantissa' 'int'
|       |     `-IntegerLiteral 0x1378282a8 <col:19> 'int' 8388607
|       |-CompoundAssignOperator 0x137828398 <line:37:5, col:12> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|       | |-DeclRefExpr 0x137828340 <col:5> 'int' lvalue Var 0x137827cf0 'exp' 'int'
|       | `-ImplicitCastExpr 0x137828380 <col:12> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x137828360 <col:12> 'int' lvalue Var 0x1371249d8 'exp_bias' 'int'
|       |-CompoundAssignOperator 0x137828408 <line:40:5, col:12> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|       | |-DeclRefExpr 0x1378283c8 <col:5> 'int' lvalue Var 0x137827cf0 'exp' 'int'
|       | `-IntegerLiteral 0x1378283e8 <col:12> 'int' 127
|       `-CallExpr 0x137828518 <line:41:5, col:24> 'int'
|         |-ImplicitCastExpr 0x137828500 <col:5> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x137828438 <col:5> 'int ()' Function 0x13780dfe8 'JXL_ASSERT' 'int ()'
|         `-BinaryOperator 0x1378284b0 <col:16, col:23> 'int' '>='
|           |-ImplicitCastExpr 0x137828498 <col:16> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x137828458 <col:16> 'int' lvalue Var 0x137827cf0 'exp' 'int'
|           `-IntegerLiteral 0x137828478 <col:23> 'int' 0
`-FunctionDecl 0x1371244d0 <line:7:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1371245d0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x137124638 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x1371246a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x137124578 <<invalid sloc>> Implicit 882
