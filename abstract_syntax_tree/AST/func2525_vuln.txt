TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
`-FunctionDecl 0x13b80de88 <dataset_diviso_filec/func2525_vuln.c:1:1, line:26:1> line:1:1 invalid insert 'int (int, int *)'
  |-ParmVarDecl 0x13b80dcf0 <col:9, col:18> col:18 invalid p 'int'
  |-ParmVarDecl 0x13b80dda8 <col:21, col:35> col:35 referenced invalid s 'int *'
  `-CompoundStmt 0x13b829b78 <line:2:1, line:26:1>
    |-DeclStmt 0x13b80e028 <line:3:3, col:23>
    | `-VarDecl 0x13b80df58 <col:3, col:18> col:7 used count 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x13b80dfe0 <col:15, col:18> '<dependent type>' contains-errors lvalue ->nelem
    |     `-RecoveryExpr 0x13b80dfc0 <col:15> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13b80e1b0 <line:4:3, col:25>
    | |-VarDecl 0x13b80e058 <col:3, col:12> col:7 used lo 'int' cinit
    | | `-IntegerLiteral 0x13b80e0c0 <col:12> 'int' 0
    | `-VarDecl 0x13b80e0f8 <col:3, col:20> col:15 used hi 'int' cinit
    |   `-ImplicitCastExpr 0x13b80e180 <col:20> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x13b80e160 <col:20> 'int' contains-errors lvalue Var 0x13b80df58 'count' 'int'
    |-DeclStmt 0x13b80e248 <line:5:3, col:8>
    | `-VarDecl 0x13b80e1e0 <col:3, col:7> col:7 used i 'int'
    |-WhileStmt 0x13b828850 <line:6:3, line:13:5>
    | |-BinaryOperator 0x13b80e2d0 <line:6:10, col:15> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x13b80e2a0 <col:10> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13b80e260 <col:10> 'int' lvalue Var 0x13b80e058 'lo' 'int'
    | | `-ImplicitCastExpr 0x13b80e2b8 <col:15> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x13b80e280 <col:15> 'int' contains-errors lvalue Var 0x13b80e0f8 'hi' 'int'
    | `-CompoundStmt 0x13b828830 <line:7:5, line:13:5>
    |   |-DeclStmt 0x13b828510 <line:8:7, col:53>
    |   | `-VarDecl 0x13b80e308 <col:7, col:52> col:11 used mid 'int' cinit
    |   |   `-ImplicitCastExpr 0x13b8284f8 <col:17, col:52> 'int' contains-errors <IntegralCast>
    |   |     `-BinaryOperator 0x13b8284d8 <col:17, col:52> 'unsigned int' contains-errors '>>'
    |   |       |-ParenExpr 0x13b828498 <col:17, col:47> 'unsigned int' contains-errors
    |   |       | `-BinaryOperator 0x13b828478 <col:18, col:45> 'unsigned int' contains-errors '+'
    |   |       |   |-CStyleCastExpr 0x13b80e3c0 <col:18, col:29> 'unsigned int' <IntegralCast>
    |   |       |   | `-ImplicitCastExpr 0x13b80e3a8 <col:29> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       |   |   `-DeclRefExpr 0x13b80e370 <col:29> 'int' lvalue Var 0x13b80e058 'lo' 'int'
    |   |       |   `-CStyleCastExpr 0x13b828450 <col:34, col:45> 'unsigned int' contains-errors <IntegralCast>
    |   |       |     `-ImplicitCastExpr 0x13b828438 <col:45> 'int' contains-errors <LValueToRValue> part_of_explicit_cast
    |   |       |       `-DeclRefExpr 0x13b828400 <col:45> 'int' contains-errors lvalue Var 0x13b80e0f8 'hi' 'int'
    |   |       `-IntegerLiteral 0x13b8284b8 <col:52> 'int' 1
    |   `-IfStmt 0x13b828800 <line:9:7, line:12:14> has_else
    |     |-BinaryOperator 0x13b8286b0 <line:9:11, col:35> 'int' contains-errors '>'
    |     | |-CXXDependentScopeMemberExpr 0x13b828600 <col:11, col:25> '<dependent type>' contains-errors lvalue .index
    |     | | `-ArraySubscriptExpr 0x13b8285e0 <col:11, col:23> '<dependent type>' contains-errors lvalue
    |     | |   |-ImplicitCastExpr 0x13b8285b0 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   | `-CXXDependentScopeMemberExpr 0x13b828548 <col:11, col:14> '<dependent type>' contains-errors lvalue ->elems
    |     | |   |   `-RecoveryExpr 0x13b828528 <col:11> '<dependent type>' contains-errors lvalue
    |     | |   `-ImplicitCastExpr 0x13b8285c8 <col:20> 'int' contains-errors <LValueToRValue>
    |     | |     `-DeclRefExpr 0x13b828590 <col:20> 'int' contains-errors lvalue Var 0x13b80e308 'mid' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x13b828668 <col:33, col:35> '<dependent type>' contains-errors lvalue .index
    |     |   `-RecoveryExpr 0x13b828648 <col:33> '<dependent type>' contains-errors lvalue
    |     |-BinaryOperator 0x13b828768 <line:10:9, col:20> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x13b8286d0 <col:9> 'int' lvalue Var 0x13b80e058 'lo' 'int'
    |     | `-BinaryOperator 0x13b828748 <col:14, col:20> 'int' contains-errors '+'
    |     |   |-ImplicitCastExpr 0x13b828730 <col:14> 'int' contains-errors <LValueToRValue>
    |     |   | `-DeclRefExpr 0x13b8286f0 <col:14> 'int' contains-errors lvalue Var 0x13b80e308 'mid' 'int'
    |     |   `-IntegerLiteral 0x13b828710 <col:20> 'int' 1
    |     `-BinaryOperator 0x13b8287e0 <line:12:9, col:14> 'int' contains-errors '='
    |       |-DeclRefExpr 0x13b828788 <col:9> 'int' contains-errors lvalue Var 0x13b80e0f8 'hi' 'int'
    |       `-ImplicitCastExpr 0x13b8287c8 <col:14> 'int' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x13b8287a8 <col:14> 'int' contains-errors lvalue Var 0x13b80e308 'mid' 'int'
    |-IfStmt 0x13b828cd8 <line:15:3, line:19:5>
    | |-BinaryOperator 0x13b828aa8 <line:15:7, col:45> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x13b8288e0 <col:7, col:12> 'int' contains-errors '<'
    | | | |-ImplicitCastExpr 0x13b8288b0 <col:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x13b828870 <col:7> 'int' lvalue Var 0x13b80e058 'lo' 'int'
    | | | `-ImplicitCastExpr 0x13b8288c8 <col:12> 'int' contains-errors <LValueToRValue>
    | | |   `-DeclRefExpr 0x13b828890 <col:12> 'int' contains-errors lvalue Var 0x13b80df58 'count' 'int'
    | | `-BinaryOperator 0x13b828a88 <col:21, col:45> 'int' contains-errors '=='
    | |   |-CXXDependentScopeMemberExpr 0x13b828920 <col:21, col:23> '<dependent type>' contains-errors lvalue .index
    | |   | `-RecoveryExpr 0x13b828900 <col:21> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x13b828a40 <col:32, col:45> '<dependent type>' contains-errors lvalue .index
    | |     `-ArraySubscriptExpr 0x13b828a20 <col:32, col:43> '<dependent type>' contains-errors lvalue
    | |       |-ImplicitCastExpr 0x13b8289f0 <col:32, col:35> '<dependent type>' contains-errors <LValueToRValue>
    | |       | `-CXXDependentScopeMemberExpr 0x13b828988 <col:32, col:35> '<dependent type>' contains-errors lvalue ->elems
    | |       |   `-RecoveryExpr 0x13b828968 <col:32> '<dependent type>' contains-errors lvalue
    | |       `-ImplicitCastExpr 0x13b828a08 <col:41> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x13b8289d0 <col:41> 'int' lvalue Var 0x13b80e058 'lo' 'int'
    | `-CompoundStmt 0x13b828cb8 <line:16:5, line:19:5>
    |   |-CompoundAssignOperator 0x13b828c78 <line:17:7, col:36> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-CXXDependentScopeMemberExpr 0x13b828bc8 <col:7, col:20> '<dependent type>' contains-errors lvalue .constraint
    |   | | `-ArraySubscriptExpr 0x13b828ba8 <col:7, col:18> '<dependent type>' contains-errors lvalue
    |   | |   |-ImplicitCastExpr 0x13b828b78 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   | `-CXXDependentScopeMemberExpr 0x13b828b10 <col:7, col:10> '<dependent type>' contains-errors lvalue ->elems
    |   | |   |   `-RecoveryExpr 0x13b828ae8 <col:7> '<dependent type>' contains-errors lvalue
    |   | |   |     `-DeclRefExpr 0x13b828ac8 <col:7> 'int *' lvalue ParmVar 0x13b80dda8 's' 'int *'
    |   | |   `-ImplicitCastExpr 0x13b828b90 <col:16> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x13b828b58 <col:16> 'int' lvalue Var 0x13b80e058 'lo' 'int'
    |   | `-CXXDependentScopeMemberExpr 0x13b828c30 <col:34, col:36> '<dependent type>' contains-errors lvalue .constraint
    |   |   `-RecoveryExpr 0x13b828c10 <col:34> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x13b828ca8 <line:18:7>
    |-CallExpr 0x13b828fb8 <line:21:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b828e50 <col:3> 'int ()' Function 0x13b828d98 'REALLOC_IF_NECESSARY' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x13b828e90 <col:24, col:27> '<dependent type>' contains-errors lvalue ->elems
    | | `-RecoveryExpr 0x13b828e70 <col:24> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x13b828ef8 <col:34, col:37> '<dependent type>' contains-errors lvalue ->alloc
    | | `-RecoveryExpr 0x13b828ed8 <col:34> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x13b828f98 <col:44, col:52> 'int' contains-errors '+'
    |   |-ImplicitCastExpr 0x13b828f80 <col:44> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x13b828f40 <col:44> 'int' contains-errors lvalue Var 0x13b80df58 'count' 'int'
    |   `-IntegerLiteral 0x13b828f60 <col:52> 'int' 1
    |-ForStmt 0x13b829368 <line:22:3, line:23:33>
    | |-BinaryOperator 0x13b829048 <line:22:8, col:12> 'int' contains-errors '='
    | | |-DeclRefExpr 0x13b828ff0 <col:8> 'int' lvalue Var 0x13b80e1e0 'i' 'int'
    | | `-ImplicitCastExpr 0x13b829030 <col:12> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x13b829010 <col:12> 'int' contains-errors lvalue Var 0x13b80df58 'count' 'int'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13b8290d8 <col:19, col:23> 'int' '>'
    | | |-ImplicitCastExpr 0x13b8290a8 <col:19> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13b829068 <col:19> 'int' lvalue Var 0x13b80e1e0 'i' 'int'
    | | `-ImplicitCastExpr 0x13b8290c0 <col:23> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b829088 <col:23> 'int' lvalue Var 0x13b80e058 'lo' 'int'
    | |-UnaryOperator 0x13b829118 <col:27, col:28> 'int' postfix '--'
    | | `-DeclRefExpr 0x13b8290f8 <col:27> 'int' lvalue Var 0x13b80e1e0 'i' 'int'
    | `-BinaryOperator 0x13b829348 <line:23:5, col:33> '<dependent type>' contains-errors '='
    |   |-ArraySubscriptExpr 0x13b829210 <col:5, col:15> '<dependent type>' contains-errors lvalue
    |   | |-ImplicitCastExpr 0x13b8291e0 <col:5, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | `-CXXDependentScopeMemberExpr 0x13b829178 <col:5, col:8> '<dependent type>' contains-errors lvalue ->elems
    |   | |   `-RecoveryExpr 0x13b829150 <col:5> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x13b829130 <col:5> 'int *' lvalue ParmVar 0x13b80dda8 's' 'int *'
    |   | `-ImplicitCastExpr 0x13b8291f8 <col:14> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13b8291c0 <col:14> 'int' lvalue Var 0x13b80e1e0 'i' 'int'
    |   `-ArraySubscriptExpr 0x13b829328 <col:19, col:33> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x13b829310 <col:19, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x13b829250 <col:19, col:22> '<dependent type>' contains-errors lvalue ->elems
    |     |   `-RecoveryExpr 0x13b829230 <col:19> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x13b8292f0 <col:28, col:32> 'int' '-'
    |       |-ImplicitCastExpr 0x13b8292d8 <col:28> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x13b829298 <col:28> 'int' lvalue Var 0x13b80e1e0 'i' 'int'
    |       `-IntegerLiteral 0x13b8292b8 <col:32> 'int' 1
    |-BinaryOperator 0x13b829ad8 <line:24:3, col:18> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x13b829a98 <col:3, col:14> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x13b829a68 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x13b829a00 <col:3, col:6> '<dependent type>' contains-errors lvalue ->elems
    | | |   `-RecoveryExpr 0x13b8293c0 <col:3> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x13b8293a0 <col:3> 'int *' lvalue ParmVar 0x13b80dda8 's' 'int *'
    | | `-ImplicitCastExpr 0x13b829a80 <col:12> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b829a48 <col:12> 'int' lvalue Var 0x13b80e058 'lo' 'int'
    | `-RecoveryExpr 0x13b829ab8 <col:18> '<dependent type>' contains-errors lvalue
    `-UnaryOperator 0x13b829b60 <line:25:3, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow
      `-CXXDependentScopeMemberExpr 0x13b829b18 <col:5, col:8> '<dependent type>' contains-errors lvalue ->nelem
        `-RecoveryExpr 0x13b829af8 <col:5> '<dependent type>' contains-errors lvalue
