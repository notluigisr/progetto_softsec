TranslationUnitDecl 0x15a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a055bd0 '__int128'
|-TypedefDecl 0x15a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a055bf0 'unsigned __int128'
|-TypedefDecl 0x15a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a126000 'struct __NSConstantString_tag'
|   `-Record 0x15a056580 '__NSConstantString_tag'
|-TypedefDecl 0x15a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a055d90 '__SVInt8_t'
|-TypedefDecl 0x15a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a055db0 '__SVInt16_t'
|-TypedefDecl 0x15a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a055dd0 '__SVInt32_t'
|-TypedefDecl 0x15a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a055df0 '__SVInt64_t'
|-TypedefDecl 0x15a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a055e10 '__SVUint8_t'
|-TypedefDecl 0x15a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a055e30 '__SVUint16_t'
|-TypedefDecl 0x15a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a055e50 '__SVUint32_t'
|-TypedefDecl 0x15a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a055e70 '__SVUint64_t'
|-TypedefDecl 0x15a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a055e90 '__SVFloat16_t'
|-TypedefDecl 0x15a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a056390 '__SVBool_t'
|-TypedefDecl 0x15a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a0563f0 '__SVCount_t'
|-TypedefDecl 0x15a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a127fb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-TypedefDecl 0x15a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a127fb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-FunctionDecl 0x15a1281a8 <dataset_diviso_filec/func11809_vuln.c:1:1, line:23:1> line:1:14 __filterQuotedShell 'char *(const char *)' static
| |-ParmVarDecl 0x15a1280d8 <col:34, col:46> col:46 used arg 'const char *'
| `-CompoundStmt 0x15a142588 <col:51, line:23:1>
|   |-CallExpr 0x15a128478 <line:2:2, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a1283d0 <col:2> 'int ()' Function 0x15a128318 'r_return_val_if_fail' 'int ()'
|   | |-DeclRefExpr 0x15a1283f0 <col:24> 'const char *' lvalue ParmVar 0x15a1280d8 'arg' 'const char *'
|   | `-RecoveryExpr 0x15a128458 <col:29> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15a141ec8 <line:3:2, col:37>
|   | `-VarDecl 0x15a1284c0 <col:2, col:36> col:8 used a 'char *' cinit
|   |   `-ImplicitCastExpr 0x15a141eb0 <col:12, col:36> 'char *' <BitCast>
|   |     `-CallExpr 0x15a141e88 <col:12, col:36> 'void *'
|   |       |-ImplicitCastExpr 0x15a141e70 <col:12> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x15a141b40 <col:12> 'void *(unsigned long)' Function 0x15a1419a0 'malloc' 'void *(unsigned long)'
|   |       `-BinaryOperator 0x15a141e20 <col:20, col:35> 'unsigned long' '+'
|   |         |-CallExpr 0x15a141da8 <col:20, col:31> 'unsigned long'
|   |         | |-ImplicitCastExpr 0x15a141d90 <col:20> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |         | | `-DeclRefExpr 0x15a141d08 <col:20> 'unsigned long (const char *)' Function 0x15a141b98 'strlen' 'unsigned long (const char *)'
|   |         | `-ImplicitCastExpr 0x15a141dd0 <col:28> 'const char *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x15a141d28 <col:28> 'const char *' lvalue ParmVar 0x15a1280d8 'arg' 'const char *'
|   |         `-ImplicitCastExpr 0x15a141e08 <col:35> 'unsigned long' <IntegralCast>
|   |           `-IntegerLiteral 0x15a141de8 <col:35> 'int' 1
|   |-IfStmt 0x15a141f90 <line:4:2, line:6:2>
|   | |-UnaryOperator 0x15a141f18 <line:4:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15a141f00 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15a141ee0 <col:7> 'char *' lvalue Var 0x15a1284c0 'a' 'char *'
|   | `-CompoundStmt 0x15a141f78 <col:10, line:6:2>
|   |   `-ReturnStmt 0x15a141f68 <line:5:3, col:10>
|   |     `-RecoveryExpr 0x15a141f48 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15a142068 <line:7:2, col:13>
|   | `-VarDecl 0x15a141fc8 <col:2, col:12> col:8 used b 'char *' cinit
|   |   `-ImplicitCastExpr 0x15a142050 <col:12> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15a142030 <col:12> 'char *' lvalue Var 0x15a1284c0 'a' 'char *'
|   |-WhileStmt 0x15a142478 <line:8:2, line:20:2>
|   | |-ImplicitCastExpr 0x15a1420d0 <line:8:9, col:10> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x15a1420b8 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x15a1420a0 <col:10> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x15a142080 <col:10> 'const char *' lvalue ParmVar 0x15a1280d8 'arg' 'const char *'
|   | `-CompoundStmt 0x15a142458 <col:15, line:20:2>
|   |   |-SwitchStmt 0x15a142168 <line:9:3, line:18:3>
|   |   | |-ImplicitCastExpr 0x15a142150 <line:9:11, col:12> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x15a142138 <col:11, col:12> 'char' <LValueToRValue>
|   |   | |   `-UnaryOperator 0x15a142120 <col:11, col:12> 'const char' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x15a142108 <col:12> 'const char *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x15a1420e8 <col:12> 'const char *' lvalue ParmVar 0x15a1280d8 'arg' 'const char *'
|   |   | `-CompoundStmt 0x15a1423f8 <col:17, line:18:3>
|   |   |   |-CaseStmt 0x15a1421c0 <line:10:3, line:14:4>
|   |   |   | |-ConstantExpr 0x15a1421a8 <line:10:8> 'int'
|   |   |   | | `-CharacterLiteral 0x15a142190 <col:8> 'int' 32
|   |   |   | `-CaseStmt 0x15a142218 <line:11:3, line:14:4>
|   |   |   |   |-ConstantExpr 0x15a142200 <line:11:8> 'int'
|   |   |   |   | `-CharacterLiteral 0x15a1421e8 <col:8> 'int' 61
|   |   |   |   `-CaseStmt 0x15a142270 <line:12:3, line:14:4>
|   |   |   |     |-ConstantExpr 0x15a142258 <line:12:8> 'int'
|   |   |   |     | `-CharacterLiteral 0x15a142240 <col:8> 'int' 13
|   |   |   |     `-CaseStmt 0x15a1422c8 <line:13:3, line:14:4>
|   |   |   |       |-ConstantExpr 0x15a1422b0 <line:13:8> 'int'
|   |   |   |       | `-CharacterLiteral 0x15a142298 <col:8> 'int' 10
|   |   |   |       `-BreakStmt 0x15a1422f0 <line:14:4>
|   |   |   |-DefaultStmt 0x15a1423d0 <line:15:3, line:16:12>
|   |   |   | `-BinaryOperator 0x15a1423b0 <col:4, col:12> 'char' '='
|   |   |   |   |-UnaryOperator 0x15a142330 <col:4, col:6> 'char' lvalue prefix '*' cannot overflow
|   |   |   |   | `-UnaryOperator 0x15a142318 <col:5, col:6> 'char *' postfix '++'
|   |   |   |   |   `-DeclRefExpr 0x15a1422f8 <col:5> 'char *' lvalue Var 0x15a141fc8 'b' 'char *'
|   |   |   |   `-ImplicitCastExpr 0x15a142398 <col:11, col:12> 'char' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x15a142380 <col:11, col:12> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |       `-ImplicitCastExpr 0x15a142368 <col:12> 'const char *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x15a142348 <col:12> 'const char *' lvalue ParmVar 0x15a1280d8 'arg' 'const char *'
|   |   |   `-BreakStmt 0x15a1423f0 <line:17:4>
|   |   `-UnaryOperator 0x15a142440 <line:19:3, col:6> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x15a142420 <col:3> 'const char *' lvalue ParmVar 0x15a1280d8 'arg' 'const char *'
|   |-BinaryOperator 0x15a142520 <line:21:2, col:7> 'char' '='
|   | |-UnaryOperator 0x15a1424d0 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x15a1424b8 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15a142498 <col:3> 'char *' lvalue Var 0x15a141fc8 'b' 'char *'
|   | `-ImplicitCastExpr 0x15a142508 <col:7> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x15a1424e8 <col:7> 'int' 0
|   `-ReturnStmt 0x15a142578 <line:22:2, col:9>
|     `-ImplicitCastExpr 0x15a142560 <col:9> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x15a142540 <col:9> 'char *' lvalue Var 0x15a1284c0 'a' 'char *'
|-FunctionDecl 0x15a1419a0 <line:3:12> col:12 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x15a141aa0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x15a141a48 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x15a141b10 <col:12> Implicit 1
`-FunctionDecl 0x15a141b98 <col:20> col:20 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x15a141c98 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15a141c40 <<invalid sloc>> Implicit 902
