TranslationUnitDecl 0x14f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14f855bd0 '__int128'
|-TypedefDecl 0x14f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14f855bf0 'unsigned __int128'
|-TypedefDecl 0x14f926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f926800 'struct __NSConstantString_tag'
|   `-Record 0x14f856580 '__NSConstantString_tag'
|-TypedefDecl 0x14f926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14f855d90 '__SVInt8_t'
|-TypedefDecl 0x14f926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14f855db0 '__SVInt16_t'
|-TypedefDecl 0x14f926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14f855dd0 '__SVInt32_t'
|-TypedefDecl 0x14f926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14f855df0 '__SVInt64_t'
|-TypedefDecl 0x14f926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14f855e10 '__SVUint8_t'
|-TypedefDecl 0x14f926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14f855e30 '__SVUint16_t'
|-TypedefDecl 0x14f926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14f855e50 '__SVUint32_t'
|-TypedefDecl 0x14f926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14f855e70 '__SVUint64_t'
|-TypedefDecl 0x14f926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14f855e90 '__SVFloat16_t'
|-TypedefDecl 0x14f926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14f926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14f926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14f926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14f926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14f927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14f9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14f927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14f9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14f9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14f928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14f928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14f9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14f856390 '__SVBool_t'
|-TypedefDecl 0x14f928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14f8563f0 '__SVCount_t'
|-TypedefDecl 0x14f9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f9287b0 'char *'
|   `-BuiltinType 0x14f8556b0 'char'
|-TypedefDecl 0x14f928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f9287b0 'char *'
|   `-BuiltinType 0x14f8556b0 'char'
|-FunctionDecl 0x14f928a08 <dataset_diviso_filec/func2179_vuln.c:1:1, line:51:1> line:1:1 invalid bytesPerDeepLineTable 'int (const int)'
| |-ParmVarDecl 0x14f9288f0 <col:24, <invalid sloc>> col:37 invalid 'const int'
| `-CompoundStmt 0x14f942b40 <line:7:1, line:51:1>
|   `-ForStmt 0x14f9429b8 <line:11:5, line:42:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-BinaryOperator 0x14f928c30 <line:12:10, col:28> 'int' contains-errors '!='
|     | |-RecoveryExpr 0x14f928b88 <col:10> '<dependent type>' contains-errors lvalue
|     | `-CallExpr 0x14f928c10 <col:15, col:28> '<dependent type>' contains-errors
|     |   `-CXXDependentScopeMemberExpr 0x14f928bc8 <col:15, col:24> '<dependent type>' contains-errors lvalue .end
|     |     `-RecoveryExpr 0x14f928ba8 <col:15> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x14f928ca0 <line:13:10, col:12> '<dependent type>' contains-errors prefix '++' cannot overflow
|     | `-RecoveryExpr 0x14f928c80 <col:12> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x14f942968 <line:14:5, line:42:5>
|       |-DeclStmt 0x158008768 <line:15:9, col:57>
|       | `-VarDecl 0x14f928cd0 <col:9, col:56> col:19 used ySampling 'const int' cinit
|       |   `-CallExpr 0x158008740 <col:31, col:56> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x158008560 <col:31> 'int (int)' Function 0x1580083a0 'abs' 'int (int)'
|       |     `-CXXDependentScopeMemberExpr 0x1580086f8 <col:35, col:47> '<dependent type>' contains-errors lvalue .ySampling
|       |       `-CallExpr 0x1580086d8 <col:35, col:45> '<dependent type>' contains-errors
|       |         `-CXXDependentScopeMemberExpr 0x158008690 <col:35, col:37> '<dependent type>' contains-errors lvalue .channel
|       |           `-RecoveryExpr 0x158008670 <col:35> '<dependent type>' contains-errors lvalue
|       |-DeclStmt 0x158008a08 <line:16:9, col:57>
|       | `-VarDecl 0x158008798 <col:9, col:56> col:19 used xSampling 'const int' cinit
|       |   `-CallExpr 0x1580089e0 <col:31, col:56> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x158008800 <col:31> 'int (int)' Function 0x1580083a0 'abs' 'int (int)'
|       |     `-CXXDependentScopeMemberExpr 0x158008998 <col:35, col:47> '<dependent type>' contains-errors lvalue .xSampling
|       |       `-CallExpr 0x158008978 <col:35, col:45> '<dependent type>' contains-errors
|       |         `-CXXDependentScopeMemberExpr 0x158008930 <col:35, col:37> '<dependent type>' contains-errors lvalue .channel
|       |           `-RecoveryExpr 0x158008910 <col:35> '<dependent type>' contains-errors lvalue
|       |-DeclStmt 0x158008e08 <line:17:9, col:63>
|       | `-VarDecl 0x158008a38 <col:9, col:62> col:19 used pixelSize 'const int' cinit
|       |   `-CallExpr 0x158008de0 <col:31, col:62> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x158008c00 <col:31> 'int ()' Function 0x158008b48 'pixelTypeSize' 'int ()'
|       |     `-CXXDependentScopeMemberExpr 0x158008d98 <col:46, col:58> '<dependent type>' contains-errors lvalue .type
|       |       `-CallExpr 0x158008d78 <col:46, col:56> '<dependent type>' contains-errors
|       |         `-CXXDependentScopeMemberExpr 0x158008d30 <col:46, col:48> '<dependent type>' contains-errors lvalue .channel
|       |           `-RecoveryExpr 0x158008d10 <col:46> '<dependent type>' contains-errors lvalue
|       |-DeclStmt 0x158009058 <line:27:9, col:68>
|       | `-VarDecl 0x158008e38 <col:9, col:67> col:19 used sampleMinY 'const int' cinit
|       |   `-CallExpr 0x158009028 <col:32, col:67> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x158008f80 <col:32> 'int ()' Function 0x158008ec8 'roundToNextMultiple' 'int ()'
|       |     |-RecoveryExpr 0x158009008 <col:52> '<dependent type>' contains-errors lvalue
|       |     `-DeclRefExpr 0x158008fb8 <col:58> 'const int' contains-errors lvalue Var 0x14f928cd0 'ySampling' 'const int'
|       |-DeclStmt 0x14f9420b8 <line:28:9, col:68>
|       | `-VarDecl 0x158009088 <col:9, col:67> col:19 used sampleMaxY 'const int' cinit
|       |   `-CallExpr 0x14f942088 <col:32, col:67> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x1580091d0 <col:32> 'int ()' Function 0x158009118 'roundToPrevMultiple' 'int ()'
|       |     |-RecoveryExpr 0x14f942068 <col:52> '<dependent type>' contains-errors lvalue
|       |     `-DeclRefExpr 0x14f942018 <col:58> 'const int' contains-errors lvalue Var 0x14f928cd0 'ySampling' 'const int'
|       |-DeclStmt 0x14f942190 <line:29:9, col:80>
|       | `-VarDecl 0x14f9420e8 <col:9, col:19> col:19 used sampleMinX 'const int'
|       |-DeclStmt 0x14f942268 <line:30:9, col:80>
|       | `-VarDecl 0x14f9421c0 <col:9, col:19> col:19 used sampleMaxX 'const int'
|       `-ForStmt 0x14f942930 <line:32:9, line:41:9>
|         |-DeclStmt 0x14f942338 <line:32:14, col:32>
|         | `-VarDecl 0x14f942298 <col:14, col:22> col:18 used y 'int' cinit
|         |   `-ImplicitCastExpr 0x14f942320 <col:22> 'int' contains-errors <LValueToRValue>
|         |     `-DeclRefExpr 0x14f942300 <col:22> 'const int' contains-errors lvalue Var 0x158008e38 'sampleMinY' 'const int'
|         |-<<<NULL>>>
|         |-BinaryOperator 0x14f9423c0 <col:34, col:39> 'int' contains-errors '<='
|         | |-ImplicitCastExpr 0x14f942390 <col:34> 'int' contains-errors <LValueToRValue>
|         | | `-DeclRefExpr 0x14f942350 <col:34> 'int' contains-errors lvalue Var 0x14f942298 'y' 'int'
|         | `-ImplicitCastExpr 0x14f9423a8 <col:39> 'int' contains-errors <LValueToRValue>
|         |   `-DeclRefExpr 0x14f942370 <col:39> 'const int' contains-errors lvalue Var 0x158009088 'sampleMaxY' 'const int'
|         |-CompoundAssignOperator 0x14f942438 <col:51, col:54> 'int' contains-errors '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         | |-DeclRefExpr 0x14f9423e0 <col:51> 'int' contains-errors lvalue Var 0x14f942298 'y' 'int'
|         | `-ImplicitCastExpr 0x14f942420 <col:54> 'int' contains-errors <LValueToRValue>
|         |   `-DeclRefExpr 0x14f942400 <col:54> 'const int' contains-errors lvalue Var 0x14f928cd0 'ySampling' 'const int'
|         `-CompoundStmt 0x14f942910 <line:33:9, line:41:9>
|           |-DeclStmt 0x14f942508 <line:34:13, col:27>
|           | `-VarDecl 0x14f942480 <col:13, col:26> col:17 used nBytes 'int' cinit
|           |   `-IntegerLiteral 0x14f9424e8 <col:26> 'int' 0
|           `-ForStmt 0x14f942898 <line:35:13, line:39:13>
|             |-DeclStmt 0x14f9425d8 <line:35:18, col:36>
|             | `-VarDecl 0x14f942538 <col:18, col:26> col:22 used x 'int' cinit
|             |   `-ImplicitCastExpr 0x14f9425c0 <col:26> 'int' <LValueToRValue>
|             |     `-DeclRefExpr 0x14f9425a0 <col:26> 'const int' lvalue Var 0x14f9420e8 'sampleMinX' 'const int'
|             |-<<<NULL>>>
|             |-BinaryOperator 0x14f942660 <col:38, col:43> 'int' '<='
|             | |-ImplicitCastExpr 0x14f942630 <col:38> 'int' <LValueToRValue>
|             | | `-DeclRefExpr 0x14f9425f0 <col:38> 'int' lvalue Var 0x14f942538 'x' 'int'
|             | `-ImplicitCastExpr 0x14f942648 <col:43> 'int' <LValueToRValue>
|             |   `-DeclRefExpr 0x14f942610 <col:43> 'const int' lvalue Var 0x14f9421c0 'sampleMaxX' 'const int'
|             |-CompoundAssignOperator 0x14f9426d8 <col:55, col:60> 'int' contains-errors '+=' ComputeLHSTy='int' ComputeResultTy='int'
|             | |-DeclRefExpr 0x14f942680 <col:55> 'int' lvalue Var 0x14f942538 'x' 'int'
|             | `-ImplicitCastExpr 0x14f9426c0 <col:60> 'int' contains-errors <LValueToRValue>
|             |   `-DeclRefExpr 0x14f9426a0 <col:60> 'const int' contains-errors lvalue Var 0x158008798 'xSampling' 'const int'
|             `-CompoundStmt 0x14f942888 <line:36:13, line:39:13>
`-FunctionDecl 0x1580083a0 <line:15:31> col:31 implicit used abs 'int (int)' extern
  |-ParmVarDecl 0x1580084a0 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x158008448 <<invalid sloc>> Implicit 998
  |-NoThrowAttr 0x158008510 <col:31> Implicit
  `-ConstAttr 0x158008538 <col:31> Implicit
