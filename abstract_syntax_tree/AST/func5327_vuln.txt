TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x1201281c8 <dataset_diviso_filec/func5327_vuln.c:1:1, line:60:1> line:1:14 invalid util_acl_to_str 'const char *(const int *)'
| |-ParmVarDecl 0x1201280f0 <col:30, col:52> col:52 referenced invalid e 'const int *'
| `-CompoundStmt 0x106809428 <line:2:1, line:60:1>
|   |-DeclStmt 0x1201284b0 <line:3:2, col:31>
|   | |-VarDecl 0x120128320 <col:2, col:21> col:14 used line 'char[80]' static
|   | `-VarDecl 0x120128430 <col:2, col:30> col:24 used buf 'char[20]' static
|   |-DeclStmt 0x120128548 <line:4:2, col:18>
|   | `-VarDecl 0x1201284e0 <col:2, col:15> col:15 used acl 'unsigned int'
|   |-IfStmt 0x1201286a0 <line:6:2, line:7:10>
|   | |-BinaryOperator 0x1201285d8 <line:6:6, col:11> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x120128560 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1201285b8 <col:11> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x120128690 <line:7:3, col:10>
|   |   `-ImplicitCastExpr 0x120128678 <col:10> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x120128660 <col:10> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x120128640 <col:10> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x120128770 <line:8:2, col:12> 'char' '='
|   | |-ArraySubscriptExpr 0x120128718 <col:2, col:8> 'char' lvalue
|   | | |-ImplicitCastExpr 0x120128700 <col:2> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1201286c0 <col:2> 'char[80]' lvalue Var 0x120128320 'line' 'char[80]'
|   | | `-IntegerLiteral 0x1201286e0 <col:7> 'int' 0
|   | `-ImplicitCastExpr 0x120128758 <col:12> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x120128738 <col:12> 'int' 0
|   |-WhileStmt 0x106809000 <line:9:2, line:57:2>
|   | |-BinaryOperator 0x120141e20 <line:9:9, col:14> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x120128790 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x120141e00 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x106808fc8 <col:20, line:57:2>
|   |   |-BinaryOperator 0x120141ec8 <line:10:3, col:12> 'unsigned int' contains-errors '='
|   |   | |-DeclRefExpr 0x120141e40 <col:3> 'unsigned int' lvalue Var 0x1201284e0 'acl' 'unsigned int'
|   |   | `-CXXDependentScopeMemberExpr 0x120141e80 <col:9, col:12> '<dependent type>' contains-errors lvalue ->method
|   |   |   `-RecoveryExpr 0x120141e60 <col:9> '<dependent type>' contains-errors lvalue
|   |   |-SwitchStmt 0x120141f20 <line:12:3, line:53:3>
|   |   | |-ImplicitCastExpr 0x120141f08 <line:12:11> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x120141ee8 <col:11> 'unsigned int' lvalue Var 0x1201284e0 'acl' 'unsigned int'
|   |   | `-CompoundStmt 0x106808a08 <col:16, line:53:3>
|   |   |   |-ReturnStmt 0x120141fb0 <line:14:4, col:11>
|   |   |   | `-ImplicitCastExpr 0x120141f98 <col:11> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x120141f80 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x120141f60 <col:11> 'char[4]' lvalue "STR"
|   |   |   |-ReturnStmt 0x120142028 <line:16:4, col:11>
|   |   |   | `-ImplicitCastExpr 0x120142010 <col:11> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x120141ff8 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x120141fd8 <col:11> 'char[4]' lvalue "STR"
|   |   |   |-ReturnStmt 0x1201420a0 <line:18:4, col:11>
|   |   |   | `-ImplicitCastExpr 0x120142088 <col:11> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x120142070 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x120142050 <col:11> 'char[4]' lvalue "STR"
|   |   |   |-CallExpr 0x1201427e8 <line:20:4, col:21> 'char *'
|   |   |   | |-ImplicitCastExpr 0x1201427d0 <col:4> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120142710 <col:4> 'char *(char *, const char *)' Function 0x120142530 'strcpy' 'char *(char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x120142818 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120142730 <col:11> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   | `-ImplicitCastExpr 0x120142848 <col:16> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x120142830 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x120142750 <col:16> 'char[4]' lvalue "STR"
|   |   |   |-IfStmt 0x120142d10 <line:21:4, line:22:39>
|   |   |   | |-BinaryOperator 0x120142920 <line:21:8, col:22> 'int' contains-errors '!='
|   |   |   | | |-CXXDependentScopeMemberExpr 0x120142880 <col:8, col:11> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   | | | `-RecoveryExpr 0x120142860 <col:8> '<dependent type>' contains-errors lvalue
|   |   |   | | `-RecoveryExpr 0x120142900 <col:22> '<dependent type>' contains-errors lvalue
|   |   |   | `-CallExpr 0x120142cd8 <line:22:5, col:39> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x120142ba0 <col:5> 'int (char *, const char *, ...)' Function 0x120142988 'sprintf' 'int (char *, const char *, ...)'
|   |   |   |   |-BinaryOperator 0x120142c18 <col:13, col:19> 'char *' '+'
|   |   |   |   | |-ImplicitCastExpr 0x120142c00 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x120142bc0 <col:13> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   |   | `-IntegerLiteral 0x120142be0 <col:19> 'int' 3
|   |   |   |   |-StringLiteral 0x120142c38 <col:22> 'char[4]' lvalue "STR"
|   |   |   |   `-CXXDependentScopeMemberExpr 0x120142c78 <col:29, col:32> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   |     `-RecoveryExpr 0x120142c58 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   |-BreakStmt 0x120142d30 <line:23:4>
|   |   |   |-CallExpr 0x120143600 <line:25:4, col:21> 'char *'
|   |   |   | |-ImplicitCastExpr 0x120142de0 <col:4> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120142d50 <col:4> 'char *(char *, const char *)' Function 0x120142530 'strcpy' 'char *(char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x120143630 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120142d70 <col:11> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   | `-ImplicitCastExpr 0x120143660 <col:16> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x120143648 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x120142d90 <col:16> 'char[4]' lvalue "STR"
|   |   |   |-BreakStmt 0x120143678 <line:26:4>
|   |   |   |-CallExpr 0x120143740 <line:28:4, col:21> 'char *'
|   |   |   | |-ImplicitCastExpr 0x120143728 <col:4> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120143698 <col:4> 'char *(char *, const char *)' Function 0x120142530 'strcpy' 'char *(char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x120143770 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1201436b8 <col:11> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   | `-ImplicitCastExpr 0x1201437a0 <col:16> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x120143788 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1201436d8 <col:16> 'char[4]' lvalue "STR"
|   |   |   |-BreakStmt 0x1201437b8 <line:29:4>
|   |   |   |-CallExpr 0x120143880 <line:31:4, col:21> 'char *'
|   |   |   | |-ImplicitCastExpr 0x120143868 <col:4> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1201437d8 <col:4> 'char *(char *, const char *)' Function 0x120142530 'strcpy' 'char *(char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x1201438b0 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1201437f8 <col:11> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   | `-ImplicitCastExpr 0x1201438e0 <col:16> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x1201438c8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x120143818 <col:16> 'char[4]' lvalue "STR"
|   |   |   |-IfStmt 0x120143b48 <line:32:4, line:33:39>
|   |   |   | |-BinaryOperator 0x1201439b8 <line:32:8, col:22> 'int' contains-errors '!='
|   |   |   | | |-CXXDependentScopeMemberExpr 0x120143918 <col:8, col:11> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   | | | `-RecoveryExpr 0x1201438f8 <col:8> '<dependent type>' contains-errors lvalue
|   |   |   | | `-RecoveryExpr 0x120143998 <col:22> '<dependent type>' contains-errors lvalue
|   |   |   | `-CallExpr 0x120143b10 <line:33:5, col:39> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x1201439d8 <col:5> 'int (char *, const char *, ...)' Function 0x120142988 'sprintf' 'int (char *, const char *, ...)'
|   |   |   |   |-BinaryOperator 0x120143a50 <col:13, col:19> 'char *' '+'
|   |   |   |   | |-ImplicitCastExpr 0x120143a38 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1201439f8 <col:13> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   |   | `-IntegerLiteral 0x120143a18 <col:19> 'int' 4
|   |   |   |   |-StringLiteral 0x120143a70 <col:22> 'char[4]' lvalue "STR"
|   |   |   |   `-CXXDependentScopeMemberExpr 0x120143ab0 <col:29, col:32> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   |     `-RecoveryExpr 0x120143a90 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   |-BreakStmt 0x120143b68 <line:34:4>
|   |   |   |-CallExpr 0x120143c30 <line:36:4, col:21> 'char *'
|   |   |   | |-ImplicitCastExpr 0x120143c18 <col:4> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120143b88 <col:4> 'char *(char *, const char *)' Function 0x120142530 'strcpy' 'char *(char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x120143c60 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120143ba8 <col:11> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   | `-ImplicitCastExpr 0x120143c90 <col:16> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x120143c78 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x120143bc8 <col:16> 'char[4]' lvalue "STR"
|   |   |   |-IfStmt 0x120143ef8 <line:37:4, line:38:39>
|   |   |   | |-BinaryOperator 0x120143d68 <line:37:8, col:22> 'int' contains-errors '!='
|   |   |   | | |-CXXDependentScopeMemberExpr 0x120143cc8 <col:8, col:11> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   | | | `-RecoveryExpr 0x120143ca8 <col:8> '<dependent type>' contains-errors lvalue
|   |   |   | | `-RecoveryExpr 0x120143d48 <col:22> '<dependent type>' contains-errors lvalue
|   |   |   | `-CallExpr 0x120143ec0 <line:38:5, col:39> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x120143d88 <col:5> 'int (char *, const char *, ...)' Function 0x120142988 'sprintf' 'int (char *, const char *, ...)'
|   |   |   |   |-BinaryOperator 0x120143e00 <col:13, col:19> 'char *' '+'
|   |   |   |   | |-ImplicitCastExpr 0x120143de8 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x120143da8 <col:13> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   |   | `-IntegerLiteral 0x120143dc8 <col:19> 'int' 3
|   |   |   |   |-StringLiteral 0x120143e20 <col:22> 'char[4]' lvalue "STR"
|   |   |   |   `-CXXDependentScopeMemberExpr 0x120143e60 <col:29, col:32> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   |     `-RecoveryExpr 0x120143e40 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   |-BreakStmt 0x120143f18 <line:39:4>
|   |   |   |-CallExpr 0x120143fe0 <line:41:4, col:21> 'char *'
|   |   |   | |-ImplicitCastExpr 0x120143fc8 <col:4> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120143f38 <col:4> 'char *(char *, const char *)' Function 0x120142530 'strcpy' 'char *(char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x120144010 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120143f58 <col:11> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   | `-ImplicitCastExpr 0x120144040 <col:16> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x120144028 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x120143f78 <col:16> 'char[4]' lvalue "STR"
|   |   |   |-IfStmt 0x1201442a8 <line:42:4, line:43:39>
|   |   |   | |-BinaryOperator 0x120144118 <line:42:8, col:22> 'int' contains-errors '!='
|   |   |   | | |-CXXDependentScopeMemberExpr 0x120144078 <col:8, col:11> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   | | | `-RecoveryExpr 0x120144058 <col:8> '<dependent type>' contains-errors lvalue
|   |   |   | | `-RecoveryExpr 0x1201440f8 <col:22> '<dependent type>' contains-errors lvalue
|   |   |   | `-CallExpr 0x120144270 <line:43:5, col:39> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x120144138 <col:5> 'int (char *, const char *, ...)' Function 0x120142988 'sprintf' 'int (char *, const char *, ...)'
|   |   |   |   |-BinaryOperator 0x1201441b0 <col:13, col:19> 'char *' '+'
|   |   |   |   | |-ImplicitCastExpr 0x120144198 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x120144158 <col:13> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   |   | `-IntegerLiteral 0x120144178 <col:19> 'int' 3
|   |   |   |   |-StringLiteral 0x1201441d0 <col:22> 'char[4]' lvalue "STR"
|   |   |   |   `-CXXDependentScopeMemberExpr 0x120144210 <col:29, col:32> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   |     `-RecoveryExpr 0x1201441f0 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   |-BreakStmt 0x1201442c8 <line:44:4>
|   |   |   |-CallExpr 0x120144390 <line:46:4, col:21> 'char *'
|   |   |   | |-ImplicitCastExpr 0x120144378 <col:4> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1201442e8 <col:4> 'char *(char *, const char *)' Function 0x120142530 'strcpy' 'char *(char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x1201443c0 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120144308 <col:11> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   | `-ImplicitCastExpr 0x1201443f0 <col:16> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x1201443d8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x120144328 <col:16> 'char[4]' lvalue "STR"
|   |   |   |-IfStmt 0x106808898 <line:47:4, line:48:39>
|   |   |   | |-BinaryOperator 0x1201444c8 <line:47:8, col:22> 'int' contains-errors '!='
|   |   |   | | |-CXXDependentScopeMemberExpr 0x120144428 <col:8, col:11> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   | | | `-RecoveryExpr 0x120144408 <col:8> '<dependent type>' contains-errors lvalue
|   |   |   | | `-RecoveryExpr 0x1201444a8 <col:22> '<dependent type>' contains-errors lvalue
|   |   |   | `-CallExpr 0x106808860 <line:48:5, col:39> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x1201444e8 <col:5> 'int (char *, const char *, ...)' Function 0x120142988 'sprintf' 'int (char *, const char *, ...)'
|   |   |   |   |-BinaryOperator 0x120144560 <col:13, col:19> 'char *' '+'
|   |   |   |   | |-ImplicitCastExpr 0x120144548 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x120144508 <col:13> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   |   | `-IntegerLiteral 0x120144528 <col:19> 'int' 3
|   |   |   |   |-StringLiteral 0x120144580 <col:22> 'char[4]' lvalue "STR"
|   |   |   |   `-CXXDependentScopeMemberExpr 0x106808800 <col:29, col:32> '<dependent type>' contains-errors lvalue ->key_ref
|   |   |   |     `-RecoveryExpr 0x1201445a0 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   |-BreakStmt 0x1068088b8 <line:49:4>
|   |   |   |-DefaultStmt 0x1068089e0 <line:50:3, line:51:21>
|   |   |   | `-CallExpr 0x106808968 <col:4, col:21> 'char *'
|   |   |   |   |-ImplicitCastExpr 0x106808950 <col:4> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x1068088c0 <col:4> 'char *(char *, const char *)' Function 0x120142530 'strcpy' 'char *(char *, const char *)'
|   |   |   |   |-ImplicitCastExpr 0x106808998 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x1068088e0 <col:11> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |   |   `-ImplicitCastExpr 0x1068089c8 <col:16> 'const char *' <NoOp>
|   |   |   |     `-ImplicitCastExpr 0x1068089b0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   |       `-StringLiteral 0x106808900 <col:16> 'char[4]' lvalue "STR"
|   |   |   `-BreakStmt 0x106808a00 <line:52:4>
|   |   |-CallExpr 0x106808d60 <line:54:3, col:19> 'char *'
|   |   | |-ImplicitCastExpr 0x106808d48 <col:3> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x106808cb8 <col:3> 'char *(char *, const char *)' Function 0x106808ad8 'strcat' 'char *(char *, const char *)'
|   |   | |-ImplicitCastExpr 0x106808d90 <col:10> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x106808cd8 <col:10> 'char[80]' lvalue Var 0x120128320 'line' 'char[80]'
|   |   | `-ImplicitCastExpr 0x106808dc0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x106808da8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x106808cf8 <col:16> 'char[20]' lvalue Var 0x120128430 'buf' 'char[20]'
|   |   |-CallExpr 0x106808e80 <line:55:3, col:21> 'char *'
|   |   | |-ImplicitCastExpr 0x106808e68 <col:3> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x106808dd8 <col:3> 'char *(char *, const char *)' Function 0x106808ad8 'strcat' 'char *(char *, const char *)'
|   |   | |-ImplicitCastExpr 0x106808eb0 <col:10> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x106808df8 <col:10> 'char[80]' lvalue Var 0x120128320 'line' 'char[80]'
|   |   | `-ImplicitCastExpr 0x106808ee0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x106808ec8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x106808e18 <col:16> 'char[4]' lvalue "STR"
|   |   `-BinaryOperator 0x106808fa8 <line:56:3, col:10> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x106808f18 <col:3> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x106808ef8 <col:3> 'const int *' lvalue ParmVar 0x1201280f0 'e' 'const int *'
|   |     `-CXXDependentScopeMemberExpr 0x106808f60 <col:7, col:10> '<dependent type>' contains-errors lvalue ->next
|   |       `-RecoveryExpr 0x106808f40 <col:7> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1068093a8 <line:58:2, col:25> 'char' '='
|   | |-ArraySubscriptExpr 0x106809350 <col:2, col:21> 'char' lvalue
|   | | |-ImplicitCastExpr 0x106809338 <col:2> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x106809020 <col:2> 'char[80]' lvalue Var 0x120128320 'line' 'char[80]'
|   | | `-BinaryOperator 0x106809318 <col:7, col:20> 'unsigned long' '-'
|   | |   |-CallExpr 0x106809288 <col:7, col:18> 'unsigned long'
|   | |   | |-ImplicitCastExpr 0x106809270 <col:7> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1068091e8 <col:7> 'unsigned long (const char *)' Function 0x106809078 'strlen' 'unsigned long (const char *)'
|   | |   | `-ImplicitCastExpr 0x1068092c8 <col:14> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x1068092b0 <col:14> 'char *' <ArrayToPointerDecay>
|   | |   |     `-DeclRefExpr 0x106809208 <col:14> 'char[80]' lvalue Var 0x120128320 'line' 'char[80]'
|   | |   `-ImplicitCastExpr 0x106809300 <col:20> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1068092e0 <col:20> 'int' 1
|   | `-ImplicitCastExpr 0x106809390 <col:25> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x106809370 <col:25> 'int' 0
|   `-ReturnStmt 0x106809418 <line:59:2, col:9>
|     `-ImplicitCastExpr 0x106809400 <col:9> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x1068093e8 <col:9> 'char *' <ArrayToPointerDecay>
|         `-DeclRefExpr 0x1068093c8 <col:9> 'char[80]' lvalue Var 0x120128320 'line' 'char[80]'
|-FunctionDecl 0x120142530 <line:20:4> col:4 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x120142630 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x120142698 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1201425d8 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x120142988 <line:22:5> col:5 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x120142a88 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x120142af0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x120142a30 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x120142b68 <col:5> Implicit printf 2 3
|-FunctionDecl 0x106808ad8 <line:54:3> col:3 implicit used strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x106808bd8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x106808c40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x106808b80 <<invalid sloc>> Implicit 889
`-FunctionDecl 0x106809078 <line:58:7> col:7 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x106809178 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x106809120 <<invalid sloc>> Implicit 902
