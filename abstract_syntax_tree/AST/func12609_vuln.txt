TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x132126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132126800 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x132126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x132126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x132126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x132126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x132126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x132126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x132126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x132126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x132126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x132126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x132126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x132126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x132126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1321270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1321271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1321272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1321273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1321274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1321275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1321276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1321280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1321281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x132128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x132128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1321282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1321283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1321284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1321285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x132128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1321286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x1321287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1321287b0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x132128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1321287b0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-FunctionDecl 0x132128a58 <dataset_diviso_filec/func12609_vuln.c:1:1, line:68:1> line:1:12 nfs_lookup_reply 'int (char *, unsigned int)' static
| |-ParmVarDecl 0x1321288f0 <col:29, col:36> col:36 used pkt 'char *'
| |-ParmVarDecl 0x132128970 <col:41, col:50> col:50 used len 'unsigned int'
| `-CompoundStmt 0x13280ad38 <line:2:1, line:68:1>
|   |-DeclStmt 0x132141328 <line:3:2, col:22>
|   | |-RecordDecl 0x132128b58 <col:2, col:9> col:9 struct rpc_t
|   | `-VarDecl 0x132128c58 <col:2, col:15> col:15 invalid rpc_pkt 'struct rpc_t'
|   |-CallExpr 0x1321415d8 <line:5:2, col:23> 'int'
|   | |-ImplicitCastExpr 0x1321415c0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x132141450 <col:2> 'int ()' Function 0x132141398 'debug' 'int ()'
|   | |-ImplicitCastExpr 0x132141608 <col:8> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x1321414b0 <col:8> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x132141620 <col:15> 'const char *' <ArrayToPointerDecay>
|   |   `-PredefinedExpr 0x132141578 <col:15> 'const char[17]' lvalue __func__
|   |     `-StringLiteral 0x132141550 <col:15> 'const char[17]' lvalue "nfs_lookup_reply"
|   |-CallExpr 0x132141ab8 <line:7:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x132141908 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x1321416b8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-UnaryOperator 0x132141a30 <col:9, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-ArraySubscriptExpr 0x132141a10 <col:10, col:26> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x1321419f8 <col:10, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x132141990 <col:10, col:20> '<dependent type>' contains-errors lvalue .data
|   | |   |   `-CXXDependentScopeMemberExpr 0x132141948 <col:10, col:18> '<dependent type>' contains-errors lvalue .u
|   | |   |     `-RecoveryExpr 0x132141928 <col:10> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x1321419d8 <col:25> 'int' 0
|   | |-DeclRefExpr 0x132141a48 <col:29> 'char *' lvalue ParmVar 0x1321288f0 'pkt' 'char *'
|   | `-DeclRefExpr 0x132141a68 <col:34> 'unsigned int' lvalue ParmVar 0x132128970 'len' 'unsigned int'
|   |-IfStmt 0x1321420b0 <line:9:2, line:12:11> has_else
|   | |-BinaryOperator 0x132141d68 <line:9:6, col:34> 'int' contains-errors '>'
|   | | |-CallExpr 0x132141ce8 <col:6, col:30> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x132141bd0 <col:6> 'int ()' Function 0x132141b18 'ntohl' 'int ()'
|   | | | `-CXXDependentScopeMemberExpr 0x132141ca0 <col:12, col:28> '<dependent type>' contains-errors lvalue .id
|   | | |   `-CXXDependentScopeMemberExpr 0x132141c58 <col:12, col:22> '<dependent type>' contains-errors lvalue .reply
|   | | |     `-CXXDependentScopeMemberExpr 0x132141c10 <col:12, col:20> '<dependent type>' contains-errors lvalue .u
|   | | |       `-RecoveryExpr 0x132141bf0 <col:12> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x132141d48 <col:34> '<dependent type>' contains-errors lvalue
|   | |-ReturnStmt 0x132141e20 <line:10:3, col:11>
|   | | `-UnaryOperator 0x132141e08 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   | |   `-ImplicitCastExpr 0x132141df0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x132141dd0 <col:11> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x132142090 <line:11:7, line:12:11>
|   |   |-BinaryOperator 0x132141fc8 <line:11:11, col:39> 'int' contains-errors '<'
|   |   | |-CallExpr 0x132141f48 <col:11, col:35> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x132141e30 <col:11> 'int ()' Function 0x132141b18 'ntohl' 'int ()'
|   |   | | `-CXXDependentScopeMemberExpr 0x132141f00 <col:17, col:33> '<dependent type>' contains-errors lvalue .id
|   |   | |   `-CXXDependentScopeMemberExpr 0x132141eb8 <col:17, col:27> '<dependent type>' contains-errors lvalue .reply
|   |   | |     `-CXXDependentScopeMemberExpr 0x132141e70 <col:17, col:25> '<dependent type>' contains-errors lvalue .u
|   |   | |       `-RecoveryExpr 0x132141e50 <col:17> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x132141fa8 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x132142080 <line:12:3, col:11>
|   |     `-UnaryOperator 0x132142068 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x132142050 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x132142030 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13280a810 <line:14:2, line:56:2>
|   | |-BinaryOperator 0x132808b60 <line:14:6, line:17:28> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x1328089f0 <line:14:6, line:16:22> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x1328088d8 <line:14:6, line:15:22> 'int' contains-errors '||'
|   | | | | |-CXXDependentScopeMemberExpr 0x132142190 <line:14:6, col:22> '<dependent type>' contains-errors lvalue .rstatus
|   | | | | | `-CXXDependentScopeMemberExpr 0x132142148 <col:6, col:16> '<dependent type>' contains-errors lvalue .reply
|   | | | | |   `-CXXDependentScopeMemberExpr 0x132142100 <col:6, col:14> '<dependent type>' contains-errors lvalue .u
|   | | | | |     `-RecoveryExpr 0x1321420e0 <col:6> '<dependent type>' contains-errors lvalue
|   | | | | `-CXXDependentScopeMemberExpr 0x132808890 <line:15:6, col:22> '<dependent type>' contains-errors lvalue .verifier
|   | | | |   `-CXXDependentScopeMemberExpr 0x132808848 <col:6, col:16> '<dependent type>' contains-errors lvalue .reply
|   | | | |     `-CXXDependentScopeMemberExpr 0x132808800 <col:6, col:14> '<dependent type>' contains-errors lvalue .u
|   | | | |       `-RecoveryExpr 0x1321421d8 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-CXXDependentScopeMemberExpr 0x1328089a8 <line:16:6, col:22> '<dependent type>' contains-errors lvalue .astatus
|   | | |   `-CXXDependentScopeMemberExpr 0x132808960 <col:6, col:16> '<dependent type>' contains-errors lvalue .reply
|   | | |     `-CXXDependentScopeMemberExpr 0x132808918 <col:6, col:14> '<dependent type>' contains-errors lvalue .u
|   | | |       `-RecoveryExpr 0x1328088f8 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-ArraySubscriptExpr 0x132808b40 <line:17:6, col:28> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x132808b28 <col:6, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x132808ac0 <col:6, col:22> '<dependent type>' contains-errors lvalue .data
|   | |   |   `-CXXDependentScopeMemberExpr 0x132808a78 <col:6, col:16> '<dependent type>' contains-errors lvalue .reply
|   | |   |     `-CXXDependentScopeMemberExpr 0x132808a30 <col:6, col:14> '<dependent type>' contains-errors lvalue .u
|   | |   |       `-RecoveryExpr 0x132808a10 <col:6> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x132808b08 <col:27> 'int' 0
|   | `-CompoundStmt 0x13280a7f0 <col:31, line:56:2>
|   |   |-SwitchStmt 0x132808cc0 <line:18:3, line:54:3>
|   |   | |-CallExpr 0x132808c98 <line:18:11, col:40> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x132808b80 <col:11> 'int ()' Function 0x132141b18 'ntohl' 'int ()'
|   |   | | `-CXXDependentScopeMemberExpr 0x132808c50 <col:17, col:33> '<dependent type>' contains-errors lvalue .astatus
|   |   | |   `-CXXDependentScopeMemberExpr 0x132808c08 <col:17, col:27> '<dependent type>' contains-errors lvalue .reply
|   |   | |     `-CXXDependentScopeMemberExpr 0x132808bc0 <col:17, col:25> '<dependent type>' contains-errors lvalue .u
|   |   | |       `-RecoveryExpr 0x132808ba0 <col:17> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x13280a770 <col:43, line:54:3>
|   |   |   |-BreakStmt 0x132808d00 <line:20:4>
|   |   |   |-SwitchStmt 0x132808eb8 <line:23:4, line:44:4>
|   |   |   | |-CallExpr 0x132808e90 <line:23:12, col:41> '<dependent type>' contains-errors
|   |   |   | | |-DeclRefExpr 0x132808d20 <col:12> 'int ()' Function 0x132141b18 'ntohl' 'int ()'
|   |   |   | | `-ArraySubscriptExpr 0x132808e70 <col:18, col:40> '<dependent type>' contains-errors lvalue
|   |   |   | |   |-ImplicitCastExpr 0x132808e58 <col:18, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | |   | `-CXXDependentScopeMemberExpr 0x132808df0 <col:18, col:34> '<dependent type>' contains-errors lvalue .data
|   |   |   | |   |   `-CXXDependentScopeMemberExpr 0x132808da8 <col:18, col:28> '<dependent type>' contains-errors lvalue .reply
|   |   |   | |   |     `-CXXDependentScopeMemberExpr 0x132808d60 <col:18, col:26> '<dependent type>' contains-errors lvalue .u
|   |   |   | |   |       `-RecoveryExpr 0x132808d40 <col:18> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-IntegerLiteral 0x132808e38 <col:39> 'int' 0
|   |   |   | `-CompoundStmt 0x13280a540 <col:44, line:44:4>
|   |   |   |   |-CaseStmt 0x132808f00 <line:25:4, <invalid sloc>>
|   |   |   |   | |-IntegerLiteral 0x132808ee0 <col:9> 'int' 3
|   |   |   |   | `-NullStmt 0x132809328 <<invalid sloc>>
|   |   |   |   |-CallExpr 0x132809388 <line:31:5, col:16> 'int'
|   |   |   |   | |-ImplicitCastExpr 0x132809370 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x132809330 <col:5> 'int ()' Function 0x132141398 'debug' 'int ()'
|   |   |   |   | `-ImplicitCastExpr 0x1328093b0 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   |   |   `-StringLiteral 0x132809350 <col:11> 'char[4]' lvalue "STR"
|   |   |   |   |-ReturnStmt 0x1328094a8 <line:34:5, col:13>
|   |   |   |   | `-UnaryOperator 0x132809490 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   |   |   `-ImplicitCastExpr 0x132809478 <col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |   |     `-RecoveryExpr 0x132809458 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   |   |-CaseStmt 0x1328094d8 <line:35:4, line:37:15>
|   |   |   |   | |-IntegerLiteral 0x1328094b8 <line:35:9> 'int' 4
|   |   |   |   | `-DefaultStmt 0x132809678 <line:36:4, line:37:15>
|   |   |   |   |   `-CallExpr 0x132809638 <col:5, col:15> 'int'
|   |   |   |   |     |-ImplicitCastExpr 0x132809620 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   |     | `-DeclRefExpr 0x1328095e0 <col:5> 'int ()' Function 0x132809528 'puts' 'int ()'
|   |   |   |   |     `-ImplicitCastExpr 0x132809660 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   |   |       `-StringLiteral 0x132809600 <col:10> 'char[4]' lvalue "STR"
|   |   |   |   `-CallExpr 0x13280a500 <line:43:5, col:15> 'int'
|   |   |   |     |-ImplicitCastExpr 0x13280a4e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x13280a4a8 <col:5> 'int ()' Function 0x132809528 'puts' 'int ()'
|   |   |   |     `-ImplicitCastExpr 0x13280a528 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   |       `-StringLiteral 0x13280a4c8 <col:10> 'char[4]' lvalue "STR"
|   |   |   |-BreakStmt 0x13280a578 <line:45:4>
|   |   |   |-DefaultStmt 0x13280a748 <line:50:3, line:52:40>
|   |   |   | `-CallExpr 0x13280a718 <line:51:4, line:52:40> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x13280a598 <line:51:4> 'int ()' Function 0x132141398 'debug' 'int ()'
|   |   |   |   |-StringLiteral 0x13280a5b8 <col:10> 'char[4]' lvalue "STR"
|   |   |   |   `-CallExpr 0x13280a6f0 <line:52:10, col:39> '<dependent type>' contains-errors
|   |   |   |     |-DeclRefExpr 0x13280a5d8 <col:10> 'int ()' Function 0x132141b18 'ntohl' 'int ()'
|   |   |   |     `-CXXDependentScopeMemberExpr 0x13280a6a8 <col:16, col:32> '<dependent type>' contains-errors lvalue .astatus
|   |   |   |       `-CXXDependentScopeMemberExpr 0x13280a660 <col:16, col:26> '<dependent type>' contains-errors lvalue .reply
|   |   |   |         `-CXXDependentScopeMemberExpr 0x13280a618 <col:16, col:24> '<dependent type>' contains-errors lvalue .u
|   |   |   |           `-RecoveryExpr 0x13280a5f8 <col:16> '<dependent type>' contains-errors lvalue
|   |   |   `-BreakStmt 0x13280a768 <line:53:4>
|   |   `-ReturnStmt 0x13280a7e0 <line:55:3, col:11>
|   |     `-UnaryOperator 0x13280a7c8 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13280a7a8 <col:11> 'int' 1
|   |-IfStmt 0x13280acd8 <line:58:2, line:65:2> has_else
|   | |-RecoveryExpr 0x13280a830 <line:58:6, col:31> '_Bool' contains-errors
|   | |-CompoundStmt 0x13280a9a8 <col:43, line:60:2>
|   | `-CompoundStmt 0x13280acc8 <col:9, line:65:2>
|   `-ReturnStmt 0x13280ad28 <line:67:2, col:9>
|     `-IntegerLiteral 0x13280ad08 <col:9> 'int' 0
`-FunctionDecl 0x1321416b8 <line:7:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1321417b8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x132141820 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x132141888 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x132141760 <<invalid sloc>> Implicit 882
