TranslationUnitDecl 0x150855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1508564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150855bd0 '__int128'
|-TypedefDecl 0x150856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150855bf0 'unsigned __int128'
|-TypedefDecl 0x15100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15100bc00 'struct __NSConstantString_tag'
|   `-Record 0x150856580 '__NSConstantString_tag'
|-TypedefDecl 0x15100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150855d90 '__SVInt8_t'
|-TypedefDecl 0x15100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150855db0 '__SVInt16_t'
|-TypedefDecl 0x15100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150855dd0 '__SVInt32_t'
|-TypedefDecl 0x15100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150855df0 '__SVInt64_t'
|-TypedefDecl 0x15100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150855e10 '__SVUint8_t'
|-TypedefDecl 0x15100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150855e30 '__SVUint16_t'
|-TypedefDecl 0x15100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150855e50 '__SVUint32_t'
|-TypedefDecl 0x15100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150855e70 '__SVUint64_t'
|-TypedefDecl 0x15100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150855e90 '__SVFloat16_t'
|-TypedefDecl 0x15100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1508560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1508560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1508560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1508561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1508561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1508561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1508562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1508562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1508562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150856390 '__SVBool_t'
|-TypedefDecl 0x15100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1508563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1508563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1508563f0 '__SVCount_t'
|-TypedefDecl 0x15100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-TypedefDecl 0x15100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-FunctionDecl 0x15100dee8 <dataset_diviso_filec/func16493_vuln.c:1:1, line:45:1> line:1:1 invalid position_check 'int (int, int, char *)'
| |-ParmVarDecl 0x15100dcf0 <col:16, col:36> col:36 referenced invalid expected_y 'int'
| |-ParmVarDecl 0x15100dd70 <col:48, col:52> col:52 used expected_x 'int'
| |-ParmVarDecl 0x15100ddf0 <col:64, col:70> col:70 used legend 'char *'
| `-CompoundStmt 0x150925000 <line:3:1, line:45:1>
|   |-DeclStmt 0x15100e0b8 <line:4:5, col:17>
|   | `-VarDecl 0x15100e050 <col:5, col:16> col:10 used buf 'char[20]'
|   |-DeclStmt 0x15100e150 <line:5:5, col:12>
|   | `-VarDecl 0x15100e0e8 <col:5, col:11> col:11 used s 'char *'
|   |-DeclStmt 0x15100e280 <line:6:5, col:13>
|   | |-VarDecl 0x15100e180 <col:5, col:9> col:9 used y 'int'
|   | `-VarDecl 0x15100e200 <col:5, col:12> col:12 used x 'int'
|   |-IfStmt 0x151027578 <line:8:5, line:9:2>
|   | |-BinaryOperator 0x151027548 <line:8:9, col:58> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x1510274b8 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1510274a0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x151027480 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-ParenExpr 0x151027528 <col:25, col:58> 'int' contains-errors
|   | |   `-BinaryOperator 0x151027508 <col:26, col:57> 'int' contains-errors '&&'
|   | |     |-BinaryOperator 0x15100e320 <col:26, col:39> 'int' contains-errors '<'
|   | |     | |-RecoveryExpr 0x15100e2e0 <col:26> '<dependent type>' contains-errors lvalue
|   | |     | `-IntegerLiteral 0x15100e300 <col:39> 'int' 0
|   | |     `-BinaryOperator 0x1510274e8 <col:44, col:57> 'int' '<'
|   | |       |-ImplicitCastExpr 0x1510274d0 <col:44> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x15100e340 <col:44> 'int' lvalue ParmVar 0x15100dd70 'expected_x' 'int'
|   | |       `-IntegerLiteral 0x15100e360 <col:57> 'int' 0
|   | `-ReturnStmt 0x151027568 <line:9:2>
|   |-CallExpr 0x1510277f8 <line:11:5, col:47> '<dependent type>' contains-errors
|   | |-CallExpr 0x1510277b0 <col:5, col:30> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x1510276f0 <col:5> 'int ()' Function 0x151027638 'NCURSES_SP_NAME' 'int ()'
|   | | `-RecoveryExpr 0x151027790 <col:21> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x1510277d8 <col:33> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x151027ff8 <line:12:5, col:34> 'void *'
|   | |-ImplicitCastExpr 0x151027fe0 <col:5> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x151027ee0 <col:5> 'void *(void *, int, unsigned long)' Function 0x151027c90 'memset' 'void *(void *, int, unsigned long)'
|   | |-ImplicitCastExpr 0x151028048 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x151028030 <col:12> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x151027f00 <col:12> 'char[20]' lvalue Var 0x15100e050 'buf' 'char[20]'
|   | |-CharacterLiteral 0x151027f20 <col:17> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x151027f78 <col:23, col:33> 'unsigned long' sizeof
|   |   `-ParenExpr 0x151027f58 <col:29, col:33> 'char[20]' lvalue
|   |     `-DeclRefExpr 0x151027f38 <col:30> 'char[20]' lvalue Var 0x15100e050 'buf' 'char[20]' non_odr_use_unevaluated
|   |-CallExpr 0x151028208 <line:13:5, col:30> 'int'
|   | |-ImplicitCastExpr 0x1510281f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x151028140 <col:5> 'int ()' Function 0x151028088 'NCURSES_PUTP2_FLUSH' 'int ()'
|   | `-ImplicitCastExpr 0x151028230 <col:25> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1510281a0 <col:25> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x151028330 <line:14:5, col:18> 'char' '='
|   | |-UnaryOperator 0x1510282e0 <col:5, col:14> 'char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x1510282c0 <col:6, col:14> 'char *'
|   | |   `-BinaryOperator 0x1510282a0 <col:7, col:11> 'char *' '='
|   | |     |-DeclRefExpr 0x151028248 <col:7> 'char *' lvalue Var 0x15100e0e8 's' 'char *'
|   | |     `-ImplicitCastExpr 0x151028288 <col:11> 'char *' <ArrayToPointerDecay>
|   | |       `-DeclRefExpr 0x151028268 <col:11> 'char[20]' lvalue Var 0x15100e050 'buf' 'char[20]'
|   | `-ImplicitCastExpr 0x151028318 <col:18> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x1510282f8 <col:18> 'int' 0
|   |-DoStmt 0x150923d10 <line:15:5, line:21:35>
|   | |-CompoundStmt 0x150923950 <line:15:8, line:21:5>
|   | | |-DeclStmt 0x150923598 <line:16:2, col:39>
|   | | | `-VarDecl 0x151028368 <col:2, col:38> col:6 used ask 'int' cinit
|   | | |   `-ImplicitCastExpr 0x150923580 <col:12, col:38> 'int' <IntegralCast>
|   | | |     `-BinaryOperator 0x150923560 <col:12, col:38> 'unsigned long' '-'
|   | | |       |-BinaryOperator 0x150923478 <col:12, col:26> 'unsigned long' '-'
|   | | |       | |-UnaryExprOrTypeTraitExpr 0x150923420 <col:12, col:22> 'unsigned long' sizeof
|   | | |       | | `-ParenExpr 0x150923400 <col:18, col:22> 'char[20]' lvalue
|   | | |       | |   `-DeclRefExpr 0x1510283d0 <col:19> 'char[20]' lvalue Var 0x15100e050 'buf' 'char[20]' non_odr_use_unevaluated
|   | | |       | `-ImplicitCastExpr 0x150923460 <col:26> 'unsigned long' <IntegralCast>
|   | | |       |   `-IntegerLiteral 0x150923440 <col:26> 'int' 1
|   | | |       `-ImplicitCastExpr 0x150923548 <col:30, col:38> 'unsigned long' <IntegralCast>
|   | | |         `-ParenExpr 0x150923528 <col:30, col:38> 'long'
|   | | |           `-BinaryOperator 0x150923508 <col:31, col:35> 'long' '-'
|   | | |             |-ImplicitCastExpr 0x1509234d8 <col:31> 'char *' <LValueToRValue>
|   | | |             | `-DeclRefExpr 0x150923498 <col:31> 'char *' lvalue Var 0x15100e0e8 's' 'char *'
|   | | |             `-ImplicitCastExpr 0x1509234f0 <col:35> 'char *' <ArrayToPointerDecay>
|   | | |               `-DeclRefExpr 0x1509234b8 <col:35> 'char[20]' lvalue Var 0x15100e050 'buf' 'char[20]'
|   | | |-DeclStmt 0x150923810 <line:17:2, col:27>
|   | | | `-VarDecl 0x1509235c8 <col:2, col:26> col:6 used got 'int' cinit
|   | | |   `-CallExpr 0x1509237a8 <col:12, col:26> 'int'
|   | | |     |-ImplicitCastExpr 0x150923790 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x150923710 <col:12> 'int ()' Function 0x150923658 'read' 'int ()'
|   | | |     |-IntegerLiteral 0x150923730 <col:17> 'int' 0
|   | | |     |-ImplicitCastExpr 0x1509237e0 <col:20> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x150923750 <col:20> 'char *' lvalue Var 0x15100e0e8 's' 'char *'
|   | | |     `-ImplicitCastExpr 0x1509237f8 <col:23> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x150923770 <col:23> 'int' lvalue Var 0x151028368 'ask' 'int'
|   | | |-IfStmt 0x1509238a8 <line:18:2, line:19:6>
|   | | | |-BinaryOperator 0x150923880 <line:18:6, col:13> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x150923868 <col:6> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x150923828 <col:6> 'int' lvalue Var 0x1509235c8 'got' 'int'
|   | | | | `-IntegerLiteral 0x150923848 <col:13> 'int' 0
|   | | | `-BreakStmt 0x1509238a0 <line:19:6>
|   | | `-CompoundAssignOperator 0x150923920 <line:20:2, col:7> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |   |-DeclRefExpr 0x1509238c8 <col:2> 'char *' lvalue Var 0x15100e0e8 's' 'char *'
|   | |   `-ImplicitCastExpr 0x150923908 <col:7> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1509238e8 <col:7> 'int' lvalue Var 0x1509235c8 'got' 'int'
|   | `-BinaryOperator 0x150923cf0 <line:21:14, col:34> 'int' '=='
|   |   |-CallExpr 0x150923c58 <col:14, col:29> 'char *'
|   |   | |-ImplicitCastExpr 0x150923c40 <col:14> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x150923ba0 <col:14> 'char *(const char *, int)' Function 0x1509239c0 'strchr' 'char *(const char *, int)'
|   |   | |-ImplicitCastExpr 0x150923ca0 <col:21> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x150923c88 <col:21> 'char *' <ArrayToPointerDecay>
|   |   | |   `-DeclRefExpr 0x150923bc0 <col:21> 'char[20]' lvalue Var 0x15100e050 'buf' 'char[20]'
|   |   | `-CharacterLiteral 0x150923be0 <col:26> 'int' 82
|   |   `-ImplicitCastExpr 0x150923cd8 <col:34> 'char *' <NullToPointer>
|   |     `-IntegerLiteral 0x150923cb8 <col:34> 'int' 0
|   |-CallExpr 0x150923fe0 <line:22:5, col:35> 'int'
|   | |-ImplicitCastExpr 0x150923fc8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x150923e10 <col:5> 'int ()' Function 0x150923d58 '_tracef' 'int ()'
|   | |-ImplicitCastExpr 0x150924010 <col:13> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x150923e30 <col:13> 'char[4]' lvalue "STR"
|   | `-CallExpr 0x150923f88 <col:20, col:34> 'int'
|   |   |-ImplicitCastExpr 0x150923f70 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x150923f30 <col:20> 'int ()' Function 0x150923e78 '_nc_visbuf' 'int ()'
|   |   `-ImplicitCastExpr 0x150923fb0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x150923f50 <col:31> 'char[20]' lvalue Var 0x15100e050 'buf' 'char[20]'
|   `-IfStmt 0x150924fd0 <line:25:5, line:44:5> has_else
|     |-BinaryOperator 0x150924558 <line:25:9, col:39> 'int' '!='
|     | |-CallExpr 0x150924498 <col:9, col:34> 'int'
|     | | |-ImplicitCastExpr 0x150924480 <col:9> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x1509242e0 <col:9> 'int (const char *restrict, const char *restrict, ...)' Function 0x1509240c8 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|     | | |-ImplicitCastExpr 0x1509244f0 <col:16> 'const char *' <NoOp>
|     | | | `-ImplicitCastExpr 0x1509244d8 <col:16> 'char *' <ArrayToPointerDecay>
|     | | |   `-DeclRefExpr 0x150924300 <col:16> 'char[20]' lvalue Var 0x15100e050 'buf' 'char[20]'
|     | | |-ImplicitCastExpr 0x150924520 <col:21> 'const char *' <NoOp>
|     | | | `-ImplicitCastExpr 0x150924508 <col:21> 'char *' <ArrayToPointerDecay>
|     | | |   `-StringLiteral 0x150924320 <col:21> 'char[4]' lvalue "STR"
|     | | |-UnaryOperator 0x150924390 <col:28, col:29> 'int *' prefix '&' cannot overflow
|     | | | `-DeclRefExpr 0x150924340 <col:29> 'int' lvalue Var 0x15100e180 'y' 'int'
|     | | `-UnaryOperator 0x1509243c8 <col:32, col:33> 'int *' prefix '&' cannot overflow
|     | |   `-DeclRefExpr 0x1509243a8 <col:33> 'int' lvalue Var 0x15100e200 'x' 'int'
|     | `-IntegerLiteral 0x150924538 <col:39> 'int' 2
|     |-CompoundStmt 0x150924650 <col:42, line:27:5>
|     | `-CallExpr 0x1509245f0 <line:26:2, col:23> 'int'
|     |   |-ImplicitCastExpr 0x1509245d8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x150924578 <col:2> 'int ()' Function 0x150923d58 '_tracef' 'int ()'
|     |   |-ImplicitCastExpr 0x150924620 <col:10> 'char *' <ArrayToPointerDecay>
|     |   | `-StringLiteral 0x150924598 <col:10> 'char[4]' lvalue "STR"
|     |   `-ImplicitCastExpr 0x150924638 <col:17> 'char *' <LValueToRValue>
|     |     `-DeclRefExpr 0x1509245b8 <col:17> 'char *' lvalue ParmVar 0x15100ddf0 'legend' 'char *'
|     `-CompoundStmt 0x150924fa8 <line:27:12, line:44:5>
|       |-IfStmt 0x150924798 <line:28:2, line:29:23>
|       | |-BinaryOperator 0x1509246c0 <line:28:6, col:19> 'int' '<'
|       | | |-ImplicitCastExpr 0x1509246a8 <col:6> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x150924668 <col:6> 'int' lvalue ParmVar 0x15100dd70 'expected_x' 'int'
|       | | `-IntegerLiteral 0x150924688 <col:19> 'int' 0
|       | `-BinaryOperator 0x150924778 <line:29:6, col:23> 'int' '='
|       |   |-DeclRefExpr 0x1509246e0 <col:6> 'int' lvalue ParmVar 0x15100dd70 'expected_x' 'int'
|       |   `-BinaryOperator 0x150924758 <col:19, col:23> 'int' '-'
|       |     |-ImplicitCastExpr 0x150924740 <col:19> 'int' <LValueToRValue>
|       |     | `-DeclRefExpr 0x150924700 <col:19> 'int' lvalue Var 0x15100e200 'x' 'int'
|       |     `-IntegerLiteral 0x150924720 <col:23> 'int' 1
|       |-IfStmt 0x1509248f8 <line:30:2, line:31:23>
|       | |-BinaryOperator 0x1509247f8 <line:30:6, col:19> 'int' contains-errors '<'
|       | | |-RecoveryExpr 0x1509247b8 <col:6> '<dependent type>' contains-errors lvalue
|       | | `-IntegerLiteral 0x1509247d8 <col:19> 'int' 0
|       | `-BinaryOperator 0x1509248d8 <line:31:6, col:23> '<dependent type>' contains-errors '='
|       |   |-RecoveryExpr 0x150924838 <col:6> '<dependent type>' contains-errors lvalue
|       |   | `-DeclRefExpr 0x150924818 <col:6> 'int' lvalue ParmVar 0x15100dcf0 'expected_y' 'int'
|       |   `-BinaryOperator 0x1509248b8 <col:19, col:23> 'int' '-'
|       |     |-ImplicitCastExpr 0x1509248a0 <col:19> 'int' <LValueToRValue>
|       |     | `-DeclRefExpr 0x150924860 <col:19> 'int' lvalue Var 0x15100e180 'y' 'int'
|       |     `-IntegerLiteral 0x150924880 <col:23> 'int' 1
|       `-IfStmt 0x150924f78 <line:32:2, line:43:2> has_else
|         |-BinaryOperator 0x150924aa0 <line:32:6, col:38> 'int' contains-errors '||'
|         | |-BinaryOperator 0x1509249b0 <col:6, col:15> 'int' contains-errors '!='
|         | | |-BinaryOperator 0x150924970 <col:6, col:10> 'int' '-'
|         | | | |-ImplicitCastExpr 0x150924958 <col:6> 'int' <LValueToRValue>
|         | | | | `-DeclRefExpr 0x150924918 <col:6> 'int' lvalue Var 0x15100e180 'y' 'int'
|         | | | `-IntegerLiteral 0x150924938 <col:10> 'int' 1
|         | | `-RecoveryExpr 0x150924990 <col:15> '<dependent type>' contains-errors lvalue
|         | `-BinaryOperator 0x150924a80 <col:29, col:38> 'int' '!='
|         |   |-BinaryOperator 0x150924a28 <col:29, col:33> 'int' '-'
|         |   | |-ImplicitCastExpr 0x150924a10 <col:29> 'int' <LValueToRValue>
|         |   | | `-DeclRefExpr 0x1509249d0 <col:29> 'int' lvalue Var 0x15100e200 'x' 'int'
|         |   | `-IntegerLiteral 0x1509249f0 <col:33> 'int' 1
|         |   `-ImplicitCastExpr 0x150924a68 <col:38> 'int' <LValueToRValue>
|         |     `-DeclRefExpr 0x150924a48 <col:38> 'int' lvalue ParmVar 0x15100dd70 'expected_x' 'int'
|         |-CompoundStmt 0x150924e68 <col:50, line:41:2>
|         | |-CallExpr 0x150924bc8 <line:33:6, col:43> '<dependent type>' contains-errors
|         | | |-CallExpr 0x150924b80 <col:6, col:26> '<dependent type>' contains-errors
|         | | | |-DeclRefExpr 0x150924ac0 <col:6> 'int ()' Function 0x151027638 'NCURSES_SP_NAME' 'int ()'
|         | | | `-RecoveryExpr 0x150924b60 <col:22> '<dependent type>' contains-errors lvalue
|         | | `-RecoveryExpr 0x150924ba8 <col:29> '<dependent type>' contains-errors lvalue
|         | `-CallExpr 0x150924e18 <line:39:6, line:40:51> '<dependent type>' contains-errors
|         |   |-DeclRefExpr 0x150924c88 <line:39:6> 'int ()' Function 0x150923d58 '_tracef' 'int ()'
|         |   |-StringLiteral 0x150924ca8 <col:14> 'char[4]' lvalue "STR"
|         |   |-BinaryOperator 0x150924d20 <line:40:7, col:11> 'int' '-'
|         |   | |-ImplicitCastExpr 0x150924d08 <col:7> 'int' <LValueToRValue>
|         |   | | `-DeclRefExpr 0x150924cc8 <col:7> 'int' lvalue Var 0x15100e180 'y' 'int'
|         |   | `-IntegerLiteral 0x150924ce8 <col:11> 'int' 1
|         |   |-BinaryOperator 0x150924d98 <col:14, col:18> 'int' '-'
|         |   | |-ImplicitCastExpr 0x150924d80 <col:14> 'int' <LValueToRValue>
|         |   | | `-DeclRefExpr 0x150924d40 <col:14> 'int' lvalue Var 0x15100e200 'x' 'int'
|         |   | `-IntegerLiteral 0x150924d60 <col:18> 'int' 1
|         |   |-RecoveryExpr 0x150924db8 <col:21> '<dependent type>' contains-errors lvalue
|         |   |-DeclRefExpr 0x150924dd8 <col:33> 'int' lvalue ParmVar 0x15100dd70 'expected_x' 'int'
|         |   `-DeclRefExpr 0x150924df8 <col:45> 'char *' lvalue ParmVar 0x15100ddf0 'legend' 'char *'
|         `-CompoundStmt 0x150924f60 <line:41:9, line:43:2>
|           `-CallExpr 0x150924f00 <line:42:6, col:27> 'int'
|             |-ImplicitCastExpr 0x150924ee8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x150924e88 <col:6> 'int ()' Function 0x150923d58 '_tracef' 'int ()'
|             |-ImplicitCastExpr 0x150924f30 <col:14> 'char *' <ArrayToPointerDecay>
|             | `-StringLiteral 0x150924ea8 <col:14> 'char[4]' lvalue "STR"
|             `-ImplicitCastExpr 0x150924f48 <col:21> 'char *' <LValueToRValue>
|               `-DeclRefExpr 0x150924ec8 <col:21> 'char *' lvalue ParmVar 0x15100ddf0 'legend' 'char *'
|-FunctionDecl 0x151027c90 <line:12:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x151027d90 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x151027df8 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x151027e60 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x151027d38 <<invalid sloc>> Implicit 900
|-FunctionDecl 0x1509239c0 <line:21:14> col:14 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x150923ac0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x150923b28 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x150923a68 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x1509240c8 <line:25:9> col:9 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
  |-ParmVarDecl 0x1509241c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-ParmVarDecl 0x150924230 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-BuiltinAttr 0x150924170 <<invalid sloc>> Implicit 913
  `-FormatAttr 0x1509242a8 <col:9> Implicit scanf 2 3
