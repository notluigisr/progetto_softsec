TranslationUnitDecl 0x15d831408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15d8322b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15d8319d0 '__int128'
|-TypedefDecl 0x15d832328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15d8319f0 'unsigned __int128'
|-TypedefDecl 0x15c00e230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15c00e000 'struct __NSConstantString_tag'
|   `-Record 0x15d832380 '__NSConstantString_tag'
|-TypedefDecl 0x15c00e298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15d831b90 '__SVInt8_t'
|-TypedefDecl 0x15c00e300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15d831bb0 '__SVInt16_t'
|-TypedefDecl 0x15c00e368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15d831bd0 '__SVInt32_t'
|-TypedefDecl 0x15c00e3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15d831bf0 '__SVInt64_t'
|-TypedefDecl 0x15c00e438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15d831c10 '__SVUint8_t'
|-TypedefDecl 0x15c00e4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15d831c30 '__SVUint16_t'
|-TypedefDecl 0x15c00e508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15d831c50 '__SVUint32_t'
|-TypedefDecl 0x15c00e570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15d831c70 '__SVUint64_t'
|-TypedefDecl 0x15c00e5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15d831c90 '__SVFloat16_t'
|-TypedefDecl 0x15c00e640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15d831cb0 '__SVFloat32_t'
|-TypedefDecl 0x15c00e6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15d831cd0 '__SVFloat64_t'
|-TypedefDecl 0x15c00e710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15d831cf0 '__SVBfloat16_t'
|-TypedefDecl 0x15c00e778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15d831d10 '__clang_svint8x2_t'
|-TypedefDecl 0x15c00e7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15d831d30 '__clang_svint16x2_t'
|-TypedefDecl 0x15c00e848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15d831d50 '__clang_svint32x2_t'
|-TypedefDecl 0x15c00e8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15d831d70 '__clang_svint64x2_t'
|-TypedefDecl 0x15c00e918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15d831d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15c00e980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15d831db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15c00e9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15d831dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15c00ea50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15d831df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15c00eab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15d831e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15c00eb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15d831e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15c00eb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15d831e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15c00ebf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15d831e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15c00ec58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15d831e90 '__clang_svint8x3_t'
|-TypedefDecl 0x15c00ecc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15d831eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x15c00ed28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15d831ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x15c00ed90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15d831ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x15c00edf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15d831f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x15c00ee60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15d831f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x15c00eec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15d831f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x15c00ef30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15d831f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x15c00ef98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15d831f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15c00f400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15d831fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15c00f468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15d831fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15c00f4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15d831ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15c00f538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15d832010 '__clang_svint8x4_t'
|-TypedefDecl 0x15c00f5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15d832030 '__clang_svint16x4_t'
|-TypedefDecl 0x15c00f608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15d832050 '__clang_svint32x4_t'
|-TypedefDecl 0x15c00f670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15d832070 '__clang_svint64x4_t'
|-TypedefDecl 0x15c00f6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15d832090 '__clang_svuint8x4_t'
|-TypedefDecl 0x15c00f740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15d8320b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15c00f7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15d8320d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15c00f810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15d8320f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15c00f878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15d832110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15c00f8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15d832130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15c00f948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15d832150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15c00f9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15d832170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15c00fa18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15d832190 '__SVBool_t'
|-TypedefDecl 0x15c00fa80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15d8321b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15c00fae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15d8321d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15c00fb50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15d8321f0 '__SVCount_t'
|-TypedefDecl 0x15c00fbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15c00fbb0 'char *'
|   `-BuiltinType 0x15d8314b0 'char'
|-TypedefDecl 0x15c00fc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15c00fbb0 'char *'
|   `-BuiltinType 0x15d8314b0 'char'
`-FunctionDecl 0x15c00fe88 <dataset_diviso_filec/func2037_vuln.c:1:1, line:38:1> line:1:7 invalid fopen_safe 'int *(const char *, const char *)'
  |-ParmVarDecl 0x15c00fcf0 <col:18, col:30> col:30 used path 'const char *'
  |-ParmVarDecl 0x15c00fd70 <col:36, col:48> col:48 used mode 'const char *'
  `-CompoundStmt 0x15d8febd8 <line:2:1, line:38:1>
    |-DeclStmt 0x15c00ffc0 <line:3:2, col:8>
    | `-VarDecl 0x15c00ff58 <col:2, col:6> col:6 used fd 'int'
    |-DeclStmt 0x15c010120 <line:5:2, col:34>
    | `-VarDecl 0x15c010008 <col:2, col:27> col:6 used flags 'int' cinit
    |   `-BinaryOperator 0x15c010100 <col:14, col:27> '<dependent type>' contains-errors '|'
    |     |-RecoveryExpr 0x15c0100c0 <col:14> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x15c0100e0 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15c02a2c0 <line:7:2, line:8:26>
    | |-BinaryOperator 0x15c0101f8 <line:7:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x15c0101e0 <col:6, col:12> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x15c0101c8 <col:6, col:12> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x15c010190 <col:6, col:12> 'const char' lvalue
    | | |     |-ImplicitCastExpr 0x15c010178 <col:6> 'const char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x15c010138 <col:6> 'const char *' lvalue ParmVar 0x15c00fd70 'mode' 'const char *'
    | | |     `-IntegerLiteral 0x15c010158 <col:11> 'int' 0
    | | `-CharacterLiteral 0x15c0101b0 <col:17> 'int' 114
    | `-ReturnStmt 0x15c02a2b0 <line:8:3, col:26>
    |   `-ImplicitCastExpr 0x15c029e78 <col:10, col:26> 'int *' <IntegralToPointer>
    |     `-CallExpr 0x15c029e18 <col:10, col:26> 'int'
    |       |-ImplicitCastExpr 0x15c029e00 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x15c010370 <col:10> 'int ()' Function 0x15c0102b8 'fopen' 'int ()'
    |       |-ImplicitCastExpr 0x15c029e48 <col:16> 'const char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x15c010390 <col:16> 'const char *' lvalue ParmVar 0x15c00fcf0 'path' 'const char *'
    |       `-ImplicitCastExpr 0x15c029e60 <col:22> 'const char *' <LValueToRValue>
    |         `-DeclRefExpr 0x15c0103b0 <col:22> 'const char *' lvalue ParmVar 0x15c00fd70 'mode' 'const char *'
    |-IfStmt 0x15c02a508 <line:10:2, line:11:10>
    | |-BinaryOperator 0x15c02a4a0 <line:10:6, col:35> 'int' '&&'
    | | |-BinaryOperator 0x15c02a3a0 <col:6, col:17> 'int' '!='
    | | | |-ImplicitCastExpr 0x15c02a388 <col:6, col:12> 'int' <IntegralCast>
    | | | | `-ImplicitCastExpr 0x15c02a370 <col:6, col:12> 'char' <LValueToRValue>
    | | | |   `-ArraySubscriptExpr 0x15c02a338 <col:6, col:12> 'const char' lvalue
    | | | |     |-ImplicitCastExpr 0x15c02a320 <col:6> 'const char *' <LValueToRValue>
    | | | |     | `-DeclRefExpr 0x15c02a2e0 <col:6> 'const char *' lvalue ParmVar 0x15c00fd70 'mode' 'const char *'
    | | | |     `-IntegerLiteral 0x15c02a300 <col:11> 'int' 0
    | | | `-CharacterLiteral 0x15c02a358 <col:17> 'int' 97
    | | `-BinaryOperator 0x15c02a480 <col:24, col:35> 'int' '!='
    | |   |-ImplicitCastExpr 0x15c02a468 <col:24, col:30> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x15c02a450 <col:24, col:30> 'char' <LValueToRValue>
    | |   |   `-ArraySubscriptExpr 0x15c02a418 <col:24, col:30> 'const char' lvalue
    | |   |     |-ImplicitCastExpr 0x15c02a400 <col:24> 'const char *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x15c02a3c0 <col:24> 'const char *' lvalue ParmVar 0x15c00fd70 'mode' 'const char *'
    | |   |     `-IntegerLiteral 0x15c02a3e0 <col:29> 'int' 0
    | |   `-CharacterLiteral 0x15c02a438 <col:35> 'int' 119
    | `-ReturnStmt 0x15c02a4f8 <line:11:3, col:10>
    |   `-RecoveryExpr 0x15c02a4d8 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15c02a800 <line:13:2, line:15:10>
    | |-BinaryOperator 0x15c02a798 <line:13:6, line:14:32> 'int' '&&'
    | | |-ImplicitCastExpr 0x15c02a780 <line:13:6, col:12> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x15c02a768 <col:6, col:12> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x15c02a580 <col:6, col:12> 'const char' lvalue
    | | |     |-ImplicitCastExpr 0x15c02a568 <col:6> 'const char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x15c02a528 <col:6> 'const char *' lvalue ParmVar 0x15c00fd70 'mode' 'const char *'
    | | |     `-IntegerLiteral 0x15c02a548 <col:11> 'int' 1
    | | `-ParenExpr 0x15c02a748 <line:14:6, col:32> 'int'
    | |   `-BinaryOperator 0x15c02a728 <col:7, col:31> 'int' '||'
    | |     |-BinaryOperator 0x15c02a660 <col:7, col:18> 'int' '!='
    | |     | |-ImplicitCastExpr 0x15c02a648 <col:7, col:13> 'int' <IntegralCast>
    | |     | | `-ImplicitCastExpr 0x15c02a630 <col:7, col:13> 'char' <LValueToRValue>
    | |     | |   `-ArraySubscriptExpr 0x15c02a5f8 <col:7, col:13> 'const char' lvalue
    | |     | |     |-ImplicitCastExpr 0x15c02a5e0 <col:7> 'const char *' <LValueToRValue>
    | |     | |     | `-DeclRefExpr 0x15c02a5a0 <col:7> 'const char *' lvalue ParmVar 0x15c00fd70 'mode' 'const char *'
    | |     | |     `-IntegerLiteral 0x15c02a5c0 <col:12> 'int' 1
    | |     | `-CharacterLiteral 0x15c02a618 <col:18> 'int' 43
    | |     `-ImplicitCastExpr 0x15c02a710 <col:25, col:31> 'int' <IntegralCast>
    | |       `-ImplicitCastExpr 0x15c02a6f8 <col:25, col:31> 'char' <LValueToRValue>
    | |         `-ArraySubscriptExpr 0x15c02a6d8 <col:25, col:31> 'const char' lvalue
    | |           |-ImplicitCastExpr 0x15c02a6c0 <col:25> 'const char *' <LValueToRValue>
    | |           | `-DeclRefExpr 0x15c02a680 <col:25> 'const char *' lvalue ParmVar 0x15c00fd70 'mode' 'const char *'
    | |           `-IntegerLiteral 0x15c02a6a0 <col:30> 'int' 2
    | `-ReturnStmt 0x15c02a7f0 <line:15:3, col:10>
    |   `-RecoveryExpr 0x15c02a7d0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15c02aa70 <line:17:2, line:20:12> has_else
    | |-BinaryOperator 0x15c02a8e0 <line:17:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x15c02a8c8 <col:6, col:12> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x15c02a8b0 <col:6, col:12> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x15c02a878 <col:6, col:12> 'const char' lvalue
    | | |     |-ImplicitCastExpr 0x15c02a860 <col:6> 'const char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x15c02a820 <col:6> 'const char *' lvalue ParmVar 0x15c00fd70 'mode' 'const char *'
    | | |     `-IntegerLiteral 0x15c02a840 <col:11> 'int' 0
    | | `-CharacterLiteral 0x15c02a898 <col:17> 'int' 119
    | |-CompoundAssignOperator 0x15c02a988 <line:18:3, col:12> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |-DeclRefExpr 0x15c02a900 <col:3> 'int' contains-errors lvalue Var 0x15c010008 'flags' 'int'
    | | `-RecoveryExpr 0x15c02a968 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x15c02aa40 <line:20:3, col:12> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x15c02a9b8 <col:3> 'int' contains-errors lvalue Var 0x15c010008 'flags' 'int'
    |   `-RecoveryExpr 0x15c02aa20 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15c02aca0 <line:22:2, line:25:12> has_else
    | |-ImplicitCastExpr 0x15c02ab18 <line:22:6, col:12> 'char' <LValueToRValue>
    | | `-ArraySubscriptExpr 0x15c02aaf8 <col:6, col:12> 'const char' lvalue
    | |   |-ImplicitCastExpr 0x15c02aae0 <col:6> 'const char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15c02aaa0 <col:6> 'const char *' lvalue ParmVar 0x15c00fd70 'mode' 'const char *'
    | |   `-IntegerLiteral 0x15c02aac0 <col:11> 'int' 1
    | |-CompoundAssignOperator 0x15c02abb8 <line:23:3, col:12> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |-DeclRefExpr 0x15c02ab30 <col:3> 'int' contains-errors lvalue Var 0x15c010008 'flags' 'int'
    | | `-RecoveryExpr 0x15c02ab98 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x15c02ac70 <line:25:3, col:12> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x15c02abe8 <col:3> 'int' contains-errors lvalue Var 0x15c010008 'flags' 'int'
    |   `-RecoveryExpr 0x15c02ac50 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15d8fe760 <line:27:2, col:82> 'int' contains-errors '='
    | |-DeclRefExpr 0x15c02acd0 <col:2> 'int' lvalue Var 0x15c00ff58 'fd' 'int'
    | `-CallExpr 0x15d8fe728 <col:7, col:82> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15c02add0 <col:7> 'int ()' Function 0x15c02ad18 'open' 'int ()'
    |   |-DeclRefExpr 0x15d8fe400 <col:12> 'const char *' lvalue ParmVar 0x15c00fcf0 'path' 'const char *'
    |   |-DeclRefExpr 0x15d8fe420 <col:18> 'int' contains-errors lvalue Var 0x15c010008 'flags' 'int'
    |   `-BinaryOperator 0x15d8fe708 <col:25, col:75> '<dependent type>' contains-errors '|'
    |     |-BinaryOperator 0x15d8fe6c8 <col:25, col:65> '<dependent type>' contains-errors '|'
    |     | |-BinaryOperator 0x15d8fe688 <col:25, col:55> '<dependent type>' contains-errors '|'
    |     | | |-BinaryOperator 0x15d8fe648 <col:25, col:45> '<dependent type>' contains-errors '|'
    |     | | | |-BinaryOperator 0x15d8fe608 <col:25, col:35> '<dependent type>' contains-errors '|'
    |     | | | | |-RecoveryExpr 0x15d8fe5c8 <col:25> '<dependent type>' contains-errors lvalue
    |     | | | | `-RecoveryExpr 0x15d8fe5e8 <col:35> '<dependent type>' contains-errors lvalue
    |     | | | `-RecoveryExpr 0x15d8fe628 <col:45> '<dependent type>' contains-errors lvalue
    |     | | `-RecoveryExpr 0x15d8fe668 <col:55> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x15d8fe6a8 <col:65> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x15d8fe6e8 <col:75> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x15d8febb8 <line:32:2, line:35:2>
      |-RecoveryExpr 0x15d8fea08 <line:32:6, col:7> '_Bool' contains-errors
      `-CompoundStmt 0x15d8feba0 <col:13, line:35:2>
        `-CallExpr 0x15d8feb60 <line:33:3, col:11> 'int'
          |-ImplicitCastExpr 0x15d8feb48 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x15d8feb08 <col:3> 'int ()' Function 0x15d8fea50 'close' 'int ()'
          `-ImplicitCastExpr 0x15d8feb88 <col:9> 'int' <LValueToRValue>
            `-DeclRefExpr 0x15d8feb28 <col:9> 'int' lvalue Var 0x15c00ff58 'fd' 'int'
