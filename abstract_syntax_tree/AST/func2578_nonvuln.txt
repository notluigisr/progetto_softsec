TranslationUnitDecl 0x142055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1420564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x142055bd0 '__int128'
|-TypedefDecl 0x142056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x142055bf0 'unsigned __int128'
|-TypedefDecl 0x14280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14280bc00 'struct __NSConstantString_tag'
|   `-Record 0x142056580 '__NSConstantString_tag'
|-TypedefDecl 0x14280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x142055d90 '__SVInt8_t'
|-TypedefDecl 0x14280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x142055db0 '__SVInt16_t'
|-TypedefDecl 0x14280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x142055dd0 '__SVInt32_t'
|-TypedefDecl 0x14280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x142055df0 '__SVInt64_t'
|-TypedefDecl 0x14280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x142055e10 '__SVUint8_t'
|-TypedefDecl 0x14280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x142055e30 '__SVUint16_t'
|-TypedefDecl 0x14280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x142055e50 '__SVUint32_t'
|-TypedefDecl 0x14280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x142055e70 '__SVUint64_t'
|-TypedefDecl 0x14280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x142055e90 '__SVFloat16_t'
|-TypedefDecl 0x14280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x142055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x142055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x142055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x142055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x142055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x142055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x142055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x142055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x142055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x142055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x142055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x142056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x142056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x142056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x142056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x142056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1420560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1420560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1420560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x142056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x142056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x142056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x142056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x142056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1420561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1420561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1420561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x142056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x142056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x142056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x142056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x142056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1420562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1420562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1420562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x142056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x142056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x142056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x142056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x142056390 '__SVBool_t'
|-TypedefDecl 0x14280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1420563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1420563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1420563f0 '__SVCount_t'
|-TypedefDecl 0x14280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14280dbb0 'char *'
|   `-BuiltinType 0x1420556b0 'char'
|-TypedefDecl 0x14280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14280dbb0 'char *'
|   `-BuiltinType 0x1420556b0 'char'
|-FunctionDecl 0x14280df18 <dataset_diviso_filec/func2578_nonvuln.c:1:1, line:71:1> line:1:1 invalid ref_stack_array_sanitize 'int (int *, int *, int *)'
| |-ParmVarDecl 0x14280dd28 <col:26, col:35> col:35 invalid i_ctx_p 'int *'
| |-ParmVarDecl 0x14280dda8 <col:44, col:49> col:49 invalid sarr 'int *'
| |-ParmVarDecl 0x14280de28 <col:55, col:60> col:60 invalid darr 'int *'
| `-CompoundStmt 0x14282cc88 <line:2:1, line:71:1>
|   |-DeclStmt 0x14280e0f0 <line:3:5, col:16>
|   | |-VarDecl 0x14280dff0 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x14280e070 <col:5, col:12> col:12 used code 'int'
|   |-IfStmt 0x1428276e0 <line:8:5, line:9:40>
|   | |-BinaryOperator 0x142827538 <line:8:9, col:55> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x14280e318 <col:9, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-CallExpr 0x14280e2f0 <col:10, col:25> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x14280e2b0 <col:10> 'int ()' Function 0x14280e1f8 'r_is_array' 'int ()'
|   | | |   `-RecoveryExpr 0x14280e2d0 <col:21> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x142827520 <col:30, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-CallExpr 0x1428274f0 <col:31, col:55> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x142827410 <col:31> 'int ()' Function 0x14280e358 'r_has_type' 'int ()'
|   | |     |-RecoveryExpr 0x142827430 <col:42> '<dependent type>' contains-errors lvalue
|   | |     `-RecoveryExpr 0x1428274d0 <col:48> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x1428276b8 <line:9:9, col:40> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x142827638 <col:9> 'int ()' Function 0x142827580 'return_error' 'int ()'
|   |   `-RecoveryExpr 0x142827698 <col:22> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x14282cc20 <line:11:5, line:69:5>
|   | |-BinaryOperator 0x142827740 <line:11:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x142827700 <col:10> 'int' lvalue Var 0x14280dff0 'i' 'int'
|   | | `-IntegerLiteral 0x142827720 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1428278c8 <col:17, col:32> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x142827760 <col:17> 'int' lvalue Var 0x14280dff0 'i' 'int'
|   | | `-CallExpr 0x1428278a0 <col:21, col:32> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x142827860 <col:21> 'int ()' Function 0x1428277a8 'r_size' 'int ()'
|   | |   `-RecoveryExpr 0x142827880 <col:28> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x142827908 <col:35, col:36> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1428278e8 <col:35> 'int' lvalue Var 0x14280dff0 'i' 'int'
|   | `-CompoundStmt 0x14282cc00 <col:40, line:69:5>
|   |   |-BinaryOperator 0x142827bc0 <line:12:9, col:44> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x142827920 <col:9> 'int' lvalue Var 0x14280e070 'code' 'int'
|   |   | `-CallExpr 0x142827b80 <col:16, col:44> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x142827a20 <col:16> 'int ()' Function 0x142827968 'array_get' 'int ()'
|   |   |   |-RecoveryExpr 0x142827b28 <col:26> '<dependent type>' contains-errors lvalue
|   |   |   |-RecoveryExpr 0x142827a58 <col:31> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x142827a78 <col:37> 'int' lvalue Var 0x14280dff0 'i' 'int'
|   |   |   `-UnaryOperator 0x142827b68 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-RecoveryExpr 0x142827b48 <col:41> '<dependent type>' contains-errors lvalue
|   |   `-SwitchStmt 0x142827e78 <line:15:9, line:68:9>
|   |     |-RecoveryExpr 0x142827e58 <line:15:16, col:27> 'int' contains-errors
|   |     `-CompoundStmt 0x14282cbd8 <col:30, line:68:9>
|   |       |-CompoundStmt 0x14282c290 <line:17:11, line:44:11>
|   |       | |-DeclStmt 0x142828020 <line:18:13, col:39>
|   |       | | `-VarDecl 0x142827eb8 <col:13, col:17> col:17 used index 'int'
|   |       | |-IfStmt 0x14282c068 <line:20:13, line:41:13> has_else
|   |       | | |-RecoveryExpr 0x1428280d0 <line:20:17, col:38> '_Bool' contains-errors
|   |       | | |-CompoundStmt 0x14282c018 <col:52, line:38:13>
|   |       | | | |-DeclStmt 0x142828170 <line:21:17, col:82>
|   |       | | | | `-VarDecl 0x142828108 <col:17, col:29> col:29 invalid data 'const int *'
|   |       | | | `-IfStmt 0x14282bff8 <line:22:17, line:37:17>
|   |       | | |   |-RecoveryExpr 0x142828308 <line:22:21, col:81> '_Bool' contains-errors
|   |       | | |   `-CompoundStmt 0x14282bfe0 <col:84, line:37:17>
|   |       | | |     `-IfStmt 0x14282bc58 <line:24:21, line:32:21> has_else
|   |       | | |       |-RecoveryExpr 0x14282b7a0 <line:24:25> '_Bool' contains-errors
|   |       | | |       |-CompoundStmt 0x14282bc38 <col:28, line:29:21>
|   |       | | |       `-CompoundStmt 0x14282bc48 <line:30:26, line:32:21>
|   |       | | `-CompoundStmt 0x14282c058 <line:39:18, line:41:13>
|   |       | `-BreakStmt 0x14282c288 <line:43:13>
|   |       |-CompoundStmt 0x14282ca78 <line:48:11, line:65:11>
|   |       | |-DeclStmt 0x14282c4d8 <line:49:13, col:91>
|   |       | | `-VarDecl 0x14282c2d0 <col:13, col:17> col:17 used attrs 'int'
|   |       | |-IfStmt 0x14282ca40 <line:51:13, line:63:13> has_else
|   |       | | |-RecoveryExpr 0x14282c510 <line:51:17, col:50> '_Bool' contains-errors
|   |       | | |-CompoundStmt 0x14282c908 <col:53, line:60:13>
|   |       | | | `-IfStmt 0x14282c7c8 <line:53:17, line:58:17> has_else
|   |       | | |   |-BinaryOperator 0x14282c708 <line:53:21, col:28> 'int' '<'
|   |       | | |   | |-ImplicitCastExpr 0x14282c6f0 <col:21> 'int' <LValueToRValue>
|   |       | | |   | | `-DeclRefExpr 0x14282c6b0 <col:21> 'int' lvalue Var 0x14280e070 'code' 'int'
|   |       | | |   | `-IntegerLiteral 0x14282c6d0 <col:28> 'int' 0
|   |       | | |   |-CompoundStmt 0x14282c748 <col:31, line:55:17>
|   |       | | |   `-CompoundStmt 0x14282c7b8 <line:56:22, line:58:17>
|   |       | | `-CompoundStmt 0x14282ca30 <line:61:18, line:63:13>
|   |       | `-BreakStmt 0x14282ca70 <line:64:13>
|   |       `-DefaultStmt 0x14282cbb8 <line:66:11, col:18>
|   |         `-NullStmt 0x14282cbb0 <col:18>
|   `-ReturnStmt 0x14282cc78 <line:70:5, col:12>
|     `-IntegerLiteral 0x14282cc58 <col:12> 'int' 0
|-FunctionDecl 0x14282b468 <line:23:51> col:51 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x14282b568 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14282b510 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x14282b840 <line:26:25> col:25 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x14282b940 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x14282b9a8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14282b8e8 <<invalid sloc>> Implicit 885
