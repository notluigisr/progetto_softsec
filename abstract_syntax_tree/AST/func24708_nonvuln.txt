TranslationUnitDecl 0x134055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1340564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x134055bd0 '__int128'
|-TypedefDecl 0x134056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x134055bf0 'unsigned __int128'
|-TypedefDecl 0x13480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13480bc00 'struct __NSConstantString_tag'
|   `-Record 0x134056580 '__NSConstantString_tag'
|-TypedefDecl 0x13480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134055d90 '__SVInt8_t'
|-TypedefDecl 0x13480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134055db0 '__SVInt16_t'
|-TypedefDecl 0x13480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134055dd0 '__SVInt32_t'
|-TypedefDecl 0x13480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134055df0 '__SVInt64_t'
|-TypedefDecl 0x13480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134055e10 '__SVUint8_t'
|-TypedefDecl 0x13480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134055e30 '__SVUint16_t'
|-TypedefDecl 0x13480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134055e50 '__SVUint32_t'
|-TypedefDecl 0x13480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134055e70 '__SVUint64_t'
|-TypedefDecl 0x13480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134055e90 '__SVFloat16_t'
|-TypedefDecl 0x13480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1340560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1340560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1340560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1340561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1340561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1340561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1340562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1340562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1340562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134056390 '__SVBool_t'
|-TypedefDecl 0x13480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1340563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1340563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1340563f0 '__SVCount_t'
|-TypedefDecl 0x13480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13480dbb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
|-TypedefDecl 0x13480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13480dbb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
|-FunctionDecl 0x134827438 <dataset_diviso_filec/func24708_nonvuln.c:1:1, line:54:1> line:1:14 invalid examine_request 'int (struct transaction_t *, const char *)'
| |-ParmVarDecl 0x13480e268 <col:30, col:52> col:52 used txn 'struct transaction_t *'
| |-ParmVarDecl 0x13480e2e8 <col:57, col:69> col:69 used uri 'const char *'
| `-CompoundStmt 0x13482a4c8 <line:2:1, line:54:1>
|   |-DeclStmt 0x134827648 <line:3:5, col:33>
|   | |-VarDecl 0x134827508 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x134827570 <col:15> 'int' 0
|   | `-VarDecl 0x1348275a8 <col:5, col:32> col:18 used sasl_result 'int' cinit
|   |   `-IntegerLiteral 0x134827610 <col:32> 'int' 0
|   |-DeclStmt 0x1348276e0 <line:4:5, col:22>
|   | `-VarDecl 0x134827678 <col:5, col:17> col:17 used query 'const char *'
|   |-DeclStmt 0x1348278e8 <line:5:5, col:40>
|   | |-RecordDecl 0x1348276f8 <col:11, col:18> col:18 struct namespace_t
|   | `-VarDecl 0x134827868 <col:5, col:31> col:31 used namespace 'const struct namespace_t *'
|   |-DeclStmt 0x134827b60 <line:6:5, col:53>
|   | |-RecordDecl 0x134827900 <col:5, col:12> col:12 struct request_line_t
|   | `-VarDecl 0x134827a68 <col:5, col:45> col:28 used req_line 'struct request_line_t *' cinit
|   |   `-UnaryOperator 0x134827b30 <col:39, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x134827b08 <col:40, col:45> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x134827ad0 <col:40> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   |-IfStmt 0x134827c68 <line:8:5, col:31>
|   | |-UnaryOperator 0x134827bb0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x134827b98 <col:10> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x134827b78 <col:10> 'const char *' lvalue ParmVar 0x13480e2e8 'uri' 'const char *'
|   | `-BinaryOperator 0x134827c48 <col:15, col:31> 'const char *' contains-errors '='
|   |   |-DeclRefExpr 0x134827bc8 <col:15> 'const char *' lvalue ParmVar 0x13480e2e8 'uri' 'const char *'
|   |   `-RecoveryExpr 0x134827c20 <col:21, col:31> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x134827be8 <col:21> 'struct request_line_t *' contains-errors lvalue Var 0x134827a68 'req_line' 'struct request_line_t *'
|   |-IfStmt 0x134827f50 <line:11:5, col:43>
|   | |-ParenExpr 0x134827ee8 <col:9, col:33> 'int'
|   | | `-BinaryOperator 0x134827ec8 <col:10, col:32> 'int' '='
|   | |   |-DeclRefExpr 0x134827c88 <col:10> 'int' lvalue Var 0x134827508 'ret' 'int'
|   | |   `-CallExpr 0x134827e88 <col:16, col:32> 'int'
|   | |     |-ImplicitCastExpr 0x134827e70 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x134827e00 <col:16> 'int ()' Function 0x134827d48 'check_method' 'int ()'
|   | |     `-ImplicitCastExpr 0x134827eb0 <col:29> 'struct transaction_t *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x134827e20 <col:29> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   | `-ReturnStmt 0x134827f40 <col:36, col:43>
|   |   `-ImplicitCastExpr 0x134827f28 <col:43> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x134827f08 <col:43> 'int' lvalue Var 0x134827508 'ret' 'int'
|   |-IfStmt 0x134828328 <line:14:5, line:16:5>
|   | |-UnaryOperator 0x1348282b0 <line:14:9, col:72> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ParenExpr 0x134828290 <col:10, col:72> '<dependent type>' contains-errors
|   | |   `-BinaryOperator 0x134828270 <col:11, col:71> '<dependent type>' contains-errors '='
|   | |     |-RecoveryExpr 0x134827fa8 <col:11, col:16> '<dependent type>' contains-errors lvalue
|   | |     | `-DeclRefExpr 0x134827f70 <col:11> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   | |     `-CallExpr 0x134828230 <col:26, col:71> '<dependent type>' contains-errors
|   | |       |-DeclRefExpr 0x1348280b0 <col:26> 'int ()' Function 0x134827ff8 'parse_uri' 'int ()'
|   | |       |-RecoveryExpr 0x134828108 <col:36, col:41> '<dependent type>' contains-errors lvalue
|   | |       | `-DeclRefExpr 0x1348280d0 <col:36> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   | |       |-DeclRefExpr 0x134828130 <col:47> 'const char *' lvalue ParmVar 0x13480e2e8 'uri' 'const char *'
|   | |       |-IntegerLiteral 0x134828150 <col:52> 'int' 1
|   | |       `-UnaryOperator 0x134828218 <col:55, col:67> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |         `-CXXDependentScopeMemberExpr 0x1348281d0 <col:56, col:67> '<dependent type>' contains-errors lvalue .desc
|   | |           `-RecoveryExpr 0x1348281a8 <col:56, col:61> '<dependent type>' contains-errors lvalue
|   | |             `-DeclRefExpr 0x134828170 <col:56> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   | `-CompoundStmt 0x134828310 <col:75, line:16:5>
|   |   `-ReturnStmt 0x134828300 <line:15:9, col:16>
|   |     `-RecoveryExpr 0x1348282e0 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x134122dd8 <line:19:5, col:49>
|   | |-ParenExpr 0x134122d70 <col:9, col:39> 'int'
|   | | `-BinaryOperator 0x134122d50 <col:10, col:38> 'int' '='
|   | |   |-DeclRefExpr 0x134828348 <col:10> 'int' lvalue Var 0x134827508 'ret' 'int'
|   | |   `-CallExpr 0x134122d10 <col:16, col:38> 'int'
|   | |     |-ImplicitCastExpr 0x134122cf8 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x134122cb8 <col:16> 'int ()' Function 0x134122c00 'preauth_check_hdrs' 'int ()'
|   | |     `-ImplicitCastExpr 0x134122d38 <col:35> 'struct transaction_t *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x134122cd8 <col:35> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   | `-ReturnStmt 0x134122dc8 <col:42, col:49>
|   |   `-ImplicitCastExpr 0x134122db0 <col:49> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x134122d90 <col:49> 'int' lvalue Var 0x134827508 'ret' 'int'
|   |-IfStmt 0x134123018 <line:22:5, col:46>
|   | |-ParenExpr 0x134122fb0 <col:9, col:36> 'int'
|   | | `-BinaryOperator 0x134122f90 <col:10, col:35> 'int' '='
|   | |   |-DeclRefExpr 0x134122df8 <col:10> 'int' lvalue Var 0x134827508 'ret' 'int'
|   | |   `-CallExpr 0x134122f50 <col:16, col:35> 'int'
|   | |     |-ImplicitCastExpr 0x134122f38 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x134122ef8 <col:16> 'int ()' Function 0x134122e40 'check_namespace' 'int ()'
|   | |     `-ImplicitCastExpr 0x134122f78 <col:32> 'struct transaction_t *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x134122f18 <col:32> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   | `-ReturnStmt 0x134123008 <col:39, col:46>
|   |   `-ImplicitCastExpr 0x134122ff0 <col:46> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x134122fd0 <col:46> 'int' lvalue Var 0x134827508 'ret' 'int'
|   |-BinaryOperator 0x134123248 <line:25:5, col:44> 'int' '='
|   | |-DeclRefExpr 0x134123038 <col:5> 'int' lvalue Var 0x134827508 'ret' 'int'
|   | `-CallExpr 0x134123200 <col:11, col:44> 'int'
|   |   |-ImplicitCastExpr 0x1341231e8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x134123138 <col:11> 'int ()' Function 0x134123080 'auth_check_hdrs' 'int ()'
|   |   |-ImplicitCastExpr 0x134123230 <col:27> 'struct transaction_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x134123158 <col:27> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   |   `-UnaryOperator 0x1341231d0 <col:32, col:33> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x134123178 <col:33> 'int' lvalue Var 0x1348275a8 'sasl_result' 'int'
|   |-IfStmt 0x1341233a8 <line:27:5, col:49>
|   | |-BinaryOperator 0x134123340 <col:9, col:23> 'int' contains-errors '&&'
|   | | |-DeclRefExpr 0x134123268 <col:9> 'int' lvalue Var 0x134827508 'ret' 'int'
|   | | `-BinaryOperator 0x134123320 <col:16, col:23> 'int' contains-errors '!='
|   | |   |-DeclRefExpr 0x134123288 <col:16> 'int' lvalue Var 0x134827508 'ret' 'int'
|   | |   `-RecoveryExpr 0x134123300 <col:23> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x134123398 <col:42, col:49>
|   |   `-ImplicitCastExpr 0x134123380 <col:49> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x134123360 <col:49> 'int' lvalue Var 0x134827508 'ret' 'int'
|   |-BinaryOperator 0x134123490 <line:30:5, col:30> 'const struct namespace_t *' contains-errors '='
|   | |-DeclRefExpr 0x1341233c8 <col:5> 'const struct namespace_t *' lvalue Var 0x134827868 'namespace' 'const struct namespace_t *'
|   | `-CXXDependentScopeMemberExpr 0x134123448 <col:17, col:30> '<dependent type>' contains-errors lvalue .namespace
|   |   `-RecoveryExpr 0x134123420 <col:17, col:22> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1341233e8 <col:17> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   |-CallExpr 0x134123b00 <line:31:5, line:33:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x134123590 <line:31:5> 'int ()' Function 0x1341234d8 'buf_printf' 'int ()'
|   | |-UnaryOperator 0x134123610 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x1341235e8 <col:17, col:22> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1341235b0 <col:17> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   | |-StringLiteral 0x134123670 <col:27> 'char[4]' lvalue "STR"
|   | |-RecoveryExpr 0x134123ae0 <col:34> '<dependent type>' contains-errors lvalue
|   | `-ConditionalOperator 0x134123a70 <line:32:16, line:33:27> '<dependent type>' contains-errors
|   |   |-RecoveryExpr 0x1341236e0 <line:32:16, col:27> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x1341236a8 <col:16> 'const struct namespace_t *' lvalue Var 0x134827868 'namespace' 'const struct namespace_t *'
|   |   |-CallExpr 0x1341239e0 <col:40, col:74> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x134123930 <col:40> 'char *(const char *, int)' Function 0x134123750 'strrchr' 'char *(const char *, int)'
|   |   | |-RecoveryExpr 0x134123988 <col:48, col:59> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x134123950 <col:48> 'const struct namespace_t *' lvalue Var 0x134827868 'namespace' 'const struct namespace_t *'
|   |   | `-CharacterLiteral 0x1341239b0 <col:71> 'int' 47
|   |   `-RecoveryExpr 0x134123a48 <line:33:16, col:27> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x134123a10 <col:16> 'const struct namespace_t *' lvalue Var 0x134827868 'namespace' 'const struct namespace_t *'
|   |-CallExpr 0x1348299e8 <line:36:5, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x134829950 <col:5> 'int ()' Function 0x134829898 'buf_reset' 'int ()'
|   | `-UnaryOperator 0x1348299d0 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x1348299a8 <col:16, col:21> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x134829970 <col:16> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   |-IfStmt 0x134829b08 <line:39:5, line:41:5>
|   | |-RecoveryExpr 0x134829ab8 <line:39:9, col:50> '_Bool' contains-errors
|   | `-CompoundStmt 0x134829af8 <col:53, line:41:5>
|   |-IfStmt 0x134829d28 <line:43:5, col:54>
|   | |-ImplicitCastExpr 0x134829b48 <col:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x134829b28 <col:9> 'int' lvalue Var 0x134827508 'ret' 'int'
|   | `-ReturnStmt 0x134829d18 <col:14, col:54>
|   |   `-CallExpr 0x134829cb8 <col:21, col:54> 'int'
|   |     |-ImplicitCastExpr 0x134829ca0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x134829c40 <col:21> 'int ()' Function 0x134829b88 'client_need_auth' 'int ()'
|   |     |-ImplicitCastExpr 0x134829ce8 <col:38> 'struct transaction_t *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x134829c60 <col:38> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   |     `-ImplicitCastExpr 0x134829d00 <col:43> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x134829c80 <col:43> 'int' lvalue Var 0x1348275a8 'sasl_result' 'int'
|   |-CallExpr 0x134829f00 <line:46:5, col:50> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x134829e28 <col:5> 'int ()' Function 0x134829d70 'construct_hash_table' 'int ()'
|   | |-UnaryOperator 0x134829ea8 <col:26, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x134829e80 <col:27, col:32> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x134829e48 <col:27> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   | |-IntegerLiteral 0x134829ec0 <col:45> 'int' 10
|   | `-IntegerLiteral 0x134829ee0 <col:49> 'int' 1
|   |-BinaryOperator 0x13482a0e0 <line:47:5, col:35> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x134829f38 <col:5> 'const char *' lvalue Var 0x134827678 'query' 'const char *'
|   | `-CallExpr 0x13482a0b8 <col:13, col:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13482a038 <col:13> 'int ()' Function 0x134829f80 'URI_QUERY' 'int ()'
|   |   `-RecoveryExpr 0x13482a090 <col:23, col:28> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x13482a058 <col:23> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   |-IfStmt 0x13482a2f0 <line:48:5, col:45>
|   | |-ImplicitCastExpr 0x13482a120 <col:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13482a100 <col:9> 'const char *' lvalue Var 0x134827678 'query' 'const char *'
|   | `-CallExpr 0x13482a290 <col:16, col:45> 'int'
|   |   |-ImplicitCastExpr 0x13482a278 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13482a218 <col:16> 'int ()' Function 0x13482a160 'parse_query_params' 'int ()'
|   |   |-ImplicitCastExpr 0x13482a2c0 <col:35> 'struct transaction_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13482a238 <col:35> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   |   `-ImplicitCastExpr 0x13482a2d8 <col:40> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13482a258 <col:40> 'const char *' lvalue Var 0x134827678 'query' 'const char *'
|   |-CallExpr 0x13482a458 <line:51:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x13482a440 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13482a400 <col:5> 'int ()' Function 0x13482a338 'postauth_check_hdrs' 'int ()'
|   | `-ImplicitCastExpr 0x13482a480 <col:25> 'struct transaction_t *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13482a420 <col:25> 'struct transaction_t *' lvalue ParmVar 0x13480e268 'txn' 'struct transaction_t *'
|   `-ReturnStmt 0x13482a4b8 <line:53:5, col:12>
|     `-IntegerLiteral 0x13482a498 <col:12> 'int' 0
`-FunctionDecl 0x134123750 <line:32:40> col:40 implicit used strrchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x134123850 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1341238b8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1341237f8 <<invalid sloc>> Implicit 896
