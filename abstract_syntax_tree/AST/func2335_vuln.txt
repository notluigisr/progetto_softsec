TranslationUnitDecl 0x12e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e855bd0 '__int128'
|-TypedefDecl 0x12e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e855bf0 'unsigned __int128'
|-TypedefDecl 0x12f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12e856580 '__NSConstantString_tag'
|-TypedefDecl 0x12f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e855d90 '__SVInt8_t'
|-TypedefDecl 0x12f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e855db0 '__SVInt16_t'
|-TypedefDecl 0x12f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e855dd0 '__SVInt32_t'
|-TypedefDecl 0x12f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e855df0 '__SVInt64_t'
|-TypedefDecl 0x12f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e855e10 '__SVUint8_t'
|-TypedefDecl 0x12f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e855e30 '__SVUint16_t'
|-TypedefDecl 0x12f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e855e50 '__SVUint32_t'
|-TypedefDecl 0x12f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e855e70 '__SVUint64_t'
|-TypedefDecl 0x12f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e855e90 '__SVFloat16_t'
|-TypedefDecl 0x12f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e856390 '__SVBool_t'
|-TypedefDecl 0x12f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e8563f0 '__SVCount_t'
|-TypedefDecl 0x12f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f00dbb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
|-TypedefDecl 0x12f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f00dbb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
|-FunctionDecl 0x12f00df18 <dataset_diviso_filec/func2335_vuln.c:1:1, line:56:1> line:1:1 invalid rsvg_characters_impl 'int (int *, const int *, int)'
| |-ParmVarDecl 0x12f00dd28 <col:23, col:36> col:36 invalid ctx 'int *'
| |-ParmVarDecl 0x12f00dda8 <col:41, col:57> col:57 invalid ch 'const int *'
| |-ParmVarDecl 0x12f00de28 <col:61, col:65> col:65 used len 'int'
| `-CompoundStmt 0x12e9256d8 <line:2:1, line:56:1>
|   |-IfStmt 0x12f00e0c0 <line:5:5, line:6:9>
|   | |-BinaryOperator 0x12f00e090 <line:5:9, col:17> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x12f00e028 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x12f00e010 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x12f00dff0 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x12f00e078 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x12f00e060 <col:17> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12f00e040 <col:17> 'int' lvalue ParmVar 0x12f00de28 'len' 'int'
|   | `-ReturnStmt 0x12f00e0b0 <line:6:9>
|   |-IfStmt 0x12e9238d0 <line:8:5, line:35:5>
|   | |-CXXDependentScopeMemberExpr 0x12f00e148 <line:8:9, col:20> '<dependent type>' contains-errors lvalue ->currentnode
|   | | `-CXXDependentScopeMemberExpr 0x12f00e100 <col:9, col:14> '<dependent type>' contains-errors lvalue ->priv
|   | |   `-RecoveryExpr 0x12f00e0e0 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12e9238b8 <col:33, line:35:5>
|   |   `-IfStmt 0x12e923898 <line:9:9, line:34:9>
|   |     |-BinaryOperator 0x12f028020 <line:9:13, line:10:62> 'int' contains-errors '||'
|   |     | |-UnaryOperator 0x12f027e10 <line:9:13, col:62> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | | `-CallExpr 0x12f027de0 <col:14, col:62> '<dependent type>' contains-errors
|   |     | |   |-DeclRefExpr 0x12f027bf0 <col:14> 'int (const char *, const char *)' Function 0x12f027a10 'strcmp' 'int (const char *, const char *)'
|   |     | |   |-StringLiteral 0x12f027c50 <col:22> 'char[4]' lvalue "STR"
|   |     | |   `-CXXDependentScopeMemberExpr 0x12f027d68 <col:29, col:59> '<dependent type>' contains-errors lvalue ->str
|   |     | |     `-CXXDependentScopeMemberExpr 0x12f027d20 <col:29, col:53> '<dependent type>' contains-errors lvalue ->type
|   |     | |       `-CXXDependentScopeMemberExpr 0x12f027cd8 <col:29, col:40> '<dependent type>' contains-errors lvalue ->currentnode
|   |     | |         `-CXXDependentScopeMemberExpr 0x12f027c90 <col:29, col:34> '<dependent type>' contains-errors lvalue ->priv
|   |     | |           `-RecoveryExpr 0x12f027c70 <col:29> '<dependent type>' contains-errors lvalue
|   |     | `-UnaryOperator 0x12f028008 <line:10:13, col:62> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     |   `-CallExpr 0x12f027fd8 <col:14, col:62> '<dependent type>' contains-errors
|   |     |     |-DeclRefExpr 0x12f027e28 <col:14> 'int (const char *, const char *)' Function 0x12f027a10 'strcmp' 'int (const char *, const char *)'
|   |     |     |-StringLiteral 0x12f027e48 <col:22> 'char[4]' lvalue "STR"
|   |     |     `-CXXDependentScopeMemberExpr 0x12f027f60 <col:29, col:59> '<dependent type>' contains-errors lvalue ->str
|   |     |       `-CXXDependentScopeMemberExpr 0x12f027f18 <col:29, col:53> '<dependent type>' contains-errors lvalue ->type
|   |     |         `-CXXDependentScopeMemberExpr 0x12f027ed0 <col:29, col:40> '<dependent type>' contains-errors lvalue ->currentnode
|   |     |           `-CXXDependentScopeMemberExpr 0x12f027e88 <col:29, col:34> '<dependent type>' contains-errors lvalue ->priv
|   |     |             `-RecoveryExpr 0x12f027e68 <col:29> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x12e923878 <col:65, line:34:9>
|   |       |-ForStmt 0x12e922ea8 <line:15:13, line:20:13>
|   |       | |-<<<NULL>>>
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x12f028248 <line:15:25, col:63> 'int' contains-errors '<'
|   |       | | |-RecoveryExpr 0x12f028228 <col:25> '<dependent type>' contains-errors lvalue
|   |       | | `-CXXDependentScopeMemberExpr 0x12f0281c0 <col:29, col:63> '<dependent type>' contains-errors lvalue ->len
|   |       | |   `-CXXDependentScopeMemberExpr 0x12f028178 <col:29, col:53> '<dependent type>' contains-errors lvalue ->children
|   |       | |     `-CXXDependentScopeMemberExpr 0x12f028130 <col:29, col:40> '<dependent type>' contains-errors lvalue ->currentnode
|   |       | |       `-CXXDependentScopeMemberExpr 0x12f0280e8 <col:29, col:34> '<dependent type>' contains-errors lvalue ->priv
|   |       | |         `-RecoveryExpr 0x12f0280c8 <col:29> '<dependent type>' contains-errors lvalue
|   |       | |-UnaryOperator 0x12f0282b8 <col:68, col:69> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |       | | `-RecoveryExpr 0x12f028298 <col:68> '<dependent type>' contains-errors lvalue
|   |       | `-CompoundStmt 0x12e922e90 <col:73, line:20:13>
|   |       |   `-IfStmt 0x12e922e70 <line:17:17, line:19:17>
|   |       |     |-UnaryOperator 0x12e922e30 <line:17:21, col:52> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |       |     | `-CallExpr 0x12e922e00 <col:22, col:52> '<dependent type>' contains-errors
|   |       |     |   |-DeclRefExpr 0x12f0285a0 <col:22> 'int (const char *, const char *)' Function 0x12f027a10 'strcmp' 'int (const char *, const char *)'
|   |       |     |   |-CXXDependentScopeMemberExpr 0x12f028768 <col:30, col:42> '<dependent type>' contains-errors lvalue ->str
|   |       |     |   | `-CXXDependentScopeMemberExpr 0x12f028720 <col:30, col:36> '<dependent type>' contains-errors lvalue ->type
|   |       |     |   |   `-RecoveryExpr 0x12f028700 <col:30> '<dependent type>' contains-errors lvalue
|   |       |     |   `-StringLiteral 0x12f028668 <col:47> 'char[4]' lvalue "STR"
|   |       |     `-CompoundStmt 0x12e922e60 <col:55, line:19:17>
|   |       `-IfStmt 0x12e923858 <line:22:13, line:33:13>
|   |         |-RecoveryExpr 0x12e922ee0 <line:22:17, col:25> '_Bool' contains-errors
|   |         `-CompoundStmt 0x12e923838 <col:31, line:33:13>
|   |           |-IfStmt 0x12e9237f8 <line:23:17, line:30:17> has_else
|   |           | |-RecoveryExpr 0x12e923080 <line:23:21, col:61> '_Bool' contains-errors
|   |           | |-CompoundStmt 0x12e923640 <col:64, line:28:17>
|   |           | | |-DeclStmt 0x12e923120 <line:24:21, col:31>
|   |           | | | `-VarDecl 0x12e9230b8 <col:21, col:27> col:27 used utf8 'char *'
|   |           | | |-BinaryOperator 0x12e923388 <line:25:21, col:66> 'char *' contains-errors '='
|   |           | | | |-DeclRefExpr 0x12e923138 <col:21> 'char *' lvalue Var 0x12e9230b8 'utf8' 'char *'
|   |           | | | `-ImplicitCastExpr 0x12e923370 <col:28, col:66> 'char *' contains-errors <IntegralToPointer>
|   |           | | |   `-CallExpr 0x12e923328 <col:28, col:66> 'int' contains-errors
|   |           | | |     |-ImplicitCastExpr 0x12e923310 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |           | | |     | `-DeclRefExpr 0x12e923238 <col:28> 'int ()' Function 0x12e923180 'rsvg_make_valid_utf8' 'int ()'
|   |           | | |     |-CStyleCastExpr 0x12e923290 <col:50, col:59> 'char *' contains-errors <Dependent>
|   |           | | |     | `-RecoveryExpr 0x12e923258 <col:59> '<dependent type>' contains-errors lvalue
|   |           | | |     `-ImplicitCastExpr 0x12e923358 <col:63> 'int' <LValueToRValue>
|   |           | | |       `-DeclRefExpr 0x12e9232b8 <col:63> 'int' lvalue ParmVar 0x12f00de28 'len' 'int'
|   |           | | `-CallExpr 0x12e923600 <line:27:21, col:33> 'int'
|   |           | |   |-ImplicitCastExpr 0x12e9235e8 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |           | |   | `-DeclRefExpr 0x12e9235a8 <col:21> 'int ()' Function 0x12e9234f0 'g_free' 'int ()'
|   |           | |   `-ImplicitCastExpr 0x12e923628 <col:29> 'char *' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x12e9235c8 <col:29> 'char *' lvalue Var 0x12e9230b8 'utf8' 'char *'
|   |           | `-CompoundStmt 0x12e9237e8 <line:28:24, line:30:17>
|   |           `-ReturnStmt 0x12e923828 <line:32:17>
|   `-IfStmt 0x12e925200 <line:40:5, line:47:5> has_else
|     |-RecoveryExpr 0x12e923bb0 <line:40:9, col:49> '_Bool' contains-errors
|     |-CompoundStmt 0x12e924fe8 <col:52, line:45:5>
|     | |-DeclStmt 0x12e923c50 <line:41:9, col:19>
|     | | `-VarDecl 0x12e923be8 <col:9, col:15> col:15 used utf8 'char *'
|     | |-BinaryOperator 0x12e923da0 <line:42:9, col:54> 'char *' contains-errors '='
|     | | |-DeclRefExpr 0x12e923c68 <col:9> 'char *' lvalue Var 0x12e923be8 'utf8' 'char *'
|     | | `-ImplicitCastExpr 0x12e923d88 <col:16, col:54> 'char *' contains-errors <IntegralToPointer>
|     | |   `-CallExpr 0x12e923d40 <col:16, col:54> 'int' contains-errors
|     | |     |-ImplicitCastExpr 0x12e923d28 <col:16> 'int (*)()' <FunctionToPointerDecay>
|     | |     | `-DeclRefExpr 0x12e923c88 <col:16> 'int ()' Function 0x12e923180 'rsvg_make_valid_utf8' 'int ()'
|     | |     |-CStyleCastExpr 0x12e923ce0 <col:38, col:47> 'char *' contains-errors <Dependent>
|     | |     | `-RecoveryExpr 0x12e923ca8 <col:47> '<dependent type>' contains-errors lvalue
|     | |     `-ImplicitCastExpr 0x12e923d70 <col:51> 'int' <LValueToRValue>
|     | |       `-DeclRefExpr 0x12e923d08 <col:51> 'int' lvalue ParmVar 0x12f00de28 'len' 'int'
|     | `-CallExpr 0x12e924fa8 <line:44:9, col:21> 'int'
|     |   |-ImplicitCastExpr 0x12e924f90 <col:9> 'int (*)()' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x12e924f50 <col:9> 'int ()' Function 0x12e9234f0 'g_free' 'int ()'
|     |   `-ImplicitCastExpr 0x12e924fd0 <col:17> 'char *' <LValueToRValue>
|     |     `-DeclRefExpr 0x12e924f70 <col:17> 'char *' lvalue Var 0x12e923be8 'utf8' 'char *'
|     `-CompoundStmt 0x12e9251f0 <line:45:12, line:47:5>
`-FunctionDecl 0x12f027a10 <line:9:14> col:14 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x12f027b10 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12f027b78 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12f027ab8 <<invalid sloc>> Implicit 887
