TranslationUnitDecl 0x150033408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500342b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1500339d0 '__int128'
|-TypedefDecl 0x150034328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1500339f0 'unsigned __int128'
|-TypedefDecl 0x15080be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15080bc00 'struct __NSConstantString_tag'
|   `-Record 0x150034380 '__NSConstantString_tag'
|-TypedefDecl 0x15080be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150033b90 '__SVInt8_t'
|-TypedefDecl 0x15080bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150033bb0 '__SVInt16_t'
|-TypedefDecl 0x15080bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150033bd0 '__SVInt32_t'
|-TypedefDecl 0x15080bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150033bf0 '__SVInt64_t'
|-TypedefDecl 0x15080c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150033c10 '__SVUint8_t'
|-TypedefDecl 0x15080c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150033c30 '__SVUint16_t'
|-TypedefDecl 0x15080c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150033c50 '__SVUint32_t'
|-TypedefDecl 0x15080c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150033c70 '__SVUint64_t'
|-TypedefDecl 0x15080c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150033c90 '__SVFloat16_t'
|-TypedefDecl 0x15080c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150033cb0 '__SVFloat32_t'
|-TypedefDecl 0x15080c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150033cd0 '__SVFloat64_t'
|-TypedefDecl 0x15080c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150033cf0 '__SVBfloat16_t'
|-TypedefDecl 0x15080c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150033d10 '__clang_svint8x2_t'
|-TypedefDecl 0x15080c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150033d30 '__clang_svint16x2_t'
|-TypedefDecl 0x15080c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150033d50 '__clang_svint32x2_t'
|-TypedefDecl 0x15080c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150033d70 '__clang_svint64x2_t'
|-TypedefDecl 0x15080c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150033d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15080c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150033db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15080c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150033dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15080c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150033df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15080c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150033e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15080c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150033e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15080c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150033e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15080c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150033e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15080c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150033e90 '__clang_svint8x3_t'
|-TypedefDecl 0x15080c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x150033eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x15080c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x150033ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x15080c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x150033ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x15080c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150033f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x15080ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150033f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x15080cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150033f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x15080cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150033f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x15080cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150033f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15080d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x150033fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15080d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x150033fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15080d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x150033ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15080d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150034010 '__clang_svint8x4_t'
|-TypedefDecl 0x15080d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150034030 '__clang_svint16x4_t'
|-TypedefDecl 0x15080d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150034050 '__clang_svint32x4_t'
|-TypedefDecl 0x15080d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150034070 '__clang_svint64x4_t'
|-TypedefDecl 0x15080d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150034090 '__clang_svuint8x4_t'
|-TypedefDecl 0x15080d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500340b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15080d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1500340d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15080d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1500340f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15080d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150034110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15080d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150034130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15080d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150034150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15080d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150034170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15080da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150034190 '__SVBool_t'
|-TypedefDecl 0x15080da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500341b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15080dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1500341d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15080db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1500341f0 '__SVCount_t'
|-TypedefDecl 0x15080dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15080dbb0 'char *'
|   `-BuiltinType 0x1500334b0 'char'
|-TypedefDecl 0x15080dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15080dbb0 'char *'
|   `-BuiltinType 0x1500334b0 'char'
|-FunctionDecl 0x15080e008 <dataset_diviso_filec/func14765_vuln.c:1:1, line:57:1> line:1:1 invalid ImagingConvertTransparent 'int (int, const char *, int, int, int)'
| |-ParmVarDecl 0x15080dcf0 <col:27, col:35> col:35 invalid imIn 'int'
| |-ParmVarDecl 0x15080dd70 <col:41, col:53> col:53 used mode 'const char *'
| |-ParmVarDecl 0x15080ddf0 <col:59, col:63> col:63 used r 'int'
| |-ParmVarDecl 0x15080de70 <col:66, col:70> col:70 used g 'int'
| |-ParmVarDecl 0x15080def0 <col:73, col:77> col:77 used b 'int'
| `-CompoundStmt 0x15801c688 <col:80, line:57:1>
|   |-DeclStmt 0x15080e158 <line:5:5, col:10>
|   | `-VarDecl 0x15080e0f0 <col:5, col:9> col:9 used y 'int'
|   |-IfStmt 0x15080e1e8 <line:7:5, line:9:5>
|   | |-UnaryOperator 0x15080e1a8 <line:7:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15080e190 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x15080e170 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15080e1d8 <col:16, line:9:5>
|   |-IfStmt 0x150828270 <line:11:5, line:28:5>
|   | |-UnaryOperator 0x150827d40 <line:11:9, line:13:35> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ParenExpr 0x150827d20 <line:11:10, line:13:35> 'int' contains-errors
|   | |   `-BinaryOperator 0x150827d00 <line:11:11, line:13:34> 'int' contains-errors '&&'
|   | |     |-ParenExpr 0x150827b48 <line:11:11, line:12:42> 'int' contains-errors
|   | |     | `-BinaryOperator 0x150827b28 <line:11:12, line:12:41> 'int' contains-errors '||'
|   | |     |   |-BinaryOperator 0x1508279c0 <line:11:12, col:41> 'int' contains-errors '=='
|   | |     |   | |-CallExpr 0x150827970 <col:12, col:36> '<dependent type>' contains-errors
|   | |     |   | | |-DeclRefExpr 0x150827850 <col:12> 'int (const char *, const char *)' Function 0x150827670 'strcmp' 'int (const char *, const char *)'
|   | |     |   | | |-CXXDependentScopeMemberExpr 0x150827890 <col:19, col:25> '<dependent type>' contains-errors lvalue ->mode
|   | |     |   | | | `-RecoveryExpr 0x150827870 <col:19> '<dependent type>' contains-errors lvalue
|   | |     |   | | `-StringLiteral 0x150827920 <col:31> 'char[4]' lvalue "STR"
|   | |     |   | `-IntegerLiteral 0x1508279a0 <col:41> 'int' 0
|   | |     |   `-BinaryOperator 0x150827b08 <line:12:12, col:41> 'int' contains-errors '=='
|   | |     |     |-CallExpr 0x150827ab8 <col:12, col:36> '<dependent type>' contains-errors
|   | |     |     | |-DeclRefExpr 0x1508279e0 <col:12> 'int (const char *, const char *)' Function 0x150827670 'strcmp' 'int (const char *, const char *)'
|   | |     |     | |-CXXDependentScopeMemberExpr 0x150827a20 <col:19, col:25> '<dependent type>' contains-errors lvalue ->mode
|   | |     |     | | `-RecoveryExpr 0x150827a00 <col:19> '<dependent type>' contains-errors lvalue
|   | |     |     | `-StringLiteral 0x150827a68 <col:31> 'char[4]' lvalue "STR"
|   | |     |     `-IntegerLiteral 0x150827ae8 <col:41> 'int' 0
|   | |     `-BinaryOperator 0x150827ce0 <line:13:11, col:34> 'int' '=='
|   | |       |-CallExpr 0x150827c48 <col:11, col:29> 'int'
|   | |       | |-ImplicitCastExpr 0x150827c30 <col:11> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |       | | `-DeclRefExpr 0x150827b68 <col:11> 'int (const char *, const char *)' Function 0x150827670 'strcmp' 'int (const char *, const char *)'
|   | |       | |-ImplicitCastExpr 0x150827c78 <col:18> 'const char *' <LValueToRValue>
|   | |       | | `-DeclRefExpr 0x150827b88 <col:18> 'const char *' lvalue ParmVar 0x15080dd70 'mode' 'const char *'
|   | |       | `-ImplicitCastExpr 0x150827ca8 <col:24> 'const char *' <NoOp>
|   | |       |   `-ImplicitCastExpr 0x150827c90 <col:24> 'char *' <ArrayToPointerDecay>
|   | |       |     `-StringLiteral 0x150827ba8 <col:24> 'char[4]' lvalue "STR"
|   | |       `-IntegerLiteral 0x150827cc0 <col:34> 'int' 0
|   | `-CompoundStmt 0x150828250 <line:19:5, line:28:5>
|   |   |-DeclStmt 0x150827e68 <line:20:9, col:29>
|   |   | `-VarDecl 0x150827e00 <col:9, col:28> col:21 used buf 'char[256]' static
|   |   `-CallExpr 0x1508281f8 <line:22:9, line:26:17> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1508280e0 <line:22:9> 'int (char *, const char *, ...)' Function 0x150827ec8 'sprintf' 'int (char *, const char *, ...)'
|   |     |-DeclRefExpr 0x150828100 <line:23:13> 'char[256]' lvalue Var 0x150827e00 'buf' 'char[256]'
|   |     |-StringLiteral 0x150828120 <line:24:13> 'char[4]' lvalue "STR"
|   |     |-CXXDependentScopeMemberExpr 0x150828160 <line:25:13, col:19> '<dependent type>' contains-errors lvalue ->mode
|   |     | `-RecoveryExpr 0x150828140 <col:13> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1508281a8 <line:26:13> 'const char *' lvalue ParmVar 0x15080dd70 'mode' 'const char *'
|   |-IfStmt 0x15801be40 <line:31:5, line:42:5> has_else
|   | |-BinaryOperator 0x1508283b8 <line:31:9, col:38> 'int' contains-errors '=='
|   | | |-CallExpr 0x150828368 <col:9, col:33> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x150828290 <col:9> 'int (const char *, const char *)' Function 0x150827670 'strcmp' 'int (const char *, const char *)'
|   | | | |-CXXDependentScopeMemberExpr 0x1508282d0 <col:16, col:22> '<dependent type>' contains-errors lvalue ->mode
|   | | | | `-RecoveryExpr 0x1508282b0 <col:16> '<dependent type>' contains-errors lvalue
|   | | | `-StringLiteral 0x150828318 <col:28> 'char[4]' lvalue "STR"
|   | | `-IntegerLiteral 0x150828398 <col:38> 'int' 0
|   | |-CompoundStmt 0x1508283f0 <col:41, line:33:5>
|   | `-CompoundStmt 0x15801be20 <col:12, line:42:5>
|   |   |-IfStmt 0x15801bd38 <line:34:9, line:40:9> has_else
|   |   | |-BinaryOperator 0x15801bb28 <line:34:13, col:42> 'int' contains-errors '=='
|   |   | | |-CallExpr 0x15801bad8 <col:13, col:37> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x15801ba00 <col:13> 'int (const char *, const char *)' Function 0x150827670 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-CXXDependentScopeMemberExpr 0x15801ba40 <col:20, col:26> '<dependent type>' contains-errors lvalue ->mode
|   |   | | | | `-RecoveryExpr 0x15801ba20 <col:20> '<dependent type>' contains-errors lvalue
|   |   | | | `-StringLiteral 0x15801ba88 <col:32> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x15801bb08 <col:42> 'int' 0
|   |   | |-CompoundStmt 0x15801bb60 <col:45, line:36:9>
|   |   | `-IfStmt 0x15801bd08 <col:16, line:40:9> has_else
|   |   |   |-BinaryOperator 0x15801bc98 <line:36:20, col:49> 'int' contains-errors '=='
|   |   |   | |-CallExpr 0x15801bc48 <col:20, col:44> '<dependent type>' contains-errors
|   |   |   | | |-DeclRefExpr 0x15801bb70 <col:20> 'int (const char *, const char *)' Function 0x150827670 'strcmp' 'int (const char *, const char *)'
|   |   |   | | |-CXXDependentScopeMemberExpr 0x15801bbb0 <col:27, col:33> '<dependent type>' contains-errors lvalue ->mode
|   |   |   | | | `-RecoveryExpr 0x15801bb90 <col:27> '<dependent type>' contains-errors lvalue
|   |   |   | | `-StringLiteral 0x15801bbf8 <col:39> 'char[4]' lvalue "STR"
|   |   |   | `-IntegerLiteral 0x15801bc78 <col:49> 'int' 0
|   |   |   |-CompoundStmt 0x15801bcd0 <col:52, line:38:9>
|   |   |   `-CompoundStmt 0x15801bcf8 <col:16, line:40:9>
|   |   `-BinaryOperator 0x15801be00 <line:41:9, col:17> 'int' '='
|   |     |-DeclRefExpr 0x15801bd68 <col:9> 'int' lvalue ParmVar 0x15080de70 'g' 'int'
|   |     `-BinaryOperator 0x15801bde0 <col:13, col:17> 'int' '='
|   |       |-DeclRefExpr 0x15801bd88 <col:13> 'int' lvalue ParmVar 0x15080def0 'b' 'int'
|   |       `-ImplicitCastExpr 0x15801bdc8 <col:17> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x15801bda8 <col:17> 'int' lvalue ParmVar 0x15080ddf0 'r' 'int'
|   |-IfStmt 0x15801c0b0 <line:45:5, line:47:5>
|   | |-RecoveryExpr 0x15801c080 <line:45:9, col:10> '_Bool' contains-errors
|   | `-CompoundStmt 0x15801c0a0 <col:17, line:47:5>
|   `-ForStmt 0x15801c550 <line:50:5, line:53:5>
|     |-BinaryOperator 0x15801c210 <line:50:10, col:14> 'int' '='
|     | |-DeclRefExpr 0x15801c1d0 <col:10> 'int' lvalue Var 0x15080e0f0 'y' 'int'
|     | `-IntegerLiteral 0x15801c1f0 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x15801c2b8 <col:17, col:27> 'int' contains-errors '<'
|     | |-DeclRefExpr 0x15801c230 <col:17> 'int' lvalue Var 0x15080e0f0 'y' 'int'
|     | `-CXXDependentScopeMemberExpr 0x15801c270 <col:21, col:27> '<dependent type>' contains-errors lvalue ->ysize
|     |   `-RecoveryExpr 0x15801c250 <col:21> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x15801c2f8 <col:34, col:35> 'int' postfix '++'
|     | `-DeclRefExpr 0x15801c2d8 <col:34> 'int' lvalue Var 0x15080e0f0 'y' 'int'
|     `-CompoundStmt 0x15801c540 <col:39, line:53:5>
|-FunctionDecl 0x150827670 <line:11:12> col:12 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x150827770 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1508277d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x150827718 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x150827ec8 <line:22:9> col:9 implicit used sprintf 'int (char *, const char *, ...)' extern
  |-ParmVarDecl 0x150827fc8 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x150828030 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x150827f70 <<invalid sloc>> Implicit 906
  `-FormatAttr 0x1508280a8 <col:9> Implicit printf 2 3
