TranslationUnitDecl 0x11c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11c855bd0 '__int128'
|-TypedefDecl 0x11c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11c855bf0 'unsigned __int128'
|-TypedefDecl 0x11d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x11c856580 '__NSConstantString_tag'
|-TypedefDecl 0x11d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11c855d90 '__SVInt8_t'
|-TypedefDecl 0x11d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11c855db0 '__SVInt16_t'
|-TypedefDecl 0x11d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11c855dd0 '__SVInt32_t'
|-TypedefDecl 0x11d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11c855df0 '__SVInt64_t'
|-TypedefDecl 0x11d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11c855e10 '__SVUint8_t'
|-TypedefDecl 0x11d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11c855e30 '__SVUint16_t'
|-TypedefDecl 0x11d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11c855e50 '__SVUint32_t'
|-TypedefDecl 0x11d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11c855e70 '__SVUint64_t'
|-TypedefDecl 0x11d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11c855e90 '__SVFloat16_t'
|-TypedefDecl 0x11d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11c856390 '__SVBool_t'
|-TypedefDecl 0x11d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11c8563f0 '__SVCount_t'
|-TypedefDecl 0x11d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11d00dbb0 'char *'
|   `-BuiltinType 0x11c8556b0 'char'
|-TypedefDecl 0x11d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11d00dbb0 'char *'
|   `-BuiltinType 0x11c8556b0 'char'
`-FunctionDecl 0x11d00dee8 <dataset_diviso_filec/func16061_vuln.c:1:1, line:34:1> line:1:1 invalid xmlZMemBuffAppend 'int (int, const char *, int)'
  |-ParmVarDecl 0x11d00dcf0 <col:20, col:35> col:35 referenced invalid buff 'int'
  |-ParmVarDecl 0x11d00dd70 <col:41, col:54> col:54 used src 'const char *'
  |-ParmVarDecl 0x11d00ddf0 <col:59, col:63> col:63 used len 'int'
  `-CompoundStmt 0x11d029da0 <col:69, line:34:1>
    |-DeclStmt 0x11d00e028 <line:3:5, col:15>
    | `-VarDecl 0x11d00dfc0 <col:5, col:10> col:10 used z_err 'int'
    |-UnaryExprOrTypeTraitExpr 0x11d00e098 <line:4:5, col:12> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x11d00e078 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11d00e1f0 <line:6:5, line:7:14>
    | |-RecoveryExpr 0x11d00e168 <line:6:10, col:44> '_Bool' contains-errors
    | `-ReturnStmt 0x11d00e1e0 <line:7:2, col:14>
    |   `-ParenExpr 0x11d00e1c0 <col:9, col:14> 'int'
    |     `-UnaryOperator 0x11d00e1a8 <col:11, col:12> 'int' prefix '-'
    |       `-IntegerLiteral 0x11d00e188 <col:12> 'int' 1
    |-BinaryOperator 0x11d00e308 <line:9:5, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11d00e2a0 <col:5, col:17> '<dependent type>' contains-errors lvalue .avail_in
    | | `-CXXDependentScopeMemberExpr 0x11d00e258 <col:5, col:11> '<dependent type>' contains-errors lvalue ->zctrl
    | |   `-RecoveryExpr 0x11d00e230 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x11d00e210 <col:5> 'int' lvalue ParmVar 0x11d00dcf0 'buff' 'int'
    | `-DeclRefExpr 0x11d00e2e8 <col:28> 'int' lvalue ParmVar 0x11d00ddf0 'len' 'int'
    |-BinaryOperator 0x11d0278a8 <line:10:5, col:45> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11d00e3b8 <col:5, col:17> '<dependent type>' contains-errors lvalue .next_in
    | | `-CXXDependentScopeMemberExpr 0x11d00e370 <col:5, col:11> '<dependent type>' contains-errors lvalue ->zctrl
    | |   `-RecoveryExpr 0x11d00e348 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x11d00e328 <col:5> 'int' lvalue ParmVar 0x11d00dcf0 'buff' 'int'
    | `-CStyleCastExpr 0x11d027880 <col:28, col:45> 'unsigned char *' <BitCast>
    |   `-ImplicitCastExpr 0x11d027868 <col:45> 'const char *' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x11d027800 <col:45> 'const char *' lvalue ParmVar 0x11d00dd70 'src' 'const char *'
    |-WhileStmt 0x11d028630 <line:11:5, line:29:5>
    | |-BinaryOperator 0x11d027998 <line:11:13, col:36> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x11d027930 <col:13, col:25> '<dependent type>' contains-errors lvalue .avail_in
    | | | `-CXXDependentScopeMemberExpr 0x11d0278e8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->zctrl
    | | |   `-RecoveryExpr 0x11d0278c8 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11d027978 <col:36> 'int' 0
    | `-CompoundStmt 0x11d028608 <col:40, line:29:5>
    |   |-IfStmt 0x11d027ef0 <line:14:2, line:17:2>
    |   | |-BinaryOperator 0x11d027ba8 <line:14:7, col:32> 'int' contains-errors '<='
    |   | | |-CXXDependentScopeMemberExpr 0x11d027b08 <col:7, col:19> '<dependent type>' contains-errors lvalue .avail_out
    |   | | | `-CXXDependentScopeMemberExpr 0x11d027ac0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->zctrl
    |   | | |   `-RecoveryExpr 0x11d027aa0 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x11d027b88 <col:32> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x11d027ed8 <col:45, line:17:2>
    |   |   `-IfStmt 0x11d027eb8 <line:15:6, line:16:15>
    |   |     |-BinaryOperator 0x11d027e30 <line:15:11, col:53> 'int' contains-errors '=='
    |   |     | |-CallExpr 0x11d027dc8 <col:11, col:47> '<dependent type>' contains-errors
    |   |     | | |-DeclRefExpr 0x11d027d20 <col:11> 'int ()' Function 0x11d027c68 'xmlZMemBuffExtend' 'int ()'
    |   |     | | |-RecoveryExpr 0x11d027d40 <col:30> '<dependent type>' contains-errors lvalue
    |   |     | | `-CXXDependentScopeMemberExpr 0x11d027d80 <col:36, col:42> '<dependent type>' contains-errors lvalue ->size
    |   |     | |   `-RecoveryExpr 0x11d027d60 <col:36> '<dependent type>' contains-errors lvalue
    |   |     | `-UnaryOperator 0x11d027e18 <col:52, col:53> 'int' prefix '-'
    |   |     |   `-IntegerLiteral 0x11d027df8 <col:53> 'int' 1
    |   |     `-ReturnStmt 0x11d027ea8 <line:16:3, col:15>
    |   |       `-ParenExpr 0x11d027e88 <col:10, col:15> 'int'
    |   |         `-UnaryOperator 0x11d027e70 <col:12, col:13> 'int' prefix '-'
    |   |           `-IntegerLiteral 0x11d027e50 <col:13> 'int' 1
    |   |-BinaryOperator 0x11d028168 <line:19:2, col:44> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11d027f10 <col:2> 'int' lvalue Var 0x11d00dfc0 'z_err' 'int'
    |   | `-CallExpr 0x11d028138 <col:10, col:44> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11d028010 <col:10> 'int ()' Function 0x11d027f58 'deflate' 'int ()'
    |   |   |-UnaryOperator 0x11d028098 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-CXXDependentScopeMemberExpr 0x11d028050 <col:20, col:26> '<dependent type>' contains-errors lvalue ->zctrl
    |   |   |   `-RecoveryExpr 0x11d028030 <col:20> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x11d028118 <col:33> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x11d0285e8 <line:20:2, line:28:2>
    |     |-BinaryOperator 0x11d028200 <line:20:7, col:16> 'int' contains-errors '!='
    |     | |-DeclRefExpr 0x11d028188 <col:7> 'int' lvalue Var 0x11d00dfc0 'z_err' 'int'
    |     | `-RecoveryExpr 0x11d0281e0 <col:16> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x11d0285d0 <col:23, line:28:2>
    |       `-ReturnStmt 0x11d0285c0 <line:27:6, col:18>
    |         `-ParenExpr 0x11d0285a0 <col:13, col:18> 'int'
    |           `-UnaryOperator 0x11d028588 <col:15, col:16> 'int' prefix '-'
    |             `-IntegerLiteral 0x11d028568 <col:16> 'int' 1
    |-BinaryOperator 0x11d029d18 <line:31:5, col:61> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11d028698 <col:5, col:11> '<dependent type>' contains-errors lvalue ->crc
    | | `-RecoveryExpr 0x11d028670 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11d028650 <col:5> 'int' lvalue ParmVar 0x11d00dcf0 'buff' 'int'
    | `-CallExpr 0x11d029ce0 <col:17, col:61> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11d0287c0 <col:17> 'int ()' Function 0x11d028708 'crc32' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x11d029c00 <col:24, col:30> '<dependent type>' contains-errors lvalue ->crc
    |   | `-RecoveryExpr 0x11d0287e0 <col:24> '<dependent type>' contains-errors lvalue
    |   |-CStyleCastExpr 0x11d029c98 <col:35, col:52> 'unsigned char *' <BitCast>
    |   | `-ImplicitCastExpr 0x11d029c80 <col:52> 'const char *' <LValueToRValue> part_of_explicit_cast
    |   |   `-DeclRefExpr 0x11d029c48 <col:52> 'const char *' lvalue ParmVar 0x11d00dd70 'src' 'const char *'
    |   `-DeclRefExpr 0x11d029cc0 <col:57> 'int' lvalue ParmVar 0x11d00ddf0 'len' 'int'
    `-ReturnStmt 0x11d029d90 <line:33:5, col:18>
      `-ImplicitCastExpr 0x11d029d78 <col:12, col:18> 'int' <LValueToRValue>
        `-ParenExpr 0x11d029d58 <col:12, col:18> 'int' lvalue
          `-DeclRefExpr 0x11d029d38 <col:14> 'int' lvalue ParmVar 0x11d00ddf0 'len' 'int'
