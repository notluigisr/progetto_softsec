TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x13280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13280bc00 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x13280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x13280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x13280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x13280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x13280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x13280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x13280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x13280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x13280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x13280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x13280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x13280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13280dbb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x13280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13280dbb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
`-FunctionDecl 0x13280e030 <dataset_diviso_filec/func10675_vuln.c:1:1, line:44:1> line:1:6 invalid lcdSetPixels_ArrayBuffer_flat 'void (int *, short, short, short, unsigned int)'
  |-ParmVarDecl 0x13280dd28 <col:36, col:48> col:48 invalid gfx 'int *'
  |-ParmVarDecl 0x13280dda8 <col:53, col:59> col:59 used x 'short'
  |-ParmVarDecl 0x13280de28 <col:62, col:68> col:68 used y 'short'
  |-ParmVarDecl 0x13280dea8 <col:71, col:77> col:77 used pixelCount 'short'
  |-ParmVarDecl 0x13280df28 <col:89, col:102> col:102 used col 'unsigned int'
  `-CompoundStmt 0x13282b208 <col:107, line:44:1>
    |-DeclStmt 0x13280e258 <line:2:3, col:56>
    | `-VarDecl 0x13280e148 <col:3, col:45> col:18 used ptr 'unsigned char *' cinit
    |   `-CStyleCastExpr 0x13280e230 <col:24, col:45> 'unsigned char *' contains-errors <Dependent>
    |     `-CXXDependentScopeMemberExpr 0x13280e1d0 <col:40, col:45> '<dependent type>' contains-errors lvalue ->backendData
    |       `-RecoveryExpr 0x13280e1b0 <col:40> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x132828598 <line:3:3, col:70>
    | `-VarDecl 0x13280e288 <col:3, col:69> col:16 used idx 'unsigned int' cinit
    |   `-CallExpr 0x132828558 <col:22, col:69> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1328284b8 <col:22> 'int ()' Function 0x132828400 'lcdGetPixelIndex_ArrayBuffer' 'int ()'
    |     |-RecoveryExpr 0x1328284d8 <col:51> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x1328284f8 <col:55> 'short' lvalue ParmVar 0x13280dda8 'x' 'short'
    |     |-DeclRefExpr 0x132828518 <col:57> 'short' lvalue ParmVar 0x13280de28 'y' 'short'
    |     `-DeclRefExpr 0x132828538 <col:59> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'
    |-CompoundAssignOperator 0x132828648 <line:4:3, col:15> 'unsigned char *' contains-errors '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    | |-DeclRefExpr 0x1328285b0 <col:3> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'
    | `-BinaryOperator 0x132828628 <col:10, col:15> 'unsigned int' contains-errors '>>'
    |   |-ImplicitCastExpr 0x132828610 <col:10> 'unsigned int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x1328285d0 <col:10> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'
    |   `-IntegerLiteral 0x1328285f0 <col:15> 'int' 3
    |-DeclStmt 0x132828848 <line:6:3, col:49>
    | `-VarDecl 0x132828690 <col:3, col:48> col:16 whiteMask 'unsigned int' cinit
    |   `-BinaryOperator 0x132828828 <col:28, col:48> '<dependent type>' contains-errors '-'
    |     |-ParenExpr 0x1328287e8 <col:28, col:46> '<dependent type>' contains-errors
    |     | `-BinaryOperator 0x1328287c8 <col:29, col:43> '<dependent type>' contains-errors '<<'
    |     |   |-IntegerLiteral 0x1328286f8 <col:29> 'unsigned int' 1
    |     |   `-CXXDependentScopeMemberExpr 0x132828780 <col:33, col:43> '<dependent type>' contains-errors lvalue .bpp
    |     |     `-CXXDependentScopeMemberExpr 0x132828738 <col:33, col:38> '<dependent type>' contains-errors lvalue ->data
    |     |       `-RecoveryExpr 0x132828718 <col:33> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x132828808 <col:48> 'int' 1
    `-WhileStmt 0x13282b1e8 <line:9:3, line:43:3>
      |-UnaryOperator 0x132828880 <line:9:10, col:20> 'short' postfix '--' cannot overflow
      | `-DeclRefExpr 0x132828860 <col:10> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'
      `-CompoundStmt 0x13282b1d0 <col:24, line:43:3>
        `-IfStmt 0x13282b1a0 <line:10:5, line:42:5> has_else
          |-BinaryOperator 0x132828968 <line:10:9, col:23> '<dependent type>' contains-errors '&'
          | |-CXXDependentScopeMemberExpr 0x132828900 <col:9, col:19> '<dependent type>' contains-errors lvalue .bpp
          | | `-CXXDependentScopeMemberExpr 0x1328288b8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->data
          | |   `-RecoveryExpr 0x132828898 <col:9> '<dependent type>' contains-errors lvalue
          | `-IntegerLiteral 0x132828948 <col:23> 'int' 7
          |-CompoundStmt 0x13282acb8 <col:26, line:36:5>
          | |-BinaryOperator 0x132828a38 <line:11:7, col:19> 'unsigned int' contains-errors '='
          | | |-DeclRefExpr 0x132828988 <col:7> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'
          | | `-BinaryOperator 0x132828a18 <col:13, col:19> 'unsigned int' contains-errors '&'
          | |   |-ImplicitCastExpr 0x1328289e8 <col:13> 'unsigned int' contains-errors <LValueToRValue>
          | |   | `-DeclRefExpr 0x1328289a8 <col:13> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'
          | |   `-ImplicitCastExpr 0x132828a00 <col:19> 'unsigned int' <IntegralCast>
          | |     `-IntegerLiteral 0x1328289c8 <col:19> 'int' 7
          | |-IfStmt 0x132829ed0 <line:12:7, line:25:7>
          | | |-BinaryOperator 0x132828b90 <line:12:11, col:28> 'int' contains-errors '&&'
          | | | |-RecoveryExpr 0x132828b20 <col:11> '<dependent type>' contains-errors lvalue
          | | | `-BinaryOperator 0x132828b70 <col:23, col:28> 'int' contains-errors '=='
          | | |   |-ImplicitCastExpr 0x132828b40 <col:23> 'unsigned int' contains-errors <LValueToRValue>
          | | |   | `-DeclRefExpr 0x132828a70 <col:23> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'
          | | |   `-ImplicitCastExpr 0x132828b58 <col:28> 'unsigned int' <IntegralCast>
          | | |     `-IntegerLiteral 0x132828a90 <col:28> 'int' 0
          | | `-CompoundStmt 0x132829eb0 <col:31, line:25:7>
          | |   |-DeclStmt 0x132828e10 <line:15:9, col:61>
          | |   | `-VarDecl 0x132828bc8 <col:9, col:60> col:13 used wholeBytes 'int' cinit
          | |   |   `-BinaryOperator 0x132828df0 <col:26, col:60> '<dependent type>' contains-errors '>>'
          | |   |     |-ParenExpr 0x132828db0 <col:26, col:55> '<dependent type>' contains-errors
          | |   |     | `-BinaryOperator 0x132828d90 <col:27, col:54> '<dependent type>' contains-errors '*'
          | |   |     |   |-CXXDependentScopeMemberExpr 0x132828c98 <col:27, col:37> '<dependent type>' contains-errors lvalue .bpp
          | |   |     |   | `-CXXDependentScopeMemberExpr 0x132828c50 <col:27, col:32> '<dependent type>' contains-errors lvalue ->data
          | |   |     |   |   `-RecoveryExpr 0x132828c30 <col:27> '<dependent type>' contains-errors lvalue
          | |   |     |   `-ParenExpr 0x132828d70 <col:41, col:54> 'int'
          | |   |     |     `-BinaryOperator 0x132828d50 <col:42, col:53> 'int' '+'
          | |   |     |       |-ImplicitCastExpr 0x132828d38 <col:42> 'int' <IntegralCast>
          | |   |     |       | `-ImplicitCastExpr 0x132828d20 <col:42> 'short' <LValueToRValue>
          | |   |     |       |   `-DeclRefExpr 0x132828ce0 <col:42> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'
          | |   |     |       `-IntegerLiteral 0x132828d00 <col:53> 'int' 1
          | |   |     `-IntegerLiteral 0x132828dd0 <col:60> 'int' 3
          | |   `-IfStmt 0x132829e90 <line:16:9, line:24:9>
          | |     |-ImplicitCastExpr 0x132828e48 <line:16:13> 'int' contains-errors <LValueToRValue>
          | |     | `-DeclRefExpr 0x132828e28 <col:13> 'int' contains-errors lvalue Var 0x132828bc8 'wholeBytes' 'int'
          | |     `-CompoundStmt 0x132829e60 <col:25, line:24:9>
          | |       |-DeclStmt 0x132828ff8 <line:17:11, col:38>
          | |       | `-VarDecl 0x132828e70 <col:11, col:37> col:16 used c 'char' cinit
          | |       |   `-CStyleCastExpr 0x132828fd0 <col:20, col:37> 'char' <IntegralCast>
          | |       |     `-ParenExpr 0x132828fb0 <col:26, col:37> 'int'
          | |       |       `-ConditionalOperator 0x132828f50 <col:27, col:36> 'int'
          | |       |         |-ImplicitCastExpr 0x132828f38 <col:27> 'unsigned int' <LValueToRValue>
          | |       |         | `-DeclRefExpr 0x132828ed8 <col:27> 'unsigned int' lvalue ParmVar 0x13280df28 'col' 'unsigned int'
          | |       |         |-IntegerLiteral 0x132828ef8 <col:31> 'int' 255
          | |       |         `-IntegerLiteral 0x132828f18 <col:36> 'int' 0
          | |       |-BinaryOperator 0x1328292c8 <line:18:11, col:75> 'short' contains-errors '='
          | |       | |-DeclRefExpr 0x132829010 <col:11> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'
          | |       | `-CStyleCastExpr 0x1328292a0 <col:24, col:75> 'short' contains-errors <Dependent>
          | |       |   `-ParenExpr 0x132829280 <col:31, col:75> '<dependent type>' contains-errors
          | |       |     `-BinaryOperator 0x132829228 <col:32, col:74> '<dependent type>' contains-errors '-'
          | |       |       |-BinaryOperator 0x1328290a0 <col:32, col:43> 'int' '+'
          | |       |       | |-ImplicitCastExpr 0x132829088 <col:32> 'int' <IntegralCast>
          | |       |       | | `-ImplicitCastExpr 0x132829070 <col:32> 'short' <LValueToRValue>
          | |       |       | |   `-DeclRefExpr 0x132829030 <col:32> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'
          | |       |       | `-IntegerLiteral 0x132829050 <col:43> 'int' 1
          | |       |       `-ParenExpr 0x132829208 <col:47, col:74> '<dependent type>' contains-errors
          | |       |         `-BinaryOperator 0x1328291e8 <col:48, col:71> '<dependent type>' contains-errors '/'
          | |       |           |-BinaryOperator 0x132829118 <col:48, col:59> 'int' contains-errors '*'
          | |       |           | |-ImplicitCastExpr 0x132829100 <col:48> 'int' contains-errors <LValueToRValue>
          | |       |           | | `-DeclRefExpr 0x1328290c0 <col:48> 'int' contains-errors lvalue Var 0x132828bc8 'wholeBytes' 'int'
          | |       |           | `-IntegerLiteral 0x1328290e0 <col:59> 'int' 8
          | |       |           `-CXXDependentScopeMemberExpr 0x1328291a0 <col:61, col:71> '<dependent type>' contains-errors lvalue .bpp
          | |       |             `-CXXDependentScopeMemberExpr 0x132829158 <col:61, col:66> '<dependent type>' contains-errors lvalue ->data
          | |       |               `-RecoveryExpr 0x132829138 <col:61> '<dependent type>' contains-errors lvalue
          | |       |-WhileStmt 0x132829e38 <line:19:11, line:22:11>
          | |       | |-UnaryOperator 0x132829308 <line:19:18, col:28> 'int' contains-errors postfix '--'
          | |       | | `-DeclRefExpr 0x1328292e8 <col:18> 'int' contains-errors lvalue Var 0x132828bc8 'wholeBytes' 'int'
          | |       | `-CompoundStmt 0x132829e18 <col:32, line:22:11>
          | |       |   |-BinaryOperator 0x1328293c0 <line:20:13, col:20> 'unsigned char' contains-errors '='
          | |       |   | |-UnaryOperator 0x132829358 <col:13, col:14> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow
          | |       |   | | `-ImplicitCastExpr 0x132829340 <col:14> 'unsigned char *' contains-errors <LValueToRValue>
          | |       |   | |   `-DeclRefExpr 0x132829320 <col:14> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'
          | |       |   | `-ImplicitCastExpr 0x1328293a8 <col:20> 'unsigned char' <IntegralCast>
          | |       |   |   `-ImplicitCastExpr 0x132829390 <col:20> 'char' <LValueToRValue>
          | |       |   |     `-DeclRefExpr 0x132829370 <col:20> 'char' lvalue Var 0x132828e70 'c' 'char'
          | |       |   `-UnaryOperator 0x132829e00 <line:21:13, col:16> 'unsigned char *' contains-errors postfix '++'
          | |       |     `-DeclRefExpr 0x1328293e0 <col:13> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'
          | |       `-ContinueStmt 0x132829e58 <line:23:11>
          | |-DeclStmt 0x13282a138 <line:26:7, col:61>
          | | `-VarDecl 0x132829f08 <col:7, col:60> col:20 used mask 'unsigned int' cinit
          | |   `-BinaryOperator 0x13282a118 <col:27, col:60> 'unsigned int' contains-errors '-'
          | |     |-CStyleCastExpr 0x13282a0b8 <col:27, col:58> 'unsigned int' contains-errors <Dependent>
          | |     | `-ParenExpr 0x13282a098 <col:41, col:58> '<dependent type>' contains-errors
          | |     |   `-BinaryOperator 0x13282a040 <col:42, col:55> '<dependent type>' contains-errors '<<'
          | |     |     |-IntegerLiteral 0x132829f70 <col:42> 'int' 1
          | |     |     `-CXXDependentScopeMemberExpr 0x132829ff8 <col:45, col:55> '<dependent type>' contains-errors lvalue .bpp
          | |     |       `-CXXDependentScopeMemberExpr 0x132829fb0 <col:45, col:50> '<dependent type>' contains-errors lvalue ->data
          | |     |         `-RecoveryExpr 0x132829f90 <col:45> '<dependent type>' contains-errors lvalue
          | |     `-ImplicitCastExpr 0x13282a100 <col:60> 'unsigned int' <IntegralCast>
          | |       `-IntegerLiteral 0x13282a0e0 <col:60> 'int' 1
          | |-DeclStmt 0x13282a278 <line:27:7, col:49>
          | | `-VarDecl 0x13282a168 <col:7, col:46> col:20 used existing 'unsigned int' cinit
          | |   `-CStyleCastExpr 0x13282a250 <col:31, col:46> 'unsigned int' contains-errors <IntegralCast>
          | |     `-ImplicitCastExpr 0x13282a238 <col:45, col:46> 'unsigned char' contains-errors <LValueToRValue> part_of_explicit_cast
          | |       `-UnaryOperator 0x13282a208 <col:45, col:46> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow
          | |         `-ImplicitCastExpr 0x13282a1f0 <col:46> 'unsigned char *' contains-errors <LValueToRValue>
          | |           `-DeclRefExpr 0x13282a1d0 <col:46> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'
          | |-DeclStmt 0x13282a568 <line:28:7, col:110>
          | | `-VarDecl 0x13282a2a8 <col:7, col:20> col:20 used bitIdx 'unsigned int'
          | |-BinaryOperator 0x13282a8e8 <line:29:7, col:70> 'unsigned char' contains-errors '='
          | | |-UnaryOperator 0x13282a5b8 <col:7, col:8> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow
          | | | `-ImplicitCastExpr 0x13282a5a0 <col:8> 'unsigned char *' contains-errors <LValueToRValue>
          | | |   `-DeclRefExpr 0x13282a580 <col:8> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'
          | | `-ImplicitCastExpr 0x13282a8d0 <col:14, col:70> 'unsigned char' contains-errors <IntegralCast>
          | |   `-CStyleCastExpr 0x13282a8a8 <col:14, col:70> 'char' contains-errors <IntegralCast>
          | |     `-ParenExpr 0x13282a888 <col:20, col:70> 'unsigned int' contains-errors
          | |       `-BinaryOperator 0x13282a838 <col:21, col:69> 'unsigned int' contains-errors '|'
          | |         |-ParenExpr 0x13282a6f0 <col:21, col:46> 'unsigned int' contains-errors
          | |         | `-BinaryOperator 0x13282a6d0 <col:22, col:45> 'unsigned int' contains-errors '&'
          | |         |   |-ImplicitCastExpr 0x13282a6b8 <col:22> 'unsigned int' contains-errors <LValueToRValue>
          | |         |   | `-DeclRefExpr 0x13282a5d0 <col:22> 'unsigned int' contains-errors lvalue Var 0x13282a168 'existing' 'unsigned int'
          | |         |   `-UnaryOperator 0x13282a6a0 <col:31, col:45> 'unsigned int' contains-errors prefix '~' cannot overflow
          | |         |     `-ParenExpr 0x13282a680 <col:32, col:45> 'unsigned int' contains-errors
          | |         |       `-BinaryOperator 0x13282a660 <col:33, col:39> 'unsigned int' contains-errors '<<'
          | |         |         |-ImplicitCastExpr 0x13282a630 <col:33> 'unsigned int' contains-errors <LValueToRValue>
          | |         |         | `-DeclRefExpr 0x13282a5f0 <col:33> 'unsigned int' contains-errors lvalue Var 0x132829f08 'mask' 'unsigned int'
          | |         |         `-ImplicitCastExpr 0x13282a648 <col:39> 'unsigned int' <LValueToRValue>
          | |         |           `-DeclRefExpr 0x13282a610 <col:39> 'unsigned int' lvalue Var 0x13282a2a8 'bitIdx' 'unsigned int'
          | |         `-ParenExpr 0x13282a818 <col:50, col:69> 'unsigned int' contains-errors
          | |           `-BinaryOperator 0x13282a7f8 <col:51, col:63> 'unsigned int' contains-errors '<<'
          | |             |-ParenExpr 0x13282a7a0 <col:51, col:60> 'unsigned int' contains-errors
          | |             | `-BinaryOperator 0x13282a780 <col:52, col:56> 'unsigned int' contains-errors '&'
          | |             |   |-ImplicitCastExpr 0x13282a750 <col:52> 'unsigned int' <LValueToRValue>
          | |             |   | `-DeclRefExpr 0x13282a710 <col:52> 'unsigned int' lvalue ParmVar 0x13280df28 'col' 'unsigned int'
          | |             |   `-ImplicitCastExpr 0x13282a768 <col:56> 'unsigned int' contains-errors <LValueToRValue>
          | |             |     `-DeclRefExpr 0x13282a730 <col:56> 'unsigned int' contains-errors lvalue Var 0x132829f08 'mask' 'unsigned int'
          | |             `-ImplicitCastExpr 0x13282a7e0 <col:63> 'unsigned int' <LValueToRValue>
          | |               `-DeclRefExpr 0x13282a7c0 <col:63> 'unsigned int' lvalue Var 0x13282a2a8 'bitIdx' 'unsigned int'
          | `-IfStmt 0x13282ac88 <line:30:7, line:35:7> has_else
          |   |-BinaryOperator 0x13282aa10 <line:30:11, col:29> '<dependent type>' contains-errors '&'
          |   | |-CXXDependentScopeMemberExpr 0x13282a970 <col:11, col:21> '<dependent type>' contains-errors lvalue .flags
          |   | | `-CXXDependentScopeMemberExpr 0x13282a928 <col:11, col:16> '<dependent type>' contains-errors lvalue ->data
          |   | |   `-RecoveryExpr 0x13282a908 <col:11> '<dependent type>' contains-errors lvalue
          |   | `-RecoveryExpr 0x13282a9f0 <col:29> '<dependent type>' contains-errors lvalue
          |   |-CompoundStmt 0x13282aa68 <col:72, line:32:7>
          |   | `-UnaryOperator 0x13282aa50 <line:31:9, col:12> 'unsigned char *' contains-errors postfix '++'
          |   |   `-DeclRefExpr 0x13282aa30 <col:9> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'
          |   `-CompoundStmt 0x13282ac68 <line:32:14, line:35:7>
          |     |-CompoundAssignOperator 0x13282ab50 <line:33:9, col:26> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
          |     | |-DeclRefExpr 0x13282aa80 <col:9> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'
          |     | `-CXXDependentScopeMemberExpr 0x13282ab08 <col:16, col:26> '<dependent type>' contains-errors lvalue .bpp
          |     |   `-CXXDependentScopeMemberExpr 0x13282aac0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->data
          |     |     `-RecoveryExpr 0x13282aaa0 <col:16> '<dependent type>' contains-errors lvalue
          |     `-IfStmt 0x13282ac48 <line:34:9, col:24>
          |       |-BinaryOperator 0x13282abf0 <col:13, col:18> 'int' contains-errors '>='
          |       | |-ImplicitCastExpr 0x13282abc0 <col:13> 'unsigned int' contains-errors <LValueToRValue>
          |       | | `-DeclRefExpr 0x13282ab80 <col:13> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'
          |       | `-ImplicitCastExpr 0x13282abd8 <col:18> 'unsigned int' <IntegralCast>
          |       |   `-IntegerLiteral 0x13282aba0 <col:18> 'int' 8
          |       `-UnaryOperator 0x13282ac30 <col:21, col:24> 'unsigned char *' contains-errors postfix '++'
          |         `-DeclRefExpr 0x13282ac10 <col:21> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'
          `-CompoundStmt 0x13282b180 <line:36:12, line:42:5>
            |-DeclStmt 0x13282ad80 <line:37:7, col:12>
            | `-VarDecl 0x13282ad18 <col:7, col:11> col:11 used i 'int'
            `-ForStmt 0x13282b148 <line:38:7, line:41:7>
              |-BinaryOperator 0x13282add8 <line:38:12, col:14> 'int' '='
              | |-DeclRefExpr 0x13282ad98 <col:12> 'int' lvalue Var 0x13282ad18 'i' 'int'
              | `-IntegerLiteral 0x13282adb8 <col:14> 'int' 0
              |-<<<NULL>>>
              |-BinaryOperator 0x13282aed0 <col:16, col:28> 'int' contains-errors '<'
              | |-DeclRefExpr 0x13282ae00 <col:16> 'int' lvalue Var 0x13282ad18 'i' 'int'
              | `-CXXDependentScopeMemberExpr 0x13282ae88 <col:18, col:28> '<dependent type>' contains-errors lvalue .bpp
              |   `-CXXDependentScopeMemberExpr 0x13282ae40 <col:18, col:23> '<dependent type>' contains-errors lvalue ->data
              |     `-RecoveryExpr 0x13282ae20 <col:18> '<dependent type>' contains-errors lvalue
              |-CompoundAssignOperator 0x13282af30 <col:32, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
              | |-DeclRefExpr 0x13282aef0 <col:32> 'int' lvalue Var 0x13282ad18 'i' 'int'
              | `-IntegerLiteral 0x13282af10 <col:35> 'int' 8
              `-CompoundStmt 0x13282b128 <col:38, line:41:7>
                |-BinaryOperator 0x13282b0d0 <line:39:9, col:31> 'unsigned char' contains-errors '='
                | |-UnaryOperator 0x13282af98 <col:9, col:10> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow
                | | `-ImplicitCastExpr 0x13282af80 <col:10> 'unsigned char *' contains-errors <LValueToRValue>
                | |   `-DeclRefExpr 0x13282af60 <col:10> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'
                | `-ImplicitCastExpr 0x13282b0b8 <col:16, col:31> 'unsigned char' <IntegralCast>
                |   `-CStyleCastExpr 0x13282b090 <col:16, col:31> 'char' <IntegralCast>
                |     `-ParenExpr 0x13282b070 <col:22, col:31> 'unsigned int'
                |       `-BinaryOperator 0x13282b020 <col:23, col:30> 'unsigned int' '>>'
                |         |-ImplicitCastExpr 0x13282aff0 <col:23> 'unsigned int' <LValueToRValue>
                |         | `-DeclRefExpr 0x13282afb0 <col:23> 'unsigned int' lvalue ParmVar 0x13280df28 'col' 'unsigned int'
                |         `-ImplicitCastExpr 0x13282b008 <col:30> 'int' <LValueToRValue>
                |           `-DeclRefExpr 0x13282afd0 <col:30> 'int' lvalue Var 0x13282ad18 'i' 'int'
                `-UnaryOperator 0x13282b110 <line:40:9, col:12> 'unsigned char *' contains-errors postfix '++'
                  `-DeclRefExpr 0x13282b0f0 <col:9> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'
