TranslationUnitDecl 0x132855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1328564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132855bd0 '__int128'
|-TypedefDecl 0x132856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132855bf0 'unsigned __int128'
|-TypedefDecl 0x132926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132926000 'struct __NSConstantString_tag'
|   `-Record 0x132856580 '__NSConstantString_tag'
|-TypedefDecl 0x132926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132855d90 '__SVInt8_t'
|-TypedefDecl 0x132926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132855db0 '__SVInt16_t'
|-TypedefDecl 0x132926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132855dd0 '__SVInt32_t'
|-TypedefDecl 0x1329263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132855df0 '__SVInt64_t'
|-TypedefDecl 0x132926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132855e10 '__SVUint8_t'
|-TypedefDecl 0x1329264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132855e30 '__SVUint16_t'
|-TypedefDecl 0x132926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132855e50 '__SVUint32_t'
|-TypedefDecl 0x132926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132855e70 '__SVUint64_t'
|-TypedefDecl 0x1329265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132855e90 '__SVFloat16_t'
|-TypedefDecl 0x132926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1329266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132855ed0 '__SVFloat64_t'
|-TypedefDecl 0x132926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1329267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1329268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1329269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132856090 '__clang_svint8x3_t'
|-TypedefDecl 0x132926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1328560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1328560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1328560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x132926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x132926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1328561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1328561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1329278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1328561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1329279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132856230 '__clang_svint16x4_t'
|-TypedefDecl 0x132927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132856250 '__clang_svint32x4_t'
|-TypedefDecl 0x132927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132856270 '__clang_svint64x4_t'
|-TypedefDecl 0x132927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1328562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x132927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1328562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1328562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x132927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x132927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132856390 '__SVBool_t'
|-TypedefDecl 0x132927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1328563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x132927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1328563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1328563f0 '__SVCount_t'
|-TypedefDecl 0x132927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-TypedefDecl 0x132928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
`-FunctionDecl 0x132928430 <dataset_diviso_filec/func4743_nonvuln.c:1:1, line:51:1> line:1:13 invalid get_strings_range 'void (int *, int *, int, int, int)' static
  |-ParmVarDecl 0x132928128 <col:31, col:41> col:41 invalid arch 'int *'
  |-ParmVarDecl 0x1329281a8 <col:47, col:54> col:54 invalid list 'int *'
  |-ParmVarDecl 0x132928228 <col:60, col:64> col:64 used min 'int'
  |-ParmVarDecl 0x1329282a8 <col:69, col:74> col:74 invalid from 'int'
  |-ParmVarDecl 0x132928328 <col:80, col:85> col:85 referenced invalid to 'int'
  `-CompoundStmt 0x132943db0 <col:89, line:51:1>
    |-IfStmt 0x132941948 <line:6:2, line:8:2>
    | |-BinaryOperator 0x132941900 <line:6:6, col:41> 'int' contains-errors '||'
    | | |-BinaryOperator 0x132941800 <col:6, col:22> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x132928740 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x132928728 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x132928708 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x1329287d8 <col:15, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x1329287c0 <col:16, col:22> '<dependent type>' contains-errors <LValueToRValue>
    | | |     `-CXXDependentScopeMemberExpr 0x132928778 <col:16, col:22> '<dependent type>' contains-errors lvalue ->buf
    | | |       `-RecoveryExpr 0x132928758 <col:16> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x1329418e8 <col:29, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x1329418d0 <col:30, col:41> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-CXXDependentScopeMemberExpr 0x132941888 <col:30, col:41> '<dependent type>' contains-errors lvalue ->buf
    | |       `-CXXDependentScopeMemberExpr 0x132941840 <col:30, col:36> '<dependent type>' contains-errors lvalue ->buf
    | |         `-RecoveryExpr 0x132941820 <col:30> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x132941930 <col:46, line:8:2>
    |   `-ReturnStmt 0x132941920 <line:7:3>
    |-IfStmt 0x132941c60 <line:9:2, line:13:2>
    | |-UnaryOperator 0x1329419e8 <line:9:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1329419d0 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x132941988 <col:7, col:13> '<dependent type>' contains-errors lvalue ->rawstr
    | |     `-RecoveryExpr 0x132941968 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x132941c48 <col:21, line:13:2>
    |   `-IfStmt 0x132941c28 <line:10:3, line:12:3>
    |     |-BinaryOperator 0x132941be0 <line:10:7, col:27> 'int' contains-errors '||'
    |     | |-UnaryOperator 0x132941b30 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | | `-ImplicitCastExpr 0x132941b18 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   `-RecoveryExpr 0x132941af8 <col:8> '<dependent type>' contains-errors lvalue
    |     | `-UnaryOperator 0x132941bc8 <col:18, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     |   `-ImplicitCastExpr 0x132941bb0 <col:19, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |     |     `-CXXDependentScopeMemberExpr 0x132941b68 <col:19, col:27> '<dependent type>' contains-errors lvalue ->info
    |     |       `-RecoveryExpr 0x132941b48 <col:19> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x132941c10 <col:33, line:12:3>
    |       `-ReturnStmt 0x132941c00 <line:11:4>
    |-IfStmt 0x132941ec8 <line:14:2, line:16:2>
    | |-UnaryOperator 0x132941cb8 <line:14:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x132941ca0 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x132941c80 <col:7> 'int' lvalue ParmVar 0x132928228 'min' 'int'
    | `-CompoundStmt 0x132941eb0 <col:12, line:16:2>
    |   `-BinaryOperator 0x132941e90 <line:15:3, col:36> 'int' contains-errors '='
    |     |-DeclRefExpr 0x132941cd0 <col:3> 'int' lvalue ParmVar 0x132928228 'min' 'int'
    |     `-ConditionalOperator 0x132941e60 <col:9, col:36> '<dependent type>' contains-errors
    |       |-RecoveryExpr 0x132941dd8 <col:9> '<dependent type>' contains-errors lvalue
    |       |-CXXDependentScopeMemberExpr 0x132941e18 <col:17, col:25> '<dependent type>' contains-errors lvalue ->minstrlen
    |       | `-RecoveryExpr 0x132941df8 <col:17> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x132941d68 <col:36> 'int' 4
    |-IfStmt 0x132941fb0 <line:18:2, line:20:2>
    | |-UnaryOperator 0x132941f20 <line:18:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x132941f08 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x132941ee8 <col:7> 'int' lvalue ParmVar 0x132928228 'min' 'int'
    | `-CompoundStmt 0x132941f98 <col:12, line:20:2>
    |   `-BinaryOperator 0x132941f78 <line:19:3, col:9> 'int' '='
    |     |-DeclRefExpr 0x132941f38 <col:3> 'int' lvalue ParmVar 0x132928228 'min' 'int'
    |     `-IntegerLiteral 0x132941f58 <col:9> 'int' 4
    |-IfStmt 0x132942070 <line:21:2, line:23:2>
    | |-BinaryOperator 0x132942028 <line:21:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x132942010 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x132941fd0 <col:6> 'int' lvalue ParmVar 0x132928228 'min' 'int'
    | | `-IntegerLiteral 0x132941ff0 <col:12> 'int' 0
    | `-CompoundStmt 0x132942058 <col:15, line:23:2>
    |   `-ReturnStmt 0x132942048 <line:22:3>
    |-IfStmt 0x132942320 <line:24:2, line:26:2>
    | |-BinaryOperator 0x1329421d0 <line:24:6, col:29> 'int' contains-errors '||'
    | | |-UnaryOperator 0x1329420c8 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x1329420b0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x132942090 <col:7> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1329421b0 <col:13, col:29> 'int' contains-errors '>'
    | |   |-RecoveryExpr 0x1329420e0 <col:13> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x132942168 <col:18, col:29> '<dependent type>' contains-errors lvalue ->length
    | |     `-CXXDependentScopeMemberExpr 0x132942120 <col:18, col:24> '<dependent type>' contains-errors lvalue ->buf
    | |       `-RecoveryExpr 0x132942100 <col:18> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x132942308 <col:37, line:26:2>
    |   `-BinaryOperator 0x1329422e8 <line:25:3, col:19> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x132942210 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x1329421f0 <col:3> 'int' lvalue ParmVar 0x132928328 'to' 'int'
    |     `-CXXDependentScopeMemberExpr 0x1329422a0 <col:8, col:19> '<dependent type>' contains-errors lvalue ->length
    |       `-CXXDependentScopeMemberExpr 0x132942258 <col:8, col:14> '<dependent type>' contains-errors lvalue ->buf
    |         `-RecoveryExpr 0x132942238 <col:8> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x132943930 <line:27:2, line:41:2>
    | |-BinaryOperator 0x1329423c8 <line:27:6, col:22> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x132942360 <col:6, col:12> '<dependent type>' contains-errors lvalue ->rawstr
    | | | `-RecoveryExpr 0x132942340 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1329423a8 <col:22> 'int' 2
    | `-CompoundStmt 0x132943918 <col:25, line:41:2>
    |   `-IfStmt 0x1329438f8 <line:30:3, line:40:3>
    |     |-BinaryOperator 0x132942658 <line:30:7, col:59> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x1329425f8 <col:7, col:32> 'int' contains-errors '&&'
    |     | | |-CXXDependentScopeMemberExpr 0x132942450 <col:7, col:19> '<dependent type>' contains-errors lvalue ->maxstrbuf
    |     | | | `-CXXDependentScopeMemberExpr 0x132942408 <col:7, col:13> '<dependent type>' contains-errors lvalue ->rbin
    |     | | |   `-RecoveryExpr 0x1329423e8 <col:7> '<dependent type>' contains-errors lvalue
    |     | | `-RecoveryExpr 0x1329425d8 <col:32> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x132942638 <col:40, col:59> 'int' contains-errors '>'
    |     |   |-RecoveryExpr 0x132942618 <col:40> '<dependent type>' contains-errors lvalue
    |     |   `-CXXDependentScopeMemberExpr 0x132942550 <col:47, col:59> '<dependent type>' contains-errors lvalue ->maxstrbuf
    |     |     `-CXXDependentScopeMemberExpr 0x132942508 <col:47, col:53> '<dependent type>' contains-errors lvalue ->rbin
    |     |       `-RecoveryExpr 0x1329424e8 <col:47> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x1329438d8 <col:70, line:40:3>
    |       |-IfStmt 0x1329438a8 <line:31:4, line:38:4>
    |       | |-CXXDependentScopeMemberExpr 0x1329426e0 <line:31:8, col:20> '<dependent type>' contains-errors lvalue ->verbose
    |       | | `-CXXDependentScopeMemberExpr 0x132942698 <col:8, col:14> '<dependent type>' contains-errors lvalue ->rbin
    |       | |   `-RecoveryExpr 0x132942678 <col:8> '<dependent type>' contains-errors lvalue
    |       | `-CompoundStmt 0x132943898 <col:29, line:38:4>
    |       `-ReturnStmt 0x1329438c8 <line:39:4>
    `-IfStmt 0x132943c70 <line:42:2, line:44:2>
      |-BinaryOperator 0x132943c28 <line:42:6, col:68> 'int' contains-errors '<'
      | |-CallExpr 0x132943bb8 <col:6, col:64> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x132943a30 <col:6> 'int ()' Function 0x132943978 'string_scan_range' 'int ()'
      | | |-RecoveryExpr 0x132943a50 <col:25> '<dependent type>' contains-errors lvalue
      | | |-CXXDependentScopeMemberExpr 0x132943ad8 <col:31, col:42> '<dependent type>' contains-errors lvalue ->buf
      | | | `-CXXDependentScopeMemberExpr 0x132943a90 <col:31, col:37> '<dependent type>' contains-errors lvalue ->buf
      | | |   `-RecoveryExpr 0x132943a70 <col:31> '<dependent type>' contains-errors lvalue
      | | |-DeclRefExpr 0x132943b20 <col:47> 'int' lvalue ParmVar 0x132928228 'min' 'int'
      | | |-RecoveryExpr 0x132943b40 <col:52> '<dependent type>' contains-errors lvalue
      | | |-RecoveryExpr 0x132943b60 <col:58> '<dependent type>' contains-errors lvalue
      | | `-UnaryOperator 0x132943ba0 <col:62, col:63> 'int' prefix '-'
      | |   `-IntegerLiteral 0x132943b80 <col:63> 'int' 1
      | `-IntegerLiteral 0x132943c08 <col:68> 'int' 0
      `-CompoundStmt 0x132943c58 <col:71, line:44:2>
        `-ReturnStmt 0x132943c48 <line:43:3>
