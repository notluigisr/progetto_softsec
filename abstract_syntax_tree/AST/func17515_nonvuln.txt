TranslationUnitDecl 0x149055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1490564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149055bd0 '__int128'
|-TypedefDecl 0x149056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149055bf0 'unsigned __int128'
|-TypedefDecl 0x14980be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14980bc00 'struct __NSConstantString_tag'
|   `-Record 0x149056580 '__NSConstantString_tag'
|-TypedefDecl 0x14980be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149055d90 '__SVInt8_t'
|-TypedefDecl 0x14980bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x149055db0 '__SVInt16_t'
|-TypedefDecl 0x14980bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x149055dd0 '__SVInt32_t'
|-TypedefDecl 0x14980bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x149055df0 '__SVInt64_t'
|-TypedefDecl 0x14980c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149055e10 '__SVUint8_t'
|-TypedefDecl 0x14980c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149055e30 '__SVUint16_t'
|-TypedefDecl 0x14980c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149055e50 '__SVUint32_t'
|-TypedefDecl 0x14980c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149055e70 '__SVUint64_t'
|-TypedefDecl 0x14980c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149055e90 '__SVFloat16_t'
|-TypedefDecl 0x14980c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x149055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14980c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x149055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14980c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x149055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14980c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14980c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14980c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14980c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14980c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14980c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x149055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14980c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x149055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14980c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x149055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14980c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14980c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14980c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14980c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14980c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14980c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1490560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14980c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1490560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14980c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1490560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14980c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14980ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14980cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14980cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14980cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14980d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1490561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14980d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1490561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14980d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1490561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14980d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14980d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14980d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14980d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14980d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14980d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1490562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14980d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1490562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14980d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1490562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14980d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14980d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14980d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14980d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14980da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149056390 '__SVBool_t'
|-TypedefDecl 0x14980da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1490563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14980dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1490563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14980db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1490563f0 '__SVCount_t'
|-TypedefDecl 0x14980dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-TypedefDecl 0x14980dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-FunctionDecl 0x14980de38 <dataset_diviso_filec/func17515_nonvuln.c:1:1, line:67:1> line:1:12 spawn_https_helper_openssl 'int (const char *, unsigned int)' static
| |-ParmVarDecl 0x14980dcd8 <col:39, col:51> col:51 used host 'const char *'
| |-ParmVarDecl 0x14980dd58 <col:57, col:66> col:66 used port 'unsigned int'
| `-CompoundStmt 0x14982a018 <line:2:1, line:67:1>
|   |-DeclStmt 0x14980e008 <line:3:2, col:24>
|   | `-VarDecl 0x14980df50 <col:2, col:20> col:8 used allocated 'char *' cinit
|   |   `-RecoveryExpr 0x14980dfe8 <col:20> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14980e0a0 <line:4:2, col:18>
|   | `-VarDecl 0x14980e038 <col:2, col:8> col:8 used servername 'char *'
|   |-DeclStmt 0x14980e1d0 <line:5:2, col:11>
|   | `-VarDecl 0x14980e168 <col:2, col:10> col:6 used sp 'int[2]'
|   |-DeclStmt 0x14980e268 <line:6:2, col:9>
|   | `-VarDecl 0x14980e200 <col:2, col:6> col:6 used pid 'int'
|   |-IfStmt 0x149828438 <line:13:2, line:14:49>
|   | |-UnaryOperator 0x149828100 <line:13:6, col:23> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1498280b8 <col:7, col:23> 'char *'
|   | |   |-ImplicitCastExpr 0x1498280a0 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x149828000 <col:7> 'char *(const char *, int)' Function 0x149827e20 'strchr' 'char *(const char *, int)'
|   | |   |-ImplicitCastExpr 0x1498280e8 <col:14> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x149828020 <col:14> 'const char *' lvalue ParmVar 0x14980dcd8 'host' 'const char *'
|   | |   `-CharacterLiteral 0x149828040 <col:20> 'int' 58
|   | `-BinaryOperator 0x149828418 <line:14:3, col:49> 'const char *' contains-errors '='
|   |   |-DeclRefExpr 0x149828118 <col:3> 'const char *' lvalue ParmVar 0x14980dcd8 'host' 'const char *'
|   |   `-ImplicitCastExpr 0x149828400 <col:10, col:49> 'const char *' contains-errors <NoOp>
|   |     `-BinaryOperator 0x1498283e0 <col:10, col:49> 'char *' contains-errors '='
|   |       |-DeclRefExpr 0x149828138 <col:10> 'char *' contains-errors lvalue Var 0x14980df50 'allocated' 'char *'
|   |       `-ImplicitCastExpr 0x1498283c8 <col:22, col:49> 'char *' <IntegralToPointer>
|   |         `-CallExpr 0x149828348 <col:22, col:49> 'int'
|   |           |-ImplicitCastExpr 0x149828330 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x149828238 <col:22> 'int ()' Function 0x149828180 'xasprintf' 'int ()'
|   |           |-ImplicitCastExpr 0x149828380 <col:32> 'char *' <ArrayToPointerDecay>
|   |           | `-StringLiteral 0x1498282a0 <col:32> 'char[4]' lvalue "STR"
|   |           |-ImplicitCastExpr 0x149828398 <col:39> 'const char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1498282c0 <col:39> 'const char *' lvalue ParmVar 0x14980dcd8 'host' 'const char *'
|   |           `-ImplicitCastExpr 0x1498283b0 <col:45> 'unsigned int' <LValueToRValue>
|   |             `-DeclRefExpr 0x1498282e0 <col:45> 'unsigned int' lvalue ParmVar 0x14980dd58 'port' 'unsigned int'
|   |-BinaryOperator 0x149828608 <line:15:2, col:27> 'char *' '='
|   | |-DeclRefExpr 0x149828458 <col:2> 'char *' lvalue Var 0x14980e038 'servername' 'char *'
|   | `-ImplicitCastExpr 0x1498285f0 <col:15, col:27> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1498285b0 <col:15, col:27> 'int'
|   |     |-ImplicitCastExpr 0x149828598 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x149828558 <col:15> 'int ()' Function 0x1498284a0 'xstrdup' 'int ()'
|   |     `-ImplicitCastExpr 0x1498285d8 <col:23> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x149828578 <col:23> 'const char *' lvalue ParmVar 0x14980dcd8 'host' 'const char *'
|   |-BinaryOperator 0x149828960 <line:16:2, col:32> 'char' '='
|   | |-ArraySubscriptExpr 0x149828910 <col:2, col:28> 'char' lvalue
|   | | |-CallExpr 0x149828890 <col:2, col:25> 'char *'
|   | | | |-ImplicitCastExpr 0x149828878 <col:2> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x149828808 <col:2> 'char *(const char *, int)' Function 0x149828628 'strrchr' 'char *(const char *, int)'
|   | | | |-ImplicitCastExpr 0x1498288d8 <col:10> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1498288c0 <col:10> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x149828828 <col:10> 'char *' lvalue Var 0x14980e038 'servername' 'char *'
|   | | | `-CharacterLiteral 0x149828848 <col:22> 'int' 58
|   | | `-IntegerLiteral 0x1498288f0 <col:27> 'int' 0
|   | `-ImplicitCastExpr 0x149828948 <col:32> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x149828930 <col:32> 'int' 0
|   |-CallExpr 0x149122cf0 <line:18:2, col:13> 'int'
|   | `-ImplicitCastExpr 0x149122cd8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x149122cb8 <col:2> 'int ()' Function 0x149122c00 'fflush_all' 'int ()'
|   |-BinaryOperator 0x149122e68 <line:19:2, col:15> 'int' '='
|   | |-DeclRefExpr 0x149122d10 <col:2> 'int' lvalue Var 0x14980e200 'pid' 'int'
|   | `-CallExpr 0x149122e48 <col:8, col:15> 'int'
|   |   `-ImplicitCastExpr 0x149122e30 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x149122e10 <col:8> 'int ()' Function 0x149122d58 'xvfork' 'int ()'
|   |-IfStmt 0x149829af8 <line:20:2, line:54:2>
|   | |-BinaryOperator 0x149122ee0 <line:20:6, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x149122ec8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x149122e88 <col:6> 'int' lvalue Var 0x14980e200 'pid' 'int'
|   | | `-IntegerLiteral 0x149122ea8 <col:13> 'int' 0
|   | `-CompoundStmt 0x149829a60 <col:16, line:54:2>
|   |   |-DeclStmt 0x149123010 <line:22:3, col:16>
|   |   | `-VarDecl 0x149122fa8 <col:3, col:15> col:9 used argv 'char *[9]'
|   |   |-CallExpr 0x1491231f0 <line:24:3, col:14> 'int'
|   |   | |-ImplicitCastExpr 0x1491231d8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x149123108 <col:3> 'int ()' Function 0x149123050 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x149123218 <col:9, col:13> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x1491231b8 <col:9, col:13> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x1491231a0 <col:9> 'int *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x149123128 <col:9> 'int[2]' lvalue Var 0x14980e168 'sp' 'int[2]'
|   |   |     `-IntegerLiteral 0x149123148 <col:12> 'int' 0
|   |   |-CallExpr 0x1491233e0 <line:25:3, col:20> 'int'
|   |   | |-ImplicitCastExpr 0x1491233c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x149123310 <col:3> 'int ()' Function 0x149123258 'xmove_fd' 'int ()'
|   |   | |-ImplicitCastExpr 0x149123410 <col:12, col:16> 'int' <LValueToRValue>
|   |   | | `-ArraySubscriptExpr 0x149123388 <col:12, col:16> 'int' lvalue
|   |   | |   |-ImplicitCastExpr 0x149123370 <col:12> 'int *' <ArrayToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x149123330 <col:12> 'int[2]' lvalue Var 0x14980e168 'sp' 'int[2]'
|   |   | |   `-IntegerLiteral 0x149123350 <col:15> 'int' 1
|   |   | `-IntegerLiteral 0x1491233a8 <col:19> 'int' 0
|   |   |-CallExpr 0x149123580 <line:26:3, col:13> 'int'
|   |   | |-ImplicitCastExpr 0x149123568 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x149123508 <col:3> 'int ()' Function 0x149123450 'xdup2' 'int ()'
|   |   | |-IntegerLiteral 0x149123528 <col:9> 'int' 0
|   |   | `-IntegerLiteral 0x149123548 <col:12> 'int' 1
|   |   |-CallExpr 0x149123628 <line:28:3, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x149123610 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1491235b0 <col:3> 'int ()' Function 0x149123258 'xmove_fd' 'int ()'
|   |   | |-IntegerLiteral 0x1491235d0 <col:12> 'int' 2
|   |   | `-IntegerLiteral 0x1491235f0 <col:15> 'int' 3
|   |   |-CallExpr 0x1491237e0 <line:29:3, col:22> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x149123738 <col:3> 'int ()' Function 0x149123680 'xopen' 'int ()'
|   |   | |-StringLiteral 0x149123758 <col:9> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x1491237c0 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x149123c18 <line:30:3, col:32> 'void *'
|   |   | |-ImplicitCastExpr 0x149123c00 <col:3> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x149123aa8 <col:3> 'void *(void *, int, unsigned long)' Function 0x149123858 'memset' 'void *(void *, int, unsigned long)'
|   |   | |-ImplicitCastExpr 0x149123c50 <col:10, col:11> 'void *' <BitCast>
|   |   | | `-UnaryOperator 0x149123b20 <col:10, col:11> 'char *(*)[9]' prefix '&' cannot overflow
|   |   | |   `-DeclRefExpr 0x149123ac8 <col:11> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   | |-IntegerLiteral 0x149123b38 <col:17> 'int' 0
|   |   | `-UnaryExprOrTypeTraitExpr 0x149123b98 <col:20, col:31> 'unsigned long' sizeof
|   |   |   `-ParenExpr 0x149123b78 <col:26, col:31> 'char *[9]' lvalue
|   |   |     `-DeclRefExpr 0x149123b58 <col:27> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]' non_odr_use_unevaluated
|   |   |-BinaryOperator 0x149123d90 <line:31:3, col:20> 'char *' '='
|   |   | |-ArraySubscriptExpr 0x149123cf8 <col:3, col:9> 'char *' lvalue
|   |   | | |-ImplicitCastExpr 0x149123ce0 <col:3> 'char **' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x149123c68 <col:3> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   | | `-IntegerLiteral 0x149123c88 <col:8> 'int' 0
|   |   | `-CStyleCastExpr 0x149123d68 <col:13, col:20> 'char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x149123d50 <col:20> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |     `-StringLiteral 0x149123d18 <col:20> 'char[4]' lvalue "STR"
|   |   |-BinaryOperator 0x149123ea0 <line:32:3, col:20> 'char *' '='
|   |   | |-ArraySubscriptExpr 0x149123e08 <col:3, col:9> 'char *' lvalue
|   |   | | |-ImplicitCastExpr 0x149123df0 <col:3> 'char **' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x149123db0 <col:3> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   | | `-IntegerLiteral 0x149123dd0 <col:8> 'int' 1
|   |   | `-CStyleCastExpr 0x149123e78 <col:13, col:20> 'char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x149123e60 <col:20> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |     `-StringLiteral 0x149123e28 <col:20> 'char[4]' lvalue "STR"
|   |   |-BinaryOperator 0x149123fb0 <line:33:3, col:20> 'char *' '='
|   |   | |-ArraySubscriptExpr 0x149123f18 <col:3, col:9> 'char *' lvalue
|   |   | | |-ImplicitCastExpr 0x149123f00 <col:3> 'char **' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x149123ec0 <col:3> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   | | `-IntegerLiteral 0x149123ee0 <col:8> 'int' 2
|   |   | `-CStyleCastExpr 0x149123f88 <col:13, col:20> 'char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x149123f70 <col:20> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |     `-StringLiteral 0x149123f38 <col:20> 'char[4]' lvalue "STR"
|   |   |-BinaryOperator 0x1491240c0 <line:34:3, col:20> 'char *' '='
|   |   | |-ArraySubscriptExpr 0x149124028 <col:3, col:9> 'char *' lvalue
|   |   | | |-ImplicitCastExpr 0x149124010 <col:3> 'char **' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x149123fd0 <col:3> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   | | `-IntegerLiteral 0x149123ff0 <col:8> 'int' 3
|   |   | `-CStyleCastExpr 0x149124098 <col:13, col:20> 'char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x149124080 <col:20> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |     `-StringLiteral 0x149124048 <col:20> 'char[4]' lvalue "STR"
|   |   |-BinaryOperator 0x1491241d0 <line:35:3, col:20> 'char *' '='
|   |   | |-ArraySubscriptExpr 0x149124138 <col:3, col:9> 'char *' lvalue
|   |   | | |-ImplicitCastExpr 0x149124120 <col:3> 'char **' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x1491240e0 <col:3> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   | | `-IntegerLiteral 0x149124100 <col:8> 'int' 4
|   |   | `-CStyleCastExpr 0x1491241a8 <col:13, col:20> 'char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x149124190 <col:20> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x149124158 <col:20> 'const char *' lvalue ParmVar 0x14980dcd8 'host' 'const char *'
|   |   |-IfStmt 0x1491245c0 <line:37:3, line:40:3>
|   |   | |-UnaryOperator 0x149124368 <line:37:7, col:32> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x149124328 <col:8, col:32> 'int'
|   |   | |   |-ImplicitCastExpr 0x149124310 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x1491242d0 <col:8> 'int ()' Function 0x149124218 'is_ip_address' 'int ()'
|   |   | |   `-ImplicitCastExpr 0x149124350 <col:22> 'char *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1491242f0 <col:22> 'char *' lvalue Var 0x14980e038 'servername' 'char *'
|   |   | `-CompoundStmt 0x1491245a0 <col:35, line:40:3>
|   |   |   |-BinaryOperator 0x149124470 <line:38:4, col:21> 'char *' '='
|   |   |   | |-ArraySubscriptExpr 0x1491243d8 <col:4, col:10> 'char *' lvalue
|   |   |   | | |-ImplicitCastExpr 0x1491243c0 <col:4> 'char **' <ArrayToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x149124380 <col:4> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   |   | | `-IntegerLiteral 0x1491243a0 <col:9> 'int' 5
|   |   |   | `-CStyleCastExpr 0x149124448 <col:14, col:21> 'char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x149124430 <col:21> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |   |     `-StringLiteral 0x1491243f8 <col:21> 'char[4]' lvalue "STR"
|   |   |   `-BinaryOperator 0x149124580 <line:39:4, col:21> 'char *' '='
|   |   |     |-ArraySubscriptExpr 0x1491244e8 <col:4, col:10> 'char *' lvalue
|   |   |     | |-ImplicitCastExpr 0x1491244d0 <col:4> 'char **' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x149124490 <col:4> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   |     | `-IntegerLiteral 0x1491244b0 <col:9> 'int' 6
|   |   |     `-CStyleCastExpr 0x149124558 <col:14, col:21> 'char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x149124540 <col:21> 'char *' <LValueToRValue> part_of_explicit_cast
|   |   |         `-DeclRefExpr 0x149124508 <col:21> 'char *' lvalue Var 0x14980e038 'servername' 'char *'
|   |   |-IfStmt 0x149124778 <line:41:3, line:43:3>
|   |   | |-RecoveryExpr 0x149124630 <line:41:7, col:47> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x149124760 <col:50, line:43:3>
|   |   |   `-BinaryOperator 0x149124740 <line:42:4, col:21> 'char *' '='
|   |   |     |-ArraySubscriptExpr 0x1491246a8 <col:4, col:10> 'char *' lvalue
|   |   |     | |-ImplicitCastExpr 0x149124690 <col:4> 'char **' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x149124650 <col:4> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   |     | `-IntegerLiteral 0x149124670 <col:9> 'int' 7
|   |   |     `-CStyleCastExpr 0x149124718 <col:14, col:21> 'char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x149124700 <col:21> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |         `-StringLiteral 0x1491246c8 <col:21> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x149124948 <line:45:3, col:26> 'int'
|   |   | |-ImplicitCastExpr 0x149124930 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x149124878 <col:3> 'int ()' Function 0x1491247c0 'BB_EXECVP' 'int ()'
|   |   | |-ImplicitCastExpr 0x149124978 <col:13, col:19> 'char *' <LValueToRValue>
|   |   | | `-ArraySubscriptExpr 0x1491248f0 <col:13, col:19> 'char *' lvalue
|   |   | |   |-ImplicitCastExpr 0x1491248d8 <col:13> 'char **' <ArrayToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x149124898 <col:13> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   | |   `-IntegerLiteral 0x1491248b8 <col:18> 'int' 0
|   |   | `-ImplicitCastExpr 0x149124990 <col:22> 'char **' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x149124910 <col:22> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |   |-CallExpr 0x149124a20 <line:46:3, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x149124a08 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1491249a8 <col:3> 'int ()' Function 0x149123258 'xmove_fd' 'int ()'
|   |   | |-IntegerLiteral 0x1491249c8 <col:12> 'int' 3
|   |   | `-IntegerLiteral 0x1491249e8 <col:15> 'int' 2
|   |   `-CallExpr 0x149829a00 <line:51:3, col:39> 'int'
|   |     |-ImplicitCastExpr 0x149124be8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x149124b30 <col:3> 'int ()' Function 0x149124a78 'bb_perror_msg_and_die' 'int ()'
|   |     |-ImplicitCastExpr 0x149829a30 <col:25> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x149124b50 <col:25> 'char[4]' lvalue "STR"
|   |     `-ImplicitCastExpr 0x149829a48 <col:32, col:38> 'char *' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x149124bc8 <col:32, col:38> 'char *' lvalue
|   |         |-ImplicitCastExpr 0x149124bb0 <col:32> 'char **' <ArrayToPointerDecay>
|   |         | `-DeclRefExpr 0x149124b70 <col:32> 'char *[9]' lvalue Var 0x149122fa8 'argv' 'char *[9]'
|   |         `-IntegerLiteral 0x149124b90 <col:37> 'int' 0
|   |-CallExpr 0x149829d68 <line:57:2, col:17> 'void'
|   | |-ImplicitCastExpr 0x149829d50 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x149829cc8 <col:2> 'void (void *)' Function 0x149829b58 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x149829da8 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x149829d90 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x149829ce8 <col:7> 'char *' lvalue Var 0x14980e038 'servername' 'char *'
|   |-CallExpr 0x149829e30 <line:58:2, col:16> 'void' contains-errors
|   | |-ImplicitCastExpr 0x149829e18 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x149829dc0 <col:2> 'void (void *)' Function 0x149829b58 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x149829e70 <col:7> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x149829e58 <col:7> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x149829de0 <col:7> 'char *' contains-errors lvalue Var 0x14980df50 'allocated' 'char *'
|   |-CallExpr 0x149829f38 <line:59:2, col:13> 'int'
|   | |-ImplicitCastExpr 0x149829f20 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x149829e88 <col:2> 'int ()' Function 0x149123050 'close' 'int ()'
|   | `-ImplicitCastExpr 0x149829f60 <col:8, col:12> 'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x149829f00 <col:8, col:12> 'int' lvalue
|   |     |-ImplicitCastExpr 0x149829ee8 <col:8> 'int *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x149829ea8 <col:8> 'int[2]' lvalue Var 0x14980e168 'sp' 'int[2]'
|   |     `-IntegerLiteral 0x149829ec8 <col:11> 'int' 1
|   `-ReturnStmt 0x14982a008 <line:66:2, col:13>
|     `-ImplicitCastExpr 0x149829ff0 <col:9, col:13> 'int' <LValueToRValue>
|       `-ArraySubscriptExpr 0x149829fd0 <col:9, col:13> 'int' lvalue
|         |-ImplicitCastExpr 0x149829fb8 <col:9> 'int *' <ArrayToPointerDecay>
|         | `-DeclRefExpr 0x149829f78 <col:9> 'int[2]' lvalue Var 0x14980e168 'sp' 'int[2]'
|         `-IntegerLiteral 0x149829f98 <col:12> 'int' 0
|-FunctionDecl 0x149827e20 <line:13:7> col:7 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x149827f20 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x149827f88 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x149827ec8 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x149828628 <line:16:2> col:2 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x149828728 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x149828790 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1498286d0 <<invalid sloc>> Implicit 896
|-FunctionDecl 0x149123858 <line:30:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x149123958 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1491239c0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x149123a28 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x149123900 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x149829b58 <line:57:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x149829c58 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x149829c00 <<invalid sloc>> Implicit 873
