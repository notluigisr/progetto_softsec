TranslationUnitDecl 0x12c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c055bd0 '__int128'
|-TypedefDecl 0x12c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c055bf0 'unsigned __int128'
|-TypedefDecl 0x12c126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c126000 'struct __NSConstantString_tag'
|   `-Record 0x12c056580 '__NSConstantString_tag'
|-TypedefDecl 0x12c126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c055d90 '__SVInt8_t'
|-TypedefDecl 0x12c126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c055db0 '__SVInt16_t'
|-TypedefDecl 0x12c126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c055dd0 '__SVInt32_t'
|-TypedefDecl 0x12c1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c055df0 '__SVInt64_t'
|-TypedefDecl 0x12c126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c055e10 '__SVUint8_t'
|-TypedefDecl 0x12c1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c055e30 '__SVUint16_t'
|-TypedefDecl 0x12c126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c055e50 '__SVUint32_t'
|-TypedefDecl 0x12c126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c055e70 '__SVUint64_t'
|-TypedefDecl 0x12c1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c055e90 '__SVFloat16_t'
|-TypedefDecl 0x12c126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c056390 '__SVBool_t'
|-TypedefDecl 0x12c127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c0563f0 '__SVCount_t'
|-TypedefDecl 0x12c127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c127fb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-TypedefDecl 0x12c128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c127fb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-FunctionDecl 0x12c1283a8 <dataset_diviso_filec/func2966_vuln.c:1:1, line:38:1> line:1:1 invalid _gnutls_ecc_ansi_x963_export 'int (int, int, int, int *)'
| |-ParmVarDecl 0x12c1280f0 <col:31, col:50> col:50 invalid curve 'int'
| |-ParmVarDecl 0x12c128170 <col:57, col:66> col:66 invalid x 'int'
| |-ParmVarDecl 0x12c1281f0 <col:69, col:78> col:78 invalid y 'int'
| |-ParmVarDecl 0x12c1282a8 <line:2:31, col:48> col:48 referenced invalid out 'int *'
| `-CompoundStmt 0x12c80c858 <line:3:1, line:38:1>
|   |-DeclStmt 0x12c1286b8 <line:4:3, col:49>
|   | `-VarDecl 0x12c128488 <col:3, col:48> col:7 used numlen 'int' cinit
|   |   `-CallExpr 0x12c128690 <col:16, col:48> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12c128650 <col:16> 'int ()' Function 0x12c128598 'gnutls_ecc_curve_get_size' 'int ()'
|   |     `-RecoveryExpr 0x12c128670 <col:43> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12c1287e8 <line:5:3, col:21>
|   | |-VarDecl 0x12c1286e8 <col:3, col:7> col:7 used byte_size 'int'
|   | `-VarDecl 0x12c128768 <col:3, col:18> col:18 used ret 'int'
|   |-UnaryExprOrTypeTraitExpr 0x12c808858 <line:6:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x12c808838 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12c808a88 <line:8:3, line:9:55>
|   | |-BinaryOperator 0x12c8088d0 <line:8:7, col:17> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x12c8088b8 <col:7> 'int' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c808878 <col:7> 'int' contains-errors lvalue Var 0x12c128488 'numlen' 'int'
|   | | `-IntegerLiteral 0x12c808898 <col:17> 'int' 0
|   | `-ReturnStmt 0x12c808a78 <line:9:5, col:55>
|   |   `-CallExpr 0x12c808a50 <col:12, col:55> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12c8089d0 <col:12> 'int ()' Function 0x12c808918 'gnutls_assert_val' 'int ()'
|   |     `-RecoveryExpr 0x12c808a30 <col:31> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12c808bf0 <line:11:3, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12c808af0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->size
|   | | `-RecoveryExpr 0x12c808ac8 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12c808aa8 <col:3> 'int *' lvalue ParmVar 0x12c1282a8 'out' 'int *'
|   | `-BinaryOperator 0x12c808bd0 <col:15, col:23> 'int' contains-errors '+'
|   |   |-IntegerLiteral 0x12c808b38 <col:15> 'int' 1
|   |   `-BinaryOperator 0x12c808bb0 <col:19, col:23> 'int' contains-errors '*'
|   |     |-IntegerLiteral 0x12c808b58 <col:19> 'int' 2
|   |     `-ImplicitCastExpr 0x12c808b98 <col:23> 'int' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x12c808b78 <col:23> 'int' contains-errors lvalue Var 0x12c128488 'numlen' 'int'
|   |-BinaryOperator 0x12c808e30 <line:13:3, col:39> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12c808c58 <col:3, col:8> '<dependent type>' contains-errors lvalue ->data
|   | | `-RecoveryExpr 0x12c808c30 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12c808c10 <col:3> 'int *' lvalue ParmVar 0x12c1282a8 'out' 'int *'
|   | `-CallExpr 0x12c808e08 <col:15, col:39> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12c808d80 <col:15> 'int ()' Function 0x12c808cc8 'gnutls_malloc' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x12c808dc0 <col:30, col:35> '<dependent type>' contains-errors lvalue ->size
|   |     `-RecoveryExpr 0x12c808da0 <col:30> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12c808fe8 <line:14:3, line:15:52>
|   | |-BinaryOperator 0x12c808f10 <line:14:7, col:20> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x12c808e70 <col:7, col:12> '<dependent type>' contains-errors lvalue ->data
|   | | | `-RecoveryExpr 0x12c808e50 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x12c808ef0 <col:20> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x12c808fd8 <line:15:5, col:52>
|   |   `-CallExpr 0x12c808fb0 <col:12, col:52> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12c808f30 <col:12> 'int ()' Function 0x12c808918 'gnutls_assert_val' 'int ()'
|   |     `-RecoveryExpr 0x12c808f90 <col:31> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12c80b218 <line:17:3, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12c8096d0 <col:3> 'void *(void *, int, unsigned long)' Function 0x12c809480 'memset' 'void *(void *, int, unsigned long)'
|   | |-CXXDependentScopeMemberExpr 0x12c809710 <col:11, col:16> '<dependent type>' contains-errors lvalue ->data
|   | | `-RecoveryExpr 0x12c8096f0 <col:11> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x12c809758 <col:22> 'int' 0
|   | `-CXXDependentScopeMemberExpr 0x12c809798 <col:25, col:30> '<dependent type>' contains-errors lvalue ->size
|   |   `-RecoveryExpr 0x12c809778 <col:25> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12c80b358 <line:20:3, col:18> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x12c80b318 <col:3, col:14> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x12c80b300 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x12c80b298 <col:3, col:8> '<dependent type>' contains-errors lvalue ->data
|   | | |   `-RecoveryExpr 0x12c80b270 <col:3> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12c80b250 <col:3> 'int *' lvalue ParmVar 0x12c1282a8 'out' 'int *'
|   | | `-IntegerLiteral 0x12c80b2e0 <col:13> 'int' 0
|   | `-IntegerLiteral 0x12c80b338 <col:18> 'int' 4
|   |-BinaryOperator 0x12c80b580 <line:23:3, col:49> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12c80b378 <col:3> 'int' lvalue Var 0x12c1286e8 'byte_size' 'int'
|   | `-BinaryOperator 0x12c80b560 <col:15, col:49> '<dependent type>' contains-errors '/'
|   |   |-ParenExpr 0x12c80b520 <col:15, col:45> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x12c80b500 <col:16, col:44> '<dependent type>' contains-errors '+'
|   |   |   |-CallExpr 0x12c80b4b8 <col:16, col:40> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x12c80b478 <col:16> 'int ()' Function 0x12c80b3c0 '_gnutls_mpi_get_nbits' 'int ()'
|   |   |   | `-RecoveryExpr 0x12c80b498 <col:39> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x12c80b4e0 <col:44> 'int' 7
|   |   `-IntegerLiteral 0x12c80b540 <col:49> 'int' 8
|   |-BinaryOperator 0x12c80bcd8 <line:25:3, col:74> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12c80b738 <col:3> 'int' lvalue Var 0x12c128768 'ret' 'int'
|   | `-CallExpr 0x12c80bca0 <col:9, col:74> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12c80b838 <col:9> 'int ()' Function 0x12c80b780 '_gnutls_mpi_print' 'int ()'
|   |   |-RecoveryExpr 0x12c80b858 <col:28> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x12c80bc50 <col:31, col:66> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-ArraySubscriptExpr 0x12c80bc30 <col:32, col:66> '<dependent type>' contains-errors lvalue
|   |   |   |-ImplicitCastExpr 0x12c80bc18 <col:32, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | `-CXXDependentScopeMemberExpr 0x12c80b898 <col:32, col:37> '<dependent type>' contains-errors lvalue ->data
|   |   |   |   `-RecoveryExpr 0x12c80b878 <col:32> '<dependent type>' contains-errors lvalue
|   |   |   `-BinaryOperator 0x12c80bbf8 <col:42, col:65> 'int' contains-errors '+'
|   |   |     |-IntegerLiteral 0x12c80b8e0 <col:42> 'int' 1
|   |   |     `-ParenExpr 0x12c80bbd8 <col:46, col:65> 'int' contains-errors
|   |   |       `-BinaryOperator 0x12c80bbb8 <col:47, col:56> 'int' contains-errors '-'
|   |   |         |-ImplicitCastExpr 0x12c80bb88 <col:47> 'int' contains-errors <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x12c80b900 <col:47> 'int' contains-errors lvalue Var 0x12c128488 'numlen' 'int'
|   |   |         `-ImplicitCastExpr 0x12c80bba0 <col:56> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x12c80b920 <col:56> 'int' lvalue Var 0x12c1286e8 'byte_size' 'int'
|   |   `-UnaryOperator 0x12c80bc88 <col:69, col:70> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12c80bc68 <col:70> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12c80be48 <line:26:3, line:27:34>
|   | |-BinaryOperator 0x12c80bd50 <line:26:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x12c80bd38 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c80bcf8 <col:7> 'int' lvalue Var 0x12c128768 'ret' 'int'
|   | | `-IntegerLiteral 0x12c80bd18 <col:13> 'int' 0
|   | `-ReturnStmt 0x12c80be38 <line:27:5, col:34>
|   |   `-CallExpr 0x12c80bdf8 <col:12, col:34> 'int'
|   |     |-ImplicitCastExpr 0x12c80bde0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12c80bd70 <col:12> 'int ()' Function 0x12c808918 'gnutls_assert_val' 'int ()'
|   |     `-ImplicitCastExpr 0x12c80be20 <col:31> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12c80bd90 <col:31> 'int' lvalue Var 0x12c128768 'ret' 'int'
|   |-BinaryOperator 0x12c80bf90 <line:29:3, col:49> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12c80be68 <col:3> 'int' lvalue Var 0x12c1286e8 'byte_size' 'int'
|   | `-BinaryOperator 0x12c80bf70 <col:15, col:49> '<dependent type>' contains-errors '/'
|   |   |-ParenExpr 0x12c80bf30 <col:15, col:45> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x12c80bf10 <col:16, col:44> '<dependent type>' contains-errors '+'
|   |   |   |-CallExpr 0x12c80bec8 <col:16, col:40> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x12c80be88 <col:16> 'int ()' Function 0x12c80b3c0 '_gnutls_mpi_get_nbits' 'int ()'
|   |   |   | `-RecoveryExpr 0x12c80bea8 <col:39> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x12c80bef0 <col:44> 'int' 7
|   |   `-IntegerLiteral 0x12c80bf50 <col:49> 'int' 8
|   |-BinaryOperator 0x12c80c6c8 <line:31:3, line:32:77> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12c80c1a0 <line:31:3> 'int' lvalue Var 0x12c128768 'ret' 'int'
|   | `-CallExpr 0x12c80c690 <line:32:5, col:77> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12c80c1c0 <col:5> 'int ()' Function 0x12c80b780 '_gnutls_mpi_print' 'int ()'
|   |   |-RecoveryExpr 0x12c80c1e0 <col:24> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x12c80c640 <col:27, col:69> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-ArraySubscriptExpr 0x12c80c620 <col:28, col:69> '<dependent type>' contains-errors lvalue
|   |   |   |-ImplicitCastExpr 0x12c80c608 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | `-CXXDependentScopeMemberExpr 0x12c80c220 <col:28, col:33> '<dependent type>' contains-errors lvalue ->data
|   |   |   |   `-RecoveryExpr 0x12c80c200 <col:28> '<dependent type>' contains-errors lvalue
|   |   |   `-BinaryOperator 0x12c80c5e8 <col:38, col:60> 'int' contains-errors '-'
|   |   |     |-BinaryOperator 0x12c80c5b0 <col:38, col:51> 'int' contains-errors '+'
|   |   |     | |-BinaryOperator 0x12c80c578 <col:38, col:42> 'int' contains-errors '+'
|   |   |     | | |-IntegerLiteral 0x12c80c268 <col:38> 'int' 1
|   |   |     | | `-ImplicitCastExpr 0x12c80c560 <col:42> 'int' contains-errors <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x12c80c288 <col:42> 'int' contains-errors lvalue Var 0x12c128488 'numlen' 'int'
|   |   |     | `-ImplicitCastExpr 0x12c80c598 <col:51> 'int' contains-errors <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x12c80c2e0 <col:51> 'int' contains-errors lvalue Var 0x12c128488 'numlen' 'int'
|   |   |     `-ImplicitCastExpr 0x12c80c5d0 <col:60> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x12c80c338 <col:60> 'int' lvalue Var 0x12c1286e8 'byte_size' 'int'
|   |   `-UnaryOperator 0x12c80c678 <col:72, col:73> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12c80c658 <col:73> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12c80c808 <line:33:3, line:34:34>
|   | |-BinaryOperator 0x12c80c740 <line:33:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x12c80c728 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c80c6e8 <col:7> 'int' lvalue Var 0x12c128768 'ret' 'int'
|   | | `-IntegerLiteral 0x12c80c708 <col:13> 'int' 0
|   | `-ReturnStmt 0x12c80c7f8 <line:34:5, col:34>
|   |   `-CallExpr 0x12c80c7b8 <col:12, col:34> 'int'
|   |     |-ImplicitCastExpr 0x12c80c7a0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12c80c760 <col:12> 'int ()' Function 0x12c808918 'gnutls_assert_val' 'int ()'
|   |     `-ImplicitCastExpr 0x12c80c7e0 <col:31> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12c80c780 <col:31> 'int' lvalue Var 0x12c128768 'ret' 'int'
|   `-ReturnStmt 0x12c80c848 <line:37:3, col:10>
|     `-IntegerLiteral 0x12c80c828 <col:10> 'int' 0
`-FunctionDecl 0x12c809480 <line:17:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x12c809580 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12c8095e8 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x12c809650 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12c809528 <<invalid sloc>> Implicit 900
