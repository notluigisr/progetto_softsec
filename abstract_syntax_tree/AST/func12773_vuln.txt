TranslationUnitDecl 0x158055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1580564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158055bd0 '__int128'
|-TypedefDecl 0x158056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158055bf0 'unsigned __int128'
|-TypedefDecl 0x15000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15000bc00 'struct __NSConstantString_tag'
|   `-Record 0x158056580 '__NSConstantString_tag'
|-TypedefDecl 0x15000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158055d90 '__SVInt8_t'
|-TypedefDecl 0x15000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158055db0 '__SVInt16_t'
|-TypedefDecl 0x15000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158055dd0 '__SVInt32_t'
|-TypedefDecl 0x15000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158055df0 '__SVInt64_t'
|-TypedefDecl 0x15000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158055e10 '__SVUint8_t'
|-TypedefDecl 0x15000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158055e30 '__SVUint16_t'
|-TypedefDecl 0x15000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158055e50 '__SVUint32_t'
|-TypedefDecl 0x15000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158055e70 '__SVUint64_t'
|-TypedefDecl 0x15000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158055e90 '__SVFloat16_t'
|-TypedefDecl 0x15000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1580560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1580560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1580560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1580561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1580561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1580561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1580562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1580562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1580562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158056390 '__SVBool_t'
|-TypedefDecl 0x15000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1580563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1580563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1580563f0 '__SVCount_t'
|-TypedefDecl 0x15000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
|-TypedefDecl 0x15000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
|-FunctionDecl 0x15000ddf8 <dataset_diviso_filec/func12773_vuln.c:1:1, line:54:1> line:1:1 invalid cib_recv_tls 'int (int *)'
| |-ParmVarDecl 0x15000dd28 <col:14, col:31> col:31 invalid session 'int *'
| `-CompoundStmt 0x15080a450 <line:2:1, line:54:1>
|   |-DeclStmt 0x15000df60 <line:3:5, col:21>
|   | `-VarDecl 0x15000dec0 <col:5, col:17> col:11 used buf 'char *' cinit
|   |   `-RecoveryExpr 0x15000df40 <col:17> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15000e018 <line:5:5, col:15>
|   | `-VarDecl 0x15000df90 <col:5, col:14> col:9 used rc 'int' cinit
|   |   `-IntegerLiteral 0x15000dff8 <col:14> 'int' 0
|   |-DeclStmt 0x15000e0d0 <line:6:5, col:16>
|   | `-VarDecl 0x15000e048 <col:5, col:15> col:9 used len 'int' cinit
|   |   `-IntegerLiteral 0x15000e0b0 <col:15> 'int' 0
|   |-DeclStmt 0x15000e188 <line:7:5, col:26>
|   | `-VarDecl 0x15000e100 <col:5, col:22> col:9 used chunk_size 'int' cinit
|   |   `-IntegerLiteral 0x15000e168 <col:22> 'int' 1024
|   |-IfStmt 0x15000e298 <line:9:5, line:11:5>
|   | |-BinaryOperator 0x15000e218 <line:9:9, col:20> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x15000e1a0 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x15000e1f8 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15000e280 <col:26, line:11:5>
|   |   `-ReturnStmt 0x15000e270 <line:10:9, col:16>
|   |     `-RecoveryExpr 0x15000e250 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1581232f8 <line:13:5, col:31> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x15000e2b8 <col:5> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   | `-ImplicitCastExpr 0x1581232e0 <col:11, col:31> 'char *' <BitCast>
|   |   `-CallExpr 0x158123268 <col:11, col:31> 'void *'
|   |     |-ImplicitCastExpr 0x158123250 <col:11> 'void *(*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1581231a0 <col:11> 'void *(unsigned long, unsigned long)' Function 0x158122f90 'calloc' 'void *(unsigned long, unsigned long)'
|   |     |-ImplicitCastExpr 0x158123298 <col:18> 'unsigned long' <IntegralCast>
|   |     | `-IntegerLiteral 0x1581231c0 <col:18> 'int' 1
|   |     `-ImplicitCastExpr 0x1581232c8 <col:21> 'unsigned long' <IntegralCast>
|   |       `-ImplicitCastExpr 0x1581232b0 <col:21> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1581231e0 <col:21> 'int' lvalue Var 0x15000e100 'chunk_size' 'int'
|   |-WhileStmt 0x15080a168 <line:15:5, line:49:5>
|   | |-RecoveryExpr 0x158123330 <line:15:12> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15080a140 <col:18, line:49:5>
|   |   |-BinaryOperator 0x158123648 <line:17:9, col:64> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x158123370 <col:9> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |   | `-CallExpr 0x158123610 <col:14, col:64> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1581234f0 <col:14> 'int ()' Function 0x158123438 'gnutls_record_recv' 'int ()'
|   |   |   |-UnaryOperator 0x158123548 <col:33, col:34> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x158123530 <col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |   `-RecoveryExpr 0x158123510 <col:34> '<dependent type>' contains-errors lvalue
|   |   |   |-BinaryOperator 0x1581235d0 <col:43, col:49> 'char *' contains-errors '+'
|   |   |   | |-ImplicitCastExpr 0x1581235a0 <col:43> 'char *' contains-errors <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x158123560 <col:43> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1581235b8 <col:49> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x158123580 <col:49> 'int' lvalue Var 0x15000e048 'len' 'int'
|   |   |   `-DeclRefExpr 0x1581235f0 <col:54> 'int' lvalue Var 0x15000e100 'chunk_size' 'int'
|   |   |-CallExpr 0x158123860 <line:18:9, col:35> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x158123748 <col:9> 'int ()' Function 0x158123690 'crm_trace' 'int ()'
|   |   | |-StringLiteral 0x1581237b0 <col:19> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x1581237d0 <col:26> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |   | `-RecoveryExpr 0x158123840 <col:30> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x15080a110 <line:20:9, line:48:9> has_else
|   |     |-BinaryOperator 0x1581239e8 <line:20:13, col:49> 'int' contains-errors '||'
|   |     | |-BinaryOperator 0x158123988 <col:13, col:19> 'int' contains-errors '=='
|   |     | | |-DeclRefExpr 0x158123898 <col:13> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |     | | `-RecoveryExpr 0x158123968 <col:19> '<dependent type>' contains-errors lvalue
|   |     | `-BinaryOperator 0x1581239c8 <col:43, col:49> 'int' contains-errors '=='
|   |     |   |-DeclRefExpr 0x1581238f0 <col:43> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |     |   `-RecoveryExpr 0x1581239a8 <col:49> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x158123ad8 <col:65, line:23:9>
|   |     | `-CallExpr 0x158123a98 <line:21:13, col:28> 'int'
|   |     |   |-ImplicitCastExpr 0x158123a80 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x158123a08 <col:13> 'int ()' Function 0x158123690 'crm_trace' 'int ()'
|   |     |   `-ImplicitCastExpr 0x158123ac0 <col:23> 'char *' <ArrayToPointerDecay>
|   |     |     `-StringLiteral 0x158123a28 <col:23> 'char[4]' lvalue "STR"
|   |     `-IfStmt 0x15080a0e0 <line:23:16, line:48:9> has_else
|   |       |-BinaryOperator 0x158123b68 <line:23:20, col:26> 'int' contains-errors '=='
|   |       | |-DeclRefExpr 0x158123af0 <col:20> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |       | `-RecoveryExpr 0x158123b48 <col:26> '<dependent type>' contains-errors lvalue
|   |       |-CompoundStmt 0x1581250a8 <col:61, line:27:9>
|   |       | |-CallExpr 0x158125000 <line:24:13, col:28> 'int'
|   |       | | |-ImplicitCastExpr 0x158123bc8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | | `-DeclRefExpr 0x158123b88 <col:13> 'int ()' Function 0x158123690 'crm_trace' 'int ()'
|   |       | | `-ImplicitCastExpr 0x158125028 <col:23> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x158123ba8 <col:23> 'char[4]' lvalue "STR"
|   |       | `-GotoStmt 0x158125090 <line:25:13, col:18> 'bail' 0x158125040
|   |       `-IfStmt 0x15080a0b0 <line:27:16, line:48:9> has_else
|   |         |-BinaryOperator 0x158125120 <line:27:20, col:25> 'int' '<'
|   |         | |-ImplicitCastExpr 0x158125108 <col:20> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1581250c8 <col:20> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |         | `-IntegerLiteral 0x1581250e8 <col:25> 'int' 0
|   |         |-CompoundStmt 0x158125490 <col:28, line:31:9>
|   |         | |-CallExpr 0x158125410 <line:28:13, col:51> 'int'
|   |         | | |-ImplicitCastExpr 0x1581253f8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |         | | | `-DeclRefExpr 0x158125220 <col:13> 'int ()' Function 0x158125168 'crm_err' 'int ()'
|   |         | | |-ImplicitCastExpr 0x158125448 <col:21> 'char *' <ArrayToPointerDecay>
|   |         | | | `-StringLiteral 0x158125240 <col:21> 'char[4]' lvalue "STR"
|   |         | | |-CallExpr 0x158125398 <col:28, col:46> 'int'
|   |         | | | |-ImplicitCastExpr 0x158125380 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |         | | | | `-DeclRefExpr 0x158125340 <col:28> 'int ()' Function 0x158125288 'gnutls_strerror' 'int ()'
|   |         | | | `-ImplicitCastExpr 0x1581253c0 <col:44> 'int' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x158125360 <col:44> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |         | | `-ImplicitCastExpr 0x158125460 <col:49> 'int' <LValueToRValue>
|   |         | |   `-DeclRefExpr 0x1581253d8 <col:49> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |         | `-GotoStmt 0x158125478 <line:29:13, col:18> 'bail' 0x158125040
|   |         `-IfStmt 0x15080a080 <line:31:16, line:48:9> has_else
|   |           |-BinaryOperator 0x158125520 <line:31:20, col:26> 'int' '=='
|   |           | |-ImplicitCastExpr 0x1581254f0 <col:20> 'int' <LValueToRValue>
|   |           | | `-DeclRefExpr 0x1581254b0 <col:20> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |           | `-ImplicitCastExpr 0x158125508 <col:26> 'int' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x1581254d0 <col:26> 'int' lvalue Var 0x15000e100 'chunk_size' 'int'
|   |           |-CompoundStmt 0x158125d98 <col:38, line:38:9>
|   |           | |-CompoundAssignOperator 0x158125598 <line:32:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           | | |-DeclRefExpr 0x158125540 <col:13> 'int' lvalue Var 0x15000e048 'len' 'int'
|   |           | | `-ImplicitCastExpr 0x158125580 <col:20> 'int' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x158125560 <col:20> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |           | |-CompoundAssignOperator 0x158125608 <line:33:13, col:27> 'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           | | |-DeclRefExpr 0x1581255c8 <col:13> 'int' lvalue Var 0x15000e100 'chunk_size' 'int'
|   |           | | `-IntegerLiteral 0x1581255e8 <col:27> 'int' 2
|   |           | |-BinaryOperator 0x158125a78 <line:34:13, col:48> 'char *' contains-errors '='
|   |           | | |-DeclRefExpr 0x158125638 <col:13> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   |           | | `-ImplicitCastExpr 0x158125a60 <col:19, col:48> 'char *' contains-errors <BitCast>
|   |           | |   `-CallExpr 0x1581259e8 <col:19, col:48> 'void *' contains-errors
|   |           | |     |-ImplicitCastExpr 0x1581259d0 <col:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
|   |           | |     | `-DeclRefExpr 0x1581258b0 <col:19> 'void *(void *, unsigned long)' Function 0x1581256a0 'realloc' 'void *(void *, unsigned long)'
|   |           | |     |-ImplicitCastExpr 0x158125a30 <col:27> 'void *' contains-errors <BitCast>
|   |           | |     | `-ImplicitCastExpr 0x158125a18 <col:27> 'char *' contains-errors <LValueToRValue>
|   |           | |     |   `-DeclRefExpr 0x1581258d0 <col:27> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   |           | |     `-ImplicitCastExpr 0x158125a48 <col:32, col:38> 'unsigned long' <IntegralCast>
|   |           | |       `-BinaryOperator 0x158125960 <col:32, col:38> 'int' '+'
|   |           | |         |-ImplicitCastExpr 0x158125930 <col:32> 'int' <LValueToRValue>
|   |           | |         | `-DeclRefExpr 0x1581258f0 <col:32> 'int' lvalue Var 0x15000e048 'len' 'int'
|   |           | |         `-ImplicitCastExpr 0x158125948 <col:38> 'int' <LValueToRValue>
|   |           | |           `-DeclRefExpr 0x158125910 <col:38> 'int' lvalue Var 0x15000e100 'chunk_size' 'int'
|   |           | |-CallExpr 0x158125b68 <line:35:13, col:45> 'int'
|   |           | | |-ImplicitCastExpr 0x158125b50 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |           | | | `-DeclRefExpr 0x158125a98 <col:13> 'int ()' Function 0x158123690 'crm_trace' 'int ()'
|   |           | | |-ImplicitCastExpr 0x158125b98 <col:23> 'char *' <ArrayToPointerDecay>
|   |           | | | `-StringLiteral 0x158125ab8 <col:23> 'char[4]' lvalue "STR"
|   |           | | `-CStyleCastExpr 0x158125b28 <col:30, col:35> 'int' <NoOp>
|   |           | |   `-ImplicitCastExpr 0x158125b10 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |           | |     `-DeclRefExpr 0x158125ad8 <col:35> 'int' lvalue Var 0x15000e100 'chunk_size' 'int'
|   |           | `-CallExpr 0x158125d70 <line:36:13, col:35> '<dependent type>' contains-errors
|   |           |   |-DeclRefExpr 0x158125c90 <col:13> 'int ()' Function 0x158125bd8 'CRM_ASSERT' 'int ()'
|   |           |   `-BinaryOperator 0x158125d50 <col:24, col:31> 'int' contains-errors '!='
|   |           |     |-DeclRefExpr 0x158125cb0 <col:24> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   |           |     `-RecoveryExpr 0x158125d30 <col:31> '<dependent type>' contains-errors lvalue
|   |           `-IfStmt 0x15080a050 <line:38:16, line:48:9> has_else
|   |             |-BinaryOperator 0x158125f48 <line:38:20, col:41> 'int' contains-errors '!='
|   |             | |-ImplicitCastExpr 0x158125f30 <col:20, col:36> 'int' contains-errors <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x158125f18 <col:20, col:36> 'char' contains-errors <LValueToRValue>
|   |             | |   `-ArraySubscriptExpr 0x158125ed8 <col:20, col:36> 'char' contains-errors lvalue
|   |             | |     |-ImplicitCastExpr 0x158125ec0 <col:20> 'char *' contains-errors <LValueToRValue>
|   |             | |     | `-DeclRefExpr 0x158125dd0 <col:20> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   |             | |     `-BinaryOperator 0x158125ea0 <col:24, col:35> 'int' '-'
|   |             | |       |-BinaryOperator 0x158125e60 <col:24, col:30> 'int' '+'
|   |             | |       | |-ImplicitCastExpr 0x158125e30 <col:24> 'int' <LValueToRValue>
|   |             | |       | | `-DeclRefExpr 0x158125df0 <col:24> 'int' lvalue Var 0x15000e048 'len' 'int'
|   |             | |       | `-ImplicitCastExpr 0x158125e48 <col:30> 'int' <LValueToRValue>
|   |             | |       |   `-DeclRefExpr 0x158125e10 <col:30> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |             | |       `-IntegerLiteral 0x158125e80 <col:35> 'int' 1
|   |             | `-IntegerLiteral 0x158125ef8 <col:41> 'int' 0
|   |             |-CompoundStmt 0x150809e88 <col:44, line:45:9>
|   |             | |-CallExpr 0x150809a28 <line:39:13, col:66> 'int' contains-errors
|   |             | | |-ImplicitCastExpr 0x150809a10 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |             | | | `-DeclRefExpr 0x158125f68 <col:13> 'int ()' Function 0x158123690 'crm_trace' 'int ()'
|   |             | | |-ImplicitCastExpr 0x150809a60 <col:23> 'char *' <ArrayToPointerDecay>
|   |             | | | `-StringLiteral 0x158125f88 <col:23> 'char[4]' lvalue "STR"
|   |             | | |-ImplicitCastExpr 0x150809a90 <col:30, col:46> 'int' contains-errors <IntegralCast>
|   |             | | | `-ImplicitCastExpr 0x150809a78 <col:30, col:46> 'char' contains-errors <LValueToRValue>
|   |             | | |   `-ArraySubscriptExpr 0x1508098c8 <col:30, col:46> 'char' contains-errors lvalue
|   |             | | |     |-ImplicitCastExpr 0x1508098b0 <col:30> 'char *' contains-errors <LValueToRValue>
|   |             | | |     | `-DeclRefExpr 0x158125fa8 <col:30> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   |             | | |     `-BinaryOperator 0x150809890 <col:34, col:45> 'int' '-'
|   |             | | |       |-BinaryOperator 0x150809850 <col:34, col:40> 'int' '+'
|   |             | | |       | |-ImplicitCastExpr 0x150809820 <col:34> 'int' <LValueToRValue>
|   |             | | |       | | `-DeclRefExpr 0x158125fc8 <col:34> 'int' lvalue Var 0x15000e048 'len' 'int'
|   |             | | |       | `-ImplicitCastExpr 0x150809838 <col:40> 'int' <LValueToRValue>
|   |             | | |       |   `-DeclRefExpr 0x150809800 <col:40> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |             | | |       `-IntegerLiteral 0x150809870 <col:45> 'int' 1
|   |             | | `-ImplicitCastExpr 0x150809ac0 <col:49, col:65> 'int' contains-errors <IntegralCast>
|   |             | |   `-ImplicitCastExpr 0x150809aa8 <col:49, col:65> 'char' contains-errors <LValueToRValue>
|   |             | |     `-ArraySubscriptExpr 0x1508099f0 <col:49, col:65> 'char' contains-errors lvalue
|   |             | |       |-ImplicitCastExpr 0x1508099d8 <col:49> 'char *' contains-errors <LValueToRValue>
|   |             | |       | `-DeclRefExpr 0x1508098e8 <col:49> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   |             | |       `-BinaryOperator 0x1508099b8 <col:53, col:64> 'int' '-'
|   |             | |         |-BinaryOperator 0x150809978 <col:53, col:59> 'int' '+'
|   |             | |         | |-ImplicitCastExpr 0x150809948 <col:53> 'int' <LValueToRValue>
|   |             | |         | | `-DeclRefExpr 0x150809908 <col:53> 'int' lvalue Var 0x15000e048 'len' 'int'
|   |             | |         | `-ImplicitCastExpr 0x150809960 <col:59> 'int' <LValueToRValue>
|   |             | |         |   `-DeclRefExpr 0x150809928 <col:59> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |             | |         `-IntegerLiteral 0x150809998 <col:64> 'int' 1
|   |             | |-CallExpr 0x150809ba8 <line:40:13, col:45> 'int'
|   |             | | |-ImplicitCastExpr 0x150809b90 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |             | | | `-DeclRefExpr 0x150809ad8 <col:13> 'int ()' Function 0x158123690 'crm_trace' 'int ()'
|   |             | | |-ImplicitCastExpr 0x150809bd8 <col:23> 'char *' <ArrayToPointerDecay>
|   |             | | | `-StringLiteral 0x150809af8 <col:23> 'char[4]' lvalue "STR"
|   |             | | `-CStyleCastExpr 0x150809b68 <col:30, col:35> 'int' <NoOp>
|   |             | |   `-ImplicitCastExpr 0x150809b50 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |             | |     `-DeclRefExpr 0x150809b18 <col:35> 'int' lvalue Var 0x15000e100 'chunk_size' 'int'
|   |             | |-CompoundAssignOperator 0x150809c48 <line:41:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |             | | |-DeclRefExpr 0x150809bf0 <col:13> 'int' lvalue Var 0x15000e048 'len' 'int'
|   |             | | `-ImplicitCastExpr 0x150809c30 <col:20> 'int' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x150809c10 <col:20> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |             | `-BinaryOperator 0x150809e28 <line:42:13, col:48> 'char *' contains-errors '='
|   |             |   |-DeclRefExpr 0x150809c78 <col:13> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   |             |   `-ImplicitCastExpr 0x150809e10 <col:19, col:48> 'char *' contains-errors <BitCast>
|   |             |     `-CallExpr 0x150809d98 <col:19, col:48> 'void *' contains-errors
|   |             |       |-ImplicitCastExpr 0x150809d80 <col:19> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
|   |             |       | `-DeclRefExpr 0x150809c98 <col:19> 'void *(void *, unsigned long)' Function 0x1581256a0 'realloc' 'void *(void *, unsigned long)'
|   |             |       |-ImplicitCastExpr 0x150809de0 <col:27> 'void *' contains-errors <BitCast>
|   |             |       | `-ImplicitCastExpr 0x150809dc8 <col:27> 'char *' contains-errors <LValueToRValue>
|   |             |       |   `-DeclRefExpr 0x150809cb8 <col:27> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   |             |       `-ImplicitCastExpr 0x150809df8 <col:32, col:38> 'unsigned long' <IntegralCast>
|   |             |         `-BinaryOperator 0x150809d48 <col:32, col:38> 'int' '+'
|   |             |           |-ImplicitCastExpr 0x150809d18 <col:32> 'int' <LValueToRValue>
|   |             |           | `-DeclRefExpr 0x150809cd8 <col:32> 'int' lvalue Var 0x15000e048 'len' 'int'
|   |             |           `-ImplicitCastExpr 0x150809d30 <col:38> 'int' <LValueToRValue>
|   |             |             `-DeclRefExpr 0x150809cf8 <col:38> 'int' lvalue Var 0x15000e100 'chunk_size' 'int'
|   |             `-CompoundStmt 0x15080a030 <line:45:16, line:48:9>
|   |               |-CallExpr 0x150809f88 <line:46:13, col:37> 'int'
|   |               | |-ImplicitCastExpr 0x150809f70 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |               | | `-DeclRefExpr 0x150809eb8 <col:13> 'int ()' Function 0x158123690 'crm_trace' 'int ()'
|   |               | |-ImplicitCastExpr 0x150809fb8 <col:23> 'char *' <ArrayToPointerDecay>
|   |               | | `-StringLiteral 0x150809ed8 <col:23> 'char[4]' lvalue "STR"
|   |               | `-CStyleCastExpr 0x150809f48 <col:30, col:35> 'int' <NoOp>
|   |               |   `-ImplicitCastExpr 0x150809f30 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |               |     `-DeclRefExpr 0x150809ef8 <col:35> 'int' lvalue Var 0x15000df90 'rc' 'int'
|   |               `-ReturnStmt 0x15080a020 <line:47:13, col:20>
|   |                 `-ImplicitCastExpr 0x15080a008 <col:20> 'int' contains-errors <PointerToIntegral>
|   |                   `-ImplicitCastExpr 0x150809ff0 <col:20> 'char *' contains-errors <LValueToRValue>
|   |                     `-DeclRefExpr 0x150809fd0 <col:20> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|   `-LabelStmt 0x15080a430 <line:50:3, line:51:13> 'bail'
|     `-CallExpr 0x15080a3d8 <col:5, col:13> 'void' contains-errors
|       |-ImplicitCastExpr 0x15080a3c0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x15080a338 <col:5> 'void (void *)' Function 0x15080a1c8 'free' 'void (void *)'
|       `-ImplicitCastExpr 0x15080a418 <col:10> 'void *' contains-errors <BitCast>
|         `-ImplicitCastExpr 0x15080a400 <col:10> 'char *' contains-errors <LValueToRValue>
|           `-DeclRefExpr 0x15080a358 <col:10> 'char *' contains-errors lvalue Var 0x15000dec0 'buf' 'char *'
|-FunctionDecl 0x158122f90 <line:13:11> col:11 implicit used calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x158123090 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1581230f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x158123038 <<invalid sloc>> Implicit 868
| `-AllocSizeAttr 0x158123170 <col:11> Implicit 1 2
|-FunctionDecl 0x1581256a0 <line:34:19> col:19 implicit used realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x1581257a0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x158125808 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x158125748 <<invalid sloc>> Implicit 872
| `-AllocSizeAttr 0x158125880 <col:19> Implicit 2
`-FunctionDecl 0x15080a1c8 <line:51:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x15080a2c8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x15080a270 <<invalid sloc>> Implicit 873
