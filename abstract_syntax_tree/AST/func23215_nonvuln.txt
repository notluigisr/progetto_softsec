TranslationUnitDecl 0x153055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1530564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x153055bd0 '__int128'
|-TypedefDecl 0x153056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x153055bf0 'unsigned __int128'
|-TypedefDecl 0x15380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15380bc00 'struct __NSConstantString_tag'
|   `-Record 0x153056580 '__NSConstantString_tag'
|-TypedefDecl 0x15380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x153055d90 '__SVInt8_t'
|-TypedefDecl 0x15380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x153055db0 '__SVInt16_t'
|-TypedefDecl 0x15380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x153055dd0 '__SVInt32_t'
|-TypedefDecl 0x15380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x153055df0 '__SVInt64_t'
|-TypedefDecl 0x15380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x153055e10 '__SVUint8_t'
|-TypedefDecl 0x15380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x153055e30 '__SVUint16_t'
|-TypedefDecl 0x15380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x153055e50 '__SVUint32_t'
|-TypedefDecl 0x15380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x153055e70 '__SVUint64_t'
|-TypedefDecl 0x15380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x153055e90 '__SVFloat16_t'
|-TypedefDecl 0x15380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x153055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x153055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x153055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x153055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x153055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x153055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x153055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x153055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x153055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x153055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x153055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x153056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x153056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x153056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x153056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x153056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1530560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1530560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1530560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x153056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x153056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x153056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x153056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x153056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1530561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1530561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1530561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x153056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x153056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x153056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x153056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x153056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1530562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1530562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1530562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x153056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x153056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x153056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x153056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x153056390 '__SVBool_t'
|-TypedefDecl 0x15380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1530563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1530563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1530563f0 '__SVCount_t'
|-TypedefDecl 0x15380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-TypedefDecl 0x15380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-FunctionDecl 0x1538279e8 <dataset_diviso_filec/func23215_nonvuln.c:1:1, line:83:1> line:1:12 invalid pack_ber_group 'int (enum response_types, const char *, const char *, int, char **, struct sss_nss_kv *, struct berval **)' static
| |-ParmVarDecl 0x15380e1f8 <col:27, col:47> col:47 invalid response_type 'enum response_types'
| |-ParmVarDecl 0x15380e278 <line:2:27, col:39> col:39 used domain_name 'const char *'
| |-ParmVarDecl 0x15380e2f8 <col:52, col:64> col:64 used group_name 'const char *'
| |-ParmVarDecl 0x15380e390 <line:3:27, col:33> col:33 invalid gid 'int'
| |-ParmVarDecl 0x153827448 <col:38, col:45> col:45 used members 'char **'
| |-ParmVarDecl 0x153827618 <col:54, col:73> col:73 used kv_list 'struct sss_nss_kv *'
| |-ParmVarDecl 0x153827848 <line:4:27, col:43> col:43 used berval 'struct berval **'
| `-CompoundStmt 0x15382f7b8 <line:5:1, line:83:1>
|   |-DeclStmt 0x153827b78 <line:7:5, col:12>
|   | `-VarDecl 0x153827b10 <col:5, col:9> col:9 used ret 'int'
|   |-UnaryExprOrTypeTraitExpr 0x153827be8 <line:8:5, col:12> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x153827bc8 <col:12> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x153827c88 <line:9:5, col:16>
|   | `-VarDecl 0x153827c20 <col:5, col:11> col:11 used locat 'char *'
|   |-DeclStmt 0x153827d58 <line:10:5, col:34>
|   | `-VarDecl 0x153827cb8 <col:5, col:30> col:11 used short_group_name 'char *' cinit
|   |   `-RecoveryExpr 0x153827d38 <col:30> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x153828018 <line:12:5, col:41> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x153827d70 <col:5> 'char *' contains-errors lvalue Var 0x153827cb8 'short_group_name' 'char *'
|   | `-CallExpr 0x153827fd8 <col:24, col:41> 'char *'
|   |   |-ImplicitCastExpr 0x153827fc0 <col:24> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x153827f38 <col:24> 'char *(const char *)' Function 0x153827dc8 'strdup' 'char *(const char *)'
|   |   `-ImplicitCastExpr 0x153828000 <col:31> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x153827f58 <col:31> 'const char *' lvalue ParmVar 0x15380e2f8 'group_name' 'const char *'
|   |-IfStmt 0x15382dbe0 <line:13:5, line:20:5>
|   | |-RecoveryExpr 0x153828370 <line:13:9, col:70> '_Bool' contains-errors
|   | `-CompoundStmt 0x15382dbc8 <col:76, line:20:5>
|   |   `-IfStmt 0x15382db98 <line:14:9, line:19:9> has_else
|   |     |-BinaryOperator 0x15382d978 <line:14:13, col:49> 'int' '=='
|   |     | |-CallExpr 0x15382d8f8 <col:13, col:44> 'int'
|   |     | | |-ImplicitCastExpr 0x15382d8e0 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x15382d7e0 <col:13> 'int (const char *, const char *)' Function 0x15382d600 'strcasecmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x15382d928 <col:24, col:30> 'const char *' <NoOp>
|   |     | | | `-BinaryOperator 0x15382d858 <col:24, col:30> 'char *' '+'
|   |     | | |   |-ImplicitCastExpr 0x15382d840 <col:24> 'char *' <LValueToRValue>
|   |     | | |   | `-DeclRefExpr 0x15382d800 <col:24> 'char *' lvalue Var 0x153827c20 'locat' 'char *'
|   |     | | |   `-IntegerLiteral 0x15382d820 <col:30> 'int' 1
|   |     | | `-ImplicitCastExpr 0x15382d940 <col:33> 'const char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x15382d878 <col:33> 'const char *' lvalue ParmVar 0x15380e278 'domain_name' 'const char *'
|   |     | `-IntegerLiteral 0x15382d958 <col:49> 'int' 0
|   |     |-CompoundStmt 0x15382da60 <col:54, line:16:9>
|   |     | `-BinaryOperator 0x15382da40 <line:15:13, col:24> 'char' '='
|   |     |   |-ArraySubscriptExpr 0x15382d9f0 <col:13, col:20> 'char' lvalue
|   |     |   | |-ImplicitCastExpr 0x15382d9d8 <col:13> 'char *' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x15382d998 <col:13> 'char *' lvalue Var 0x153827c20 'locat' 'char *'
|   |     |   | `-IntegerLiteral 0x15382d9b8 <col:19> 'int' 0
|   |     |   `-ImplicitCastExpr 0x15382da28 <col:24> 'char' <IntegralCast>
|   |     |     `-CharacterLiteral 0x15382da10 <col:24> 'int' 0
|   |     `-CompoundStmt 0x15382db78 <line:16:16, line:19:9>
|   |       |-BinaryOperator 0x15382daf0 <line:17:13, col:19> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x15382da78 <col:13> 'int' lvalue Var 0x153827b10 'ret' 'int'
|   |       | `-RecoveryExpr 0x15382dad0 <col:19> '<dependent type>' contains-errors lvalue
|   |       `-GotoStmt 0x15382db60 <line:18:13, col:18> 'done' 0x15382db10
|   |-IfStmt 0x15382df40 <line:23:5, line:26:5>
|   | |-BinaryOperator 0x15382de50 <line:23:9, col:16> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x15382de10 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x15382de30 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15382df20 <col:22, line:26:5>
|   |   |-BinaryOperator 0x15382dee8 <line:24:9, col:15> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x15382de70 <col:9> 'int' lvalue Var 0x153827b10 'ret' 'int'
|   |   | `-RecoveryExpr 0x15382dec8 <col:15> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x15382df08 <line:25:9, col:14> 'done' 0x15382db10
|   |-IfStmt 0x15382e240 <line:30:5, line:33:5>
|   | |-BinaryOperator 0x15382e1d0 <line:30:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x15382e1b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15382e160 <col:9> 'int' lvalue Var 0x153827b10 'ret' 'int'
|   | | `-UnaryOperator 0x15382e1a0 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x15382e180 <col:17> 'int' 1
|   | `-CompoundStmt 0x15382e228 <col:20, line:33:5>
|   |   `-GotoStmt 0x15382e210 <line:32:9, col:14> 'done' 0x15382db10
|   |-IfStmt 0x15382efb0 <line:35:5, line:63:5>
|   | |-RecoveryExpr 0x15382e280 <line:35:9, col:26> '_Bool' contains-errors
|   | `-CompoundStmt 0x15382ef88 <col:46, line:63:5>
|   |   |-IfStmt 0x15382e3e0 <line:37:9, line:40:9>
|   |   | |-BinaryOperator 0x15382e370 <line:37:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x15382e358 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x15382e300 <col:13> 'int' lvalue Var 0x153827b10 'ret' 'int'
|   |   | | `-UnaryOperator 0x15382e340 <col:20, col:21> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x15382e320 <col:21> 'int' 1
|   |   | `-CompoundStmt 0x15382e3c8 <col:24, line:40:9>
|   |   |   `-GotoStmt 0x15382e3b0 <line:39:13, col:18> 'done' 0x15382db10
|   |   |-IfStmt 0x15382ed20 <line:51:9, line:54:9>
|   |   | |-BinaryOperator 0x15382ecb0 <line:51:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x15382ec98 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x15382ec40 <col:13> 'int' lvalue Var 0x153827b10 'ret' 'int'
|   |   | | `-UnaryOperator 0x15382ec80 <col:20, col:21> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x15382ec60 <col:21> 'int' 1
|   |   | `-CompoundStmt 0x15382ed08 <col:24, line:54:9>
|   |   |   `-GotoStmt 0x15382ecf0 <line:53:13, col:18> 'done' 0x15382db10
|   |   `-IfStmt 0x15382ef68 <line:56:9, line:61:9>
|   |     |-RecoveryExpr 0x15382ed60 <line:56:13, col:24> '_Bool' contains-errors
|   |     `-CompoundStmt 0x15382ef50 <col:30, line:61:9>
|   |       `-IfStmt 0x15382ef30 <line:58:13, line:60:13>
|   |         |-RecoveryExpr 0x15382eee0 <line:58:17, col:24> '_Bool' contains-errors
|   |         `-CompoundStmt 0x15382ef18 <col:38, line:60:13>
|   |           `-GotoStmt 0x15382ef00 <line:59:17, col:22> 'done' 0x15382db10
|   |-IfStmt 0x15382f110 <line:66:5, line:69:5>
|   | |-BinaryOperator 0x15382f0a0 <line:66:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x15382f088 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15382f030 <col:9> 'int' lvalue Var 0x153827b10 'ret' 'int'
|   | | `-UnaryOperator 0x15382f070 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x15382f050 <col:17> 'int' 1
|   | `-CompoundStmt 0x15382f0f8 <col:20, line:69:5>
|   |   `-GotoStmt 0x15382f0e0 <line:68:9, col:14> 'done' 0x15382db10
|   |-IfStmt 0x15382f350 <line:72:5, line:75:5>
|   | |-BinaryOperator 0x15382f2e0 <line:72:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x15382f2c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15382f270 <col:9> 'int' lvalue Var 0x153827b10 'ret' 'int'
|   | | `-UnaryOperator 0x15382f2b0 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x15382f290 <col:17> 'int' 1
|   | `-CompoundStmt 0x15382f338 <col:20, line:75:5>
|   |   `-GotoStmt 0x15382f320 <line:74:9, col:14> 'done' 0x15382db10
|   |-LabelStmt 0x15382f630 <line:79:1, line:80:26> 'done'
|   | `-CallExpr 0x15382f5d8 <col:5, col:26> 'void' contains-errors
|   |   |-ImplicitCastExpr 0x15382f5c0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15382f538 <col:5> 'void (void *)' Function 0x15382f3c8 'free' 'void (void *)'
|   |   `-ImplicitCastExpr 0x15382f618 <col:10> 'void *' contains-errors <BitCast>
|   |     `-ImplicitCastExpr 0x15382f600 <col:10> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x15382f558 <col:10> 'char *' contains-errors lvalue Var 0x153827cb8 'short_group_name' 'char *'
|   `-ReturnStmt 0x15382f7a8 <line:82:5, col:12>
|     `-ImplicitCastExpr 0x15382f790 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15382f770 <col:12> 'int' lvalue Var 0x153827b10 'ret' 'int'
|-FunctionDecl 0x153827dc8 <line:12:24> col:24 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x153827ec8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x153827e70 <<invalid sloc>> Implicit 950
|-FunctionDecl 0x1538280a0 <line:13:18> col:18 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1538281a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x153828208 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x153828148 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x15382d600 <line:14:13> col:13 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x15382d700 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15382d768 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15382d6a8 <<invalid sloc>> Implicit 957
`-FunctionDecl 0x15382f3c8 <line:80:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x15382f4c8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x15382f470 <<invalid sloc>> Implicit 873
