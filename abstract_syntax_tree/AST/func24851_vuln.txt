TranslationUnitDecl 0x12c030208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0310b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c0307d0 '__int128'
|-TypedefDecl 0x12c031128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c0307f0 'unsigned __int128'
|-TypedefDecl 0x12b01e230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b01e000 'struct __NSConstantString_tag'
|   `-Record 0x12c031180 '__NSConstantString_tag'
|-TypedefDecl 0x12b01e298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c030990 '__SVInt8_t'
|-TypedefDecl 0x12b01e300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c0309b0 '__SVInt16_t'
|-TypedefDecl 0x12b01e368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c0309d0 '__SVInt32_t'
|-TypedefDecl 0x12b01e3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c0309f0 '__SVInt64_t'
|-TypedefDecl 0x12b01e438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c030a10 '__SVUint8_t'
|-TypedefDecl 0x12b01e4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c030a30 '__SVUint16_t'
|-TypedefDecl 0x12b01e508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c030a50 '__SVUint32_t'
|-TypedefDecl 0x12b01e570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c030a70 '__SVUint64_t'
|-TypedefDecl 0x12b01e5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c030a90 '__SVFloat16_t'
|-TypedefDecl 0x12b01e640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c030ab0 '__SVFloat32_t'
|-TypedefDecl 0x12b01e6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c030ad0 '__SVFloat64_t'
|-TypedefDecl 0x12b01e710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c030af0 '__SVBfloat16_t'
|-TypedefDecl 0x12b01e778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c030b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b01e7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c030b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b01e848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c030b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b01e8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c030b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b01e918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c030b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b01e980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c030bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b01e9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c030bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b01ea50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c030bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b01eab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c030c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b01eb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c030c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b01eb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c030c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b01ebf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c030c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b01ec58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c030c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12b01ecc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c030cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b01ed28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c030cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b01ed90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c030cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b01edf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c030d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b01ee60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c030d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b01eec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c030d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b01ef30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c030d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b01ef98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c030d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b030000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c030db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b030068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c030dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b0300d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c030df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b030138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c030e10 '__clang_svint8x4_t'
|-TypedefDecl 0x12b0301a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c030e30 '__clang_svint16x4_t'
|-TypedefDecl 0x12b030208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c030e50 '__clang_svint32x4_t'
|-TypedefDecl 0x12b030270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c030e70 '__clang_svint64x4_t'
|-TypedefDecl 0x12b0302d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c030e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b030340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c030eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b0303a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c030ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b030410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c030ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b030478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c030f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b0304e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c030f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b030548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c030f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b0305b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c030f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b030618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c030f90 '__SVBool_t'
|-TypedefDecl 0x12b030680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c030fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b0306e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c030fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b030750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c030ff0 '__SVCount_t'
|-TypedefDecl 0x12b0307f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b0307b0 'char *'
|   `-BuiltinType 0x12c0302b0 'char'
|-TypedefDecl 0x12b030868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b0307b0 'char *'
|   `-BuiltinType 0x12c0302b0 'char'
|-FunctionDecl 0x12b030918 <dataset_diviso_filec/func24851_vuln.c:1:1, line:20:1> line:1:1 stub_charset 'int ()'
| `-CompoundStmt 0x12b04db98 <line:2:1, line:20:1>
|   |-DeclStmt 0x12b030ba8 <line:3:3, col:23>
|   | |-VarDecl 0x12b030a20 <col:3, col:9> col:9 used locale 'char *'
|   | |-VarDecl 0x12b030aa0 <col:3, col:18> col:18 used s 'char *'
|   | `-VarDecl 0x12b030b20 <col:3, col:22> col:22 used t 'char *'
|   |-BinaryOperator 0x12b04ce70 <line:5:3, col:33> 'char *' '='
|   | |-DeclRefExpr 0x12b030bc0 <col:3> 'char *' lvalue Var 0x12b030a20 'locale' 'char *'
|   | `-ImplicitCastExpr 0x12b030de8 <col:12, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x12b030da8 <col:12, col:33> 'int'
|   |     |-ImplicitCastExpr 0x12b030d90 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12b030cd8 <col:12> 'int ()' Function 0x12b030c20 'get_locale_var' 'int ()'
|   |     `-ImplicitCastExpr 0x12b030dd0 <col:28> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x12b030d40 <col:28> 'char[4]' lvalue "STR"
|   |-IfStmt 0x12b04d060 <line:6:3, line:7:12>
|   | |-BinaryOperator 0x12b04cfe0 <line:6:7, col:33> 'int' '||'
|   | | |-BinaryOperator 0x12b04cf00 <col:7, col:17> 'int' '=='
|   | | | |-ImplicitCastExpr 0x12b04ced0 <col:7> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x12b04ce90 <col:7> 'char *' lvalue Var 0x12b030a20 'locale' 'char *'
|   | | | `-ImplicitCastExpr 0x12b04cee8 <col:17> 'char *' <NullToPointer>
|   | | |   `-IntegerLiteral 0x12b04ceb0 <col:17> 'int' 0
|   | | `-BinaryOperator 0x12b04cfc0 <col:22, col:33> 'int' '=='
|   | |   |-ImplicitCastExpr 0x12b04cfa8 <col:22, col:23> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x12b04cf90 <col:22, col:23> 'char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x12b04cf58 <col:22, col:23> 'char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x12b04cf40 <col:23> 'char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x12b04cf20 <col:23> 'char *' lvalue Var 0x12b030a20 'locale' 'char *'
|   | |   `-IntegerLiteral 0x12b04cf70 <col:33> 'int' 0
|   | `-ReturnStmt 0x12b04d050 <line:7:5, col:12>
|   |   `-ImplicitCastExpr 0x12b04d038 <col:12> 'int' <PointerToIntegral>
|   |     `-ImplicitCastExpr 0x12b04d020 <col:12> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x12b04d000 <col:12> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x12b04d3d8 <line:8:3, col:27> 'char *' '='
|   | |-DeclRefExpr 0x12b04d080 <col:3> 'char *' lvalue Var 0x12b030aa0 's' 'char *'
|   | `-CallExpr 0x12b04d378 <col:7, col:27> 'char *'
|   |   |-ImplicitCastExpr 0x12b04d360 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12b04d2c0 <col:7> 'char *(const char *, int)' Function 0x12b04d0e0 'strrchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x12b04d3c0 <col:16> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x12b04d3a8 <col:16> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12b04d2e0 <col:16> 'char *' lvalue Var 0x12b030a20 'locale' 'char *'
|   |   `-CharacterLiteral 0x12b04d300 <col:24> 'int' 46
|   `-IfStmt 0x12b04db68 <line:9:3, line:19:12> has_else
|     |-ImplicitCastExpr 0x12b04d418 <line:9:7> 'char *' <LValueToRValue>
|     | `-DeclRefExpr 0x12b04d3f8 <col:7> 'char *' lvalue Var 0x12b030aa0 's' 'char *'
|     |-CompoundStmt 0x12b04d898 <line:10:5, line:15:5>
|     | |-BinaryOperator 0x12b04d718 <line:11:7, col:25> 'char *' '='
|     | | |-DeclRefExpr 0x12b04d430 <col:7> 'char *' lvalue Var 0x12b030b20 't' 'char *'
|     | | `-CallExpr 0x12b04d6b8 <col:11, col:25> 'char *'
|     | |   |-ImplicitCastExpr 0x12b04d6a0 <col:11> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|     | |   | `-DeclRefExpr 0x12b04d630 <col:11> 'char *(const char *, int)' Function 0x12b04d450 'strchr' 'char *(const char *, int)'
|     | |   |-ImplicitCastExpr 0x12b04d700 <col:19> 'const char *' <NoOp>
|     | |   | `-ImplicitCastExpr 0x12b04d6e8 <col:19> 'char *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x12b04d650 <col:19> 'char *' lvalue Var 0x12b030aa0 's' 'char *'
|     | |   `-CharacterLiteral 0x12b04d670 <col:22> 'int' 64
|     | |-IfStmt 0x12b04d818 <line:12:7, line:13:7>
|     | | |-ImplicitCastExpr 0x12b04d758 <line:12:11> 'char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x12b04d738 <col:11> 'char *' lvalue Var 0x12b030b20 't' 'char *'
|     | | `-BinaryOperator 0x12b04d7f8 <line:13:2, col:7> 'char' '='
|     | |   |-UnaryOperator 0x12b04d7a8 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|     | |   | `-ImplicitCastExpr 0x12b04d790 <col:3> 'char *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x12b04d770 <col:3> 'char *' lvalue Var 0x12b030b20 't' 'char *'
|     | |   `-ImplicitCastExpr 0x12b04d7e0 <col:7> 'char' <IntegralCast>
|     | |     `-IntegerLiteral 0x12b04d7c0 <col:7> 'int' 0
|     | `-ReturnStmt 0x12b04d888 <line:14:7, col:16>
|     |   `-ImplicitCastExpr 0x12b04d870 <col:14, col:16> 'int' <PointerToIntegral>
|     |     `-UnaryOperator 0x12b04d858 <col:14, col:16> 'char *' prefix '++'
|     |       `-DeclRefExpr 0x12b04d838 <col:16> 'char *' lvalue Var 0x12b030aa0 's' 'char *'
|     `-IfStmt 0x12b04db38 <line:16:8, line:19:12> has_else
|       |-CallExpr 0x12b04da18 <line:16:12, col:32> 'int'
|       | |-ImplicitCastExpr 0x12b04da00 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x12b04d9a0 <col:12> 'int ()' Function 0x12b04d8e8 'STREQ' 'int ()'
|       | |-ImplicitCastExpr 0x12b04da48 <col:19> 'char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x12b04d9c0 <col:19> 'char *' lvalue Var 0x12b030a20 'locale' 'char *'
|       | `-ImplicitCastExpr 0x12b04da60 <col:27> 'char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x12b04d9e0 <col:27> 'char[4]' lvalue "STR"
|       |-ReturnStmt 0x12b04dac8 <line:17:5, col:12>
|       | `-ImplicitCastExpr 0x12b04dab0 <col:12> 'int' <PointerToIntegral>
|       |   `-ImplicitCastExpr 0x12b04da98 <col:12> 'char *' <ArrayToPointerDecay>
|       |     `-StringLiteral 0x12b04da78 <col:12> 'char[4]' lvalue "STR"
|       `-ReturnStmt 0x12b04db28 <line:19:5, col:12>
|         `-ImplicitCastExpr 0x12b04db10 <col:12> 'int' <PointerToIntegral>
|           `-ImplicitCastExpr 0x12b04daf8 <col:12> 'char *' <ArrayToPointerDecay>
|             `-StringLiteral 0x12b04dad8 <col:12> 'char[4]' lvalue "STR"
|-FunctionDecl 0x12b04d0e0 <line:8:7> col:7 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x12b04d1e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12b04d248 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x12b04d188 <<invalid sloc>> Implicit 896
`-FunctionDecl 0x12b04d450 <line:11:11> col:11 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x12b04d550 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12b04d5b8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12b04d4f8 <<invalid sloc>> Implicit 893
