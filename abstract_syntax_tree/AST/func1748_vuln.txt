TranslationUnitDecl 0x13b055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b0555d0 '__int128'
|-TypedefDecl 0x13b055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b0555f0 'unsigned __int128'
|-TypedefDecl 0x13b125c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b125a00 'struct __NSConstantString_tag'
|   `-Record 0x13b055f80 '__NSConstantString_tag'
|-TypedefDecl 0x13b125c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055790 '__SVInt8_t'
|-TypedefDecl 0x13b125d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b0557b0 '__SVInt16_t'
|-TypedefDecl 0x13b125d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b0557d0 '__SVInt32_t'
|-TypedefDecl 0x13b125dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b0557f0 '__SVInt64_t'
|-TypedefDecl 0x13b125e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055810 '__SVUint8_t'
|-TypedefDecl 0x13b125ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055830 '__SVUint16_t'
|-TypedefDecl 0x13b125f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055850 '__SVUint32_t'
|-TypedefDecl 0x13b125f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055870 '__SVUint64_t'
|-TypedefDecl 0x13b125fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055890 '__SVFloat16_t'
|-TypedefDecl 0x13b126040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b0558b0 '__SVFloat32_t'
|-TypedefDecl 0x13b1260a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b0558d0 '__SVFloat64_t'
|-TypedefDecl 0x13b126110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b0558f0 '__SVBfloat16_t'
|-TypedefDecl 0x13b126178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055910 '__clang_svint8x2_t'
|-TypedefDecl 0x13b1261e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055930 '__clang_svint16x2_t'
|-TypedefDecl 0x13b126248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055950 '__clang_svint32x2_t'
|-TypedefDecl 0x13b1262b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055970 '__clang_svint64x2_t'
|-TypedefDecl 0x13b126318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b126380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b0559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b1263e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b0559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b126450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b0559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b1264b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b126520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b126588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b1265f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b126658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x13b1266c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b126728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b126790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b1267f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b126860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b1268c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b126930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b126998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b127200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b127268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b1272d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b127338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x13b1273a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x13b127408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x13b127470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x13b1274d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b127540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b1275a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b127610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b127678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b1276e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b127748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b1277b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b127818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b055d90 '__SVBool_t'
|-TypedefDecl 0x13b127880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b1278e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b127950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b055df0 '__SVCount_t'
|-TypedefDecl 0x13b1279f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b1279b0 'char *'
|   `-BuiltinType 0x13b0550b0 'char'
|-TypedefDecl 0x13b127a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b1279b0 'char *'
|   `-BuiltinType 0x13b0550b0 'char'
|-FunctionDecl 0x13b140738 <dataset_diviso_filec/func1748_vuln.c:1:1, line:50:1> line:1:12 referenced grep_tree 'int (struct grep_opt *, const char **, struct tree_desc *, const char *, const char *)' static
| |-ParmVarDecl 0x13b128048 <col:22, col:39> col:39 used opt 'struct grep_opt *'
| |-ParmVarDecl 0x13b1280f8 <col:44, col:57> col:57 used paths 'const char **'
| |-ParmVarDecl 0x13b1404c8 <line:2:8, col:26> col:26 used tree 'struct tree_desc *'
| |-ParmVarDecl 0x13b140548 <line:3:8, col:20> col:20 used tree_name 'const char *'
| |-ParmVarDecl 0x13b1405c8 <col:31, col:43> col:43 used base 'const char *'
| `-CompoundStmt 0x13b145960 <line:4:1, line:50:1>
|   |-DeclStmt 0x13b1408d0 <line:5:2, col:9>
|   | `-VarDecl 0x13b140868 <col:2, col:6> col:6 used len 'int'
|   |-DeclStmt 0x13b140988 <line:6:2, col:13>
|   | `-VarDecl 0x13b140900 <col:2, col:12> col:6 used hit 'int' cinit
|   |   `-IntegerLiteral 0x13b140968 <col:12> 'int' 0
|   |-DeclStmt 0x13b140b18 <line:7:2, col:25>
|   | |-RecordDecl 0x13b1409a0 <col:2, col:9> col:9 struct name_entry
|   | `-VarDecl 0x13b140a98 <col:2, col:20> col:20 invalid entry 'struct name_entry'
|   |-DeclStmt 0x13b140bb0 <line:8:2, col:12>
|   | `-VarDecl 0x13b140b48 <col:2, col:8> col:8 used down 'char *'
|   |-DeclStmt 0x13b140ef0 <line:9:2, col:32>
|   | `-VarDecl 0x13b140be0 <col:2, col:31> col:6 used tn_len 'int' cinit
|   |   `-ImplicitCastExpr 0x13b140ed8 <col:15, col:31> 'int' <IntegralCast>
|   |     `-CallExpr 0x13b140e98 <col:15, col:31> 'unsigned long'
|   |       |-ImplicitCastExpr 0x13b140e80 <col:15> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13b140df8 <col:15> 'unsigned long (const char *)' Function 0x13b140c88 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x13b140ec0 <col:22> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13b140e18 <col:22> 'const char *' lvalue ParmVar 0x13b140548 'tree_name' 'const char *'
|   |-DeclStmt 0x13b141218 <line:10:2, col:51>
|   | `-VarDecl 0x13b140f20 <col:2, col:50> col:8 used path_buf 'char *' cinit
|   |   `-CallExpr 0x13b1411f0 <col:19, col:50> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13b1410b0 <col:19> 'int ()' Function 0x13b140ff8 'xmalloc' 'int ()'
|   |     `-BinaryOperator 0x13b1411d0 <col:27, col:47> '<dependent type>' contains-errors '+'
|   |       |-BinaryOperator 0x13b1411b0 <col:27, col:38> '<dependent type>' contains-errors '+'
|   |       | |-RecoveryExpr 0x13b141190 <col:27> '<dependent type>' contains-errors lvalue
|   |       | `-DeclRefExpr 0x13b1410e8 <col:38> 'int' lvalue Var 0x13b140be0 'tn_len' 'int'
|   |       `-IntegerLiteral 0x13b141128 <col:47> 'int' 100
|   |-IfStmt 0x13b1438e0 <line:12:2, line:20:2> has_else
|   | |-ImplicitCastExpr 0x13b141250 <line:12:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13b141230 <col:6> 'int' lvalue Var 0x13b140be0 'tn_len' 'int'
|   | |-CompoundStmt 0x13b143538 <col:14, line:16:2>
|   | | |-BinaryOperator 0x13b1430f0 <line:13:3, col:46> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x13b141268 <col:3> 'int' lvalue Var 0x13b140be0 'tn_len' 'int'
|   | | | `-CallExpr 0x13b143058 <col:12, col:46> 'int' contains-errors
|   | | |   |-ImplicitCastExpr 0x13b143040 <col:12> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x13b142f18 <col:12> 'int (char *, const char *, ...)' Function 0x13b1412d8 'sprintf' 'int (char *, const char *, ...)'
|   | | |   |-ImplicitCastExpr 0x13b143090 <col:20> 'char *' contains-errors <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x13b142f38 <col:20> 'char *' contains-errors lvalue Var 0x13b140f20 'path_buf' 'char *'
|   | | |   |-ImplicitCastExpr 0x13b1430c0 <col:30> 'const char *' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x13b1430a8 <col:30> 'char *' <ArrayToPointerDecay>
|   | | |   |   `-StringLiteral 0x13b142fa0 <col:30> 'char[4]' lvalue "STR"
|   | | |   `-ImplicitCastExpr 0x13b1430d8 <col:37> 'const char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13b142fc0 <col:37> 'const char *' lvalue ParmVar 0x13b140548 'tree_name' 'const char *'
|   | | |-BinaryOperator 0x13b1431c0 <line:14:3, col:21> 'char *' contains-errors '='
|   | | | |-DeclRefExpr 0x13b143110 <col:3> 'char *' lvalue Var 0x13b140b48 'down' 'char *'
|   | | | `-BinaryOperator 0x13b1431a0 <col:10, col:21> 'char *' contains-errors '+'
|   | | |   |-ImplicitCastExpr 0x13b143170 <col:10> 'char *' contains-errors <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x13b143130 <col:10> 'char *' contains-errors lvalue Var 0x13b140f20 'path_buf' 'char *'
|   | | |   `-ImplicitCastExpr 0x13b143188 <col:21> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13b143150 <col:21> 'int' lvalue Var 0x13b140be0 'tn_len' 'int'
|   | | `-CallExpr 0x13b1434d8 <line:15:3, col:20> 'char *'
|   | |   |-ImplicitCastExpr 0x13b1434c0 <col:3> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13b143400 <col:3> 'char *(char *, const char *)' Function 0x13b143220 'strcat' 'char *(char *, const char *)'
|   | |   |-ImplicitCastExpr 0x13b143508 <col:10> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13b143420 <col:10> 'char *' lvalue Var 0x13b140b48 'down' 'char *'
|   | |   `-ImplicitCastExpr 0x13b143520 <col:16> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13b143440 <col:16> 'const char *' lvalue ParmVar 0x13b1405c8 'base' 'const char *'
|   | `-CompoundStmt 0x13b1438c0 <line:17:7, line:20:2>
|   |   |-BinaryOperator 0x13b1435b8 <line:18:3, col:10> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x13b143560 <col:3> 'char *' lvalue Var 0x13b140b48 'down' 'char *'
|   |   | `-ImplicitCastExpr 0x13b1435a0 <col:10> 'char *' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13b143580 <col:10> 'char *' contains-errors lvalue Var 0x13b140f20 'path_buf' 'char *'
|   |   `-CallExpr 0x13b143860 <line:19:3, col:20> 'char *'
|   |     |-ImplicitCastExpr 0x13b143848 <col:3> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b1437b8 <col:3> 'char *(char *, const char *)' Function 0x13b1435d8 'strcpy' 'char *(char *, const char *)'
|   |     |-ImplicitCastExpr 0x13b143890 <col:10> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13b1437d8 <col:10> 'char *' lvalue Var 0x13b140b48 'down' 'char *'
|   |     `-ImplicitCastExpr 0x13b1438a8 <col:16> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13b1437f8 <col:16> 'const char *' lvalue ParmVar 0x13b1405c8 'base' 'const char *'
|   |-BinaryOperator 0x13b143a10 <line:21:2, col:23> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13b143910 <col:2> 'int' lvalue Var 0x13b140868 'len' 'int'
|   | `-ImplicitCastExpr 0x13b1439f8 <col:8, col:23> 'int' contains-errors <IntegralCast>
|   |   `-CallExpr 0x13b1439a0 <col:8, col:23> 'unsigned long' contains-errors
|   |     |-ImplicitCastExpr 0x13b143988 <col:8> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b143930 <col:8> 'unsigned long (const char *)' Function 0x13b140c88 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x13b1439e0 <col:15> 'const char *' contains-errors <NoOp>
|   |       `-ImplicitCastExpr 0x13b1439c8 <col:15> 'char *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x13b143950 <col:15> 'char *' contains-errors lvalue Var 0x13b140f20 'path_buf' 'char *'
|   |-WhileStmt 0x13b1458f8 <line:23:2, line:48:2>
|   | |-CallExpr 0x13b143b88 <line:23:9, col:32> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13b143b10 <col:9> 'int ()' Function 0x13b143a58 'tree_entry' 'int ()'
|   | | |-DeclRefExpr 0x13b143b30 <col:20> 'struct tree_desc *' lvalue ParmVar 0x13b1404c8 'tree' 'struct tree_desc *'
|   | | `-UnaryOperator 0x13b143b70 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   `-RecoveryExpr 0x13b143b50 <col:27> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13b1458d0 <col:35, line:48:2>
|   |   |-CallExpr 0x13b143ce8 <line:24:3, col:36> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13b143bb8 <col:3> 'char *(char *, const char *)' Function 0x13b1435d8 'strcpy' 'char *(char *, const char *)'
|   |   | |-BinaryOperator 0x13b143c48 <col:10, col:21> 'char *' contains-errors '+'
|   |   | | |-ImplicitCastExpr 0x13b143c18 <col:10> 'char *' contains-errors <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13b143bd8 <col:10> 'char *' contains-errors lvalue Var 0x13b140f20 'path_buf' 'char *'
|   |   | | `-ImplicitCastExpr 0x13b143c30 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b143bf8 <col:21> 'int' lvalue Var 0x13b140868 'len' 'int'
|   |   | `-CXXDependentScopeMemberExpr 0x13b143c88 <col:26, col:32> '<dependent type>' contains-errors lvalue .path
|   |   |   `-RecoveryExpr 0x13b143c68 <col:26> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x13b1441e8 <line:26:3, line:28:73>
|   |   | |-CallExpr 0x13b143e88 <line:26:7, col:25> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x13b143e00 <col:7> 'int ()' Function 0x13b143d40 'S_ISDIR' 'int ()'
|   |   | | `-CXXDependentScopeMemberExpr 0x13b143e40 <col:15, col:21> '<dependent type>' contains-errors lvalue .mode
|   |   | |   `-RecoveryExpr 0x13b143e20 <col:15> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x13b1441b8 <line:28:4, col:73> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13b143eb0 <col:4> 'char *(char *, const char *)' Function 0x13b1435d8 'strcpy' 'char *(char *, const char *)'
|   |   |   |-BinaryOperator 0x13b144160 <col:11, col:65> '<dependent type>' contains-errors '+'
|   |   |   | |-BinaryOperator 0x13b143f40 <col:11, col:22> 'char *' contains-errors '+'
|   |   |   | | |-ImplicitCastExpr 0x13b143f10 <col:11> 'char *' contains-errors <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x13b143ed0 <col:11> 'char *' contains-errors lvalue Var 0x13b140f20 'path_buf' 'char *'
|   |   |   | | `-ImplicitCastExpr 0x13b143f28 <col:22> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x13b143ef0 <col:22> 'int' lvalue Var 0x13b140868 'len' 'int'
|   |   |   | `-CallExpr 0x13b144130 <col:28, col:65> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x13b144040 <col:28> 'int ()' Function 0x13b143f88 'tree_entry_len' 'int ()'
|   |   |   |   |-CXXDependentScopeMemberExpr 0x13b144080 <col:43, col:49> '<dependent type>' contains-errors lvalue .path
|   |   |   |   | `-RecoveryExpr 0x13b144060 <col:43> '<dependent type>' contains-errors lvalue
|   |   |   |   `-CXXDependentScopeMemberExpr 0x13b1440e8 <col:55, col:61> '<dependent type>' contains-errors lvalue .sha1
|   |   |   |     `-RecoveryExpr 0x13b1440c8 <col:55> '<dependent type>' contains-errors lvalue
|   |   |   `-StringLiteral 0x13b144180 <col:68> 'char[4]' lvalue "STR"
|   |   `-IfStmt 0x13b1458a0 <line:30:3, line:47:3> has_else
|   |     |-UnaryOperator 0x13b1443f8 <line:30:7, col:36> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x13b144398 <col:8, col:36> 'int'
|   |     |   |-ImplicitCastExpr 0x13b144380 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x13b1442e8 <col:8> 'int ()' Function 0x13b144230 'pathspec_matches' 'int ()'
|   |     |   |-ImplicitCastExpr 0x13b1443c8 <col:25> 'const char **' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x13b144308 <col:25> 'const char **' lvalue ParmVar 0x13b1280f8 'paths' 'const char **'
|   |     |   `-ImplicitCastExpr 0x13b1443e0 <col:32> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x13b144328 <col:32> 'char *' lvalue Var 0x13b140b48 'down' 'char *'
|   |     |-NullStmt 0x13b144410 <line:31:4>
|   |     `-IfStmt 0x13b145870 <line:32:8, line:47:3> has_else
|   |       |-CallExpr 0x13b144580 <line:32:12, col:30> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x13b1444f8 <col:12> 'int ()' Function 0x13b144440 'S_ISREG' 'int ()'
|   |       | `-CXXDependentScopeMemberExpr 0x13b144538 <col:20, col:26> '<dependent type>' contains-errors lvalue .mode
|   |       |   `-RecoveryExpr 0x13b144518 <col:20> '<dependent type>' contains-errors lvalue
|   |       |-CompoundAssignOperator 0x13b1447d0 <line:33:4, col:54> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |       | |-DeclRefExpr 0x13b1445a8 <col:4> 'int' lvalue Var 0x13b140900 'hit' 'int'
|   |       | `-CallExpr 0x13b144790 <col:11, col:54> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x13b1446a8 <col:11> 'int ()' Function 0x13b1445f0 'grep_sha1' 'int ()'
|   |       |   |-DeclRefExpr 0x13b1446c8 <col:21> 'struct grep_opt *' lvalue ParmVar 0x13b128048 'opt' 'struct grep_opt *'
|   |       |   |-CXXDependentScopeMemberExpr 0x13b144708 <col:26, col:32> '<dependent type>' contains-errors lvalue .sha1
|   |       |   | `-RecoveryExpr 0x13b1446e8 <col:26> '<dependent type>' contains-errors lvalue
|   |       |   |-DeclRefExpr 0x13b144750 <col:38> 'char *' contains-errors lvalue Var 0x13b140f20 'path_buf' 'char *'
|   |       |   `-DeclRefExpr 0x13b144770 <col:48> 'int' lvalue Var 0x13b140be0 'tn_len' 'int'
|   |       `-IfStmt 0x13b145850 <line:34:8, line:47:3>
|   |         |-CallExpr 0x13b144888 <line:34:12, col:30> '<dependent type>' contains-errors
|   |         | |-DeclRefExpr 0x13b144800 <col:12> 'int ()' Function 0x13b143d40 'S_ISDIR' 'int ()'
|   |         | `-CXXDependentScopeMemberExpr 0x13b144840 <col:20, col:26> '<dependent type>' contains-errors lvalue .mode
|   |         |   `-RecoveryExpr 0x13b144820 <col:20> '<dependent type>' contains-errors lvalue
|   |         `-CompoundStmt 0x13b1457f8 <col:33, line:47:3>
|   |           |-DeclStmt 0x13b144a48 <line:35:4, col:25>
|   |           | |-EnumDecl 0x13b1448b0 <col:4, col:9> col:9 object_type
|   |           | `-VarDecl 0x13b1449c8 <col:4, col:21> col:21 invalid type 'enum object_type'
|   |           |-DeclStmt 0x13b144b18 <line:36:4, col:24>
|   |           | `-VarDecl 0x13b144ab0 <col:4, col:21> col:21 invalid sub 'struct tree_desc'
|   |           |-DeclStmt 0x13b144bb0 <line:37:4, col:14>
|   |           | `-VarDecl 0x13b144b48 <col:4, col:10> col:10 used data 'void *'
|   |           |-DeclStmt 0x13b144c48 <line:38:4, col:22>
|   |           | `-VarDecl 0x13b144be0 <col:4, col:18> col:18 used size 'unsigned long'
|   |           |-BinaryOperator 0x13b144ee0 <line:40:4, col:50> 'void *' contains-errors '='
|   |           | |-DeclRefExpr 0x13b144c60 <col:4> 'void *' lvalue Var 0x13b144b48 'data' 'void *'
|   |           | `-CallExpr 0x13b144ea8 <col:11, col:50> '<dependent type>' contains-errors
|   |           |   |-DeclRefExpr 0x13b144d60 <col:11> 'int ()' Function 0x13b144ca8 'read_sha1_file' 'int ()'
|   |           |   |-CXXDependentScopeMemberExpr 0x13b144da0 <col:26, col:32> '<dependent type>' contains-errors lvalue .sha1
|   |           |   | `-RecoveryExpr 0x13b144d80 <col:26> '<dependent type>' contains-errors lvalue
|   |           |   |-UnaryOperator 0x13b144e20 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |           |   | `-RecoveryExpr 0x13b144e00 <col:39> '<dependent type>' contains-errors lvalue
|   |           |   `-UnaryOperator 0x13b144e90 <col:45, col:46> 'unsigned long *' prefix '&' cannot overflow
|   |           |     `-DeclRefExpr 0x13b144e38 <col:46> 'unsigned long' lvalue Var 0x13b144be0 'size' 'unsigned long'
|   |           |-IfStmt 0x13b145230 <line:41:4, line:43:32>
|   |           | |-UnaryOperator 0x13b144f38 <line:41:8, col:9> 'int' prefix '!' cannot overflow
|   |           | | `-ImplicitCastExpr 0x13b144f20 <col:9> 'void *' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x13b144f00 <col:9> 'void *' lvalue Var 0x13b144b48 'data' 'void *'
|   |           | `-CallExpr 0x13b145200 <line:42:5, line:43:32> '<dependent type>' contains-errors
|   |           |   |-DeclRefExpr 0x13b145030 <line:42:5> 'int ()' Function 0x13b144f78 'die' 'int ()'
|   |           |   |-StringLiteral 0x13b145050 <col:9> 'char[4]' lvalue "STR"
|   |           |   `-CallExpr 0x13b1451d8 <line:43:9, col:31> '<dependent type>' contains-errors
|   |           |     |-DeclRefExpr 0x13b145150 <col:9> 'int ()' Function 0x13b145098 'sha1_to_hex' 'int ()'
|   |           |     `-CXXDependentScopeMemberExpr 0x13b145190 <col:21, col:27> '<dependent type>' contains-errors lvalue .sha1
|   |           |       `-RecoveryExpr 0x13b145170 <col:21> '<dependent type>' contains-errors lvalue
|   |           |-CallExpr 0x13b1453c8 <line:44:4, col:35> '<dependent type>' contains-errors
|   |           | |-DeclRefExpr 0x13b145330 <col:4> 'int ()' Function 0x13b145278 'init_tree_desc' 'int ()'
|   |           | |-UnaryOperator 0x13b145370 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |           | | `-RecoveryExpr 0x13b145350 <col:20> '<dependent type>' contains-errors lvalue
|   |           | |-DeclRefExpr 0x13b145388 <col:25> 'void *' lvalue Var 0x13b144b48 'data' 'void *'
|   |           | `-DeclRefExpr 0x13b1453a8 <col:31> 'unsigned long' lvalue Var 0x13b144be0 'size' 'unsigned long'
|   |           |-CompoundAssignOperator 0x13b145540 <line:45:4, col:54> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |           | |-DeclRefExpr 0x13b145400 <col:4> 'int' lvalue Var 0x13b140900 'hit' 'int'
|   |           | `-CallExpr 0x13b1454f8 <col:11, col:54> '<dependent type>' contains-errors
|   |           |   |-DeclRefExpr 0x13b145420 <col:11> 'int (struct grep_opt *, const char **, struct tree_desc *, const char *, const char *)' Function 0x13b140738 'grep_tree' 'int (struct grep_opt *, const char **, struct tree_desc *, const char *, const char *)'
|   |           |   |-DeclRefExpr 0x13b145440 <col:21> 'struct grep_opt *' lvalue ParmVar 0x13b128048 'opt' 'struct grep_opt *'
|   |           |   |-DeclRefExpr 0x13b145460 <col:26> 'const char **' lvalue ParmVar 0x13b1280f8 'paths' 'const char **'
|   |           |   |-UnaryOperator 0x13b1454a0 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |           |   | `-RecoveryExpr 0x13b145480 <col:34> '<dependent type>' contains-errors lvalue
|   |           |   |-DeclRefExpr 0x13b1454b8 <col:39> 'const char *' lvalue ParmVar 0x13b140548 'tree_name' 'const char *'
|   |           |   `-DeclRefExpr 0x13b1454d8 <col:50> 'char *' lvalue Var 0x13b140b48 'down' 'char *'
|   |           `-CallExpr 0x13b1457b8 <line:46:4, col:13> 'void'
|   |             |-ImplicitCastExpr 0x13b1457a0 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x13b145718 <col:4> 'void (void *)' Function 0x13b1455a8 'free' 'void (void *)'
|   |             `-ImplicitCastExpr 0x13b1457e0 <col:9> 'void *' <LValueToRValue>
|   |               `-DeclRefExpr 0x13b145738 <col:9> 'void *' lvalue Var 0x13b144b48 'data' 'void *'
|   `-ReturnStmt 0x13b145950 <line:49:2, col:9>
|     `-ImplicitCastExpr 0x13b145938 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13b145918 <col:9> 'int' lvalue Var 0x13b140900 'hit' 'int'
|-FunctionDecl 0x13b140c88 <line:9:15> col:15 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13b140d88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b140d30 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x13b1412d8 <line:13:12> col:12 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x13b142e00 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13b142e68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x13b141380 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x13b142ee0 <col:12> Implicit printf 2 3
|-FunctionDecl 0x13b143220 <line:15:3> col:3 implicit used strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x13b143320 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13b143388 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b1432c8 <<invalid sloc>> Implicit 889
|-FunctionDecl 0x13b1435d8 <line:19:3> col:3 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x13b1436d8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13b143740 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b143680 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x13b1455a8 <line:46:4> col:4 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13b1456a8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13b145650 <<invalid sloc>> Implicit 873
