TranslationUnitDecl 0x126055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1260564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126055bd0 '__int128'
|-TypedefDecl 0x126056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126055bf0 'unsigned __int128'
|-TypedefDecl 0x12680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12680bc00 'struct __NSConstantString_tag'
|   `-Record 0x126056580 '__NSConstantString_tag'
|-TypedefDecl 0x12680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126055d90 '__SVInt8_t'
|-TypedefDecl 0x12680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126055db0 '__SVInt16_t'
|-TypedefDecl 0x12680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126055dd0 '__SVInt32_t'
|-TypedefDecl 0x12680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126055df0 '__SVInt64_t'
|-TypedefDecl 0x12680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126055e10 '__SVUint8_t'
|-TypedefDecl 0x12680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126055e30 '__SVUint16_t'
|-TypedefDecl 0x12680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126055e50 '__SVUint32_t'
|-TypedefDecl 0x12680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126055e70 '__SVUint64_t'
|-TypedefDecl 0x12680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126055e90 '__SVFloat16_t'
|-TypedefDecl 0x12680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1260560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1260560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1260560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1260561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1260561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1260561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1260562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1260562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1260562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126056390 '__SVBool_t'
|-TypedefDecl 0x12680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1260563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1260563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1260563f0 '__SVCount_t'
|-TypedefDecl 0x12680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-TypedefDecl 0x12680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-FunctionDecl 0x12680df28 <dataset_diviso_filec/func12996_vuln.c:1:1, line:71:1> line:1:5 main 'int (int, char **)'
| |-ParmVarDecl 0x12680dcd8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x12680de00 <col:20, col:31> col:26 used argv 'char **'
| `-CompoundStmt 0x126828d28 <line:2:1, line:71:1>
|   |-RecoveryExpr 0x12680e070 <line:3:5> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1278095c8 <line:4:5, line:11:5> has_else
|   | |-RecoveryExpr 0x1278094a0 <line:4:9, col:45> '_Bool' contains-errors
|   | |-CompoundStmt 0x127809538 <line:5:5, line:7:5>
|   | `-CompoundStmt 0x1278095b0 <line:9:5, line:11:5>
|   |   `-UnaryOperator 0x127809598 <line:10:2, col:4> '<dependent type>' contains-errors prefix '++' cannot overflow
|   |     `-RecoveryExpr 0x127809578 <col:4> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x127809ad0 <line:13:5, line:16:5>
|   | |-BinaryOperator 0x127809a80 <line:13:9, col:38> 'int' contains-errors '=='
|   | | |-CallExpr 0x127809a48 <col:9, col:33> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x127809898 <col:9> 'int (const char *, const char *, unsigned long)' Function 0x127809648 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | | | |-RecoveryExpr 0x1278099f8 <col:17> '<dependent type>' contains-errors lvalue
|   | | | |-StringLiteral 0x127809910 <col:25> 'char[4]' lvalue "STR"
|   | | | `-IntegerLiteral 0x127809930 <col:32> 'int' 3
|   | | `-IntegerLiteral 0x1278099b8 <col:38> 'int' 0
|   | `-CompoundStmt 0x127809ac0 <line:14:5, line:16:5>
|   |-DeclStmt 0x127809ba8 <line:18:5, col:29>
|   | `-VarDecl 0x127809b08 <col:5, col:28> col:17 used filename 'const char *' cinit
|   |   `-ImplicitCastExpr 0x127809b90 <col:28> 'const char *' <NullToPointer>
|   |     `-IntegerLiteral 0x127809b70 <col:28> 'int' 0
|   |-RecoveryExpr 0x127809ca0 <line:19:5, col:22> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x127809c80 <col:5, col:12> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x127809c60 <col:12> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x127809bf8 <col:22> 'int' 0
|   |-ForStmt 0x126828bd0 <line:22:5, line:55:5>
|   | |-DeclStmt 0x127809d70 <line:22:10, col:19>
|   | | `-VarDecl 0x127809ce8 <col:10, col:18> col:14 used i 'int' cinit
|   | |   `-IntegerLiteral 0x127809d50 <col:18> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x127809df8 <col:21, col:25> 'int' '<'
|   | | |-ImplicitCastExpr 0x127809dc8 <col:21> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x127809d88 <col:21> 'int' lvalue Var 0x127809ce8 'i' 'int'
|   | | `-ImplicitCastExpr 0x127809de0 <col:25> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127809da8 <col:25> 'int' lvalue ParmVar 0x12680dcd8 'argc' 'int'
|   | |-UnaryOperator 0x127809e38 <col:31, col:33> 'int' prefix '++'
|   | | `-DeclRefExpr 0x127809e18 <col:33> 'int' lvalue Var 0x127809ce8 'i' 'int'
|   | `-CompoundStmt 0x126828bb8 <line:23:5, line:55:5>
|   |   `-IfStmt 0x126828b88 <line:24:9, line:54:9> has_else
|   |     |-BinaryOperator 0x127809f80 <line:24:13, col:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x127809f68 <col:13, col:22> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x127809f50 <col:13, col:22> 'char' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x127809f18 <col:13, col:22> 'char' lvalue
|   |     | |     |-ImplicitCastExpr 0x127809f00 <col:13, col:19> 'char *' <LValueToRValue>
|   |     | |     | `-ArraySubscriptExpr 0x127809ec0 <col:13, col:19> 'char *' lvalue
|   |     | |     |   |-ImplicitCastExpr 0x127809e90 <col:13> 'char **' <LValueToRValue>
|   |     | |     |   | `-DeclRefExpr 0x127809e50 <col:13> 'char **' lvalue ParmVar 0x12680de00 'argv' 'char **'
|   |     | |     |   `-ImplicitCastExpr 0x127809ea8 <col:18> 'int' <LValueToRValue>
|   |     | |     |     `-DeclRefExpr 0x127809e70 <col:18> 'int' lvalue Var 0x127809ce8 'i' 'int'
|   |     | |     `-IntegerLiteral 0x127809ee0 <col:21> 'int' 0
|   |     | `-CharacterLiteral 0x127809f38 <col:27> 'int' 45
|   |     |-CompoundStmt 0x126828980 <line:25:9, line:46:9>
|   |     | `-IfStmt 0x126828950 <line:26:13, line:45:13> has_else
|   |     |   |-BinaryOperator 0x1268281d8 <line:26:17, col:43> 'int' '=='
|   |     |   | |-CallExpr 0x126828128 <col:17, col:38> 'int'
|   |     |   | | |-ImplicitCastExpr 0x126828110 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | | | `-DeclRefExpr 0x126827fe0 <col:17> 'int (const char *, const char *)' Function 0x126827e00 'strcmp' 'int (const char *, const char *)'
|   |     |   | | |-ImplicitCastExpr 0x126828170 <col:24, col:30> 'const char *' <NoOp>
|   |     |   | | | `-ImplicitCastExpr 0x126828158 <col:24, col:30> 'char *' <LValueToRValue>
|   |     |   | | |   `-ArraySubscriptExpr 0x126828070 <col:24, col:30> 'char *' lvalue
|   |     |   | | |     |-ImplicitCastExpr 0x126828040 <col:24> 'char **' <LValueToRValue>
|   |     |   | | |     | `-DeclRefExpr 0x126828000 <col:24> 'char **' lvalue ParmVar 0x12680de00 'argv' 'char **'
|   |     |   | | |     `-ImplicitCastExpr 0x126828058 <col:29> 'int' <LValueToRValue>
|   |     |   | | |       `-DeclRefExpr 0x126828020 <col:29> 'int' lvalue Var 0x127809ce8 'i' 'int'
|   |     |   | | `-ImplicitCastExpr 0x1268281a0 <col:33> 'const char *' <NoOp>
|   |     |   | |   `-ImplicitCastExpr 0x126828188 <col:33> 'char *' <ArrayToPointerDecay>
|   |     |   | |     `-StringLiteral 0x126828090 <col:33> 'char[4]' lvalue "STR"
|   |     |   | `-IntegerLiteral 0x1268281b8 <col:43> 'int' 0
|   |     |   |-CompoundStmt 0x126828478 <line:27:13, line:33:13>
|   |     |   | `-IfStmt 0x126828440 <line:28:17, line:31:17>
|   |     |   |   |-BinaryOperator 0x126828268 <line:28:21, col:28> 'int' '>='
|   |     |   |   | |-UnaryOperator 0x126828218 <col:21, col:23> 'int' prefix '++'
|   |     |   |   | | `-DeclRefExpr 0x1268281f8 <col:23> 'int' lvalue Var 0x127809ce8 'i' 'int'
|   |     |   |   | `-ImplicitCastExpr 0x126828250 <col:28> 'int' <LValueToRValue>
|   |     |   |   |   `-DeclRefExpr 0x126828230 <col:28> 'int' lvalue ParmVar 0x12680dcd8 'argc' 'int'
|   |     |   |   `-CompoundStmt 0x126828428 <line:29:17, line:31:17>
|   |     |   |     `-CallExpr 0x126828408 <line:30:21, col:27> 'int'
|   |     |   |       `-ImplicitCastExpr 0x1268283f0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     |   |         `-DeclRefExpr 0x1268283a0 <col:21> 'int ()' Function 0x1268282e8 'usage' 'int ()'
|   |     |   `-IfStmt 0x126828920 <line:34:18, line:45:13> has_else
|   |     |     |-BinaryOperator 0x126828658 <line:34:22, col:48> 'int' '=='
|   |     |     | |-CallExpr 0x1268285a8 <col:22, col:43> 'int'
|   |     |     | | |-ImplicitCastExpr 0x126828590 <col:22> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |     | | | `-DeclRefExpr 0x126828490 <col:22> 'int (const char *, const char *)' Function 0x126827e00 'strcmp' 'int (const char *, const char *)'
|   |     |     | | |-ImplicitCastExpr 0x1268285f0 <col:29, col:35> 'const char *' <NoOp>
|   |     |     | | | `-ImplicitCastExpr 0x1268285d8 <col:29, col:35> 'char *' <LValueToRValue>
|   |     |     | | |   `-ArraySubscriptExpr 0x126828520 <col:29, col:35> 'char *' lvalue
|   |     |     | | |     |-ImplicitCastExpr 0x1268284f0 <col:29> 'char **' <LValueToRValue>
|   |     |     | | |     | `-DeclRefExpr 0x1268284b0 <col:29> 'char **' lvalue ParmVar 0x12680de00 'argv' 'char **'
|   |     |     | | |     `-ImplicitCastExpr 0x126828508 <col:34> 'int' <LValueToRValue>
|   |     |     | | |       `-DeclRefExpr 0x1268284d0 <col:34> 'int' lvalue Var 0x127809ce8 'i' 'int'
|   |     |     | | `-ImplicitCastExpr 0x126828620 <col:38> 'const char *' <NoOp>
|   |     |     | |   `-ImplicitCastExpr 0x126828608 <col:38> 'char *' <ArrayToPointerDecay>
|   |     |     | |     `-StringLiteral 0x126828540 <col:38> 'char[4]' lvalue "STR"
|   |     |     | `-IntegerLiteral 0x126828638 <col:48> 'int' 0
|   |     |     |-CompoundStmt 0x126828678 <line:35:13, line:37:13>
|   |     |     `-IfStmt 0x1268288f0 <line:38:18, line:45:13> has_else
|   |     |       |-BinaryOperator 0x126828850 <line:38:22, col:48> 'int' '=='
|   |     |       | |-CallExpr 0x1268287a0 <col:22, col:43> 'int'
|   |     |       | | |-ImplicitCastExpr 0x126828788 <col:22> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |       | | | `-DeclRefExpr 0x126828688 <col:22> 'int (const char *, const char *)' Function 0x126827e00 'strcmp' 'int (const char *, const char *)'
|   |     |       | | |-ImplicitCastExpr 0x1268287e8 <col:29, col:35> 'const char *' <NoOp>
|   |     |       | | | `-ImplicitCastExpr 0x1268287d0 <col:29, col:35> 'char *' <LValueToRValue>
|   |     |       | | |   `-ArraySubscriptExpr 0x126828718 <col:29, col:35> 'char *' lvalue
|   |     |       | | |     |-ImplicitCastExpr 0x1268286e8 <col:29> 'char **' <LValueToRValue>
|   |     |       | | |     | `-DeclRefExpr 0x1268286a8 <col:29> 'char **' lvalue ParmVar 0x12680de00 'argv' 'char **'
|   |     |       | | |     `-ImplicitCastExpr 0x126828700 <col:34> 'int' <LValueToRValue>
|   |     |       | | |       `-DeclRefExpr 0x1268286c8 <col:34> 'int' lvalue Var 0x127809ce8 'i' 'int'
|   |     |       | | `-ImplicitCastExpr 0x126828818 <col:38> 'const char *' <NoOp>
|   |     |       | |   `-ImplicitCastExpr 0x126828800 <col:38> 'char *' <ArrayToPointerDecay>
|   |     |       | |     `-StringLiteral 0x126828738 <col:38> 'char[4]' lvalue "STR"
|   |     |       | `-IntegerLiteral 0x126828830 <col:48> 'int' 0
|   |     |       |-CompoundStmt 0x126828870 <line:39:13, line:41:13>
|   |     |       `-CompoundStmt 0x1268288d8 <line:43:13, line:45:13>
|   |     |         `-CallExpr 0x1268288b8 <line:44:17, col:23> 'int'
|   |     |           `-ImplicitCastExpr 0x1268288a0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     |             `-DeclRefExpr 0x126828880 <col:17> 'int ()' Function 0x1268282e8 'usage' 'int ()'
|   |     `-IfStmt 0x126828b58 <line:47:14, line:54:9> has_else
|   |       |-ImplicitCastExpr 0x1268289b8 <line:47:18> 'const char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x126828998 <col:18> 'const char *' lvalue Var 0x127809b08 'filename' 'const char *'
|   |       |-CompoundStmt 0x126828a28 <line:48:9, line:50:9>
|   |       | `-CallExpr 0x126828a08 <line:49:13, col:19> 'int'
|   |       |   `-ImplicitCastExpr 0x1268289f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       |     `-DeclRefExpr 0x1268289d0 <col:13> 'int ()' Function 0x1268282e8 'usage' 'int ()'
|   |       `-CompoundStmt 0x126828b40 <line:52:9, line:54:9>
|   |         `-BinaryOperator 0x126828b20 <line:53:13, col:30> 'const char *' '='
|   |           |-DeclRefExpr 0x126828a40 <col:13> 'const char *' lvalue Var 0x127809b08 'filename' 'const char *'
|   |           `-ImplicitCastExpr 0x126828b08 <col:24, col:30> 'const char *' <NoOp>
|   |             `-ImplicitCastExpr 0x126828af0 <col:24, col:30> 'char *' <LValueToRValue>
|   |               `-ArraySubscriptExpr 0x126828ad0 <col:24, col:30> 'char *' lvalue
|   |                 |-ImplicitCastExpr 0x126828aa0 <col:24> 'char **' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x126828a60 <col:24> 'char **' lvalue ParmVar 0x12680de00 'argv' 'char **'
|   |                 `-ImplicitCastExpr 0x126828ab8 <col:29> 'int' <LValueToRValue>
|   |                   `-DeclRefExpr 0x126828a80 <col:29> 'int' lvalue Var 0x127809ce8 'i' 'int'
|   `-IfStmt 0x126828d08 <line:56:5, line:59:5>
|     |-BinaryOperator 0x126828c78 <line:56:9, col:21> 'int' '=='
|     | |-ImplicitCastExpr 0x126828c48 <col:9> 'const char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x126828c08 <col:9> 'const char *' lvalue Var 0x127809b08 'filename' 'const char *'
|     | `-ImplicitCastExpr 0x126828c60 <col:21> 'const char *' <NullToPointer>
|     |   `-IntegerLiteral 0x126828c28 <col:21> 'int' 0
|     `-CompoundStmt 0x126828cf0 <line:57:5, line:59:5>
|       `-CallExpr 0x126828cd0 <line:58:9, col:15> 'int'
|         `-ImplicitCastExpr 0x126828cb8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x126828c98 <col:9> 'int ()' Function 0x1268282e8 'usage' 'int ()'
|-FunctionDecl 0x127809110 <line:4:19> col:19 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x127809210 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x127809278 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1278091b8 <<invalid sloc>> Implicit 896
|-FunctionDecl 0x127809648 <line:13:9> col:9 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x127809748 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1278097b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x127809818 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1278096f0 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x126827e00 <line:26:17> col:17 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x126827f00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x126827f68 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x126827ea8 <<invalid sloc>> Implicit 887
