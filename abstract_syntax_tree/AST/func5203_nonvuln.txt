TranslationUnitDecl 0x134055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1340564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x134055bd0 '__int128'
|-TypedefDecl 0x134056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x134055bf0 'unsigned __int128'
|-TypedefDecl 0x134126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x134126000 'struct __NSConstantString_tag'
|   `-Record 0x134056580 '__NSConstantString_tag'
|-TypedefDecl 0x134126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134055d90 '__SVInt8_t'
|-TypedefDecl 0x134126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134055db0 '__SVInt16_t'
|-TypedefDecl 0x134126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134055dd0 '__SVInt32_t'
|-TypedefDecl 0x1341263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134055df0 '__SVInt64_t'
|-TypedefDecl 0x134126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134055e10 '__SVUint8_t'
|-TypedefDecl 0x1341264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134055e30 '__SVUint16_t'
|-TypedefDecl 0x134126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134055e50 '__SVUint32_t'
|-TypedefDecl 0x134126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134055e70 '__SVUint64_t'
|-TypedefDecl 0x1341265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134055e90 '__SVFloat16_t'
|-TypedefDecl 0x134126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1341266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134055ed0 '__SVFloat64_t'
|-TypedefDecl 0x134126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x134126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1341267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x134126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1341268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x134126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x134126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1341269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x134126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x134126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x134126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x134126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x134126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x134126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134056090 '__clang_svint8x3_t'
|-TypedefDecl 0x134126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1340560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x134126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1340560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x134126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1340560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x134126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x134126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x134126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x134126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x134126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x134127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1340561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x134127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1340561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1341278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1340561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x134127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1341279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134056230 '__clang_svint16x4_t'
|-TypedefDecl 0x134127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134056250 '__clang_svint32x4_t'
|-TypedefDecl 0x134127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134056270 '__clang_svint64x4_t'
|-TypedefDecl 0x134127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x134127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1340562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x134127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1340562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x134127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1340562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x134127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x134127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x134127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x134127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x134127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134056390 '__SVBool_t'
|-TypedefDecl 0x134127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1340563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x134127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1340563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x134127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1340563f0 '__SVCount_t'
|-TypedefDecl 0x134127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x134127fb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
|-TypedefDecl 0x134128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x134127fb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
`-FunctionDecl 0x134128758 <dataset_diviso_filec/func5203_nonvuln.c:1:1, line:36:1> line:1:12 bnx2x_set_mc_list 'int (struct bnx2x *)' static
  |-ParmVarDecl 0x134128648 <col:30, col:44> col:44 used bp 'struct bnx2x *'
  `-CompoundStmt 0x134143290 <line:2:1, line:36:1>
    |-CallExpr 0x134140c00 <line:3:2, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x134140b80 <col:2> 'int ()' Function 0x134140ac8 'LIST_HEAD' 'int ()'
    | `-RecoveryExpr 0x134140be0 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x134140dc0 <line:4:2, col:50>
    | |-RecordDecl 0x134140c28 <col:2, col:9> col:9 struct bnx2x_mcast_ramrod_params
    | `-VarDecl 0x134140d28 <col:2, col:35> col:35 referenced invalid rparam 'struct bnx2x_mcast_ramrod_params'
    |-DeclStmt 0x134141028 <line:5:2, col:34>
    | |-RecordDecl 0x134140dd8 <col:2, col:9> col:9 struct net_device
    | `-VarDecl 0x134140f48 <col:2, col:31> col:21 used dev 'struct net_device *' cinit
    |   `-RecoveryExpr 0x134140fe8 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x134140fb0 <col:27> 'struct bnx2x *' lvalue ParmVar 0x134128648 'bp' 'struct bnx2x *'
    |-DeclStmt 0x1341410e0 <line:6:2, col:12>
    | `-VarDecl 0x134141058 <col:2, col:11> col:6 used rc 'int' cinit
    |   `-IntegerLiteral 0x1341410c0 <col:11> 'int' 0
    |-IfStmt 0x134141430 <line:9:2, line:10:34>
    | |-CallExpr 0x134141268 <line:9:6, col:20> 'int'
    | | |-ImplicitCastExpr 0x134141250 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1341411d8 <col:6> 'int ()' Function 0x134141120 'CHIP_IS_E1x' 'int ()'
    | | `-ImplicitCastExpr 0x134141290 <col:18> 'struct bnx2x *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1341411f8 <col:18> 'struct bnx2x *' lvalue ParmVar 0x134128648 'bp' 'struct bnx2x *'
    | `-ReturnStmt 0x134141420 <line:10:3, col:34>
    |   `-CallExpr 0x1341413e0 <col:10, col:34> 'int'
    |     |-ImplicitCastExpr 0x1341413c8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x134141388 <col:10> 'int ()' Function 0x1341412d0 'bnx2x_set_mc_list_e1x' 'int ()'
    |     `-ImplicitCastExpr 0x134141408 <col:32> 'struct bnx2x *' <LValueToRValue>
    |       `-DeclRefExpr 0x1341413a8 <col:32> 'struct bnx2x *' lvalue ParmVar 0x134128648 'bp' 'struct bnx2x *'
    |-BinaryOperator 0x134141558 <line:12:2, col:26> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x134141498 <col:2, col:9> '<dependent type>' contains-errors lvalue .mcast_obj
    | | `-RecoveryExpr 0x134141470 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x134141450 <col:2> 'struct bnx2x_mcast_ramrod_params' lvalue Var 0x134140d28 'rparam' 'struct bnx2x_mcast_ramrod_params'
    | `-UnaryOperator 0x134141540 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x134141518 <col:22, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1341414e0 <col:22> 'struct bnx2x *' lvalue ParmVar 0x134128648 'bp' 'struct bnx2x *'
    |-IfStmt 0x134143218 <line:14:2, line:33:2> has_else
    | |-CallExpr 0x1341416b0 <line:14:6, col:25> 'int' contains-errors
    | | |-ImplicitCastExpr 0x134141698 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x134141658 <col:6> 'int ()' Function 0x1341415a0 'netdev_mc_count' 'int ()'
    | | `-ImplicitCastExpr 0x1341416d8 <col:22> 'struct net_device *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x134141678 <col:22> 'struct net_device *' contains-errors lvalue Var 0x134140f48 'dev' 'struct net_device *'
    | |-CompoundStmt 0x134142ed0 <col:28, line:27:2>
    | | |-BinaryOperator 0x134141960 <line:15:3, col:65> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x1341416f0 <col:3> 'int' lvalue Var 0x134141058 'rc' 'int'
    | | | `-CallExpr 0x134141928 <col:8, col:65> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x1341417f0 <col:8> 'int ()' Function 0x134141738 'bnx2x_init_mcast_macs_list' 'int ()'
    | | |   |-DeclRefExpr 0x134141810 <col:35> 'struct bnx2x *' lvalue ParmVar 0x134128648 'bp' 'struct bnx2x *'
    | | |   |-UnaryOperator 0x134141850 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   | `-RecoveryExpr 0x134141830 <col:40> '<dependent type>' contains-errors lvalue
    | | |   `-UnaryOperator 0x134141910 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-RecoveryExpr 0x1341418f0 <col:49> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x134142800 <line:16:3, line:17:11>
    | | | |-ImplicitCastExpr 0x1341419a0 <line:16:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x134141980 <col:7> 'int' lvalue Var 0x134141058 'rc' 'int'
    | | | `-ReturnStmt 0x1341419f0 <line:17:4, col:11>
    | | |   `-ImplicitCastExpr 0x1341419d8 <col:11> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x1341419b8 <col:11> 'int' lvalue Var 0x134141058 'rc' 'int'
    | | |-BinaryOperator 0x134142a60 <line:20:3, line:21:25> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x134142820 <line:20:3> 'int' lvalue Var 0x134141058 'rc' 'int'
    | | | `-CallExpr 0x134142a28 <col:8, line:21:25> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x134142920 <line:20:8> 'int ()' Function 0x134142868 'bnx2x_config_mcast' 'int ()'
    | | |   |-DeclRefExpr 0x134142940 <col:27> 'struct bnx2x *' lvalue ParmVar 0x134128648 'bp' 'struct bnx2x *'
    | | |   |-UnaryOperator 0x134142980 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   | `-RecoveryExpr 0x134142960 <col:32> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x134142a08 <line:21:6> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x134142cf8 <line:22:3, line:24:9>
    | | | |-BinaryOperator 0x134142ad8 <line:22:7, col:12> 'int' '<'
    | | | | |-ImplicitCastExpr 0x134142ac0 <col:7> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x134142a80 <col:7> 'int' lvalue Var 0x134141058 'rc' 'int'
    | | | | `-IntegerLiteral 0x134142aa0 <col:12> 'int' 0
    | | | `-CallExpr 0x134142c98 <line:23:4, line:24:9> 'int'
    | | |   |-ImplicitCastExpr 0x134142c80 <line:23:4> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x134142bd8 <col:4> 'int ()' Function 0x134142b20 'BNX2X_ERR' 'int ()'
    | | |   |-ImplicitCastExpr 0x134142cc8 <col:14> 'char *' <ArrayToPointerDecay>
    | | |   | `-StringLiteral 0x134142c40 <col:14> 'char[4]' lvalue "STR"
    | | |   `-ImplicitCastExpr 0x134142ce0 <line:24:7> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x134142c60 <col:7> 'int' lvalue Var 0x134141058 'rc' 'int'
    | | `-CallExpr 0x134142ea8 <line:26:3, col:47> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x134142df8 <col:3> 'int ()' Function 0x134142d40 'bnx2x_free_mcast_macs_list' 'int ()'
    | |   `-UnaryOperator 0x134142e90 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x134142e70 <col:31> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1341431f8 <line:27:9, line:33:2>
    |   |-BinaryOperator 0x134143068 <line:29:3, col:59> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x134142f08 <col:3> 'int' lvalue Var 0x134141058 'rc' 'int'
    |   | `-CallExpr 0x134143030 <col:8, col:59> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x134142f28 <col:8> 'int ()' Function 0x134142868 'bnx2x_config_mcast' 'int ()'
    |   |   |-DeclRefExpr 0x134142f48 <col:27> 'struct bnx2x *' lvalue ParmVar 0x134128648 'bp' 'struct bnx2x *'
    |   |   |-UnaryOperator 0x134142f88 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x134142f68 <col:32> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x134143010 <col:40> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1341431d8 <line:30:3, line:32:9>
    |     |-BinaryOperator 0x1341430e0 <line:30:7, col:12> 'int' '<'
    |     | |-ImplicitCastExpr 0x1341430c8 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x134143088 <col:7> 'int' lvalue Var 0x134141058 'rc' 'int'
    |     | `-IntegerLiteral 0x1341430a8 <col:12> 'int' 0
    |     `-CallExpr 0x134143178 <line:31:4, line:32:9> 'int'
    |       |-ImplicitCastExpr 0x134143160 <line:31:4> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x134143100 <col:4> 'int ()' Function 0x134142b20 'BNX2X_ERR' 'int ()'
    |       |-ImplicitCastExpr 0x1341431a8 <col:14> 'char *' <ArrayToPointerDecay>
    |       | `-StringLiteral 0x134143120 <col:14> 'char[4]' lvalue "STR"
    |       `-ImplicitCastExpr 0x1341431c0 <line:32:7> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x134143140 <col:7> 'int' lvalue Var 0x134141058 'rc' 'int'
    `-ReturnStmt 0x134143280 <line:35:2, col:9>
      `-ImplicitCastExpr 0x134143268 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x134143248 <col:9> 'int' lvalue Var 0x134141058 'rc' 'int'
