TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-FunctionDecl 0x12d826938 <dataset_diviso_filec/func24002_nonvuln.c:1:1, line:53:1> line:1:12 nf_tables_expr_parse 'int (const struct nft_ctx *, const struct nlattr *, struct nft_expr_info *)' static
| |-ParmVarDecl 0x12d80e248 <col:33, col:55> col:55 used ctx 'const struct nft_ctx *'
| |-ParmVarDecl 0x12d826628 <line:2:5, col:26> col:26 used nla 'const struct nlattr *'
| |-ParmVarDecl 0x12d8267f8 <line:3:5, col:27> col:27 used info 'struct nft_expr_info *'
| `-CompoundStmt 0x12d126580 <line:4:1, line:53:1>
|   |-DeclStmt 0x12d826c28 <line:5:2, col:34>
|   | |-RecordDecl 0x12d826a40 <col:8, col:15> col:15 struct nft_expr_type
|   | `-VarDecl 0x12d826ba8 <col:2, col:30> col:30 used type 'const struct nft_expr_type *'
|   |-DeclStmt 0x12d826e28 <line:6:2, col:32>
|   | |-RecordDecl 0x12d826c40 <col:8, col:15> col:15 struct nft_expr_ops
|   | `-VarDecl 0x12d826da8 <col:2, col:29> col:29 used ops 'const struct nft_expr_ops *'
|   |-DeclStmt 0x12d826fd0 <line:7:2, col:38>
|   | `-VarDecl 0x12d826f68 <col:2, col:17> col:17 invalid tb 'struct nlattr *'
|   |-DeclStmt 0x12d827068 <line:8:2, col:9>
|   | `-VarDecl 0x12d827000 <col:2, col:6> col:6 used err 'int'
|   |-BinaryOperator 0x12d827368 <line:10:2, line:11:29> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12d827080 <line:10:2> 'int' lvalue Var 0x12d827000 'err' 'int'
|   | `-CallExpr 0x12d827320 <col:8, line:11:29> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d8271b0 <line:10:8> 'int ()' Function 0x12d8270f8 'nla_parse_nested_deprecated' 'int ()'
|   |   |-RecoveryExpr 0x12d8271d0 <col:36> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x12d8272c0 <col:40> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x12d827208 <col:55> 'const struct nlattr *' lvalue ParmVar 0x12d826628 'nla' 'const struct nlattr *'
|   |   |-RecoveryExpr 0x12d8272e0 <line:11:8> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x12d827300 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d827448 <line:12:2, line:13:10>
|   | |-BinaryOperator 0x12d8273e0 <line:12:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x12d8273c8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12d827388 <col:6> 'int' lvalue Var 0x12d827000 'err' 'int'
|   | | `-IntegerLiteral 0x12d8273a8 <col:12> 'int' 0
|   | `-ReturnStmt 0x12d827438 <line:13:3, col:10>
|   |   `-ImplicitCastExpr 0x12d827420 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12d827400 <col:10> 'int' lvalue Var 0x12d827000 'err' 'int'
|   |-IfStmt 0x12d1243d0 <line:16:2, line:17:22>
|   | |-CallExpr 0x12d124208 <line:16:6, col:17> 'int'
|   | | |-ImplicitCastExpr 0x12d1241f0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x12d124178 <col:6> 'int ()' Function 0x12d1240c0 'IS_ERR' 'int ()'
|   | | `-ImplicitCastExpr 0x12d124230 <col:13> 'const struct nft_expr_type *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d124198 <col:13> 'const struct nft_expr_type *' lvalue Var 0x12d826ba8 'type' 'const struct nft_expr_type *'
|   | `-ReturnStmt 0x12d1243c0 <line:17:3, col:22>
|   |   `-CallExpr 0x12d124380 <col:10, col:22> 'int'
|   |     |-ImplicitCastExpr 0x12d124368 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d124328 <col:10> 'int ()' Function 0x12d124270 'PTR_ERR' 'int ()'
|   |     `-ImplicitCastExpr 0x12d1243a8 <col:18> 'const struct nft_expr_type *' <LValueToRValue>
|   |       `-DeclRefExpr 0x12d124348 <col:18> 'const struct nft_expr_type *' lvalue Var 0x12d826ba8 'type' 'const struct nft_expr_type *'
|   |-IfStmt 0x12d124c70 <line:19:2, line:26:64> has_else
|   | |-RecoveryExpr 0x12d124428 <line:19:6, col:23> '_Bool' contains-errors
|   | |-CompoundStmt 0x12d1246f8 <col:26, line:25:2>
|   | | `-IfStmt 0x12d1246d8 <line:23:3, line:24:9>
|   | |   |-BinaryOperator 0x12d124650 <line:23:7, col:13> 'int' '<'
|   | |   | |-ImplicitCastExpr 0x12d124638 <col:7> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x12d1245f8 <col:7> 'int' lvalue Var 0x12d827000 'err' 'int'
|   | |   | `-IntegerLiteral 0x12d124618 <col:13> 'int' 0
|   | |   `-GotoStmt 0x12d1246c0 <line:24:4, col:9> 'err1' 0x12d124670
|   | `-CallExpr 0x12d124c38 <line:26:3, col:64> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d1249a8 <col:3> 'void *(void *, int, unsigned long)' Function 0x12d124758 'memset' 'void *(void *, int, unsigned long)'
|   |   |-RecoveryExpr 0x12d124a00 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12d1249c8 <col:10> 'struct nft_expr_info *' lvalue ParmVar 0x12d8267f8 'info' 'struct nft_expr_info *'
|   |   |-IntegerLiteral 0x12d124a28 <col:20> 'int' 0
|   |   `-BinaryOperator 0x12d124c00 <col:23, col:63> '<dependent type>' contains-errors '*'
|   |     |-UnaryExprOrTypeTraitExpr 0x12d124b20 <col:23, col:41> 'unsigned long' contains-errors sizeof
|   |     | `-ParenExpr 0x12d124b00 <col:29, col:41> '<dependent type>' contains-errors lvalue
|   |     |   `-ArraySubscriptExpr 0x12d124ae0 <col:30, col:40> '<dependent type>' contains-errors lvalue
|   |     |     |-ImplicitCastExpr 0x12d124ac8 <col:30, col:36> '<dependent type>' contains-errors <LValueToRValue>
|   |     |     | `-RecoveryExpr 0x12d124a80 <col:30, col:36> '<dependent type>' contains-errors lvalue
|   |     |     |   `-DeclRefExpr 0x12d124a48 <col:30> 'struct nft_expr_info *' lvalue ParmVar 0x12d8267f8 'info' 'struct nft_expr_info *' non_odr_use_unevaluated
|   |     |     `-IntegerLiteral 0x12d124aa8 <col:39> 'int' 0
|   |     `-ParenExpr 0x12d124be0 <col:45, col:63> '<dependent type>' contains-errors
|   |       `-BinaryOperator 0x12d124bc0 <col:46, col:62> '<dependent type>' contains-errors '+'
|   |         |-RecoveryExpr 0x12d124b78 <col:46, col:52> '<dependent type>' contains-errors lvalue
|   |         | `-DeclRefExpr 0x12d124b40 <col:46> 'const struct nft_expr_type *' lvalue Var 0x12d826ba8 'type' 'const struct nft_expr_type *'
|   |         `-IntegerLiteral 0x12d124ba0 <col:62> 'int' 1
|   |-IfStmt 0x12d1261f0 <line:28:2, line:43:15> has_else
|   | |-RecoveryExpr 0x12d124d00 <line:28:6, col:26> '_Bool' contains-errors
|   | |-CompoundStmt 0x12d126130 <col:32, line:42:2>
|   | | |-BinaryOperator 0x12d124f30 <line:29:3, line:30:51> 'const struct nft_expr_ops *' contains-errors '='
|   | | | |-DeclRefExpr 0x12d124d20 <line:29:3> 'const struct nft_expr_ops *' lvalue Var 0x12d826da8 'ops' 'const struct nft_expr_ops *'
|   | | | `-CallExpr 0x12d124f00 <col:9, line:30:51> '<dependent type>' contains-errors
|   | | |   |-RecoveryExpr 0x12d124d78 <line:29:9, col:15> '<dependent type>' contains-errors lvalue
|   | | |   | `-DeclRefExpr 0x12d124d40 <col:9> 'const struct nft_expr_type *' lvalue Var 0x12d826ba8 'type' 'const struct nft_expr_type *'
|   | | |   |-DeclRefExpr 0x12d124da0 <col:26> 'const struct nft_ctx *' lvalue ParmVar 0x12d80e248 'ctx' 'const struct nft_ctx *'
|   | | |   `-CStyleCastExpr 0x12d124ed8 <line:30:12, col:49> 'const struct nlattr *const *' contains-errors <Dependent>
|   | | |     `-RecoveryExpr 0x12d124df8 <col:43, col:49> '<dependent type>' contains-errors lvalue
|   | | |       `-DeclRefExpr 0x12d124dc0 <col:43> 'struct nft_expr_info *' lvalue ParmVar 0x12d8267f8 'info' 'struct nft_expr_info *'
|   | | `-IfStmt 0x12d126110 <line:31:3, line:41:3>
|   | |   |-CallExpr 0x12d124fa8 <line:31:7, col:17> 'int'
|   | |   | |-ImplicitCastExpr 0x12d124f90 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x12d124f50 <col:7> 'int ()' Function 0x12d1240c0 'IS_ERR' 'int ()'
|   | |   | `-ImplicitCastExpr 0x12d124fd0 <col:14> 'const struct nft_expr_ops *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x12d124f70 <col:14> 'const struct nft_expr_ops *' lvalue Var 0x12d826da8 'ops' 'const struct nft_expr_ops *'
|   | |   `-CompoundStmt 0x12d1260f0 <col:20, line:41:3>
|   | |     |-BinaryOperator 0x12d1260b8 <line:32:4, col:21> 'int' '='
|   | |     | |-DeclRefExpr 0x12d126000 <col:4> 'int' lvalue Var 0x12d827000 'err' 'int'
|   | |     | `-CallExpr 0x12d126078 <col:10, col:21> 'int'
|   | |     |   |-ImplicitCastExpr 0x12d126060 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |     |   | `-DeclRefExpr 0x12d126020 <col:10> 'int ()' Function 0x12d124270 'PTR_ERR' 'int ()'
|   | |     |   `-ImplicitCastExpr 0x12d1260a0 <col:18> 'const struct nft_expr_ops *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x12d126040 <col:18> 'const struct nft_expr_ops *' lvalue Var 0x12d826da8 'ops' 'const struct nft_expr_ops *'
|   | |     `-GotoStmt 0x12d1260d8 <line:40:4, col:9> 'err1' 0x12d124670
|   | `-BinaryOperator 0x12d1261d0 <line:43:3, col:15> 'const struct nft_expr_ops *' contains-errors '='
|   |   |-DeclRefExpr 0x12d126150 <col:3> 'const struct nft_expr_ops *' lvalue Var 0x12d826da8 'ops' 'const struct nft_expr_ops *'
|   |   `-RecoveryExpr 0x12d1261a8 <col:9, col:15> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12d126170 <col:9> 'const struct nft_expr_type *' lvalue Var 0x12d826ba8 'type' 'const struct nft_expr_type *'
|   |-BinaryOperator 0x12d1262a0 <line:45:2, col:15> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d126258 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d126220 <col:2> 'struct nft_expr_info *' lvalue ParmVar 0x12d8267f8 'info' 'struct nft_expr_info *'
|   | `-DeclRefExpr 0x12d126280 <col:15> 'const struct nlattr *' lvalue ParmVar 0x12d826628 'nla' 'const struct nlattr *'
|   |-BinaryOperator 0x12d126340 <line:46:2, col:14> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12d1262f8 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12d1262c0 <col:2> 'struct nft_expr_info *' lvalue ParmVar 0x12d8267f8 'info' 'struct nft_expr_info *'
|   | `-DeclRefExpr 0x12d126320 <col:14> 'const struct nft_expr_ops *' lvalue Var 0x12d826da8 'ops' 'const struct nft_expr_ops *'
|   |-ReturnStmt 0x12d126380 <line:48:2, col:9>
|   | `-IntegerLiteral 0x12d126360 <col:9> 'int' 0
|   |-LabelStmt 0x12d126518 <line:50:1, line:51:24> 'err1'
|   | `-CallExpr 0x12d1264f0 <col:2, col:24> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d126470 <col:2> 'int ()' Function 0x12d1263b8 'module_put' 'int ()'
|   |   `-RecoveryExpr 0x12d1264c8 <col:13, col:19> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12d126490 <col:13> 'const struct nft_expr_type *' lvalue Var 0x12d826ba8 'type' 'const struct nft_expr_type *'
|   `-ReturnStmt 0x12d126570 <line:52:2, col:9>
|     `-ImplicitCastExpr 0x12d126558 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12d126538 <col:9> 'int' lvalue Var 0x12d827000 'err' 'int'
`-FunctionDecl 0x12d124758 <line:26:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x12d124858 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12d1248c0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x12d124928 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12d124800 <<invalid sloc>> Implicit 900
