TranslationUnitDecl 0x143055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1430564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x143055bd0 '__int128'
|-TypedefDecl 0x143056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x143055bf0 'unsigned __int128'
|-TypedefDecl 0x143126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x143126000 'struct __NSConstantString_tag'
|   `-Record 0x143056580 '__NSConstantString_tag'
|-TypedefDecl 0x143126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x143055d90 '__SVInt8_t'
|-TypedefDecl 0x143126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x143055db0 '__SVInt16_t'
|-TypedefDecl 0x143126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x143055dd0 '__SVInt32_t'
|-TypedefDecl 0x1431263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x143055df0 '__SVInt64_t'
|-TypedefDecl 0x143126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x143055e10 '__SVUint8_t'
|-TypedefDecl 0x1431264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x143055e30 '__SVUint16_t'
|-TypedefDecl 0x143126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x143055e50 '__SVUint32_t'
|-TypedefDecl 0x143126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x143055e70 '__SVUint64_t'
|-TypedefDecl 0x1431265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x143055e90 '__SVFloat16_t'
|-TypedefDecl 0x143126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x143055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1431266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x143055ed0 '__SVFloat64_t'
|-TypedefDecl 0x143126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x143055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x143126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x143055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1431267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x143055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x143126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x143055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1431268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x143055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x143126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x143055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x143126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x143055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1431269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x143055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x143126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x143055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x143126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x143056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x143126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x143056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x143126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x143056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x143126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x143056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x143126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x143056090 '__clang_svint8x3_t'
|-TypedefDecl 0x143126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1430560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x143126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1430560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x143126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1430560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x143126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x143056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x143126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x143056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x143126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x143056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x143126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x143056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x143126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x143056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x143127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1430561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x143127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1430561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1431278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1430561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x143127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x143056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1431279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x143056230 '__clang_svint16x4_t'
|-TypedefDecl 0x143127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x143056250 '__clang_svint32x4_t'
|-TypedefDecl 0x143127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x143056270 '__clang_svint64x4_t'
|-TypedefDecl 0x143127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x143056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x143127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1430562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x143127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1430562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x143127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1430562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x143127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x143056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x143127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x143056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x143127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x143056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x143127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x143056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x143127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x143056390 '__SVBool_t'
|-TypedefDecl 0x143127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1430563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x143127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1430563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x143127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1430563f0 '__SVCount_t'
|-TypedefDecl 0x143127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x143127fb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-TypedefDecl 0x143128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x143127fb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-FunctionDecl 0x143128438 <dataset_diviso_filec/func7096_vuln.c:1:1, line:33:1> line:1:1 invalid runarg 'int (int *, const char *, const char *, const char *, int)'
| |-ParmVarDecl 0x143128128 <col:8, col:27> col:27 referenced invalid minst 'int *'
| |-ParmVarDecl 0x1431281a8 <col:34, col:46> col:46 used pre 'const char *'
| |-ParmVarDecl 0x143128228 <col:51, col:63> col:63 used arg 'const char *'
| |-ParmVarDecl 0x1431282a8 <line:2:8, col:20> col:20 used post 'const char *'
| |-ParmVarDecl 0x143128328 <col:26, col:30> col:30 used options 'int'
| `-CompoundStmt 0x14380ab18 <line:3:1, line:33:1>
|   |-DeclStmt 0x143142000 <line:4:5, col:63>
|   | `-VarDecl 0x143128520 <col:5, col:62> col:9 used len 'int' cinit
|   |   `-ImplicitCastExpr 0x143141fe8 <col:15, col:62> 'int' <IntegralCast>
|   |     `-BinaryOperator 0x143141fc8 <col:15, col:62> 'unsigned long' '+'
|   |       |-BinaryOperator 0x143141f70 <col:15, col:58> 'unsigned long' '+'
|   |       | |-BinaryOperator 0x143141ea0 <col:15, col:43> 'unsigned long' '+'
|   |       | | |-CallExpr 0x143141c28 <col:15, col:25> 'unsigned long'
|   |       | | | |-ImplicitCastExpr 0x143141c10 <col:15> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | | | `-DeclRefExpr 0x143141b80 <col:15> 'unsigned long (const char *)' Function 0x143141a10 'strlen' 'unsigned long (const char *)'
|   |       | | | `-ImplicitCastExpr 0x143141c50 <col:22> 'const char *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x143141ba0 <col:22> 'const char *' lvalue ParmVar 0x1431281a8 'pre' 'const char *'
|   |       | | `-ImplicitCastExpr 0x143141e88 <col:29, col:43> 'unsigned long' <IntegralCast>
|   |       | |   `-CallExpr 0x143141e48 <col:29, col:43> 'int'
|   |       | |     |-ImplicitCastExpr 0x143141e30 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | |     | `-DeclRefExpr 0x143141dc0 <col:29> 'int ()' Function 0x143141d08 'esc_strlen' 'int ()'
|   |       | |     `-ImplicitCastExpr 0x143141e70 <col:40> 'const char *' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x143141de0 <col:40> 'const char *' lvalue ParmVar 0x143128228 'arg' 'const char *'
|   |       | `-CallExpr 0x143141f30 <col:47, col:58> 'unsigned long'
|   |       |   |-ImplicitCastExpr 0x143141f18 <col:47> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x143141ec0 <col:47> 'unsigned long (const char *)' Function 0x143141a10 'strlen' 'unsigned long (const char *)'
|   |       |   `-ImplicitCastExpr 0x143141f58 <col:54> 'const char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x143141ee0 <col:54> 'const char *' lvalue ParmVar 0x1431282a8 'post' 'const char *'
|   |       `-ImplicitCastExpr 0x143141fb0 <col:62> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x143141f90 <col:62> 'int' 1
|   |-DeclStmt 0x143142098 <line:5:5, col:13>
|   | `-VarDecl 0x143142030 <col:5, col:9> col:9 used code 'int'
|   |-DeclStmt 0x143142130 <line:6:5, col:15>
|   | `-VarDecl 0x1431420c8 <col:5, col:11> col:11 used line 'char *'
|   |-IfStmt 0x143142468 <line:8:5, line:13:5>
|   | |-BinaryOperator 0x1431421c0 <line:8:9, col:19> '<dependent type>' contains-errors '&'
|   | | |-DeclRefExpr 0x143142148 <col:9> 'int' lvalue ParmVar 0x143128328 'options' 'int'
|   | | `-RecoveryExpr 0x1431421a0 <col:19> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x143142448 <col:28, line:13:5>
|   |   |-BinaryOperator 0x143142348 <line:9:9, col:35> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1431421e0 <col:9> 'int' lvalue Var 0x143142030 'code' 'int'
|   |   | `-CallExpr 0x143142320 <col:16, col:35> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1431422e0 <col:16> 'int ()' Function 0x143142228 'gs_main_init2' 'int ()'
|   |   |   `-RecoveryExpr 0x143142300 <col:30> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x143142428 <line:11:9, line:12:20>
|   |     |-BinaryOperator 0x1431423c0 <line:11:13, col:20> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1431423a8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x143142368 <col:13> 'int' lvalue Var 0x143142030 'code' 'int'
|   |     | `-IntegerLiteral 0x143142388 <col:20> 'int' 0
|   |     `-ReturnStmt 0x143142418 <line:12:13, col:20>
|   |       `-ImplicitCastExpr 0x143142400 <col:20> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1431423e0 <col:20> 'int' lvalue Var 0x143142030 'code' 'int'
|   |-BinaryOperator 0x143142708 <line:14:5, col:58> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x143142488 <col:5> 'char *' lvalue Var 0x1431420c8 'line' 'char *'
|   | `-CStyleCastExpr 0x1431426e0 <col:12, col:58> 'char *' contains-errors <Dependent>
|   |   `-CallExpr 0x143142690 <col:20, col:58> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x143142588 <col:20> 'int ()' Function 0x1431424d0 'gs_alloc_bytes' 'int ()'
|   |     |-CXXDependentScopeMemberExpr 0x1431425c8 <col:35, col:42> '<dependent type>' contains-errors lvalue ->heap
|   |     | `-RecoveryExpr 0x1431425a8 <col:35> '<dependent type>' contains-errors lvalue
|   |     |-DeclRefExpr 0x143142610 <col:48> 'int' lvalue Var 0x143128520 'len' 'int'
|   |     `-StringLiteral 0x143142670 <col:53> 'char[4]' lvalue "STR"
|   |-IfStmt 0x143809af8 <line:15:5, line:18:5>
|   | |-BinaryOperator 0x143142798 <line:15:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x143142768 <col:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x143142728 <col:9> 'char *' lvalue Var 0x1431420c8 'line' 'char *'
|   | | `-ImplicitCastExpr 0x143142780 <col:17> 'char *' <NullToPointer>
|   | |   `-IntegerLiteral 0x143142748 <col:17> 'int' 0
|   | `-CompoundStmt 0x143809ad8 <col:20, line:18:5>
|   |   |-CallExpr 0x143809910 <line:16:9, col:22> 'int'
|   |   | |-ImplicitCastExpr 0x1438098f8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1438098b8 <col:9> 'int ()' Function 0x143809800 'lprintf' 'int ()'
|   |   | `-ImplicitCastExpr 0x143809938 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x1438098d8 <col:17> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x143809ab0 <line:17:9, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x143809a30 <col:9> 'int ()' Function 0x143809978 'return_error' 'int ()'
|   |     `-RecoveryExpr 0x143809a90 <col:22> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x143809e18 <line:19:5, col:21> 'char *'
|   | |-ImplicitCastExpr 0x143809e00 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x143809d40 <col:5> 'char *(char *, const char *)' Function 0x143809b60 'strcpy' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x143809e48 <col:12> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x143809d60 <col:12> 'char *' lvalue Var 0x1431420c8 'line' 'char *'
|   | `-ImplicitCastExpr 0x143809e60 <col:18> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x143809d80 <col:18> 'const char *' lvalue ParmVar 0x1431281a8 'pre' 'const char *'
|   |-CallExpr 0x143809fd0 <line:20:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x143809fb8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x143809f58 <col:5> 'int ()' Function 0x143809ea0 'esc_strcat' 'int ()'
|   | |-ImplicitCastExpr 0x14380a000 <col:16> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x143809f78 <col:16> 'char *' lvalue Var 0x1431420c8 'line' 'char *'
|   | `-ImplicitCastExpr 0x14380a018 <col:22> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x143809f98 <col:22> 'const char *' lvalue ParmVar 0x143128228 'arg' 'const char *'
|   |-CallExpr 0x14380a2b8 <line:21:5, col:22> 'char *'
|   | |-ImplicitCastExpr 0x14380a2a0 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14380a210 <col:5> 'char *(char *, const char *)' Function 0x14380a030 'strcat' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x14380a2e8 <col:12> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14380a230 <col:12> 'char *' lvalue Var 0x1431420c8 'line' 'char *'
|   | `-ImplicitCastExpr 0x14380a300 <col:18> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14380a250 <col:18> 'const char *' lvalue ParmVar 0x1431282a8 'post' 'const char *'
|   |-IfStmt 0x14380a5f8 <line:23:5, line:28:5> has_else
|   | |-RecoveryExpr 0x14380a370 <line:23:9, col:29> '_Bool' contains-errors
|   | |-CompoundStmt 0x14380a480 <col:32, line:25:5>
|   | `-CompoundStmt 0x14380a5e0 <line:26:10, line:28:5>
|   |   `-BinaryOperator 0x14380a5c0 <line:27:9, col:45> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x14380a520 <col:9, col:25> '<dependent type>' contains-errors lvalue ->starting_arg_file
|   |     | `-CXXDependentScopeMemberExpr 0x14380a4d8 <col:9, col:16> '<dependent type>' contains-errors lvalue ->i_ctx_p
|   |     |   `-RecoveryExpr 0x14380a4b0 <col:9> '<dependent type>' contains-errors lvalue
|   |     |     `-DeclRefExpr 0x14380a490 <col:9> 'int *' lvalue ParmVar 0x143128128 'minst' 'int *'
|   |     `-DeclRefExpr 0x14380a5a0 <col:45> 'const char *' lvalue ParmVar 0x1431281a8 'pre' 'const char *'
|   |-BinaryOperator 0x14380a7e0 <line:29:5, col:43> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14380a628 <col:5> 'int' lvalue Var 0x143142030 'code' 'int'
|   | `-CallExpr 0x14380a7a8 <col:12, col:43> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14380a728 <col:12> 'int ()' Function 0x14380a670 'run_string' 'int ()'
|   |   |-RecoveryExpr 0x14380a748 <col:23> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x14380a768 <col:30> 'char *' lvalue Var 0x1431420c8 'line' 'char *'
|   |   `-DeclRefExpr 0x14380a788 <col:36> 'int' lvalue ParmVar 0x143128328 'options' 'int'
|   |-CallExpr 0x14380aa98 <line:31:5, col:44> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14380a9d0 <col:5> 'int ()' Function 0x14380a918 'gs_free_object' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x14380aa10 <col:20, col:27> '<dependent type>' contains-errors lvalue ->heap
|   | | `-RecoveryExpr 0x14380a9f0 <col:20> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x14380aa58 <col:33> 'char *' lvalue Var 0x1431420c8 'line' 'char *'
|   | `-StringLiteral 0x14380aa78 <col:39> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x14380ab08 <line:32:5, col:12>
|     `-ImplicitCastExpr 0x14380aaf0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14380aad0 <col:12> 'int' lvalue Var 0x143142030 'code' 'int'
|-FunctionDecl 0x143141a10 <line:4:15> col:15 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x143141b10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x143141ab8 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x143809b60 <line:19:5> col:5 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x143809c60 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x143809cc8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x143809c08 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x14380a030 <line:21:5> col:5 implicit used strcat 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x14380a130 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x14380a198 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14380a0d8 <<invalid sloc>> Implicit 889
