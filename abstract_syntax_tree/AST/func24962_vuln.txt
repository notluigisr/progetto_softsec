TranslationUnitDecl 0x134855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1348564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x134855bd0 '__int128'
|-TypedefDecl 0x134856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x134855bf0 'unsigned __int128'
|-TypedefDecl 0x13500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13500bc00 'struct __NSConstantString_tag'
|   `-Record 0x134856580 '__NSConstantString_tag'
|-TypedefDecl 0x13500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134855d90 '__SVInt8_t'
|-TypedefDecl 0x13500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134855db0 '__SVInt16_t'
|-TypedefDecl 0x13500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134855dd0 '__SVInt32_t'
|-TypedefDecl 0x13500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134855df0 '__SVInt64_t'
|-TypedefDecl 0x13500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134855e10 '__SVUint8_t'
|-TypedefDecl 0x13500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134855e30 '__SVUint16_t'
|-TypedefDecl 0x13500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134855e50 '__SVUint32_t'
|-TypedefDecl 0x13500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134855e70 '__SVUint64_t'
|-TypedefDecl 0x13500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134855e90 '__SVFloat16_t'
|-TypedefDecl 0x13500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1348560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1348560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1348560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1348561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1348561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1348561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1348562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1348562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1348562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134856390 '__SVBool_t'
|-TypedefDecl 0x13500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1348563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1348563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1348563f0 '__SVCount_t'
|-TypedefDecl 0x13500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13500dbb0 'char *'
|   `-BuiltinType 0x1348556b0 'char'
|-TypedefDecl 0x13500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13500dbb0 'char *'
|   `-BuiltinType 0x1348556b0 'char'
|-FunctionDecl 0x1350269d8 <dataset_diviso_filec/func24962_vuln.c:1:1, line:40:1> line:1:5 xstateregs_set 'int (struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, int)'
| |-ParmVarDecl 0x13500e248 <col:20, col:40> col:40 used target 'struct task_struct *'
| |-ParmVarDecl 0x135026628 <col:48, col:74> col:74 regset 'const struct user_regset *'
| |-ParmVarDecl 0x1350266a8 <line:2:5, col:18> col:18 used pos 'unsigned int'
| |-ParmVarDecl 0x135026728 <col:23, col:36> col:36 used count 'unsigned int'
| |-ParmVarDecl 0x1350267d8 <line:3:5, col:17> col:17 used kbuf 'const void *'
| |-ParmVarDecl 0x135026850 <col:23, col:34> col:34 __user 'int'
| `-CompoundStmt 0x13502edf0 <line:4:1, line:40:1>
|   |-DeclStmt 0x135026da8 <line:5:2, col:39>
|   | |-RecordDecl 0x135026af8 <col:2, col:9> col:9 struct fpu
|   | `-VarDecl 0x135026c68 <col:2, col:36> col:14 used fpu 'struct fpu *' cinit
|   |   `-UnaryOperator 0x135026d78 <col:20, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x135026d30 <col:21, col:36> '<dependent type>' contains-errors lvalue .fpu
|   |       `-RecoveryExpr 0x135026d08 <col:21, col:29> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x135026cd0 <col:21> 'struct task_struct *' lvalue ParmVar 0x13500e248 'target' 'struct task_struct *'
|   |-DeclStmt 0x135026fa8 <line:6:2, col:27>
|   | |-RecordDecl 0x135026dc0 <col:2, col:9> col:9 struct xregs_state
|   | `-VarDecl 0x135026f28 <col:2, col:22> col:22 used xsave 'struct xregs_state *'
|   |-DeclStmt 0x135027040 <line:7:2, col:9>
|   | `-VarDecl 0x135026fd8 <col:2, col:6> col:6 used ret 'int'
|   |-IfStmt 0x135027300 <line:9:2, line:10:11>
|   | |-UnaryOperator 0x135027240 <line:9:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x135027218 <col:7, col:37> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x135027180 <col:7> 'int ()' Function 0x1350270c8 'boot_cpu_has' 'int ()'
|   | |   `-RecoveryExpr 0x1350271f8 <col:20> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1350272f0 <line:10:3, col:11>
|   |   `-UnaryOperator 0x1350272d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x1350272c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x1350272a0 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1350274f0 <line:13:2, line:14:11>
|   | |-RecoveryExpr 0x135027428 <line:13:6, col:49> '_Bool' contains-errors
|   | `-ReturnStmt 0x1350274e0 <line:14:3, col:11>
|   |   `-UnaryOperator 0x1350274c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x1350274b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x135027490 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13502d600 <line:16:2, col:22> 'struct xregs_state *' contains-errors '='
|   | |-DeclRefExpr 0x135027510 <col:2> 'struct xregs_state *' lvalue Var 0x135026f28 'xsave' 'struct xregs_state *'
|   | `-UnaryOperator 0x1350275d8 <col:10, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x135027590 <col:11, col:22> '<dependent type>' contains-errors lvalue .xsave
|   |     `-RecoveryExpr 0x135027568 <col:11, col:16> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x135027530 <col:11> 'struct fpu *' contains-errors lvalue Var 0x135026c68 'fpu' 'struct fpu *'
|   |-CallExpr 0x13502d788 <line:18:2, col:33> 'int' contains-errors
|   | |-ImplicitCastExpr 0x13502d770 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13502d700 <col:2> 'int ()' Function 0x13502d648 'fpu__activate_fpstate_write' 'int ()'
|   | `-ImplicitCastExpr 0x13502d7b0 <col:30> 'struct fpu *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x13502d720 <col:30> 'struct fpu *' contains-errors lvalue Var 0x135026c68 'fpu' 'struct fpu *'
|   |-IfStmt 0x13502e190 <line:20:2, line:27:2> has_else
|   | |-CallExpr 0x13502d848 <line:20:6, col:37> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13502d7c8 <col:6> 'int ()' Function 0x1350270c8 'boot_cpu_has' 'int ()'
|   | | `-RecoveryExpr 0x13502d828 <col:19> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x13502dd30 <col:40, line:25:2>
|   | | `-IfStmt 0x13502dd00 <line:21:3, line:24:41> has_else
|   | |   |-ImplicitCastExpr 0x13502d890 <line:21:7> 'const void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13502d870 <col:7> 'const void *' lvalue ParmVar 0x1350267d8 'kbuf' 'const void *'
|   | |   |-BinaryOperator 0x13502da80 <line:22:4, col:43> 'int' '='
|   | |   | |-DeclRefExpr 0x13502d8a8 <col:4> 'int' lvalue Var 0x135026fd8 'ret' 'int'
|   | |   | `-CallExpr 0x13502da20 <col:10, col:43> 'int'
|   | |   |   |-ImplicitCastExpr 0x13502da08 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x13502d9a8 <col:10> 'int ()' Function 0x13502d8f0 'copy_kernel_to_xstate' 'int ()'
|   | |   |   |-ImplicitCastExpr 0x13502da50 <col:32> 'struct xregs_state *' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13502d9c8 <col:32> 'struct xregs_state *' lvalue Var 0x135026f28 'xsave' 'struct xregs_state *'
|   | |   |   `-ImplicitCastExpr 0x13502da68 <col:39> 'const void *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x13502d9e8 <col:39> 'const void *' lvalue ParmVar 0x1350267d8 'kbuf' 'const void *'
|   | |   `-BinaryOperator 0x13502dce0 <line:24:4, col:41> 'int' '='
|   | |     |-DeclRefExpr 0x13502daa0 <col:4> 'int' lvalue Var 0x135026fd8 'ret' 'int'
|   | |     `-CallExpr 0x13502dc80 <col:10, col:41> 'int'
|   | |       |-ImplicitCastExpr 0x13502dc68 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x13502dba0 <col:10> 'int ()' Function 0x13502dae8 'copy_user_to_xstate' 'int ()'
|   | |       |-ImplicitCastExpr 0x13502dcb0 <col:30> 'struct xregs_state *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x13502dbc0 <col:30> 'struct xregs_state *' lvalue Var 0x135026f28 'xsave' 'struct xregs_state *'
|   | |       `-ImplicitCastExpr 0x13502dcc8 <col:37> 'const void *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x13502dc48 <col:37> 'const void *' lvalue ParmVar 0x1350267d8 'kbuf' 'const void *'
|   | `-CompoundStmt 0x13502e178 <line:25:9, line:27:2>
|   |   `-BinaryOperator 0x13502e158 <line:26:3, col:68> 'int' '='
|   |     |-DeclRefExpr 0x13502dd48 <col:3> 'int' lvalue Var 0x135026fd8 'ret' 'int'
|   |     `-CallExpr 0x13502e0e8 <col:9, col:68> 'int'
|   |       |-ImplicitCastExpr 0x13502e0d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13502de48 <col:9> 'int ()' Function 0x13502dd90 'user_regset_copyin' 'int ()'
|   |       |-UnaryOperator 0x13502dec0 <col:28, col:29> 'unsigned int *' prefix '&' cannot overflow
|   |       | `-DeclRefExpr 0x13502de68 <col:29> 'unsigned int' lvalue ParmVar 0x1350266a8 'pos' 'unsigned int'
|   |       |-UnaryOperator 0x13502def8 <col:34, col:35> 'unsigned int *' prefix '&' cannot overflow
|   |       | `-DeclRefExpr 0x13502ded8 <col:35> 'unsigned int' lvalue ParmVar 0x135026728 'count' 'unsigned int'
|   |       |-UnaryOperator 0x13502df60 <col:42, col:43> 'const void **' prefix '&' cannot overflow
|   |       | `-DeclRefExpr 0x13502df10 <col:43> 'const void *' lvalue ParmVar 0x1350267d8 'kbuf' 'const void *'
|   |       |-UnaryOperator 0x13502e0b8 <col:49, col:50> 'const void **' prefix '&' cannot overflow
|   |       | `-DeclRefExpr 0x13502e098 <col:50> 'const void *' lvalue ParmVar 0x1350267d8 'kbuf' 'const void *'
|   |       |-ImplicitCastExpr 0x13502e140 <col:56> 'struct xregs_state *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13502dfa8 <col:56> 'struct xregs_state *' lvalue Var 0x135026f28 'xsave' 'struct xregs_state *'
|   |       |-IntegerLiteral 0x13502dfc8 <col:63> 'int' 0
|   |       `-UnaryOperator 0x13502e008 <col:66, col:67> 'int' prefix '-'
|   |         `-IntegerLiteral 0x13502dfe8 <col:67> 'int' 1
|   |-IfStmt 0x13502e398 <line:30:2, line:31:27>
|   | |-ImplicitCastExpr 0x13502e1e0 <line:30:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13502e1c0 <col:6> 'int' lvalue Var 0x135026fd8 'ret' 'int'
|   | `-CallExpr 0x13502e370 <line:31:3, col:27> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13502e2d8 <col:3> 'int ()' Function 0x13502e220 'fpstate_init' 'int ()'
|   |   `-UnaryOperator 0x13502e358 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x13502e330 <col:17, col:22> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13502e2f8 <col:17> 'struct fpu *' contains-errors lvalue Var 0x135026c68 'fpu' 'struct fpu *'
|   |-CompoundAssignOperator 0x13502e4c8 <line:34:2, col:23> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x13502e418 <col:2, col:14> '<dependent type>' contains-errors lvalue .mxcsr
|   | | `-RecoveryExpr 0x13502e3f0 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13502e3b8 <col:2> 'struct xregs_state *' lvalue Var 0x135026f28 'xsave' 'struct xregs_state *'
|   | `-RecoveryExpr 0x13502e4a8 <col:23> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13502ed70 <line:37:2, col:39> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13502ec50 <col:2> 'void *(void *, int, unsigned long)' Function 0x13502ea00 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x13502ed18 <col:9, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x13502ecd0 <col:10, col:24> '<dependent type>' contains-errors lvalue .reserved
|   | |   `-RecoveryExpr 0x13502eca8 <col:10, col:17> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x13502ec70 <col:10> 'struct xregs_state *' lvalue Var 0x135026f28 'xsave' 'struct xregs_state *'
|   | |-IntegerLiteral 0x13502ed30 <col:34> 'int' 0
|   | `-IntegerLiteral 0x13502ed50 <col:37> 'int' 48
|   `-ReturnStmt 0x13502ede0 <line:39:2, col:9>
|     `-ImplicitCastExpr 0x13502edc8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13502eda8 <col:9> 'int' lvalue Var 0x135026fd8 'ret' 'int'
`-FunctionDecl 0x13502ea00 <line:37:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x13502eb00 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13502eb68 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x13502ebd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13502eaa8 <<invalid sloc>> Implicit 900
