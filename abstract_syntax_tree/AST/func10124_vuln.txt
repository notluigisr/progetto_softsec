TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x13280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13280bc00 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x13280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x13280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x13280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x13280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x13280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x13280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x13280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x13280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x13280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x13280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x13280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x13280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13280dbb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x13280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13280dbb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-FunctionDecl 0x13280de88 <dataset_diviso_filec/func10124_vuln.c:1:1, line:56:1> line:1:5 invalid sdsnewlen 'int (const void *, int)'
| |-ParmVarDecl 0x13280dd28 <col:15, col:27> col:27 used init 'const void *'
| |-ParmVarDecl 0x13280dda8 <col:33, col:40> col:40 invalid initlen 'int'
| `-CompoundStmt 0x132122e40 <col:49, line:56:1>
|   |-DeclStmt 0x13280dfc0 <line:2:5, col:13>
|   | `-VarDecl 0x13280df58 <col:5, col:11> col:11 used sh 'void *'
|   |-DeclStmt 0x13280e218 <line:4:5, col:36>
|   | `-VarDecl 0x13280dfe8 <col:5, col:35> col:10 used type 'char' cinit
|   |   `-CallExpr 0x13280e1f0 <col:17, col:35> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13280e1b0 <col:17> 'int ()' Function 0x13280e0f8 'sdsReqType' 'int ()'
|   |     `-RecoveryExpr 0x13280e1d0 <col:28> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x132827800 <line:6:5, col:52>
|   | |-BinaryOperator 0x13280e348 <col:9, col:42> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x13280e328 <col:9, col:17> 'int' contains-errors '=='
|   | | | |-DeclRefExpr 0x13280e230 <col:9> 'char' contains-errors lvalue Var 0x13280dfe8 'type' 'char'
|   | | | `-RecoveryExpr 0x13280e308 <col:17> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x13280e2c8 <col:31, col:42> 'int' contains-errors '=='
|   | |   |-RecoveryExpr 0x13280e288 <col:31> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x13280e2a8 <col:42> 'int' 0
|   | `-BinaryOperator 0x13280e3e0 <col:45, col:52> 'char' contains-errors '='
|   |   |-DeclRefExpr 0x13280e368 <col:45> 'char' contains-errors lvalue Var 0x13280dfe8 'type' 'char'
|   |   `-RecoveryExpr 0x13280e3c0 <col:52> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x132827a60 <line:7:5, col:34>
|   | `-VarDecl 0x132827838 <col:5, col:33> col:9 used hdrlen 'int' cinit
|   |   `-CallExpr 0x132827a08 <col:18, col:33> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x1328279f0 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x132827980 <col:18> 'int ()' Function 0x1328278c8 'sdsHdrSize' 'int ()'
|   |     `-ImplicitCastExpr 0x132827a48 <col:29> 'int' contains-errors <IntegralCast>
|   |       `-ImplicitCastExpr 0x132827a30 <col:29> 'char' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x1328279a0 <col:29> 'char' contains-errors lvalue Var 0x13280dfe8 'type' 'char'
|   |-DeclStmt 0x132827b30 <line:8:5, col:22>
|   | `-VarDecl 0x132827ac8 <col:5, col:20> col:20 used fp 'unsigned char *'
|   |-BinaryOperator 0x132827d30 <line:10:5, col:35> 'void *' contains-errors '='
|   | |-DeclRefExpr 0x132827b48 <col:5> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|   | `-CallExpr 0x132827d08 <col:10, col:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x132827c48 <col:10> 'int ()' Function 0x132827b90 's_malloc' 'int ()'
|   |   `-BinaryOperator 0x132827ce8 <col:19, col:34> '<dependent type>' contains-errors '+'
|   |     |-BinaryOperator 0x132827ca8 <col:19, col:26> '<dependent type>' contains-errors '+'
|   |     | |-DeclRefExpr 0x132827c68 <col:19> 'int' contains-errors lvalue Var 0x132827838 'hdrlen' 'int'
|   |     | `-RecoveryExpr 0x132827c88 <col:26> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x132827cc8 <col:34> 'int' 1
|   |-IfStmt 0x132827e30 <line:11:5, col:28>
|   | |-BinaryOperator 0x132827dc8 <col:9, col:15> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x132827d50 <col:9> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|   | | `-RecoveryExpr 0x132827da8 <col:15> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x132827e20 <col:21, col:28>
|   |   `-RecoveryExpr 0x132827e00 <col:28> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x132829a00 <line:12:5, line:15:39> has_else
|   | |-BinaryOperator 0x132827ec8 <line:12:9, col:15> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x132827e50 <col:9> 'const void *' lvalue ParmVar 0x13280dd28 'init' 'const void *'
|   | | `-RecoveryExpr 0x132827ea8 <col:15> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x132827f60 <line:13:9, col:16> 'const void *' contains-errors '='
|   | | |-DeclRefExpr 0x132827ee8 <col:9> 'const void *' lvalue ParmVar 0x13280dd28 'init' 'const void *'
|   | | `-RecoveryExpr 0x132827f40 <col:16> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x1328287e0 <line:14:10, line:15:39>
|   |   |-UnaryOperator 0x132827fb8 <line:14:14, col:15> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x132827fa0 <col:15> 'const void *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x132827f80 <col:15> 'const void *' lvalue ParmVar 0x13280dd28 'init' 'const void *'
|   |   `-CallExpr 0x1328287a8 <line:15:9, col:39> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x132828690 <col:9> 'void *(void *, int, unsigned long)' Function 0x132828440 'memset' 'void *(void *, int, unsigned long)'
|   |     |-DeclRefExpr 0x1328286b0 <col:16> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|   |     |-IntegerLiteral 0x1328286d0 <col:20> 'int' 0
|   |     `-BinaryOperator 0x132828770 <col:23, col:38> '<dependent type>' contains-errors '+'
|   |       |-BinaryOperator 0x132828730 <col:23, col:30> '<dependent type>' contains-errors '+'
|   |       | |-DeclRefExpr 0x1328286f0 <col:23> 'int' contains-errors lvalue Var 0x132827838 'hdrlen' 'int'
|   |       | `-RecoveryExpr 0x132828710 <col:30> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x132828750 <col:38> 'int' 1
|   `-SwitchStmt 0x132829bc0 <line:18:5, line:51:5>
|     |-ImplicitCastExpr 0x132829ba8 <line:18:12> 'int' contains-errors <IntegralCast>
|     | `-ImplicitCastExpr 0x132829b90 <col:12> 'char' contains-errors <LValueToRValue>
|     |   `-DeclRefExpr 0x132829b70 <col:12> 'char' contains-errors lvalue Var 0x13280dfe8 'type' 'char'
|     `-CompoundStmt 0x13282a860 <col:18, line:51:5>
|       |-CompoundStmt 0x132829cd0 <line:19:26, line:22:9>
|       | `-BreakStmt 0x132829cc8 <line:21:13>
|       |-CompoundStmt 0x13282a0c0 <line:23:26, line:29:9>
|       | |-CallExpr 0x132829e88 <line:24:13, col:28> '<dependent type>' contains-errors
|       | | |-DeclRefExpr 0x132829de0 <col:13> 'int ()' Function 0x132829d28 'SDS_HDR_VAR' 'int ()'
|       | | |-IntegerLiteral 0x132829e00 <col:25> 'int' 8
|       | | `-RecoveryExpr 0x132829e68 <col:27> '<dependent type>' contains-errors lvalue
|       | |-BinaryOperator 0x132829f38 <line:25:13, col:23> '<dependent type>' contains-errors '='
|       | | |-RecoveryExpr 0x132829ef0 <col:13, col:17> '<dependent type>' contains-errors lvalue
|       | | | `-DeclRefExpr 0x132829eb8 <col:13> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|       | | `-RecoveryExpr 0x132829f18 <col:23> '<dependent type>' contains-errors lvalue
|       | |-BinaryOperator 0x132829fd8 <line:26:13, col:25> '<dependent type>' contains-errors '='
|       | | |-RecoveryExpr 0x132829f90 <col:13, col:17> '<dependent type>' contains-errors lvalue
|       | | | `-DeclRefExpr 0x132829f58 <col:13> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|       | | `-RecoveryExpr 0x132829fb8 <col:25> '<dependent type>' contains-errors lvalue
|       | |-BinaryOperator 0x13282a098 <line:27:13, col:19> 'unsigned char' contains-errors '='
|       | | |-UnaryOperator 0x13282a030 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|       | | | `-ImplicitCastExpr 0x13282a018 <col:14> 'unsigned char *' <LValueToRValue>
|       | | |   `-DeclRefExpr 0x132829ff8 <col:14> 'unsigned char *' lvalue Var 0x132827ac8 'fp' 'unsigned char *'
|       | | `-ImplicitCastExpr 0x13282a080 <col:19> 'unsigned char' contains-errors <IntegralCast>
|       | |   `-ImplicitCastExpr 0x13282a068 <col:19> 'char' contains-errors <LValueToRValue>
|       | |     `-DeclRefExpr 0x13282a048 <col:19> 'char' contains-errors lvalue Var 0x13280dfe8 'type' 'char'
|       | `-BreakStmt 0x13282a0b8 <line:28:13>
|       |-CompoundStmt 0x13282a340 <line:30:27, line:36:9>
|       | |-BinaryOperator 0x13282a1b8 <line:32:13, col:23> '<dependent type>' contains-errors '='
|       | | |-RecoveryExpr 0x13282a170 <col:13, col:17> '<dependent type>' contains-errors lvalue
|       | | | `-DeclRefExpr 0x13282a138 <col:13> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|       | | `-RecoveryExpr 0x13282a198 <col:23> '<dependent type>' contains-errors lvalue
|       | |-BinaryOperator 0x13282a258 <line:33:13, col:25> '<dependent type>' contains-errors '='
|       | | |-RecoveryExpr 0x13282a210 <col:13, col:17> '<dependent type>' contains-errors lvalue
|       | | | `-DeclRefExpr 0x13282a1d8 <col:13> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|       | | `-RecoveryExpr 0x13282a238 <col:25> '<dependent type>' contains-errors lvalue
|       | |-BinaryOperator 0x13282a318 <line:34:13, col:19> 'unsigned char' contains-errors '='
|       | | |-UnaryOperator 0x13282a2b0 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|       | | | `-ImplicitCastExpr 0x13282a298 <col:14> 'unsigned char *' <LValueToRValue>
|       | | |   `-DeclRefExpr 0x13282a278 <col:14> 'unsigned char *' lvalue Var 0x132827ac8 'fp' 'unsigned char *'
|       | | `-ImplicitCastExpr 0x13282a300 <col:19> 'unsigned char' contains-errors <IntegralCast>
|       | |   `-ImplicitCastExpr 0x13282a2e8 <col:19> 'char' contains-errors <LValueToRValue>
|       | |     `-DeclRefExpr 0x13282a2c8 <col:19> 'char' contains-errors lvalue Var 0x13280dfe8 'type' 'char'
|       | `-BreakStmt 0x13282a338 <line:35:13>
|       |-CompoundStmt 0x13282a5b8 <line:37:27, line:43:9>
|       | |-BinaryOperator 0x13282a430 <line:39:13, col:23> '<dependent type>' contains-errors '='
|       | | |-RecoveryExpr 0x13282a3e8 <col:13, col:17> '<dependent type>' contains-errors lvalue
|       | | | `-DeclRefExpr 0x13282a3b0 <col:13> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|       | | `-RecoveryExpr 0x13282a410 <col:23> '<dependent type>' contains-errors lvalue
|       | |-BinaryOperator 0x13282a4d0 <line:40:13, col:25> '<dependent type>' contains-errors '='
|       | | |-RecoveryExpr 0x13282a488 <col:13, col:17> '<dependent type>' contains-errors lvalue
|       | | | `-DeclRefExpr 0x13282a450 <col:13> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|       | | `-RecoveryExpr 0x13282a4b0 <col:25> '<dependent type>' contains-errors lvalue
|       | |-BinaryOperator 0x13282a590 <line:41:13, col:19> 'unsigned char' contains-errors '='
|       | | |-UnaryOperator 0x13282a528 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|       | | | `-ImplicitCastExpr 0x13282a510 <col:14> 'unsigned char *' <LValueToRValue>
|       | | |   `-DeclRefExpr 0x13282a4f0 <col:14> 'unsigned char *' lvalue Var 0x132827ac8 'fp' 'unsigned char *'
|       | | `-ImplicitCastExpr 0x13282a578 <col:19> 'unsigned char' contains-errors <IntegralCast>
|       | |   `-ImplicitCastExpr 0x13282a560 <col:19> 'char' contains-errors <LValueToRValue>
|       | |     `-DeclRefExpr 0x13282a540 <col:19> 'char' contains-errors lvalue Var 0x13280dfe8 'type' 'char'
|       | `-BreakStmt 0x13282a5b0 <line:42:13>
|       `-CompoundStmt 0x13282a830 <line:44:27, line:50:9>
|         |-BinaryOperator 0x13282a6a8 <line:46:13, col:23> '<dependent type>' contains-errors '='
|         | |-RecoveryExpr 0x13282a660 <col:13, col:17> '<dependent type>' contains-errors lvalue
|         | | `-DeclRefExpr 0x13282a628 <col:13> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|         | `-RecoveryExpr 0x13282a688 <col:23> '<dependent type>' contains-errors lvalue
|         |-BinaryOperator 0x13282a748 <line:47:13, col:25> '<dependent type>' contains-errors '='
|         | |-RecoveryExpr 0x13282a700 <col:13, col:17> '<dependent type>' contains-errors lvalue
|         | | `-DeclRefExpr 0x13282a6c8 <col:13> 'void *' lvalue Var 0x13280df58 'sh' 'void *'
|         | `-RecoveryExpr 0x13282a728 <col:25> '<dependent type>' contains-errors lvalue
|         |-BinaryOperator 0x13282a808 <line:48:13, col:19> 'unsigned char' contains-errors '='
|         | |-UnaryOperator 0x13282a7a0 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|         | | `-ImplicitCastExpr 0x13282a788 <col:14> 'unsigned char *' <LValueToRValue>
|         | |   `-DeclRefExpr 0x13282a768 <col:14> 'unsigned char *' lvalue Var 0x132827ac8 'fp' 'unsigned char *'
|         | `-ImplicitCastExpr 0x13282a7f0 <col:19> 'unsigned char' contains-errors <IntegralCast>
|         |   `-ImplicitCastExpr 0x13282a7d8 <col:19> 'char' contains-errors <LValueToRValue>
|         |     `-DeclRefExpr 0x13282a7b8 <col:19> 'char' contains-errors lvalue Var 0x13280dfe8 'type' 'char'
|         `-BreakStmt 0x13282a828 <line:49:13>
|-FunctionDecl 0x132828440 <line:15:9> col:9 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x132828540 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1328285a8 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x132828610 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1328284e8 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x13282a948 <line:53:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x132122c58 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x132122cc0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x132122d28 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x132122c00 <<invalid sloc>> Implicit 882
