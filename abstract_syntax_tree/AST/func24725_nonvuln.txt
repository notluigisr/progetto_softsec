TranslationUnitDecl 0x132034c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x132035ab8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1320351d0 '__int128'
|-TypedefDecl 0x132035b28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1320351f0 'unsigned __int128'
|-TypedefDecl 0x13280ce30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13280cc00 'struct __NSConstantString_tag'
|   `-Record 0x132035b80 '__NSConstantString_tag'
|-TypedefDecl 0x13280ce98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132035390 '__SVInt8_t'
|-TypedefDecl 0x13280cf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1320353b0 '__SVInt16_t'
|-TypedefDecl 0x13280cf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1320353d0 '__SVInt32_t'
|-TypedefDecl 0x13280cfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1320353f0 '__SVInt64_t'
|-TypedefDecl 0x13280d038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132035410 '__SVUint8_t'
|-TypedefDecl 0x13280d0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132035430 '__SVUint16_t'
|-TypedefDecl 0x13280d108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132035450 '__SVUint32_t'
|-TypedefDecl 0x13280d170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132035470 '__SVUint64_t'
|-TypedefDecl 0x13280d1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132035490 '__SVFloat16_t'
|-TypedefDecl 0x13280d240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1320354b0 '__SVFloat32_t'
|-TypedefDecl 0x13280d2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1320354d0 '__SVFloat64_t'
|-TypedefDecl 0x13280d310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1320354f0 '__SVBfloat16_t'
|-TypedefDecl 0x13280d378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132035510 '__clang_svint8x2_t'
|-TypedefDecl 0x13280d3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132035530 '__clang_svint16x2_t'
|-TypedefDecl 0x13280d448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132035550 '__clang_svint32x2_t'
|-TypedefDecl 0x13280d4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132035570 '__clang_svint64x2_t'
|-TypedefDecl 0x13280d518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132035590 '__clang_svuint8x2_t'
|-TypedefDecl 0x13280d580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1320355b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13280d5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1320355d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13280d650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1320355f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13280d6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132035610 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13280d720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132035630 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13280d788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132035650 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13280d7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132035670 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13280d858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132035690 '__clang_svint8x3_t'
|-TypedefDecl 0x13280d8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320356b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13280d928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320356d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13280d990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320356f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13280d9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132035710 '__clang_svuint8x3_t'
|-TypedefDecl 0x13280da60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132035730 '__clang_svuint16x3_t'
|-TypedefDecl 0x13280dac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132035750 '__clang_svuint32x3_t'
|-TypedefDecl 0x13280db30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132035770 '__clang_svuint64x3_t'
|-TypedefDecl 0x13280db98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132035790 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13280e400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320357b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13280e468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320357d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13280e4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320357f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13280e538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132035810 '__clang_svint8x4_t'
|-TypedefDecl 0x13280e5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132035830 '__clang_svint16x4_t'
|-TypedefDecl 0x13280e608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132035850 '__clang_svint32x4_t'
|-TypedefDecl 0x13280e670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132035870 '__clang_svint64x4_t'
|-TypedefDecl 0x13280e6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132035890 '__clang_svuint8x4_t'
|-TypedefDecl 0x13280e740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320358b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13280e7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320358d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13280e810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320358f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13280e878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132035910 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13280e8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132035930 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13280e948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132035950 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13280e9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132035970 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13280ea18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132035990 '__SVBool_t'
|-TypedefDecl 0x13280ea80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320359b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13280eae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320359d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13280eb50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320359f0 '__SVCount_t'
|-TypedefDecl 0x13280ebf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13280ebb0 'char *'
|   `-BuiltinType 0x132034cb0 'char'
|-TypedefDecl 0x13280ec68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13280ebb0 'char *'
|   `-BuiltinType 0x132034cb0 'char'
|-FunctionDecl 0x13280ee38 <dataset_diviso_filec/func24725_nonvuln.c:1:1, line:36:1> line:1:14 get_addrbook_mboxname 'char *(const char *, const char *)' static
| |-ParmVarDecl 0x13280ecd8 <col:36, col:48> col:48 used list 'const char *'
| |-ParmVarDecl 0x13280ed58 <col:54, col:66> col:66 used userid 'const char *'
| `-CompoundStmt 0x132829118 <line:2:1, line:36:1>
|   |-DeclStmt 0x13280f050 <line:3:5, col:42>
|   | `-VarDecl 0x13280ef50 <col:5, col:37> col:17 used addrbook_urn_full 'const char *' cinit
|   |   `-ImplicitCastExpr 0x13280f038 <col:37> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x13280f020 <col:37> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x13280f000 <col:37> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x13280f138 <line:4:5, col:44>
|   | `-VarDecl 0x13280f080 <col:5, col:39> col:17 used addrbook_urn_abbrev 'const char *' cinit
|   |   `-ImplicitCastExpr 0x13280f120 <col:39> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x13280f108 <col:39> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x13280f0e8 <col:39> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x13280f2f0 <line:5:5, col:41>
|   | |-VarDecl 0x13280f168 <col:5, col:19> col:11 used abook 'char *' cinit
|   | | `-RecoveryExpr 0x13280f200 <col:19> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x13280f238 <col:5, col:37> col:26 used mboxname 'char *' cinit
|   |   `-RecoveryExpr 0x13280f2b8 <col:37> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x132102340 <line:8:5, col:63>
|   | `-VarDecl 0x13280f320 <col:5, col:62> col:11 used uri 'char *' cinit
|   |   `-CallExpr 0x132102308 <col:17, col:62> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x132101ab8 <col:17> 'int ()' Function 0x132101a00 'xmlURIUnescapeString' 'int ()'
|   |     |-DeclRefExpr 0x132101ad8 <col:38> 'const char *' lvalue ParmVar 0x13280ecd8 'list' 'const char *'
|   |     |-CallExpr 0x1321022a8 <col:44, col:55> 'unsigned long'
|   |     | |-ImplicitCastExpr 0x132102290 <col:44> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1321020d0 <col:44> 'unsigned long (const char *)' Function 0x132101f60 'strlen' 'unsigned long (const char *)'
|   |     | `-ImplicitCastExpr 0x1321022d0 <col:51> 'const char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1321020f0 <col:51> 'const char *' lvalue ParmVar 0x13280ecd8 'list' 'const char *'
|   |     `-RecoveryExpr 0x1321022e8 <col:58> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1328280f8 <line:10:5, line:15:5> has_else
|   | |-UnaryOperator 0x132102808 <line:10:9, col:67> 'int' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x132102788 <col:10, col:67> 'int' contains-errors
|   | |   |-ImplicitCastExpr 0x132102770 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1321025f8 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x1321023a8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |   |-ImplicitCastExpr 0x1321027d8 <col:18> 'const char *' contains-errors <NoOp>
|   | |   | `-ImplicitCastExpr 0x1321027c0 <col:18> 'char *' contains-errors <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x132102618 <col:18> 'char *' contains-errors lvalue Var 0x13280f320 'uri' 'char *'
|   | |   |-ImplicitCastExpr 0x1321027f0 <col:23> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x132102638 <col:23> 'const char *' lvalue Var 0x13280ef50 'addrbook_urn_full' 'const char *'
|   | |   `-CallExpr 0x1321026c8 <col:42, col:66> 'unsigned long'
|   | |     |-ImplicitCastExpr 0x1321026b0 <col:42> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x132102658 <col:42> 'unsigned long (const char *)' Function 0x132101f60 'strlen' 'unsigned long (const char *)'
|   | |     `-ImplicitCastExpr 0x1321026f0 <col:49> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x132102678 <col:49> 'const char *' lvalue Var 0x13280ef50 'addrbook_urn_full' 'const char *'
|   | |-CompoundStmt 0x132827cf8 <col:70, line:12:5>
|   | | `-BinaryOperator 0x132827cd8 <line:11:9, col:56> 'char *' contains-errors '='
|   | |   |-DeclRefExpr 0x132102820 <col:9> 'char *' contains-errors lvalue Var 0x13280f168 'abook' 'char *'
|   | |   `-ImplicitCastExpr 0x132827cc0 <col:17, col:56> 'char *' contains-errors <IntegralToPointer>
|   | |     `-CallExpr 0x132827c98 <col:17, col:56> 'int' contains-errors
|   | |       |-ImplicitCastExpr 0x132827c80 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x132102920 <col:17> 'int ()' Function 0x132102868 'xstrdup' 'int ()'
|   | |       `-BinaryOperator 0x132827c30 <col:25, col:55> 'char *' contains-errors '+'
|   | |         |-ImplicitCastExpr 0x132827c18 <col:25> 'char *' contains-errors <LValueToRValue>
|   | |         | `-DeclRefExpr 0x132102940 <col:25> 'char *' contains-errors lvalue Var 0x13280f320 'uri' 'char *'
|   | |         `-CallExpr 0x1321029d0 <col:31, col:55> 'unsigned long'
|   | |           |-ImplicitCastExpr 0x1321029b8 <col:31> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |           | `-DeclRefExpr 0x132102960 <col:31> 'unsigned long (const char *)' Function 0x132101f60 'strlen' 'unsigned long (const char *)'
|   | |           `-ImplicitCastExpr 0x132827c00 <col:38> 'const char *' <LValueToRValue>
|   | |             `-DeclRefExpr 0x132102980 <col:38> 'const char *' lvalue Var 0x13280ef50 'addrbook_urn_full' 'const char *'
|   | `-IfStmt 0x1328280d8 <line:13:10, line:15:5>
|   |   |-UnaryOperator 0x132827ee8 <line:13:14, col:76> 'int' contains-errors prefix '!' cannot overflow
|   |   | `-CallExpr 0x132827e68 <col:15, col:76> 'int' contains-errors
|   |   |   |-ImplicitCastExpr 0x132827e50 <col:15> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x132827d10 <col:15> 'int (const char *, const char *, unsigned long)' Function 0x1321023a8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   |-ImplicitCastExpr 0x132827eb8 <col:23> 'const char *' contains-errors <NoOp>
|   |   |   | `-ImplicitCastExpr 0x132827ea0 <col:23> 'char *' contains-errors <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x132827d30 <col:23> 'char *' contains-errors lvalue Var 0x13280f320 'uri' 'char *'
|   |   |   |-ImplicitCastExpr 0x132827ed0 <col:28> 'const char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x132827d50 <col:28> 'const char *' lvalue Var 0x13280f080 'addrbook_urn_abbrev' 'const char *'
|   |   |   `-CallExpr 0x132827de0 <col:49, col:75> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x132827dc8 <col:49> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x132827d70 <col:49> 'unsigned long (const char *)' Function 0x132101f60 'strlen' 'unsigned long (const char *)'
|   |   |     `-ImplicitCastExpr 0x132827e08 <col:56> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x132827d90 <col:56> 'const char *' lvalue Var 0x13280f080 'addrbook_urn_abbrev' 'const char *'
|   |   `-CompoundStmt 0x1328280c0 <col:79, line:15:5>
|   |     `-BinaryOperator 0x1328280a0 <line:14:9, col:58> 'char *' contains-errors '='
|   |       |-DeclRefExpr 0x132827f00 <col:9> 'char *' contains-errors lvalue Var 0x13280f168 'abook' 'char *'
|   |       `-ImplicitCastExpr 0x132828088 <col:17, col:58> 'char *' contains-errors <IntegralToPointer>
|   |         `-CallExpr 0x132828060 <col:17, col:58> 'int' contains-errors
|   |           |-ImplicitCastExpr 0x132828048 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x132827f20 <col:17> 'int ()' Function 0x132102868 'xstrdup' 'int ()'
|   |           `-BinaryOperator 0x132828028 <col:25, col:57> 'char *' contains-errors '+'
|   |             |-ImplicitCastExpr 0x132828010 <col:25> 'char *' contains-errors <LValueToRValue>
|   |             | `-DeclRefExpr 0x132827f40 <col:25> 'char *' contains-errors lvalue Var 0x13280f320 'uri' 'char *'
|   |             `-CallExpr 0x132827fd0 <col:31, col:57> 'unsigned long'
|   |               |-ImplicitCastExpr 0x132827fb8 <col:31> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |               | `-DeclRefExpr 0x132827f60 <col:31> 'unsigned long (const char *)' Function 0x132101f60 'strlen' 'unsigned long (const char *)'
|   |               `-ImplicitCastExpr 0x132827ff8 <col:38> 'const char *' <LValueToRValue>
|   |                 `-DeclRefExpr 0x132827f80 <col:38> 'const char *' lvalue Var 0x13280f080 'addrbook_urn_abbrev' 'const char *'
|   |-CallExpr 0x132828378 <line:17:5, col:13> 'void' contains-errors
|   | |-ImplicitCastExpr 0x132828360 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1328282d8 <col:5> 'void (void *)' Function 0x132828168 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x1328283b8 <col:10> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x1328283a0 <col:10> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x1328282f8 <col:10> 'char *' contains-errors lvalue Var 0x13280f320 'uri' 'char *'
|   |-IfStmt 0x132828468 <line:19:5, col:24>
|   | |-UnaryOperator 0x132828408 <col:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1328283f0 <col:10> 'char *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x1328283d0 <col:10> 'char *' contains-errors lvalue Var 0x13280f168 'abook' 'char *'
|   | `-ReturnStmt 0x132828458 <col:17, col:24>
|   |   `-RecoveryExpr 0x132828438 <col:24> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x132828ad0 <line:22:5, line:25:5>
|   | |-UnaryOperator 0x132828818 <line:22:9, col:33> 'int' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x132828788 <col:10, col:33> 'int' contains-errors
|   | |   |-ImplicitCastExpr 0x132828770 <col:10> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1328286b0 <col:10> 'int (const char *, const char *)' Function 0x1328284d0 'strcasecmp' 'int (const char *, const char *)'
|   | |   |-ImplicitCastExpr 0x1328287d0 <col:21> 'const char *' contains-errors <NoOp>
|   | |   | `-ImplicitCastExpr 0x1328287b8 <col:21> 'char *' contains-errors <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1328286d0 <col:21> 'char *' contains-errors lvalue Var 0x13280f168 'abook' 'char *'
|   | |   `-ImplicitCastExpr 0x132828800 <col:28> 'const char *' <NoOp>
|   | |     `-ImplicitCastExpr 0x1328287e8 <col:28> 'char *' <ArrayToPointerDecay>
|   | |       `-StringLiteral 0x1328286f0 <col:28> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x132828ab0 <col:36, line:25:5>
|   |   |-BinaryOperator 0x1328288d8 <line:23:9, col:20> 'char' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x132828888 <col:9, col:16> 'char' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x132828870 <col:9> 'char *' contains-errors <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x132828830 <col:9> 'char *' contains-errors lvalue Var 0x13280f168 'abook' 'char *'
|   |   | | `-IntegerLiteral 0x132828850 <col:15> 'int' 0
|   |   | `-ImplicitCastExpr 0x1328288c0 <col:20> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x1328288a8 <col:20> 'int' 68
|   |   `-CallExpr 0x132828a88 <line:24:9, col:22> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x132828a70 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1328289d8 <col:9> 'int ()' Function 0x132828920 'lcase' 'int ()'
|   |     `-BinaryOperator 0x132828a50 <col:15, col:21> 'char *' contains-errors '+'
|   |       |-ImplicitCastExpr 0x132828a38 <col:15> 'char *' contains-errors <LValueToRValue>
|   |       | `-DeclRefExpr 0x1328289f8 <col:15> 'char *' contains-errors lvalue Var 0x13280f168 'abook' 'char *'
|   |       `-IntegerLiteral 0x132828a18 <col:21> 'int' 1
|   |-BinaryOperator 0x132828cf0 <line:28:5, col:46> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x132828af0 <col:5> 'char *' contains-errors lvalue Var 0x13280f238 'mboxname' 'char *'
|   | `-ImplicitCastExpr 0x132828cd8 <col:16, col:46> 'char *' contains-errors <IntegralToPointer>
|   |   `-CallExpr 0x132828c78 <col:16, col:46> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x132828c60 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x132828c00 <col:16> 'int ()' Function 0x132828b38 'carddav_mboxname' 'int ()'
|   |     |-ImplicitCastExpr 0x132828ca8 <col:33> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x132828c20 <col:33> 'const char *' lvalue ParmVar 0x13280ed58 'userid' 'const char *'
|   |     `-ImplicitCastExpr 0x132828cc0 <col:41> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x132828c40 <col:41> 'char *' contains-errors lvalue Var 0x13280f168 'abook' 'char *'
|   `-IfStmt 0x1328290e8 <line:31:5, line:35:5> has_else
|     |-BinaryOperator 0x132828f50 <line:31:9, col:50> 'int' contains-errors '=='
|     | |-CallExpr 0x132828f18 <col:9, col:45> '<dependent type>' contains-errors
|     | | |-DeclRefExpr 0x132828df0 <col:9> 'int ()' Function 0x132828d38 'mboxlist_lookup' 'int ()'
|     | | |-DeclRefExpr 0x132828e10 <col:25> 'char *' contains-errors lvalue Var 0x13280f238 'mboxname' 'char *'
|     | | |-RecoveryExpr 0x132828ed8 <col:35> '<dependent type>' contains-errors lvalue
|     | | `-RecoveryExpr 0x132828ef8 <col:41> '<dependent type>' contains-errors lvalue
|     | `-IntegerLiteral 0x132828e98 <col:50> 'int' 0
|     |-ReturnStmt 0x132828fa8 <col:53, col:60>
|     | `-ImplicitCastExpr 0x132828f90 <col:60> 'char *' contains-errors <LValueToRValue>
|     |   `-DeclRefExpr 0x132828f70 <col:60> 'char *' contains-errors lvalue Var 0x13280f238 'mboxname' 'char *'
|     `-CompoundStmt 0x1328290c8 <line:32:10, line:35:5>
|       |-CallExpr 0x132829028 <line:33:9, col:22> 'void' contains-errors
|       | |-ImplicitCastExpr 0x132829010 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x132828fb8 <col:9> 'void (void *)' Function 0x132828168 'free' 'void (void *)'
|       | `-ImplicitCastExpr 0x132829068 <col:14> 'void *' contains-errors <BitCast>
|       |   `-ImplicitCastExpr 0x132829050 <col:14> 'char *' contains-errors <LValueToRValue>
|       |     `-DeclRefExpr 0x132828fd8 <col:14> 'char *' contains-errors lvalue Var 0x13280f238 'mboxname' 'char *'
|       `-ReturnStmt 0x1328290b8 <line:34:9, col:16>
|         `-RecoveryExpr 0x132829098 <col:16> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x132101f60 <line:8:44> col:44 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x132102060 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x132102008 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1321023a8 <line:10:10> col:10 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x1321024a8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x132102510 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x132102578 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x132102450 <<invalid sloc>> Implicit 888
|-FunctionDecl 0x132828168 <line:17:5> col:5 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x132828268 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x132828210 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x1328284d0 <line:22:10> col:10 implicit used strcasecmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x1328285d0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x132828638 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x132828578 <<invalid sloc>> Implicit 957
