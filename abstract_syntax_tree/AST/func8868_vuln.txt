TranslationUnitDecl 0x145855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1458564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145855bd0 '__int128'
|-TypedefDecl 0x145856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145855bf0 'unsigned __int128'
|-TypedefDecl 0x145926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x145926000 'struct __NSConstantString_tag'
|   `-Record 0x145856580 '__NSConstantString_tag'
|-TypedefDecl 0x145926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145855d90 '__SVInt8_t'
|-TypedefDecl 0x145926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145855db0 '__SVInt16_t'
|-TypedefDecl 0x145926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145855dd0 '__SVInt32_t'
|-TypedefDecl 0x1459263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145855df0 '__SVInt64_t'
|-TypedefDecl 0x145926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145855e10 '__SVUint8_t'
|-TypedefDecl 0x1459264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145855e30 '__SVUint16_t'
|-TypedefDecl 0x145926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145855e50 '__SVUint32_t'
|-TypedefDecl 0x145926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145855e70 '__SVUint64_t'
|-TypedefDecl 0x1459265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145855e90 '__SVFloat16_t'
|-TypedefDecl 0x145926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1459266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145855ed0 '__SVFloat64_t'
|-TypedefDecl 0x145926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x145926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1459267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x145926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1459268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x145926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x145926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1459269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x145926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x145926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x145926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x145926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x145926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x145926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145856090 '__clang_svint8x3_t'
|-TypedefDecl 0x145926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1458560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x145926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1458560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x145926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1458560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x145926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x145926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x145926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x145926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x145926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x145927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1458561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x145927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1458561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1459278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1458561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x145927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1459279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145856230 '__clang_svint16x4_t'
|-TypedefDecl 0x145927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145856250 '__clang_svint32x4_t'
|-TypedefDecl 0x145927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145856270 '__clang_svint64x4_t'
|-TypedefDecl 0x145927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x145927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1458562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x145927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1458562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x145927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1458562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x145927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x145927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x145927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x145927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x145927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145856390 '__SVBool_t'
|-TypedefDecl 0x145927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1458563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x145927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1458563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x145927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1458563f0 '__SVCount_t'
|-TypedefDecl 0x145927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x145927fb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-TypedefDecl 0x145928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x145927fb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-FunctionDecl 0x1459281a8 <dataset_diviso_filec/func8868_vuln.c:1:1, line:33:1> line:1:7 enl_ipc_get 'char *(const char *)'
| |-ParmVarDecl 0x1459280d8 <col:19, col:31> col:31 used msg_data 'const char *'
| `-CompoundStmt 0x14600bc10 <line:2:1, line:33:1>
|   |-DeclStmt 0x145928370 <line:4:2, col:29>
|   | `-VarDecl 0x1459282b8 <col:2, col:25> col:15 used message 'char *' static cinit
|   |   `-RecoveryExpr 0x145928350 <col:25> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x145928440 <line:5:2, col:31>
|   | `-VarDecl 0x1459283a0 <col:2, col:30> col:24 used len 'unsigned short' static cinit
|   |   `-ImplicitCastExpr 0x145928428 <col:30> 'unsigned short' <IntegralCast>
|   |     `-IntegerLiteral 0x145928408 <col:30> 'int' 0
|   |-DeclStmt 0x145928638 <line:6:2, col:32>
|   | |-VarDecl 0x145928500 <col:2, col:14> col:7 used buff 'char[13]'
|   | `-VarDecl 0x145928580 <col:2, col:28> col:18 used ret_msg 'char *' cinit
|   |   `-RecoveryExpr 0x145928600 <col:28> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1459286d0 <line:7:2, col:26>
|   | `-VarDecl 0x145928668 <col:2, col:25> col:25 used i 'unsigned char' register
|   |-DeclStmt 0x145928768 <line:8:2, col:20>
|   | `-VarDecl 0x145928700 <col:2, col:16> col:16 used blen 'unsigned char'
|   |-IfStmt 0x145940a48 <line:10:2, line:12:2>
|   | |-BinaryOperator 0x145940a00 <line:10:6, col:18> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x145928780 <col:6> 'const char *' lvalue ParmVar 0x1459280d8 'msg_data' 'const char *'
|   | | `-RecoveryExpr 0x1459287d8 <col:18> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x145940a38 <col:31, line:12:2>
|   |-ForStmt 0x145940d18 <line:13:2, line:15:2>
|   | |-BinaryOperator 0x145940ac0 <line:13:7, col:11> 'unsigned char' '='
|   | | |-DeclRefExpr 0x145940a68 <col:7> 'unsigned char' lvalue Var 0x145928668 'i' 'unsigned char'
|   | | `-ImplicitCastExpr 0x145940aa8 <col:11> 'unsigned char' <IntegralCast>
|   | |   `-IntegerLiteral 0x145940a88 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x145940b50 <col:14, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x145940b38 <col:14> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x145940b20 <col:14> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x145940ae0 <col:14> 'unsigned char' lvalue Var 0x145928668 'i' 'unsigned char'
|   | | `-IntegerLiteral 0x145940b00 <col:18> 'int' 12
|   | |-UnaryOperator 0x145940b90 <col:22, col:23> 'unsigned char' postfix '++' cannot overflow
|   | | `-DeclRefExpr 0x145940b70 <col:22> 'unsigned char' lvalue Var 0x145928668 'i' 'unsigned char'
|   | `-CompoundStmt 0x145940d00 <col:27, line:15:2>
|   |   `-BinaryOperator 0x145940ce0 <line:14:3, col:23> 'char' '='
|   |     |-ArraySubscriptExpr 0x145940c18 <col:3, col:9> 'char' lvalue
|   |     | |-ImplicitCastExpr 0x145940be8 <col:3> 'char *' <ArrayToPointerDecay>
|   |     | | `-DeclRefExpr 0x145940ba8 <col:3> 'char[13]' lvalue Var 0x145928500 'buff' 'char[13]'
|   |     | `-ImplicitCastExpr 0x145940c00 <col:8> 'unsigned char' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x145940bc8 <col:8> 'unsigned char' lvalue Var 0x145928668 'i' 'unsigned char'
|   |     `-ImplicitCastExpr 0x145940cc8 <col:13, col:23> 'char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x145940ca8 <col:13, col:23> 'const char' lvalue
|   |         |-ImplicitCastExpr 0x145940c78 <col:13> 'const char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x145940c38 <col:13> 'const char *' lvalue ParmVar 0x1459280d8 'msg_data' 'const char *'
|   |         `-ImplicitCastExpr 0x145940c90 <col:22> 'unsigned char' <LValueToRValue>
|   |           `-DeclRefExpr 0x145940c58 <col:22> 'unsigned char' lvalue Var 0x145928668 'i' 'unsigned char'
|   |-BinaryOperator 0x145940e00 <line:16:2, col:13> 'char' '='
|   | |-ArraySubscriptExpr 0x145940da8 <col:2, col:9> 'char' lvalue
|   | | |-ImplicitCastExpr 0x145940d90 <col:2> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x145940d50 <col:2> 'char[13]' lvalue Var 0x145928500 'buff' 'char[13]'
|   | | `-IntegerLiteral 0x145940d70 <col:7> 'int' 12
|   | `-ImplicitCastExpr 0x145940de8 <col:13> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x145940dc8 <col:13> 'int' 0
|   |-BinaryOperator 0x145941528 <line:17:2, col:20> 'unsigned char' '='
|   | |-DeclRefExpr 0x145940e20 <col:2> 'unsigned char' lvalue Var 0x145928700 'blen' 'unsigned char'
|   | `-ImplicitCastExpr 0x145941510 <col:9, col:20> 'unsigned char' <IntegralCast>
|   |   `-CallExpr 0x1459414b8 <col:9, col:20> 'unsigned long'
|   |     |-ImplicitCastExpr 0x1459414a0 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x145941410 <col:9> 'unsigned long (const char *)' Function 0x1459412a0 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x1459414f8 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x1459414e0 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x145941430 <col:16> 'char[13]' lvalue Var 0x145928500 'buff' 'char[13]'
|   |-IfStmt 0x14600b760 <line:18:2, line:26:2> has_else
|   | |-BinaryOperator 0x1459415c0 <line:18:6, col:17> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x145941548 <col:6> 'char *' contains-errors lvalue Var 0x1459282b8 'message' 'char *'
|   | | `-RecoveryExpr 0x1459415a0 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x14600b130 <col:23, line:22:2>
|   | | |-CompoundAssignOperator 0x145941650 <line:19:3, col:10> 'unsigned short' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | | |-DeclRefExpr 0x1459415e0 <col:3> 'unsigned short' lvalue Var 0x1459283a0 'len' 'unsigned short'
|   | | | `-ImplicitCastExpr 0x145941638 <col:10> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x145941620 <col:10> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x145941600 <col:10> 'unsigned char' lvalue Var 0x145928700 'blen' 'unsigned char'
|   | | |-BinaryOperator 0x145941950 <line:20:3, col:47> 'char *' contains-errors '='
|   | | | |-DeclRefExpr 0x145941680 <col:3> 'char *' contains-errors lvalue Var 0x1459282b8 'message' 'char *'
|   | | | `-CStyleCastExpr 0x145941928 <col:13, col:47> 'char *' contains-errors <IntegralToPointer>
|   | | |   `-CallExpr 0x1459418c8 <col:22, col:47> 'int' contains-errors
|   | | |     |-ImplicitCastExpr 0x1459418b0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1459417b0 <col:22> 'int ()' Function 0x1459416f8 'erealloc' 'int ()'
|   | | |     |-ImplicitCastExpr 0x1459418f8 <col:31> 'char *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1459417d0 <col:31> 'char *' contains-errors lvalue Var 0x1459282b8 'message' 'char *'
|   | | |     `-BinaryOperator 0x145941860 <col:40, col:46> 'int' '+'
|   | | |       |-ImplicitCastExpr 0x145941848 <col:40> 'int' <IntegralCast>
|   | | |       | `-ImplicitCastExpr 0x145941830 <col:40> 'unsigned short' <LValueToRValue>
|   | | |       |   `-DeclRefExpr 0x1459417f0 <col:40> 'unsigned short' lvalue Var 0x1459283a0 'len' 'unsigned short'
|   | | |       `-IntegerLiteral 0x145941810 <col:46> 'int' 1
|   | | `-CallExpr 0x14600b0b8 <line:21:3, col:23> 'char *' contains-errors
|   | |   |-ImplicitCastExpr 0x14600b0a0 <col:3> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x14600afe0 <col:3> 'char *(char *, const char *)' Function 0x14600ae00 'strcat' 'char *(char *, const char *)'
|   | |   |-ImplicitCastExpr 0x14600b0e8 <col:10> 'char *' contains-errors <LValueToRValue>
|   | |   | `-DeclRefExpr 0x14600b000 <col:10> 'char *' contains-errors lvalue Var 0x1459282b8 'message' 'char *'
|   | |   `-ImplicitCastExpr 0x14600b118 <col:19> 'const char *' <NoOp>
|   | |     `-ImplicitCastExpr 0x14600b100 <col:19> 'char *' <ArrayToPointerDecay>
|   | |       `-DeclRefExpr 0x14600b020 <col:19> 'char[13]' lvalue Var 0x145928500 'buff' 'char[13]'
|   | `-CompoundStmt 0x14600b738 <line:22:9, line:26:2>
|   |   |-BinaryOperator 0x14600b1c8 <line:23:3, col:9> 'unsigned short' '='
|   |   | |-DeclRefExpr 0x14600b158 <col:3> 'unsigned short' lvalue Var 0x1459283a0 'len' 'unsigned short'
|   |   | `-ImplicitCastExpr 0x14600b1b0 <col:9> 'unsigned short' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x14600b198 <col:9> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14600b178 <col:9> 'unsigned char' lvalue Var 0x145928700 'blen' 'unsigned char'
|   |   |-BinaryOperator 0x14600b418 <line:24:3, col:37> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x14600b1e8 <col:3> 'char *' contains-errors lvalue Var 0x1459282b8 'message' 'char *'
|   |   | `-CStyleCastExpr 0x14600b3f0 <col:13, col:37> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x14600b3b0 <col:22, col:37> 'int'
|   |   |     |-ImplicitCastExpr 0x14600b398 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x14600b2e8 <col:22> 'int ()' Function 0x14600b230 'emalloc' 'int ()'
|   |   |     `-BinaryOperator 0x14600b378 <col:30, col:36> 'int' '+'
|   |   |       |-ImplicitCastExpr 0x14600b360 <col:30> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x14600b348 <col:30> 'unsigned short' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x14600b308 <col:30> 'unsigned short' lvalue Var 0x1459283a0 'len' 'unsigned short'
|   |   |       `-IntegerLiteral 0x14600b328 <col:36> 'int' 1
|   |   `-CallExpr 0x14600b6c0 <line:25:3, col:23> 'char *' contains-errors
|   |     |-ImplicitCastExpr 0x14600b6a8 <col:3> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14600b618 <col:3> 'char *(char *, const char *)' Function 0x14600b438 'strcpy' 'char *(char *, const char *)'
|   |     |-ImplicitCastExpr 0x14600b6f0 <col:10> 'char *' contains-errors <LValueToRValue>
|   |     | `-DeclRefExpr 0x14600b638 <col:10> 'char *' contains-errors lvalue Var 0x1459282b8 'message' 'char *'
|   |     `-ImplicitCastExpr 0x14600b720 <col:19> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x14600b708 <col:19> 'char *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x14600b658 <col:19> 'char[13]' lvalue Var 0x145928500 'buff' 'char[13]'
|   |-IfStmt 0x14600bb88 <line:27:2, line:31:2>
|   | |-BinaryOperator 0x14600b800 <line:27:6, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x14600b7e8 <col:6> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x14600b7d0 <col:6> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14600b790 <col:6> 'unsigned char' lvalue Var 0x145928700 'blen' 'unsigned char'
|   | | `-IntegerLiteral 0x14600b7b0 <col:13> 'int' 12
|   | `-CompoundStmt 0x14600bb60 <col:17, line:31:2>
|   |   |-BinaryOperator 0x14600b878 <line:28:3, col:13> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x14600b820 <col:3> 'char *' contains-errors lvalue Var 0x145928580 'ret_msg' 'char *'
|   |   | `-ImplicitCastExpr 0x14600b860 <col:13> 'char *' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14600b840 <col:13> 'char *' contains-errors lvalue Var 0x1459282b8 'message' 'char *'
|   |   |-BinaryOperator 0x14600b910 <line:29:3, col:13> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x14600b898 <col:3> 'char *' contains-errors lvalue Var 0x1459282b8 'message' 'char *'
|   |   | `-RecoveryExpr 0x14600b8f0 <col:13> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x14600bb38 <line:30:3, col:21> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x14600bb20 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14600ba10 <col:3> 'int ()' Function 0x14600b958 'D' 'int ()'
|   |     `-ParenExpr 0x14600bb00 <col:5, col:20> 'char *' contains-errors
|   |       `-BinaryOperator 0x14600bae0 <col:6, col:13> 'char *' contains-errors ','
|   |         |-ImplicitCastExpr 0x14600bab0 <col:6> 'char *' <ArrayToPointerDecay>
|   |         | `-StringLiteral 0x14600ba70 <col:6> 'char[4]' lvalue "STR"
|   |         `-ImplicitCastExpr 0x14600bac8 <col:13> 'char *' contains-errors <LValueToRValue>
|   |           `-DeclRefExpr 0x14600ba90 <col:13> 'char *' contains-errors lvalue Var 0x145928580 'ret_msg' 'char *'
|   `-ReturnStmt 0x14600bc00 <line:32:2, col:16>
|     `-ImplicitCastExpr 0x14600bbe8 <col:8, col:16> 'char *' contains-errors <LValueToRValue>
|       `-ParenExpr 0x14600bbc8 <col:8, col:16> 'char *' contains-errors lvalue
|         `-DeclRefExpr 0x14600bba8 <col:9> 'char *' contains-errors lvalue Var 0x145928580 'ret_msg' 'char *'
|-FunctionDecl 0x1459412a0 <line:17:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1459413a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x145941348 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x14600ae00 <line:21:3> col:3 implicit used strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x14600af00 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x14600af68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14600aea8 <<invalid sloc>> Implicit 889
`-FunctionDecl 0x14600b438 <line:25:3> col:3 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x14600b538 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x14600b5a0 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14600b4e0 <<invalid sloc>> Implicit 885
