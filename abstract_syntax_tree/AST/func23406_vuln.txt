TranslationUnitDecl 0x128855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128855bd0 '__int128'
|-TypedefDecl 0x128856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128855bf0 'unsigned __int128'
|-TypedefDecl 0x12900be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12900bc00 'struct __NSConstantString_tag'
|   `-Record 0x128856580 '__NSConstantString_tag'
|-TypedefDecl 0x12900be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128855d90 '__SVInt8_t'
|-TypedefDecl 0x12900bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128855db0 '__SVInt16_t'
|-TypedefDecl 0x12900bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128855dd0 '__SVInt32_t'
|-TypedefDecl 0x12900bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128855df0 '__SVInt64_t'
|-TypedefDecl 0x12900c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128855e10 '__SVUint8_t'
|-TypedefDecl 0x12900c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128855e30 '__SVUint16_t'
|-TypedefDecl 0x12900c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128855e50 '__SVUint32_t'
|-TypedefDecl 0x12900c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128855e70 '__SVUint64_t'
|-TypedefDecl 0x12900c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128855e90 '__SVFloat16_t'
|-TypedefDecl 0x12900c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12900c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12900c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12900c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12900c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12900c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12900c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12900c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12900c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12900c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12900c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12900c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12900c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12900c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12900c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12900c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12900c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1288560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12900c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1288560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12900c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1288560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12900c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12900ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12900cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12900cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12900cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12900d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1288561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12900d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1288561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12900d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1288561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12900d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12900d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12900d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12900d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12900d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12900d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1288562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12900d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1288562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12900d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1288562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12900d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12900d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12900d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12900d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12900da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128856390 '__SVBool_t'
|-TypedefDecl 0x12900da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1288563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12900dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1288563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12900db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1288563f0 '__SVCount_t'
|-TypedefDecl 0x12900dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12900dbb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-TypedefDecl 0x12900dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12900dbb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
`-FunctionDecl 0x12900dea8 <dataset_diviso_filec/func23406_vuln.c:1:1, line:23:1> line:1:1 asn1_get_packed 'int (unsigned char **, unsigned char *)'
  |-ParmVarDecl 0x12900dd40 <line:2:5, col:21> col:21 used buffer 'unsigned char **'
  |-ParmVarDecl 0x12900ddc0 <line:3:5, col:20> col:20 used bufend 'unsigned char *'
  `-CompoundStmt 0x129026af8 <line:4:1, line:23:1>
    |-DeclStmt 0x12900e028 <line:5:3, col:12>
    | `-VarDecl 0x12900dfc0 <col:3, col:7> col:7 used value 'int'
    |-BinaryOperator 0x12900e080 <line:8:3, col:11> 'int' '='
    | |-DeclRefExpr 0x12900e040 <col:3> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    | `-IntegerLiteral 0x12900e060 <col:11> 'int' 0
    |-WhileStmt 0x129026740 <line:10:3, line:14:3>
    | |-BinaryOperator 0x12900e270 <line:10:10, col:40> 'int' '&&'
    | | |-ParenExpr 0x12900e190 <col:10, col:25> 'int'
    | | | `-BinaryOperator 0x12900e170 <col:11, col:22> 'int' '&'
    | | |   |-ImplicitCastExpr 0x12900e158 <col:11, col:13> 'int' <IntegralCast>
    | | |   | `-ImplicitCastExpr 0x12900e140 <col:11, col:13> 'unsigned char' <LValueToRValue>
    | | |   |   `-UnaryOperator 0x12900e108 <col:11, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    | | |   |     `-ImplicitCastExpr 0x12900e0f0 <col:12, col:13> 'unsigned char *' <LValueToRValue>
    | | |   |       `-UnaryOperator 0x12900e0d8 <col:12, col:13> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | |   |         `-ImplicitCastExpr 0x12900e0c0 <col:13> 'unsigned char **' <LValueToRValue>
    | | |   |           `-DeclRefExpr 0x12900e0a0 <col:13> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    | | |   `-IntegerLiteral 0x12900e120 <col:22> 'int' 128
    | | `-BinaryOperator 0x12900e250 <col:30, col:40> 'int' '<'
    | |   |-ImplicitCastExpr 0x12900e220 <col:30, col:31> 'unsigned char *' <LValueToRValue>
    | |   | `-UnaryOperator 0x12900e1e8 <col:30, col:31> 'unsigned char *' lvalue prefix '*' cannot overflow
    | |   |   `-ImplicitCastExpr 0x12900e1d0 <col:31> 'unsigned char **' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x12900e1b0 <col:31> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    | |   `-ImplicitCastExpr 0x12900e238 <col:40> 'unsigned char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12900e200 <col:40> 'unsigned char *' lvalue ParmVar 0x12900ddc0 'bufend' 'unsigned char *'
    | `-CompoundStmt 0x129026720 <line:11:3, line:14:3>
    |   |-BinaryOperator 0x129026678 <line:12:5, col:43> 'int' '='
    |   | |-DeclRefExpr 0x12900e290 <col:5> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    |   | `-BinaryOperator 0x129026658 <col:13, col:43> 'int' '|'
    |   |   |-ParenExpr 0x12900e328 <col:13, col:24> 'int'
    |   |   | `-BinaryOperator 0x12900e308 <col:14, col:23> 'int' '<<'
    |   |   |   |-ImplicitCastExpr 0x12900e2f0 <col:14> 'int' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x12900e2b0 <col:14> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    |   |   |   `-IntegerLiteral 0x12900e2d0 <col:23> 'int' 7
    |   |   `-ParenExpr 0x129026638 <col:28, col:43> 'int'
    |   |     `-BinaryOperator 0x129026618 <col:29, col:40> 'int' '&'
    |   |       |-ImplicitCastExpr 0x129026600 <col:29, col:31> 'int' <IntegralCast>
    |   |       | `-ImplicitCastExpr 0x12900e3e8 <col:29, col:31> 'unsigned char' <LValueToRValue>
    |   |       |   `-UnaryOperator 0x12900e3b0 <col:29, col:31> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |       |     `-ImplicitCastExpr 0x12900e398 <col:30, col:31> 'unsigned char *' <LValueToRValue>
    |   |       |       `-UnaryOperator 0x12900e380 <col:30, col:31> 'unsigned char *' lvalue prefix '*' cannot overflow
    |   |       |         `-ImplicitCastExpr 0x12900e368 <col:31> 'unsigned char **' <LValueToRValue>
    |   |       |           `-DeclRefExpr 0x12900e348 <col:31> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    |   |       `-IntegerLiteral 0x12900e3c8 <col:40> 'int' 127
    |   `-UnaryOperator 0x129026708 <line:13:5, col:15> 'unsigned char *' postfix '++'
    |     `-ParenExpr 0x1290266e8 <col:5, col:13> 'unsigned char *' lvalue
    |       `-UnaryOperator 0x1290266d0 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x1290266b8 <col:7> 'unsigned char **' <LValueToRValue>
    |           `-DeclRefExpr 0x129026698 <col:7> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    |-IfStmt 0x129026a70 <line:16:3, line:20:3>
    | |-BinaryOperator 0x129026800 <line:16:7, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1290267d0 <col:7, col:8> 'unsigned char *' <LValueToRValue>
    | | | `-UnaryOperator 0x129026798 <col:7, col:8> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | |   `-ImplicitCastExpr 0x129026780 <col:8> 'unsigned char **' <LValueToRValue>
    | | |     `-DeclRefExpr 0x129026760 <col:8> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    | | `-ImplicitCastExpr 0x1290267e8 <col:17> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1290267b0 <col:17> 'unsigned char *' lvalue ParmVar 0x12900ddc0 'bufend' 'unsigned char *'
    | `-CompoundStmt 0x129026a50 <line:17:3, line:20:3>
    |   |-BinaryOperator 0x1290269a8 <line:18:5, col:30> 'int' '='
    |   | |-DeclRefExpr 0x129026820 <col:5> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    |   | `-BinaryOperator 0x129026988 <col:13, col:30> 'int' '|'
    |   |   |-ParenExpr 0x1290268b8 <col:13, col:24> 'int'
    |   |   | `-BinaryOperator 0x129026898 <col:14, col:23> 'int' '<<'
    |   |   |   |-ImplicitCastExpr 0x129026880 <col:14> 'int' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x129026840 <col:14> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    |   |   |   `-IntegerLiteral 0x129026860 <col:23> 'int' 7
    |   |   `-ImplicitCastExpr 0x129026970 <col:28, col:30> 'int' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x129026958 <col:28, col:30> 'unsigned char' <LValueToRValue>
    |   |       `-UnaryOperator 0x129026940 <col:28, col:30> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |         `-ImplicitCastExpr 0x129026928 <col:29, col:30> 'unsigned char *' <LValueToRValue>
    |   |           `-UnaryOperator 0x129026910 <col:29, col:30> 'unsigned char *' lvalue prefix '*' cannot overflow
    |   |             `-ImplicitCastExpr 0x1290268f8 <col:30> 'unsigned char **' <LValueToRValue>
    |   |               `-DeclRefExpr 0x1290268d8 <col:30> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    |   `-UnaryOperator 0x129026a38 <line:19:5, col:15> 'unsigned char *' postfix '++'
    |     `-ParenExpr 0x129026a18 <col:5, col:13> 'unsigned char *' lvalue
    |       `-UnaryOperator 0x129026a00 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x1290269e8 <col:7> 'unsigned char **' <LValueToRValue>
    |           `-DeclRefExpr 0x1290269c8 <col:7> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    `-ReturnStmt 0x129026ae8 <line:22:3, col:16>
      `-ImplicitCastExpr 0x129026ad0 <col:10, col:16> 'int' <LValueToRValue>
        `-ParenExpr 0x129026ab0 <col:10, col:16> 'int' lvalue
          `-DeclRefExpr 0x129026a90 <col:11> 'int' lvalue Var 0x12900dfc0 'value' 'int'
