TranslationUnitDecl 0x135055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1350564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135055bd0 '__int128'
|-TypedefDecl 0x135056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135055bf0 'unsigned __int128'
|-TypedefDecl 0x13580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13580bc00 'struct __NSConstantString_tag'
|   `-Record 0x135056580 '__NSConstantString_tag'
|-TypedefDecl 0x13580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135055d90 '__SVInt8_t'
|-TypedefDecl 0x13580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135055db0 '__SVInt16_t'
|-TypedefDecl 0x13580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135055dd0 '__SVInt32_t'
|-TypedefDecl 0x13580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135055df0 '__SVInt64_t'
|-TypedefDecl 0x13580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135055e10 '__SVUint8_t'
|-TypedefDecl 0x13580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135055e30 '__SVUint16_t'
|-TypedefDecl 0x13580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135055e50 '__SVUint32_t'
|-TypedefDecl 0x13580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135055e70 '__SVUint64_t'
|-TypedefDecl 0x13580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135055e90 '__SVFloat16_t'
|-TypedefDecl 0x13580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1350560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1350560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1350560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1350561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1350561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1350561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1350562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1350562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1350562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135056390 '__SVBool_t'
|-TypedefDecl 0x13580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1350563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1350563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1350563f0 '__SVCount_t'
|-TypedefDecl 0x13580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13580dbb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
|-TypedefDecl 0x13580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13580dbb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
`-FunctionDecl 0x13580df98 <dataset_diviso_filec/func10288_nonvuln.c:1:1, line:35:1> line:1:12 invalid uv__process_init_stdio 'int (int *, int *)' static
  |-ParmVarDecl 0x13580dd28 <col:35, col:57> col:57 invalid container 'int *'
  |-ParmVarDecl 0x13580de70 <col:68, col:77> col:72 used fds 'int *'
  `-CompoundStmt 0x1351236b8 <col:80, line:35:1>
    |-DeclStmt 0x13580e0d0 <line:2:3, col:11>
    | `-VarDecl 0x13580e068 <col:3, col:7> col:7 used mask 'int'
    |-DeclStmt 0x13580e168 <line:3:3, col:9>
    | `-VarDecl 0x13580e100 <col:3, col:7> col:7 used fd 'int'
    |-BinaryOperator 0x13580e360 <line:5:3, col:55> 'int' contains-errors '='
    | |-DeclRefExpr 0x13580e180 <col:3> 'int' lvalue Var 0x13580e068 'mask' 'int'
    | `-BinaryOperator 0x13580e340 <col:10, col:55> '<dependent type>' contains-errors '|'
    |   |-BinaryOperator 0x13580e300 <col:10, col:39> '<dependent type>' contains-errors '|'
    |   | |-BinaryOperator 0x13580e2c0 <col:10, col:22> '<dependent type>' contains-errors '|'
    |   | | |-RecoveryExpr 0x13580e280 <col:10> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x13580e2a0 <col:22> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x13580e2e0 <col:39> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x13580e320 <col:55> '<dependent type>' contains-errors lvalue
    `-SwitchStmt 0x135122640 <line:7:3, line:34:3>
      |-BinaryOperator 0x135122620 <line:7:11, col:30> '<dependent type>' contains-errors '&'
      | |-CXXDependentScopeMemberExpr 0x13580e3a0 <col:11, col:22> '<dependent type>' contains-errors lvalue ->flags
      | | `-RecoveryExpr 0x13580e380 <col:11> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x135122600 <col:30> 'int' lvalue Var 0x13580e068 'mask' 'int'
      `-CompoundStmt 0x135123660 <col:36, line:34:3>
        |-ReturnStmt 0x1351226a0 <line:9:5, col:12>
        | `-IntegerLiteral 0x135122680 <col:12> 'int' 0
        |-CallExpr 0x135122990 <line:12:5, col:42> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135122820 <col:5> 'int ()' Function 0x135122768 'assert' 'int ()'
        | `-BinaryOperator 0x135122970 <col:12, col:38> 'int' contains-errors '!='
        |   |-CXXDependentScopeMemberExpr 0x1351228a8 <col:12, col:28> '<dependent type>' contains-errors lvalue .stream
        |   | `-CXXDependentScopeMemberExpr 0x135122860 <col:12, col:23> '<dependent type>' contains-errors lvalue ->data
        |   |   `-RecoveryExpr 0x135122840 <col:12> '<dependent type>' contains-errors lvalue
        |   `-RecoveryExpr 0x135122950 <col:38> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x135122db0 <line:13:5, line:16:40> has_else
        | |-BinaryOperator 0x135122b08 <line:13:9, col:41> 'int' contains-errors '!='
        | | |-CXXDependentScopeMemberExpr 0x135122a68 <col:9, col:33> '<dependent type>' contains-errors lvalue ->type
        | | | `-CXXDependentScopeMemberExpr 0x135122a20 <col:9, col:25> '<dependent type>' contains-errors lvalue .stream
        | | |   `-CXXDependentScopeMemberExpr 0x1351229d8 <col:9, col:20> '<dependent type>' contains-errors lvalue ->data
        | | |     `-RecoveryExpr 0x1351229b8 <col:9> '<dependent type>' contains-errors lvalue
        | | `-RecoveryExpr 0x135122ae8 <col:41> '<dependent type>' contains-errors lvalue
        | |-ReturnStmt 0x135122bc0 <line:14:7, col:15>
        | | `-UnaryOperator 0x135122ba8 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow
        | |   `-ImplicitCastExpr 0x135122b90 <col:15> '<dependent type>' contains-errors <LValueToRValue>
        | |     `-RecoveryExpr 0x135122b70 <col:15> '<dependent type>' contains-errors lvalue
        | `-ReturnStmt 0x135122da0 <line:16:7, col:40>
        |   `-CallExpr 0x135122d58 <col:14, col:40> 'int'
        |     |-ImplicitCastExpr 0x135122d40 <col:14> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x135122cb0 <col:14> 'int ()' Function 0x135122bf8 'uv__make_socketpair' 'int ()'
        |     |-ImplicitCastExpr 0x135122d88 <col:34> 'int *' <LValueToRValue>
        |     | `-DeclRefExpr 0x135122cd0 <col:34> 'int *' lvalue ParmVar 0x13580de70 'fds' 'int *'
        |     `-IntegerLiteral 0x135122cf0 <col:39> 'int' 0
        |-IfStmt 0x1351231f8 <line:20:5, line:23:48> has_else
        | |-BinaryOperator 0x135122ed0 <line:20:9, col:28> '<dependent type>' contains-errors '&'
        | | |-CXXDependentScopeMemberExpr 0x135122e30 <col:9, col:20> '<dependent type>' contains-errors lvalue ->flags
        | | | `-RecoveryExpr 0x135122e10 <col:9> '<dependent type>' contains-errors lvalue
        | | `-RecoveryExpr 0x135122eb0 <col:28> '<dependent type>' contains-errors lvalue
        | |-BinaryOperator 0x135122fc0 <line:21:7, col:28> 'int' contains-errors '='
        | | |-DeclRefExpr 0x135122ef0 <col:7> 'int' lvalue Var 0x13580e100 'fd' 'int'
        | | `-CXXDependentScopeMemberExpr 0x135122f78 <col:12, col:28> '<dependent type>' contains-errors lvalue .fd
        | |   `-CXXDependentScopeMemberExpr 0x135122f30 <col:12, col:23> '<dependent type>' contains-errors lvalue ->data
        | |     `-RecoveryExpr 0x135122f10 <col:12> '<dependent type>' contains-errors lvalue
        | `-BinaryOperator 0x1351231d8 <line:23:7, col:48> 'int' contains-errors '='
        |   |-DeclRefExpr 0x135122fe0 <col:7> 'int' lvalue Var 0x13580e100 'fd' 'int'
        |   `-CallExpr 0x1351231b0 <col:12, col:48> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x1351230e0 <col:12> 'int ()' Function 0x135123028 'uv__stream_fd' 'int ()'
        |     `-CXXDependentScopeMemberExpr 0x135123168 <col:26, col:42> '<dependent type>' contains-errors lvalue .stream
        |       `-CXXDependentScopeMemberExpr 0x135123120 <col:26, col:37> '<dependent type>' contains-errors lvalue ->data
        |         `-RecoveryExpr 0x135123100 <col:26> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x135123360 <line:25:5, line:26:15>
        | |-BinaryOperator 0x135123298 <line:25:9, col:16> 'int' '=='
        | | |-ImplicitCastExpr 0x135123280 <col:9> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x135123228 <col:9> 'int' lvalue Var 0x13580e100 'fd' 'int'
        | | `-UnaryOperator 0x135123268 <col:15, col:16> 'int' prefix '-'
        | |   `-IntegerLiteral 0x135123248 <col:16> 'int' 1
        | `-ReturnStmt 0x135123350 <line:26:7, col:15>
        |   `-UnaryOperator 0x135123338 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow
        |     `-ImplicitCastExpr 0x135123320 <col:15> '<dependent type>' contains-errors <LValueToRValue>
        |       `-RecoveryExpr 0x135123300 <col:15> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x135123430 <line:28:5, col:14> 'int' '='
        | |-ArraySubscriptExpr 0x1351233d8 <col:5, col:10> 'int' lvalue
        | | |-ImplicitCastExpr 0x1351233c0 <col:5> 'int *' <LValueToRValue>
        | | | `-DeclRefExpr 0x135123380 <col:5> 'int *' lvalue ParmVar 0x13580de70 'fds' 'int *'
        | | `-IntegerLiteral 0x1351233a0 <col:9> 'int' 1
        | `-ImplicitCastExpr 0x135123418 <col:14> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x1351233f8 <col:14> 'int' lvalue Var 0x13580e100 'fd' 'int'
        |-ReturnStmt 0x135123470 <line:29:5, col:12>
        | `-IntegerLiteral 0x135123450 <col:12> 'int' 0
        |-DefaultStmt 0x135123598 <line:31:3, line:32:22>
        | `-CallExpr 0x135123570 <col:5, col:22> 'int'
        |   |-ImplicitCastExpr 0x135123558 <col:5> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x135123480 <col:5> 'int ()' Function 0x135122768 'assert' 'int ()'
        |   `-BinaryOperator 0x135123538 <col:12, col:17> 'int' '&&'
        |     |-IntegerLiteral 0x1351234a0 <col:12> 'int' 0
        |     `-ImplicitCastExpr 0x135123520 <col:17> 'char *' <ArrayToPointerDecay>
        |       `-StringLiteral 0x135123500 <col:17> 'char[4]' lvalue "STR"
        `-ReturnStmt 0x135123650 <line:33:5, col:13>
          `-UnaryOperator 0x135123638 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
            `-ImplicitCastExpr 0x135123620 <col:13> '<dependent type>' contains-errors <LValueToRValue>
              `-RecoveryExpr 0x135123600 <col:13> '<dependent type>' contains-errors lvalue
