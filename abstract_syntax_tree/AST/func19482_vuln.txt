TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-FunctionDecl 0x13b80dfa8 <dataset_diviso_filec/func19482_vuln.c:1:1, line:79:1> line:1:14 invalid xml_elem_parse_buf 'int *(const char *, int, int, int)'
| |-ParmVarDecl 0x13b80dcf0 <col:33, col:45> col:45 used in_buf 'const char *'
| |-ParmVarDecl 0x13b80dd70 <col:53, col:57> col:57 used len 'int'
| |-ParmVarDecl 0x13b80ddf0 <col:62, col:85> col:85 referenced invalid options 'int'
| |-ParmVarDecl 0x13b80de70 <col:94, col:109> col:109 referenced invalid error 'int'
| `-CompoundStmt 0x13b82c178 <line:2:1, line:79:1>
|   |-DeclStmt 0x13b80e1f8 <line:4:4, col:22>
|   | `-VarDecl 0x13b80e130 <col:4, col:20> col:9 used buf 'char[100]' cinit
|   |   `-StringLiteral 0x13b80e1e0 <col:20> 'char[100]' ""
|   |-DeclStmt 0x13b80e2a8 <line:5:4, col:72>
|   | `-VarDecl 0x13b80e228 <col:4, col:41> col:41 invalid default_opts 'int' static
|   |-IfStmt 0x13b827a00 <line:7:4, line:9:4>
|   | |-UnaryOperator 0x13b80e328 <line:7:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13b80e310 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13b80e2c0 <col:8> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13b80e3e0 <col:17, line:9:4>
|   |   `-BinaryOperator 0x13b80e3c0 <line:8:7, col:18> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x13b80e360 <col:7> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x13b80e340 <col:7> 'int' lvalue ParmVar 0x13b80ddf0 'options' 'int'
|   |     `-UnaryOperator 0x13b80e3a8 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-RecoveryExpr 0x13b80e388 <col:18> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x13b82c158 <line:11:4, line:76:4>
|     |-ImplicitCastExpr 0x13b827a40 <line:11:7> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x13b827a20 <col:7> 'const char *' lvalue ParmVar 0x13b80dcf0 'in_buf' 'const char *'
|     `-CompoundStmt 0x13b82c138 <col:15, line:76:4>
|       |-IfStmt 0x13b828758 <line:28:7, line:30:7>
|       | |-UnaryOperator 0x13b828440 <line:28:10, col:11> 'int' prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x13b828428 <col:11> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x13b828408 <col:11> 'int' lvalue ParmVar 0x13b80dd70 'len' 'int'
|       | `-CompoundStmt 0x13b828740 <col:16, line:30:7>
|       |   `-BinaryOperator 0x13b828720 <line:29:10, col:29> 'int' '='
|       |     |-DeclRefExpr 0x13b828458 <col:10> 'int' lvalue ParmVar 0x13b80dd70 'len' 'int'
|       |     `-ImplicitCastExpr 0x13b828708 <col:16, col:29> 'int' <IntegralCast>
|       |       `-CallExpr 0x13b8286c8 <col:16, col:29> 'unsigned long'
|       |         |-ImplicitCastExpr 0x13b8286b0 <col:16> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|       |         | `-DeclRefExpr 0x13b828628 <col:16> 'unsigned long (const char *)' Function 0x13b8284b8 'strlen' 'unsigned long (const char *)'
|       |         `-ImplicitCastExpr 0x13b8286f0 <col:23> 'const char *' <LValueToRValue>
|       |           `-DeclRefExpr 0x13b828648 <col:23> 'const char *' lvalue ParmVar 0x13b80dcf0 'in_buf' 'const char *'
|       `-IfStmt 0x13b82bf08 <line:33:7, line:70:7> has_else
|         |-RecoveryExpr 0x13b8288f8 <line:33:10, col:47> '_Bool' contains-errors
|         |-CompoundStmt 0x13b82bea8 <col:50, line:66:7>
|         | |-DeclStmt 0x13b8293d8 <line:34:10, col:60>
|         | | |-EnumDecl 0x13b828918 <col:10, col:15> col:15 XML_Error
|         | | `-VarDecl 0x13b829258 <col:10, col:25> col:25 invalid err_code 'enum XML_Error'
|         | |-DeclStmt 0x13b829570 <line:35:10, col:57>
|         | | `-VarDecl 0x13b829408 <col:10, col:14> col:14 used line_num 'int'
|         | |-DeclStmt 0x13b829708 <line:36:10, col:58>
|         | | `-VarDecl 0x13b8295a0 <col:10, col:14> col:14 used col_num 'int'
|         | |-DeclStmt 0x13b8298a0 <line:37:10, col:57>
|         | | `-VarDecl 0x13b829738 <col:10, col:15> col:15 used byte_idx 'long'
|         | |-DeclStmt 0x13b829a38 <line:38:10, col:58>
|         | | `-VarDecl 0x13b8298d0 <col:10, col:14> col:14 used byte_total 'int'
|         | |-DeclStmt 0x13b829c18 <line:39:10, col:60>
|         | | `-VarDecl 0x13b829a68 <col:10, col:59> col:23 used error_str 'const char *' cinit
|         | |   `-CallExpr 0x13b829bf0 <col:35, col:59> '<dependent type>' contains-errors
|         | |     |-DeclRefExpr 0x13b829bb0 <col:35> 'int ()' Function 0x13b829af8 'XML_ErrorString' 'int ()'
|         | |     `-RecoveryExpr 0x13b829bd0 <col:51> '<dependent type>' contains-errors lvalue
|         | |-IfStmt 0x13b82b700 <line:40:10, line:46:10>
|         | | |-BinaryOperator 0x13b829ca0 <line:40:13, col:25> 'int' '>='
|         | | | |-ImplicitCastExpr 0x13b829c70 <col:13> 'long' <LValueToRValue>
|         | | | | `-DeclRefExpr 0x13b829c30 <col:13> 'long' lvalue Var 0x13b829738 'byte_idx' 'long'
|         | | | `-ImplicitCastExpr 0x13b829c88 <col:25> 'long' <IntegralCast>
|         | | |   `-IntegerLiteral 0x13b829c50 <col:25> 'int' 0
|         | | `-CompoundStmt 0x13b82b6e8 <col:28, line:46:10>
|         | |   `-CallExpr 0x13b82b658 <line:41:14, line:45:74> 'int'
|         | |     |-ImplicitCastExpr 0x13b82b640 <line:41:14> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|         | |     | `-DeclRefExpr 0x13b829f98 <col:14> 'int (char *, unsigned long, const char *, ...)' Function 0x13b829d10 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|         | |     |-ImplicitCastExpr 0x13b82b6a0 <col:23> 'char *' <ArrayToPointerDecay>
|         | |     | `-DeclRefExpr 0x13b829fb8 <col:23> 'char[100]' lvalue Var 0x13b80e130 'buf' 'char[100]'
|         | |     |-UnaryExprOrTypeTraitExpr 0x13b82a018 <line:42:23, col:33> 'unsigned long' sizeof
|         | |     | `-ParenExpr 0x13b829ff8 <col:29, col:33> 'char[100]' lvalue
|         | |     |   `-DeclRefExpr 0x13b829fd8 <col:30> 'char[100]' lvalue Var 0x13b80e130 'buf' 'char[100]' non_odr_use_unevaluated
|         | |     |-ImplicitCastExpr 0x13b82b6d0 <line:43:23> 'const char *' <NoOp>
|         | |     | `-ImplicitCastExpr 0x13b82b6b8 <col:23> 'char *' <ArrayToPointerDecay>
|         | |     |   `-StringLiteral 0x13b82a080 <col:23> 'char[4]' lvalue "STR"
|         | |     |-ConditionalOperator 0x13b82a1a0 <line:44:23, col:45> 'long'
|         | |     | |-BinaryOperator 0x13b82a110 <col:23, col:34> 'int' '>'
|         | |     | | |-ImplicitCastExpr 0x13b82a0e0 <col:23> 'long' <LValueToRValue>
|         | |     | | | `-DeclRefExpr 0x13b82a0a0 <col:23> 'long' lvalue Var 0x13b829738 'byte_idx' 'long'
|         | |     | | `-ImplicitCastExpr 0x13b82a0f8 <col:34> 'long' <IntegralCast>
|         | |     | |   `-IntegerLiteral 0x13b82a0c0 <col:34> 'int' 10
|         | |     | |-ImplicitCastExpr 0x13b82a188 <col:40> 'long' <IntegralCast>
|         | |     | | `-IntegerLiteral 0x13b82a130 <col:40> 'int' 10
|         | |     | `-ImplicitCastExpr 0x13b82a170 <col:45> 'long' <LValueToRValue>
|         | |     |   `-DeclRefExpr 0x13b82a150 <col:45> 'long' lvalue Var 0x13b829738 'byte_idx' 'long'
|         | |     `-BinaryOperator 0x13b82b5c0 <line:45:23, col:73> 'const char *' '+'
|         | |       |-ImplicitCastExpr 0x13b82b5a8 <col:23> 'const char *' <LValueToRValue>
|         | |       | `-DeclRefExpr 0x13b82a1d0 <col:23> 'const char *' lvalue ParmVar 0x13b80dcf0 'in_buf' 'const char *'
|         | |       `-ParenExpr 0x13b82b588 <col:32, col:73> 'long'
|         | |         `-ConditionalOperator 0x13b82b558 <col:33, col:65> 'long'
|         | |           |-BinaryOperator 0x13b82b470 <col:33, col:44> 'int' '>'
|         | |           | |-ImplicitCastExpr 0x13b82b440 <col:33> 'long' <LValueToRValue>
|         | |           | | `-DeclRefExpr 0x13b82b400 <col:33> 'long' lvalue Var 0x13b829738 'byte_idx' 'long'
|         | |           | `-ImplicitCastExpr 0x13b82b458 <col:44> 'long' <IntegralCast>
|         | |           |   `-IntegerLiteral 0x13b82b420 <col:44> 'int' 10
|         | |           |-BinaryOperator 0x13b82b500 <col:49, col:60> 'long' '-'
|         | |           | |-ImplicitCastExpr 0x13b82b4d0 <col:49> 'long' <LValueToRValue>
|         | |           | | `-DeclRefExpr 0x13b82b490 <col:49> 'long' lvalue Var 0x13b829738 'byte_idx' 'long'
|         | |           | `-ImplicitCastExpr 0x13b82b4e8 <col:60> 'long' <IntegralCast>
|         | |           |   `-IntegerLiteral 0x13b82b4b0 <col:60> 'int' 10
|         | |           `-ImplicitCastExpr 0x13b82b540 <col:65> 'long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x13b82b520 <col:65> 'long' lvalue Var 0x13b829738 'byte_idx' 'long'
|         | `-IfStmt 0x13b82be88 <line:59:11, line:65:11>
|         |   |-RecoveryExpr 0x13b82b980 <line:59:14> '<dependent type>' contains-errors lvalue
|         |   `-CompoundStmt 0x13b82be50 <col:21, line:65:11>
|         |     |-BinaryOperator 0x13b82baf0 <line:60:15, col:42> '<dependent type>' contains-errors '='
|         |     | |-CXXDependentScopeMemberExpr 0x13b82b9e8 <col:15, col:22> '<dependent type>' contains-errors lvalue ->parser_code
|         |     | | `-RecoveryExpr 0x13b82b9c0 <col:15> '<dependent type>' contains-errors lvalue
|         |     | |   `-DeclRefExpr 0x13b82b9a0 <col:15> 'int' lvalue ParmVar 0x13b80de70 'error' 'int'
|         |     | `-CStyleCastExpr 0x13b82bac8 <col:36, col:42> 'long' contains-errors <Dependent>
|         |     |   `-RecoveryExpr 0x13b82ba30 <col:42> '<dependent type>' contains-errors lvalue
|         |     |-BinaryOperator 0x13b82bbc0 <line:61:15, col:29> '<dependent type>' contains-errors '='
|         |     | |-CXXDependentScopeMemberExpr 0x13b82bb58 <col:15, col:22> '<dependent type>' contains-errors lvalue ->line
|         |     | | `-RecoveryExpr 0x13b82bb30 <col:15> '<dependent type>' contains-errors lvalue
|         |     | |   `-DeclRefExpr 0x13b82bb10 <col:15> 'int' lvalue ParmVar 0x13b80de70 'error' 'int'
|         |     | `-DeclRefExpr 0x13b82bba0 <col:29> 'int' lvalue Var 0x13b829408 'line_num' 'int'
|         |     |-BinaryOperator 0x13b82bc90 <line:62:15, col:31> '<dependent type>' contains-errors '='
|         |     | |-CXXDependentScopeMemberExpr 0x13b82bc28 <col:15, col:22> '<dependent type>' contains-errors lvalue ->column
|         |     | | `-RecoveryExpr 0x13b82bc00 <col:15> '<dependent type>' contains-errors lvalue
|         |     | |   `-DeclRefExpr 0x13b82bbe0 <col:15> 'int' lvalue ParmVar 0x13b80de70 'error' 'int'
|         |     | `-DeclRefExpr 0x13b82bc70 <col:31> 'int' lvalue Var 0x13b8295a0 'col_num' 'int'
|         |     |-BinaryOperator 0x13b82bd60 <line:63:15, col:35> '<dependent type>' contains-errors '='
|         |     | |-CXXDependentScopeMemberExpr 0x13b82bcf8 <col:15, col:22> '<dependent type>' contains-errors lvalue ->byte_index
|         |     | | `-RecoveryExpr 0x13b82bcd0 <col:15> '<dependent type>' contains-errors lvalue
|         |     | |   `-DeclRefExpr 0x13b82bcb0 <col:15> 'int' lvalue ParmVar 0x13b80de70 'error' 'int'
|         |     | `-DeclRefExpr 0x13b82bd40 <col:35> 'long' lvalue Var 0x13b829738 'byte_idx' 'long'
|         |     `-BinaryOperator 0x13b82be30 <line:64:15, col:37> '<dependent type>' contains-errors '='
|         |       |-CXXDependentScopeMemberExpr 0x13b82bdc8 <col:15, col:22> '<dependent type>' contains-errors lvalue ->parser_error
|         |       | `-RecoveryExpr 0x13b82bda0 <col:15> '<dependent type>' contains-errors lvalue
|         |       |   `-DeclRefExpr 0x13b82bd80 <col:15> 'int' lvalue ParmVar 0x13b80de70 'error' 'int'
|         |       `-DeclRefExpr 0x13b82be10 <col:37> 'const char *' contains-errors lvalue Var 0x13b829a68 'error_str' 'const char *'
|         `-CompoundStmt 0x13b82bef8 <line:67:12, line:70:7>
|-FunctionDecl 0x13b827ea0 <line:20:58> col:58 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x13b827fa0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13b828008 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b827f48 <<invalid sloc>> Implicit 887
|-FunctionDecl 0x13b8284b8 <line:29:16> col:16 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13b8285b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b828560 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x13b829d10 <line:41:14> col:14 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x13b829e10 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x13b829e78 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x13b829ee0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x13b829db8 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x13b829f60 <col:14> Implicit printf 3 4
