TranslationUnitDecl 0x149055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1490564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149055bd0 '__int128'
|-TypedefDecl 0x149056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149055bf0 'unsigned __int128'
|-TypedefDecl 0x149126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x149126000 'struct __NSConstantString_tag'
|   `-Record 0x149056580 '__NSConstantString_tag'
|-TypedefDecl 0x149126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149055d90 '__SVInt8_t'
|-TypedefDecl 0x149126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x149055db0 '__SVInt16_t'
|-TypedefDecl 0x149126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x149055dd0 '__SVInt32_t'
|-TypedefDecl 0x1491263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x149055df0 '__SVInt64_t'
|-TypedefDecl 0x149126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149055e10 '__SVUint8_t'
|-TypedefDecl 0x1491264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149055e30 '__SVUint16_t'
|-TypedefDecl 0x149126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149055e50 '__SVUint32_t'
|-TypedefDecl 0x149126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149055e70 '__SVUint64_t'
|-TypedefDecl 0x1491265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149055e90 '__SVFloat16_t'
|-TypedefDecl 0x149126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x149055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1491266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x149055ed0 '__SVFloat64_t'
|-TypedefDecl 0x149126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x149055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x149126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1491267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x149126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1491268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x149126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x149126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x149055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1491269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x149055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x149126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x149055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x149126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x149126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x149126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x149126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x149126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149056090 '__clang_svint8x3_t'
|-TypedefDecl 0x149126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1490560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x149126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1490560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x149126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1490560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x149126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x149126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x149126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x149126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x149126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x149127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1490561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x149127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1490561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1491278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1490561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x149127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1491279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149056230 '__clang_svint16x4_t'
|-TypedefDecl 0x149127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149056250 '__clang_svint32x4_t'
|-TypedefDecl 0x149127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149056270 '__clang_svint64x4_t'
|-TypedefDecl 0x149127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x149127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1490562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x149127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1490562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x149127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1490562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x149127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x149127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x149127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x149127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x149127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149056390 '__SVBool_t'
|-TypedefDecl 0x149127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1490563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x149127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1490563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x149127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1490563f0 '__SVCount_t'
|-TypedefDecl 0x149127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x149127fb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-TypedefDecl 0x149128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x149127fb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-FunctionDecl 0x149145a38 <dataset_diviso_filec/func15962_vuln.c:1:1, line:61:1> line:1:13 invalid parse_reconnect 'int (struct pool *, int *)' static
| |-ParmVarDecl 0x149128668 <col:29, col:42> col:42 used pool 'struct pool *'
| |-ParmVarDecl 0x149128718 <col:48, col:56> col:56 invalid val 'int *'
| `-CompoundStmt 0x14914b1e8 <line:2:1, line:61:1>
|   |-DeclStmt 0x149145c90 <line:3:2, col:41>
|   | |-VarDecl 0x149145b08 <col:2, col:8> col:8 used sockaddr_url 'char *'
|   | |-VarDecl 0x149145b88 <col:2, col:23> col:23 used stratum_port 'char *'
|   | `-VarDecl 0x149145c08 <col:2, col:38> col:38 used tmp 'char *'
|   |-DeclStmt 0x149145ed8 <line:4:2, col:32>
|   | |-VarDecl 0x149145cc0 <col:2, col:8> col:8 used url 'char *'
|   | |-VarDecl 0x149145d40 <col:2, col:14> col:14 used port 'char *'
|   | `-VarDecl 0x149145e50 <col:2, col:31> col:20 used address 'char[256]'
|   |-CallExpr 0x149146268 <line:6:2, col:24> 'void *'
|   | |-ImplicitCastExpr 0x149146250 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x149146188 <col:2> 'void *(void *, int, unsigned long)' Function 0x149145f38 'memset' 'void *(void *, int, unsigned long)'
|   | |-ImplicitCastExpr 0x1491462b8 <col:9> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1491462a0 <col:9> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1491461a8 <col:9> 'char[256]' lvalue Var 0x149145e50 'address' 'char[256]'
|   | |-IntegerLiteral 0x1491461c8 <col:18> 'int' 0
|   | `-ImplicitCastExpr 0x1491462d0 <col:21> 'unsigned long' <IntegralCast>
|   |   `-IntegerLiteral 0x1491461e8 <col:21> 'int' 255
|   |-BinaryOperator 0x149146658 <line:7:2, col:56> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1491462e8 <col:2> 'char *' lvalue Var 0x149145cc0 'url' 'char *'
|   | `-CStyleCastExpr 0x149146630 <col:8, col:56> 'char *' contains-errors <Dependent>
|   |   `-CallExpr 0x1491465f0 <col:16, col:56> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x149146460 <col:16> 'int ()' Function 0x1491463a8 'json_string_value' 'int ()'
|   |     `-CallExpr 0x1491465c0 <col:34, col:55> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x149146560 <col:34> 'int ()' Function 0x1491464a8 'json_array_get' 'int ()'
|   |       |-RecoveryExpr 0x149146580 <col:49> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x1491465a0 <col:54> 'int' 0
|   |-IfStmt 0x149149338 <line:8:2, line:29:2> has_else
|   | |-UnaryOperator 0x1491466b0 <line:8:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x149146698 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x149146678 <col:7> 'char *' lvalue Var 0x149145cc0 'url' 'char *'
|   | |-BinaryOperator 0x149146748 <line:9:3, col:15> 'char *' contains-errors '='
|   | | |-DeclRefExpr 0x1491466c8 <col:3> 'char *' lvalue Var 0x149145cc0 'url' 'char *'
|   | | `-RecoveryExpr 0x149146720 <col:9, col:15> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1491466e8 <col:9> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   | `-CompoundStmt 0x1491492f8 <line:10:7, line:29:2>
|   |   |-DeclStmt 0x149146880 <line:11:3, col:33>
|   |   | |-VarDecl 0x149146780 <col:3, col:9> col:9 used dot_pool 'char *'
|   |   | `-VarDecl 0x149146800 <col:3, col:20> col:20 used dot_reconnect 'char *'
|   |   |-BinaryOperator 0x1491487c0 <line:12:3, col:44> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x149146898 <col:3> 'char *' lvalue Var 0x149146780 'dot_pool' 'char *'
|   |   | `-CallExpr 0x149148790 <col:14, col:44> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1491486e0 <col:14> 'char *(const char *, int)' Function 0x149146900 'strchr' 'char *(const char *, int)'
|   |   |   |-RecoveryExpr 0x149148738 <col:21, col:27> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x149148700 <col:21> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |   |   `-CharacterLiteral 0x149148760 <col:41> 'int' 46
|   |   |-IfStmt 0x149148ad0 <line:13:3, line:17:3>
|   |   | |-UnaryOperator 0x149148818 <line:13:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x149148800 <col:8> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1491487e0 <col:8> 'char *' lvalue Var 0x149146780 'dot_pool' 'char *'
|   |   | `-CompoundStmt 0x149148ab8 <col:18, line:17:3>
|   |   |   `-CallExpr 0x149148a68 <line:14:4, line:15:29> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x149148910 <line:14:4> 'int ()' Function 0x149148858 'applog' 'int ()'
|   |   |     |-RecoveryExpr 0x149148a48 <col:11> '<dependent type>' contains-errors lvalue
|   |   |     |-StringLiteral 0x149148990 <col:20> 'char[4]' lvalue "STR"
|   |   |     `-RecoveryExpr 0x1491489e8 <line:15:11, col:17> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x1491489b0 <col:11> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |   |-BinaryOperator 0x149148c28 <line:18:3, col:34> 'char *' '='
|   |   | |-DeclRefExpr 0x149148af0 <col:3> 'char *' lvalue Var 0x149146800 'dot_reconnect' 'char *'
|   |   | `-CallExpr 0x149148bc8 <col:19, col:34> 'char *'
|   |   |   |-ImplicitCastExpr 0x149148bb0 <col:19> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x149148b10 <col:19> 'char *(const char *, int)' Function 0x149146900 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x149148c10 <col:26> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x149148bf8 <col:26> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x149148b30 <col:26> 'char *' lvalue Var 0x149145cc0 'url' 'char *'
|   |   |   `-CharacterLiteral 0x149148b50 <col:31> 'int' 46
|   |   |-IfStmt 0x149148dd0 <line:19:3, line:23:3>
|   |   | |-UnaryOperator 0x149148c80 <line:19:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x149148c68 <col:8> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x149148c48 <col:8> 'char *' lvalue Var 0x149146800 'dot_reconnect' 'char *'
|   |   | `-CompoundStmt 0x149148db8 <col:23, line:23:3>
|   |   |   `-CallExpr 0x149148d68 <line:20:4, line:21:14> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x149148c98 <line:20:4> 'int ()' Function 0x149148858 'applog' 'int ()'
|   |   |     |-RecoveryExpr 0x149148d48 <col:11> '<dependent type>' contains-errors lvalue
|   |   |     |-StringLiteral 0x149148cd0 <col:20> 'char[4]' lvalue "STR"
|   |   |     `-DeclRefExpr 0x149148cf0 <line:21:11> 'char *' lvalue Var 0x149145cc0 'url' 'char *'
|   |   `-IfStmt 0x1491492d8 <line:24:3, line:28:3>
|   |     |-CallExpr 0x1491490e8 <line:24:7, col:37> 'int'
|   |     | |-ImplicitCastExpr 0x1491490d0 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x149149010 <col:7> 'int (const char *, const char *)' Function 0x149148e30 'strcmp' 'int (const char *, const char *)'
|   |     | |-ImplicitCastExpr 0x149149130 <col:14> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x149149118 <col:14> 'char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x149149030 <col:14> 'char *' lvalue Var 0x149146780 'dot_pool' 'char *'
|   |     | `-ImplicitCastExpr 0x149149160 <col:24> 'const char *' <NoOp>
|   |     |   `-ImplicitCastExpr 0x149149148 <col:24> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x149149050 <col:24> 'char *' lvalue Var 0x149146800 'dot_reconnect' 'char *'
|   |     `-CompoundStmt 0x1491492c0 <col:40, line:28:3>
|   |       `-CallExpr 0x149149288 <line:25:4, line:26:23> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x149149178 <line:25:4> 'int ()' Function 0x149148858 'applog' 'int ()'
|   |         |-RecoveryExpr 0x149149268 <col:11> '<dependent type>' contains-errors lvalue
|   |         |-StringLiteral 0x1491491b0 <col:20> 'char[4]' lvalue "STR"
|   |         `-RecoveryExpr 0x149149208 <line:26:5, col:11> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x1491491d0 <col:5> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |-BinaryOperator 0x149149500 <line:31:2, col:57> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x149149368 <col:2> 'char *' lvalue Var 0x149145d40 'port' 'char *'
|   | `-CStyleCastExpr 0x1491494d8 <col:9, col:57> 'char *' contains-errors <Dependent>
|   |   `-CallExpr 0x149149438 <col:17, col:57> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x149149388 <col:17> 'int ()' Function 0x1491463a8 'json_string_value' 'int ()'
|   |     `-CallExpr 0x149149408 <col:35, col:56> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x1491493a8 <col:35> 'int ()' Function 0x1491464a8 'json_array_get' 'int ()'
|   |       |-RecoveryExpr 0x1491493c8 <col:50> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x1491493e8 <col:55> 'int' 1
|   |-IfStmt 0x149149a20 <line:32:2, line:33:16>
|   | |-UnaryOperator 0x149149558 <line:32:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x149149540 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x149149520 <col:7> 'char *' lvalue Var 0x149145d40 'port' 'char *'
|   | `-BinaryOperator 0x149149a00 <line:33:3, col:16> 'char *' contains-errors '='
|   |   |-DeclRefExpr 0x149149570 <col:3> 'char *' lvalue Var 0x149145d40 'port' 'char *'
|   |   `-RecoveryExpr 0x1491495c8 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x149149590 <col:10> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |-CallExpr 0x149149db8 <line:35:2, col:35> 'int'
|   | |-ImplicitCastExpr 0x149149da0 <col:2> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x149149ca0 <col:2> 'int (char *, const char *, ...)' Function 0x149149a88 'sprintf' 'int (char *, const char *, ...)'
|   | |-ImplicitCastExpr 0x149149df8 <col:10> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x149149cc0 <col:10> 'char[256]' lvalue Var 0x149145e50 'address' 'char[256]'
|   | |-ImplicitCastExpr 0x149149e28 <col:19> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x149149e10 <col:19> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x149149ce0 <col:19> 'char[4]' lvalue "STR"
|   | |-ImplicitCastExpr 0x149149e40 <col:26> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x149149d00 <col:26> 'char *' lvalue Var 0x149145cc0 'url' 'char *'
|   | `-ImplicitCastExpr 0x149149e58 <col:31> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x149149d20 <col:31> 'char *' lvalue Var 0x149145d40 'port' 'char *'
|   |-CallExpr 0x14914a2d8 <line:42:2, col:22> 'int'
|   | |-ImplicitCastExpr 0x14914a2c0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14914a280 <col:2> 'int ()' Function 0x14914a1c8 'clear_pool_work' 'int ()'
|   | `-ImplicitCastExpr 0x14914a300 <col:18> 'struct pool *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14914a2a0 <col:18> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |-CallExpr 0x14914a490 <line:44:2, col:32> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14914a3f8 <col:2> 'int ()' Function 0x14914a340 'mutex_lock' 'int ()'
|   | `-UnaryOperator 0x14914a478 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14914a450 <col:14, col:20> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14914a418 <col:14> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |-CallExpr 0x14914a5f0 <line:45:2, col:24> 'int'
|   | |-ImplicitCastExpr 0x14914a5d8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14914a598 <col:2> 'int ()' Function 0x14914a4e0 '__suspend_stratum' 'int ()'
|   | `-ImplicitCastExpr 0x14914a618 <col:20> 'struct pool *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14914a5b8 <col:20> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |-BinaryOperator 0x14914a6b0 <line:46:2, col:14> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x14914a630 <col:2> 'char *' lvalue Var 0x149145c08 'tmp' 'char *'
|   | `-RecoveryExpr 0x14914a688 <col:8, col:14> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14914a650 <col:8> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |-BinaryOperator 0x14914a750 <line:47:2, col:23> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14914a708 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14914a6d0 <col:2> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   | `-DeclRefExpr 0x14914a730 <col:23> 'char *' lvalue Var 0x149145b08 'sockaddr_url' 'char *'
|   |-BinaryOperator 0x14914a830 <line:48:2, col:28> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14914a7a8 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14914a770 <col:2> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   | `-RecoveryExpr 0x14914a808 <col:22, col:28> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14914a7d0 <col:22> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |-CallExpr 0x14914aaa8 <line:49:2, col:10> 'void'
|   | |-ImplicitCastExpr 0x14914aa90 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14914aa00 <col:2> 'void (void *)' Function 0x14914a888 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x14914aae8 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x14914aad0 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14914aa20 <col:7> 'char *' lvalue Var 0x149145c08 'tmp' 'char *'
|   |-BinaryOperator 0x14914ab80 <line:50:2, col:14> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x14914ab00 <col:2> 'char *' lvalue Var 0x149145c08 'tmp' 'char *'
|   | `-RecoveryExpr 0x14914ab58 <col:8, col:14> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14914ab20 <col:8> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   |-BinaryOperator 0x14914ac20 <line:51:2, col:23> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14914abd8 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14914aba0 <col:2> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   | `-DeclRefExpr 0x14914ac00 <col:23> 'char *' lvalue Var 0x149145b88 'stratum_port' 'char *'
|   |-CallExpr 0x14914acb0 <line:52:2, col:10> 'void'
|   | |-ImplicitCastExpr 0x14914ac98 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14914ac40 <col:2> 'void (void *)' Function 0x14914a888 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x14914acf0 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x14914acd8 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14914ac60 <col:7> 'char *' lvalue Var 0x149145c08 'tmp' 'char *'
|   |-CallExpr 0x14914ae80 <line:53:2, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14914ade8 <col:2> 'int ()' Function 0x14914ad30 'mutex_unlock' 'int ()'
|   | `-UnaryOperator 0x14914ae68 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14914ae40 <col:16, col:22> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14914ae08 <col:16> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|   `-IfStmt 0x14914b1c8 <line:55:2, line:58:2>
|     |-UnaryOperator 0x14914b020 <line:55:6, col:27> 'int' prefix '!' cannot overflow
|     | `-CallExpr 0x14914afe0 <col:7, col:27> 'int'
|     |   |-ImplicitCastExpr 0x14914afc8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x14914af88 <col:7> 'int ()' Function 0x14914aed0 'restart_stratum' 'int ()'
|     |   `-ImplicitCastExpr 0x14914b008 <col:23> 'struct pool *' <LValueToRValue>
|     |     `-DeclRefExpr 0x14914afa8 <col:23> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|     `-CompoundStmt 0x14914b1b0 <col:30, line:58:2>
|       `-CallExpr 0x14914b170 <line:56:3, col:19> 'int'
|         |-ImplicitCastExpr 0x14914b158 <col:3> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x14914b118 <col:3> 'int ()' Function 0x14914b060 'pool_failed' 'int ()'
|         `-ImplicitCastExpr 0x14914b198 <col:15> 'struct pool *' <LValueToRValue>
|           `-DeclRefExpr 0x14914b138 <col:15> 'struct pool *' lvalue ParmVar 0x149128668 'pool' 'struct pool *'
|-FunctionDecl 0x149145f38 <line:6:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x149146038 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1491460a0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x149146108 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x149145fe0 <<invalid sloc>> Implicit 900
|-FunctionDecl 0x149146900 <line:12:14> col:14 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x149148600 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x149148668 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1491469a8 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x149148e30 <line:24:7> col:7 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x149148f30 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x149148f98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x149148ed8 <<invalid sloc>> Implicit 887
|-FunctionDecl 0x149149a88 <line:35:2> col:2 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x149149b88 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x149149bf0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x149149b30 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x149149c68 <col:2> Implicit printf 2 3
`-FunctionDecl 0x14914a888 <line:49:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14914a988 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14914a930 <<invalid sloc>> Implicit 873
