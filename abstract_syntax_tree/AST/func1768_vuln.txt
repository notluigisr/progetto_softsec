TranslationUnitDecl 0x127055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x127055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1270555d0 '__int128'
|-TypedefDecl 0x127055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1270555f0 'unsigned __int128'
|-TypedefDecl 0x13000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13000bc00 'struct __NSConstantString_tag'
|   `-Record 0x127055f80 '__NSConstantString_tag'
|-TypedefDecl 0x13000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055790 '__SVInt8_t'
|-TypedefDecl 0x13000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1270557b0 '__SVInt16_t'
|-TypedefDecl 0x13000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1270557d0 '__SVInt32_t'
|-TypedefDecl 0x13000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1270557f0 '__SVInt64_t'
|-TypedefDecl 0x13000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055810 '__SVUint8_t'
|-TypedefDecl 0x13000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055830 '__SVUint16_t'
|-TypedefDecl 0x13000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055850 '__SVUint32_t'
|-TypedefDecl 0x13000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055870 '__SVUint64_t'
|-TypedefDecl 0x13000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055890 '__SVFloat16_t'
|-TypedefDecl 0x13000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1270558b0 '__SVFloat32_t'
|-TypedefDecl 0x13000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1270558d0 '__SVFloat64_t'
|-TypedefDecl 0x13000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1270558f0 '__SVBfloat16_t'
|-TypedefDecl 0x13000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055910 '__clang_svint8x2_t'
|-TypedefDecl 0x13000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055930 '__clang_svint16x2_t'
|-TypedefDecl 0x13000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055950 '__clang_svint32x2_t'
|-TypedefDecl 0x13000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055970 '__clang_svint64x2_t'
|-TypedefDecl 0x13000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1270559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1270559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1270559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x13000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x127055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x127055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x127055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x13000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x127055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x127055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x127055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x13000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x13000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x13000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x13000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x127055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x127055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x127055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127055d90 '__SVBool_t'
|-TypedefDecl 0x13000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x127055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x13000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x127055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x127055df0 '__SVCount_t'
|-TypedefDecl 0x13000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1270550b0 'char'
|-TypedefDecl 0x13000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1270550b0 'char'
|-FunctionDecl 0x13000dd98 <dataset_diviso_filec/func1768_vuln.c:1:1, line:44:1> line:1:1 modprobe_ipvs 'int (void)'
| `-CompoundStmt 0x13002e9c8 <line:2:1, line:44:1>
|   |-DeclStmt 0x13000dfe0 <line:3:2, col:32>
|   | `-VarDecl 0x13000dee8 <col:2, col:13> col:8 used argv 'char *[]'
|   |-DeclStmt 0x13000e078 <line:4:2, col:11>
|   | `-VarDecl 0x13000e010 <col:2, col:6> col:6 used child 'int'
|   |-DeclStmt 0x13000e110 <line:5:2, col:12>
|   | `-VarDecl 0x13000e0a8 <col:2, col:6> col:6 used status 'int'
|   |-DeclStmt 0x13000e1a8 <line:6:2, col:8>
|   | `-VarDecl 0x13000e140 <col:2, col:6> col:6 used rc 'int'
|   |-DeclStmt 0x127122420 <line:7:2, col:33>
|   | `-VarDecl 0x13000e1d8 <col:2, col:32> col:8 used modprobe 'char *' cinit
|   |   `-ImplicitCastExpr 0x13000e3d8 <col:19, col:32> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x13000e3b8 <col:19, col:32> 'int'
|   |       `-ImplicitCastExpr 0x13000e3a0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x13000e350 <col:19> 'int ()' Function 0x13000e298 'get_modprobe' 'int ()'
|   |-DeclStmt 0x127122648 <line:8:2, col:31>
|   | |-RecordDecl 0x127122438 <col:2, col:9> col:9 struct sigaction
|   | |-VarDecl 0x127122538 <col:2, col:19> col:19 referenced invalid act 'struct sigaction'
|   | `-VarDecl 0x1271225c0 <col:2, col:24> col:24 invalid old_act 'struct sigaction'
|   |-IfStmt 0x1271227a0 <line:10:2, line:11:13>
|   | |-ImplicitCastExpr 0x127122680 <line:10:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x127122660 <col:6> 'char *' lvalue Var 0x13000e1d8 'modprobe' 'char *'
|   | `-BinaryOperator 0x127122780 <line:11:3, col:13> 'char *' '='
|   |   |-ArraySubscriptExpr 0x127122728 <col:3, col:9> 'char *' lvalue
|   |   | |-ImplicitCastExpr 0x127122710 <col:3> 'char **' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x127122698 <col:3> 'char *[]' lvalue Var 0x13000dee8 'argv' 'char *[]'
|   |   | `-IntegerLiteral 0x1271226b8 <col:8> 'int' 0
|   |   `-ImplicitCastExpr 0x127122768 <col:13> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x127122748 <col:13> 'char *' lvalue Var 0x13000e1d8 'modprobe' 'char *'
|   |-BinaryOperator 0x1271228a8 <line:13:2, col:19> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127122808 <col:2, col:6> '<dependent type>' contains-errors lvalue .sa_handler
|   | | `-RecoveryExpr 0x1271227e0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1271227c0 <col:2> 'struct sigaction' lvalue Var 0x127122538 'act' 'struct sigaction'
|   | `-RecoveryExpr 0x127122888 <col:19> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x127122a48 <line:14:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1271229a8 <col:2> 'int ()' Function 0x1271228f0 'sigemptyset' 'int ()'
|   | `-UnaryOperator 0x127122a30 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x1271229e8 <col:15, col:19> '<dependent type>' contains-errors lvalue .sa_mask
|   |     `-RecoveryExpr 0x1271229c8 <col:15> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x127122b20 <line:15:2, col:17> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127122ab8 <col:2, col:6> '<dependent type>' contains-errors lvalue .sa_flags
|   | | `-RecoveryExpr 0x127122a90 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x127122a70 <col:2> 'struct sigaction' lvalue Var 0x127122538 'act' 'struct sigaction'
|   | `-IntegerLiteral 0x127122b00 <col:17> 'int' 0
|   |-CallExpr 0x127122d20 <line:17:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x127122c20 <col:2> 'int ()' Function 0x127122b68 'sigaction' 'int ()'
|   | |-RecoveryExpr 0x127122d00 <col:14> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x127122c78 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x127122c58 <col:24> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x127122cb0 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x127122c90 <col:30> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x127122ec8 <line:19:2, line:20:18>
|   | |-RecoveryExpr 0x127122d70 <line:19:6> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x127122ea8 <line:20:3, col:18> 'int'
|   |   `-ImplicitCastExpr 0x127122e90 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x127122e70 <col:3> 'int ()' Function 0x127122db8 'flush_log_file' 'int ()'
|   |-IfStmt 0x130028940 <line:22:2, line:25:2>
|   | |-UnaryOperator 0x130028498 <line:22:6, col:22> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x130028478 <col:7, col:22> 'int'
|   | |   `-BinaryOperator 0x130028458 <col:8, col:21> 'int' '='
|   | |     |-DeclRefExpr 0x127122ee8 <col:8> 'int' lvalue Var 0x13000e010 'child' 'int'
|   | |     `-CallExpr 0x130028438 <col:16, col:21> 'int'
|   | |       `-ImplicitCastExpr 0x130028420 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |         `-DeclRefExpr 0x130028400 <col:16> 'int ()' Function 0x127122f30 'fork' 'int ()'
|   | `-CompoundStmt 0x130028920 <col:25, line:25:2>
|   |   |-CallExpr 0x130028660 <line:23:3, col:22> 'int'
|   |   | |-ImplicitCastExpr 0x130028648 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x130028590 <col:3> 'int ()' Function 0x1300284d8 'execv' 'int ()'
|   |   | |-ImplicitCastExpr 0x130028690 <col:9, col:15> 'char *' <LValueToRValue>
|   |   | | `-ArraySubscriptExpr 0x130028608 <col:9, col:15> 'char *' lvalue
|   |   | |   |-ImplicitCastExpr 0x1300285f0 <col:9> 'char **' <ArrayToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x1300285b0 <col:9> 'char *[]' lvalue Var 0x13000dee8 'argv' 'char *[]'
|   |   | |   `-IntegerLiteral 0x1300285d0 <col:14> 'int' 0
|   |   | `-ImplicitCastExpr 0x1300286a8 <col:18> 'char **' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x130028628 <col:18> 'char *[]' lvalue Var 0x13000dee8 'argv' 'char *[]'
|   |   `-CallExpr 0x1300288f8 <line:24:3, col:9> 'void'
|   |     |-ImplicitCastExpr 0x1300288e0 <col:3> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x130028868 <col:3> 'void (int) __attribute__((noreturn))' Function 0x1300286f8 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x130028888 <col:8> 'int' 1
|   |-BinaryOperator 0x130028b90 <line:27:2, col:32> 'int' '='
|   | |-DeclRefExpr 0x130028960 <col:2> 'int' lvalue Var 0x13000e140 'rc' 'int'
|   | `-CallExpr 0x130028b40 <col:7, col:32> 'int'
|   |   |-ImplicitCastExpr 0x130028b28 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x130028a60 <col:7> 'int ()' Function 0x1300289a8 'waitpid' 'int ()'
|   |   |-ImplicitCastExpr 0x130028b78 <col:15> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x130028a80 <col:15> 'int' lvalue Var 0x13000e010 'child' 'int'
|   |   |-UnaryOperator 0x130028af0 <col:22, col:23> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x130028aa0 <col:23> 'int' lvalue Var 0x13000e0a8 'status' 'int'
|   |   `-IntegerLiteral 0x130028b08 <col:31> 'int' 0
|   |-CallExpr 0x130028cb0 <line:29:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x130028bb0 <col:2> 'int ()' Function 0x127122b68 'sigaction' 'int ()'
|   | |-RecoveryExpr 0x130028c70 <col:14> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x130028c08 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x130028be8 <col:24> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x130028c90 <col:33> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x130029078 <line:31:2, line:34:2>
|   | |-BinaryOperator 0x130028d40 <line:31:6, col:11> 'int' '<'
|   | | |-ImplicitCastExpr 0x130028d28 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x130028ce8 <col:6> 'int' lvalue Var 0x13000e140 'rc' 'int'
|   | | `-IntegerLiteral 0x130028d08 <col:11> 'int' 0
|   | `-CompoundStmt 0x130029068 <col:14, line:34:2>
|   |-IfStmt 0x130029248 <line:36:2, line:37:16>
|   | |-ImplicitCastExpr 0x1300290b8 <line:36:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x130029098 <col:6> 'char *' lvalue Var 0x13000e1d8 'modprobe' 'char *'
|   | `-CallExpr 0x130029208 <line:37:3, col:16> 'int'
|   |   |-ImplicitCastExpr 0x1300291f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1300291b0 <col:3> 'int ()' Function 0x1300290f8 'FREE' 'int ()'
|   |   `-ImplicitCastExpr 0x130029230 <col:8> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1300291d0 <col:8> 'char *' lvalue Var 0x13000e1d8 'modprobe' 'char *'
|   `-IfStmt 0x13002e9a8 <line:39:2, line:41:2>
|     |-BinaryOperator 0x13002e978 <line:39:6, col:46> 'int' '||'
|     | |-UnaryOperator 0x1300293e0 <col:6, col:23> 'int' prefix '!' cannot overflow
|     | | `-CallExpr 0x1300293a0 <col:7, col:23> 'int'
|     | |   |-ImplicitCastExpr 0x130029388 <col:7> 'int (*)()' <FunctionToPointerDecay>
|     | |   | `-DeclRefExpr 0x130029348 <col:7> 'int ()' Function 0x130029290 'WIFEXITED' 'int ()'
|     | |   `-ImplicitCastExpr 0x1300293c8 <col:17> 'int' <LValueToRValue>
|     | |     `-DeclRefExpr 0x130029368 <col:17> 'int' lvalue Var 0x13000e0a8 'status' 'int'
|     | `-CallExpr 0x13002e938 <col:28, col:46> 'int'
|     |   |-ImplicitCastExpr 0x13002e920 <col:28> 'int (*)()' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x13002e8e0 <col:28> 'int ()' Function 0x13002e828 'WEXITSTATUS' 'int ()'
|     |   `-ImplicitCastExpr 0x13002e960 <col:40> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x13002e900 <col:40> 'int' lvalue Var 0x13000e0a8 'status' 'int'
|     `-CompoundStmt 0x13002e998 <col:49, line:41:2>
|-FunctionDecl 0x1300286f8 <line:24:3> col:3 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x1300287f8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1300287a0 <<invalid sloc>> Implicit 869
`-FunctionDecl 0x130028ed8 <line:33:11> col:11 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x130028fd8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x130028f80 <<invalid sloc>> Implicit 901
