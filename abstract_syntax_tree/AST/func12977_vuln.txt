TranslationUnitDecl 0x12e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e055bd0 '__int128'
|-TypedefDecl 0x12e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e055bf0 'unsigned __int128'
|-TypedefDecl 0x12e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e126000 'struct __NSConstantString_tag'
|   `-Record 0x12e056580 '__NSConstantString_tag'
|-TypedefDecl 0x12e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e055d90 '__SVInt8_t'
|-TypedefDecl 0x12e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e055db0 '__SVInt16_t'
|-TypedefDecl 0x12e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e055dd0 '__SVInt32_t'
|-TypedefDecl 0x12e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e055df0 '__SVInt64_t'
|-TypedefDecl 0x12e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e055e10 '__SVUint8_t'
|-TypedefDecl 0x12e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e055e30 '__SVUint16_t'
|-TypedefDecl 0x12e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e055e50 '__SVUint32_t'
|-TypedefDecl 0x12e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e055e70 '__SVUint64_t'
|-TypedefDecl 0x12e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e055e90 '__SVFloat16_t'
|-TypedefDecl 0x12e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e056390 '__SVBool_t'
|-TypedefDecl 0x12e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0563f0 '__SVCount_t'
|-TypedefDecl 0x12e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-TypedefDecl 0x12e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
`-FunctionDecl 0x12e128438 <dataset_diviso_filec/func12977_vuln.c:1:1, line:35:1> line:1:1 invalid memxor3_different_alignment_ab 'int (int *, const char *, const char *, unsigned int, int)'
  |-ParmVarDecl 0x12e128128 <col:33, col:41> col:41 referenced invalid dst 'int *'
  |-ParmVarDecl 0x12e1281a8 <line:2:5, col:17> col:17 a 'const char *'
  |-ParmVarDecl 0x12e128228 <col:20, col:32> col:32 b 'const char *'
  |-ParmVarDecl 0x12e1282a8 <line:3:5, col:14> col:14 used offset 'unsigned int'
  |-ParmVarDecl 0x12e128328 <col:22, col:29> col:29 referenced invalid n 'int'
  `-CompoundStmt 0x12e142ef8 <line:4:1, line:35:1>
    |-DeclStmt 0x12e128620 <line:5:3, col:15>
    | |-VarDecl 0x12e128520 <col:3, col:7> col:7 used shl 'int'
    | `-VarDecl 0x12e1285a0 <col:3, col:12> col:12 used shr 'int'
    |-DeclStmt 0x12e1286b8 <line:6:3, col:23>
    | `-VarDecl 0x12e128650 <col:3, col:17> col:17 referenced invalid a_word 'const int *'
    |-DeclStmt 0x12e128750 <line:7:3, col:23>
    | `-VarDecl 0x12e1286e8 <col:3, col:17> col:17 referenced invalid b_word 'const int *'
    |-BinaryOperator 0x12e141840 <line:11:3, col:20> 'int' contains-errors '='
    | |-DeclRefExpr 0x12e128768 <col:3> 'int' lvalue Var 0x12e128520 'shl' 'int'
    | `-BinaryOperator 0x12e141820 <col:9, col:20> '<dependent type>' contains-errors '*'
    |   |-RecoveryExpr 0x12e141800 <col:9> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e1287a0 <col:20> 'unsigned int' lvalue ParmVar 0x12e1282a8 'offset' 'unsigned int'
    |-IfStmt 0x12e142298 <line:17:3, line:25:5> has_else
    | |-BinaryOperator 0x12e1419a0 <line:17:7, col:11> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x12e141960 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12e141980 <col:11> 'int' 1
    | |-CompoundStmt 0x12e142130 <line:18:5, line:23:5>
    | | |-UnaryOperator 0x12e141a08 <line:19:7, col:8> '<dependent type>' contains-errors postfix '--' cannot overflow
    | | | `-RecoveryExpr 0x12e1419e0 <col:7> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x12e1419c0 <col:7> 'int' lvalue ParmVar 0x12e128328 'n' 'int'
    | | `-BinaryOperator 0x12e142110 <line:22:7, col:39> '<dependent type>' contains-errors '='
    | |   |-ArraySubscriptExpr 0x12e142070 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |   | |-ImplicitCastExpr 0x12e142040 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   | | `-RecoveryExpr 0x12e141d10 <col:7> '<dependent type>' contains-errors lvalue
    | |   | |   `-DeclRefExpr 0x12e141cf0 <col:7> 'int *' lvalue ParmVar 0x12e128128 'dst' 'int *'
    | |   | `-ImplicitCastExpr 0x12e142058 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x12e141d38 <col:11> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x12e1420d0 <col:16, col:39> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x12e141f00 <col:16> 'int ()' Function 0x12e141e48 'MERGE' 'int ()'
    | |     |-RecoveryExpr 0x12e142090 <col:23> '<dependent type>' contains-errors lvalue
    | |     |-DeclRefExpr 0x12e141f38 <col:27> 'int' lvalue Var 0x12e128520 'shl' 'int'
    | |     |-RecoveryExpr 0x12e1420b0 <col:32> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12e141f70 <col:36> 'int' lvalue Var 0x12e1285a0 'shr' 'int'
    | `-NullStmt 0x12e142290 <line:25:5>
    `-WhileStmt 0x12e142ed8 <line:27:3, line:34:5>
      |-BinaryOperator 0x12e142308 <line:27:10, col:14> 'int' contains-errors '>'
      | |-RecoveryExpr 0x12e1422c8 <col:10> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x12e1422e8 <col:14> 'int' 0
      `-CompoundStmt 0x12e142eb8 <line:28:5, line:34:5>
        |-CompoundAssignOperator 0x12e142390 <line:29:7, col:12> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        | |-RecoveryExpr 0x12e142348 <col:7> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x12e142328 <col:7> 'int' lvalue ParmVar 0x12e128328 'n' 'int'
        | `-IntegerLiteral 0x12e142370 <col:12> 'int' 2
        `-BinaryOperator 0x12e142c40 <line:31:7, col:40> '<dependent type>' contains-errors '='
          |-ArraySubscriptExpr 0x12e142770 <col:7, col:14> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x12e142758 <col:7> '<dependent type>' contains-errors <LValueToRValue>
          | | `-RecoveryExpr 0x12e142570 <col:7> '<dependent type>' contains-errors lvalue
          | |   `-DeclRefExpr 0x12e142550 <col:7> 'int *' lvalue ParmVar 0x12e128128 'dst' 'int *'
          | `-BinaryOperator 0x12e1425d8 <col:11, col:13> '<dependent type>' contains-errors '+'
          |   |-RecoveryExpr 0x12e142598 <col:11> '<dependent type>' contains-errors lvalue
          |   `-IntegerLiteral 0x12e1425b8 <col:13> 'int' 1
          `-CallExpr 0x12e142c00 <col:18, col:40> '<dependent type>' contains-errors
            |-DeclRefExpr 0x12e142630 <col:18> 'int ()' Function 0x12e141e48 'MERGE' 'int ()'
            |-RecoveryExpr 0x12e142790 <col:24> '<dependent type>' contains-errors lvalue
            |-DeclRefExpr 0x12e142668 <col:28> 'int' lvalue Var 0x12e128520 'shl' 'int'
            |-RecoveryExpr 0x12e1427b0 <col:33> '<dependent type>' contains-errors lvalue
            `-DeclRefExpr 0x12e1426a0 <col:37> 'int' lvalue Var 0x12e1285a0 'shr' 'int'
