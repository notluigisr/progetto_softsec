TranslationUnitDecl 0x15b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b055bd0 '__int128'
|-TypedefDecl 0x15b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b055bf0 'unsigned __int128'
|-TypedefDecl 0x14b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x15b056580 '__NSConstantString_tag'
|-TypedefDecl 0x14b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b055d90 '__SVInt8_t'
|-TypedefDecl 0x14b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b055db0 '__SVInt16_t'
|-TypedefDecl 0x14b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b055dd0 '__SVInt32_t'
|-TypedefDecl 0x14b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b055df0 '__SVInt64_t'
|-TypedefDecl 0x14b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b055e10 '__SVUint8_t'
|-TypedefDecl 0x14b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b055e30 '__SVUint16_t'
|-TypedefDecl 0x14b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b055e50 '__SVUint32_t'
|-TypedefDecl 0x14b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b055e70 '__SVUint64_t'
|-TypedefDecl 0x14b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b055e90 '__SVFloat16_t'
|-TypedefDecl 0x14b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b056390 '__SVBool_t'
|-TypedefDecl 0x14b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b0563f0 '__SVCount_t'
|-TypedefDecl 0x14b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-TypedefDecl 0x14b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-FunctionDecl 0x14b00df18 <dataset_diviso_filec/func16835_vuln.c:1:1, line:56:1> line:1:5 invalid gnutls_pcert_import_x509 'int (int *, int, unsigned int)'
| |-ParmVarDecl 0x14b00dd28 <col:31, col:48> col:48 referenced invalid pcert 'int *'
| |-ParmVarDecl 0x14b00dda8 <line:2:2, col:20> col:20 invalid crt 'int'
| |-ParmVarDecl 0x14b00de28 <col:25, col:38> col:38 flags 'unsigned int'
| `-CompoundStmt 0x14b029f10 <line:3:1, line:56:1>
|   |-DeclStmt 0x14b00e058 <line:4:1, col:8>
|   | `-VarDecl 0x14b00dff0 <col:1, col:5> col:5 used ret 'int'
|   |-UnaryExprOrTypeTraitExpr 0x14b00e0c8 <line:5:1, col:8> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x14b00e0a8 <col:8> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14b0278f8 <line:7:3, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14b0277f0 <col:3> 'void *(void *, int, unsigned long)' Function 0x14b0275a0 'memset' 'void *(void *, int, unsigned long)'
|   | |-RecoveryExpr 0x14b027810 <col:10> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x14b027830 <col:17> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x14b0278c0 <col:20, col:33> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x14b0278a0 <col:26, col:33> '<dependent type>' contains-errors
|   |     `-UnaryOperator 0x14b027888 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x14b027870 <col:28> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x14b027850 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14b027a18 <line:9:3, col:17> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14b027978 <col:3, col:10> '<dependent type>' contains-errors lvalue ->type
|   | | `-RecoveryExpr 0x14b027950 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14b027930 <col:3> 'int *' lvalue ParmVar 0x14b00dd28 'pcert' 'int *'
|   | `-RecoveryExpr 0x14b0279f8 <col:17> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14b027b68 <line:10:3, col:22> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14b027ac8 <col:3, col:15> '<dependent type>' contains-errors lvalue .data
|   | | `-CXXDependentScopeMemberExpr 0x14b027a80 <col:3, col:10> '<dependent type>' contains-errors lvalue ->cert
|   | |   `-RecoveryExpr 0x14b027a58 <col:3> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x14b027a38 <col:3> 'int *' lvalue ParmVar 0x14b00dd28 'pcert' 'int *'
|   | `-RecoveryExpr 0x14b027b48 <col:22> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14b027ed8 <line:13:3, col:67> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14b027ba8 <col:3> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   | `-CallExpr 0x14b027e98 <col:9, col:67> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14b027d20 <col:9> 'int ()' Function 0x14b027c68 'gnutls_x509_crt_export' 'int ()'
|   |   |-RecoveryExpr 0x14b027d40 <col:32> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x14b027e20 <col:37> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x14b027e40 <col:58> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x14b027e80 <col:64, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x14b027e60 <col:65> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14b028330 <line:14:3, line:18:5>
|   | |-BinaryOperator 0x14b028098 <line:14:7, col:25> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x14b028038 <col:7, col:13> 'int' '<'
|   | | | |-ImplicitCastExpr 0x14b028020 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14b027ef8 <col:7> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   | | | `-IntegerLiteral 0x14b027f18 <col:13> 'int' 0
|   | | `-BinaryOperator 0x14b028078 <col:18, col:25> 'int' contains-errors '!='
|   | |   |-DeclRefExpr 0x14b027f70 <col:18> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   | |   `-RecoveryExpr 0x14b028058 <col:25> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14b028310 <line:15:5, line:18:5>
|   |   |-BinaryOperator 0x14b028288 <line:16:7, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x14b0280b8 <col:7> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   |   | `-CallExpr 0x14b028248 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x14b028230 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x14b0281b8 <col:13> 'int ()' Function 0x14b028100 'gnutls_assert_val' 'int ()'
|   |   |   `-ImplicitCastExpr 0x14b028270 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14b0281d8 <col:31> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   |   `-GotoStmt 0x14b0282f8 <line:17:7, col:12> 'cleanup' 0x14b0282a8
|   |-BinaryOperator 0x15b122df0 <line:20:3, col:38> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15b122c00 <col:3, col:15> '<dependent type>' contains-errors lvalue .data
|   | | `-CXXDependentScopeMemberExpr 0x14b028398 <col:3, col:10> '<dependent type>' contains-errors lvalue ->cert
|   | |   `-RecoveryExpr 0x14b028370 <col:3> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x14b028350 <col:3> 'int *' lvalue ParmVar 0x14b00dd28 'pcert' 'int *'
|   | `-CallExpr 0x15b122dc8 <col:22, col:38> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b122d28 <col:22> 'int ()' Function 0x15b122c70 'gnutls_malloc' 'int ()'
|   |   `-RecoveryExpr 0x15b122da8 <col:36> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b123078 <line:21:3, line:25:5>
|   | |-BinaryOperator 0x15b122f18 <line:21:7, col:27> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x15b122e78 <col:7, col:19> '<dependent type>' contains-errors lvalue .data
|   | | | `-CXXDependentScopeMemberExpr 0x15b122e30 <col:7, col:14> '<dependent type>' contains-errors lvalue ->cert
|   | | |   `-RecoveryExpr 0x15b122e10 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x15b122ef8 <col:27> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15b123058 <line:22:5, line:25:5>
|   |   |-BinaryOperator 0x15b123020 <line:23:7, col:52> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x15b122f38 <col:7> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   |   | `-CallExpr 0x15b122ff8 <col:13, col:52> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x15b122f58 <col:13> 'int ()' Function 0x14b028100 'gnutls_assert_val' 'int ()'
|   |   |   `-RecoveryExpr 0x15b122fd8 <col:31> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x15b123040 <line:24:7, col:12> 'cleanup' 0x14b0282a8
|   |-BinaryOperator 0x15b1232e8 <line:27:3, col:79> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b123098 <col:3> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   | `-CallExpr 0x15b1232a8 <col:9, col:79> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b1230b8 <col:9> 'int ()' Function 0x14b027c68 'gnutls_x509_crt_export' 'int ()'
|   |   |-RecoveryExpr 0x15b1230d8 <col:32> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x15b123250 <col:37> '<dependent type>' contains-errors lvalue
|   |   |-CXXDependentScopeMemberExpr 0x15b123178 <col:58, col:70> '<dependent type>' contains-errors lvalue .data
|   |   | `-CXXDependentScopeMemberExpr 0x15b123130 <col:58, col:65> '<dependent type>' contains-errors lvalue ->cert
|   |   |   `-RecoveryExpr 0x15b123110 <col:58> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x15b123290 <col:76, col:77> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x15b123270 <col:77> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b123490 <line:28:3, line:32:5>
|   | |-BinaryOperator 0x15b123360 <line:28:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x15b123348 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b123308 <col:7> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   | | `-IntegerLiteral 0x15b123328 <col:13> 'int' 0
|   | `-CompoundStmt 0x15b123470 <line:29:5, line:32:5>
|   |   |-BinaryOperator 0x15b123438 <line:30:7, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x15b123380 <col:7> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   |   | `-CallExpr 0x15b1233f8 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x15b1233e0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x15b1233a0 <col:13> 'int ()' Function 0x14b028100 'gnutls_assert_val' 'int ()'
|   |   |   `-ImplicitCastExpr 0x15b123420 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15b1233c0 <col:31> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   |   `-GotoStmt 0x15b123458 <line:31:7, col:12> 'cleanup' 0x14b0282a8
|   |-BinaryOperator 0x15b123750 <line:35:3, col:42> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b123588 <col:3> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   | `-CallExpr 0x15b123728 <col:9, col:42> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b123688 <col:9> 'int ()' Function 0x15b1235d0 'gnutls_pubkey_init' 'int ()'
|   |   `-UnaryOperator 0x15b123710 <col:28, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x15b1236c8 <col:29, col:36> '<dependent type>' contains-errors lvalue ->pubkey
|   |       `-RecoveryExpr 0x15b1236a8 <col:29> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b1238f8 <line:36:3, line:40:5>
|   | |-BinaryOperator 0x15b1237c8 <line:36:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x15b1237b0 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b123770 <col:7> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   | | `-IntegerLiteral 0x15b123790 <col:13> 'int' 0
|   | `-CompoundStmt 0x15b1238d8 <line:37:5, line:40:5>
|   |   |-BinaryOperator 0x15b1238a0 <line:38:7, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x15b1237e8 <col:7> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   |   | `-CallExpr 0x15b123860 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x15b123848 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x15b123808 <col:13> 'int ()' Function 0x14b028100 'gnutls_assert_val' 'int ()'
|   |   |   `-ImplicitCastExpr 0x15b123888 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15b123828 <col:31> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   |   `-GotoStmt 0x15b1238c0 <line:39:7, col:12> 'cleanup' 0x14b0282a8
|   |-BinaryOperator 0x15b123b18 <line:42:3, col:56> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b123918 <col:3> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   | `-CallExpr 0x15b123ae0 <col:9, col:56> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b123a18 <col:9> 'int ()' Function 0x15b123960 'gnutls_pubkey_import_x509' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x15b123a58 <col:35, col:42> '<dependent type>' contains-errors lvalue ->pubkey
|   |   | `-RecoveryExpr 0x15b123a38 <col:35> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x15b123aa0 <col:50> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x15b123ac0 <col:55> 'int' 0
|   |-IfStmt 0x14b029c80 <line:43:3, line:48:5>
|   | |-BinaryOperator 0x15b123b90 <line:43:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x15b123b78 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b123b38 <col:7> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   | | `-IntegerLiteral 0x15b123b58 <col:13> 'int' 0
|   | `-CompoundStmt 0x14b029c58 <line:44:5, line:48:5>
|   |   |-CallExpr 0x14b029b40 <line:45:7, col:41> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14b029ab8 <col:7> 'int ()' Function 0x14b029a00 'gnutls_pubkey_deinit' 'int ()'
|   |   | `-CXXDependentScopeMemberExpr 0x14b029af8 <col:28, col:35> '<dependent type>' contains-errors lvalue ->pubkey
|   |   |   `-RecoveryExpr 0x14b029ad8 <col:28> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x14b029c20 <line:46:7, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x14b029b68 <col:7> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   |   | `-CallExpr 0x14b029be0 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x14b029bc8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x14b029b88 <col:13> 'int ()' Function 0x14b028100 'gnutls_assert_val' 'int ()'
|   |   |   `-ImplicitCastExpr 0x14b029c08 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14b029ba8 <col:31> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
|   |   `-GotoStmt 0x14b029c40 <line:47:7, col:12> 'cleanup' 0x14b0282a8
|   |-ReturnStmt 0x14b029cc0 <line:50:3, col:10>
|   | `-IntegerLiteral 0x14b029ca0 <col:10> 'int' 0
|   |-LabelStmt 0x14b029ea8 <line:52:1, line:53:31> 'cleanup'
|   | `-CallExpr 0x14b029e80 <col:3, col:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14b029db0 <col:3> 'int ()' Function 0x14b029cf8 'gnutls_free' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x14b029e38 <col:15, col:27> '<dependent type>' contains-errors lvalue .data
|   |     `-CXXDependentScopeMemberExpr 0x14b029df0 <col:15, col:22> '<dependent type>' contains-errors lvalue ->cert
|   |       `-RecoveryExpr 0x14b029dd0 <col:15> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x14b029f00 <line:55:3, col:10>
|     `-ImplicitCastExpr 0x14b029ee8 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14b029ec8 <col:10> 'int' lvalue Var 0x14b00dff0 'ret' 'int'
`-FunctionDecl 0x14b0275a0 <line:7:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x14b0276a0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14b027708 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x14b027770 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14b027648 <<invalid sloc>> Implicit 900
