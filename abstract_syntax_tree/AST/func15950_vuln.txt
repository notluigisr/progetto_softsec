TranslationUnitDecl 0x130055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130055bd0 '__int128'
|-TypedefDecl 0x130056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130055bf0 'unsigned __int128'
|-TypedefDecl 0x130126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130126000 'struct __NSConstantString_tag'
|   `-Record 0x130056580 '__NSConstantString_tag'
|-TypedefDecl 0x130126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130055d90 '__SVInt8_t'
|-TypedefDecl 0x130126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130055db0 '__SVInt16_t'
|-TypedefDecl 0x130126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130055dd0 '__SVInt32_t'
|-TypedefDecl 0x1301263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130055df0 '__SVInt64_t'
|-TypedefDecl 0x130126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130055e10 '__SVUint8_t'
|-TypedefDecl 0x1301264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130055e30 '__SVUint16_t'
|-TypedefDecl 0x130126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130055e50 '__SVUint32_t'
|-TypedefDecl 0x130126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130055e70 '__SVUint64_t'
|-TypedefDecl 0x1301265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130055e90 '__SVFloat16_t'
|-TypedefDecl 0x130126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1301266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130055ed0 '__SVFloat64_t'
|-TypedefDecl 0x130126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x130126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1301267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x130126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1301268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x130126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x130126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1301269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x130126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x130126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130056090 '__clang_svint8x3_t'
|-TypedefDecl 0x130126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1300560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x130126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1300560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x130126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1300560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x130126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x130126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x130126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x130126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x130126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x130127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1300561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x130127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1300561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1301278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1300561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x130127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1301279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130056230 '__clang_svint16x4_t'
|-TypedefDecl 0x130127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130056250 '__clang_svint32x4_t'
|-TypedefDecl 0x130127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130056270 '__clang_svint64x4_t'
|-TypedefDecl 0x130127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x130127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x130127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x130127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x130127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x130127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x130127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x130127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x130127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130056390 '__SVBool_t'
|-TypedefDecl 0x130127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x130127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x130127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300563f0 '__SVCount_t'
|-TypedefDecl 0x130127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x130127fb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-TypedefDecl 0x130128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x130127fb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
`-FunctionDecl 0x130128478 <dataset_diviso_filec/func15950_vuln.c:1:1, line:68:1> line:1:1 invalid _php_mb_regex_init_options 'int (const char *, int, int *, int **, int *)'
  |-ParmVarDecl 0x1301280d8 <col:28, col:40> col:40 used parg 'const char *'
  |-ParmVarDecl 0x130128158 <col:46, col:50> col:50 used narg 'int'
  |-ParmVarDecl 0x130128228 <col:56, col:72> col:72 invalid option 'int *'
  |-ParmVarDecl 0x1301282e0 <col:80, col:97> col:97 invalid syntax 'int **'
  |-ParmVarDecl 0x130128360 <col:105, col:110> col:110 used eval 'int *'
  `-CompoundStmt 0x1301438f0 <line:2:1, line:68:1>
    |-DeclStmt 0x1301285c8 <line:3:2, col:7>
    | `-VarDecl 0x130128560 <col:2, col:6> col:6 used n 'int'
    |-DeclStmt 0x130128658 <line:4:2, col:8>
    | `-VarDecl 0x1301285f0 <col:2, col:7> col:7 used c 'char'
    |-DeclStmt 0x130128710 <line:5:2, col:14>
    | `-VarDecl 0x130128688 <col:2, col:13> col:6 used optm 'int' cinit
    |   `-IntegerLiteral 0x1301286f0 <col:13> 'int' 0
    |-BinaryOperator 0x130141838 <line:7:2, col:12> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x130141800 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1301287e0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x130128728 <col:3> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x130141818 <col:12> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x1301438d0 <line:9:2, line:67:2>
      |-BinaryOperator 0x1301418d0 <line:9:6, col:14> 'int' contains-errors '!='
      | |-DeclRefExpr 0x130141858 <col:6> 'const char *' lvalue ParmVar 0x1301280d8 'parg' 'const char *'
      | `-RecoveryExpr 0x1301418b0 <col:14> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1301438a8 <col:20, line:67:2>
        |-BinaryOperator 0x130141930 <line:10:3, col:7> 'int' '='
        | |-DeclRefExpr 0x1301418f0 <col:3> 'int' lvalue Var 0x130128560 'n' 'int'
        | `-IntegerLiteral 0x130141910 <col:7> 'int' 0
        |-WhileStmt 0x130143788 <line:11:3, line:65:3>
        | |-BinaryOperator 0x1301419c0 <line:11:9, col:13> 'int' '<'
        | | |-ImplicitCastExpr 0x130141990 <col:9> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x130141950 <col:9> 'int' lvalue Var 0x130128560 'n' 'int'
        | | `-ImplicitCastExpr 0x1301419a8 <col:13> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x130141970 <col:13> 'int' lvalue ParmVar 0x130128158 'narg' 'int'
        | `-CompoundStmt 0x130143768 <col:19, line:65:3>
        |   |-BinaryOperator 0x130141aa8 <line:12:4, col:16> 'char' '='
        |   | |-DeclRefExpr 0x1301419e0 <col:4> 'char' lvalue Var 0x1301285f0 'c' 'char'
        |   | `-ImplicitCastExpr 0x130141a90 <col:8, col:16> 'char' <LValueToRValue>
        |   |   `-ArraySubscriptExpr 0x130141a70 <col:8, col:16> 'const char' lvalue
        |   |     |-ImplicitCastExpr 0x130141a58 <col:8> 'const char *' <LValueToRValue>
        |   |     | `-DeclRefExpr 0x130141a00 <col:8> 'const char *' lvalue ParmVar 0x1301280d8 'parg' 'const char *'
        |   |     `-UnaryOperator 0x130141a40 <col:13, col:14> 'int' postfix '++'
        |   |       `-DeclRefExpr 0x130141a20 <col:13> 'int' lvalue Var 0x130128560 'n' 'int'
        |   `-SwitchStmt 0x130141b18 <line:13:4, line:64:4>
        |     |-ImplicitCastExpr 0x130141b00 <line:13:12> 'int' <IntegralCast>
        |     | `-ImplicitCastExpr 0x130141ae8 <col:12> 'char' <LValueToRValue>
        |     |   `-DeclRefExpr 0x130141ac8 <col:12> 'char' lvalue Var 0x1301285f0 'c' 'char'
        |     `-CompoundStmt 0x130143650 <col:15, line:64:4>
        |       |-CaseStmt 0x130141b70 <line:14:5, line:15:14>
        |       | |-ConstantExpr 0x130141b58 <line:14:10> 'int'
        |       | | `-CharacterLiteral 0x130141b40 <col:10> 'int' 105
        |       | `-CompoundAssignOperator 0x130141c20 <line:15:6, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |       |   |-DeclRefExpr 0x130141b98 <col:6> 'int' lvalue Var 0x130128688 'optm' 'int'
        |       |   `-RecoveryExpr 0x130141c00 <col:14> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130141c50 <line:16:6>
        |       |-CaseStmt 0x130141c88 <line:17:5, line:18:14>
        |       | |-ConstantExpr 0x130141c70 <line:17:10> 'int'
        |       | | `-CharacterLiteral 0x130141c58 <col:10> 'int' 120
        |       | `-CompoundAssignOperator 0x130141d38 <line:18:6, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |       |   |-DeclRefExpr 0x130141cb0 <col:6> 'int' lvalue Var 0x130128688 'optm' 'int'
        |       |   `-RecoveryExpr 0x130141d18 <col:14> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130141d68 <line:19:6>
        |       |-CaseStmt 0x130141da0 <line:20:5, line:21:14>
        |       | |-ConstantExpr 0x130141d88 <line:20:10> 'int'
        |       | | `-CharacterLiteral 0x130141d70 <col:10> 'int' 109
        |       | `-CompoundAssignOperator 0x130141e50 <line:21:6, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |       |   |-DeclRefExpr 0x130141dc8 <col:6> 'int' lvalue Var 0x130128688 'optm' 'int'
        |       |   `-RecoveryExpr 0x130141e30 <col:14> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130141e80 <line:22:6>
        |       |-CaseStmt 0x130141eb8 <line:23:5, line:24:14>
        |       | |-ConstantExpr 0x130141ea0 <line:23:10> 'int'
        |       | | `-CharacterLiteral 0x130141e88 <col:10> 'int' 115
        |       | `-CompoundAssignOperator 0x130141f68 <line:24:6, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |       |   |-DeclRefExpr 0x130141ee0 <col:6> 'int' lvalue Var 0x130128688 'optm' 'int'
        |       |   `-RecoveryExpr 0x130141f48 <col:14> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130141f98 <line:25:6>
        |       |-CaseStmt 0x130141fd0 <line:26:5, line:27:38>
        |       | |-ConstantExpr 0x130141fb8 <line:26:10> 'int'
        |       | | `-CharacterLiteral 0x130141fa0 <col:10> 'int' 112
        |       | `-CompoundAssignOperator 0x1301420f8 <line:27:6, col:38> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |       |   |-DeclRefExpr 0x130141ff8 <col:6> 'int' lvalue Var 0x130128688 'optm' 'int'
        |       |   `-BinaryOperator 0x1301420d8 <col:14, col:38> '<dependent type>' contains-errors '|'
        |       |     |-RecoveryExpr 0x130142098 <col:14> '<dependent type>' contains-errors lvalue
        |       |     `-RecoveryExpr 0x1301420b8 <col:38> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130142128 <line:28:6>
        |       |-CaseStmt 0x130142160 <line:29:5, line:30:14>
        |       | |-ConstantExpr 0x130142148 <line:29:10> 'int'
        |       | | `-CharacterLiteral 0x130142130 <col:10> 'int' 108
        |       | `-CompoundAssignOperator 0x130142210 <line:30:6, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |       |   |-DeclRefExpr 0x130142188 <col:6> 'int' lvalue Var 0x130128688 'optm' 'int'
        |       |   `-RecoveryExpr 0x1301421f0 <col:14> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130142240 <line:31:6>
        |       |-CaseStmt 0x130142278 <line:32:5, line:33:14>
        |       | |-ConstantExpr 0x130142260 <line:32:10> 'int'
        |       | | `-CharacterLiteral 0x130142248 <col:10> 'int' 110
        |       | `-CompoundAssignOperator 0x130142328 <line:33:6, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |       |   |-DeclRefExpr 0x1301422a0 <col:6> 'int' lvalue Var 0x130128688 'optm' 'int'
        |       |   `-RecoveryExpr 0x130142308 <col:14> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130142358 <line:34:6>
        |       |-CaseStmt 0x130142390 <line:35:5, line:36:16>
        |       | |-ConstantExpr 0x130142378 <line:35:10> 'int'
        |       | | `-CharacterLiteral 0x130142360 <col:10> 'int' 106
        |       | `-BinaryOperator 0x1301424c0 <line:36:6, col:16> '<dependent type>' contains-errors '='
        |       |   |-UnaryOperator 0x130142488 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
        |       |   | `-ImplicitCastExpr 0x130142470 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        |       |   |   `-RecoveryExpr 0x1301423b8 <col:7> '<dependent type>' contains-errors lvalue
        |       |   `-RecoveryExpr 0x1301424a0 <col:16> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x1301424e0 <line:37:6>
        |       |-CaseStmt 0x130142518 <line:38:5, line:39:16>
        |       | |-ConstantExpr 0x130142500 <line:38:10> 'int'
        |       | | `-CharacterLiteral 0x1301424e8 <col:10> 'int' 117
        |       | `-BinaryOperator 0x130142648 <line:39:6, col:16> '<dependent type>' contains-errors '='
        |       |   |-UnaryOperator 0x130142610 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
        |       |   | `-ImplicitCastExpr 0x1301425f8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        |       |   |   `-RecoveryExpr 0x130142540 <col:7> '<dependent type>' contains-errors lvalue
        |       |   `-RecoveryExpr 0x130142628 <col:16> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130142668 <line:40:6>
        |       |-CaseStmt 0x1301426a0 <line:41:5, line:42:16>
        |       | |-ConstantExpr 0x130142688 <line:41:10> 'int'
        |       | | `-CharacterLiteral 0x130142670 <col:10> 'int' 103
        |       | `-BinaryOperator 0x1301427d0 <line:42:6, col:16> '<dependent type>' contains-errors '='
        |       |   |-UnaryOperator 0x130142798 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
        |       |   | `-ImplicitCastExpr 0x130142780 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        |       |   |   `-RecoveryExpr 0x1301426c8 <col:7> '<dependent type>' contains-errors lvalue
        |       |   `-RecoveryExpr 0x1301427b0 <col:16> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x1301427f0 <line:43:6>
        |       |-CaseStmt 0x130142e30 <line:44:5, line:45:16>
        |       | |-ConstantExpr 0x130142e18 <line:44:10> 'int'
        |       | | `-CharacterLiteral 0x130142e00 <col:10> 'int' 99
        |       | `-BinaryOperator 0x130142f60 <line:45:6, col:16> '<dependent type>' contains-errors '='
        |       |   |-UnaryOperator 0x130142f28 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
        |       |   | `-ImplicitCastExpr 0x130142f10 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        |       |   |   `-RecoveryExpr 0x130142e58 <col:7> '<dependent type>' contains-errors lvalue
        |       |   `-RecoveryExpr 0x130142f40 <col:16> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130142f80 <line:46:6>
        |       |-CaseStmt 0x130142fb8 <line:47:5, line:48:16>
        |       | |-ConstantExpr 0x130142fa0 <line:47:10> 'int'
        |       | | `-CharacterLiteral 0x130142f88 <col:10> 'int' 114
        |       | `-BinaryOperator 0x1301430e8 <line:48:6, col:16> '<dependent type>' contains-errors '='
        |       |   |-UnaryOperator 0x1301430b0 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
        |       |   | `-ImplicitCastExpr 0x130143098 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        |       |   |   `-RecoveryExpr 0x130142fe0 <col:7> '<dependent type>' contains-errors lvalue
        |       |   `-RecoveryExpr 0x1301430c8 <col:16> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130143108 <line:49:6>
        |       |-CaseStmt 0x130143140 <line:50:5, line:51:16>
        |       | |-ConstantExpr 0x130143128 <line:50:10> 'int'
        |       | | `-CharacterLiteral 0x130143110 <col:10> 'int' 122
        |       | `-BinaryOperator 0x130143270 <line:51:6, col:16> '<dependent type>' contains-errors '='
        |       |   |-UnaryOperator 0x130143238 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
        |       |   | `-ImplicitCastExpr 0x130143220 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        |       |   |   `-RecoveryExpr 0x130143168 <col:7> '<dependent type>' contains-errors lvalue
        |       |   `-RecoveryExpr 0x130143250 <col:16> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130143290 <line:52:6>
        |       |-CaseStmt 0x1301432c8 <line:53:5, line:54:16>
        |       | |-ConstantExpr 0x1301432b0 <line:53:10> 'int'
        |       | | `-CharacterLiteral 0x130143298 <col:10> 'int' 98
        |       | `-BinaryOperator 0x1301433f8 <line:54:6, col:16> '<dependent type>' contains-errors '='
        |       |   |-UnaryOperator 0x1301433c0 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
        |       |   | `-ImplicitCastExpr 0x1301433a8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        |       |   |   `-RecoveryExpr 0x1301432f0 <col:7> '<dependent type>' contains-errors lvalue
        |       |   `-RecoveryExpr 0x1301433d8 <col:16> '<dependent type>' contains-errors lvalue
        |       |-BreakStmt 0x130143418 <line:55:6>
        |       |-CaseStmt 0x130143450 <line:56:5, <invalid sloc>>
        |       | |-ConstantExpr 0x130143438 <col:10> 'int'
        |       | | `-CharacterLiteral 0x130143420 <col:10> 'int' 100
        |       | `-NullStmt 0x1301434c8 <<invalid sloc>>
        |       |-BreakStmt 0x1301434d0 <line:58:6>
        |       |-CaseStmt 0x130143508 <line:59:5, line:60:32>
        |       | |-ConstantExpr 0x1301434f0 <line:59:10> 'int'
        |       | | `-CharacterLiteral 0x1301434d8 <col:10> 'int' 101
        |       | `-IfStmt 0x130143600 <line:60:6, col:32>
        |       |   |-RecoveryExpr 0x130143550 <col:10, col:18> '_Bool' contains-errors
        |       |   `-BinaryOperator 0x1301435e0 <col:24, col:32> 'int' '='
        |       |     |-UnaryOperator 0x1301435a8 <col:24, col:25> 'int' lvalue prefix '*' cannot overflow
        |       |     | `-ImplicitCastExpr 0x130143590 <col:25> 'int *' <LValueToRValue>
        |       |     |   `-DeclRefExpr 0x130143570 <col:25> 'int *' lvalue ParmVar 0x130128360 'eval' 'int *'
        |       |     `-IntegerLiteral 0x1301435c0 <col:32> 'int' 1
        |       |-BreakStmt 0x130143620 <line:61:6>
        |       `-DefaultStmt 0x130143630 <line:62:5, line:63:6>
        |         `-BreakStmt 0x130143628 <col:6>
        `-IfStmt 0x130143888 <line:66:3, col:32>
          |-RecoveryExpr 0x1301437c8 <col:7, col:17> '_Bool' contains-errors
          `-CompoundAssignOperator 0x130143858 <col:23, col:32> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
            |-UnaryOperator 0x130143820 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow
            | `-ImplicitCastExpr 0x130143808 <col:24> '<dependent type>' contains-errors <LValueToRValue>
            |   `-RecoveryExpr 0x1301437e8 <col:24> '<dependent type>' contains-errors lvalue
            `-DeclRefExpr 0x130143838 <col:32> 'int' lvalue Var 0x130128688 'optm' 'int'
