TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x137126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137126000 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x137126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x137126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x137126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x1371263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x137126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x1371264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x137126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x137126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x1371265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x137126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1371266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x137126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x137126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1371267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x137126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1371268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x137126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x137126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1371269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x137126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x137126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x137126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x137126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x137126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x137126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x137126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x137126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1371278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1371279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x137127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x137127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x137127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x137127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x137127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x137127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x137127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x137127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x137127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x137127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x137128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
`-FunctionDecl 0x137128498 <dataset_diviso_filec/func24819_vuln.c:1:1, line:62:1> line:1:1 ins_compl_add_infercase 'int (char *, int, int, char *, int, int)'
  |-ParmVarDecl 0x1371280f0 <line:2:5, col:13> col:13 used str_arg 'char *'
  |-ParmVarDecl 0x137128170 <line:3:5, col:10> col:10 used len 'int'
  |-ParmVarDecl 0x1371281f0 <line:4:5, col:10> col:10 used icase 'int'
  |-ParmVarDecl 0x137128270 <line:5:5, col:13> col:13 used fname 'char *'
  |-ParmVarDecl 0x1371282f0 <line:6:5, col:10> col:10 used dir 'int'
  |-ParmVarDecl 0x137128370 <line:7:5, col:10> col:10 used cont_s_ipos 'int'
  `-CompoundStmt 0x137809280 <line:8:1, line:62:1>
    |-DeclStmt 0x137128670 <line:9:5, col:26>
    | `-VarDecl 0x1371285d0 <col:5, col:19> col:13 used str 'char *' cinit
    |   `-ImplicitCastExpr 0x137128658 <col:19> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x137128638 <col:19> 'char *' lvalue ParmVar 0x1371280f0 'str_arg' 'char *'
    |-DeclStmt 0x137128708 <line:10:5, col:14>
    | `-VarDecl 0x1371286a0 <col:5, col:13> col:13 used p 'char *'
    |-DeclStmt 0x1371287a0 <line:11:5, col:20>
    | `-VarDecl 0x137128738 <col:5, col:10> col:10 used actual_len 'int'
    |-DeclStmt 0x137140a68 <line:12:5, col:29>
    | `-VarDecl 0x137140a00 <col:5, col:10> col:10 used actual_compl_length 'int'
    |-DeclStmt 0x137140b00 <line:13:5, col:17>
    | `-VarDecl 0x137140a98 <col:5, col:10> col:10 used min_len 'int'
    |-DeclStmt 0x137140bb8 <line:14:5, col:19>
    | `-VarDecl 0x137140b30 <col:5, col:18> col:10 used flags 'int' cinit
    |   `-IntegerLiteral 0x137140b98 <col:18> 'int' 0
    |-IfStmt 0x137808ea0 <line:16:5, line:55:5>
    | |-BinaryOperator 0x137140de0 <line:16:9, col:42> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x137140d88 <col:9, col:25> 'int' contains-errors '&&'
    | | | |-RecoveryExpr 0x137140d00 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-CXXDependentScopeMemberExpr 0x137140d40 <col:17, col:25> '<dependent type>' contains-errors lvalue ->b_p_inf
    | | |   `-RecoveryExpr 0x137140d20 <col:17> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x137140dc0 <col:36, col:42> 'int' '>'
    | |   |-ImplicitCastExpr 0x137140da8 <col:36> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x137140c68 <col:36> 'int' lvalue ParmVar 0x137128170 'len' 'int'
    | |   `-IntegerLiteral 0x137140c88 <col:42> 'int' 0
    | `-CompoundStmt 0x137808e70 <line:17:5, line:55:5>
    |   |-IfStmt 0x137141330 <line:21:2, line:32:19> has_else
    |   | |-RecoveryExpr 0x137140e18 <line:21:6> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x137141290 <line:22:2, line:30:2>
    |   | | |-BinaryOperator 0x137140e90 <line:23:6, col:10> 'char *' '='
    |   | | | |-DeclRefExpr 0x137140e38 <col:6> 'char *' lvalue Var 0x1371286a0 'p' 'char *'
    |   | | | `-ImplicitCastExpr 0x137140e78 <col:10> 'char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x137140e58 <col:10> 'char *' lvalue Var 0x1371285d0 'str' 'char *'
    |   | | |-BinaryOperator 0x137140ef0 <line:24:6, col:19> 'int' '='
    |   | | | |-DeclRefExpr 0x137140eb0 <col:6> 'int' lvalue Var 0x137128738 'actual_len' 'int'
    |   | | | `-IntegerLiteral 0x137140ed0 <col:19> 'int' 0
    |   | | `-WhileStmt 0x137141270 <line:25:6, line:29:6>
    |   | |   |-BinaryOperator 0x137141018 <line:25:13, col:19> 'int' contains-errors '!='
    |   | |   | |-UnaryOperator 0x137140fe0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
    |   | |   | | `-ImplicitCastExpr 0x137140fc8 <col:14> 'char *' <LValueToRValue>
    |   | |   | |   `-DeclRefExpr 0x137140f10 <col:14> 'char *' lvalue Var 0x1371286a0 'p' 'char *'
    |   | |   | `-RecoveryExpr 0x137140ff8 <col:19> '<dependent type>' contains-errors lvalue
    |   | |   `-CompoundStmt 0x137141250 <line:26:6, line:29:6>
    |   | |     |-CallExpr 0x1371411d8 <line:27:3, col:15> 'int'
    |   | |     | |-ImplicitCastExpr 0x1371411c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | | `-DeclRefExpr 0x137141150 <col:3> 'int ()' Function 0x137141098 'MB_PTR_ADV' 'int ()'
    |   | |     | `-ImplicitCastExpr 0x137141200 <col:14> 'char *' <LValueToRValue>
    |   | |     |   `-DeclRefExpr 0x137141170 <col:14> 'char *' lvalue Var 0x1371286a0 'p' 'char *'
    |   | |     `-UnaryOperator 0x137141238 <line:28:3, col:5> 'int' prefix '++'
    |   | |       `-DeclRefExpr 0x137141218 <col:5> 'int' lvalue Var 0x137128738 'actual_len' 'int'
    |   | `-BinaryOperator 0x137141310 <line:32:6, col:19> 'int' '='
    |   |   |-DeclRefExpr 0x1371412b8 <col:6> 'int' lvalue Var 0x137128738 'actual_len' 'int'
    |   |   `-ImplicitCastExpr 0x1371412f8 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1371412d8 <col:19> 'int' lvalue ParmVar 0x137128170 'len' 'int'
    |   |-IfStmt 0x137141788 <line:35:2, line:46:28> has_else
    |   | |-RecoveryExpr 0x137141378 <line:35:6> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x1371416c8 <line:36:2, line:44:2>
    |   | | |-BinaryOperator 0x137141410 <line:37:6, col:10> 'char *' contains-errors '='
    |   | | | |-DeclRefExpr 0x137141398 <col:6> 'char *' lvalue Var 0x1371286a0 'p' 'char *'
    |   | | | `-RecoveryExpr 0x1371413f0 <col:10> '<dependent type>' contains-errors lvalue
    |   | | |-BinaryOperator 0x137141470 <line:38:6, col:28> 'int' '='
    |   | | | |-DeclRefExpr 0x137141430 <col:6> 'int' lvalue Var 0x137140a00 'actual_compl_length' 'int'
    |   | | | `-IntegerLiteral 0x137141450 <col:28> 'int' 0
    |   | | `-WhileStmt 0x1371416a8 <line:39:6, line:43:6>
    |   | |   |-BinaryOperator 0x137141598 <line:39:13, col:19> 'int' contains-errors '!='
    |   | |   | |-UnaryOperator 0x137141560 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
    |   | |   | | `-ImplicitCastExpr 0x137141548 <col:14> 'char *' <LValueToRValue>
    |   | |   | |   `-DeclRefExpr 0x137141490 <col:14> 'char *' lvalue Var 0x1371286a0 'p' 'char *'
    |   | |   | `-RecoveryExpr 0x137141578 <col:19> '<dependent type>' contains-errors lvalue
    |   | |   `-CompoundStmt 0x137141688 <line:40:6, line:43:6>
    |   | |     |-CallExpr 0x137141610 <line:41:3, col:15> 'int'
    |   | |     | |-ImplicitCastExpr 0x1371415f8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | | `-DeclRefExpr 0x1371415b8 <col:3> 'int ()' Function 0x137141098 'MB_PTR_ADV' 'int ()'
    |   | |     | `-ImplicitCastExpr 0x137141638 <col:14> 'char *' <LValueToRValue>
    |   | |     |   `-DeclRefExpr 0x1371415d8 <col:14> 'char *' lvalue Var 0x1371286a0 'p' 'char *'
    |   | |     `-UnaryOperator 0x137141670 <line:42:3, col:5> 'int' prefix '++'
    |   | |       `-DeclRefExpr 0x137141650 <col:5> 'int' lvalue Var 0x137140a00 'actual_compl_length' 'int'
    |   | `-BinaryOperator 0x137141768 <line:46:6, col:28> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x1371416f0 <col:6> 'int' lvalue Var 0x137140a00 'actual_compl_length' 'int'
    |   |   `-RecoveryExpr 0x137141748 <col:28> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x137141908 <line:50:2, line:51:24> 'int' '='
    |   | |-DeclRefExpr 0x1371417b8 <line:50:2> 'int' lvalue Var 0x137140a98 'min_len' 'int'
    |   | `-ConditionalOperator 0x1371418d8 <col:12, line:51:24> 'int'
    |   |   |-BinaryOperator 0x137141848 <line:50:12, col:25> 'int' '<'
    |   |   | |-ImplicitCastExpr 0x137141818 <col:12> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x1371417d8 <col:12> 'int' lvalue Var 0x137128738 'actual_len' 'int'
    |   |   | `-ImplicitCastExpr 0x137141830 <col:25> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1371417f8 <col:25> 'int' lvalue Var 0x137140a00 'actual_compl_length' 'int'
    |   |   |-ImplicitCastExpr 0x1371418a8 <line:51:11> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x137141868 <col:11> 'int' lvalue Var 0x137128738 'actual_len' 'int'
    |   |   `-ImplicitCastExpr 0x1371418c0 <col:24> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x137141888 <col:24> 'int' lvalue Var 0x137140a00 'actual_compl_length' 'int'
    |   `-BinaryOperator 0x137808e50 <line:53:2, line:54:16> 'char *' '='
    |     |-DeclRefExpr 0x137141928 <line:53:2> 'char *' lvalue Var 0x1371285d0 'str' 'char *'
    |     `-ImplicitCastExpr 0x137808a10 <col:8, line:54:16> 'char *' <IntegralToPointer>
    |       `-CallExpr 0x137808970 <line:53:8, line:54:16> 'int'
    |         |-ImplicitCastExpr 0x137808958 <line:53:8> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x1378088b8 <col:8> 'int ()' Function 0x137808800 'ins_compl_infercase_gettext' 'int ()'
    |         |-ImplicitCastExpr 0x1378089b0 <col:36> 'char *' <LValueToRValue>
    |         | `-DeclRefExpr 0x1378088d8 <col:36> 'char *' lvalue Var 0x1371285d0 'str' 'char *'
    |         |-ImplicitCastExpr 0x1378089c8 <col:41> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x1378088f8 <col:41> 'int' lvalue Var 0x137128738 'actual_len' 'int'
    |         |-ImplicitCastExpr 0x1378089e0 <col:53> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x137808918 <col:53> 'int' lvalue Var 0x137140a00 'actual_compl_length' 'int'
    |         `-ImplicitCastExpr 0x1378089f8 <line:54:9> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x137808938 <col:9> 'int' lvalue Var 0x137140a98 'min_len' 'int'
    |-IfStmt 0x137808fb0 <line:56:5, line:57:11>
    | |-ImplicitCastExpr 0x137808ee0 <line:56:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x137808ec0 <col:9> 'int' lvalue ParmVar 0x137128370 'cont_s_ipos' 'int'
    | `-CompoundAssignOperator 0x137808f80 <line:57:2, col:11> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x137808ef8 <col:2> 'int' lvalue Var 0x137140b30 'flags' 'int'
    |   `-RecoveryExpr 0x137808f60 <col:11> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x1378090c0 <line:58:5, line:59:11>
      |-ImplicitCastExpr 0x137808ff0 <line:58:9> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x137808fd0 <col:9> 'int' lvalue ParmVar 0x1371281f0 'icase' 'int'
      `-CompoundAssignOperator 0x137809090 <line:59:2, col:11> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |-DeclRefExpr 0x137809008 <col:2> 'int' lvalue Var 0x137140b30 'flags' 'int'
        `-RecoveryExpr 0x137809070 <col:11> '<dependent type>' contains-errors lvalue
