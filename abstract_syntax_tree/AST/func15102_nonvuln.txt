TranslationUnitDecl 0x134024208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1340250b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1340247d0 '__int128'
|-TypedefDecl 0x134025128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1340247f0 'unsigned __int128'
|-TypedefDecl 0x135010230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135010000 'struct __NSConstantString_tag'
|   `-Record 0x134025180 '__NSConstantString_tag'
|-TypedefDecl 0x135010298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134024990 '__SVInt8_t'
|-TypedefDecl 0x135010300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1340249b0 '__SVInt16_t'
|-TypedefDecl 0x135010368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1340249d0 '__SVInt32_t'
|-TypedefDecl 0x1350103d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1340249f0 '__SVInt64_t'
|-TypedefDecl 0x135010438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134024a10 '__SVUint8_t'
|-TypedefDecl 0x1350104a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134024a30 '__SVUint16_t'
|-TypedefDecl 0x135010508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134024a50 '__SVUint32_t'
|-TypedefDecl 0x135010570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134024a70 '__SVUint64_t'
|-TypedefDecl 0x1350105d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134024a90 '__SVFloat16_t'
|-TypedefDecl 0x135010640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134024ab0 '__SVFloat32_t'
|-TypedefDecl 0x1350106a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134024ad0 '__SVFloat64_t'
|-TypedefDecl 0x135010710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134024af0 '__SVBfloat16_t'
|-TypedefDecl 0x135010778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134024b10 '__clang_svint8x2_t'
|-TypedefDecl 0x1350107e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134024b30 '__clang_svint16x2_t'
|-TypedefDecl 0x135010848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134024b50 '__clang_svint32x2_t'
|-TypedefDecl 0x1350108b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134024b70 '__clang_svint64x2_t'
|-TypedefDecl 0x135010918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134024b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135010980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134024bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1350109e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134024bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135010a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134024bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x135010ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134024c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135010b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134024c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135010b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134024c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x135010bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134024c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135010c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134024c90 '__clang_svint8x3_t'
|-TypedefDecl 0x135010cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x134024cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x135010d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x134024cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x135010d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x134024cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x135010df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134024d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x135010e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134024d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x135010ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134024d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x135010f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134024d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x135010f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134024d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135011800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x134024db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135011868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x134024dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1350118d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x134024df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135011938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134024e10 '__clang_svint8x4_t'
|-TypedefDecl 0x1350119a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134024e30 '__clang_svint16x4_t'
|-TypedefDecl 0x135011a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134024e50 '__clang_svint32x4_t'
|-TypedefDecl 0x135011a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134024e70 '__clang_svint64x4_t'
|-TypedefDecl 0x135011ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134024e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x135011b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x134024eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x135011ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x134024ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135011c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x134024ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135011c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134024f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x135011ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134024f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135011d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134024f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x135011db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134024f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135011e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134024f90 '__SVBool_t'
|-TypedefDecl 0x135011e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x134024fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x135011ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x134024fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x135011f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x134024ff0 '__SVCount_t'
|-TypedefDecl 0x135011ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x135011fb0 'char *'
|   `-BuiltinType 0x1340242b0 'char'
|-TypedefDecl 0x135012068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x135011fb0 'char *'
|   `-BuiltinType 0x1340242b0 'char'
`-FunctionDecl 0x135012550 <dataset_diviso_filec/func15102_nonvuln.c:1:1, line:26:1> line:1:13 invalid GenerateCLAHEHistogram 'void (const int *, const int *, const int, const unsigned short *, const unsigned short *, int *)' static
  |-ParmVarDecl 0x1350120f0 <col:36, col:57> col:57 invalid clahe_info 'const int *'
  |-ParmVarDecl 0x135012170 <line:2:3, col:24> col:24 invalid tile_info 'const int *'
  |-ParmVarDecl 0x1350121f0 <col:34, col:47> col:47 invalid number_bins 'const int'
  |-ParmVarDecl 0x1350122a8 <line:3:3, col:25> col:25 used lut 'const unsigned short *'
  |-ParmVarDecl 0x135012328 <col:29, col:51> col:51 used pixels 'const unsigned short *'
  |-ParmVarDecl 0x1350123d8 <col:58, col:66> col:66 referenced invalid histogram 'int *'
  `-CompoundStmt 0x133831780 <line:4:1, line:26:1>
    |-DeclStmt 0x1350126a8 <line:5:3, line:6:7>
    | `-VarDecl 0x135012640 <line:5:3, line:6:6> col:6 used p 'const unsigned short *' register
    |-DeclStmt 0x135012740 <line:8:3, line:9:6>
    | `-VarDecl 0x1350126d8 <line:8:3, line:9:5> col:5 invalid i 'int' register
    |-ForStmt 0x133830fc0 <line:12:3, line:13:18>
    | |-BinaryOperator 0x135012798 <line:12:8, col:10> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x135012758 <col:8> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x135012778 <col:10> 'int' 0
    | |-<<<NULL>>>
    | |-RecoveryExpr 0x133830e60 <col:13, col:25> '<dependent type>' contains-errors lvalue
    | | |-RecoveryExpr 0x1350127b8 <col:13> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x133830e40 <col:17, col:25> '<overloaded function type>' lvalue
    | |   `-UnresolvedLookupExpr 0x133830e00 <col:18> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    | |-UnaryOperator 0x133830eb0 <col:40, col:41> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x133830e90 <col:40> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x133830fa0 <line:13:5, col:18> '<dependent type>' contains-errors '='
    |   |-ArraySubscriptExpr 0x133830f60 <col:5, col:16> '<dependent type>' contains-errors lvalue
    |   | |-ImplicitCastExpr 0x133830f30 <col:5> '<dependent type>' contains-errors <LValueToRValue>
    |   | | `-RecoveryExpr 0x133830ee8 <col:5> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x133830ec8 <col:5> 'int *' lvalue ParmVar 0x1350123d8 'histogram' 'int *'
    |   | `-ImplicitCastExpr 0x133830f48 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x133830f10 <col:15> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x133830f80 <col:18> 'long' 0
    |-BinaryOperator 0x133831050 <line:14:3, col:5> 'const unsigned short *' '='
    | |-DeclRefExpr 0x133830ff8 <col:3> 'const unsigned short *' lvalue Var 0x135012640 'p' 'const unsigned short *'
    | `-ImplicitCastExpr 0x133831038 <col:5> 'const unsigned short *' <LValueToRValue>
    |   `-DeclRefExpr 0x133831018 <col:5> 'const unsigned short *' lvalue ParmVar 0x135012328 'pixels' 'const unsigned short *'
    `-ForStmt 0x133831748 <line:15:3, line:25:3>
      |-BinaryOperator 0x1338310b0 <line:15:8, col:10> '<dependent type>' contains-errors '='
      | |-RecoveryExpr 0x133831070 <col:8> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x133831090 <col:10> 'int' 0
      |-<<<NULL>>>
      |-RecoveryExpr 0x133831168 <col:13, col:25> '<dependent type>' contains-errors lvalue
      | |-RecoveryExpr 0x1338310d0 <col:13> '<dependent type>' contains-errors lvalue
      | `-ParenExpr 0x133831148 <col:17, col:25> '<overloaded function type>' lvalue
      |   `-UnresolvedLookupExpr 0x133831108 <col:18> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
      |-UnaryOperator 0x1338311b8 <col:46, col:47> '<dependent type>' contains-errors postfix '++' cannot overflow
      | `-RecoveryExpr 0x133831198 <col:46> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x133831710 <line:16:3, line:25:3>
        |-DeclStmt 0x133831250 <line:17:5, line:18:9>
        | `-VarDecl 0x1338311e8 <line:17:5, line:18:8> col:8 used q 'const unsigned short *'
        |-BinaryOperator 0x133831330 <line:20:5, col:20> 'const unsigned short *' contains-errors '='
        | |-DeclRefExpr 0x133831268 <col:5> 'const unsigned short *' lvalue Var 0x1338311e8 'q' 'const unsigned short *'
        | `-BinaryOperator 0x133831310 <col:7, col:20> '<dependent type>' contains-errors '+'
        |   |-DeclRefExpr 0x133831288 <col:7> 'const unsigned short *' lvalue Var 0x135012640 'p' 'const unsigned short *'
        |   `-CXXDependentScopeMemberExpr 0x1338312c8 <col:9, col:20> '<dependent type>' contains-errors lvalue ->width
        |     `-RecoveryExpr 0x1338312a8 <col:9> '<dependent type>' contains-errors lvalue
        |-WhileStmt 0x133831550 <line:21:5, line:22:27>
        | |-BinaryOperator 0x1338313c0 <line:21:12, col:16> 'int' '<'
        | | |-ImplicitCastExpr 0x133831390 <col:12> 'const unsigned short *' <LValueToRValue>
        | | | `-DeclRefExpr 0x133831350 <col:12> 'const unsigned short *' lvalue Var 0x135012640 'p' 'const unsigned short *'
        | | `-ImplicitCastExpr 0x1338313a8 <col:16> 'const unsigned short *' <LValueToRValue>
        | |   `-DeclRefExpr 0x133831370 <col:16> 'const unsigned short *' lvalue Var 0x1338311e8 'q' 'const unsigned short *'
        | `-UnaryOperator 0x133831538 <line:22:7, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
        |   `-ArraySubscriptExpr 0x133831518 <col:7, col:26> '<dependent type>' contains-errors lvalue
        |     |-ImplicitCastExpr 0x1338314e8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        |     | `-RecoveryExpr 0x133831400 <col:7> '<dependent type>' contains-errors lvalue
        |     |   `-DeclRefExpr 0x1338313e0 <col:7> 'int *' lvalue ParmVar 0x1350123d8 'histogram' 'int *'
        |     `-ImplicitCastExpr 0x133831500 <col:17, col:25> 'unsigned short' <LValueToRValue>
        |       `-ArraySubscriptExpr 0x1338314c8 <col:17, col:25> 'const unsigned short' lvalue
        |         |-ImplicitCastExpr 0x133831498 <col:17> 'const unsigned short *' <LValueToRValue>
        |         | `-DeclRefExpr 0x133831428 <col:17> 'const unsigned short *' lvalue ParmVar 0x1350122a8 'lut' 'const unsigned short *'
        |         `-ImplicitCastExpr 0x1338314b0 <col:21, col:23> 'unsigned short' <LValueToRValue>
        |           `-UnaryOperator 0x133831480 <col:21, col:23> 'const unsigned short' lvalue prefix '*' cannot overflow
        |             `-UnaryOperator 0x133831468 <col:22, col:23> 'const unsigned short *' postfix '++'
        |               `-DeclRefExpr 0x133831448 <col:22> 'const unsigned short *' lvalue Var 0x135012640 'p' 'const unsigned short *'
        |-CompoundAssignOperator 0x1338315f8 <line:23:5, col:20> 'const unsigned short *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        | |-DeclRefExpr 0x133831570 <col:5> 'const unsigned short *' lvalue Var 0x1338311e8 'q' 'const unsigned short *'
        | `-CXXDependentScopeMemberExpr 0x1338315b0 <col:8, col:20> '<dependent type>' contains-errors lvalue ->width
        |   `-RecoveryExpr 0x133831590 <col:8> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x1338316f0 <line:24:5, col:20> 'const unsigned short *' contains-errors '='
          |-DeclRefExpr 0x133831628 <col:5> 'const unsigned short *' lvalue Var 0x135012640 'p' 'const unsigned short *'
          `-BinaryOperator 0x1338316d0 <col:7, col:20> '<dependent type>' contains-errors '-'
            |-DeclRefExpr 0x133831648 <col:7> 'const unsigned short *' lvalue Var 0x1338311e8 'q' 'const unsigned short *'
            `-CXXDependentScopeMemberExpr 0x133831688 <col:9, col:20> '<dependent type>' contains-errors lvalue ->width
              `-RecoveryExpr 0x133831668 <col:9> '<dependent type>' contains-errors lvalue
