TranslationUnitDecl 0x145055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1450564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145055bd0 '__int128'
|-TypedefDecl 0x145056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145055bf0 'unsigned __int128'
|-TypedefDecl 0x145126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x145126000 'struct __NSConstantString_tag'
|   `-Record 0x145056580 '__NSConstantString_tag'
|-TypedefDecl 0x145126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145055d90 '__SVInt8_t'
|-TypedefDecl 0x145126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145055db0 '__SVInt16_t'
|-TypedefDecl 0x145126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145055dd0 '__SVInt32_t'
|-TypedefDecl 0x1451263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145055df0 '__SVInt64_t'
|-TypedefDecl 0x145126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145055e10 '__SVUint8_t'
|-TypedefDecl 0x1451264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145055e30 '__SVUint16_t'
|-TypedefDecl 0x145126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145055e50 '__SVUint32_t'
|-TypedefDecl 0x145126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145055e70 '__SVUint64_t'
|-TypedefDecl 0x1451265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145055e90 '__SVFloat16_t'
|-TypedefDecl 0x145126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1451266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145055ed0 '__SVFloat64_t'
|-TypedefDecl 0x145126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x145126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1451267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x145126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1451268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x145126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x145126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1451269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x145126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x145126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x145126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x145126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x145126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x145126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145056090 '__clang_svint8x3_t'
|-TypedefDecl 0x145126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1450560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x145126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1450560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x145126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1450560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x145126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x145126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x145126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x145126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x145126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x145127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1450561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x145127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1450561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1451278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1450561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x145127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1451279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145056230 '__clang_svint16x4_t'
|-TypedefDecl 0x145127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145056250 '__clang_svint32x4_t'
|-TypedefDecl 0x145127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145056270 '__clang_svint64x4_t'
|-TypedefDecl 0x145127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x145127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1450562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x145127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1450562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x145127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1450562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x145127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x145127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x145127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x145127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x145127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145056390 '__SVBool_t'
|-TypedefDecl 0x145127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1450563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x145127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1450563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x145127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1450563f0 '__SVCount_t'
|-TypedefDecl 0x145127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x145127fb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-TypedefDecl 0x145128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x145127fb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-FunctionDecl 0x145128238 <dataset_diviso_filec/func22329_vuln.c:1:1, line:69:1> line:1:1 vba_read_project_strings 'int (int, int)'
| |-ParmVarDecl 0x1451280d8 <col:26, col:30> col:30 used fd 'int'
| |-ParmVarDecl 0x145128158 <col:34, col:38> col:38 used big_endian 'int'
| `-CompoundStmt 0x145146300 <line:2:1, line:69:1>
|   |-DeclStmt 0x145128440 <line:3:2, col:27>
|   | `-VarDecl 0x145128388 <col:2, col:23> col:17 used buf 'unsigned char *' cinit
|   |   `-RecoveryExpr 0x145128420 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1451284f8 <line:5:2, col:13>
|   | `-VarDecl 0x145128470 <col:2, col:12> col:6 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1451284d8 <col:12> 'int' 0
|   |-ForStmt 0x145146160 <line:7:2, line:65:2>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1451460f0 <line:7:10, line:65:2>
|   |   |-DeclStmt 0x145128590 <line:10:3, col:13>
|   |   | `-VarDecl 0x145128528 <col:3, col:9> col:9 used name 'char *'
|   |   |-IfStmt 0x145141858 <line:12:3, line:13:4>
|   |   | |-UnaryOperator 0x145141838 <line:12:6, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-CallExpr 0x145141800 <col:7, col:42> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x1451286c0 <col:7> 'int ()' Function 0x145128608 'read_uint16' 'int ()'
|   |   | |   |-DeclRefExpr 0x1451286e0 <col:19> 'int' lvalue ParmVar 0x1451280d8 'fd' 'int'
|   |   | |   |-UnaryOperator 0x1451287c0 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | |   | `-RecoveryExpr 0x1451287a0 <col:24> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x145128730 <col:32> 'int' lvalue ParmVar 0x145128158 'big_endian' 'int'
|   |   | `-BreakStmt 0x145141850 <line:13:4>
|   |   |-IfStmt 0x145141b38 <line:15:3, line:18:3>
|   |   | |-BinaryOperator 0x1451418f0 <line:15:7, col:16> 'int' contains-errors '<'
|   |   | | |-RecoveryExpr 0x1451418d0 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | `-IntegerLiteral 0x145141890 <col:16> 'int' 6
|   |   | `-CompoundStmt 0x145141b18 <col:19, line:18:3>
|   |   |   |-CallExpr 0x145141ad8 <line:16:4, col:26> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x1451419f0 <col:4> 'int ()' Function 0x145141938 'lseek' 'int ()'
|   |   |   | |-DeclRefExpr 0x145141a10 <col:10> 'int' lvalue ParmVar 0x1451280d8 'fd' 'int'
|   |   |   | |-UnaryOperator 0x145141a50 <col:14, col:15> 'int' prefix '-'
|   |   |   | | `-IntegerLiteral 0x145141a30 <col:15> 'int' 2
|   |   |   | `-RecoveryExpr 0x145141ab8 <col:18> '<dependent type>' contains-errors lvalue
|   |   |   `-BreakStmt 0x145141b10 <line:17:4>
|   |   |-IfStmt 0x145142708 <line:19:3, line:28:3>
|   |   | |-BinaryOperator 0x145141be8 <line:19:6, col:15> 'int' contains-errors '>'
|   |   | | |-RecoveryExpr 0x145141ba8 <col:6> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x145141bc8 <col:15> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x1451426e0 <col:23, line:28:3>
|   |   |   |-DeclStmt 0x145141e08 <line:20:4, col:69>
|   |   |   | `-VarDecl 0x145141c20 <col:4, col:19> col:19 used newbuf 'unsigned char *'
|   |   |   |-IfStmt 0x145142630 <line:21:4, line:25:4>
|   |   |   | |-BinaryOperator 0x145141e98 <line:21:7, col:17> 'int' contains-errors '=='
|   |   |   | | |-DeclRefExpr 0x145141e20 <col:7> 'unsigned char *' lvalue Var 0x145141c20 'newbuf' 'unsigned char *'
|   |   |   | | `-RecoveryExpr 0x145141e78 <col:17> '<dependent type>' contains-errors lvalue
|   |   |   | `-CompoundStmt 0x145142610 <col:23, line:25:4>
|   |   |   |   |-IfStmt 0x1451425c0 <line:22:5, line:23:14>
|   |   |   |   | |-ImplicitCastExpr 0x145141ed8 <line:22:8> 'unsigned char *' contains-errors <LValueToRValue>
|   |   |   |   | | `-DeclRefExpr 0x145141eb8 <col:8> 'unsigned char *' contains-errors lvalue Var 0x145128388 'buf' 'unsigned char *'
|   |   |   |   | `-CallExpr 0x145142568 <line:23:6, col:14> 'void' contains-errors
|   |   |   |   |   |-ImplicitCastExpr 0x145142550 <col:6> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   |   |   | `-DeclRefExpr 0x1451424c0 <col:6> 'void (void *)' Function 0x145142350 'free' 'void (void *)'
|   |   |   |   |   `-ImplicitCastExpr 0x1451425a8 <col:11> 'void *' contains-errors <BitCast>
|   |   |   |   |     `-ImplicitCastExpr 0x145142590 <col:11> 'unsigned char *' contains-errors <LValueToRValue>
|   |   |   |   |       `-DeclRefExpr 0x1451424e0 <col:11> 'unsigned char *' contains-errors lvalue Var 0x145128388 'buf' 'unsigned char *'
|   |   |   |   `-ReturnStmt 0x145142600 <line:24:5, col:12>
|   |   |   |     `-IntegerLiteral 0x1451425e0 <col:12> 'int' 0
|   |   |   `-BinaryOperator 0x1451426c0 <line:27:4, col:10> 'unsigned char *' contains-errors '='
|   |   |     |-DeclRefExpr 0x145142668 <col:4> 'unsigned char *' contains-errors lvalue Var 0x145128388 'buf' 'unsigned char *'
|   |   |     `-ImplicitCastExpr 0x1451426a8 <col:10> 'unsigned char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x145142688 <col:10> 'unsigned char *' lvalue Var 0x145141c20 'newbuf' 'unsigned char *'
|   |   |-IfStmt 0x145143990 <line:32:3, line:36:3>
|   |   | |-RecoveryExpr 0x145143718 <line:32:6, col:41> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x145143970 <col:49, line:36:3>
|   |   |   |-CallExpr 0x1451438e8 <line:33:4, col:20> 'int'
|   |   |   | |-ImplicitCastExpr 0x1451438d0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x145143818 <col:4> 'int ()' Function 0x145143760 'cli_dbgmsg' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x145143910 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x145143880 <col:15> 'char[4]' lvalue "STR"
|   |   |   `-BreakStmt 0x145143968 <line:35:4>
|   |   |-CallExpr 0x145143bc0 <line:38:3, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x145143ba8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x145143b68 <col:3> 'int ()' Function 0x145143760 'cli_dbgmsg' 'int ()'
|   |   | `-ImplicitCastExpr 0x145143be8 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x145143b88 <col:14> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x145145ab8 <line:40:3, line:47:3>
|   |   | |-RecoveryExpr 0x1451444e8 <line:40:6, line:41:37> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x145145a98 <col:40, line:47:3>
|   |   |   |-IfStmt 0x145145a70 <line:44:4, line:45:14>
|   |   |   | |-ImplicitCastExpr 0x145144588 <line:44:7> 'char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x145144568 <col:7> 'char *' lvalue Var 0x145128528 'name' 'char *'
|   |   |   | `-CallExpr 0x145145a18 <line:45:5, col:14> 'void'
|   |   |   |   |-ImplicitCastExpr 0x145145a00 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x1451445a0 <col:5> 'void (void *)' Function 0x145142350 'free' 'void (void *)'
|   |   |   |   `-ImplicitCastExpr 0x145145a58 <col:10> 'void *' <BitCast>
|   |   |   |     `-ImplicitCastExpr 0x145145a40 <col:10> 'char *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1451445c0 <col:10> 'char *' lvalue Var 0x145128528 'name' 'char *'
|   |   |   `-BreakStmt 0x145145a90 <line:46:4>
|   |   |-CallExpr 0x145145b48 <line:48:3, col:12> 'void'
|   |   | |-ImplicitCastExpr 0x145145b30 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x145145ad8 <col:3> 'void (void *)' Function 0x145142350 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x145145b88 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x145145b70 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x145145af8 <col:8> 'char *' lvalue Var 0x145128528 'name' 'char *'
|   |   |-IfStmt 0x145145d68 <line:50:3, line:54:3>
|   |   | |-RecoveryExpr 0x145145c00 <line:50:6, col:42> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x145145d48 <col:45, line:54:3>
|   |   |   |-IfStmt 0x145145d20 <line:51:4, line:52:13>
|   |   |   | |-ImplicitCastExpr 0x145145c40 <line:51:7> 'unsigned char *' contains-errors <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x145145c20 <col:7> 'unsigned char *' contains-errors lvalue Var 0x145128388 'buf' 'unsigned char *'
|   |   |   | `-CallExpr 0x145145cc8 <line:52:5, col:13> 'void' contains-errors
|   |   |   |   |-ImplicitCastExpr 0x145145cb0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x145145c58 <col:5> 'void (void *)' Function 0x145142350 'free' 'void (void *)'
|   |   |   |   `-ImplicitCastExpr 0x145145d08 <col:10> 'void *' contains-errors <BitCast>
|   |   |   |     `-ImplicitCastExpr 0x145145cf0 <col:10> 'unsigned char *' contains-errors <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x145145c78 <col:10> 'unsigned char *' contains-errors lvalue Var 0x145128388 'buf' 'unsigned char *'
|   |   |   `-BreakStmt 0x145145d40 <line:53:4>
|   |   |-UnaryOperator 0x145145da8 <line:56:3, col:6> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x145145d88 <col:3> 'int' lvalue Var 0x145128470 'ret' 'int'
|   |   |-IfStmt 0x145145eb8 <line:58:3, line:61:3>
|   |   | |-RecoveryExpr 0x145145e00 <line:58:7, col:40> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x145145ea0 <col:43, line:61:3>
|   |   |   `-ContinueStmt 0x145145e98 <line:60:4>
|   |   `-CallExpr 0x1451460b0 <line:64:3, col:23> 'int'
|   |     |-ImplicitCastExpr 0x145146098 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x145146058 <col:3> 'int ()' Function 0x145145fa0 'vba56_test_middle' 'int ()'
|   |     `-ImplicitCastExpr 0x1451460d8 <col:21> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x145146078 <col:21> 'int' lvalue ParmVar 0x1451280d8 'fd' 'int'
|   |-IfStmt 0x145146298 <line:66:2, line:67:11>
|   | |-ImplicitCastExpr 0x1451461b8 <line:66:5> 'unsigned char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x145146198 <col:5> 'unsigned char *' contains-errors lvalue Var 0x145128388 'buf' 'unsigned char *'
|   | `-CallExpr 0x145146240 <line:67:3, col:11> 'void' contains-errors
|   |   |-ImplicitCastExpr 0x145146228 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1451461d0 <col:3> 'void (void *)' Function 0x145142350 'free' 'void (void *)'
|   |   `-ImplicitCastExpr 0x145146280 <col:8> 'void *' contains-errors <BitCast>
|   |     `-ImplicitCastExpr 0x145146268 <col:8> 'unsigned char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x1451461f0 <col:8> 'unsigned char *' contains-errors lvalue Var 0x145128388 'buf' 'unsigned char *'
|   `-ReturnStmt 0x1451462f0 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x1451462d8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1451462b8 <col:9> 'int' lvalue Var 0x145128470 'ret' 'int'
|-FunctionDecl 0x145142350 <line:23:6> col:6 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x145142450 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x1451423f8 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x145143c98 <line:40:25> col:25 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x145143d98 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x145143e00 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x145143e68 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x145143d40 <<invalid sloc>> Implicit 883
`-FunctionDecl 0x145144140 <line:41:7> col:7 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x145144240 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1451442a8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1451441e8 <<invalid sloc>> Implicit 893
