TranslationUnitDecl 0x15a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a055bd0 '__int128'
|-TypedefDecl 0x15a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a055bf0 'unsigned __int128'
|-TypedefDecl 0x15a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a126000 'struct __NSConstantString_tag'
|   `-Record 0x15a056580 '__NSConstantString_tag'
|-TypedefDecl 0x15a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a055d90 '__SVInt8_t'
|-TypedefDecl 0x15a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a055db0 '__SVInt16_t'
|-TypedefDecl 0x15a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a055dd0 '__SVInt32_t'
|-TypedefDecl 0x15a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a055df0 '__SVInt64_t'
|-TypedefDecl 0x15a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a055e10 '__SVUint8_t'
|-TypedefDecl 0x15a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a055e30 '__SVUint16_t'
|-TypedefDecl 0x15a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a055e50 '__SVUint32_t'
|-TypedefDecl 0x15a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a055e70 '__SVUint64_t'
|-TypedefDecl 0x15a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a055e90 '__SVFloat16_t'
|-TypedefDecl 0x15a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a056390 '__SVBool_t'
|-TypedefDecl 0x15a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a0563f0 '__SVCount_t'
|-TypedefDecl 0x15a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a127fb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-TypedefDecl 0x15a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a127fb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-RecordDecl 0x15a1280c0 <dataset_diviso_filec/func1697_vuln.c:1:8, col:15> col:15 struct mm_struct
|-FunctionDecl 0x15a140db8 <col:1, line:50:1> line:1:26 mm_init 'struct mm_struct *(struct mm_struct *, struct task_struct *, struct user_namespace *)' static
| |-ParmVarDecl 0x15a128218 <col:34, col:52> col:52 used mm 'struct mm_struct *'
| |-ParmVarDecl 0x15a140a28 <col:56, col:76> col:76 used p 'struct task_struct *'
| |-ParmVarDecl 0x15a140bf8 <line:2:2, col:25> col:25 used user_ns 'struct user_namespace *'
| `-CompoundStmt 0x15a144b38 <line:3:1, line:50:1>
|   |-BinaryOperator 0x15a140f90 <line:4:2, col:13> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15a140ef8 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15a140ec0 <col:2> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-RecoveryExpr 0x15a140f70 <col:13> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15a141068 <line:5:2, col:14> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15a140fe8 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15a140fb0 <col:2> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-RecoveryExpr 0x15a141048 <col:14> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15a141108 <line:6:2, col:24> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15a1410c0 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15a141088 <col:2> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x15a1410e8 <col:24> 'int' 0
|   |-CallExpr 0x15a1412f8 <line:7:2, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a141240 <col:2> 'int ()' Function 0x15a141188 'atomic_set' 'int ()'
|   | |-UnaryOperator 0x15a1412c0 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x15a141298 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15a141260 <col:14> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x15a1412d8 <col:28> 'int' 1
|   |-CallExpr 0x15a1413e0 <line:8:2, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a141328 <col:2> 'int ()' Function 0x15a141188 'atomic_set' 'int ()'
|   | |-UnaryOperator 0x15a1413a8 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x15a141380 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15a141348 <col:14> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x15a1413c0 <col:28> 'int' 1
|   |-CallExpr 0x15a141588 <line:9:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a1414f0 <col:2> 'int ()' Function 0x15a141438 'init_rwsem' 'int ()'
|   | `-UnaryOperator 0x15a141570 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x15a141548 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15a141510 <col:14> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |-CallExpr 0x15a141728 <line:10:2, col:28> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a141690 <col:2> 'int ()' Function 0x15a1415d8 'INIT_LIST_HEAD' 'int ()'
|   | `-UnaryOperator 0x15a141710 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x15a1416e8 <col:18, col:22> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15a1416b0 <col:18> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |-BinaryOperator 0x15a141808 <line:11:2, col:19> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15a141788 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15a141750 <col:2> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-RecoveryExpr 0x15a1417e8 <col:19> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x15a1419c0 <line:12:2, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a141908 <col:2> 'int ()' Function 0x15a141850 'atomic_long_set' 'int ()'
|   | |-UnaryOperator 0x15a141988 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x15a141960 <col:19, col:23> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15a141928 <col:19> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x15a1419a0 <col:32> 'int' 0
|   |-CallExpr 0x15a142f68 <line:13:2, col:20> 'int'
|   | |-ImplicitCastExpr 0x15a142f50 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15a142ee0 <col:2> 'int ()' Function 0x15a142e28 'mm_nr_pmds_init' 'int ()'
|   | `-ImplicitCastExpr 0x15a142f90 <col:18> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a142f00 <col:18> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |-BinaryOperator 0x15a143028 <line:14:2, col:18> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15a142fe0 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15a142fa8 <col:2> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x15a143008 <col:18> 'int' 0
|   |-BinaryOperator 0x15a1430c8 <line:15:2, col:18> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15a143080 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15a143048 <col:2> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x15a1430a8 <col:18> 'int' 0
|   |-BinaryOperator 0x15a143168 <line:16:2, col:18> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15a143120 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15a1430e8 <col:2> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x15a143148 <col:18> 'int' 0
|   |-CallExpr 0x15a143580 <line:17:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a143428 <col:2> 'void *(void *, int, unsigned long)' Function 0x15a1431d8 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x15a1434a8 <col:9, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x15a143480 <col:10, col:14> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15a143448 <col:10> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | |-IntegerLiteral 0x15a1434c0 <col:24> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x15a143560 <col:27, col:46> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x15a143540 <col:33, col:46> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x15a143518 <col:34, col:38> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x15a1434e0 <col:34> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *' non_odr_use_unevaluated
|   |-CallExpr 0x15a143730 <line:18:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a143698 <col:2> 'int ()' Function 0x15a1435e0 'spin_lock_init' 'int ()'
|   | `-UnaryOperator 0x15a143718 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x15a1436f0 <col:18, col:22> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15a1436b8 <col:18> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |-CallExpr 0x15a143890 <line:19:2, col:20> 'int'
|   | |-ImplicitCastExpr 0x15a143878 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15a143838 <col:2> 'int ()' Function 0x15a143780 'mm_init_cpumask' 'int ()'
|   | `-ImplicitCastExpr 0x15a1438b8 <col:18> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a143858 <col:18> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |-CallExpr 0x15a143a08 <line:20:2, col:16> 'int'
|   | |-ImplicitCastExpr 0x15a1439f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15a1439b0 <col:2> 'int ()' Function 0x15a1438f8 'mm_init_aio' 'int ()'
|   | `-ImplicitCastExpr 0x15a143a30 <col:14> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a1439d0 <col:14> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |-CallExpr 0x15a143ba0 <line:21:2, col:21> 'int'
|   | |-ImplicitCastExpr 0x15a143b88 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15a143b28 <col:2> 'int ()' Function 0x15a143a70 'mm_init_owner' 'int ()'
|   | |-ImplicitCastExpr 0x15a143bd0 <col:16> 'struct mm_struct *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15a143b48 <col:16> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-ImplicitCastExpr 0x15a143be8 <col:20> 'struct task_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a143b68 <col:20> 'struct task_struct *' lvalue ParmVar 0x15a140a28 'p' 'struct task_struct *'
|   |-CallExpr 0x15a143d38 <line:22:2, col:25> 'int'
|   | |-ImplicitCastExpr 0x15a143d20 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15a143ce0 <col:2> 'int ()' Function 0x15a143c28 'mmu_notifier_mm_init' 'int ()'
|   | `-ImplicitCastExpr 0x15a143d60 <col:23> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a143d00 <col:23> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |-CallExpr 0x15a143f10 <line:23:2, col:27> 'int'
|   | |-ImplicitCastExpr 0x15a143ef8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15a143eb8 <col:2> 'int ()' Function 0x15a143e00 'init_tlb_flush_pending' 'int ()'
|   | `-ImplicitCastExpr 0x15a143f38 <col:25> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a143ed8 <col:25> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |-IfStmt 0x15a144158 <line:28:2, line:34:2> has_else
|   | |-RecoveryExpr 0x15a143f50 <line:28:6, col:15> '_Bool' contains-errors
|   | |-CompoundStmt 0x15a144030 <col:19, line:31:2>
|   | `-CompoundStmt 0x15a144140 <col:9, line:34:2>
|   |   `-BinaryOperator 0x15a144120 <line:33:3, col:19> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x15a1440d8 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x15a1440a0 <col:3> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |     `-IntegerLiteral 0x15a144100 <col:19> 'int' 0
|   |-IfStmt 0x15a144368 <line:36:2, line:37:8>
|   | |-CallExpr 0x15a1442c0 <line:36:6, col:21> 'int'
|   | | |-ImplicitCastExpr 0x15a1442a8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x15a144268 <col:6> 'int ()' Function 0x15a1441b0 'mm_alloc_pgd' 'int ()'
|   | | `-ImplicitCastExpr 0x15a1442e8 <col:19> 'struct mm_struct *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15a144288 <col:19> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-GotoStmt 0x15a144350 <line:37:3, col:8> 'fail_nopgd' 0x15a144300
|   |-IfStmt 0x15a1445a8 <line:39:2, line:40:8>
|   | |-CallExpr 0x15a1444e0 <line:39:6, col:28> 'int'
|   | | |-ImplicitCastExpr 0x15a1444c8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x15a144468 <col:6> 'int ()' Function 0x15a1443b0 'init_new_context' 'int ()'
|   | | |-ImplicitCastExpr 0x15a144510 <col:23> 'struct task_struct *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15a144488 <col:23> 'struct task_struct *' lvalue ParmVar 0x15a140a28 'p' 'struct task_struct *'
|   | | `-ImplicitCastExpr 0x15a144528 <col:26> 'struct mm_struct *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15a1444a8 <col:26> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-GotoStmt 0x15a144590 <line:40:3, col:8> 'fail_nocontext' 0x15a144540
|   |-BinaryOperator 0x15a1447a0 <line:42:2, col:35> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15a144600 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15a1445c8 <col:2> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   | `-CallExpr 0x15a144760 <col:16, col:35> 'int'
|   |   |-ImplicitCastExpr 0x15a144748 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15a144708 <col:16> 'int ()' Function 0x15a144650 'get_user_ns' 'int ()'
|   |   `-ImplicitCastExpr 0x15a144788 <col:28> 'struct user_namespace *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15a144728 <col:28> 'struct user_namespace *' lvalue ParmVar 0x15a140bf8 'user_ns' 'struct user_namespace *'
|   |-ReturnStmt 0x15a1447f8 <line:43:2, col:9>
|   | `-ImplicitCastExpr 0x15a1447e0 <col:9> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a1447c0 <col:9> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   |-LabelStmt 0x15a144980 <line:45:1, line:46:16> 'fail_nocontext'
|   | `-CallExpr 0x15a144940 <col:2, col:16> 'int'
|   |   |-ImplicitCastExpr 0x15a144928 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15a1448e8 <col:2> 'int ()' Function 0x15a144830 'mm_free_pgd' 'int ()'
|   |   `-ImplicitCastExpr 0x15a144968 <col:14> 'struct mm_struct *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15a144908 <col:14> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
|   `-LabelStmt 0x15a144b18 <line:47:1, line:48:12> 'fail_nopgd'
|     `-CallExpr 0x15a144ad8 <col:2, col:12> 'int'
|       |-ImplicitCastExpr 0x15a144ac0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x15a144a80 <col:2> 'int ()' Function 0x15a1449c8 'free_mm' 'int ()'
|       `-ImplicitCastExpr 0x15a144b00 <col:10> 'struct mm_struct *' <LValueToRValue>
|         `-DeclRefExpr 0x15a144aa0 <col:10> 'struct mm_struct *' lvalue ParmVar 0x15a128218 'mm' 'struct mm_struct *'
`-FunctionDecl 0x15a1431d8 <line:17:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x15a1432d8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x15a143340 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x15a1433a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15a143280 <<invalid sloc>> Implicit 900
