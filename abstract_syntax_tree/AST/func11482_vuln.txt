TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
`-FunctionDecl 0x12d80df18 <dataset_diviso_filec/func11482_vuln.c:1:1, line:54:1> line:1:1 invalid processInternalEntity 'int (int, int *, int)'
  |-ParmVarDecl 0x12d80dcf0 <col:23, col:34> col:34 referenced invalid parser 'int'
  |-ParmVarDecl 0x12d80dda8 <col:42, col:50> col:50 referenced invalid entity 'int *'
  |-ParmVarDecl 0x12d80de28 <col:58, col:67> col:67 invalid betweenDecl 'int'
  `-CompoundStmt 0x12d828d40 <col:80, line:54:1>
    |-DeclStmt 0x12d80e0f0 <line:2:3, col:34>
    | |-VarDecl 0x12d80dff0 <col:3, col:15> col:15 used textStart 'const char *'
    | `-VarDecl 0x12d80e070 <col:3, col:27> col:27 used textEnd 'const char *'
    |-DeclStmt 0x12d80e188 <line:3:3, col:19>
    | `-VarDecl 0x12d80e120 <col:3, col:15> col:15 used next 'const char *'
    |-DeclStmt 0x12e808ba8 <line:4:3, col:24>
    | |-EnumDecl 0x12d80e1a0 <col:3, col:8> col:8 XML_Error
    | `-VarDecl 0x12d80e2b8 <col:3, col:18> col:18 referenced invalid result 'enum XML_Error'
    |-IfStmt 0x12e808f88 <line:7:3, line:15:3> has_else
    | |-CXXDependentScopeMemberExpr 0x12e808bf8 <line:7:7, col:15> '<dependent type>' contains-errors lvalue ->m_freeInternalEntities
    | | `-RecoveryExpr 0x12e808bd8 <col:7> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12e808e40 <col:39, line:10:3>
    | | `-BinaryOperator 0x12e808e20 <line:9:5, col:50> '<dependent type>' contains-errors '='
    | |   |-CXXDependentScopeMemberExpr 0x12e808cf0 <col:5, col:13> '<dependent type>' contains-errors lvalue ->m_freeInternalEntities
    | |   | `-RecoveryExpr 0x12e808cc8 <col:5> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x12e808ca8 <col:5> 'int' lvalue ParmVar 0x12d80dcf0 'parser' 'int'
    | |   `-CXXDependentScopeMemberExpr 0x12e808dd8 <col:38, col:50> '<dependent type>' contains-errors lvalue ->next
    | |     `-RecoveryExpr 0x12e808db8 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e808f70 <line:10:10, line:15:3>
    |   `-IfStmt 0x12e808f50 <line:13:5, line:14:14>
    |     |-UnaryOperator 0x12e808ef0 <line:13:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x12e808ed8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x12e808eb8 <col:11> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x12e808f40 <line:14:7, col:14>
    |       `-RecoveryExpr 0x12e808f20 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e8090a0 <line:16:3, col:18> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12e809000 <col:3, col:11> '<dependent type>' contains-errors lvalue ->open
    | | `-RecoveryExpr 0x12e808fd8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12e808fb8 <col:3> 'int *' lvalue ParmVar 0x12d80dda8 'entity' 'int *'
    | `-RecoveryExpr 0x12e809080 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e809170 <line:17:3, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12e809108 <col:3, col:11> '<dependent type>' contains-errors lvalue ->processed
    | | `-RecoveryExpr 0x12e8090e0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12e8090c0 <col:3> 'int *' lvalue ParmVar 0x12d80dda8 'entity' 'int *'
    | `-IntegerLiteral 0x12e809150 <col:23> 'int' 0
    |-BinaryOperator 0x12e8092e0 <line:19:3, col:36> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12e809240 <col:3, col:11> '<dependent type>' contains-errors lvalue ->m_openInternalEntities
    | | `-RecoveryExpr 0x12e809218 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12e8091f8 <col:3> 'int' lvalue ParmVar 0x12d80dcf0 'parser' 'int'
    | `-RecoveryExpr 0x12e8092c0 <col:36> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e809488 <line:25:3, col:31> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x12e8093a8 <col:3> 'const char *' lvalue Var 0x12d80dff0 'textStart' 'const char *'
    | `-ImplicitCastExpr 0x12e809470 <col:15, col:31> 'const char *' contains-errors <NoOp>
    |   `-CStyleCastExpr 0x12e809448 <col:15, col:31> 'char *' contains-errors <Dependent>
    |     `-CXXDependentScopeMemberExpr 0x12e8093e8 <col:23, col:31> '<dependent type>' contains-errors lvalue ->textPtr
    |       `-RecoveryExpr 0x12e8093c8 <col:23> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e809650 <line:26:3, col:55> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x12e8094a8 <col:3> 'const char *' lvalue Var 0x12d80e070 'textEnd' 'const char *'
    | `-ImplicitCastExpr 0x12e809638 <col:13, col:55> 'const char *' contains-errors <NoOp>
    |   `-CStyleCastExpr 0x12e809610 <col:13, col:55> 'char *' contains-errors <Dependent>
    |     `-ParenExpr 0x12e8095f0 <col:21, col:55> '<dependent type>' contains-errors
    |       `-BinaryOperator 0x12e809598 <col:22, col:48> '<dependent type>' contains-errors '+'
    |         |-CXXDependentScopeMemberExpr 0x12e8094e8 <col:22, col:30> '<dependent type>' contains-errors lvalue ->textPtr
    |         | `-RecoveryExpr 0x12e8094c8 <col:22> '<dependent type>' contains-errors lvalue
    |         `-CXXDependentScopeMemberExpr 0x12e809550 <col:40, col:48> '<dependent type>' contains-errors lvalue ->textLen
    |           `-RecoveryExpr 0x12e809530 <col:40> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e8096c8 <line:28:3, col:10> 'const char *' '='
    | |-DeclRefExpr 0x12e809670 <col:3> 'const char *' lvalue Var 0x12d80e120 'next' 'const char *'
    | `-ImplicitCastExpr 0x12e8096b0 <col:10> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x12e809690 <col:10> 'const char *' lvalue Var 0x12d80dff0 'textStart' 'const char *'
    |-IfStmt 0x12d828cf0 <line:41:3, line:52:3>
    | |-RecoveryExpr 0x12d828698 <line:41:7, col:17> '_Bool' contains-errors
    | `-CompoundStmt 0x12d828cd8 <col:33, line:52:3>
    |   `-IfStmt 0x12d828ca8 <line:42:5, line:51:5> has_else
    |     |-RecoveryExpr 0x12d8287f8 <line:42:9, col:63> '_Bool' contains-errors
    |     |-CompoundStmt 0x12d828a68 <col:78, line:45:5>
    |     | `-BinaryOperator 0x12d8289b8 <line:43:7, col:49> '<dependent type>' contains-errors '='
    |     |   |-CXXDependentScopeMemberExpr 0x12d828860 <col:7, col:15> '<dependent type>' contains-errors lvalue ->processed
    |     |   | `-RecoveryExpr 0x12d828838 <col:7> '<dependent type>' contains-errors lvalue
    |     |   |   `-DeclRefExpr 0x12d828818 <col:7> 'int *' lvalue ParmVar 0x12d80dda8 'entity' 'int *'
    |     |   `-CStyleCastExpr 0x12d828990 <col:27, col:49> 'int' <IntegralCast>
    |     |     `-ParenExpr 0x12d828970 <col:32, col:49> 'long'
    |     |       `-BinaryOperator 0x12d828918 <col:33, col:40> 'long' '-'
    |     |         |-ImplicitCastExpr 0x12d8288e8 <col:33> 'const char *' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x12d8288a8 <col:33> 'const char *' lvalue Var 0x12d80e120 'next' 'const char *'
    |     |         `-ImplicitCastExpr 0x12d828900 <col:40> 'const char *' <LValueToRValue>
    |     |           `-DeclRefExpr 0x12d8288c8 <col:40> 'const char *' lvalue Var 0x12d80dff0 'textStart' 'const char *'
    |     `-CompoundStmt 0x12d828c98 <line:45:12, line:51:5>
    `-ReturnStmt 0x12d828d30 <line:53:3, col:10>
      `-RecoveryExpr 0x12d828d10 <col:10> '<dependent type>' contains-errors lvalue
