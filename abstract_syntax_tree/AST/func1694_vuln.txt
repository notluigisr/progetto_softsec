TranslationUnitDecl 0x15203ca08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15203d8b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15203cfd0 '__int128'
|-TypedefDecl 0x15203d928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15203cff0 'unsigned __int128'
|-TypedefDecl 0x15280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15280bc00 'struct __NSConstantString_tag'
|   `-Record 0x15203d980 '__NSConstantString_tag'
|-TypedefDecl 0x15280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15203d190 '__SVInt8_t'
|-TypedefDecl 0x15280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15203d1b0 '__SVInt16_t'
|-TypedefDecl 0x15280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15203d1d0 '__SVInt32_t'
|-TypedefDecl 0x15280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15203d1f0 '__SVInt64_t'
|-TypedefDecl 0x15280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15203d210 '__SVUint8_t'
|-TypedefDecl 0x15280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15203d230 '__SVUint16_t'
|-TypedefDecl 0x15280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15203d250 '__SVUint32_t'
|-TypedefDecl 0x15280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15203d270 '__SVUint64_t'
|-TypedefDecl 0x15280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15203d290 '__SVFloat16_t'
|-TypedefDecl 0x15280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15203d2b0 '__SVFloat32_t'
|-TypedefDecl 0x15280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15203d2d0 '__SVFloat64_t'
|-TypedefDecl 0x15280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15203d2f0 '__SVBfloat16_t'
|-TypedefDecl 0x15280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15203d310 '__clang_svint8x2_t'
|-TypedefDecl 0x15280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15203d330 '__clang_svint16x2_t'
|-TypedefDecl 0x15280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15203d350 '__clang_svint32x2_t'
|-TypedefDecl 0x15280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15203d370 '__clang_svint64x2_t'
|-TypedefDecl 0x15280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15203d390 '__clang_svuint8x2_t'
|-TypedefDecl 0x15280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15203d3b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15203d3d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15203d3f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15203d410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15203d430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15203d450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15203d470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15203d490 '__clang_svint8x3_t'
|-TypedefDecl 0x15280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15203d4b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15203d4d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15203d4f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15203d510 '__clang_svuint8x3_t'
|-TypedefDecl 0x15280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15203d530 '__clang_svuint16x3_t'
|-TypedefDecl 0x15280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15203d550 '__clang_svuint32x3_t'
|-TypedefDecl 0x15280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15203d570 '__clang_svuint64x3_t'
|-TypedefDecl 0x15280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15203d590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15203d5b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15203d5d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15203d5f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15203d610 '__clang_svint8x4_t'
|-TypedefDecl 0x15280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15203d630 '__clang_svint16x4_t'
|-TypedefDecl 0x15280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15203d650 '__clang_svint32x4_t'
|-TypedefDecl 0x15280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15203d670 '__clang_svint64x4_t'
|-TypedefDecl 0x15280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15203d690 '__clang_svuint8x4_t'
|-TypedefDecl 0x15280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15203d6b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15203d6d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15203d6f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15203d710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15203d730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15203d750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15203d770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15203d790 '__SVBool_t'
|-TypedefDecl 0x15280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15203d7b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15203d7d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15203d7f0 '__SVCount_t'
|-TypedefDecl 0x15280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x15203cab0 'char'
|-TypedefDecl 0x15280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x15203cab0 'char'
|-FunctionDecl 0x15280dda8 <dataset_diviso_filec/func1694_vuln.c:1:1, line:22:1> line:1:14 make_filename_safe 'char *(const char *)' static
| |-ParmVarDecl 0x15280dcd8 <col:33, col:45> col:45 used filename 'const char *'
| `-CompoundStmt 0x152826cc0 <line:2:1, line:22:1>
|   |-IfStmt 0x15210b100 <line:3:2, line:20:2>
|   | |-BinaryOperator 0x15210a600 <line:3:6, col:44> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x15280ded8 <col:6, col:7> 'const char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x15280dec0 <col:7> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x15280dea0 <col:7> 'const char *' lvalue ParmVar 0x15280dcd8 'filename' 'const char *'
|   | | `-BinaryOperator 0x15210a5e0 <col:19, col:44> '<dependent type>' contains-errors '-'
|   | |   |-RecoveryExpr 0x15210a588 <col:19, col:42> '<dependent type>' contains-errors lvalue
|   | |   | |-DeclRefExpr 0x15210a450 <col:19> 'int (const char *, const char *, unsigned long)' Function 0x15210a200 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-DeclRefExpr 0x15210a470 <col:27> 'const char *' lvalue ParmVar 0x15280dcd8 'filename' 'const char *'
|   | |   | `-StringLiteral 0x15210a4d0 <col:37> 'char[4]' lvalue "STR"
|   | |   `-IntegerLiteral 0x15210a5c0 <col:44> 'int' 1
|   | `-CompoundStmt 0x15210b0c8 <col:48, line:20:2>
|   |   |-DeclStmt 0x15210a808 <line:4:3, col:61>
|   |   | `-VarDecl 0x15210a638 <col:3, col:9> col:9 used fullpath 'char *'
|   |   |-IfStmt 0x15210a8d0 <line:6:3, line:8:3>
|   |   | |-UnaryOperator 0x15210a858 <line:6:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x15210a840 <col:8> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15210a820 <col:8> 'char *' lvalue Var 0x15210a638 'fullpath' 'char *'
|   |   | `-CompoundStmt 0x15210a8b8 <col:18, line:8:3>
|   |   |   `-ReturnStmt 0x15210a8a8 <line:7:4, col:11>
|   |   |     `-RecoveryExpr 0x15210a888 <col:11> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x15210ae00 <line:10:3, line:13:3>
|   |   | |-RecoveryExpr 0x15210abd0 <line:10:7, col:83> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x15210ade0 <col:86, line:13:3>
|   |   |   |-CallExpr 0x15210ad58 <line:11:4, col:18> 'int'
|   |   |   | |-ImplicitCastExpr 0x15210ad40 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x15210acd0 <col:4> 'int ()' Function 0x15210ac18 'efree' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x15210ad80 <col:10> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x15210acf0 <col:10> 'char *' lvalue Var 0x15210a638 'fullpath' 'char *'
|   |   |   `-ReturnStmt 0x15210add0 <line:12:4, col:11>
|   |   |     `-RecoveryExpr 0x15210adb0 <col:11> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x15210b060 <line:15:3, line:18:3>
|   |   | |-RecoveryExpr 0x15210af40 <line:15:7, col:48> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x15210b040 <col:51, line:18:3>
|   |   |   |-CallExpr 0x15210afb8 <line:16:4, col:18> 'int'
|   |   |   | |-ImplicitCastExpr 0x15210afa0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x15210af60 <col:4> 'int ()' Function 0x15210ac18 'efree' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x15210afe0 <col:10> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x15210af80 <col:10> 'char *' lvalue Var 0x15210a638 'fullpath' 'char *'
|   |   |   `-ReturnStmt 0x15210b030 <line:17:4, col:11>
|   |   |     `-RecoveryExpr 0x15210b010 <col:11> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x15210b0b8 <line:19:3, col:10>
|   |     `-ImplicitCastExpr 0x15210b0a0 <col:10> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x15210b080 <col:10> 'char *' lvalue Var 0x15210a638 'fullpath' 'char *'
|   `-ReturnStmt 0x152826cb0 <line:21:2, col:25>
|     `-ImplicitCastExpr 0x152826c98 <col:9, col:25> 'char *' <IntegralToPointer>
|       `-CallExpr 0x152826c58 <col:9, col:25> 'int'
|         |-ImplicitCastExpr 0x152826c40 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x152826c00 <col:9> 'int ()' Function 0x15210b148 'estrdup' 'int ()'
|         `-ImplicitCastExpr 0x152826c80 <col:17> 'const char *' <LValueToRValue>
|           `-DeclRefExpr 0x152826c20 <col:17> 'const char *' lvalue ParmVar 0x15280dcd8 'filename' 'const char *'
`-FunctionDecl 0x15210a200 <line:3:19> col:19 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x15210a300 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15210a368 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15210a3d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15210a2a8 <<invalid sloc>> Implicit 888
