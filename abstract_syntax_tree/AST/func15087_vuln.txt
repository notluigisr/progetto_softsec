TranslationUnitDecl 0x141055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1410564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x141055bd0 '__int128'
|-TypedefDecl 0x141056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x141055bf0 'unsigned __int128'
|-TypedefDecl 0x14180be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14180bc00 'struct __NSConstantString_tag'
|   `-Record 0x141056580 '__NSConstantString_tag'
|-TypedefDecl 0x14180be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x141055d90 '__SVInt8_t'
|-TypedefDecl 0x14180bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x141055db0 '__SVInt16_t'
|-TypedefDecl 0x14180bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x141055dd0 '__SVInt32_t'
|-TypedefDecl 0x14180bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x141055df0 '__SVInt64_t'
|-TypedefDecl 0x14180c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x141055e10 '__SVUint8_t'
|-TypedefDecl 0x14180c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x141055e30 '__SVUint16_t'
|-TypedefDecl 0x14180c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x141055e50 '__SVUint32_t'
|-TypedefDecl 0x14180c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x141055e70 '__SVUint64_t'
|-TypedefDecl 0x14180c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x141055e90 '__SVFloat16_t'
|-TypedefDecl 0x14180c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x141055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14180c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x141055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14180c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x141055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14180c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x141055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14180c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x141055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14180c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x141055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14180c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x141055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14180c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x141055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14180c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x141055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14180c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x141055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14180c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x141055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14180c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x141056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14180c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x141056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14180c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x141056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14180c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x141056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14180c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x141056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14180c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1410560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14180c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1410560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14180c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1410560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14180c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x141056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14180ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x141056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14180cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x141056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14180cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x141056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14180cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x141056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14180d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1410561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14180d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1410561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14180d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1410561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14180d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x141056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14180d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x141056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14180d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x141056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14180d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x141056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14180d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x141056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14180d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1410562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14180d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1410562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14180d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1410562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14180d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x141056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14180d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x141056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14180d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x141056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14180d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x141056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14180da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x141056390 '__SVBool_t'
|-TypedefDecl 0x14180da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1410563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14180dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1410563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14180db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1410563f0 '__SVCount_t'
|-TypedefDecl 0x14180dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14180dbb0 'char *'
|   `-BuiltinType 0x1410556b0 'char'
|-TypedefDecl 0x14180dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14180dbb0 'char *'
|   `-BuiltinType 0x1410556b0 'char'
|-FunctionDecl 0x14180de08 <dataset_diviso_filec/func15087_vuln.c:1:1, line:27:1> line:1:6 invalid is_ready_for_join 'int (const int)'
| |-ParmVarDecl 0x14180dcf0 <col:24, col:36> col:36 invalid pid 'const int'
| `-CompoundStmt 0x141125ce0 <col:41, line:27:1>
|   |-CallExpr 0x14180e078 <line:2:2, col:14> 'int'
|   | `-ImplicitCastExpr 0x14180e060 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x14180e010 <col:2> 'int ()' Function 0x14180df58 'EUID_ASSERT' 'int ()'
|   |-DeclStmt 0x14180e118 <line:4:2, col:13>
|   | `-VarDecl 0x14180e0b0 <col:2, col:8> col:8 used fname 'char *'
|   |-IfStmt 0x141122c50 <line:5:2, line:6:16>
|   | |-BinaryOperator 0x141122ab8 <line:5:6, col:54> 'int' contains-errors '=='
|   | | |-CallExpr 0x141122a78 <col:6, col:48> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14180e278 <col:6> 'int ()' Function 0x14180e158 'asprintf' 'int ()'
|   | | | |-UnaryOperator 0x14180e2f0 <col:15, col:16> 'char **' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x14180e298 <col:16> 'char *' lvalue Var 0x14180e0b0 'fname' 'char *'
|   | | | |-StringLiteral 0x14180e350 <col:23> 'char[4]' lvalue "STR"
|   | | | |-RecoveryExpr 0x14180e370 <col:30> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x141122a58 <col:35> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x141122a20 <col:53, col:54> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x141122a00 <col:54> 'int' 1
|   | `-CallExpr 0x141122c10 <line:6:3, col:16> 'int'
|   |   |-ImplicitCastExpr 0x141122bf8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x141122bb8 <col:3> 'int ()' Function 0x141122b00 'errExit' 'int ()'
|   |   `-ImplicitCastExpr 0x141122c38 <col:11> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x141122bd8 <col:11> 'char[4]' lvalue "STR"
|   |-CallExpr 0x141122d88 <line:7:2, col:12> 'int'
|   | `-ImplicitCastExpr 0x141122d70 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x141122d50 <col:2> 'int ()' Function 0x141122c98 'EUID_ROOT' 'int ()'
|   |-DeclStmt 0x141123058 <line:8:2, col:42>
|   | `-VarDecl 0x141122dc0 <col:2, col:41> col:6 used fd 'int' cinit
|   |   `-CallExpr 0x141123028 <col:11, col:41> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x141122f08 <col:11> 'int ()' Function 0x141122e50 'open' 'int ()'
|   |     |-DeclRefExpr 0x141122f28 <col:16> 'char *' lvalue Var 0x14180e0b0 'fname' 'char *'
|   |     `-BinaryOperator 0x141123008 <col:23, col:32> '<dependent type>' contains-errors '|'
|   |       |-RecoveryExpr 0x141122fc8 <col:23> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x141122fe8 <col:32> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x141123188 <line:9:2, col:12> 'int'
|   | `-ImplicitCastExpr 0x141123170 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x141123150 <col:2> 'int ()' Function 0x141123098 'EUID_USER' 'int ()'
|   |-CallExpr 0x141123828 <line:10:2, col:12> 'void'
|   | |-ImplicitCastExpr 0x141123810 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x141123780 <col:2> 'void (void *)' Function 0x141123610 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x141123868 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x141123850 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1411237a0 <col:7> 'char *' lvalue Var 0x14180e0b0 'fname' 'char *'
|   |-DeclStmt 0x1411250d8 <line:13:2, col:15>
|   | |-RecordDecl 0x141123928 <col:2, col:9> col:9 struct stat
|   | `-VarDecl 0x141125058 <col:2, col:14> col:14 invalid s 'struct stat'
|   |-IfStmt 0x141125368 <line:14:2, line:15:16>
|   | |-BinaryOperator 0x1411252b0 <line:14:6, col:24> 'int' contains-errors '=='
|   | | |-CallExpr 0x141125248 <col:6, col:18> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x1411251d0 <col:6> 'int ()' Function 0x141125118 'fstat' 'int ()'
|   | | | |-DeclRefExpr 0x1411251f0 <col:12> 'int' contains-errors lvalue Var 0x141122dc0 'fd' 'int'
|   | | | `-UnaryOperator 0x141125230 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x141125210 <col:17> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x141125298 <col:23, col:24> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x141125278 <col:24> 'int' 1
|   | `-CallExpr 0x141125328 <line:15:3, col:16> 'int'
|   |   |-ImplicitCastExpr 0x141125310 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1411252d0 <col:3> 'int ()' Function 0x141122b00 'errExit' 'int ()'
|   |   `-ImplicitCastExpr 0x141125350 <col:11> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1411252f0 <col:11> 'char[4]' lvalue "STR"
|   |-IfStmt 0x141125868 <line:16:2, line:19:2>
|   | |-BinaryOperator 0x1411256a0 <line:16:6, col:59> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x1411255d8 <col:6, col:41> 'int' contains-errors '||'
|   | | | |-UnaryOperator 0x141125518 <col:6, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | | `-CallExpr 0x1411254f0 <col:7, col:24> '<dependent type>' contains-errors
|   | | | |   |-DeclRefExpr 0x141125468 <col:7> 'int ()' Function 0x1411253b0 'S_ISREG' 'int ()'
|   | | | |   `-CXXDependentScopeMemberExpr 0x1411254a8 <col:15, col:17> '<dependent type>' contains-errors lvalue .st_mode
|   | | | |     `-RecoveryExpr 0x141125488 <col:15> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x1411255b8 <col:29, col:41> 'int' contains-errors '!='
|   | | |   |-CXXDependentScopeMemberExpr 0x141125550 <col:29, col:31> '<dependent type>' contains-errors lvalue .st_uid
|   | | |   | `-RecoveryExpr 0x141125530 <col:29> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x141125598 <col:41> 'int' 0
|   | | `-BinaryOperator 0x141125680 <col:46, col:59> 'int' contains-errors '!='
|   | |   |-CXXDependentScopeMemberExpr 0x141125618 <col:46, col:48> '<dependent type>' contains-errors lvalue .st_size
|   | |   | `-RecoveryExpr 0x1411255f8 <col:46> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x141125660 <col:59> 'int' 1
|   | `-CompoundStmt 0x141125850 <col:62, line:19:2>
|   |   `-CallExpr 0x1411257f8 <line:17:3, col:11> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x1411257e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1411257a0 <col:3> 'int ()' Function 0x1411256e8 'close' 'int ()'
|   |     `-ImplicitCastExpr 0x141125820 <col:9> 'int' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x1411257c0 <col:9> 'int' contains-errors lvalue Var 0x141122dc0 'fd' 'int'
|   |-DeclStmt 0x141125900 <line:20:2, col:13>
|   | `-VarDecl 0x141125898 <col:2, col:7> col:7 used status 'char'
|   |-IfStmt 0x141125c28 <line:21:2, line:24:2>
|   | |-RecoveryExpr 0x141125b58 <line:21:6, col:45> '_Bool' contains-errors
|   | `-CompoundStmt 0x141125c10 <col:59, line:24:2>
|   |   `-CallExpr 0x141125bd0 <line:22:3, col:11> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x141125bb8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x141125b78 <col:3> 'int ()' Function 0x1411256e8 'close' 'int ()'
|   |     `-ImplicitCastExpr 0x141125bf8 <col:9> 'int' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x141125b98 <col:9> 'int' contains-errors lvalue Var 0x141122dc0 'fd' 'int'
|   `-CallExpr 0x141125ca0 <line:25:2, col:10> 'int' contains-errors
|     |-ImplicitCastExpr 0x141125c88 <col:2> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x141125c48 <col:2> 'int ()' Function 0x1411256e8 'close' 'int ()'
|     `-ImplicitCastExpr 0x141125cc8 <col:8> 'int' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x141125c68 <col:8> 'int' contains-errors lvalue Var 0x141122dc0 'fd' 'int'
`-FunctionDecl 0x141123610 <line:10:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x141123710 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1411236b8 <<invalid sloc>> Implicit 873
