TranslationUnitDecl 0x12e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e055bd0 '__int128'
|-TypedefDecl 0x12e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e055bf0 'unsigned __int128'
|-TypedefDecl 0x12e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e126000 'struct __NSConstantString_tag'
|   `-Record 0x12e056580 '__NSConstantString_tag'
|-TypedefDecl 0x12e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e055d90 '__SVInt8_t'
|-TypedefDecl 0x12e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e055db0 '__SVInt16_t'
|-TypedefDecl 0x12e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e055dd0 '__SVInt32_t'
|-TypedefDecl 0x12e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e055df0 '__SVInt64_t'
|-TypedefDecl 0x12e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e055e10 '__SVUint8_t'
|-TypedefDecl 0x12e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e055e30 '__SVUint16_t'
|-TypedefDecl 0x12e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e055e50 '__SVUint32_t'
|-TypedefDecl 0x12e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e055e70 '__SVUint64_t'
|-TypedefDecl 0x12e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e055e90 '__SVFloat16_t'
|-TypedefDecl 0x12e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e056390 '__SVBool_t'
|-TypedefDecl 0x12e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0563f0 '__SVCount_t'
|-TypedefDecl 0x12e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-TypedefDecl 0x12e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e127fb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
`-FunctionDecl 0x12e128238 <dataset_diviso_filec/func16999_nonvuln.c:1:1, line:39:1> line:1:1 ins_char_typebuf 'int (int, int)'
  |-ParmVarDecl 0x12e1280d8 <col:18, col:22> col:22 used c 'int'
  |-ParmVarDecl 0x12e128158 <col:25, col:29> col:29 used modifier 'int'
  `-CompoundStmt 0x12e143230 <line:2:1, line:39:1>
    |-DeclStmt 0x12e128460 <line:3:5, col:36>
    | `-VarDecl 0x12e1283f8 <col:5, col:12> col:12 referenced invalid buf 'char'
    |-DeclStmt 0x12e128518 <line:4:5, col:17>
    | `-VarDecl 0x12e128490 <col:5, col:16> col:10 used len 'int' cinit
    |   `-IntegerLiteral 0x12e1284f8 <col:16> 'int' 0
    |-IfStmt 0x12e140dd0 <line:6:5, line:13:5>
    | |-BinaryOperator 0x12e128588 <line:6:9, col:21> 'int' '!='
    | | |-ImplicitCastExpr 0x12e128570 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e128530 <col:9> 'int' lvalue ParmVar 0x12e128158 'modifier' 'int'
    | | `-IntegerLiteral 0x12e128550 <col:21> 'int' 0
    | `-CompoundStmt 0x12e140d98 <line:7:5, line:13:5>
    |   |-BinaryOperator 0x12e128710 <line:8:2, col:11> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x12e1286d0 <col:2, col:7> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12e1286b8 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x12e1285c8 <col:2> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x12e1285a8 <col:2> 'char' lvalue Var 0x12e1283f8 'buf' 'char'
    |   | | `-IntegerLiteral 0x12e1285f0 <col:6> 'int' 0
    |   | `-RecoveryExpr 0x12e1286f0 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12e140ab0 <line:9:2, col:11> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x12e140a70 <col:2, col:7> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12e140a58 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x12e128750 <col:2> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x12e128730 <col:2> 'char' lvalue Var 0x12e1283f8 'buf' 'char'
    |   | | `-IntegerLiteral 0x12e128778 <col:6> 'int' 1
    |   | `-RecoveryExpr 0x12e140a90 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12e140b90 <line:10:2, col:11> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x12e140b50 <col:2, col:7> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12e140b38 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x12e140af0 <col:2> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x12e140ad0 <col:2> 'char' lvalue Var 0x12e1283f8 'buf' 'char'
    |   | | `-IntegerLiteral 0x12e140b18 <col:6> 'int' 2
    |   | `-DeclRefExpr 0x12e140b70 <col:11> 'int' lvalue ParmVar 0x12e128158 'modifier' 'int'
    |   |-BinaryOperator 0x12e140d18 <line:11:2, col:11> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x12e140cd8 <col:2, col:7> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12e140cc0 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x12e140bd0 <col:2> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x12e140bb0 <col:2> 'char' lvalue Var 0x12e1283f8 'buf' 'char'
    |   | | `-IntegerLiteral 0x12e140bf8 <col:6> 'int' 3
    |   | `-RecoveryExpr 0x12e140cf8 <col:11> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x12e140d78 <line:12:2, col:8> 'int' '='
    |     |-DeclRefExpr 0x12e140d38 <col:2> 'int' lvalue Var 0x12e128490 'len' 'int'
    |     `-IntegerLiteral 0x12e140d58 <col:8> 'int' 3
    |-IfStmt 0x12e142fa8 <line:14:5, line:36:5> has_else
    | |-CallExpr 0x12e140f88 <line:14:9, col:21> 'int'
    | | |-ImplicitCastExpr 0x12e140f70 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12e140f00 <col:9> 'int ()' Function 0x12e140e48 'IS_SPECIAL' 'int ()'
    | | `-ImplicitCastExpr 0x12e140fb0 <col:20> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12e140f20 <col:20> 'int' lvalue ParmVar 0x12e1280d8 'c' 'int'
    | |-CompoundStmt 0x12e141928 <line:15:5, line:21:5>
    | | |-BinaryOperator 0x12e141128 <line:16:2, col:13> '<dependent type>' contains-errors '='
    | | | |-ArraySubscriptExpr 0x12e1410e8 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x12e1410b8 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-RecoveryExpr 0x12e140fe8 <col:2> '<dependent type>' contains-errors lvalue
    | | | | |   `-DeclRefExpr 0x12e140fc8 <col:2> 'char' lvalue Var 0x12e1283f8 'buf' 'char'
    | | | | `-ImplicitCastExpr 0x12e1410d0 <col:6> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x12e141010 <col:6> 'int' lvalue Var 0x12e128490 'len' 'int'
    | | | `-DeclRefExpr 0x12e141108 <col:13> 'int ()' Function 0x12e140e48 'IS_SPECIAL' 'int ()'
    | | |-BinaryOperator 0x12e1413b8 <line:17:2, col:27> '<dependent type>' contains-errors '='
    | | | |-ArraySubscriptExpr 0x12e141220 <col:2, col:13> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x12e141208 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-RecoveryExpr 0x12e141168 <col:2> '<dependent type>' contains-errors lvalue
    | | | | |   `-DeclRefExpr 0x12e141148 <col:2> 'char' lvalue Var 0x12e1283f8 'buf' 'char'
    | | | | `-BinaryOperator 0x12e1411e8 <col:6, col:12> 'int' '+'
    | | | |   |-ImplicitCastExpr 0x12e1411d0 <col:6> 'int' <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x12e141190 <col:6> 'int' lvalue Var 0x12e128490 'len' 'int'
    | | | |   `-IntegerLiteral 0x12e1411b0 <col:12> 'int' 1
    | | | `-CallExpr 0x12e141378 <col:17, col:27> 'int'
    | | |   |-ImplicitCastExpr 0x12e141360 <col:17> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x12e141320 <col:17> 'int ()' Function 0x12e141268 'K_SECOND' 'int ()'
    | | |   `-ImplicitCastExpr 0x12e1413a0 <col:26> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x12e141340 <col:26> 'int' lvalue ParmVar 0x12e1280d8 'c' 'int'
    | | |-BinaryOperator 0x12e141648 <line:18:2, col:26> '<dependent type>' contains-errors '='
    | | | |-ArraySubscriptExpr 0x12e1414b0 <col:2, col:13> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x12e141498 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-RecoveryExpr 0x12e1413f8 <col:2> '<dependent type>' contains-errors lvalue
    | | | | |   `-DeclRefExpr 0x12e1413d8 <col:2> 'char' lvalue Var 0x12e1283f8 'buf' 'char'
    | | | | `-BinaryOperator 0x12e141478 <col:6, col:12> 'int' '+'
    | | | |   |-ImplicitCastExpr 0x12e141460 <col:6> 'int' <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x12e141420 <col:6> 'int' lvalue Var 0x12e128490 'len' 'int'
    | | | |   `-IntegerLiteral 0x12e141440 <col:12> 'int' 2
    | | | `-CallExpr 0x12e141608 <col:17, col:26> 'int'
    | | |   |-ImplicitCastExpr 0x12e1415f0 <col:17> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x12e1415b0 <col:17> 'int ()' Function 0x12e1414f8 'K_THIRD' 'int ()'
    | | |   `-ImplicitCastExpr 0x12e141630 <col:25> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x12e1415d0 <col:25> 'int' lvalue ParmVar 0x12e1280d8 'c' 'int'
    | | |-BinaryOperator 0x12e141898 <line:19:2, col:17> '<dependent type>' contains-errors '='
    | | | |-ArraySubscriptExpr 0x12e141858 <col:2, col:13> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x12e141840 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-RecoveryExpr 0x12e141688 <col:2> '<dependent type>' contains-errors lvalue
    | | | | |   `-DeclRefExpr 0x12e141668 <col:2> 'char' lvalue Var 0x12e1283f8 'buf' 'char'
    | | | | `-BinaryOperator 0x12e141820 <col:6, col:12> 'int' '+'
    | | | |   |-ImplicitCastExpr 0x12e141808 <col:6> 'int' <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x12e1416b0 <col:6> 'int' lvalue Var 0x12e128490 'len' 'int'
    | | | |   `-IntegerLiteral 0x12e1416d0 <col:12> 'int' 3
    | | | `-RecoveryExpr 0x12e141878 <col:17> '<dependent type>' contains-errors lvalue
    | | `-CompoundAssignOperator 0x12e1418f8 <line:20:2, col:9> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |   |-DeclRefExpr 0x12e1418b8 <col:2> 'int' lvalue Var 0x12e128490 'len' 'int'
    | |   `-IntegerLiteral 0x12e1418d8 <col:9> 'int' 3
    | `-CompoundStmt 0x12e142f80 <line:23:5, line:36:5>
    |   |-DeclStmt 0x12e142c40 <line:24:2, col:23>
    |   | `-VarDecl 0x12e141978 <col:2, col:20> col:10 used p 'char *' cinit
    |   |   `-BinaryOperator 0x12e142c20 <col:14, col:20> '<dependent type>' contains-errors '+'
    |   |     |-RecoveryExpr 0x12e1419e0 <col:14> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12e142c00 <col:20> 'int' lvalue Var 0x12e128490 'len' 'int'
    |   |-DeclStmt 0x12e142d60 <line:25:2, col:39>
    |   | `-VarDecl 0x12e142c70 <col:2, col:6> col:6 used char_len 'int'
    |   `-CompoundAssignOperator 0x12e142f50 <line:32:2, col:37> 'int' contains-errors '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x12e142d78 <col:2> 'int' lvalue Var 0x12e128490 'len' 'int'
    |     `-CallExpr 0x12e142ef0 <col:9, col:37> 'int' contains-errors
    |       |-ImplicitCastExpr 0x12e142ed8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12e142e78 <col:9> 'int ()' Function 0x12e142dc0 'fix_input_buffer' 'int ()'
    |       |-ImplicitCastExpr 0x12e142f20 <col:26> 'char *' contains-errors <LValueToRValue>
    |       | `-DeclRefExpr 0x12e142e98 <col:26> 'char *' contains-errors lvalue Var 0x12e141978 'p' 'char *'
    |       `-ImplicitCastExpr 0x12e142f38 <col:29> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x12e142eb8 <col:29> 'int' lvalue Var 0x12e142c70 'char_len' 'int'
    `-ReturnStmt 0x12e143220 <line:38:5, col:12>
      `-ImplicitCastExpr 0x12e143208 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12e1431e8 <col:12> 'int' lvalue Var 0x12e128490 'len' 'int'
