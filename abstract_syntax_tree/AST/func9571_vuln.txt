TranslationUnitDecl 0x140034008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x140034eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1400345d0 '__int128'
|-TypedefDecl 0x140034f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1400345f0 'unsigned __int128'
|-TypedefDecl 0x141818630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x141818400 'struct __NSConstantString_tag'
|   `-Record 0x140034f80 '__NSConstantString_tag'
|-TypedefDecl 0x141818698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140034790 '__SVInt8_t'
|-TypedefDecl 0x141818700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1400347b0 '__SVInt16_t'
|-TypedefDecl 0x141818768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1400347d0 '__SVInt32_t'
|-TypedefDecl 0x1418187d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1400347f0 '__SVInt64_t'
|-TypedefDecl 0x141818838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140034810 '__SVUint8_t'
|-TypedefDecl 0x1418188a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140034830 '__SVUint16_t'
|-TypedefDecl 0x141818908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140034850 '__SVUint32_t'
|-TypedefDecl 0x141818970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140034870 '__SVUint64_t'
|-TypedefDecl 0x1418189d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140034890 '__SVFloat16_t'
|-TypedefDecl 0x141818a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1400348b0 '__SVFloat32_t'
|-TypedefDecl 0x141818aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1400348d0 '__SVFloat64_t'
|-TypedefDecl 0x141818b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1400348f0 '__SVBfloat16_t'
|-TypedefDecl 0x141818b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140034910 '__clang_svint8x2_t'
|-TypedefDecl 0x141818be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140034930 '__clang_svint16x2_t'
|-TypedefDecl 0x141818c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140034950 '__clang_svint32x2_t'
|-TypedefDecl 0x141818cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140034970 '__clang_svint64x2_t'
|-TypedefDecl 0x141818d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140034990 '__clang_svuint8x2_t'
|-TypedefDecl 0x141818d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1400349b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x141818de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1400349d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x141818e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1400349f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x141818eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140034a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x141818f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140034a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x141818f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140034a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x141818ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140034a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x141819058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140034a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1418190c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x140034ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x141819128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x140034ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x141819190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x140034af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1418191f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140034b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x141819260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140034b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1418192c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140034b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x141819330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140034b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x141819398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140034b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x141819c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x140034bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x141819c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x140034bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x141819cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x140034bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x141819d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140034c10 '__clang_svint8x4_t'
|-TypedefDecl 0x141819da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140034c30 '__clang_svint16x4_t'
|-TypedefDecl 0x141819e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140034c50 '__clang_svint32x4_t'
|-TypedefDecl 0x141819e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140034c70 '__clang_svint64x4_t'
|-TypedefDecl 0x141819ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140034c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x141819f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x140034cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x141819fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x140034cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14181a010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x140034cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14181a078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140034d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14181a0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140034d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14181a148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140034d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14181a1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140034d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14181a218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140034d90 '__SVBool_t'
|-TypedefDecl 0x14181a280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x140034db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14181a2e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x140034dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14181a350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x140034df0 '__SVCount_t'
|-TypedefDecl 0x14181a3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14181a3b0 'char *'
|   `-BuiltinType 0x1400340b0 'char'
|-TypedefDecl 0x14181a468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14181a3b0 'char *'
|   `-BuiltinType 0x1400340b0 'char'
`-FunctionDecl 0x14181a7d8 <dataset_diviso_filec/func9571_vuln.c:1:1, line:74:1> line:1:1 invalid rdp_in_unistr 'int (int, int, char **, int *)'
  |-ParmVarDecl 0x14181a4f0 <col:15, col:22> col:22 invalid s 'int'
  |-ParmVarDecl 0x14181a570 <col:25, col:29> col:29 used in_len 'int'
  |-ParmVarDecl 0x14181a628 <col:37, col:44> col:44 used string 'char **'
  |-ParmVarDecl 0x14181a6d8 <col:52, col:61> col:61 invalid str_size 'int *'
  `-CompoundStmt 0x13f819630 <line:2:1, line:74:1>
    |-BinaryOperator 0x141833fc0 <line:4:2, col:30> 'char *' '='
    | |-UnaryOperator 0x14181a8d8 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14181a8c0 <col:3> 'char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x14181a8a0 <col:3> 'char **' lvalue ParmVar 0x14181a628 'string' 'char **'
    | `-ImplicitCastExpr 0x14181ab60 <col:12, col:30> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x14181ab38 <col:12, col:30> 'int'
    |     |-ImplicitCastExpr 0x14181ab20 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14181aa50 <col:12> 'int ()' Function 0x14181a998 'xmalloc' 'int ()'
    |     `-BinaryOperator 0x14181aac8 <col:20, col:29> 'int' '*'
    |       |-ImplicitCastExpr 0x14181aab0 <col:20> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x14181aa70 <col:20> 'int' lvalue ParmVar 0x14181a570 'in_len' 'int'
    |       `-IntegerLiteral 0x14181aa90 <col:29> 'int' 2
    |-BinaryOperator 0x1418340a8 <line:5:2, col:23> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x141834018 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x141834000 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x141833fe0 <col:3> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x141834088 <col:14, col:23> 'int' '*'
    |   |-ImplicitCastExpr 0x141834070 <col:14> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x141834030 <col:14> 'int' lvalue ParmVar 0x14181a570 'in_len' 'int'
    |   `-IntegerLiteral 0x141834050 <col:23> 'int' 2
    `-CompoundStmt 0x13f8195f0 <line:52:2, line:73:2>
      |-DeclStmt 0x141834168 <line:53:3, col:12>
      | `-VarDecl 0x1418340e0 <col:3, col:11> col:7 used i 'int' cinit
      |   `-IntegerLiteral 0x141834148 <col:11> 'int' 0
      |-DeclStmt 0x141834220 <line:54:3, col:14>
      | `-VarDecl 0x141834198 <col:3, col:13> col:7 used rem 'int' cinit
      |   `-IntegerLiteral 0x141834200 <col:13> 'int' 0
      |-IfStmt 0x141834750 <line:57:3, line:62:3>
      | |-BinaryOperator 0x141834370 <line:57:7, col:25> 'int' contains-errors '>'
      | | |-RecoveryExpr 0x141834300 <col:7> '<dependent type>' contains-errors lvalue
      | | `-BinaryOperator 0x141834350 <col:13, col:25> '<dependent type>' contains-errors '-'
      | |   |-UnaryOperator 0x141834338 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
      | |   | `-ImplicitCastExpr 0x141834320 <col:14> '<dependent type>' contains-errors <LValueToRValue>
      | |   |   `-RecoveryExpr 0x141834250 <col:14> '<dependent type>' contains-errors lvalue
      | |   `-IntegerLiteral 0x1418342a0 <col:25> 'int' 1
      | `-CompoundStmt 0x141834730 <line:58:3, line:62:3>
      |   |-CallExpr 0x141834508 <line:59:4, col:17> 'int'
      |   | |-ImplicitCastExpr 0x1418344f0 <col:4> 'int (*)()' <FunctionToPointerDecay>
      |   | | `-DeclRefExpr 0x141834470 <col:4> 'int ()' Function 0x1418343b8 'warning' 'int ()'
      |   | `-ImplicitCastExpr 0x141834530 <col:12> 'char *' <ArrayToPointerDecay>
      |   |   `-StringLiteral 0x1418344d0 <col:12> 'char[4]' lvalue "STR"
      |   `-BinaryOperator 0x141834710 <line:61:4, col:23> 'int' contains-errors '='
      |     |-DeclRefExpr 0x1418345d8 <col:4> 'int' lvalue Var 0x141834198 'rem' 'int'
      |     `-BinaryOperator 0x1418346f0 <col:10, col:23> '<dependent type>' contains-errors '-'
      |       |-DeclRefExpr 0x1418345f8 <col:10> 'int' lvalue ParmVar 0x14181a570 'in_len' 'int'
      |       `-BinaryOperator 0x1418346d0 <col:19, col:23> '<dependent type>' contains-errors '*'
      |         |-IntegerLiteral 0x141834618 <col:19> 'int' 2
      |         `-RecoveryExpr 0x1418346b0 <col:23> '<dependent type>' contains-errors lvalue
      |-WhileStmt 0x141834bb8 <line:64:3, line:68:3>
      | |-BinaryOperator 0x1418347e8 <line:64:10, col:14> 'int' contains-errors '<'
      | | |-DeclRefExpr 0x141834770 <col:10> 'int' lvalue Var 0x1418340e0 'i' 'int'
      | | `-RecoveryExpr 0x1418347c8 <col:14> '<dependent type>' contains-errors lvalue
      | `-CompoundStmt 0x141834b98 <line:65:3, line:68:3>
      |   |-CallExpr 0x1418349f0 <line:66:4, col:32> '<dependent type>' contains-errors
      |   | |-DeclRefExpr 0x1418348e8 <col:4> 'int ()' Function 0x141834830 'in_uint8a' 'int ()'
      |   | |-RecoveryExpr 0x141834908 <col:14> '<dependent type>' contains-errors lvalue
      |   | |-UnaryOperator 0x1418349b8 <col:17, col:28> 'char **' prefix '&' cannot overflow
      |   | | `-ArraySubscriptExpr 0x141834998 <col:18, col:28> 'char *' lvalue
      |   | |   |-ImplicitCastExpr 0x141834980 <col:18> 'char **' <LValueToRValue>
      |   | |   | `-DeclRefExpr 0x141834928 <col:18> 'char **' lvalue ParmVar 0x14181a628 'string' 'char **'
      |   | |   `-UnaryOperator 0x141834968 <col:25, col:26> 'int' postfix '++'
      |   | |     `-DeclRefExpr 0x141834948 <col:25> 'int' lvalue Var 0x1418340e0 'i' 'int'
      |   | `-IntegerLiteral 0x1418349d0 <col:31> 'int' 1
      |   `-CallExpr 0x141834b68 <line:67:4, col:18> '<dependent type>' contains-errors
      |     |-DeclRefExpr 0x141834b08 <col:4> 'int ()' Function 0x141834a50 'in_uint8s' 'int ()'
      |     |-RecoveryExpr 0x141834b28 <col:14> '<dependent type>' contains-errors lvalue
      |     `-IntegerLiteral 0x141834b48 <col:17> 'int' 1
      |-CallExpr 0x13f819440 <line:70:3, col:19> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x141834bd8 <col:3> 'int ()' Function 0x141834a50 'in_uint8s' 'int ()'
      | |-RecoveryExpr 0x13f819400 <col:13> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x13f819420 <col:16> 'int' lvalue Var 0x141834198 'rem' 'int'
      `-BinaryOperator 0x13f8195d0 <line:72:3, col:15> '<dependent type>' contains-errors '='
        |-UnaryOperator 0x13f819598 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
        | `-ImplicitCastExpr 0x13f819580 <col:4> '<dependent type>' contains-errors <LValueToRValue>
        |   `-RecoveryExpr 0x13f8194c8 <col:4> '<dependent type>' contains-errors lvalue
        `-RecoveryExpr 0x13f8195b0 <col:15> '<dependent type>' contains-errors lvalue
