TranslationUnitDecl 0x140855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1408564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x140855bd0 '__int128'
|-TypedefDecl 0x140856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x140855bf0 'unsigned __int128'
|-TypedefDecl 0x140926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x140926000 'struct __NSConstantString_tag'
|   `-Record 0x140856580 '__NSConstantString_tag'
|-TypedefDecl 0x140926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140855d90 '__SVInt8_t'
|-TypedefDecl 0x140926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x140855db0 '__SVInt16_t'
|-TypedefDecl 0x140926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x140855dd0 '__SVInt32_t'
|-TypedefDecl 0x1409263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x140855df0 '__SVInt64_t'
|-TypedefDecl 0x140926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140855e10 '__SVUint8_t'
|-TypedefDecl 0x1409264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140855e30 '__SVUint16_t'
|-TypedefDecl 0x140926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140855e50 '__SVUint32_t'
|-TypedefDecl 0x140926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140855e70 '__SVUint64_t'
|-TypedefDecl 0x1409265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140855e90 '__SVFloat16_t'
|-TypedefDecl 0x140926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x140855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1409266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x140855ed0 '__SVFloat64_t'
|-TypedefDecl 0x140926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x140855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x140926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1409267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x140926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1409268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x140926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x140926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x140855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1409269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x140855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x140926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x140855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x140926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x140926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x140926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x140926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x140926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140856090 '__clang_svint8x3_t'
|-TypedefDecl 0x140926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1408560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x140926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1408560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x140926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1408560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x140926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x140926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x140926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x140926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x140926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x140927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1408561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x140927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1408561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1409278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1408561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x140927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1409279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140856230 '__clang_svint16x4_t'
|-TypedefDecl 0x140927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140856250 '__clang_svint32x4_t'
|-TypedefDecl 0x140927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140856270 '__clang_svint64x4_t'
|-TypedefDecl 0x140927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x140927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1408562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x140927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1408562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x140927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1408562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x140927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x140927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x140927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x140927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x140927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140856390 '__SVBool_t'
|-TypedefDecl 0x140927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1408563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x140927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1408563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x140927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1408563f0 '__SVCount_t'
|-TypedefDecl 0x140927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x140927fb0 'char *'
|   `-BuiltinType 0x1408556b0 'char'
|-TypedefDecl 0x140928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x140927fb0 'char *'
|   `-BuiltinType 0x1408556b0 'char'
|-FunctionDecl 0x140928758 <dataset_diviso_filec/func14350_vuln.c:1:1, line:65:1> line:1:5 genl_register_family 'int (struct genl_family *)'
| |-ParmVarDecl 0x140928648 <col:26, col:46> col:46 used family 'struct genl_family *'
| `-CompoundStmt 0x140945fa8 <line:2:1, line:65:1>
|   |-DeclStmt 0x140940b68 <line:3:2, col:12>
|   | |-VarDecl 0x140940a68 <col:2, col:6> col:6 used err 'int'
|   | `-VarDecl 0x140940ae8 <col:2, col:11> col:11 used i 'int'
|   |-DeclStmt 0x140940d20 <line:4:2, col:49>
|   | |-VarDecl 0x140940b98 <col:2, col:14> col:6 used start 'int' cinit
|   | | `-RecoveryExpr 0x140940c30 <col:14> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x140940c68 <col:2, col:38> col:32 used end 'int' cinit
|   |   `-RecoveryExpr 0x140940ce8 <col:38> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x140940f38 <line:6:2, col:32> 'int' '='
|   | |-DeclRefExpr 0x140940d38 <col:2> 'int' lvalue Var 0x140940a68 'err' 'int'
|   | `-CallExpr 0x140940ef8 <col:8, col:32> 'int'
|   |   |-ImplicitCastExpr 0x140940ee0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x140940e70 <col:8> 'int ()' Function 0x140940db8 'genl_validate_ops' 'int ()'
|   |   `-ImplicitCastExpr 0x140940f20 <col:26> 'struct genl_family *' <LValueToRValue>
|   |     `-DeclRefExpr 0x140940e90 <col:26> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   |-IfStmt 0x140940fd8 <line:7:2, line:8:10>
|   | |-ImplicitCastExpr 0x140940f78 <line:7:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x140940f58 <col:6> 'int' lvalue Var 0x140940a68 'err' 'int'
|   | `-ReturnStmt 0x140940fc8 <line:8:3, col:10>
|   |   `-ImplicitCastExpr 0x140940fb0 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x140940f90 <col:10> 'int' lvalue Var 0x140940a68 'err' 'int'
|   |-CallExpr 0x140941110 <line:10:2, col:16> 'int'
|   | `-ImplicitCastExpr 0x1409410f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x1409410d8 <col:2> 'int ()' Function 0x140941020 'genl_lock_all' 'int ()'
|   |-IfStmt 0x140941438 <line:12:2, line:15:2>
|   | |-CallExpr 0x140941290 <line:12:6, col:42> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x140941210 <col:6> 'int ()' Function 0x140941158 'genl_family_find_byname' 'int ()'
|   | | `-RecoveryExpr 0x140941268 <col:30, col:38> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x140941230 <col:30> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   | `-CompoundStmt 0x140941418 <col:45, line:15:2>
|   |   |-BinaryOperator 0x140941390 <line:13:3, col:10> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1409412b8 <col:3> 'int' lvalue Var 0x140940a68 'err' 'int'
|   |   | `-UnaryOperator 0x140941378 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   `-ImplicitCastExpr 0x140941360 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-RecoveryExpr 0x140941340 <col:10> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x140941400 <line:14:3, col:8> 'errout_locked' 0x1409413b0
|   |-IfStmt 0x140943790 <line:18:2, line:25:2> has_else
|   | |-BinaryOperator 0x140941500 <line:18:6, col:17> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x140941458 <col:6> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   | | `-UnaryOperator 0x1409414e8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   `-RecoveryExpr 0x1409414c8 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x140941618 <col:28, line:21:2>
|   | | `-BinaryOperator 0x1409415f8 <line:20:3, col:17> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x140941520 <col:3> 'int' contains-errors lvalue Var 0x140940b98 'start' 'int'
|   | |   `-BinaryOperator 0x1409415d8 <col:11, col:17> 'int' contains-errors '='
|   | |     |-DeclRefExpr 0x140941540 <col:11> 'int' contains-errors lvalue Var 0x140940c68 'end' 'int'
|   | |     `-RecoveryExpr 0x1409415b8 <col:17> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x140943760 <line:21:9, line:25:2> has_else
|   |   |-BinaryOperator 0x1409419b0 <line:21:13, col:44> 'int' contains-errors '=='
|   |   | |-CallExpr 0x140941960 <col:13, col:39> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x140941850 <col:13> 'int (const char *, const char *)' Function 0x140941670 'strcmp' 'int (const char *, const char *)'
|   |   | | |-RecoveryExpr 0x1409418a8 <col:20, col:28> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x140941870 <col:20> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   |   | | `-StringLiteral 0x140941910 <col:34> 'char[4]' lvalue "STR"
|   |   | `-IntegerLiteral 0x140941990 <col:44> 'int' 0
|   |   |-CompoundStmt 0x1409434d8 <col:47, line:23:2>
|   |   | `-BinaryOperator 0x1409434b8 <line:22:3, col:17> 'int' contains-errors '='
|   |   |   |-DeclRefExpr 0x1409419d0 <col:3> 'int' contains-errors lvalue Var 0x140940b98 'start' 'int'
|   |   |   `-BinaryOperator 0x140943498 <col:11, col:17> 'int' contains-errors '='
|   |   |     |-DeclRefExpr 0x140943400 <col:11> 'int' contains-errors lvalue Var 0x140940c68 'end' 'int'
|   |   |     `-RecoveryExpr 0x140943478 <col:17> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x140943740 <line:23:9, line:25:2>
|   |     |-BinaryOperator 0x140943610 <line:23:13, col:44> 'int' contains-errors '=='
|   |     | |-CallExpr 0x1409435c0 <col:13, col:39> '<dependent type>' contains-errors
|   |     | | |-DeclRefExpr 0x1409434f0 <col:13> 'int (const char *, const char *)' Function 0x140941670 'strcmp' 'int (const char *, const char *)'
|   |     | | |-RecoveryExpr 0x140943548 <col:20, col:28> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x140943510 <col:20> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   |     | | `-StringLiteral 0x140943570 <col:34> 'char[4]' lvalue "STR"
|   |     | `-IntegerLiteral 0x1409435f0 <col:44> 'int' 0
|   |     `-CompoundStmt 0x140943728 <col:47, line:25:2>
|   |       `-BinaryOperator 0x140943708 <line:24:3, col:17> 'int' contains-errors '='
|   |         |-DeclRefExpr 0x140943630 <col:3> 'int' contains-errors lvalue Var 0x140940b98 'start' 'int'
|   |         `-BinaryOperator 0x1409436e8 <col:11, col:17> 'int' contains-errors '='
|   |           |-DeclRefExpr 0x140943650 <col:11> 'int' contains-errors lvalue Var 0x140940c68 'end' 'int'
|   |           `-RecoveryExpr 0x1409436c8 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x140943f48 <line:27:2, line:36:3> has_else
|   | |-BinaryOperator 0x1409438b0 <line:27:6, col:34> 'int' contains-errors '&&'
|   | | |-RecoveryExpr 0x1409437f8 <col:6, col:14> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x1409437c0 <col:6> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   | | `-UnaryOperator 0x140943898 <col:25, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x140943880 <col:26, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x140943858 <col:26, col:34> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x140943820 <col:26> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   | |-CompoundStmt 0x140943ec0 <col:48, line:35:2>
|   | | |-BinaryOperator 0x140943db0 <line:28:3, line:30:17> '<dependent type>' contains-errors '='
|   | | | |-RecoveryExpr 0x140943908 <line:28:3, col:11> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x1409438d0 <col:3> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   | | | `-CallExpr 0x140943d78 <col:21, line:30:17> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x140943a10 <line:28:21> 'int ()' Function 0x140943958 'kmalloc_array' 'int ()'
|   | | |   |-BinaryOperator 0x140943ab0 <col:35, col:53> '<dependent type>' contains-errors '+'
|   | | |   | |-RecoveryExpr 0x140943a68 <col:35, col:43> '<dependent type>' contains-errors lvalue
|   | | |   | | `-DeclRefExpr 0x140943a30 <col:35> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   | | |   | `-IntegerLiteral 0x140943a90 <col:53> 'int' 1
|   | | |   |-UnaryExprOrTypeTraitExpr 0x140943d38 <line:29:7, col:29> 'unsigned long' sizeof 'struct nlattr *'
|   | | |   `-RecoveryExpr 0x140943d58 <line:30:7> '<dependent type>' contains-errors lvalue
|   | | `-IfStmt 0x140943ea0 <line:31:3, line:34:3>
|   | |   |-RecoveryExpr 0x140943e30 <line:31:7, col:26> '_Bool' contains-errors
|   | |   `-CompoundStmt 0x140943e88 <col:32, line:34:3>
|   | |     `-GotoStmt 0x140943e70 <line:33:4, col:9> 'errout_locked' 0x1409413b0
|   | `-NullStmt 0x140943f40 <line:36:3>
|   |-IfStmt 0x140944308 <line:40:2, line:43:2>
|   | |-BinaryOperator 0x140944210 <line:40:6, col:19> 'int' contains-errors '<'
|   | | |-RecoveryExpr 0x1409441c8 <col:6, col:14> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x140944190 <col:6> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   | | `-IntegerLiteral 0x1409441f0 <col:19> 'int' 0
|   | `-CompoundStmt 0x1409442e8 <col:22, line:43:2>
|   |   |-BinaryOperator 0x1409442b0 <line:41:3, col:17> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x140944230 <col:3> 'int' lvalue Var 0x140940a68 'err' 'int'
|   |   | `-RecoveryExpr 0x140944288 <col:9, col:17> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x140944250 <col:9> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   |   `-GotoStmt 0x1409442d0 <line:42:3, col:8> 'errout_locked' 0x1409413b0
|   |-BinaryOperator 0x140945550 <line:45:2, col:45> 'int' '='
|   | |-DeclRefExpr 0x140944328 <col:2> 'int' lvalue Var 0x140940a68 'err' 'int'
|   | `-CallExpr 0x140945510 <col:8, col:45> 'int'
|   |   |-ImplicitCastExpr 0x1409454f8 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1409454b8 <col:8> 'int ()' Function 0x140945400 'genl_validate_assign_mc_groups' 'int ()'
|   |   `-ImplicitCastExpr 0x140945538 <col:39> 'struct genl_family *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1409454d8 <col:39> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   |-IfStmt 0x140945610 <line:46:2, line:47:8>
|   | |-ImplicitCastExpr 0x140945590 <line:46:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x140945570 <col:6> 'int' lvalue Var 0x140940a68 'err' 'int'
|   | `-GotoStmt 0x1409455f8 <line:47:3, col:8> 'errout_remove' 0x1409455a8
|   |-CallExpr 0x140945748 <line:49:2, col:18> 'int'
|   | `-ImplicitCastExpr 0x140945730 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x140945710 <col:2> 'int ()' Function 0x140945658 'genl_unlock_all' 'int ()'
|   |-ReturnStmt 0x140945bc8 <line:57:2, col:9>
|   | `-IntegerLiteral 0x140945ba8 <col:9> 'int' 0
|   |-LabelStmt 0x140945d40 <line:59:1, col:14> 'errout_remove'
|   | `-NullStmt 0x140945d38 <col:14>
|   |-CallExpr 0x140945ec0 <line:61:2, col:23> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x140945e40 <col:2> 'int ()' Function 0x140945d88 'kfree' 'int ()'
|   | `-RecoveryExpr 0x140945e98 <col:8, col:16> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x140945e60 <col:8> 'struct genl_family *' lvalue ParmVar 0x140928648 'family' 'struct genl_family *'
|   |-LabelStmt 0x140945f40 <line:62:1, line:63:18> 'errout_locked'
|   | `-CallExpr 0x140945f20 <col:2, col:18> 'int'
|   |   `-ImplicitCastExpr 0x140945f08 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x140945ee8 <col:2> 'int ()' Function 0x140945658 'genl_unlock_all' 'int ()'
|   `-ReturnStmt 0x140945f98 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x140945f80 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x140945f60 <col:9> 'int' lvalue Var 0x140940a68 'err' 'int'
`-FunctionDecl 0x140941670 <line:21:13> col:13 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x140941770 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1409417d8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x140941718 <<invalid sloc>> Implicit 887
