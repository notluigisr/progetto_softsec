TranslationUnitDecl 0x129055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1290564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129055bd0 '__int128'
|-TypedefDecl 0x129056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129055bf0 'unsigned __int128'
|-TypedefDecl 0x129126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x129126000 'struct __NSConstantString_tag'
|   `-Record 0x129056580 '__NSConstantString_tag'
|-TypedefDecl 0x129126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129055d90 '__SVInt8_t'
|-TypedefDecl 0x129126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129055db0 '__SVInt16_t'
|-TypedefDecl 0x129126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129055dd0 '__SVInt32_t'
|-TypedefDecl 0x1291263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129055df0 '__SVInt64_t'
|-TypedefDecl 0x129126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129055e10 '__SVUint8_t'
|-TypedefDecl 0x1291264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129055e30 '__SVUint16_t'
|-TypedefDecl 0x129126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129055e50 '__SVUint32_t'
|-TypedefDecl 0x129126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129055e70 '__SVUint64_t'
|-TypedefDecl 0x1291265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129055e90 '__SVFloat16_t'
|-TypedefDecl 0x129126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1291266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129055ed0 '__SVFloat64_t'
|-TypedefDecl 0x129126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x129126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1291267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x129126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1291268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x129126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x129126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1291269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x129126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x129126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x129126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x129126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x129126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x129126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129056090 '__clang_svint8x3_t'
|-TypedefDecl 0x129126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1290560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x129126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1290560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x129126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1290560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x129126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x129126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x129126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x129126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x129126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x129127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1290561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x129127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1290561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1291278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1290561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x129127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1291279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129056230 '__clang_svint16x4_t'
|-TypedefDecl 0x129127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129056250 '__clang_svint32x4_t'
|-TypedefDecl 0x129127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129056270 '__clang_svint64x4_t'
|-TypedefDecl 0x129127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x129127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1290562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x129127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1290562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x129127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1290562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x129127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x129127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x129127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x129127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x129127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129056390 '__SVBool_t'
|-TypedefDecl 0x129127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1290563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x129127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1290563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x129127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1290563f0 '__SVCount_t'
|-TypedefDecl 0x129127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x129127fb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-TypedefDecl 0x129128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x129127fb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-FunctionDecl 0x1291281a8 <dataset_diviso_filec/func18782_nonvuln.c:1:1, line:49:1> line:1:13 read_gitfile_gently 'const char *(const char *)'
| |-ParmVarDecl 0x1291280d8 <col:33, col:45> col:45 used path 'const char *'
| `-CompoundStmt 0x1291455b0 <line:2:1, line:49:1>
|   |-DeclStmt 0x129128320 <line:3:2, col:11>
|   | `-VarDecl 0x1291282b8 <col:2, col:8> col:8 used buf 'char *'
|   |-DeclStmt 0x1291283b8 <line:4:2, col:11>
|   | `-VarDecl 0x129128350 <col:2, col:8> col:8 used dir 'char *'
|   |-DeclStmt 0x129128450 <line:5:2, col:19>
|   | `-VarDecl 0x1291283e8 <col:2, col:14> col:14 used slash 'const char *'
|   |-DeclStmt 0x129140c28 <line:6:2, col:16>
|   | |-RecordDecl 0x129128468 <col:2, col:9> col:9 struct stat
|   | `-VarDecl 0x129128568 <col:2, col:14> col:14 invalid st 'struct stat'
|   |-DeclStmt 0x129140cc0 <line:7:2, col:8>
|   | `-VarDecl 0x129140c58 <col:2, col:6> col:6 used fd 'int'
|   |-UnaryExprOrTypeTraitExpr 0x129140d48 <line:8:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x129140d28 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x129140f70 <line:10:2, line:11:10>
|   | |-CallExpr 0x129140ef8 <line:10:6, col:20> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x129140e80 <col:6> 'int ()' Function 0x129140dc8 'stat' 'int ()'
|   | | |-DeclRefExpr 0x129140ea0 <col:11> 'const char *' lvalue ParmVar 0x1291280d8 'path' 'const char *'
|   | | `-UnaryOperator 0x129140ee0 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   `-RecoveryExpr 0x129140ec0 <col:18> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x129140f60 <line:11:3, col:10>
|   |   `-RecoveryExpr 0x129140f40 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x129141180 <line:12:2, line:13:10>
|   | |-UnaryOperator 0x129141120 <line:12:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x1291410f8 <col:7, col:25> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x129141070 <col:7> 'int ()' Function 0x129140fb8 'S_ISREG' 'int ()'
|   | |   `-CXXDependentScopeMemberExpr 0x1291410b0 <col:15, col:18> '<dependent type>' contains-errors lvalue .st_mode
|   | |     `-RecoveryExpr 0x129141090 <col:15> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x129141170 <line:13:3, col:10>
|   |   `-RecoveryExpr 0x129141150 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x129141398 <line:14:2, col:26> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1291411a0 <col:2> 'int' lvalue Var 0x129140c58 'fd' 'int'
|   | `-CallExpr 0x129141368 <col:7, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1291412a0 <col:7> 'int ()' Function 0x1291411e8 'open' 'int ()'
|   |   |-DeclRefExpr 0x1291412c0 <col:12> 'const char *' lvalue ParmVar 0x1291280d8 'path' 'const char *'
|   |   `-RecoveryExpr 0x129141348 <col:18> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x129141658 <line:15:2, line:16:24>
|   | |-BinaryOperator 0x129141410 <line:15:6, col:11> 'int' '<'
|   | | |-ImplicitCastExpr 0x1291413f8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1291413b8 <col:6> 'int' lvalue Var 0x129140c58 'fd' 'int'
|   | | `-IntegerLiteral 0x1291413d8 <col:11> 'int' 0
|   | `-CallExpr 0x1291415f8 <line:16:3, col:24> 'int'
|   |   |-ImplicitCastExpr 0x1291415e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x129141510 <col:3> 'int ()' Function 0x129141458 'die_errno' 'int ()'
|   |   |-ImplicitCastExpr 0x129141628 <col:13> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x129141570 <col:13> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x129141640 <col:20> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x129141590 <col:20> 'const char *' lvalue ParmVar 0x1291280d8 'path' 'const char *'
|   |-BinaryOperator 0x129141868 <line:17:2, col:30> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x129141678 <col:2> 'char *' lvalue Var 0x1291282b8 'buf' 'char *'
|   | `-CallExpr 0x129141840 <col:8, col:30> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x129141778 <col:8> 'int ()' Function 0x1291416c0 'xmalloc' 'int ()'
|   |   `-BinaryOperator 0x129141820 <col:16, col:29> '<dependent type>' contains-errors '+'
|   |     |-CXXDependentScopeMemberExpr 0x1291417b8 <col:16, col:19> '<dependent type>' contains-errors lvalue .st_size
|   |     | `-RecoveryExpr 0x129141798 <col:16> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x129141800 <col:29> 'int' 1
|   |-CallExpr 0x1291439b8 <line:19:2, col:10> 'int'
|   | |-ImplicitCastExpr 0x1291439a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x129143960 <col:2> 'int ()' Function 0x1291438a8 'close' 'int ()'
|   | `-ImplicitCastExpr 0x1291439e0 <col:8> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x129143980 <col:8> 'int' lvalue Var 0x129140c58 'fd' 'int'
|   |-IfStmt 0x129143c90 <line:20:2, line:21:18>
|   | |-BinaryOperator 0x129143ab8 <line:20:6, col:16> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x129143a98 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x129143a30 <col:13, col:16> '<dependent type>' contains-errors lvalue .st_size
|   | |   `-RecoveryExpr 0x129143a10 <col:13> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x129143c30 <line:21:3, col:18> 'int'
|   |   |-ImplicitCastExpr 0x129143c18 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x129143bb8 <col:3> 'int ()' Function 0x129143b00 'die' 'int ()'
|   |   |-ImplicitCastExpr 0x129143c60 <col:7> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x129143bd8 <col:7> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x129143c78 <col:14> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x129143bf8 <col:14> 'const char *' lvalue ParmVar 0x1291280d8 'path' 'const char *'
|   |-IfStmt 0x129143f90 <line:23:2, line:24:18>
|   | |-CallExpr 0x129143e58 <line:23:6, col:26> 'int'
|   | | |-ImplicitCastExpr 0x129143e40 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x129143de0 <col:6> 'int ()' Function 0x129143d28 'prefixcmp' 'int ()'
|   | | |-ImplicitCastExpr 0x129143e88 <col:16> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x129143e00 <col:16> 'char *' lvalue Var 0x1291282b8 'buf' 'char *'
|   | | `-ImplicitCastExpr 0x129143ea0 <col:21> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x129143e20 <col:21> 'char[4]' lvalue "STR"
|   | `-CallExpr 0x129143f30 <line:24:3, col:18> 'int'
|   |   |-ImplicitCastExpr 0x129143f18 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x129143eb8 <col:3> 'int ()' Function 0x129143b00 'die' 'int ()'
|   |   |-ImplicitCastExpr 0x129143f60 <col:7> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x129143ed8 <col:7> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x129143f78 <col:14> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x129143ef8 <col:14> 'const char *' lvalue ParmVar 0x1291280d8 'path' 'const char *'
|   |-IfStmt 0x129144208 <line:27:2, line:28:18>
|   | |-RecoveryExpr 0x129144110 <line:27:6, col:12> '_Bool' contains-errors
|   | `-CallExpr 0x1291441a8 <line:28:3, col:18> 'int'
|   |   |-ImplicitCastExpr 0x129144190 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x129144130 <col:3> 'int ()' Function 0x129143b00 'die' 'int ()'
|   |   |-ImplicitCastExpr 0x1291441d8 <col:7> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x129144150 <col:7> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x1291441f0 <col:14> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x129144170 <col:14> 'const char *' lvalue ParmVar 0x1291280d8 'path' 'const char *'
|   |-BinaryOperator 0x1291442f8 <line:30:2, col:14> 'char *' '='
|   | |-DeclRefExpr 0x129144260 <col:2> 'char *' lvalue Var 0x129128350 'dir' 'char *'
|   | `-BinaryOperator 0x1291442d8 <col:8, col:14> 'char *' '+'
|   |   |-ImplicitCastExpr 0x1291442c0 <col:8> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x129144280 <col:8> 'char *' lvalue Var 0x1291282b8 'buf' 'char *'
|   |   `-IntegerLiteral 0x1291442a0 <col:14> 'int' 8
|   |-IfStmt 0x129145028 <line:32:2, line:41:2>
|   | |-BinaryOperator 0x129144858 <line:32:6, col:59> 'int' '&&'
|   | | |-UnaryOperator 0x129144490 <col:6, col:27> 'int' prefix '!' cannot overflow
|   | | | `-CallExpr 0x129144450 <col:7, col:27> 'int'
|   | | |   |-ImplicitCastExpr 0x129144438 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x1291443f8 <col:7> 'int ()' Function 0x129144340 'is_absolute_path' 'int ()'
|   | | |   `-ImplicitCastExpr 0x129144478 <col:24> 'char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x129144418 <col:24> 'char *' lvalue Var 0x129128350 'dir' 'char *'
|   | | `-ParenExpr 0x129144838 <col:32, col:59> 'const char *'
|   | |   `-BinaryOperator 0x129144818 <col:33, col:58> 'const char *' '='
|   | |     |-DeclRefExpr 0x1291444a8 <col:33> 'const char *' lvalue Var 0x1291283e8 'slash' 'const char *'
|   | |     `-ImplicitCastExpr 0x129144800 <col:41, col:58> 'const char *' <NoOp>
|   | |       `-CallExpr 0x1291447a8 <col:41, col:58> 'char *'
|   | |         |-ImplicitCastExpr 0x129144790 <col:41> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |         | `-DeclRefExpr 0x1291446f0 <col:41> 'char *(const char *, int)' Function 0x129144510 'strrchr' 'char *(const char *, int)'
|   | |         |-ImplicitCastExpr 0x1291447d8 <col:49> 'const char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x129144710 <col:49> 'const char *' lvalue ParmVar 0x1291280d8 'path' 'const char *'
|   | |         `-CharacterLiteral 0x129144730 <col:55> 'int' 47
|   | `-CompoundStmt 0x129145008 <col:62, line:41:2>
|   |   |-CallExpr 0x129144f38 <line:39:3, col:11> 'void'
|   |   | |-ImplicitCastExpr 0x129144f20 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x129144e98 <col:3> 'void (void *)' Function 0x129144d28 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x129144f78 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x129144f60 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x129144eb8 <col:8> 'char *' lvalue Var 0x1291282b8 'buf' 'char *'
|   |   `-BinaryOperator 0x129144fe8 <line:40:3, col:9> 'char *' '='
|   |     |-DeclRefExpr 0x129144f90 <col:3> 'char *' lvalue Var 0x1291282b8 'buf' 'char *'
|   |     `-ImplicitCastExpr 0x129144fd0 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x129144fb0 <col:9> 'char *' lvalue Var 0x129128350 'dir' 'char *'
|   |-IfStmt 0x1291452b0 <line:43:2, line:44:17>
|   | |-UnaryOperator 0x1291451c0 <line:43:6, col:27> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x129145180 <col:7, col:27> 'int'
|   | |   |-ImplicitCastExpr 0x129145168 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x129145128 <col:7> 'int ()' Function 0x129145070 'is_git_directory' 'int ()'
|   | |   `-ImplicitCastExpr 0x1291451a8 <col:24> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x129145148 <col:24> 'char *' lvalue Var 0x129128350 'dir' 'char *'
|   | `-CallExpr 0x129145250 <line:44:3, col:17> 'int'
|   |   |-ImplicitCastExpr 0x129145238 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1291451d8 <col:3> 'int ()' Function 0x129143b00 'die' 'int ()'
|   |   |-ImplicitCastExpr 0x129145280 <col:7> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x1291451f8 <col:7> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x129145298 <col:14> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x129145218 <col:14> 'char *' lvalue Var 0x129128350 'dir' 'char *'
|   |-BinaryOperator 0x129145480 <line:45:2, col:31> 'const char *' '='
|   | |-DeclRefExpr 0x1291452d0 <col:2> 'const char *' lvalue ParmVar 0x1291280d8 'path' 'const char *'
|   | `-ImplicitCastExpr 0x129145468 <col:9, col:31> 'const char *' <IntegralToPointer>
|   |   `-CallExpr 0x129145428 <col:9, col:31> 'int'
|   |     |-ImplicitCastExpr 0x129145410 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1291453d0 <col:9> 'int ()' Function 0x129145318 'make_absolute_path' 'int ()'
|   |     `-ImplicitCastExpr 0x129145450 <col:28> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1291453f0 <col:28> 'char *' lvalue Var 0x129128350 'dir' 'char *'
|   |-CallExpr 0x129145510 <line:47:2, col:10> 'void'
|   | |-ImplicitCastExpr 0x1291454f8 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1291454a0 <col:2> 'void (void *)' Function 0x129144d28 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x129145550 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x129145538 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1291454c0 <col:7> 'char *' lvalue Var 0x1291282b8 'buf' 'char *'
|   `-ReturnStmt 0x1291455a0 <line:48:2, col:9>
|     `-ImplicitCastExpr 0x129145588 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x129145568 <col:9> 'const char *' lvalue ParmVar 0x1291280d8 'path' 'const char *'
|-FunctionDecl 0x129144510 <line:32:41> col:41 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x129144610 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x129144678 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1291445b8 <<invalid sloc>> Implicit 896
|-FunctionDecl 0x129144928 <line:36:3> col:3 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x129144a28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x129144a90 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x129144af8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1291449d0 <<invalid sloc>> Implicit 886
`-FunctionDecl 0x129144d28 <line:39:3> col:3 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x129144e28 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x129144dd0 <<invalid sloc>> Implicit 873
