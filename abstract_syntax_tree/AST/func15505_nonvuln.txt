TranslationUnitDecl 0x11e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e855bd0 '__int128'
|-TypedefDecl 0x11e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e855bf0 'unsigned __int128'
|-TypedefDecl 0x11f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x11e856580 '__NSConstantString_tag'
|-TypedefDecl 0x11f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e855d90 '__SVInt8_t'
|-TypedefDecl 0x11f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e855db0 '__SVInt16_t'
|-TypedefDecl 0x11f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e855dd0 '__SVInt32_t'
|-TypedefDecl 0x11f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e855df0 '__SVInt64_t'
|-TypedefDecl 0x11f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e855e10 '__SVUint8_t'
|-TypedefDecl 0x11f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e855e30 '__SVUint16_t'
|-TypedefDecl 0x11f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e855e50 '__SVUint32_t'
|-TypedefDecl 0x11f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e855e70 '__SVUint64_t'
|-TypedefDecl 0x11f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e855e90 '__SVFloat16_t'
|-TypedefDecl 0x11f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e856390 '__SVBool_t'
|-TypedefDecl 0x11f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e8563f0 '__SVCount_t'
|-TypedefDecl 0x11f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f00dbb0 'char *'
|   `-BuiltinType 0x11e8556b0 'char'
|-TypedefDecl 0x11f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f00dbb0 'char *'
|   `-BuiltinType 0x11e8556b0 'char'
|-FunctionDecl 0x11f00e168 <dataset_diviso_filec/func15505_nonvuln.c:1:1, line:68:1> line:1:1 invalid build_ecc_privkey_template 'int (int, int, const unsigned char *, int, unsigned char **, int *)'
| |-ParmVarDecl 0x11f00dcf0 <col:29, col:35> col:35 invalid app 'int'
| |-ParmVarDecl 0x11f00dd70 <col:40, col:44> col:44 used keyno 'int'
| |-ParmVarDecl 0x11f00de28 <line:2:29, col:50> col:50 used ecc_d 'const unsigned char *'
| |-ParmVarDecl 0x11f00dea8 <col:57, col:64> col:64 referenced invalid ecc_d_len 'int'
| |-ParmVarDecl 0x11f00df90 <line:3:29, col:45> col:45 used result 'unsigned char **'
| |-ParmVarDecl 0x11f00e048 <col:53, col:61> col:61 invalid resultlen 'int *'
| `-CompoundStmt 0x11e924650 <line:4:1, line:68:1>
|   |-DeclStmt 0x11f00e350 <line:5:3, col:27>
|   | `-VarDecl 0x11f00e2e8 <col:3, col:26> col:17 used privkey 'unsigned char[2]'
|   |-UnaryExprOrTypeTraitExpr 0x11f00e3c0 <line:6:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x11f00e3a0 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x11f027570 <line:7:3, col:30>
|   | `-VarDecl 0x11f027508 <col:3, col:29> col:17 used exthdr 'unsigned char[5]'
|   |-UnaryExprOrTypeTraitExpr 0x11f027600 <line:8:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x11f0275e0 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x11f027770 <line:9:3, col:28>
|   | `-VarDecl 0x11f027708 <col:3, col:27> col:17 used suffix 'unsigned char[3]'
|   |-UnaryExprOrTypeTraitExpr 0x11f0277e0 <line:10:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x11f0277c0 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x11f027880 <line:11:3, col:20>
|   | `-VarDecl 0x11f027818 <col:3, col:18> col:18 used tp 'unsigned char *'
|   |-UnaryExprOrTypeTraitExpr 0x11f0278f0 <line:12:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x11f0278d0 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x11f027990 <line:13:3, col:26>
|   | `-VarDecl 0x11f027928 <col:3, col:18> col:18 used template 'unsigned char *'
|   |-UnaryExprOrTypeTraitExpr 0x11f027a00 <line:14:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x11f0279e0 <col:10> '<dependent type>' contains-errors lvalue
|   |-CStyleCastExpr 0x11f027a68 <line:16:3, col:9> 'void' contains-errors <ToVoid>
|   | `-ImplicitCastExpr 0x11f027a50 <col:9> '<dependent type>' contains-errors <LValueToRValue> part_of_explicit_cast
|   |   `-RecoveryExpr 0x11f027a20 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11f027b98 <line:18:3, col:13> 'unsigned char *' contains-errors '='
|   | |-UnaryOperator 0x11f027b60 <col:3, col:4> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x11f027b48 <col:4> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11f027a90 <col:4> 'unsigned char **' lvalue ParmVar 0x11f00df90 'result' 'unsigned char **'
|   | `-RecoveryExpr 0x11f027b78 <col:13> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11f027c28 <line:19:3, col:16> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x11f027bf0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x11f027bd8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x11f027bb8 <col:4> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x11f027c08 <col:16> 'int' 0
|   |-BinaryOperator 0x11f027cc0 <line:23:3, col:8> 'unsigned char *' '='
|   | |-DeclRefExpr 0x11f027c68 <col:3> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x11f027ca8 <col:8> 'unsigned char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x11f027c88 <col:8> 'unsigned char[2]' lvalue Var 0x11f00e2e8 'privkey' 'unsigned char[2]'
|   |-CompoundAssignOperator 0x11f027f18 <line:25:3, col:37> 'unsigned char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-DeclRefExpr 0x11f027ce0 <col:3> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   | `-CallExpr 0x11f027ee0 <col:9, col:37> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11f027e60 <col:9> 'int ()' Function 0x11f027da8 'add_tlv' 'int ()'
|   |   |-DeclRefExpr 0x11f027e80 <col:18> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   |   |-IntegerLiteral 0x11f027ea0 <col:22> 'int' 145
|   |   `-RecoveryExpr 0x11f027ec0 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11f028050 <line:31:3, col:8> 'unsigned char *' '='
|   | |-DeclRefExpr 0x11f027ff8 <col:3> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x11f028038 <col:8> 'unsigned char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x11f028018 <col:8> 'unsigned char[5]' lvalue Var 0x11f027508 'exthdr' 'unsigned char[5]'
|   |-BinaryOperator 0x11f028288 <line:32:3, col:49> 'unsigned char' '='
|   | |-UnaryOperator 0x11f0280a8 <col:3, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x11f028090 <col:4, col:6> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x11f028070 <col:4> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x11f028270 <col:11, col:49> 'unsigned char' <IntegralCast>
|   |   `-ConditionalOperator 0x11f028240 <col:11, col:49> 'int'
|   |     |-BinaryOperator 0x11f028118 <col:11, col:19> 'int' '=='
|   |     | |-ImplicitCastExpr 0x11f028100 <col:11> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x11f0280c0 <col:11> 'int' lvalue ParmVar 0x11f00dd70 'keyno' 'int'
|   |     | `-IntegerLiteral 0x11f0280e0 <col:19> 'int' 0
|   |     |-IntegerLiteral 0x11f028138 <col:23> 'int' 182
|   |     `-ConditionalOperator 0x11f028210 <col:30, col:49> 'int'
|   |       |-BinaryOperator 0x11f0281b0 <col:30, col:39> 'int' '=='
|   |       | |-ImplicitCastExpr 0x11f028198 <col:30> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x11f028158 <col:30> 'int' lvalue ParmVar 0x11f00dd70 'keyno' 'int'
|   |       | `-IntegerLiteral 0x11f028178 <col:39> 'int' 1
|   |       |-IntegerLiteral 0x11f0281d0 <col:42> 'int' 184
|   |       `-IntegerLiteral 0x11f0281f0 <col:49> 'int' 164
|   |-BinaryOperator 0x11f028330 <line:33:3, col:11> 'unsigned char' '='
|   | |-UnaryOperator 0x11f0282e0 <col:3, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x11f0282c8 <col:4, col:6> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x11f0282a8 <col:4> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x11f028318 <col:11> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x11f0282f8 <col:11> 'int' 0
|   |-CompoundAssignOperator 0x11e922ec0 <line:34:3, col:41> 'unsigned char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-DeclRefExpr 0x11f028350 <col:3> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   | `-CallExpr 0x11e922e88 <col:9, col:41> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11f028370 <col:9> 'int ()' Function 0x11f027da8 'add_tlv' 'int ()'
|   |   |-DeclRefExpr 0x11f028390 <col:18> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   |   |-IntegerLiteral 0x11f0283b0 <col:22> 'int' 32584
|   |   `-RecoveryExpr 0x11e922e68 <col:30> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11e922fd8 <line:38:3, col:8> 'unsigned char *' '='
|   | |-DeclRefExpr 0x11e922f80 <col:3> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x11e922fc0 <col:8> 'unsigned char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x11e922fa0 <col:8> 'unsigned char[3]' lvalue Var 0x11f027708 'suffix' 'unsigned char[3]'
|   |-IfStmt 0x11e923478 <line:49:3, line:50:37>
|   | |-UnaryOperator 0x11e9232e0 <line:49:7, col:8> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x11e9232c8 <col:8> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11e9232a8 <col:8> 'unsigned char *' lvalue Var 0x11f027928 'template' 'unsigned char *'
|   | `-ReturnStmt 0x11e923468 <line:50:5, col:37>
|   |   `-CallExpr 0x11e923448 <col:12, col:37> 'int'
|   |     `-ImplicitCastExpr 0x11e923430 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x11e9233d8 <col:12> 'int ()' Function 0x11e923320 'gpg_error_from_syserror' 'int ()'
|   |-CallExpr 0x11e923a30 <line:60:3, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x11e923968 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x11e923598 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-DeclRefExpr 0x11e923988 <col:11> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   | |-DeclRefExpr 0x11e9239a8 <col:15> 'const unsigned char *' lvalue ParmVar 0x11f00de28 'ecc_d' 'const unsigned char *'
|   | `-RecoveryExpr 0x11e9239c8 <col:22> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x11e923aa8 <line:61:3, col:9> 'unsigned char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-DeclRefExpr 0x11e923a68 <col:3> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   | `-RecoveryExpr 0x11e923a88 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11e923cf0 <line:65:3, col:13> 'unsigned char *' '='
|   | |-UnaryOperator 0x11e923ca0 <col:3, col:4> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x11e923c88 <col:4> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11e923c68 <col:4> 'unsigned char **' lvalue ParmVar 0x11f00df90 'result' 'unsigned char **'
|   | `-ImplicitCastExpr 0x11e923cd8 <col:13> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x11e923cb8 <col:13> 'unsigned char *' lvalue Var 0x11f027928 'template' 'unsigned char *'
|   |-BinaryOperator 0x11e924600 <line:66:3, col:21> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x11e923d48 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x11e923d30 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x11e923d10 <col:4> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x11e923dd0 <col:16, col:21> 'long' '-'
|   |   |-ImplicitCastExpr 0x11e923da0 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x11e923d60 <col:16> 'unsigned char *' lvalue Var 0x11f027818 'tp' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x11e923db8 <col:21> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x11e923d80 <col:21> 'unsigned char *' lvalue Var 0x11f027928 'template' 'unsigned char *'
|   `-ReturnStmt 0x11e924640 <line:67:3, col:10>
|     `-IntegerLiteral 0x11e924620 <col:10> 'int' 0
`-FunctionDecl 0x11e923598 <line:53:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x11e923698 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x11e923700 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x11e923768 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x11e923640 <<invalid sloc>> Implicit 882
