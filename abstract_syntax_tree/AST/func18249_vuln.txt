TranslationUnitDecl 0x158855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1588564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158855bd0 '__int128'
|-TypedefDecl 0x158856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158855bf0 'unsigned __int128'
|-TypedefDecl 0x1590b3230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1590b3000 'struct __NSConstantString_tag'
|   `-Record 0x158856580 '__NSConstantString_tag'
|-TypedefDecl 0x1590b3298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158855d90 '__SVInt8_t'
|-TypedefDecl 0x1590b3300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158855db0 '__SVInt16_t'
|-TypedefDecl 0x1590b3368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158855dd0 '__SVInt32_t'
|-TypedefDecl 0x1590b33d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158855df0 '__SVInt64_t'
|-TypedefDecl 0x1590b3438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158855e10 '__SVUint8_t'
|-TypedefDecl 0x1590b34a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158855e30 '__SVUint16_t'
|-TypedefDecl 0x1590b3508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158855e50 '__SVUint32_t'
|-TypedefDecl 0x1590b3570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158855e70 '__SVUint64_t'
|-TypedefDecl 0x1590b35d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158855e90 '__SVFloat16_t'
|-TypedefDecl 0x1590b3640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1590b36a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158855ed0 '__SVFloat64_t'
|-TypedefDecl 0x1590b3710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x1590b3778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1590b37e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x1590b3848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1590b38b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x1590b3918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1590b3980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1590b39e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1590b3a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1590b3ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1590b3b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1590b3b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1590b3bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1590b3c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1590b3cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1588560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x1590b3d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1588560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x1590b3d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1588560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1590b3df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x1590b3e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1590b3ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x1590b3f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x1590b3f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1590b4800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1588561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1590b4868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1588561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1590b48d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1588561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1590b4938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1590b49a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158856230 '__clang_svint16x4_t'
|-TypedefDecl 0x1590b4a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158856250 '__clang_svint32x4_t'
|-TypedefDecl 0x1590b4a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1590b4ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x1590b4b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1588562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1590b4ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1588562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1590b4c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1588562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1590b4c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1590b4ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1590b4d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1590b4db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1590b4e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158856390 '__SVBool_t'
|-TypedefDecl 0x1590b4e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1588563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1590b4ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1588563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1590b4f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1588563f0 '__SVCount_t'
|-TypedefDecl 0x1590b4ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1590b4fb0 'char *'
|   `-BuiltinType 0x1588556b0 'char'
|-TypedefDecl 0x1590b5068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1590b4fb0 'char *'
|   `-BuiltinType 0x1588556b0 'char'
|-FunctionDecl 0x1590b51f8 <dataset_diviso_filec/func18249_vuln.c:1:1, line:66:1> line:1:1 invalid ambsdtar_selfcheck 'int (int *)'
| |-ParmVarDecl 0x1590b5128 <line:2:5, col:29> col:29 invalid argument 'int *'
| `-CompoundStmt 0x158842cd8 <line:3:1, line:66:1>
|   |-IfStmt 0x1590cea60 <line:4:5, line:8:5>
|   | |-CXXDependentScopeMemberExpr 0x1590b5310 <line:4:9, col:23> '<dependent type>' contains-errors lvalue .disk
|   | | `-CXXDependentScopeMemberExpr 0x1590b52c8 <col:9, col:19> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x1590b52a8 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1590cea38 <col:29, line:8:5>
|   |   |-DeclStmt 0x1590b5628 <line:5:2, col:48>
|   |   | `-VarDecl 0x1590b5370 <col:2, col:47> col:8 used qdisk 'char *' cinit
|   |   |   `-CallExpr 0x1590b5600 <col:16, col:47> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x1590b5530 <col:16> 'int ()' Function 0x1590b5478 'quote_string' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x1590b55b8 <col:29, col:43> '<dependent type>' contains-errors lvalue .disk
|   |   |       `-CXXDependentScopeMemberExpr 0x1590b5570 <col:29, col:39> '<dependent type>' contains-errors lvalue ->dle
|   |   |         `-RecoveryExpr 0x1590b5550 <col:29> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x1590ce858 <line:6:2, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1590b5720 <col:2> 'int ()' Function 0x1590b5668 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x1590ce838 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x1590b57a0 <col:18> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x1590b57c0 <col:25> 'char *' contains-errors lvalue Var 0x1590b5370 'qdisk' 'char *'
|   |   `-CallExpr 0x1590ce9f8 <line:7:2, col:14> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x1590ce9e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1590ce970 <col:2> 'int ()' Function 0x1590ce8b8 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x1590cea20 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x1590ce990 <col:9> 'char *' contains-errors lvalue Var 0x1590b5370 'qdisk' 'char *'
|   |-CallExpr 0x1590cf160 <line:10:5, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1590cf088 <col:5> 'int (const char *, ...)' Function 0x1590ceee0 'printf' 'int (const char *, ...)'
|   | |-StringLiteral 0x1590cf0a8 <col:12> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x1590cf128 <col:19> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1590cf460 <line:11:5, col:71> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1590cf270 <col:5> 'int ()' Function 0x1590cf1b8 'ambsdtar_build_exinclude' 'int ()'
|   | |-UnaryOperator 0x1590cf2f8 <col:30, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x1590cf2b0 <col:31, col:41> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x1590cf290 <col:31> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x1590cf310 <col:46> 'int' 1
|   | |-RecoveryExpr 0x1590cf3e0 <col:49> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x1590cf400 <col:55> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x1590cf420 <col:61> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x1590cf440 <col:67> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1590cf558 <line:13:5, col:17> 'int'
|   | |-ImplicitCastExpr 0x1590cf540 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1590cf4b0 <col:5> 'int (const char *, ...)' Function 0x1590ceee0 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x1590cf598 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1590cf580 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1590cf4d0 <col:12> 'char[4]' lvalue "STR"
|   |-IfStmt 0x158841ee8 <line:14:5, line:41:5> has_else
|   | |-RecoveryExpr 0x1590cf5c8 <line:14:9> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x158841da8 <col:22, line:39:5>
|   | | `-IfStmt 0x158841d88 <line:15:2, line:38:2>
|   | |   |-CallExpr 0x1590cf788 <line:15:6, col:34> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x1590cf6c8 <col:6> 'int ()' Function 0x1590cf610 'check_file' 'int ()'
|   | |   | |-RecoveryExpr 0x1590cf748 <col:17> '<dependent type>' contains-errors lvalue
|   | |   | `-RecoveryExpr 0x1590cf768 <col:30> '<dependent type>' contains-errors lvalue
|   | |   `-CompoundStmt 0x158841d70 <col:37, line:38:2>
|   | |     `-IfStmt 0x158841d50 <line:16:6, line:37:6>
|   | |       |-CallExpr 0x15a809378 <line:16:10, col:47> '<dependent type>' contains-errors
|   | |       | |-DeclRefExpr 0x15a8092b8 <col:10> 'int ()' Function 0x15a809200 'check_exec_for_suid' 'int ()'
|   | |       | |-RecoveryExpr 0x15a809338 <col:30> '<dependent type>' contains-errors lvalue
|   | |       | `-RecoveryExpr 0x15a809358 <col:43> '<dependent type>' contains-errors lvalue
|   | |       `-CompoundStmt 0x158841d28 <col:50, line:37:6>
|   | |         |-DeclStmt 0x15a809428 <line:17:3, col:23>
|   | |         | `-VarDecl 0x15a8093c0 <col:3, col:9> col:9 used bsdtar_version 'char *'
|   | |         |-IfStmt 0x158841b60 <line:25:3, line:33:3> has_else
|   | |         | |-ImplicitCastExpr 0x15a809818 <line:25:7> 'char *' <LValueToRValue>
|   | |         | | `-DeclRefExpr 0x15a8097f8 <col:7> 'char *' lvalue Var 0x15a8093c0 'bsdtar_version' 'char *'
|   | |         | |-CompoundStmt 0x15a80a140 <col:23, line:31:3>
|   | |         | | |-DeclStmt 0x15a809948 <line:26:7, col:20>
|   | |         | | | |-VarDecl 0x15a809848 <col:7, col:13> col:13 used tv 'char *'
|   | |         | | | `-VarDecl 0x15a8098c8 <col:7, col:18> col:18 used bv 'char *'
|   | |         | | |-ForStmt 0x15a809c90 <line:27:7, col:68>
|   | |         | | | |-BinaryOperator 0x15a8099b8 <col:12, col:17> 'char *' '='
|   | |         | | | | |-DeclRefExpr 0x15a809960 <col:12> 'char *' lvalue Var 0x15a809848 'tv' 'char *'
|   | |         | | | | `-ImplicitCastExpr 0x15a8099a0 <col:17> 'char *' <LValueToRValue>
|   | |         | | | |   `-DeclRefExpr 0x15a809980 <col:17> 'char *' lvalue Var 0x15a8093c0 'bsdtar_version' 'char *'
|   | |         | | | |-<<<NULL>>>
|   | |         | | | |-BinaryOperator 0x15a809c30 <col:33, col:60> 'int' '&&'
|   | |         | | | | |-ImplicitCastExpr 0x15a809c18 <col:33, col:34> 'int' <IntegralCast>
|   | |         | | | | | `-ImplicitCastExpr 0x15a809c00 <col:33, col:34> 'char' <LValueToRValue>
|   | |         | | | | |   `-UnaryOperator 0x15a809a10 <col:33, col:34> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | | |     `-ImplicitCastExpr 0x15a8099f8 <col:34> 'char *' <LValueToRValue>
|   | |         | | | | |       `-DeclRefExpr 0x15a8099d8 <col:34> 'char *' lvalue Var 0x15a809848 'tv' 'char *'
|   | |         | | | | `-UnaryOperator 0x15a809be8 <col:40, col:60> 'int' prefix '!' cannot overflow
|   | |         | | | |   `-CallExpr 0x15a809b90 <col:41, col:60> 'int'
|   | |         | | | |     |-ImplicitCastExpr 0x15a809b78 <col:41> 'int (*)()' <FunctionToPointerDecay>
|   | |         | | | |     | `-DeclRefExpr 0x15a809b08 <col:41> 'int ()' Function 0x15a809a50 'g_ascii_isdigit' 'int ()'
|   | |         | | | |     `-ImplicitCastExpr 0x15a809bd0 <col:57, col:58> 'int' <IntegralCast>
|   | |         | | | |       `-ImplicitCastExpr 0x15a809bb8 <col:57, col:58> 'char' <LValueToRValue>
|   | |         | | | |         `-UnaryOperator 0x15a809b60 <col:57, col:58> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | |           `-ImplicitCastExpr 0x15a809b48 <col:58> 'char *' <LValueToRValue>
|   | |         | | | |             `-DeclRefExpr 0x15a809b28 <col:58> 'char *' lvalue Var 0x15a809848 'tv' 'char *'
|   | |         | | | |-UnaryOperator 0x15a809c70 <col:63, col:65> 'char *' postfix '++'
|   | |         | | | | `-DeclRefExpr 0x15a809c50 <col:63> 'char *' lvalue Var 0x15a809848 'tv' 'char *'
|   | |         | | | `-NullStmt 0x15a809c88 <col:68>
|   | |         | | |-ForStmt 0x15a809ed8 <line:28:7, col:45>
|   | |         | | | |-BinaryOperator 0x15a809d20 <col:12, col:17> 'char *' '='
|   | |         | | | | |-DeclRefExpr 0x15a809cc8 <col:12> 'char *' lvalue Var 0x15a8098c8 'bv' 'char *'
|   | |         | | | | `-ImplicitCastExpr 0x15a809d08 <col:17> 'char *' <LValueToRValue>
|   | |         | | | |   `-DeclRefExpr 0x15a809ce8 <col:17> 'char *' lvalue Var 0x15a809848 'tv' 'char *'
|   | |         | | | |-<<<NULL>>>
|   | |         | | | |-BinaryOperator 0x15a809e78 <col:21, col:35> 'int' '&&'
|   | |         | | | | |-ImplicitCastExpr 0x15a809e60 <col:21, col:22> 'int' <IntegralCast>
|   | |         | | | | | `-ImplicitCastExpr 0x15a809e48 <col:21, col:22> 'char' <LValueToRValue>
|   | |         | | | | |   `-UnaryOperator 0x15a809d78 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | | |     `-ImplicitCastExpr 0x15a809d60 <col:22> 'char *' <LValueToRValue>
|   | |         | | | | |       `-DeclRefExpr 0x15a809d40 <col:22> 'char *' lvalue Var 0x15a8098c8 'bv' 'char *'
|   | |         | | | | `-BinaryOperator 0x15a809e28 <col:28, col:35> 'int' '!='
|   | |         | | | |   |-ImplicitCastExpr 0x15a809e10 <col:28, col:29> 'int' <IntegralCast>
|   | |         | | | |   | `-ImplicitCastExpr 0x15a809df8 <col:28, col:29> 'char' <LValueToRValue>
|   | |         | | | |   |   `-UnaryOperator 0x15a809dc8 <col:28, col:29> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | |   |     `-ImplicitCastExpr 0x15a809db0 <col:29> 'char *' <LValueToRValue>
|   | |         | | | |   |       `-DeclRefExpr 0x15a809d90 <col:29> 'char *' lvalue Var 0x15a8098c8 'bv' 'char *'
|   | |         | | | |   `-CharacterLiteral 0x15a809de0 <col:35> 'int' 32
|   | |         | | | |-UnaryOperator 0x15a809eb8 <col:40, col:42> 'char *' postfix '++'
|   | |         | | | | `-DeclRefExpr 0x15a809e98 <col:40> 'char *' lvalue Var 0x15a8098c8 'bv' 'char *'
|   | |         | | | `-NullStmt 0x15a809ed0 <col:45>
|   | |         | | |-IfStmt 0x15a80a018 <line:29:7, col:22>
|   | |         | | | |-ImplicitCastExpr 0x15a809f60 <col:11, col:12> 'char' <LValueToRValue>
|   | |         | | | | `-UnaryOperator 0x15a809f48 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
|   | |         | | | |   `-ImplicitCastExpr 0x15a809f30 <col:12> 'char *' <LValueToRValue>
|   | |         | | | |     `-DeclRefExpr 0x15a809f10 <col:12> 'char *' lvalue Var 0x15a8098c8 'bv' 'char *'
|   | |         | | | `-BinaryOperator 0x15a809ff8 <col:16, col:22> 'char' '='
|   | |         | | |   |-UnaryOperator 0x15a809fb0 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
|   | |         | | |   | `-ImplicitCastExpr 0x15a809f98 <col:17> 'char *' <LValueToRValue>
|   | |         | | |   |   `-DeclRefExpr 0x15a809f78 <col:17> 'char *' lvalue Var 0x15a8098c8 'bv' 'char *'
|   | |         | | |   `-ImplicitCastExpr 0x15a809fe0 <col:22> 'char' <IntegralCast>
|   | |         | | |     `-CharacterLiteral 0x15a809fc8 <col:22> 'int' 0
|   | |         | | `-CallExpr 0x15a80a0c8 <line:30:7, col:23> 'int'
|   | |         | |   |-ImplicitCastExpr 0x15a80a0b0 <col:7> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |         | |   | `-DeclRefExpr 0x15a80a038 <col:7> 'int (const char *, ...)' Function 0x1590ceee0 'printf' 'int (const char *, ...)'
|   | |         | |   |-ImplicitCastExpr 0x15a80a110 <col:14> 'const char *' <NoOp>
|   | |         | |   | `-ImplicitCastExpr 0x15a80a0f8 <col:14> 'char *' <ArrayToPointerDecay>
|   | |         | |   |   `-StringLiteral 0x15a80a058 <col:14> 'char[4]' lvalue "STR"
|   | |         | |   `-ImplicitCastExpr 0x15a80a128 <col:21> 'char *' <LValueToRValue>
|   | |         | |     `-DeclRefExpr 0x15a80a078 <col:21> 'char *' lvalue Var 0x15a809848 'tv' 'char *'
|   | |         | `-CompoundStmt 0x158841b50 <line:31:10, line:33:3>
|   | |         `-CallExpr 0x158841ce8 <line:36:3, col:24> 'int'
|   | |           |-ImplicitCastExpr 0x158841cd0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | |           | `-DeclRefExpr 0x158841c90 <col:3> 'int ()' Function 0x1590ce8b8 'amfree' 'int ()'
|   | |           `-ImplicitCastExpr 0x158841d10 <col:10> 'char *' <LValueToRValue>
|   | |             `-DeclRefExpr 0x158841cb0 <col:10> 'char *' lvalue Var 0x15a8093c0 'bsdtar_version' 'char *'
|   | `-CompoundStmt 0x158841ed0 <line:39:12, line:41:5>
|   |   `-CallExpr 0x158841e90 <line:40:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x158841e78 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x158841dc0 <col:2> 'int (const char *, ...)' Function 0x1590ceee0 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x158841eb8 <col:9, col:16> 'const char *' <IntegralToPointer>
|   |       `-CallExpr 0x158841e38 <col:9, col:16> 'int'
|   |         |-ImplicitCastExpr 0x158841e20 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x158841de0 <col:9> 'int ()' Function 0x158841a00 '_' 'int ()'
|   |         `-ImplicitCastExpr 0x158841e60 <col:11> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x158841e00 <col:11> 'char[4]' lvalue "STR"
|   |-CallExpr 0x158842050 <line:43:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x158842038 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x158841ff8 <col:5> 'int ()' Function 0x158841f40 'set_root_privs' 'int ()'
|   | `-IntegerLiteral 0x158842018 <col:20> 'int' 1
|   |-IfStmt 0x1588424e0 <line:46:5, line:50:5> has_else
|   | |-RecoveryExpr 0x158842288 <line:46:9> '_Bool' contains-errors
|   | |-CompoundStmt 0x1588423a8 <col:20, line:48:5>
|   | `-CompoundStmt 0x1588424c8 <col:12, line:50:5>
|   |   `-CallExpr 0x158842488 <line:49:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x158842470 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1588423b8 <col:2> 'int (const char *, ...)' Function 0x1590ceee0 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x1588424b0 <col:9, col:16> 'const char *' <IntegralToPointer>
|   |       `-CallExpr 0x158842430 <col:9, col:16> 'int'
|   |         |-ImplicitCastExpr 0x158842418 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x1588423d8 <col:9> 'int ()' Function 0x158841a00 '_' 'int ()'
|   |         `-ImplicitCastExpr 0x158842458 <col:11> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x1588423f8 <col:11> 'char[4]' lvalue "STR"
|   |-IfStmt 0x158842710 <line:52:5, line:56:5> has_else
|   | |-RecoveryExpr 0x158842510 <line:52:9> '_Bool' contains-errors
|   | |-CompoundStmt 0x158842550 <col:27, line:54:5>
|   | `-IfStmt 0x1588426f0 <col:12, line:56:5>
|   |   |-CXXDependentScopeMemberExpr 0x1588425c8 <line:54:16, col:30> '<dependent type>' contains-errors lvalue .device
|   |   | `-CXXDependentScopeMemberExpr 0x158842580 <col:16, col:26> '<dependent type>' contains-errors lvalue ->dle
|   |   |   `-RecoveryExpr 0x158842560 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x1588426e0 <col:38, line:56:5>
|   |-IfStmt 0x158842c38 <line:58:5, line:64:5>
|   | |-CXXDependentScopeMemberExpr 0x158842760 <line:58:9, col:19> '<dependent type>' contains-errors lvalue ->calcsize
|   | | `-RecoveryExpr 0x158842740 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x158842c10 <col:29, line:64:5>
|   |   |-DeclStmt 0x158842948 <line:59:2, col:61>
|   |   | `-VarDecl 0x1588427c0 <col:2, col:8> col:8 used calcsize 'char *'
|   |   |-CallExpr 0x158842b38 <line:62:2, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x158842b20 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x158842ae0 <col:2> 'int ()' Function 0x158842a28 'check_suid' 'int ()'
|   |   | `-ImplicitCastExpr 0x158842b60 <col:13> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x158842b00 <col:13> 'char *' lvalue Var 0x1588427c0 'calcsize' 'char *'
|   |   `-CallExpr 0x158842bd0 <line:63:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x158842bb8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x158842b78 <col:2> 'int ()' Function 0x1590ce8b8 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x158842bf8 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x158842b98 <col:9> 'char *' lvalue Var 0x1588427c0 'calcsize' 'char *'
|   `-CallExpr 0x158842cb0 <line:65:5, col:21> 'int'
|     |-ImplicitCastExpr 0x158842c98 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x158842c58 <col:5> 'int ()' Function 0x158841f40 'set_root_privs' 'int ()'
|     `-IntegerLiteral 0x158842c78 <col:20> 'int' 0
|-FunctionDecl 0x1590ceee0 <line:10:5> col:5 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1590cefe0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x1590cef88 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x1590cf050 <col:5> Implicit printf 1 2
`-FunctionDecl 0x1588420b8 <line:44:22> col:22 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x1588421b8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x158842160 <<invalid sloc>> Implicit 902
