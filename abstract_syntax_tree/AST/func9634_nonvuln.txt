TranslationUnitDecl 0x130055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130055bd0 '__int128'
|-TypedefDecl 0x130056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130055bf0 'unsigned __int128'
|-TypedefDecl 0x12800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12800bc00 'struct __NSConstantString_tag'
|   `-Record 0x130056580 '__NSConstantString_tag'
|-TypedefDecl 0x12800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130055d90 '__SVInt8_t'
|-TypedefDecl 0x12800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130055db0 '__SVInt16_t'
|-TypedefDecl 0x12800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130055dd0 '__SVInt32_t'
|-TypedefDecl 0x12800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130055df0 '__SVInt64_t'
|-TypedefDecl 0x12800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130055e10 '__SVUint8_t'
|-TypedefDecl 0x12800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130055e30 '__SVUint16_t'
|-TypedefDecl 0x12800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130055e50 '__SVUint32_t'
|-TypedefDecl 0x12800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130055e70 '__SVUint64_t'
|-TypedefDecl 0x12800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130055e90 '__SVFloat16_t'
|-TypedefDecl 0x12800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1300560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1300560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1300560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1300561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1300561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1300561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130056390 '__SVBool_t'
|-TypedefDecl 0x12800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300563f0 '__SVCount_t'
|-TypedefDecl 0x12800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-TypedefDecl 0x12800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-FunctionDecl 0x12800df78 <dataset_diviso_filec/func9634_nonvuln.c:1:1, line:33:1> line:1:5 invalid avahi_mdns_mcast_join_ipv4 'int (int, const int *, int, int)'
| |-ParmVarDecl 0x12800dcd8 <col:32, col:36> col:36 used fd 'int'
| |-ParmVarDecl 0x12800dd70 <col:40, col:64> col:64 invalid a 'const int *'
| |-ParmVarDecl 0x12800ddf0 <col:67, col:71> col:71 used idx 'int'
| |-ParmVarDecl 0x12800de70 <col:76, col:80> col:80 used join 'int'
| `-CompoundStmt 0x12802a5e8 <col:86, line:33:1>
|   |-DeclStmt 0x1280275f8 <line:5:5, col:24>
|   | |-RecordDecl 0x12800e040 <col:5, col:12> col:12 struct ip_mreq
|   | `-VarDecl 0x12800e138 <col:5, col:20> col:20 referenced invalid mreq 'struct ip_mreq'
|   |-DeclStmt 0x128027788 <line:7:5, col:26>
|   | |-RecordDecl 0x128027610 <col:5, col:12> col:12 struct sockaddr_in
|   | `-VarDecl 0x128027708 <col:5, col:24> col:24 invalid sa 'struct sockaddr_in'
|   |-CallExpr 0x1280279e8 <line:9:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x1280279d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128027900 <col:5> 'int ()' Function 0x128027848 'assert' 'int ()'
|   | `-BinaryOperator 0x128027978 <col:12, col:18> 'int' '>='
|   |   |-ImplicitCastExpr 0x128027960 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x128027920 <col:12> 'int' lvalue ParmVar 0x12800dcd8 'fd' 'int'
|   |   `-IntegerLiteral 0x128027940 <col:18> 'int' 0
|   |-CallExpr 0x128027ac0 <line:10:5, col:20> 'int'
|   | |-ImplicitCastExpr 0x128027aa8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128027a10 <col:5> 'int ()' Function 0x128027848 'assert' 'int ()'
|   | `-BinaryOperator 0x128027a88 <col:12, col:19> 'int' '>='
|   |   |-ImplicitCastExpr 0x128027a70 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x128027a30 <col:12> 'int' lvalue ParmVar 0x12800ddf0 'idx' 'int'
|   |   `-IntegerLiteral 0x128027a50 <col:19> 'int' 0
|   |-CallExpr 0x128027b28 <line:11:5, col:13> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128027ae8 <col:5> 'int ()' Function 0x128027848 'assert' 'int ()'
|   | `-RecoveryExpr 0x128027b08 <col:12> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x128027ec0 <line:13:5, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128027de8 <col:5> 'void *(void *, int, unsigned long)' Function 0x128027b98 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x128027e28 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x128027e08 <col:13> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x128027e40 <col:19> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x128027ea0 <col:22, col:33> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x128027e80 <col:28, col:33> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x128027e60 <col:29> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x128028038 <line:18:5, col:36> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x128027f88 <col:5, col:24> '<dependent type>' contains-errors lvalue .s_addr
|   | | `-CXXDependentScopeMemberExpr 0x128027f40 <col:5, col:10> '<dependent type>' contains-errors lvalue .imr_interface
|   | |   `-RecoveryExpr 0x128027f18 <col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x128027ef8 <col:5> 'struct ip_mreq' lvalue Var 0x12800e138 'mreq' 'struct ip_mreq'
|   | `-CXXDependentScopeMemberExpr 0x128027ff0 <col:33, col:36> '<dependent type>' contains-errors lvalue ->address
|   |   `-RecoveryExpr 0x128027fd0 <col:33> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x128028190 <line:20:5, col:30> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128028138 <col:5> 'int ()' Function 0x128028080 'mdns_mcast_group_ipv4' 'int ()'
|   | `-UnaryOperator 0x128028178 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x128028158 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1280282b0 <line:21:5, col:29> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x128028200 <col:5, col:10> '<dependent type>' contains-errors lvalue .imr_multiaddr
|   | | `-RecoveryExpr 0x1280281d8 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1280281b8 <col:5> 'struct ip_mreq' lvalue Var 0x12800e138 'mreq' 'struct ip_mreq'
|   | `-CXXDependentScopeMemberExpr 0x128028268 <col:26, col:29> '<dependent type>' contains-errors lvalue .sin_addr
|   |   `-RecoveryExpr 0x128028248 <col:26> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x128029dd8 <line:24:5, line:25:75>
|   | |-ImplicitCastExpr 0x1280282f0 <line:24:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1280282d0 <col:9> 'int' lvalue ParmVar 0x12800de70 'join' 'int'
|   | `-CallExpr 0x128029d90 <line:25:9, col:75> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x128029c00 <col:9> 'int ()' Function 0x128028330 'setsockopt' 'int ()'
|   |   |-DeclRefExpr 0x128029c20 <col:20> 'int' lvalue ParmVar 0x12800dcd8 'fd' 'int'
|   |   |-RecoveryExpr 0x128029d50 <col:24> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x128029d70 <col:36> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x128029c90 <col:56, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x128029c70 <col:57> '<dependent type>' contains-errors lvalue
|   |   `-UnaryExprOrTypeTraitExpr 0x128029ce8 <col:63, col:74> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x128029cc8 <col:69, col:74> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x128029ca8 <col:70> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12802a598 <line:27:5, line:30:5>
|   | |-BinaryOperator 0x12802a0c8 <line:27:9, col:106> 'int' contains-errors '<'
|   | | |-CallExpr 0x12802a080 <col:9, col:102> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x128029df8 <col:9> 'int ()' Function 0x128028330 'setsockopt' 'int ()'
|   | | | |-DeclRefExpr 0x128029e18 <col:20> 'int' lvalue ParmVar 0x12800dcd8 'fd' 'int'
|   | | | |-RecoveryExpr 0x128029ff0 <col:24> '<dependent type>' contains-errors lvalue
|   | | | |-ConditionalOperator 0x12802a050 <col:36, col:63> '<dependent type>' contains-errors
|   | | | | |-DeclRefExpr 0x128029e50 <col:36> 'int' lvalue ParmVar 0x12800de70 'join' 'int'
|   | | | | |-RecoveryExpr 0x12802a010 <col:43> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x12802a030 <col:63> '<dependent type>' contains-errors lvalue
|   | | | |-UnaryOperator 0x128029ef0 <col:83, col:84> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x128029ed0 <col:84> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryExprOrTypeTraitExpr 0x128029f48 <col:90, col:101> 'unsigned long' contains-errors sizeof
|   | | |   `-ParenExpr 0x128029f28 <col:96, col:101> '<dependent type>' contains-errors lvalue
|   | | |     `-RecoveryExpr 0x128029f08 <col:97> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x128029fb0 <col:106> 'int' 0
|   | `-CompoundStmt 0x12802a578 <col:109, line:30:5>
|   |   |-CallExpr 0x12802a500 <line:28:9, col:46> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12802a1c8 <col:9> 'int ()' Function 0x12802a110 'avahi_log_warn' 'int ()'
|   |   | |-StringLiteral 0x12802a230 <col:24> 'char[4]' lvalue "STR"
|   |   | `-CallExpr 0x12802a4d8 <col:31, col:45> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12802a3f8 <col:31> 'char *(int)' Function 0x12802a288 'strerror' 'char *(int)'
|   |   |   `-RecoveryExpr 0x12802a4a0 <col:40> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x12802a568 <line:29:9, col:17>
|   |     `-UnaryOperator 0x12802a550 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x12802a530 <col:17> 'int' 1
|   `-ReturnStmt 0x12802a5d8 <line:32:5, col:12>
|     `-IntegerLiteral 0x12802a5b8 <col:12> 'int' 0
|-FunctionDecl 0x128027b98 <line:13:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x128027c98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x128027d00 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x128027d68 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x128027c40 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x12802a288 <line:28:31> col:31 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x12802a388 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12802a330 <<invalid sloc>> Implicit 901
