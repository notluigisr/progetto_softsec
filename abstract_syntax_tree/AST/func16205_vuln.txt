TranslationUnitDecl 0x135055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1350564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135055bd0 '__int128'
|-TypedefDecl 0x135056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135055bf0 'unsigned __int128'
|-TypedefDecl 0x135126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135126000 'struct __NSConstantString_tag'
|   `-Record 0x135056580 '__NSConstantString_tag'
|-TypedefDecl 0x135126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135055d90 '__SVInt8_t'
|-TypedefDecl 0x135126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135055db0 '__SVInt16_t'
|-TypedefDecl 0x135126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135055dd0 '__SVInt32_t'
|-TypedefDecl 0x1351263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135055df0 '__SVInt64_t'
|-TypedefDecl 0x135126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135055e10 '__SVUint8_t'
|-TypedefDecl 0x1351264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135055e30 '__SVUint16_t'
|-TypedefDecl 0x135126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135055e50 '__SVUint32_t'
|-TypedefDecl 0x135126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135055e70 '__SVUint64_t'
|-TypedefDecl 0x1351265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135055e90 '__SVFloat16_t'
|-TypedefDecl 0x135126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1351266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135055ed0 '__SVFloat64_t'
|-TypedefDecl 0x135126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1351267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1351268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1351269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x135126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x135126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135056090 '__clang_svint8x3_t'
|-TypedefDecl 0x135126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1350560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1350560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1350560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x135126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x135126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1350561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1350561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1351278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1350561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1351279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135056230 '__clang_svint16x4_t'
|-TypedefDecl 0x135127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135056250 '__clang_svint32x4_t'
|-TypedefDecl 0x135127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135056270 '__clang_svint64x4_t'
|-TypedefDecl 0x135127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1350562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x135127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1350562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1350562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x135127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x135127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135056390 '__SVBool_t'
|-TypedefDecl 0x135127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1350563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x135127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1350563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1350563f0 '__SVCount_t'
|-TypedefDecl 0x135127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x135127fb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
|-TypedefDecl 0x135128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x135127fb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
`-FunctionDecl 0x1351283d8 <dataset_diviso_filec/func16205_vuln.c:1:1, line:31:1> line:1:12 invalid ssl_scan_clienthello_custom_tlsext 'int (int *, const unsigned char *, const unsigned char *, int *)' static
  |-ParmVarDecl 0x135128128 <col:47, col:52> col:52 invalid s 'int *'
  |-ParmVarDecl 0x1351281d8 <line:2:47, col:68> col:68 used data 'const unsigned char *'
  |-ParmVarDecl 0x135128258 <line:3:47, col:68> col:68 used limit 'const unsigned char *'
  |-ParmVarDecl 0x1351282d8 <line:4:47, col:52> col:52 used al 'int *'
  `-CompoundStmt 0x135142528 <line:5:1, line:31:1>
    |-DeclStmt 0x135128640 <line:6:5, col:35>
    | |-VarDecl 0x1351284b8 <col:5, col:20> col:20 used type 'unsigned short'
    | |-VarDecl 0x135128538 <col:5, col:26> col:26 used size 'unsigned short'
    | `-VarDecl 0x1351285b8 <col:5, col:32> col:32 used len 'unsigned short'
    |-IfStmt 0x135141850 <line:8:5, line:9:16>
    | |-BinaryOperator 0x135141800 <line:8:9, col:51> 'int' contains-errors '||'
    | | |-CXXDependentScopeMemberExpr 0x135128678 <col:9, col:12> '<dependent type>' contains-errors lvalue ->hit
    | | | `-RecoveryExpr 0x135128658 <col:9> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1351287d8 <col:19, col:51> 'int' contains-errors '=='
    | |   |-CXXDependentScopeMemberExpr 0x135128770 <col:19, col:36> '<dependent type>' contains-errors lvalue .meths_count
    | |   | `-CXXDependentScopeMemberExpr 0x135128728 <col:19, col:28> '<dependent type>' contains-errors lvalue ->srv_ext
    | |   |   `-CXXDependentScopeMemberExpr 0x1351286e0 <col:19, col:22> '<dependent type>' contains-errors lvalue ->cert
    | |   |     `-RecoveryExpr 0x1351286c0 <col:19> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x1351287b8 <col:51> 'int' 0
    | `-ReturnStmt 0x135141840 <line:9:9, col:16>
    |   `-IntegerLiteral 0x135141820 <col:16> 'int' 1
    |-IfStmt 0x135141970 <line:11:5, line:12:16>
    | |-BinaryOperator 0x135141920 <line:11:9, col:25> 'int' '>='
    | | |-ImplicitCastExpr 0x135141908 <col:9> 'const unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x135141870 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'
    | | `-BinaryOperator 0x1351418e8 <col:17, col:25> 'const unsigned char *' '-'
    | |   |-ImplicitCastExpr 0x1351418d0 <col:17> 'const unsigned char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x135141890 <col:17> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'
    | |   `-IntegerLiteral 0x1351418b0 <col:25> 'int' 2
    | `-ReturnStmt 0x135141960 <line:12:9, col:16>
    |   `-IntegerLiteral 0x135141940 <col:16> 'int' 1
    |-CallExpr 0x135141b98 <line:13:5, col:18> 'int'
    | |-ImplicitCastExpr 0x135141b80 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x135141af0 <col:5> 'int ()' Function 0x135141a38 'n2s' 'int ()'
    | |-ImplicitCastExpr 0x135141bc8 <col:9> 'const unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x135141b10 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'
    | `-ImplicitCastExpr 0x135141bf8 <col:15> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x135141be0 <col:15> 'unsigned short' <LValueToRValue>
    |     `-DeclRefExpr 0x135141b30 <col:15> 'unsigned short' lvalue Var 0x1351285b8 'len' 'unsigned short'
    |-IfStmt 0x135141d40 <line:15:5, line:16:16>
    | |-BinaryOperator 0x135141cf0 <line:15:9, col:24> 'int' '>'
    | | |-ImplicitCastExpr 0x135141cd8 <col:9> 'const unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x135141c10 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'
    | | `-BinaryOperator 0x135141cb8 <col:16, col:24> 'const unsigned char *' '-'
    | |   |-ImplicitCastExpr 0x135141c70 <col:16> 'const unsigned char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x135141c30 <col:16> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'
    | |   `-ImplicitCastExpr 0x135141ca0 <col:24> 'int' <IntegralCast>
    | |     `-ImplicitCastExpr 0x135141c88 <col:24> 'unsigned short' <LValueToRValue>
    | |       `-DeclRefExpr 0x135141c50 <col:24> 'unsigned short' lvalue Var 0x1351285b8 'len' 'unsigned short'
    | `-ReturnStmt 0x135141d30 <line:16:9, col:16>
    |   `-IntegerLiteral 0x135141d10 <col:16> 'int' 1
    |-WhileStmt 0x1351424d8 <line:18:5, line:28:5>
    | |-BinaryOperator 0x135141e10 <line:18:12, col:28> 'int' '<='
    | | |-ImplicitCastExpr 0x135141df8 <col:12> 'const unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x135141d60 <col:12> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'
    | | `-BinaryOperator 0x135141dd8 <col:20, col:28> 'const unsigned char *' '-'
    | |   |-ImplicitCastExpr 0x135141dc0 <col:20> 'const unsigned char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x135141d80 <col:20> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'
    | |   `-IntegerLiteral 0x135141da0 <col:28> 'int' 4
    | `-CompoundStmt 0x1351424a0 <col:31, line:28:5>
    |   |-CallExpr 0x135141ea8 <line:19:9, col:23> 'int'
    |   | |-ImplicitCastExpr 0x135141e90 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x135141e30 <col:9> 'int ()' Function 0x135141a38 'n2s' 'int ()'
    |   | |-ImplicitCastExpr 0x135141ed8 <col:13> 'const unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x135141e50 <col:13> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x135141f08 <col:19> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x135141ef0 <col:19> 'unsigned short' <LValueToRValue>
    |   |     `-DeclRefExpr 0x135141e70 <col:19> 'unsigned short' lvalue Var 0x1351284b8 'type' 'unsigned short'
    |   |-CallExpr 0x135141f98 <line:20:9, col:23> 'int'
    |   | |-ImplicitCastExpr 0x135141f80 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x135141f20 <col:9> 'int ()' Function 0x135141a38 'n2s' 'int ()'
    |   | |-ImplicitCastExpr 0x135141fc8 <col:13> 'const unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x135141f40 <col:13> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x135141ff8 <col:19> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x135141fe0 <col:19> 'unsigned short' <LValueToRValue>
    |   |     `-DeclRefExpr 0x135141f60 <col:19> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'
    |   |-IfStmt 0x135142140 <line:22:9, line:23:20>
    |   | |-BinaryOperator 0x1351420f0 <line:22:13, col:27> 'int' '>'
    |   | | |-BinaryOperator 0x135142098 <col:13, col:20> 'const unsigned char *' '+'
    |   | | | |-ImplicitCastExpr 0x135142050 <col:13> 'const unsigned char *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x135142010 <col:13> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'
    |   | | | `-ImplicitCastExpr 0x135142080 <col:20> 'int' <IntegralCast>
    |   | | |   `-ImplicitCastExpr 0x135142068 <col:20> 'unsigned short' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x135142030 <col:20> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'
    |   | | `-ImplicitCastExpr 0x1351420d8 <col:27> 'const unsigned char *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1351420b8 <col:27> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'
    |   | `-ReturnStmt 0x135142130 <line:23:13, col:20>
    |   |   `-IntegerLiteral 0x135142110 <col:20> 'int' 1
    |   |-IfStmt 0x1351423e0 <line:24:9, line:25:20>
    |   | |-BinaryOperator 0x135142390 <line:24:13, col:63> 'int' contains-errors '<='
    |   | | |-CallExpr 0x135142320 <col:13, col:58> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x135142240 <col:13> 'int ()' Function 0x135142188 'custom_ext_parse' 'int ()'
    |   | | | |-RecoveryExpr 0x135142260 <col:30> '<dependent type>' contains-errors lvalue
    |   | | | |-IntegerLiteral 0x135142280 <col:33> 'int' 1
    |   | | | |-DeclRefExpr 0x1351422a0 <col:38> 'unsigned short' lvalue Var 0x1351284b8 'type' 'unsigned short'
    |   | | | |-DeclRefExpr 0x1351422c0 <col:44> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'
    |   | | | |-DeclRefExpr 0x1351422e0 <col:50> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'
    |   | | | `-DeclRefExpr 0x135142300 <col:56> 'int *' lvalue ParmVar 0x1351282d8 'al' 'int *'
    |   | | `-IntegerLiteral 0x135142370 <col:63> 'int' 0
    |   | `-ReturnStmt 0x1351423d0 <line:25:13, col:20>
    |   |   `-IntegerLiteral 0x1351423b0 <col:20> 'int' 0
    |   `-CompoundAssignOperator 0x135142470 <line:27:9, col:17> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |     |-DeclRefExpr 0x135142400 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'
    |     `-ImplicitCastExpr 0x135142458 <col:17> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x135142440 <col:17> 'unsigned short' <LValueToRValue>
    |         `-DeclRefExpr 0x135142420 <col:17> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'
    `-ReturnStmt 0x135142518 <line:30:5, col:12>
      `-IntegerLiteral 0x1351424f8 <col:12> 'int' 1
