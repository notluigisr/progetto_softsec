TranslationUnitDecl 0x152820808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1528216b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152820dd0 '__int128'
|-TypedefDecl 0x152821728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152820df0 'unsigned __int128'
|-TypedefDecl 0x151016c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151016a00 'struct __NSConstantString_tag'
|   `-Record 0x152821780 '__NSConstantString_tag'
|-TypedefDecl 0x151016c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152820f90 '__SVInt8_t'
|-TypedefDecl 0x151016d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152820fb0 '__SVInt16_t'
|-TypedefDecl 0x151016d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152820fd0 '__SVInt32_t'
|-TypedefDecl 0x151016dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152820ff0 '__SVInt64_t'
|-TypedefDecl 0x151016e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152821010 '__SVUint8_t'
|-TypedefDecl 0x151016ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152821030 '__SVUint16_t'
|-TypedefDecl 0x151016f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152821050 '__SVUint32_t'
|-TypedefDecl 0x151016f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152821070 '__SVUint64_t'
|-TypedefDecl 0x151016fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152821090 '__SVFloat16_t'
|-TypedefDecl 0x151017040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1528210b0 '__SVFloat32_t'
|-TypedefDecl 0x1510170a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1528210d0 '__SVFloat64_t'
|-TypedefDecl 0x151017110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1528210f0 '__SVBfloat16_t'
|-TypedefDecl 0x151017178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152821110 '__clang_svint8x2_t'
|-TypedefDecl 0x1510171e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152821130 '__clang_svint16x2_t'
|-TypedefDecl 0x151017248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152821150 '__clang_svint32x2_t'
|-TypedefDecl 0x1510172b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152821170 '__clang_svint64x2_t'
|-TypedefDecl 0x151017318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152821190 '__clang_svuint8x2_t'
|-TypedefDecl 0x151017380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1528211b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1510173e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1528211d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151017450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1528211f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1510174b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152821210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151017520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152821230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151017588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152821250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1510175f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152821270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151017658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152821290 '__clang_svint8x3_t'
|-TypedefDecl 0x1510176c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1528212b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151017728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1528212d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151017790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1528212f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1510177f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152821310 '__clang_svuint8x3_t'
|-TypedefDecl 0x151017860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152821330 '__clang_svuint16x3_t'
|-TypedefDecl 0x1510178c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152821350 '__clang_svuint32x3_t'
|-TypedefDecl 0x151017930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152821370 '__clang_svuint64x3_t'
|-TypedefDecl 0x151017998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152821390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151018200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1528213b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151018268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1528213d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1510182d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1528213f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151018338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152821410 '__clang_svint8x4_t'
|-TypedefDecl 0x1510183a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152821430 '__clang_svint16x4_t'
|-TypedefDecl 0x151018408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152821450 '__clang_svint32x4_t'
|-TypedefDecl 0x151018470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152821470 '__clang_svint64x4_t'
|-TypedefDecl 0x1510184d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152821490 '__clang_svuint8x4_t'
|-TypedefDecl 0x151018540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1528214b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1510185a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1528214d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151018610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1528214f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151018678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152821510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1510186e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152821530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151018748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152821550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1510187b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152821570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151018818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152821590 '__SVBool_t'
|-TypedefDecl 0x151018880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1528215b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1510188e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1528215d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151018950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1528215f0 '__SVCount_t'
|-TypedefDecl 0x1510189f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1510189b0 'char *'
|   `-BuiltinType 0x1528208b0 'char'
|-TypedefDecl 0x151018a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1510189b0 'char *'
|   `-BuiltinType 0x1528208b0 'char'
`-FunctionDecl 0x151031738 <dataset_diviso_filec/func23847_nonvuln.c:1:1, line:24:1> line:1:1 isatap_chksrc 'int (struct sk_buff *, struct iphdr *, struct ip_tunnel *)'
  |-ParmVarDecl 0x151019048 <col:15, col:31> col:31 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x151031428 <col:36, col:50> col:50 used iph 'struct iphdr *'
  |-ParmVarDecl 0x1510315f8 <col:55, col:73> col:73 used t 'struct ip_tunnel *'
  `-CompoundStmt 0x151032db8 <line:2:1, line:24:1>
    |-DeclStmt 0x151031a28 <line:3:2, col:31>
    | |-RecordDecl 0x151031840 <col:2, col:9> col:9 struct ip_tunnel_prl_entry
    | `-VarDecl 0x1510319a8 <col:2, col:30> col:30 used p 'struct ip_tunnel_prl_entry *'
    |-DeclStmt 0x151031ae0 <line:4:2, col:12>
    | `-VarDecl 0x151031a58 <col:2, col:11> col:6 used ok 'int' cinit
    |   `-IntegerLiteral 0x151031ac0 <col:11> 'int' 1
    |-CallExpr 0x151031cd0 <line:6:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x151031c20 <col:2> 'int ()' Function 0x151031b68 'read_lock' 'int ()'
    | `-UnaryOperator 0x151031cb8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x151031c98 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x151031ec8 <line:7:2, col:45> 'struct ip_tunnel_prl_entry *' contains-errors '='
    | |-DeclRefExpr 0x151031cf8 <col:2> 'struct ip_tunnel_prl_entry *' lvalue Var 0x1510319a8 'p' 'struct ip_tunnel_prl_entry *'
    | `-CallExpr 0x151031e98 <col:6, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x151031df8 <col:6> 'int ()' Function 0x151031d40 '__ipip6_tunnel_locate_prl' 'int ()'
    |   |-DeclRefExpr 0x151031e18 <col:32> 'struct ip_tunnel *' lvalue ParmVar 0x1510315f8 't' 'struct ip_tunnel *'
    |   `-RecoveryExpr 0x151031e70 <col:35, col:40> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x151031e38 <col:35> 'struct iphdr *' lvalue ParmVar 0x151031428 'iph' 'struct iphdr *'
    |-IfStmt 0x151032c40 <line:8:2, line:21:2> has_else
    | |-ImplicitCastExpr 0x151031f08 <line:8:6> 'struct ip_tunnel_prl_entry *' <LValueToRValue>
    | | `-DeclRefExpr 0x151031ee8 <col:6> 'struct ip_tunnel_prl_entry *' lvalue Var 0x1510319a8 'p' 'struct ip_tunnel_prl_entry *'
    | |-CompoundStmt 0x1510321d8 <col:9, line:13:2>
    | | `-IfStmt 0x1510321a8 <line:9:3, line:12:26> has_else
    | |   |-BinaryOperator 0x151031fd8 <line:9:7, col:18> '<dependent type>' contains-errors '&'
    | |   | |-RecoveryExpr 0x151031f58 <col:7, col:10> '<dependent type>' contains-errors lvalue
    | |   | | `-DeclRefExpr 0x151031f20 <col:7> 'struct ip_tunnel_prl_entry *' lvalue Var 0x1510319a8 'p' 'struct ip_tunnel_prl_entry *'
    | |   | `-RecoveryExpr 0x151031fb8 <col:18> '<dependent type>' contains-errors lvalue
    | |   |-BinaryOperator 0x1510320b0 <line:10:4, col:26> '<dependent type>' contains-errors '='
    | |   | |-RecoveryExpr 0x151032030 <col:4, col:9> '<dependent type>' contains-errors lvalue
    | |   | | `-DeclRefExpr 0x151031ff8 <col:4> 'struct sk_buff *' lvalue ParmVar 0x151019048 'skb' 'struct sk_buff *'
    | |   | `-RecoveryExpr 0x151032090 <col:26> '<dependent type>' contains-errors lvalue
    | |   `-BinaryOperator 0x151032188 <line:12:4, col:26> '<dependent type>' contains-errors '='
    | |     |-RecoveryExpr 0x151032108 <col:4, col:9> '<dependent type>' contains-errors lvalue
    | |     | `-DeclRefExpr 0x1510320d0 <col:4> 'struct sk_buff *' lvalue ParmVar 0x151019048 'skb' 'struct sk_buff *'
    | |     `-RecoveryExpr 0x151032168 <col:26> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x151032c20 <line:13:9, line:21:2>
    |   |-DeclStmt 0x1510325e0 <line:14:3, col:49>
    |   | |-RecordDecl 0x1510321f0 <col:3, col:10> col:10 struct in6_addr
    |   | `-VarDecl 0x151032358 <col:3, col:44> col:20 used addr6 'struct in6_addr *' cinit
    |   |   `-UnaryOperator 0x1510325b0 <col:28, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x151032588 <col:29, col:44> '<dependent type>' contains-errors lvalue
    |   |       `-CallExpr 0x151032548 <col:29, col:41> 'int'
    |   |         |-ImplicitCastExpr 0x151032530 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |   |         | `-DeclRefExpr 0x1510324b8 <col:29> 'int ()' Function 0x151032400 'ipv6_hdr' 'int ()'
    |   |         `-ImplicitCastExpr 0x151032570 <col:38> 'struct sk_buff *' <LValueToRValue>
    |   |           `-DeclRefExpr 0x1510324d8 <col:38> 'struct sk_buff *' lvalue ParmVar 0x151019048 'skb' 'struct sk_buff *'
    |   `-IfStmt 0x151032bf0 <line:15:3, line:20:9> has_else
    |     |-BinaryOperator 0x151032a98 <line:15:7, line:17:36> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x1510328c8 <line:15:7, line:16:41> 'int' contains-errors '&&'
    |     | | |-CallExpr 0x151032730 <line:15:7, col:32> 'int' contains-errors
    |     | | | |-ImplicitCastExpr 0x151032718 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | | | `-DeclRefExpr 0x1510326d8 <col:7> 'int ()' Function 0x151032620 'ipv6_addr_is_isatap' 'int ()'
    |     | | | `-ImplicitCastExpr 0x151032758 <col:27> 'struct in6_addr *' contains-errors <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x1510326f8 <col:27> 'struct in6_addr *' contains-errors lvalue Var 0x151032358 'addr6' 'struct in6_addr *'
    |     | | `-ParenExpr 0x1510328a8 <line:16:7, col:41> 'int' contains-errors
    |     | |   `-BinaryOperator 0x151032888 <col:8, col:36> 'int' contains-errors '=='
    |     | |     |-ArraySubscriptExpr 0x151032808 <col:8, col:26> '<dependent type>' contains-errors lvalue
    |     | |     | |-ImplicitCastExpr 0x1510327f0 <col:8, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     | |     | | `-RecoveryExpr 0x1510327a8 <col:8, col:15> '<dependent type>' contains-errors lvalue
    |     | |     | |   `-DeclRefExpr 0x151032770 <col:8> 'struct in6_addr *' contains-errors lvalue Var 0x151032358 'addr6' 'struct in6_addr *'
    |     | |     | `-IntegerLiteral 0x1510327d0 <col:25> 'int' 3
    |     | |     `-RecoveryExpr 0x151032860 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |     | |       `-DeclRefExpr 0x151032828 <col:31> 'struct iphdr *' lvalue ParmVar 0x151031428 'iph' 'struct iphdr *'
    |     | `-CallExpr 0x151032a68 <line:17:7, col:36> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x1510329c8 <col:7> 'int ()' Function 0x151032910 'ipv6_chk_prefix' 'int ()'
    |     |   |-DeclRefExpr 0x1510329e8 <col:23> 'struct in6_addr *' contains-errors lvalue Var 0x151032358 'addr6' 'struct in6_addr *'
    |     |   `-RecoveryExpr 0x151032a40 <col:30, col:33> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x151032a08 <col:30> 'struct ip_tunnel *' lvalue ParmVar 0x1510315f8 't' 'struct ip_tunnel *'
    |     |-BinaryOperator 0x151032b70 <line:18:4, col:26> '<dependent type>' contains-errors '='
    |     | |-RecoveryExpr 0x151032af0 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x151032ab8 <col:4> 'struct sk_buff *' lvalue ParmVar 0x151019048 'skb' 'struct sk_buff *'
    |     | `-RecoveryExpr 0x151032b50 <col:26> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x151032bd0 <line:20:4, col:9> 'int' '='
    |       |-DeclRefExpr 0x151032b90 <col:4> 'int' lvalue Var 0x151031a58 'ok' 'int'
    |       `-IntegerLiteral 0x151032bb0 <col:9> 'int' 0
    `-ReturnStmt 0x151032da8 <line:23:2, col:9>
      `-ImplicitCastExpr 0x151032d90 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x151032d70 <col:9> 'int' lvalue Var 0x151031a58 'ok' 'int'
