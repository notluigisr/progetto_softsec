TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-FunctionDecl 0x13b80de88 <dataset_diviso_filec/func770_vuln.c:1:1, line:67:1> line:1:5 invalid find_child 'int (int, int *)'
| |-ParmVarDecl 0x13b80dcf0 <col:16, col:22> col:22 invalid parent 'int'
| |-ParmVarDecl 0x13b80dda8 <col:30, col:37> col:37 invalid child 'int *'
| `-CompoundStmt 0x13b82bcc8 <col:44, line:67:1>
|   |-CallExpr 0x13b80e108 <line:2:2, col:14> 'int'
|   | `-ImplicitCastExpr 0x13b80e0f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x13b80e0a0 <col:2> 'int ()' Function 0x13b80dfe8 'EUID_ASSERT' 'int ()'
|   |-BinaryOperator 0x13b80e198 <line:3:2, col:11> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x13b80e160 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13b80e148 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13b80e128 <col:3> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x13b80e178 <col:11> 'int' 0
|   |-CallExpr 0x13b80e2e8 <line:6:2, col:12> 'int'
|   | `-ImplicitCastExpr 0x13b80e2d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x13b80e2b0 <col:2> 'int ()' Function 0x13b80e1f8 'EUID_ROOT' 'int ()'
|   |-IfStmt 0x13b828a00 <line:7:2, line:14:2>
|   | |-RecoveryExpr 0x13b827ef8 <line:7:6, col:28> '_Bool' contains-errors
|   | `-CompoundStmt 0x13b8289e0 <col:31, line:14:2>
|   |   |-CallExpr 0x13b828050 <line:9:3, col:10> 'int'
|   |   | |-ImplicitCastExpr 0x13b828038 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13b827ff8 <col:3> 'int ()' Function 0x13b827f40 'sleep' 'int ()'
|   |   | `-IntegerLiteral 0x13b828018 <col:9> 'int' 2
|   |   `-IfStmt 0x13b8289c0 <line:10:3, line:13:3>
|   |     |-RecoveryExpr 0x13b828148 <line:10:7, col:29> '_Bool' contains-errors
|   |     `-CompoundStmt 0x13b8289a0 <col:32, line:13:3>
|   |       |-CallExpr 0x13b8282f0 <line:11:4, col:25> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x13b828248 <col:4> 'int ()' Function 0x13b828190 'fprintf' 'int ()'
|   |       | |-RecoveryExpr 0x13b8282d0 <col:12> '<dependent type>' contains-errors lvalue
|   |       | `-StringLiteral 0x13b828280 <col:20> 'char[4]' lvalue "STR"
|   |       `-CallExpr 0x13b828978 <line:12:4, col:10> 'void'
|   |         |-ImplicitCastExpr 0x13b828960 <col:4> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x13b8288f0 <col:4> 'void (int) __attribute__((noreturn))' Function 0x13b828780 'exit' 'void (int) __attribute__((noreturn))'
|   |         `-IntegerLiteral 0x13b828910 <col:9> 'int' 1
|   |-DeclStmt 0x13b828c08 <line:16:2, col:22>
|   | |-RecordDecl 0x13b828a20 <col:2, col:9> col:9 struct dirent
|   | `-VarDecl 0x13b828b88 <col:2, col:17> col:17 used entry 'struct dirent *'
|   |-DeclStmt 0x13b828ca0 <line:17:2, col:11>
|   | `-VarDecl 0x13b828c38 <col:2, col:8> col:8 used end 'char *'
|   |-WhileStmt 0x13b82b980 <line:18:2, line:63:2>
|   | |-RecoveryExpr 0x13b829738 <line:18:9, col:45> '_Bool' contains-errors
|   | `-CompoundStmt 0x13b82b930 <col:48, line:63:2>
|   |   |-IfStmt 0x13b829870 <line:20:3, line:21:4>
|   |   | |-BinaryOperator 0x13b829848 <line:20:7, col:32> 'int' contains-errors '||'
|   |   | | |-BinaryOperator 0x13b8297d8 <col:7, col:21> 'int' contains-errors '=='
|   |   | | | |-DeclRefExpr 0x13b829758 <col:7> 'char *' lvalue Var 0x13b828c38 'end' 'char *'
|   |   | | | `-RecoveryExpr 0x13b8297b0 <col:14, col:21> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x13b829778 <col:14> 'struct dirent *' lvalue Var 0x13b828b88 'entry' 'struct dirent *'
|   |   | | `-UnaryOperator 0x13b829830 <col:31, col:32> 'char' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x13b829818 <col:32> 'char *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x13b8297f8 <col:32> 'char *' lvalue Var 0x13b828c38 'end' 'char *'
|   |   | `-ContinueStmt 0x13b829868 <line:21:4>
|   |   |-IfStmt 0x13b829930 <line:22:3, line:23:4>
|   |   | |-BinaryOperator 0x13b829908 <line:22:7, col:14> 'int' contains-errors '=='
|   |   | | |-RecoveryExpr 0x13b8298e8 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x13b8298a8 <col:14> '<dependent type>' contains-errors lvalue
|   |   | `-ContinueStmt 0x13b829928 <line:23:4>
|   |   |-DeclStmt 0x13b8299d0 <line:26:3, col:13>
|   |   | `-VarDecl 0x13b829968 <col:3, col:9> col:9 used file 'char *'
|   |   |-IfStmt 0x13b829f10 <line:27:3, line:30:3>
|   |   | |-BinaryOperator 0x13b829cd8 <line:27:7, col:39> 'int' contains-errors '=='
|   |   | | |-CallExpr 0x13b829ca0 <col:7, col:33> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x13b829b30 <col:7> 'int ()' Function 0x13b829a10 'asprintf' 'int ()'
|   |   | | | |-UnaryOperator 0x13b829ba0 <col:16, col:17> 'char **' prefix '&' cannot overflow
|   |   | | | | `-DeclRefExpr 0x13b829b50 <col:17> 'char *' lvalue Var 0x13b829968 'file' 'char *'
|   |   | | | |-StringLiteral 0x13b829bb8 <col:23> 'char[4]' lvalue "STR"
|   |   | | | `-RecoveryExpr 0x13b829c80 <col:30> '<dependent type>' contains-errors lvalue
|   |   | | `-UnaryOperator 0x13b829c48 <col:38, col:39> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x13b829c28 <col:39> 'int' 1
|   |   | `-CompoundStmt 0x13b829ef0 <col:42, line:30:3>
|   |   |   |-CallExpr 0x13b829e30 <line:28:4, col:16> 'int'
|   |   |   | |-ImplicitCastExpr 0x13b829e18 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13b829dd8 <col:4> 'int ()' Function 0x13b829d20 'perror' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x13b829e58 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x13b829df8 <col:11> 'char[4]' lvalue "STR"
|   |   |   `-CallExpr 0x13b829ec8 <line:29:4, col:10> 'void'
|   |   |     |-ImplicitCastExpr 0x13b829eb0 <col:4> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13b829e70 <col:4> 'void (int) __attribute__((noreturn))' Function 0x13b828780 'exit' 'void (int) __attribute__((noreturn))'
|   |   |     `-IntegerLiteral 0x13b829e90 <col:9> 'int' 1
|   |   |-IfStmt 0x13b82a3d8 <line:32:3, line:35:3>
|   |   | |-RecoveryExpr 0x13b82a0e8 <line:32:7, col:8> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x13b82a3b8 <col:12, line:35:3>
|   |   |   |-CallExpr 0x13b82a358 <line:33:4, col:13> 'void'
|   |   |   | |-ImplicitCastExpr 0x13b82a340 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13b82a2b8 <col:4> 'void (void *)' Function 0x13b82a148 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x13b82a398 <col:9> 'void *' <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x13b82a380 <col:9> 'char *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x13b82a2d8 <col:9> 'char *' lvalue Var 0x13b829968 'file' 'char *'
|   |   |   `-ContinueStmt 0x13b82a3b0 <line:34:4>
|   |   |-DeclStmt 0x13b82a470 <line:38:3, col:19>
|   |   | `-VarDecl 0x13b82a408 <col:3, col:8> col:8 invalid buf 'char'
|   |   |-WhileStmt 0x13b82b748 <line:39:3, line:60:3>
|   |   | |-RecoveryExpr 0x13b82a5c8 <line:39:10, col:35> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x13b82b730 <col:38, line:60:3>
|   |   |   `-IfStmt 0x13b82b710 <line:40:4, line:59:4>
|   |   |     |-BinaryOperator 0x13b82a9a0 <line:40:8, col:34> 'int' contains-errors '=='
|   |   |     | |-CallExpr 0x13b82a948 <col:8, col:29> '<dependent type>' contains-errors
|   |   |     | | |-DeclRefExpr 0x13b82a898 <col:8> 'int (const char *, const char *, unsigned long)' Function 0x13b82a648 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |     | | |-RecoveryExpr 0x13b82a8b8 <col:16> '<dependent type>' contains-errors lvalue
|   |   |     | | |-StringLiteral 0x13b82a8d8 <col:21> 'char[4]' lvalue "STR"
|   |   |     | | `-IntegerLiteral 0x13b82a8f8 <col:28> 'int' 5
|   |   |     | `-IntegerLiteral 0x13b82a980 <col:34> 'int' 0
|   |   |     `-CompoundStmt 0x13b82b6d8 <col:37, line:59:4>
|   |   |       |-DeclStmt 0x13b82aaa0 <line:41:5, col:24>
|   |   |       | `-VarDecl 0x13b82a9d8 <col:5, col:23> col:11 used ptr 'char *' cinit
|   |   |       |   `-BinaryOperator 0x13b82aa80 <col:17, col:23> '<dependent type>' contains-errors '+'
|   |   |       |     |-RecoveryExpr 0x13b82aa40 <col:17> '<dependent type>' contains-errors lvalue
|   |   |       |     `-IntegerLiteral 0x13b82aa60 <col:23> 'int' 5
|   |   |       |-WhileStmt 0x13b82ad90 <line:42:5, line:44:5>
|   |   |       | |-BinaryOperator 0x13b82ad20 <line:42:12, col:56> 'int' contains-errors '&&'
|   |   |       | | |-BinaryOperator 0x13b82ab50 <col:12, col:20> 'int' contains-errors '!='
|   |   |       | | | |-ImplicitCastExpr 0x13b82ab38 <col:12, col:13> 'int' contains-errors <IntegralCast>
|   |   |       | | | | `-ImplicitCastExpr 0x13b82ab20 <col:12, col:13> 'char' contains-errors <LValueToRValue>
|   |   |       | | | |   `-UnaryOperator 0x13b82aaf0 <col:12, col:13> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   |       | | | |     `-ImplicitCastExpr 0x13b82aad8 <col:13> 'char *' contains-errors <LValueToRValue>
|   |   |       | | | |       `-DeclRefExpr 0x13b82aab8 <col:13> 'char *' contains-errors lvalue Var 0x13b82a9d8 'ptr' 'char *'
|   |   |       | | | `-CharacterLiteral 0x13b82ab08 <col:20> 'int' 0
|   |   |       | | `-ParenExpr 0x13b82ad00 <col:28, col:56> 'int' contains-errors
|   |   |       | |   `-BinaryOperator 0x13b82ace0 <col:29, col:52> 'int' contains-errors '||'
|   |   |       | |     |-BinaryOperator 0x13b82ac08 <col:29, col:37> 'int' contains-errors '=='
|   |   |       | |     | |-ImplicitCastExpr 0x13b82abf0 <col:29, col:30> 'int' contains-errors <IntegralCast>
|   |   |       | |     | | `-ImplicitCastExpr 0x13b82abd8 <col:29, col:30> 'char' contains-errors <LValueToRValue>
|   |   |       | |     | |   `-UnaryOperator 0x13b82aba8 <col:29, col:30> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   |       | |     | |     `-ImplicitCastExpr 0x13b82ab90 <col:30> 'char *' contains-errors <LValueToRValue>
|   |   |       | |     | |       `-DeclRefExpr 0x13b82ab70 <col:30> 'char *' contains-errors lvalue Var 0x13b82a9d8 'ptr' 'char *'
|   |   |       | |     | `-CharacterLiteral 0x13b82abc0 <col:37> 'int' 32
|   |   |       | |     `-BinaryOperator 0x13b82acc0 <col:44, col:52> 'int' contains-errors '=='
|   |   |       | |       |-ImplicitCastExpr 0x13b82aca8 <col:44, col:45> 'int' contains-errors <IntegralCast>
|   |   |       | |       | `-ImplicitCastExpr 0x13b82ac90 <col:44, col:45> 'char' contains-errors <LValueToRValue>
|   |   |       | |       |   `-UnaryOperator 0x13b82ac60 <col:44, col:45> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   |       | |       |     `-ImplicitCastExpr 0x13b82ac48 <col:45> 'char *' contains-errors <LValueToRValue>
|   |   |       | |       |       `-DeclRefExpr 0x13b82ac28 <col:45> 'char *' contains-errors lvalue Var 0x13b82a9d8 'ptr' 'char *'
|   |   |       | |       `-CharacterLiteral 0x13b82ac78 <col:52> 'int' 9
|   |   |       | `-CompoundStmt 0x13b82ad78 <col:59, line:44:5>
|   |   |       |   `-UnaryOperator 0x13b82ad60 <line:43:6, col:9> 'char *' contains-errors postfix '++'
|   |   |       |     `-DeclRefExpr 0x13b82ad40 <col:6> 'char *' contains-errors lvalue Var 0x13b82a9d8 'ptr' 'char *'
|   |   |       |-IfStmt 0x13b82af40 <line:45:5, line:48:5>
|   |   |       | |-BinaryOperator 0x13b82ae48 <line:45:9, col:17> 'int' contains-errors '=='
|   |   |       | | |-ImplicitCastExpr 0x13b82ae30 <col:9, col:10> 'int' contains-errors <IntegralCast>
|   |   |       | | | `-ImplicitCastExpr 0x13b82ae18 <col:9, col:10> 'char' contains-errors <LValueToRValue>
|   |   |       | | |   `-UnaryOperator 0x13b82ade8 <col:9, col:10> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   |       | | |     `-ImplicitCastExpr 0x13b82add0 <col:10> 'char *' contains-errors <LValueToRValue>
|   |   |       | | |       `-DeclRefExpr 0x13b82adb0 <col:10> 'char *' contains-errors lvalue Var 0x13b82a9d8 'ptr' 'char *'
|   |   |       | | `-CharacterLiteral 0x13b82ae00 <col:17> 'int' 0
|   |   |       | `-CompoundStmt 0x13b82af28 <col:23, line:48:5>
|   |   |       |   `-CallExpr 0x13b82af00 <line:47:6, col:12> 'void'
|   |   |       |     |-ImplicitCastExpr 0x13b82aee8 <col:6> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |   |       |     | `-DeclRefExpr 0x13b82aea8 <col:6> 'void (int) __attribute__((noreturn))' Function 0x13b828780 'exit' 'void (int) __attribute__((noreturn))'
|   |   |       |     `-IntegerLiteral 0x13b82aec8 <col:11> 'int' 1
|   |   |       |-IfStmt 0x13b82b6b0 <line:49:5, line:57:5>
|   |   |       | |-BinaryOperator 0x13b82b0f8 <line:49:9, col:27> 'int' contains-errors '=='
|   |   |       | | |-RecoveryExpr 0x13b82af60 <col:9> '<dependent type>' contains-errors lvalue
|   |   |       | | `-CallExpr 0x13b82b0b8 <col:19, col:27> 'int' contains-errors
|   |   |       | |   |-ImplicitCastExpr 0x13b82b0a0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | |   | `-DeclRefExpr 0x13b82b060 <col:19> 'int ()' Function 0x13b82afa8 'atoi' 'int ()'
|   |   |       | |   `-ImplicitCastExpr 0x13b82b0e0 <col:24> 'char *' contains-errors <LValueToRValue>
|   |   |       | |     `-DeclRefExpr 0x13b82b080 <col:24> 'char *' contains-errors lvalue Var 0x13b82a9d8 'ptr' 'char *'
|   |   |       | `-CompoundStmt 0x13b82b690 <col:30, line:57:5>
|   |   |       |   |-DeclStmt 0x13b82b298 <line:51:6, col:43>
|   |   |       |   | `-VarDecl 0x13b82b130 <col:6, col:12> col:12 used cmdline 'char *'
|   |   |       |   `-IfStmt 0x13b82b670 <line:52:6, line:56:6>
|   |   |       |     |-ImplicitCastExpr 0x13b82b2d0 <line:52:10> 'char *' <LValueToRValue>
|   |   |       |     | `-DeclRefExpr 0x13b82b2b0 <col:10> 'char *' lvalue Var 0x13b82b130 'cmdline' 'char *'
|   |   |       |     `-CompoundStmt 0x13b82b658 <col:19, line:56:6>
|   |   |       |       `-CallExpr 0x13b82b600 <line:55:7, col:19> 'void'
|   |   |       |         |-ImplicitCastExpr 0x13b82b5e0 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |       |         | `-DeclRefExpr 0x13b82b588 <col:7> 'void (void *)' Function 0x13b82a148 'free' 'void (void *)'
|   |   |       |         `-ImplicitCastExpr 0x13b82b640 <col:12> 'void *' <BitCast>
|   |   |       |           `-ImplicitCastExpr 0x13b82b628 <col:12> 'char *' <LValueToRValue>
|   |   |       |             `-DeclRefExpr 0x13b82b5a8 <col:12> 'char *' lvalue Var 0x13b82b130 'cmdline' 'char *'
|   |   |       `-BreakStmt 0x13b82b6d0 <line:58:5>
|   |   `-CallExpr 0x13b82b8d8 <line:62:3, col:12> 'void'
|   |     |-ImplicitCastExpr 0x13b82b8c0 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b82b868 <col:3> 'void (void *)' Function 0x13b82a148 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x13b82b918 <col:8> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x13b82b900 <col:8> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13b82b888 <col:8> 'char *' lvalue Var 0x13b829968 'file' 'char *'
|   |-CallExpr 0x13b82bbb8 <line:65:2, col:12> 'int'
|   | `-ImplicitCastExpr 0x13b82bba0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x13b82bb80 <col:2> 'int ()' Function 0x13b82bac8 'EUID_USER' 'int ()'
|   `-ReturnStmt 0x13b82bcb8 <line:66:2, col:21>
|     `-ConditionalOperator 0x13b82bc88 <col:9, col:21> '<dependent type>' contains-errors
|       |-ParenExpr 0x13b82bc28 <col:9, col:16> '<dependent type>' contains-errors
|       | `-UnaryOperator 0x13b82bc10 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
|       |   `-ImplicitCastExpr 0x13b82bbf8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|       |     `-RecoveryExpr 0x13b82bbd8 <col:11> '<dependent type>' contains-errors lvalue
|       |-IntegerLiteral 0x13b82bc48 <col:19> 'int' 0
|       `-IntegerLiteral 0x13b82bc68 <col:21> 'int' 1
|-FunctionDecl 0x13b828780 <line:12:4> col:4 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x13b828880 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13b828828 <<invalid sloc>> Implicit 869
|-FunctionDecl 0x13b82a148 <line:33:4> col:4 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x13b82a248 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x13b82a1f0 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x13b82a648 <line:40:8> col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x13b82a748 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13b82a7b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13b82a818 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13b82a6f0 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x13b82b368 <line:53:49> col:49 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13b82b468 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13b82b410 <<invalid sloc>> Implicit 902
