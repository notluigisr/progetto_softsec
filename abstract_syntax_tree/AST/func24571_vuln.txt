TranslationUnitDecl 0x13e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e055bd0 '__int128'
|-TypedefDecl 0x13e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e055bf0 'unsigned __int128'
|-TypedefDecl 0x13e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e126000 'struct __NSConstantString_tag'
|   `-Record 0x13e056580 '__NSConstantString_tag'
|-TypedefDecl 0x13e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e055d90 '__SVInt8_t'
|-TypedefDecl 0x13e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e055db0 '__SVInt16_t'
|-TypedefDecl 0x13e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e055dd0 '__SVInt32_t'
|-TypedefDecl 0x13e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e055df0 '__SVInt64_t'
|-TypedefDecl 0x13e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e055e10 '__SVUint8_t'
|-TypedefDecl 0x13e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e055e30 '__SVUint16_t'
|-TypedefDecl 0x13e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e055e50 '__SVUint32_t'
|-TypedefDecl 0x13e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e055e70 '__SVUint64_t'
|-TypedefDecl 0x13e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e055e90 '__SVFloat16_t'
|-TypedefDecl 0x13e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e056390 '__SVBool_t'
|-TypedefDecl 0x13e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e0563f0 '__SVCount_t'
|-TypedefDecl 0x13e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
|-TypedefDecl 0x13e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
`-FunctionDecl 0x13e128438 <dataset_diviso_filec/func24571_vuln.c:1:1, line:46:1> line:1:1 invalid GetCode_ 'int (int *, int *, int, int, int *)'
  |-ParmVarDecl 0x13e128128 <col:10, col:19> col:19 invalid fd 'int *'
  |-ParmVarDecl 0x13e1281a8 <col:23, col:41> col:41 referenced invalid scd 'int *'
  |-ParmVarDecl 0x13e128228 <col:46, col:50> col:50 used code_size 'int'
  |-ParmVarDecl 0x13e1282a8 <col:61, col:65> col:65 used flag 'int'
  |-ParmVarDecl 0x13e128328 <col:71, col:76> col:76 used ZeroDataBlockP 'int *'
  `-CompoundStmt 0x13e143780 <line:2:1, line:46:1>
    |-DeclStmt 0x13e1286a8 <line:3:2, col:15>
    | |-VarDecl 0x13e128520 <col:2, col:6> col:6 used i 'int'
    | |-VarDecl 0x13e1285a0 <col:2, col:9> col:9 used j 'int'
    | `-VarDecl 0x13e128620 <col:2, col:12> col:12 used ret 'int'
    |-DeclStmt 0x13e128740 <line:4:2, col:21>
    | `-VarDecl 0x13e1286d8 <col:2, col:16> col:16 used count 'unsigned char'
    |-IfStmt 0x13e141b98 <line:6:2, line:12:2>
    | |-ImplicitCastExpr 0x13e128778 <line:6:5> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13e128758 <col:5> 'int' lvalue ParmVar 0x13e1282a8 'flag' 'int'
    | `-CompoundStmt 0x13e141b60 <col:11, line:12:2>
    |   |-BinaryOperator 0x13e141868 <line:7:3, col:17> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x13e141800 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit
    |   | | `-RecoveryExpr 0x13e1287b0 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13e128790 <col:3> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |   | `-IntegerLiteral 0x13e141848 <col:17> 'int' 0
    |   |-BinaryOperator 0x13e141938 <line:8:3, col:18> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x13e1418d0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit
    |   | | `-RecoveryExpr 0x13e1418a8 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13e141888 <col:3> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |   | `-IntegerLiteral 0x13e141918 <col:18> 'int' 0
    |   |-BinaryOperator 0x13e141a08 <line:9:3, col:20> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x13e1419a0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte
    |   | | `-RecoveryExpr 0x13e141978 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13e141958 <col:3> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |   | `-IntegerLiteral 0x13e1419e8 <col:20> 'int' 2
    |   |-BinaryOperator 0x13e141b10 <line:10:3, col:15> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x13e141a70 <col:3, col:8> '<dependent type>' contains-errors lvalue ->done
    |   | | `-RecoveryExpr 0x13e141a48 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13e141a28 <col:3> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |   | `-RecoveryExpr 0x13e141af0 <col:15> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x13e141b50 <line:11:3, col:10>
    |     `-IntegerLiteral 0x13e141b30 <col:10> 'int' 0
    |-IfStmt 0x13e142da0 <line:14:2, line:32:2>
    | |-BinaryOperator 0x13e141ce8 <line:14:5, col:39> 'int' contains-errors '>='
    | | |-ParenExpr 0x13e141c60 <col:5, col:29> '<dependent type>' contains-errors
    | | | `-BinaryOperator 0x13e141c40 <col:6, col:20> '<dependent type>' contains-errors '+'
    | | |   |-CXXDependentScopeMemberExpr 0x13e141bd8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->curbit
    | | |   | `-RecoveryExpr 0x13e141bb8 <col:6> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x13e141c20 <col:20> 'int' lvalue ParmVar 0x13e128228 'code_size' 'int'
    | | `-CXXDependentScopeMemberExpr 0x13e141ca0 <col:34, col:39> '<dependent type>' contains-errors lvalue ->lastbit
    | |   `-RecoveryExpr 0x13e141c80 <col:34> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13e142d58 <col:48, line:32:2>
    |   |-IfStmt 0x13e141ef8 <line:15:3, line:20:3>
    |   | |-CXXDependentScopeMemberExpr 0x13e141d28 <line:15:6, col:11> '<dependent type>' contains-errors lvalue ->done
    |   | | `-RecoveryExpr 0x13e141d08 <col:6> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13e141ed8 <col:17, line:20:3>
    |   |   |-IfStmt 0x13e141e70 <line:16:4, line:18:4>
    |   |   | |-BinaryOperator 0x13e141e40 <line:16:7, col:27> 'int' contains-errors '>='
    |   |   | | |-CXXDependentScopeMemberExpr 0x13e141d90 <col:7, col:12> '<dependent type>' contains-errors lvalue ->curbit
    |   |   | | | `-RecoveryExpr 0x13e141d70 <col:7> '<dependent type>' contains-errors lvalue
    |   |   | | `-CXXDependentScopeMemberExpr 0x13e141df8 <col:22, col:27> '<dependent type>' contains-errors lvalue ->lastbit
    |   |   | |   `-RecoveryExpr 0x13e141dd8 <col:22> '<dependent type>' contains-errors lvalue
    |   |   | `-CompoundStmt 0x13e141e60 <col:36, line:18:4>
    |   |   `-ReturnStmt 0x13e141ec8 <line:19:4, col:12>
    |   |     `-UnaryOperator 0x13e141eb0 <col:11, col:12> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x13e141e90 <col:12> 'int' 1
    |   |-BinaryOperator 0x13e142148 <line:22:3, col:44> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x13e141fe0 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x13e141fc8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x13e141f60 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf
    |   | | |   `-RecoveryExpr 0x13e141f38 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x13e141f18 <col:3> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |   | | `-IntegerLiteral 0x13e141fa8 <col:12> 'int' 0
    |   | `-ArraySubscriptExpr 0x13e142128 <col:17, col:44> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x13e142110 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x13e142020 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
    |   |   |   `-RecoveryExpr 0x13e142000 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x13e1420f0 <col:26, col:43> '<dependent type>' contains-errors '-'
    |   |     |-CXXDependentScopeMemberExpr 0x13e142088 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte
    |   |     | `-RecoveryExpr 0x13e142068 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x13e1420d0 <col:43> 'int' 2
    |   |-BinaryOperator 0x13e142398 <line:23:3, col:44> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x13e142230 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x13e142218 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x13e1421b0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf
    |   | | |   `-RecoveryExpr 0x13e142188 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x13e142168 <col:3> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |   | | `-IntegerLiteral 0x13e1421f8 <col:12> 'int' 1
    |   | `-ArraySubscriptExpr 0x13e142378 <col:17, col:44> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x13e142360 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x13e142270 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
    |   |   |   `-RecoveryExpr 0x13e142250 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x13e142340 <col:26, col:43> '<dependent type>' contains-errors '-'
    |   |     |-CXXDependentScopeMemberExpr 0x13e1422d8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte
    |   |     | `-RecoveryExpr 0x13e1422b8 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x13e142320 <col:43> 'int' 1
    |   |-IfStmt 0x13e142858 <line:25:3, line:27:3>
    |   | |-BinaryOperator 0x13e142700 <line:25:6, col:66> 'int' contains-errors '<='
    |   | | |-ParenExpr 0x13e1426c0 <col:6, col:61> 'unsigned char' contains-errors
    |   | | | `-BinaryOperator 0x13e1426a0 <col:7, col:60> 'unsigned char' contains-errors '='
    |   | | |   |-DeclRefExpr 0x13e1423b8 <col:7> 'unsigned char' lvalue Var 0x13e1286d8 'count' 'unsigned char'
    |   | | |   `-CallExpr 0x13e142668 <col:15, col:60> '<dependent type>' contains-errors
    |   | | |     |-DeclRefExpr 0x13e142530 <col:15> 'int ()' Function 0x13e142478 'GetDataBlock' 'int ()'
    |   | | |     |-RecoveryExpr 0x13e142550 <col:28> '<dependent type>' contains-errors lvalue
    |   | | |     |-UnaryOperator 0x13e142630 <col:32, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | |     | `-ArraySubscriptExpr 0x13e142610 <col:33, col:43> '<dependent type>' contains-errors lvalue
    |   | | |     |   |-ImplicitCastExpr 0x13e1425f8 <col:33, col:38> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     |   | `-CXXDependentScopeMemberExpr 0x13e142590 <col:33, col:38> '<dependent type>' contains-errors lvalue ->buf
    |   | | |     |   |   `-RecoveryExpr 0x13e142570 <col:33> '<dependent type>' contains-errors lvalue
    |   | | |     |   `-IntegerLiteral 0x13e1425d8 <col:42> 'int' 2
    |   | | |     `-DeclRefExpr 0x13e142648 <col:46> 'int *' lvalue ParmVar 0x13e128328 'ZeroDataBlockP' 'int *'
    |   | | `-IntegerLiteral 0x13e1426e0 <col:66> 'int' 0
    |   | `-CompoundStmt 0x13e142840 <col:69, line:27:3>
    |   |   `-BinaryOperator 0x13e142820 <line:26:4, col:16> '<dependent type>' contains-errors '='
    |   |     |-CXXDependentScopeMemberExpr 0x13e142768 <col:4, col:9> '<dependent type>' contains-errors lvalue ->done
    |   |     | `-RecoveryExpr 0x13e142740 <col:4> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x13e142720 <col:4> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |   |     `-RecoveryExpr 0x13e142800 <col:16> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x13e142998 <line:29:3, col:24> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x13e1428c0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte
    |   | | `-RecoveryExpr 0x13e142898 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13e142878 <col:3> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |   | `-BinaryOperator 0x13e142978 <col:20, col:24> 'int' '+'
    |   |   |-IntegerLiteral 0x13e142908 <col:20> 'int' 2
    |   |   `-ImplicitCastExpr 0x13e142960 <col:24> 'int' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x13e142948 <col:24> 'unsigned char' <LValueToRValue>
    |   |       `-DeclRefExpr 0x13e142928 <col:24> 'unsigned char' lvalue Var 0x13e1286d8 'count' 'unsigned char'
    |   |-BinaryOperator 0x13e142b98 <line:30:3, col:48> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x13e142a00 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit
    |   | | `-RecoveryExpr 0x13e1429d8 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13e1429b8 <col:3> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |   | `-BinaryOperator 0x13e142b78 <col:17, col:48> '<dependent type>' contains-errors '+'
    |   |   |-ParenExpr 0x13e142b38 <col:17, col:44> '<dependent type>' contains-errors
    |   |   | `-BinaryOperator 0x13e142b18 <col:18, col:37> '<dependent type>' contains-errors '-'
    |   |   |   |-CXXDependentScopeMemberExpr 0x13e142a68 <col:18, col:23> '<dependent type>' contains-errors lvalue ->curbit
    |   |   |   | `-RecoveryExpr 0x13e142a48 <col:18> '<dependent type>' contains-errors lvalue
    |   |   |   `-CXXDependentScopeMemberExpr 0x13e142ad0 <col:32, col:37> '<dependent type>' contains-errors lvalue ->lastbit
    |   |   |     `-RecoveryExpr 0x13e142ab0 <col:32> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x13e142b58 <col:48> 'int' 16
    |   `-BinaryOperator 0x13e142d38 <line:31:3, col:32> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x13e142c00 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit
    |     | `-RecoveryExpr 0x13e142bd8 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x13e142bb8 <col:3> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    |     `-BinaryOperator 0x13e142d18 <col:18, col:32> 'int' '*'
    |       |-ParenExpr 0x13e142cd8 <col:18, col:28> 'int'
    |       | `-BinaryOperator 0x13e142cb8 <col:19, col:23> 'int' '+'
    |       |   |-IntegerLiteral 0x13e142c48 <col:19> 'int' 2
    |       |   `-ImplicitCastExpr 0x13e142ca0 <col:23> 'int' <IntegralCast>
    |       |     `-ImplicitCastExpr 0x13e142c88 <col:23> 'unsigned char' <LValueToRValue>
    |       |       `-DeclRefExpr 0x13e142c68 <col:23> 'unsigned char' lvalue Var 0x13e1286d8 'count' 'unsigned char'
    |       `-IntegerLiteral 0x13e142cf8 <col:32> 'int' 8
    |-IfStmt 0x13e143628 <line:34:2, line:41:2> has_else
    | |-RecoveryExpr 0x13e142f20 <line:34:6, col:56> '_Bool' contains-errors
    | |-CompoundStmt 0x13e142fb8 <col:59, line:36:2>
    | | `-BinaryOperator 0x13e142f98 <line:35:3, col:10> 'int' '='
    | |   |-DeclRefExpr 0x13e142f40 <col:3> 'int' lvalue Var 0x13e128620 'ret' 'int'
    | |   `-UnaryOperator 0x13e142f80 <col:9, col:10> 'int' prefix '-'
    | |     `-IntegerLiteral 0x13e142f60 <col:10> 'int' 1
    | `-CompoundStmt 0x13e143608 <line:36:9, line:41:2>
    |   |-BinaryOperator 0x13e143010 <line:37:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x13e142fd0 <col:3> 'int' lvalue Var 0x13e128620 'ret' 'int'
    |   | `-IntegerLiteral 0x13e142ff0 <col:9> 'int' 0
    |   `-ForStmt 0x13e1435d0 <line:38:3, line:40:3>
    |     |-BinaryOperator 0x13e143138 <line:38:8, col:29> 'int' contains-errors ','
    |     | |-BinaryOperator 0x13e1430b8 <col:8, col:17> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x13e143030 <col:8> 'int' lvalue Var 0x13e128520 'i' 'int'
    |     | | `-CXXDependentScopeMemberExpr 0x13e143070 <col:12, col:17> '<dependent type>' contains-errors lvalue ->curbit
    |     | |   `-RecoveryExpr 0x13e143050 <col:12> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x13e143118 <col:25, col:29> 'int' '='
    |     |   |-DeclRefExpr 0x13e1430d8 <col:25> 'int' lvalue Var 0x13e1285a0 'j' 'int'
    |     |   `-IntegerLiteral 0x13e1430f8 <col:29> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x13e1431c8 <col:32, col:36> 'int' '<'
    |     | |-ImplicitCastExpr 0x13e143198 <col:32> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x13e143158 <col:32> 'int' lvalue Var 0x13e1285a0 'j' 'int'
    |     | `-ImplicitCastExpr 0x13e1431b0 <col:36> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13e143178 <col:36> 'int' lvalue ParmVar 0x13e128228 'code_size' 'int'
    |     |-BinaryOperator 0x13e143258 <col:47, col:54> 'int' ','
    |     | |-UnaryOperator 0x13e143208 <col:47, col:49> 'int' prefix '++'
    |     | | `-DeclRefExpr 0x13e1431e8 <col:49> 'int' lvalue Var 0x13e128520 'i' 'int'
    |     | `-UnaryOperator 0x13e143240 <col:52, col:54> 'int' prefix '++'
    |     |   `-DeclRefExpr 0x13e143220 <col:54> 'int' lvalue Var 0x13e1285a0 'j' 'int'
    |     `-CompoundStmt 0x13e1435b8 <col:57, line:40:3>
    |       `-CompoundAssignOperator 0x13e143588 <line:39:4, col:56> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |         |-DeclRefExpr 0x13e143278 <col:4> 'int' lvalue Var 0x13e128620 'ret' 'int'
    |         `-BinaryOperator 0x13e143568 <col:11, col:56> '<dependent type>' contains-errors '<<'
    |           |-ParenExpr 0x13e143528 <col:11, col:51> 'int' contains-errors
    |           | `-BinaryOperator 0x13e143508 <col:12, col:50> 'int' contains-errors '!='
    |           |   |-ParenExpr 0x13e1434c8 <col:12, col:45> '<dependent type>' contains-errors
    |           |   | `-BinaryOperator 0x13e1434a8 <col:13, col:44> '<dependent type>' contains-errors '&'
    |           |   |   |-ArraySubscriptExpr 0x13e143390 <col:13, col:27> '<dependent type>' contains-errors lvalue
    |           |   |   | |-ImplicitCastExpr 0x13e143378 <col:13, col:18> '<dependent type>' contains-errors <LValueToRValue>
    |           |   |   | | `-CXXDependentScopeMemberExpr 0x13e1432b8 <col:13, col:18> '<dependent type>' contains-errors lvalue ->buf
    |           |   |   | |   `-RecoveryExpr 0x13e143298 <col:13> '<dependent type>' contains-errors lvalue
    |           |   |   | `-BinaryOperator 0x13e143358 <col:22, col:26> 'int' '/'
    |           |   |   |   |-ImplicitCastExpr 0x13e143340 <col:22> 'int' <LValueToRValue>
    |           |   |   |   | `-DeclRefExpr 0x13e143300 <col:22> 'int' lvalue Var 0x13e128520 'i' 'int'
    |           |   |   |   `-IntegerLiteral 0x13e143320 <col:26> 'int' 8
    |           |   |   `-ParenExpr 0x13e143488 <col:31, col:44> 'int'
    |           |   |     `-BinaryOperator 0x13e143468 <col:32, col:43> 'int' '<<'
    |           |   |       |-IntegerLiteral 0x13e1433b0 <col:32> 'int' 1
    |           |   |       `-ParenExpr 0x13e143448 <col:37, col:43> 'int'
    |           |   |         `-BinaryOperator 0x13e143428 <col:38, col:42> 'int' '%'
    |           |   |           |-ImplicitCastExpr 0x13e143410 <col:38> 'int' <LValueToRValue>
    |           |   |           | `-DeclRefExpr 0x13e1433d0 <col:38> 'int' lvalue Var 0x13e128520 'i' 'int'
    |           |   |           `-IntegerLiteral 0x13e1433f0 <col:42> 'int' 8
    |           |   `-IntegerLiteral 0x13e1434e8 <col:50> 'int' 0
    |           `-DeclRefExpr 0x13e143548 <col:56> 'int' lvalue Var 0x13e1285a0 'j' 'int'
    |-CompoundAssignOperator 0x13e143708 <line:43:2, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x13e1436a0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->curbit
    | | `-RecoveryExpr 0x13e143678 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13e143658 <col:2> 'int *' lvalue ParmVar 0x13e1281a8 'scd' 'int *'
    | `-DeclRefExpr 0x13e1436e8 <col:17> 'int' lvalue ParmVar 0x13e128228 'code_size' 'int'
    `-ReturnStmt 0x13e143770 <line:45:2, col:9>
      `-ImplicitCastExpr 0x13e143758 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13e143738 <col:9> 'int' lvalue Var 0x13e128620 'ret' 'int'
