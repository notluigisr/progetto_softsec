TranslationUnitDecl 0x159855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1598564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x159855bd0 '__int128'
|-TypedefDecl 0x159856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x159855bf0 'unsigned __int128'
|-TypedefDecl 0x159926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x159926800 'struct __NSConstantString_tag'
|   `-Record 0x159856580 '__NSConstantString_tag'
|-TypedefDecl 0x159926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x159855d90 '__SVInt8_t'
|-TypedefDecl 0x159926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x159855db0 '__SVInt16_t'
|-TypedefDecl 0x159926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x159855dd0 '__SVInt32_t'
|-TypedefDecl 0x159926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x159855df0 '__SVInt64_t'
|-TypedefDecl 0x159926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x159855e10 '__SVUint8_t'
|-TypedefDecl 0x159926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x159855e30 '__SVUint16_t'
|-TypedefDecl 0x159926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x159855e50 '__SVUint32_t'
|-TypedefDecl 0x159926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x159855e70 '__SVUint64_t'
|-TypedefDecl 0x159926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x159855e90 '__SVFloat16_t'
|-TypedefDecl 0x159926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x159855eb0 '__SVFloat32_t'
|-TypedefDecl 0x159926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x159855ed0 '__SVFloat64_t'
|-TypedefDecl 0x159926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x159855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x159926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x159855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x159926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x159855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x159927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x159855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1599270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x159855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x159927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x159855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x159927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x159855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1599271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x159855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x159927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x159855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1599272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x159856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x159927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x159856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x159927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x159856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1599273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x159856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x159927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x159856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1599274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1598560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x159927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1598560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x159927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1598560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1599275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x159856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x159927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x159856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1599276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x159856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x159927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x159856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x159927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x159856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x159928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1598561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x159928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1598561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1599280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1598561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x159928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x159856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1599281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x159856230 '__clang_svint16x4_t'
|-TypedefDecl 0x159928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x159856250 '__clang_svint32x4_t'
|-TypedefDecl 0x159928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x159856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1599282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x159856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x159928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1598562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1599283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1598562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x159928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1598562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x159928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x159856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1599284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x159856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x159928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x159856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1599285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x159856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x159928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x159856390 '__SVBool_t'
|-TypedefDecl 0x159928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1598563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1599286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1598563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x159928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1598563f0 '__SVCount_t'
|-TypedefDecl 0x1599287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1599287b0 'char *'
|   `-BuiltinType 0x1598556b0 'char'
|-TypedefDecl 0x159928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1599287b0 'char *'
|   `-BuiltinType 0x1598556b0 'char'
|-FunctionDecl 0x159928af8 <dataset_diviso_filec/func1689_vuln.c:1:1, line:63:1> line:1:12 unzzip_cat 'int (int, char **, int)' static
| |-ParmVarDecl 0x1599288d8 <col:24, col:28> col:28 used argc 'int'
| |-ParmVarDecl 0x159928988 <col:34, col:42> col:42 used argv 'char **'
| |-ParmVarDecl 0x159928a08 <col:48, col:52> col:52 used extract 'int'
| `-CompoundStmt 0x1599466b8 <line:2:1, line:63:1>
|   |-DeclStmt 0x159928c80 <line:3:5, col:13>
|   | `-VarDecl 0x159928c18 <col:5, col:9> col:9 used argn 'int'
|   |-IfStmt 0x159942528 <line:6:5, line:10:5>
|   | |-BinaryOperator 0x159928d20 <line:6:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x159928d08 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x159928cc8 <col:9> 'int' lvalue ParmVar 0x1599288d8 'argc' 'int'
|   | | `-IntegerLiteral 0x159928ce8 <col:17> 'int' 1
|   | `-CompoundStmt 0x159942508 <line:7:5, line:10:5>
|   |   |-CallExpr 0x159942468 <line:8:2, col:23> 'int'
|   |   | |-ImplicitCastExpr 0x159942450 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x159942358 <col:2> 'int (const char *, ...)' Function 0x1599421b0 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x1599424a8 <<scratch space>:2:1, dataset_diviso_filec/func1689_vuln.c:8:18> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x159942490 <<scratch space>:2:1, dataset_diviso_filec/func1689_vuln.c:8:18> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1599423c0 <<scratch space>:2:1, dataset_diviso_filec/func1689_vuln.c:8:18> 'char[40]' lvalue "dataset_diviso_filec/func1689_vuln.cSTR"
|   |   `-ReturnStmt 0x1599424f8 <line:9:2, col:9>
|   |     `-RecoveryExpr 0x1599424d8 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x159945060 <line:13:5, line:17:5>
|   | |-UnaryOperator 0x159942808 <line:13:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1599427f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1599427d0 <col:11> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x159945038 <col:17, line:17:5>
|   |   |-CallExpr 0x159942c78 <line:14:9, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x159942900 <col:9> 'int ()' Function 0x159942848 'DBG3' 'int ()'
|   |   | |-StringLiteral 0x159942960 <col:14> 'char[4]' lvalue "STR"
|   |   | |-RecoveryExpr 0x159942bf8 <col:21> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x159942c50 <col:28, col:42> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x159942b48 <col:28> 'char *(int)' Function 0x1599429d8 'strerror' 'char *(int)'
|   |   |   `-RecoveryExpr 0x159942c18 <col:37> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x159942e40 <line:15:2, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x159942e28 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x159942d90 <col:2> 'int ()' Function 0x159942cd8 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x159942e68 <col:9, col:15> 'char *' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x159942e08 <col:9, col:15> 'char *' lvalue
|   |   |     |-ImplicitCastExpr 0x159942df0 <col:9> 'char **' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x159942db0 <col:9> 'char **' lvalue ParmVar 0x159928988 'argv' 'char **'
|   |   |     `-IntegerLiteral 0x159942dd0 <col:14> 'int' 1
|   |   `-ReturnStmt 0x159945028 <line:16:2, col:23>
|   |     `-CallExpr 0x159945000 <col:9, col:23> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x159942f60 <col:9> 'int ()' Function 0x159942ea8 'exitcode' 'int ()'
|   |       `-RecoveryExpr 0x159942fc0 <col:18> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x159945b78 <line:19:5, line:32:5>
|   | |-BinaryOperator 0x1599450d8 <line:19:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1599450c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x159945080 <col:9> 'int' lvalue ParmVar 0x1599288d8 'argc' 'int'
|   | | `-IntegerLiteral 0x1599450a0 <col:17> 'int' 2
|   | `-CompoundStmt 0x159945b58 <line:20:5, line:32:5>
|   |   |-CallExpr 0x1599453d8 <line:22:2, col:19> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x159945330 <col:2> 'int ()' Function 0x159945278 'DBG2' 'int ()'
|   |   | |-StringLiteral 0x159945350 <col:7> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x1599453b8 <col:14> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x159945b48 <line:31:2, col:9>
|   |     `-IntegerLiteral 0x159945b28 <col:9> 'int' 0
|   |-IfStmt 0x159946000 <line:34:5, line:43:5>
|   | |-BinaryOperator 0x159945c60 <line:34:9, col:23> 'int' '&&'
|   | | |-BinaryOperator 0x159945bf0 <col:9, col:17> 'int' '=='
|   | | | |-ImplicitCastExpr 0x159945bd8 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x159945b98 <col:9> 'int' lvalue ParmVar 0x1599288d8 'argc' 'int'
|   | | | `-IntegerLiteral 0x159945bb8 <col:17> 'int' 3
|   | | `-UnaryOperator 0x159945c48 <col:22, col:23> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x159945c30 <col:23> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x159945c10 <col:23> 'int' lvalue ParmVar 0x159928a08 'extract' 'int'
|   | `-CompoundStmt 0x159945fd8 <line:35:5, line:43:5>
|   |   |-WhileStmt 0x159945f88 <line:37:2, line:40:2>
|   |   | |-RecoveryExpr 0x159945e58 <line:37:9, col:69> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x159945f78 <line:38:2, line:40:2>
|   |   `-ReturnStmt 0x159945fc8 <line:42:2, col:9>
|   |     `-IntegerLiteral 0x159945fa8 <col:9> 'int' 0
|   |-ForStmt 0x159946650 <line:45:5, line:61:5>
|   | |-BinaryOperator 0x159946060 <line:45:10, col:15> 'int' '='
|   | | |-DeclRefExpr 0x159946020 <col:10> 'int' lvalue Var 0x159928c18 'argn' 'int'
|   | | `-IntegerLiteral 0x159946040 <col:15> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1599460f0 <col:18, col:25> 'int' '<'
|   | | |-ImplicitCastExpr 0x1599460c0 <col:18> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x159946080 <col:18> 'int' lvalue Var 0x159928c18 'argn' 'int'
|   | | `-ImplicitCastExpr 0x1599460d8 <col:25> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1599460a0 <col:25> 'int' lvalue ParmVar 0x1599288d8 'argc' 'int'
|   | |-UnaryOperator 0x159946130 <col:31, col:35> 'int' postfix '++'
|   | | `-DeclRefExpr 0x159946110 <col:31> 'int' lvalue Var 0x159928c18 'argn' 'int'
|   | `-CompoundStmt 0x159946640 <line:46:5, line:61:5>
|   `-ReturnStmt 0x1599466a8 <line:62:5, col:12>
|     `-IntegerLiteral 0x159946688 <col:12> 'int' 0
|-FunctionDecl 0x1599421b0 <line:8:2> col:2 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1599422b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x159942258 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x159942320 <col:2> Implicit printf 1 2
`-FunctionDecl 0x1599429d8 <line:14:28> col:28 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x159942ad8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x159942a80 <<invalid sloc>> Implicit 901
