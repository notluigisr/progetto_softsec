TranslationUnitDecl 0x125855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1258564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125855bd0 '__int128'
|-TypedefDecl 0x125856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125855bf0 'unsigned __int128'
|-TypedefDecl 0x12600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12600bc00 'struct __NSConstantString_tag'
|   `-Record 0x125856580 '__NSConstantString_tag'
|-TypedefDecl 0x12600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125855d90 '__SVInt8_t'
|-TypedefDecl 0x12600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125855db0 '__SVInt16_t'
|-TypedefDecl 0x12600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125855dd0 '__SVInt32_t'
|-TypedefDecl 0x12600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125855df0 '__SVInt64_t'
|-TypedefDecl 0x12600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125855e10 '__SVUint8_t'
|-TypedefDecl 0x12600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125855e30 '__SVUint16_t'
|-TypedefDecl 0x12600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125855e50 '__SVUint32_t'
|-TypedefDecl 0x12600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125855e70 '__SVUint64_t'
|-TypedefDecl 0x12600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125855e90 '__SVFloat16_t'
|-TypedefDecl 0x12600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1258560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1258560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1258560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1258561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1258561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1258561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1258562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1258562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1258562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125856390 '__SVBool_t'
|-TypedefDecl 0x12600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1258563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1258563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1258563f0 '__SVCount_t'
|-TypedefDecl 0x12600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-TypedefDecl 0x12600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-FunctionDecl 0x12600dee0 <dataset_diviso_filec/func18774_vuln.c:1:1, line:57:1> line:1:13 invalid skel 'void (const char *, int, int)' static
| |-ParmVarDecl 0x12600dcd8 <col:18, col:30> col:30 used homedir 'const char *'
| |-ParmVarDecl 0x12600dd70 <col:39, col:45> col:45 invalid u 'int'
| |-ParmVarDecl 0x12600ddf0 <col:48, col:54> col:54 invalid g 'int'
| `-CompoundStmt 0x125925f20 <col:57, line:57:1>
|   |-DeclStmt 0x12600e020 <line:2:2, col:13>
|   | `-VarDecl 0x12600dfb8 <col:2, col:8> col:8 used fname 'char *'
|   `-IfStmt 0x125925ef0 <line:5:2, line:56:2> has_else
|     |-RecoveryExpr 0x125923670 <line:5:6, col:54> '_Bool' contains-errors
|     |-CompoundStmt 0x12602be50 <col:57, line:22:2>
|     | |-IfStmt 0x125923bb0 <line:7:3, line:8:17>
|     | | |-BinaryOperator 0x125923a18 <line:7:7, col:44> 'int' '=='
|     | | | |-CallExpr 0x125923978 <col:7, col:38> 'int'
|     | | | | |-ImplicitCastExpr 0x125923960 <col:7> 'int (*)()' <FunctionToPointerDecay>
|     | | | | | `-DeclRefExpr 0x125923858 <col:7> 'int ()' Function 0x125923738 'asprintf' 'int ()'
|     | | | | |-UnaryOperator 0x1259238d0 <col:16, col:17> 'char **' prefix '&' cannot overflow
|     | | | | | `-DeclRefExpr 0x125923878 <col:17> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|     | | | | |-ImplicitCastExpr 0x1259239b0 <col:24> 'char *' <ArrayToPointerDecay>
|     | | | | | `-StringLiteral 0x1259238e8 <col:24> 'char[4]' lvalue "STR"
|     | | | | `-ImplicitCastExpr 0x1259239c8 <col:31> 'const char *' <LValueToRValue>
|     | | | |   `-DeclRefExpr 0x125923908 <col:31> 'const char *' lvalue ParmVar 0x12600dcd8 'homedir' 'const char *'
|     | | | `-UnaryOperator 0x125923a00 <col:43, col:44> 'int' prefix '-'
|     | | |   `-IntegerLiteral 0x1259239e0 <col:44> 'int' 1
|     | | `-CallExpr 0x125923b70 <line:8:4, col:17> 'int'
|     | |   |-ImplicitCastExpr 0x125923b58 <col:4> 'int (*)()' <FunctionToPointerDecay>
|     | |   | `-DeclRefExpr 0x125923b18 <col:4> 'int ()' Function 0x125923a60 'errExit' 'int ()'
|     | |   `-ImplicitCastExpr 0x125923b98 <col:12> 'char *' <ArrayToPointerDecay>
|     | |     `-StringLiteral 0x125923b38 <col:12> 'char[4]' lvalue "STR"
|     | |-DeclStmt 0x125923d48 <line:9:3, col:16>
|     | | |-RecordDecl 0x125923bd0 <col:3, col:10> col:10 struct stat
|     | | `-VarDecl 0x125923cc8 <col:3, col:15> col:15 invalid s 'struct stat'
|     | |-IfStmt 0x125923f38 <line:11:3, line:12:4>
|     | | |-BinaryOperator 0x125923f08 <line:11:7, col:26> 'int' contains-errors '=='
|     | | | |-CallExpr 0x125923eb8 <col:7, col:21> '<dependent type>' contains-errors
|     | | | | |-DeclRefExpr 0x125923e40 <col:7> 'int ()' Function 0x125923d88 'stat' 'int ()'
|     | | | | |-DeclRefExpr 0x125923e60 <col:12> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|     | | | | `-UnaryOperator 0x125923ea0 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|     | | | |   `-RecoveryExpr 0x125923e80 <col:20> '<dependent type>' contains-errors lvalue
|     | | | `-IntegerLiteral 0x125923ee8 <col:26> 'int' 0
|     | | `-ReturnStmt 0x125923f28 <line:12:4>
|     | |-IfStmt 0x12602bb78 <line:13:3, line:20:3> has_else
|     | | |-BinaryOperator 0x125924020 <line:13:7, col:26> 'int' contains-errors '=='
|     | | | |-CallExpr 0x125923fd0 <col:7, col:21> '<dependent type>' contains-errors
|     | | | | |-DeclRefExpr 0x125923f58 <col:7> 'int ()' Function 0x125923d88 'stat' 'int ()'
|     | | | | |-StringLiteral 0x125923f78 <col:12> 'char[4]' lvalue "STR"
|     | | | | `-UnaryOperator 0x125923fb8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|     | | | |   `-RecoveryExpr 0x125923f98 <col:20> '<dependent type>' contains-errors lvalue
|     | | | `-IntegerLiteral 0x125924000 <col:26> 'int' 0
|     | | |-CompoundStmt 0x12602b7c0 <col:29, line:16:3>
|     | | | |-CallExpr 0x12602b600 <line:14:4, col:38> '<dependent type>' contains-errors
|     | | | | |-DeclRefExpr 0x125924120 <col:4> 'int ()' Function 0x125924068 'copy_file' 'int ()'
|     | | | | |-StringLiteral 0x125924140 <col:14> 'char[4]' lvalue "STR"
|     | | | | |-DeclRefExpr 0x125924160 <col:21> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|     | | | | |-RecoveryExpr 0x125924180 <col:28> '<dependent type>' contains-errors lvalue
|     | | | | |-RecoveryExpr 0x1259241a0 <col:31> '<dependent type>' contains-errors lvalue
|     | | | | `-IntegerLiteral 0x1259241c0 <col:34> 'int' 420
|     | | | `-CallExpr 0x12602b780 <line:15:4, col:19> 'int'
|     | | |   |-ImplicitCastExpr 0x12602b768 <col:4> 'int (*)()' <FunctionToPointerDecay>
|     | | |   | `-DeclRefExpr 0x12602b728 <col:4> 'int ()' Function 0x12602b670 'fs_logger' 'int ()'
|     | | |   `-ImplicitCastExpr 0x12602b7a8 <col:14> 'char *' <ArrayToPointerDecay>
|     | | |     `-StringLiteral 0x12602b748 <col:14> 'char[4]' lvalue "STR"
|     | | `-CompoundStmt 0x12602bb58 <line:17:8, line:20:3>
|     | |   |-CallExpr 0x12602b960 <line:18:4, col:40> '<dependent type>' contains-errors
|     | |   | |-DeclRefExpr 0x12602b8c0 <col:4> 'int ()' Function 0x12602b808 'touch_file_as_user' 'int ()'
|     | |   | |-DeclRefExpr 0x12602b8e0 <col:23> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|     | |   | |-RecoveryExpr 0x12602b900 <col:30> '<dependent type>' contains-errors lvalue
|     | |   | |-RecoveryExpr 0x12602b920 <col:33> '<dependent type>' contains-errors lvalue
|     | |   | `-IntegerLiteral 0x12602b940 <col:36> 'int' 420
|     | |   `-CallExpr 0x12602baf8 <line:19:4, col:27> 'int'
|     | |     |-ImplicitCastExpr 0x12602bae0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|     | |     | `-DeclRefExpr 0x12602ba80 <col:4> 'int ()' Function 0x12602b9c8 'fs_logger2' 'int ()'
|     | |     |-ImplicitCastExpr 0x12602bb28 <col:15> 'char *' <ArrayToPointerDecay>
|     | |     | `-StringLiteral 0x12602baa0 <col:15> 'char[4]' lvalue "STR"
|     | |     `-ImplicitCastExpr 0x12602bb40 <col:22> 'char *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x12602bac0 <col:22> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|     | `-CallExpr 0x12602bdf8 <line:21:3, col:13> 'void'
|     |   |-ImplicitCastExpr 0x12602bde0 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x12602bd58 <col:3> 'void (void *)' Function 0x12602bbe8 'free' 'void (void *)'
|     |   `-ImplicitCastExpr 0x12602be38 <col:8> 'void *' <BitCast>
|     |     `-ImplicitCastExpr 0x12602be20 <col:8> 'char *' <LValueToRValue>
|     |       `-DeclRefExpr 0x12602bd78 <col:8> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|     `-IfStmt 0x125925ec0 <line:24:7, line:56:2> has_else
|       |-BinaryOperator 0x12602c168 <line:24:11, col:57> 'int' contains-errors '&&'
|       | |-UnaryOperator 0x12602c068 <col:11, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x12602c050 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|       | |   `-RecoveryExpr 0x12602c030 <col:12> '<dependent type>' contains-errors lvalue
|       | `-BinaryOperator 0x12602c148 <col:30, col:57> 'int' contains-errors '=='
|       |   |-CallExpr 0x12602c118 <col:30, col:52> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x12602bed0 <col:30> 'int (const char *, const char *)' Function 0x125923310 'strcmp' 'int (const char *, const char *)'
|       |   | |-CXXDependentScopeMemberExpr 0x12602c0a0 <col:37, col:41> '<dependent type>' contains-errors lvalue .shell
|       |   | | `-RecoveryExpr 0x12602c080 <col:37> '<dependent type>' contains-errors lvalue
|       |   | `-StringLiteral 0x12602bf50 <col:47> 'char[4]' lvalue "STR"
|       |   `-IntegerLiteral 0x12602bfd0 <col:57> 'int' 0
|       |-CompoundStmt 0x1259255e8 <col:60, line:41:2>
|       | |-IfStmt 0x12602c390 <line:26:3, line:27:17>
|       | | |-BinaryOperator 0x12602c2d8 <line:26:7, col:44> 'int' '=='
|       | | | |-CallExpr 0x12602c238 <col:7, col:38> 'int'
|       | | | | |-ImplicitCastExpr 0x12602c220 <col:7> 'int (*)()' <FunctionToPointerDecay>
|       | | | | | `-DeclRefExpr 0x12602c188 <col:7> 'int ()' Function 0x125923738 'asprintf' 'int ()'
|       | | | | |-UnaryOperator 0x12602c1c8 <col:16, col:17> 'char **' prefix '&' cannot overflow
|       | | | | | `-DeclRefExpr 0x12602c1a8 <col:17> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|       | | | | |-ImplicitCastExpr 0x12602c270 <col:24> 'char *' <ArrayToPointerDecay>
|       | | | | | `-StringLiteral 0x12602c1e0 <col:24> 'char[4]' lvalue "STR"
|       | | | | `-ImplicitCastExpr 0x12602c288 <col:31> 'const char *' <LValueToRValue>
|       | | | |   `-DeclRefExpr 0x12602c200 <col:31> 'const char *' lvalue ParmVar 0x12600dcd8 'homedir' 'const char *'
|       | | | `-UnaryOperator 0x12602c2c0 <col:43, col:44> 'int' prefix '-'
|       | | |   `-IntegerLiteral 0x12602c2a0 <col:44> 'int' 1
|       | | `-CallExpr 0x12602c350 <line:27:4, col:17> 'int'
|       | |   |-ImplicitCastExpr 0x12602c338 <col:4> 'int (*)()' <FunctionToPointerDecay>
|       | |   | `-DeclRefExpr 0x12602c2f8 <col:4> 'int ()' Function 0x125923a60 'errExit' 'int ()'
|       | |   `-ImplicitCastExpr 0x12602c378 <col:12> 'char *' <ArrayToPointerDecay>
|       | |     `-StringLiteral 0x12602c318 <col:12> 'char[4]' lvalue "STR"
|       | |-DeclStmt 0x12602c528 <line:28:3, col:16>
|       | | |-RecordDecl 0x12602c3b0 <col:3, col:10> col:10 struct stat
|       | | `-VarDecl 0x12602c4a8 <col:3, col:15> col:15 invalid s 'struct stat'
|       | |-IfStmt 0x125925050 <line:30:3, line:31:4>
|       | | |-BinaryOperator 0x125925020 <line:30:7, col:26> 'int' contains-errors '=='
|       | | | |-CallExpr 0x12602c5b8 <col:7, col:21> '<dependent type>' contains-errors
|       | | | | |-DeclRefExpr 0x12602c540 <col:7> 'int ()' Function 0x125923d88 'stat' 'int ()'
|       | | | | |-DeclRefExpr 0x12602c560 <col:12> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|       | | | | `-UnaryOperator 0x12602c5a0 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | | | |   `-RecoveryExpr 0x12602c580 <col:20> '<dependent type>' contains-errors lvalue
|       | | | `-IntegerLiteral 0x125925000 <col:26> 'int' 0
|       | | `-ReturnStmt 0x125925040 <line:31:4>
|       | |-IfStmt 0x1259254f0 <line:32:3, line:39:3> has_else
|       | | |-BinaryOperator 0x125925138 <line:32:7, col:26> 'int' contains-errors '=='
|       | | | |-CallExpr 0x1259250e8 <col:7, col:21> '<dependent type>' contains-errors
|       | | | | |-DeclRefExpr 0x125925070 <col:7> 'int ()' Function 0x125923d88 'stat' 'int ()'
|       | | | | |-StringLiteral 0x125925090 <col:12> 'char[4]' lvalue "STR"
|       | | | | `-UnaryOperator 0x1259250d0 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | | | |   `-RecoveryExpr 0x1259250b0 <col:20> '<dependent type>' contains-errors lvalue
|       | | | `-IntegerLiteral 0x125925118 <col:26> 'int' 0
|       | | |-CompoundStmt 0x1259252f8 <col:29, line:35:3>
|       | | | |-CallExpr 0x125925218 <line:33:4, col:38> '<dependent type>' contains-errors
|       | | | | |-DeclRefExpr 0x125925158 <col:4> 'int ()' Function 0x125924068 'copy_file' 'int ()'
|       | | | | |-StringLiteral 0x125925178 <col:14> 'char[4]' lvalue "STR"
|       | | | | |-DeclRefExpr 0x125925198 <col:21> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|       | | | | |-RecoveryExpr 0x1259251b8 <col:28> '<dependent type>' contains-errors lvalue
|       | | | | |-RecoveryExpr 0x1259251d8 <col:31> '<dependent type>' contains-errors lvalue
|       | | | | `-IntegerLiteral 0x1259251f8 <col:34> 'int' 420
|       | | | `-CallExpr 0x1259252b8 <line:34:4, col:19> 'int'
|       | | |   |-ImplicitCastExpr 0x1259252a0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|       | | |   | `-DeclRefExpr 0x125925260 <col:4> 'int ()' Function 0x12602b670 'fs_logger' 'int ()'
|       | | |   `-ImplicitCastExpr 0x1259252e0 <col:14> 'char *' <ArrayToPointerDecay>
|       | | |     `-StringLiteral 0x125925280 <col:14> 'char[4]' lvalue "STR"
|       | | `-CompoundStmt 0x1259254d0 <line:36:8, line:39:3>
|       | |   |-CallExpr 0x1259253b8 <line:37:4, col:40> '<dependent type>' contains-errors
|       | |   | |-DeclRefExpr 0x125925318 <col:4> 'int ()' Function 0x12602b808 'touch_file_as_user' 'int ()'
|       | |   | |-DeclRefExpr 0x125925338 <col:23> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|       | |   | |-RecoveryExpr 0x125925358 <col:30> '<dependent type>' contains-errors lvalue
|       | |   | |-RecoveryExpr 0x125925378 <col:33> '<dependent type>' contains-errors lvalue
|       | |   | `-IntegerLiteral 0x125925398 <col:36> 'int' 420
|       | |   `-CallExpr 0x125925470 <line:38:4, col:27> 'int'
|       | |     |-ImplicitCastExpr 0x125925458 <col:4> 'int (*)()' <FunctionToPointerDecay>
|       | |     | `-DeclRefExpr 0x1259253f8 <col:4> 'int ()' Function 0x12602b9c8 'fs_logger2' 'int ()'
|       | |     |-ImplicitCastExpr 0x1259254a0 <col:15> 'char *' <ArrayToPointerDecay>
|       | |     | `-StringLiteral 0x125925418 <col:15> 'char[4]' lvalue "STR"
|       | |     `-ImplicitCastExpr 0x1259254b8 <col:22> 'char *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x125925438 <col:22> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|       | `-CallExpr 0x125925590 <line:40:3, col:13> 'void'
|       |   |-ImplicitCastExpr 0x125925578 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x125925520 <col:3> 'void (void *)' Function 0x12602bbe8 'free' 'void (void *)'
|       |   `-ImplicitCastExpr 0x1259255d0 <col:8> 'void *' <BitCast>
|       |     `-ImplicitCastExpr 0x1259255b8 <col:8> 'char *' <LValueToRValue>
|       |       `-DeclRefExpr 0x125925540 <col:8> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|       `-CompoundStmt 0x125925e88 <line:43:7, line:56:2>
|         |-IfStmt 0x125925828 <line:45:3, line:46:17>
|         | |-BinaryOperator 0x125925770 <line:45:7, col:44> 'int' '=='
|         | | |-CallExpr 0x1259256d0 <col:7, col:38> 'int'
|         | | | |-ImplicitCastExpr 0x1259256b8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|         | | | | `-DeclRefExpr 0x125925620 <col:7> 'int ()' Function 0x125923738 'asprintf' 'int ()'
|         | | | |-UnaryOperator 0x125925660 <col:16, col:17> 'char **' prefix '&' cannot overflow
|         | | | | `-DeclRefExpr 0x125925640 <col:17> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|         | | | |-ImplicitCastExpr 0x125925708 <col:24> 'char *' <ArrayToPointerDecay>
|         | | | | `-StringLiteral 0x125925678 <col:24> 'char[4]' lvalue "STR"
|         | | | `-ImplicitCastExpr 0x125925720 <col:31> 'const char *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x125925698 <col:31> 'const char *' lvalue ParmVar 0x12600dcd8 'homedir' 'const char *'
|         | | `-UnaryOperator 0x125925758 <col:43, col:44> 'int' prefix '-'
|         | |   `-IntegerLiteral 0x125925738 <col:44> 'int' 1
|         | `-CallExpr 0x1259257e8 <line:46:4, col:17> 'int'
|         |   |-ImplicitCastExpr 0x1259257d0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|         |   | `-DeclRefExpr 0x125925790 <col:4> 'int ()' Function 0x125923a60 'errExit' 'int ()'
|         |   `-ImplicitCastExpr 0x125925810 <col:12> 'char *' <ArrayToPointerDecay>
|         |     `-StringLiteral 0x1259257b0 <col:12> 'char[4]' lvalue "STR"
|         |-DeclStmt 0x1259259c8 <line:47:3, col:16>
|         | |-RecordDecl 0x125925848 <col:3, col:10> col:10 struct stat
|         | `-VarDecl 0x125925948 <col:3, col:15> col:15 invalid s 'struct stat'
|         |-IfStmt 0x125925ad8 <line:49:3, line:50:4>
|         | |-BinaryOperator 0x125925aa8 <line:49:7, col:26> 'int' contains-errors '=='
|         | | |-CallExpr 0x125925a58 <col:7, col:21> '<dependent type>' contains-errors
|         | | | |-DeclRefExpr 0x1259259e0 <col:7> 'int ()' Function 0x125923d88 'stat' 'int ()'
|         | | | |-DeclRefExpr 0x125925a00 <col:12> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|         | | | `-UnaryOperator 0x125925a40 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|         | | |   `-RecoveryExpr 0x125925a20 <col:20> '<dependent type>' contains-errors lvalue
|         | | `-IntegerLiteral 0x125925a88 <col:26> 'int' 0
|         | `-ReturnStmt 0x125925ac8 <line:50:4>
|         |-IfStmt 0x125925da0 <line:51:3, line:54:3>
|         | |-BinaryOperator 0x125925bc0 <line:51:7, col:26> 'int' contains-errors '=='
|         | | |-CallExpr 0x125925b70 <col:7, col:21> '<dependent type>' contains-errors
|         | | | |-DeclRefExpr 0x125925af8 <col:7> 'int ()' Function 0x125923d88 'stat' 'int ()'
|         | | | |-StringLiteral 0x125925b18 <col:12> 'char[4]' lvalue "STR"
|         | | | `-UnaryOperator 0x125925b58 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|         | | |   `-RecoveryExpr 0x125925b38 <col:20> '<dependent type>' contains-errors lvalue
|         | | `-IntegerLiteral 0x125925ba0 <col:26> 'int' 0
|         | `-CompoundStmt 0x125925d80 <col:29, line:54:3>
|         |   |-CallExpr 0x125925ca0 <line:52:4, col:38> '<dependent type>' contains-errors
|         |   | |-DeclRefExpr 0x125925be0 <col:4> 'int ()' Function 0x125924068 'copy_file' 'int ()'
|         |   | |-StringLiteral 0x125925c00 <col:14> 'char[4]' lvalue "STR"
|         |   | |-DeclRefExpr 0x125925c20 <col:21> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|         |   | |-RecoveryExpr 0x125925c40 <col:28> '<dependent type>' contains-errors lvalue
|         |   | |-RecoveryExpr 0x125925c60 <col:31> '<dependent type>' contains-errors lvalue
|         |   | `-IntegerLiteral 0x125925c80 <col:34> 'int' 420
|         |   `-CallExpr 0x125925d40 <line:53:4, col:19> 'int'
|         |     |-ImplicitCastExpr 0x125925d28 <col:4> 'int (*)()' <FunctionToPointerDecay>
|         |     | `-DeclRefExpr 0x125925ce8 <col:4> 'int ()' Function 0x12602b670 'fs_logger' 'int ()'
|         |     `-ImplicitCastExpr 0x125925d68 <col:14> 'char *' <ArrayToPointerDecay>
|         |       `-StringLiteral 0x125925d08 <col:14> 'char[4]' lvalue "STR"
|         `-CallExpr 0x125925e30 <line:55:3, col:13> 'void'
|           |-ImplicitCastExpr 0x125925e18 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x125925dc0 <col:3> 'void (void *)' Function 0x12602bbe8 'free' 'void (void *)'
|           `-ImplicitCastExpr 0x125925e70 <col:8> 'void *' <BitCast>
|             `-ImplicitCastExpr 0x125925e58 <col:8> 'char *' <LValueToRValue>
|               `-DeclRefExpr 0x125925de0 <col:8> 'char *' lvalue Var 0x12600dfb8 'fname' 'char *'
|-FunctionDecl 0x125923310 <line:5:26> col:26 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x125923410 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x125923478 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1259233b8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x12602bbe8 <line:21:3> col:3 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12602bce8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12602bc90 <<invalid sloc>> Implicit 873
