TranslationUnitDecl 0x13d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d055bd0 '__int128'
|-TypedefDecl 0x13d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d055bf0 'unsigned __int128'
|-TypedefDecl 0x13d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13d056580 '__NSConstantString_tag'
|-TypedefDecl 0x13d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d055d90 '__SVInt8_t'
|-TypedefDecl 0x13d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d055db0 '__SVInt16_t'
|-TypedefDecl 0x13d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d055dd0 '__SVInt32_t'
|-TypedefDecl 0x13d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d055df0 '__SVInt64_t'
|-TypedefDecl 0x13d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d055e10 '__SVUint8_t'
|-TypedefDecl 0x13d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d055e30 '__SVUint16_t'
|-TypedefDecl 0x13d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d055e50 '__SVUint32_t'
|-TypedefDecl 0x13d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d055e70 '__SVUint64_t'
|-TypedefDecl 0x13d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d055e90 '__SVFloat16_t'
|-TypedefDecl 0x13d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d056390 '__SVBool_t'
|-TypedefDecl 0x13d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0563f0 '__SVCount_t'
|-TypedefDecl 0x13d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d80dbb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-TypedefDecl 0x13d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d80dbb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-FunctionDecl 0x13d80deb8 <dataset_diviso_filec/func2837_vuln.c:1:1, line:54:1> line:1:5 invalid mutt_seqset_iterator_next 'int (int *, unsigned int *)'
| |-ParmVarDecl 0x13d80dd28 <col:32, col:49> col:49 referenced invalid iter 'int *'
| |-ParmVarDecl 0x13d80ddd8 <col:55, col:69> col:69 used next 'unsigned int *'
| `-CompoundStmt 0x13d82a260 <line:2:1, line:54:1>
|   |-DeclStmt 0x13d80dff0 <line:3:3, col:18>
|   | `-VarDecl 0x13d80df88 <col:3, col:9> col:9 used range_sep 'char *'
|   |-IfStmt 0x13d80e110 <line:5:3, line:6:13>
|   | |-BinaryOperator 0x13d80e0a8 <line:5:7, col:17> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x13d80e040 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x13d80e028 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x13d80e008 <col:8> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x13d80e090 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x13d80e078 <col:17> 'unsigned int *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13d80e058 <col:17> 'unsigned int *' lvalue ParmVar 0x13d80ddd8 'next' 'unsigned int *'
|   | `-ReturnStmt 0x13d80e100 <line:6:5, col:13>
|   |   `-UnaryOperator 0x13d80e0e8 <col:12, col:13> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13d80e0c8 <col:13> 'int' 1
|   |-IfStmt 0x13d8276e8 <line:8:3, line:13:3>
|   | |-CXXDependentScopeMemberExpr 0x13d80e150 <line:8:7, col:13> '<dependent type>' contains-errors lvalue ->in_range
|   | | `-RecoveryExpr 0x13d80e130 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13d8276d0 <line:9:3, line:13:3>
|   |   `-IfStmt 0x13d8276b0 <line:10:5, line:12:24>
|   |     |-BinaryOperator 0x13d8275c0 <line:10:9, line:11:65> 'int' contains-errors '||'
|   |     | |-ParenExpr 0x13d80e370 <line:10:9, col:64> 'int' contains-errors
|   |     | | `-BinaryOperator 0x13d80e350 <col:10, col:63> 'int' contains-errors '&&'
|   |     | |   |-CXXDependentScopeMemberExpr 0x13d80e1b8 <col:10, col:16> '<dependent type>' contains-errors lvalue ->down
|   |     | |   | `-RecoveryExpr 0x13d80e198 <col:10> '<dependent type>' contains-errors lvalue
|   |     | |   `-BinaryOperator 0x13d80e330 <col:24, col:63> 'int' contains-errors '=='
|   |     | |     |-CXXDependentScopeMemberExpr 0x13d80e220 <col:24, col:30> '<dependent type>' contains-errors lvalue ->range_cur
|   |     | |     | `-RecoveryExpr 0x13d80e200 <col:24> '<dependent type>' contains-errors lvalue
|   |     | |     `-ParenExpr 0x13d80e310 <col:43, col:63> '<dependent type>' contains-errors
|   |     | |       `-BinaryOperator 0x13d80e2f0 <col:44, col:62> '<dependent type>' contains-errors '-'
|   |     | |         |-CXXDependentScopeMemberExpr 0x13d80e288 <col:44, col:50> '<dependent type>' contains-errors lvalue ->range_end
|   |     | |         | `-RecoveryExpr 0x13d80e268 <col:44> '<dependent type>' contains-errors lvalue
|   |     | |         `-IntegerLiteral 0x13d80e2d0 <col:62> 'int' 1
|   |     | `-ParenExpr 0x13d8275a0 <line:11:9, col:65> 'int' contains-errors
|   |     |   `-BinaryOperator 0x13d827580 <col:10, col:64> 'int' contains-errors '&&'
|   |     |     |-UnaryOperator 0x13d827418 <col:10, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     |     | `-ImplicitCastExpr 0x13d827400 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |     |     |   `-CXXDependentScopeMemberExpr 0x13d80e3b0 <col:11, col:17> '<dependent type>' contains-errors lvalue ->down
|   |     |     |     `-RecoveryExpr 0x13d80e390 <col:11> '<dependent type>' contains-errors lvalue
|   |     |     `-BinaryOperator 0x13d827560 <col:25, col:64> 'int' contains-errors '=='
|   |     |       |-CXXDependentScopeMemberExpr 0x13d827450 <col:25, col:31> '<dependent type>' contains-errors lvalue ->range_cur
|   |     |       | `-RecoveryExpr 0x13d827430 <col:25> '<dependent type>' contains-errors lvalue
|   |     |       `-ParenExpr 0x13d827540 <col:44, col:64> '<dependent type>' contains-errors
|   |     |         `-BinaryOperator 0x13d827520 <col:45, col:63> '<dependent type>' contains-errors '+'
|   |     |           |-CXXDependentScopeMemberExpr 0x13d8274b8 <col:45, col:51> '<dependent type>' contains-errors lvalue ->range_end
|   |     |           | `-RecoveryExpr 0x13d827498 <col:45> '<dependent type>' contains-errors lvalue
|   |     |           `-IntegerLiteral 0x13d827500 <col:63> 'int' 1
|   |     `-BinaryOperator 0x13d827690 <line:12:7, col:24> '<dependent type>' contains-errors '='
|   |       |-CXXDependentScopeMemberExpr 0x13d827628 <col:7, col:13> '<dependent type>' contains-errors lvalue ->in_range
|   |       | `-RecoveryExpr 0x13d827600 <col:7> '<dependent type>' contains-errors lvalue
|   |       |   `-DeclRefExpr 0x13d8275e0 <col:7> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   |       `-IntegerLiteral 0x13d827670 <col:24> 'int' 0
|   |-IfStmt 0x13d829938 <line:15:3, line:45:3>
|   | |-UnaryOperator 0x13d827788 <line:15:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13d827770 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x13d827728 <col:8, col:14> '<dependent type>' contains-errors lvalue ->in_range
|   | |     `-RecoveryExpr 0x13d827708 <col:8> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13d8298d0 <line:16:3, line:45:3>
|   |   |-BinaryOperator 0x13d827898 <line:17:5, col:30> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x13d8277e8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->substr_cur
|   |   | | `-RecoveryExpr 0x13d8277c0 <col:5> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x13d8277a0 <col:5> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   |   | `-CXXDependentScopeMemberExpr 0x13d827850 <col:24, col:30> '<dependent type>' contains-errors lvalue ->substr_end
|   |   |   `-RecoveryExpr 0x13d827830 <col:24> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x13d8279d8 <line:18:5, line:19:14>
|   |   | |-BinaryOperator 0x13d827988 <line:18:9, col:35> 'int' contains-errors '=='
|   |   | | |-CXXDependentScopeMemberExpr 0x13d8278d8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->substr_cur
|   |   | | | `-RecoveryExpr 0x13d8278b8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x13d827940 <col:29, col:35> '<dependent type>' contains-errors lvalue ->eostr
|   |   | |   `-RecoveryExpr 0x13d827920 <col:29> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x13d8279c8 <line:19:7, col:14>
|   |   |   `-IntegerLiteral 0x13d8279a8 <col:14> 'int' 1
|   |   |-WhileStmt 0x13d827b70 <line:21:5, line:22:23>
|   |   | |-UnaryOperator 0x13d827ab0 <line:21:12, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-UnaryOperator 0x13d827a98 <col:13, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x13d827a80 <col:14, col:31> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     `-ParenExpr 0x13d827a60 <col:14, col:31> '<dependent type>' contains-errors lvalue
|   |   | |       `-CXXDependentScopeMemberExpr 0x13d827a18 <col:15, col:21> '<dependent type>' contains-errors lvalue ->substr_cur
|   |   | |         `-RecoveryExpr 0x13d8279f8 <col:15> '<dependent type>' contains-errors lvalue
|   |   | `-UnaryOperator 0x13d827b58 <line:22:7, col:23> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   |   `-CXXDependentScopeMemberExpr 0x13d827b10 <col:7, col:13> '<dependent type>' contains-errors lvalue ->substr_cur
|   |   |     `-RecoveryExpr 0x13d827ae8 <col:7> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x13d827ac8 <col:7> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   |   |-BinaryOperator 0x13d828348 <line:23:5, col:53> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x13d827bd8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->substr_end
|   |   | | `-RecoveryExpr 0x13d827bb0 <col:5> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x13d827b90 <col:5> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   |   | `-CallExpr 0x13d828318 <col:24, col:53> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13d828260 <col:24> 'char *(const char *, int)' Function 0x13d828080 'strchr' 'char *(const char *, int)'
|   |   |   |-CXXDependentScopeMemberExpr 0x13d8282a0 <col:32, col:38> '<dependent type>' contains-errors lvalue ->substr_cur
|   |   |   | `-RecoveryExpr 0x13d828280 <col:32> '<dependent type>' contains-errors lvalue
|   |   |   `-CharacterLiteral 0x13d8282e8 <col:50> 'int' 44
|   |   |-IfStmt 0x13d828e08 <line:24:5, line:27:29> has_else
|   |   | |-UnaryOperator 0x13d8283e8 <line:24:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13d8283d0 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-CXXDependentScopeMemberExpr 0x13d828388 <col:10, col:16> '<dependent type>' contains-errors lvalue ->substr_end
|   |   | |     `-RecoveryExpr 0x13d828368 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-BinaryOperator 0x13d828cf8 <line:25:7, col:32> '<dependent type>' contains-errors '='
|   |   | | |-CXXDependentScopeMemberExpr 0x13d828c48 <col:7, col:13> '<dependent type>' contains-errors lvalue ->substr_end
|   |   | | | `-RecoveryExpr 0x13d828c20 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x13d828c00 <col:7> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   |   | | `-CXXDependentScopeMemberExpr 0x13d828cb0 <col:26, col:32> '<dependent type>' contains-errors lvalue ->eostr
|   |   | |   `-RecoveryExpr 0x13d828c90 <col:26> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x13d828de8 <line:27:7, col:29> '<dependent type>' contains-errors '='
|   |   |   |-UnaryOperator 0x13d828db8 <col:7, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x13d828da0 <col:8, col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |   `-ParenExpr 0x13d828d80 <col:8, col:25> '<dependent type>' contains-errors lvalue
|   |   |   |     `-CXXDependentScopeMemberExpr 0x13d828d38 <col:9, col:15> '<dependent type>' contains-errors lvalue ->substr_end
|   |   |   |       `-RecoveryExpr 0x13d828d18 <col:9> '<dependent type>' contains-errors lvalue
|   |   |   `-CharacterLiteral 0x13d828dd0 <col:29> 'int' 0
|   |   |-BinaryOperator 0x13d828f40 <line:29:5, col:46> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x13d828e38 <col:5> 'char *' lvalue Var 0x13d80df88 'range_sep' 'char *'
|   |   | `-CallExpr 0x13d828f10 <col:17, col:46> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13d828e58 <col:17> 'char *(const char *, int)' Function 0x13d828080 'strchr' 'char *(const char *, int)'
|   |   |   |-CXXDependentScopeMemberExpr 0x13d828e98 <col:25, col:31> '<dependent type>' contains-errors lvalue ->substr_cur
|   |   |   | `-RecoveryExpr 0x13d828e78 <col:25> '<dependent type>' contains-errors lvalue
|   |   |   `-CharacterLiteral 0x13d828ee0 <col:43> 'int' 58
|   |   |-IfStmt 0x13d829038 <line:30:5, line:31:22>
|   |   | |-ImplicitCastExpr 0x13d828f80 <line:30:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13d828f60 <col:9> 'char *' lvalue Var 0x13d80df88 'range_sep' 'char *'
|   |   | `-BinaryOperator 0x13d829018 <line:31:7, col:22> 'char' '='
|   |   |   |-UnaryOperator 0x13d828fd0 <col:7, col:17> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-UnaryOperator 0x13d828fb8 <col:8, col:17> 'char *' postfix '++'
|   |   |   |   `-DeclRefExpr 0x13d828f98 <col:8> 'char *' lvalue Var 0x13d80df88 'range_sep' 'char *'
|   |   |   `-ImplicitCastExpr 0x13d829000 <col:22> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x13d828fe8 <col:22> 'int' 0
|   |   |-IfStmt 0x13d829330 <line:33:5, line:34:15>
|   |   | |-CallExpr 0x13d8292b8 <line:33:9, col:55> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x13d8291b0 <col:9> 'int ()' Function 0x13d8290f8 'mutt_atoui' 'int ()'
|   |   | | |-CXXDependentScopeMemberExpr 0x13d8291f0 <col:21, col:27> '<dependent type>' contains-errors lvalue ->substr_cur
|   |   | | | `-RecoveryExpr 0x13d8291d0 <col:21> '<dependent type>' contains-errors lvalue
|   |   | | `-UnaryOperator 0x13d8292a0 <col:39, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | |   `-CXXDependentScopeMemberExpr 0x13d829258 <col:40, col:46> '<dependent type>' contains-errors lvalue ->range_cur
|   |   | |     `-RecoveryExpr 0x13d829238 <col:40> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x13d829320 <line:34:7, col:15>
|   |   |   `-UnaryOperator 0x13d829308 <col:14, col:15> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x13d8292e8 <col:15> 'int' 1
|   |   |-IfStmt 0x13d829610 <line:35:5, line:41:31> has_else
|   |   | |-ImplicitCastExpr 0x13d829370 <line:35:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13d829350 <col:9> 'char *' lvalue Var 0x13d80df88 'range_sep' 'char *'
|   |   | |-CompoundStmt 0x13d8294e0 <line:36:5, line:39:5>
|   |   | | `-IfStmt 0x13d8294c0 <line:37:7, line:38:17>
|   |   | |   |-CallExpr 0x13d829448 <line:37:11, col:50> '<dependent type>' contains-errors
|   |   | |   | |-DeclRefExpr 0x13d829388 <col:11> 'int ()' Function 0x13d8290f8 'mutt_atoui' 'int ()'
|   |   | |   | |-DeclRefExpr 0x13d8293a8 <col:23> 'char *' lvalue Var 0x13d80df88 'range_sep' 'char *'
|   |   | |   | `-UnaryOperator 0x13d829430 <col:34, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | |   |   `-CXXDependentScopeMemberExpr 0x13d8293e8 <col:35, col:41> '<dependent type>' contains-errors lvalue ->range_end
|   |   | |   |     `-RecoveryExpr 0x13d8293c8 <col:35> '<dependent type>' contains-errors lvalue
|   |   | |   `-ReturnStmt 0x13d8294b0 <line:38:9, col:17>
|   |   | |     `-UnaryOperator 0x13d829498 <col:16, col:17> 'int' prefix '-'
|   |   | |       `-IntegerLiteral 0x13d829478 <col:17> 'int' 1
|   |   | `-BinaryOperator 0x13d8295f0 <line:41:7, col:31> '<dependent type>' contains-errors '='
|   |   |   |-CXXDependentScopeMemberExpr 0x13d829540 <col:7, col:13> '<dependent type>' contains-errors lvalue ->range_end
|   |   |   | `-RecoveryExpr 0x13d829518 <col:7> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x13d8294f8 <col:7> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   |   |   `-CXXDependentScopeMemberExpr 0x13d8295a8 <col:25, col:31> '<dependent type>' contains-errors lvalue ->range_cur
|   |   |     `-RecoveryExpr 0x13d829588 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x13d8297e0 <line:43:5, col:52> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x13d829688 <col:5, col:11> '<dependent type>' contains-errors lvalue ->down
|   |   | | `-RecoveryExpr 0x13d829660 <col:5> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x13d829640 <col:5> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   |   | `-ParenExpr 0x13d8297c0 <col:18, col:52> 'int' contains-errors
|   |   |   `-BinaryOperator 0x13d8297a0 <col:19, col:43> 'int' contains-errors '<'
|   |   |     |-CXXDependentScopeMemberExpr 0x13d8296f0 <col:19, col:25> '<dependent type>' contains-errors lvalue ->range_end
|   |   |     | `-RecoveryExpr 0x13d8296d0 <col:19> '<dependent type>' contains-errors lvalue
|   |   |     `-CXXDependentScopeMemberExpr 0x13d829758 <col:37, col:43> '<dependent type>' contains-errors lvalue ->range_cur
|   |   |       `-RecoveryExpr 0x13d829738 <col:37> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x13d8298b0 <line:44:5, col:22> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x13d829848 <col:5, col:11> '<dependent type>' contains-errors lvalue ->in_range
|   |     | `-RecoveryExpr 0x13d829820 <col:5> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x13d829800 <col:5> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   |     `-IntegerLiteral 0x13d829890 <col:22> 'int' 1
|   |-BinaryOperator 0x13d829a10 <line:47:3, col:17> 'unsigned int' contains-errors '='
|   | |-UnaryOperator 0x13d829990 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13d829978 <col:4> 'unsigned int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13d829958 <col:4> 'unsigned int *' lvalue ParmVar 0x13d80ddd8 'next' 'unsigned int *'
|   | `-CXXDependentScopeMemberExpr 0x13d8299c8 <col:11, col:17> '<dependent type>' contains-errors lvalue ->range_cur
|   |   `-RecoveryExpr 0x13d8299a8 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13d82a200 <line:48:3, line:51:20> has_else
|   | |-CXXDependentScopeMemberExpr 0x13d829a50 <line:48:7, col:13> '<dependent type>' contains-errors lvalue ->down
|   | | `-RecoveryExpr 0x13d829a30 <col:7> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x13d829b28 <line:49:5, col:20> '<dependent type>' contains-errors postfix '--' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x13d829ae0 <col:5, col:11> '<dependent type>' contains-errors lvalue ->range_cur
|   | |   `-RecoveryExpr 0x13d829ab8 <col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x13d829a98 <col:5> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   | `-UnaryOperator 0x13d829bd0 <line:51:5, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x13d829b88 <col:5, col:11> '<dependent type>' contains-errors lvalue ->range_cur
|   |     `-RecoveryExpr 0x13d829b60 <col:5> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13d829b40 <col:5> 'int *' lvalue ParmVar 0x13d80dd28 'iter' 'int *'
|   `-ReturnStmt 0x13d82a250 <line:53:3, col:10>
|     `-IntegerLiteral 0x13d82a230 <col:10> 'int' 0
`-FunctionDecl 0x13d828080 <line:23:24> col:24 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x13d828180 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13d8281e8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x13d828128 <<invalid sloc>> Implicit 893
