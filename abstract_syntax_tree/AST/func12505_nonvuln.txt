TranslationUnitDecl 0x13a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a055bd0 '__int128'
|-TypedefDecl 0x13a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a055bf0 'unsigned __int128'
|-TypedefDecl 0x13a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13a056580 '__NSConstantString_tag'
|-TypedefDecl 0x13a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a055d90 '__SVInt8_t'
|-TypedefDecl 0x13a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a055db0 '__SVInt16_t'
|-TypedefDecl 0x13a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a055dd0 '__SVInt32_t'
|-TypedefDecl 0x13a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a055df0 '__SVInt64_t'
|-TypedefDecl 0x13a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a055e10 '__SVUint8_t'
|-TypedefDecl 0x13a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a055e30 '__SVUint16_t'
|-TypedefDecl 0x13a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a055e50 '__SVUint32_t'
|-TypedefDecl 0x13a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a055e70 '__SVUint64_t'
|-TypedefDecl 0x13a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a055e90 '__SVFloat16_t'
|-TypedefDecl 0x13a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a056390 '__SVBool_t'
|-TypedefDecl 0x13a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a0563f0 '__SVCount_t'
|-TypedefDecl 0x13a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a80dbb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-TypedefDecl 0x13a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a80dbb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-FunctionDecl 0x13a82a9e8 <dataset_diviso_filec/func12505_nonvuln.c:1:1, line:25:1> line:1:12 btrfs_initxattrs 'int (struct inode *, const struct xattr *, void *)' static
| |-ParmVarDecl 0x13a80e248 <col:29, col:43> col:43 used inode 'struct inode *'
| |-ParmVarDecl 0x13a82a828 <line:2:8, col:28> col:28 used xattr_array 'const struct xattr *'
| |-ParmVarDecl 0x13a82a8a8 <col:41, col:47> col:47 used fs_info 'void *'
| `-CompoundStmt 0x13a123160 <line:3:1, line:25:1>
|   |-DeclStmt 0x13a82abe0 <line:4:2, col:27>
|   | `-VarDecl 0x13a82ab78 <col:2, col:22> col:22 used xattr 'const struct xattr *'
|   |-DeclStmt 0x13a82ae38 <line:5:2, col:44>
|   | |-RecordDecl 0x13a82abf8 <col:2, col:9> col:9 struct btrfs_trans_handle
|   | `-VarDecl 0x13a82ad68 <col:2, col:37> col:29 used trans 'struct btrfs_trans_handle *' cinit
|   |   `-ImplicitCastExpr 0x13a82ae08 <col:37> 'struct btrfs_trans_handle *' <BitCast>
|   |     `-ImplicitCastExpr 0x13a82adf0 <col:37> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13a82add0 <col:37> 'void *' lvalue ParmVar 0x13a82a8a8 'fs_info' 'void *'
|   |-DeclStmt 0x13a82aed0 <line:6:2, col:12>
|   | `-VarDecl 0x13a82ae68 <col:2, col:8> col:8 used name 'char *'
|   |-DeclStmt 0x13a82af88 <line:7:2, col:13>
|   | `-VarDecl 0x13a82af00 <col:2, col:12> col:6 used err 'int' cinit
|   |   `-IntegerLiteral 0x13a82af68 <col:12> 'int' 0
|   |-ForStmt 0x13a1230e0 <line:9:2, line:23:2>
|   | |-BinaryOperator 0x13a82aff8 <line:9:7, col:15> 'const struct xattr *' '='
|   | | |-DeclRefExpr 0x13a82afa0 <col:7> 'const struct xattr *' lvalue Var 0x13a82ab78 'xattr' 'const struct xattr *'
|   | | `-ImplicitCastExpr 0x13a82afe0 <col:15> 'const struct xattr *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13a82afc0 <col:15> 'const struct xattr *' lvalue ParmVar 0x13a82a828 'xattr_array' 'const struct xattr *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13a82b0e8 <col:28, col:43> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x13a82b050 <col:28, col:35> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x13a82b018 <col:28> 'const struct xattr *' lvalue Var 0x13a82ab78 'xattr' 'const struct xattr *'
|   | | `-RecoveryExpr 0x13a82b0c8 <col:43> '<dependent type>' contains-errors lvalue
|   | |-ImplicitCastExpr 0x13a82b150 <col:49, col:54> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-RecoveryExpr 0x13a82b128 <col:49, col:54> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13a82b108 <col:49> 'const struct xattr *' lvalue Var 0x13a82ab78 'xattr' 'const struct xattr *'
|   | `-CompoundStmt 0x13a123098 <col:58, line:23:2>
|   |   |-BinaryOperator 0x13a82b6c0 <line:10:3, line:11:44> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x13a82b168 <line:10:3> 'char *' lvalue Var 0x13a82ae68 'name' 'char *'
|   |   | `-CallExpr 0x13a82b690 <col:10, line:11:44> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13a82b2a0 <line:10:10> 'int ()' Function 0x13a82b1e8 'kmalloc' 'int ()'
|   |   |   |-BinaryOperator 0x13a82b650 <col:18, line:11:33> '<dependent type>' contains-errors '+'
|   |   |   | |-BinaryOperator 0x13a82b630 <line:10:18, line:11:29> '<dependent type>' contains-errors '+'
|   |   |   | | |-RecoveryExpr 0x13a82b610 <line:10:18> '<dependent type>' contains-errors lvalue
|   |   |   | | `-CallExpr 0x13a82b520 <line:11:11, col:29> '<dependent type>' contains-errors
|   |   |   | |   |-DeclRefExpr 0x13a82b488 <col:11> 'unsigned long (const char *)' Function 0x13a82b318 'strlen' 'unsigned long (const char *)'
|   |   |   | |   `-RecoveryExpr 0x13a82b4e0 <col:18, col:25> '<dependent type>' contains-errors lvalue
|   |   |   | |     `-DeclRefExpr 0x13a82b4a8 <col:18> 'const struct xattr *' lvalue Var 0x13a82ab78 'xattr' 'const struct xattr *'
|   |   |   | `-IntegerLiteral 0x13a82b568 <col:33> 'int' 1
|   |   |   `-RecoveryExpr 0x13a82b670 <col:36> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x13a122660 <line:12:3, line:15:3>
|   |   | |-UnaryOperator 0x13a82b718 <line:12:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13a82b700 <col:8> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13a82b6e0 <col:8> 'char *' lvalue Var 0x13a82ae68 'name' 'char *'
|   |   | `-CompoundStmt 0x13a122640 <col:14, line:15:3>
|   |   |   |-BinaryOperator 0x13a122618 <line:13:4, col:11> 'int' contains-errors '='
|   |   |   | |-DeclRefExpr 0x13a82b730 <col:4> 'int' lvalue Var 0x13a82af00 'err' 'int'
|   |   |   | `-UnaryOperator 0x13a122600 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x13a82b7d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     `-RecoveryExpr 0x13a82b7b8 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   `-BreakStmt 0x13a122638 <line:14:4>
|   |   |-CallExpr 0x13a1229a8 <line:16:3, col:37> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13a1228a0 <col:3> 'char *(char *, const char *)' Function 0x13a1226c0 'strcpy' 'char *(char *, const char *)'
|   |   | |-DeclRefExpr 0x13a1228c0 <col:10> 'char *' lvalue Var 0x13a82ae68 'name' 'char *'
|   |   | `-RecoveryExpr 0x13a122958 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x13a122b50 <line:17:3, col:55> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13a1229d8 <col:3> 'char *(char *, const char *)' Function 0x13a1226c0 'strcpy' 'char *(char *, const char *)'
|   |   | |-BinaryOperator 0x13a122b18 <col:10, col:17> '<dependent type>' contains-errors '+'
|   |   | | |-DeclRefExpr 0x13a1229f8 <col:10> 'char *' lvalue Var 0x13a82ae68 'name' 'char *'
|   |   | | `-RecoveryExpr 0x13a122af8 <col:17> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x13a122a88 <col:44, col:51> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x13a122a50 <col:44> 'const struct xattr *' lvalue Var 0x13a82ab78 'xattr' 'const struct xattr *'
|   |   |-BinaryOperator 0x13a122e30 <line:18:3, line:19:45> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x13a122b80 <line:18:3> 'int' lvalue Var 0x13a82af00 'err' 'int'
|   |   | `-CallExpr 0x13a122de0 <col:9, line:19:45> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13a122c80 <line:18:9> 'int ()' Function 0x13a122bc8 '__btrfs_setxattr' 'int ()'
|   |   |   |-DeclRefExpr 0x13a122ca0 <col:26> 'struct btrfs_trans_handle *' lvalue Var 0x13a82ad68 'trans' 'struct btrfs_trans_handle *'
|   |   |   |-DeclRefExpr 0x13a122cc0 <col:33> 'struct inode *' lvalue ParmVar 0x13a80e248 'inode' 'struct inode *'
|   |   |   |-DeclRefExpr 0x13a122ce0 <col:40> 'char *' lvalue Var 0x13a82ae68 'name' 'char *'
|   |   |   |-RecoveryExpr 0x13a122d38 <line:19:12, col:19> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x13a122d00 <col:12> 'const struct xattr *' lvalue Var 0x13a82ab78 'xattr' 'const struct xattr *'
|   |   |   |-RecoveryExpr 0x13a122d98 <col:26, col:33> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x13a122d60 <col:26> 'const struct xattr *' lvalue Var 0x13a82ab78 'xattr' 'const struct xattr *'
|   |   |   `-IntegerLiteral 0x13a122dc0 <col:44> 'int' 0
|   |   |-CallExpr 0x13a122fb8 <line:20:3, col:13> 'int'
|   |   | |-ImplicitCastExpr 0x13a122fa0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13a122f30 <col:3> 'int ()' Function 0x13a122e78 'kfree' 'int ()'
|   |   | `-ImplicitCastExpr 0x13a122fe0 <col:9> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13a122f50 <col:9> 'char *' lvalue Var 0x13a82ae68 'name' 'char *'
|   |   `-IfStmt 0x13a123078 <line:21:3, line:22:4>
|   |     |-BinaryOperator 0x13a123050 <line:21:7, col:13> 'int' '<'
|   |     | |-ImplicitCastExpr 0x13a123038 <col:7> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13a122ff8 <col:7> 'int' lvalue Var 0x13a82af00 'err' 'int'
|   |     | `-IntegerLiteral 0x13a123018 <col:13> 'int' 0
|   |     `-BreakStmt 0x13a123070 <line:22:4>
|   `-ReturnStmt 0x13a123150 <line:24:2, col:9>
|     `-ImplicitCastExpr 0x13a123138 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13a123118 <col:9> 'int' lvalue Var 0x13a82af00 'err' 'int'
|-FunctionDecl 0x13a82b318 <line:11:11> col:11 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13a82b418 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13a82b3c0 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x13a1226c0 <line:16:3> col:3 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x13a1227c0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x13a122828 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13a122768 <<invalid sloc>> Implicit 885
