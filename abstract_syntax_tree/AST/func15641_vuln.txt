TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e00dbb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e00dbb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-FunctionDecl 0x12e027598 <dataset_diviso_filec/func15641_vuln.c:1:1, line:52:1> line:1:1 invalid decrypt_response 'int (struct sc_card *, unsigned char *, unsigned char *, int *)'
| |-ParmVarDecl 0x12e00e248 <col:18, col:34> col:34 used card 'struct sc_card *'
| |-ParmVarDecl 0x12e00e2f8 <col:40, col:55> col:55 used in 'unsigned char *'
| |-ParmVarDecl 0x12e00e378 <col:59, col:74> col:74 used out 'unsigned char *'
| |-ParmVarDecl 0x12e027448 <col:79, col:88> col:88 invalid out_len 'int *'
| `-CompoundStmt 0x12e02a6b8 <line:2:1, line:52:1>
|   |-UnaryExprOrTypeTraitExpr 0x12e0276b8 <line:3:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x12e027698 <col:9> '<dependent type>' contains-errors lvalue
|   |-UnaryExprOrTypeTraitExpr 0x12e027730 <line:4:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x12e027710 <col:9> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12e027948 <line:5:2, col:30>
|   | `-VarDecl 0x12e0277f8 <col:2, col:29> col:16 used iv 'unsigned char[16]' cinit
|   |   `-InitListExpr 0x12e0278d8 <col:25, col:29> 'unsigned char[16]'
|   |     |-array_filler: ImplicitValueInitExpr 0x12e027938 <<invalid sloc>> 'unsigned char'
|   |     `-ImplicitCastExpr 0x12e027918 <col:27> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x12e027860 <col:27> 'int' 0
|   |-DeclStmt 0x12e027b58 <line:6:2, col:39>
|   | `-VarDecl 0x12e027a08 <col:2, col:38> col:16 used plaintext 'unsigned char[4096]' cinit
|   |   `-InitListExpr 0x12e027ae8 <col:34, col:38> 'unsigned char[4096]'
|   |     |-array_filler: ImplicitValueInitExpr 0x12e027b48 <<invalid sloc>> 'unsigned char'
|   |     `-ImplicitCastExpr 0x12e027b28 <col:36> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x12e027a70 <col:36> 'int' 0
|   |-IfStmt 0x12e027c78 <line:9:2, line:10:10>
|   | |-UnaryOperator 0x12e027c18 <line:9:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12e027c00 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12e027bd8 <col:7, col:13> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12e027ba0 <col:7> 'struct sc_card *' lvalue ParmVar 0x12e00e248 'card' 'struct sc_card *'
|   | `-ReturnStmt 0x12e027c68 <line:10:3, col:10>
|   |   `-RecoveryExpr 0x12e027c48 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e027dc8 <line:15:2, line:16:10>
|   | |-BinaryOperator 0x12e027d78 <line:15:6, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x12e027d60 <col:6, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x12e027d48 <col:6, col:10> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x12e027d08 <col:6, col:10> 'unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x12e027cf0 <col:6> 'unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12e027cb0 <col:6> 'unsigned char *' lvalue ParmVar 0x12e00e2f8 'in' 'unsigned char *'
|   | | |     `-IntegerLiteral 0x12e027cd0 <col:9> 'int' 0
|   | | `-IntegerLiteral 0x12e027d28 <col:15> 'int' 153
|   | `-ReturnStmt 0x12e027db8 <line:16:3, col:10>
|   |   `-IntegerLiteral 0x12e027d98 <col:10> 'int' 0
|   |-IfStmt 0x12e029d58 <line:19:2, line:34:2> has_else
|   | |-BinaryOperator 0x12e027fb8 <line:19:6, col:35> 'int' '&&'
|   | | |-BinaryOperator 0x12e027eb0 <col:6, col:18> 'int' '=='
|   | | | |-IntegerLiteral 0x12e027de8 <col:6> 'int' 1
|   | | | `-ImplicitCastExpr 0x12e027e98 <col:14, col:18> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x12e027e80 <col:14, col:18> 'unsigned char' <LValueToRValue>
|   | | |     `-ArraySubscriptExpr 0x12e027e60 <col:14, col:18> 'unsigned char' lvalue
|   | | |       |-ImplicitCastExpr 0x12e027e48 <col:14> 'unsigned char *' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x12e027e08 <col:14> 'unsigned char *' lvalue ParmVar 0x12e00e2f8 'in' 'unsigned char *'
|   | | |       `-IntegerLiteral 0x12e027e28 <col:17> 'int' 2
|   | | `-BinaryOperator 0x12e027f98 <col:23, col:35> 'int' '!='
|   | |   |-IntegerLiteral 0x12e027ed0 <col:23> 'int' 130
|   | |   `-ImplicitCastExpr 0x12e027f80 <col:31, col:35> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x12e027f68 <col:31, col:35> 'unsigned char' <LValueToRValue>
|   | |       `-ArraySubscriptExpr 0x12e027f48 <col:31, col:35> 'unsigned char' lvalue
|   | |         |-ImplicitCastExpr 0x12e027f30 <col:31> 'unsigned char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x12e027ef0 <col:31> 'unsigned char *' lvalue ParmVar 0x12e00e2f8 'in' 'unsigned char *'
|   | |         `-IntegerLiteral 0x12e027f10 <col:34> 'int' 1
|   | |-CompoundStmt 0x12e028070 <col:38, line:22:2>
|   | `-IfStmt 0x12e029d28 <line:23:7, line:34:2> has_else
|   |   |-BinaryOperator 0x12e028250 <line:23:11, col:40> 'int' '&&'
|   |   | |-BinaryOperator 0x12e028148 <col:11, col:23> 'int' '=='
|   |   | | |-IntegerLiteral 0x12e028080 <col:11> 'int' 1
|   |   | | `-ImplicitCastExpr 0x12e028130 <col:19, col:23> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x12e028118 <col:19, col:23> 'unsigned char' <LValueToRValue>
|   |   | |     `-ArraySubscriptExpr 0x12e0280f8 <col:19, col:23> 'unsigned char' lvalue
|   |   | |       |-ImplicitCastExpr 0x12e0280e0 <col:19> 'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x12e0280a0 <col:19> 'unsigned char *' lvalue ParmVar 0x12e00e2f8 'in' 'unsigned char *'
|   |   | |       `-IntegerLiteral 0x12e0280c0 <col:22> 'int' 3
|   |   | `-BinaryOperator 0x12e028230 <col:28, col:40> 'int' '=='
|   |   |   |-IntegerLiteral 0x12e028168 <col:28> 'int' 129
|   |   |   `-ImplicitCastExpr 0x12e028218 <col:36, col:40> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x12e028200 <col:36, col:40> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x12e0281e0 <col:36, col:40> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x12e0281c8 <col:36> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x12e028188 <col:36> 'unsigned char *' lvalue ParmVar 0x12e00e2f8 'in' 'unsigned char *'
|   |   |         `-IntegerLiteral 0x12e0281a8 <col:39> 'int' 1
|   |   |-CompoundStmt 0x12e028308 <col:43, line:26:2>
|   |   `-IfStmt 0x12e029cf8 <line:27:7, line:34:2> has_else
|   |     |-BinaryOperator 0x12e029ae8 <line:27:11, col:40> 'int' '&&'
|   |     | |-BinaryOperator 0x12e0283e0 <col:11, col:23> 'int' '=='
|   |     | | |-IntegerLiteral 0x12e028318 <col:11> 'int' 1
|   |     | | `-ImplicitCastExpr 0x12e0283c8 <col:19, col:23> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x12e0283b0 <col:19, col:23> 'unsigned char' <LValueToRValue>
|   |     | |     `-ArraySubscriptExpr 0x12e028390 <col:19, col:23> 'unsigned char' lvalue
|   |     | |       |-ImplicitCastExpr 0x12e028378 <col:19> 'unsigned char *' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x12e028338 <col:19> 'unsigned char *' lvalue ParmVar 0x12e00e2f8 'in' 'unsigned char *'
|   |     | |       `-IntegerLiteral 0x12e028358 <col:22> 'int' 4
|   |     | `-BinaryOperator 0x12e029ac8 <col:28, col:40> 'int' '=='
|   |     |   |-IntegerLiteral 0x12e029a00 <col:28> 'int' 130
|   |     |   `-ImplicitCastExpr 0x12e029ab0 <col:36, col:40> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x12e029a98 <col:36, col:40> 'unsigned char' <LValueToRValue>
|   |     |       `-ArraySubscriptExpr 0x12e029a78 <col:36, col:40> 'unsigned char' lvalue
|   |     |         |-ImplicitCastExpr 0x12e029a60 <col:36> 'unsigned char *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x12e029a20 <col:36> 'unsigned char *' lvalue ParmVar 0x12e00e2f8 'in' 'unsigned char *'
|   |     |         `-IntegerLiteral 0x12e029a40 <col:39> 'int' 1
|   |     |-CompoundStmt 0x12e029c88 <col:43, line:31:2>
|   |     `-CompoundStmt 0x12e029ce0 <line:32:7, line:34:2>
|   |       `-ReturnStmt 0x12e029cd0 <line:33:3, col:11>
|   |         `-UnaryOperator 0x12e029cb8 <col:10, col:11> 'int' prefix '-'
|   |           `-IntegerLiteral 0x12e029c98 <col:11> 'int' 1
|   |-IfStmt 0x12e02a2a8 <line:46:2, line:47:11>
|   | |-RecoveryExpr 0x12e02a240 <line:46:6, col:11> '_Bool' contains-errors
|   | `-ReturnStmt 0x12e02a298 <line:47:3, col:11>
|   |   `-UnaryOperator 0x12e02a280 <col:10, col:11> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12e02a260 <col:11> 'int' 1
|   `-ReturnStmt 0x12e02a6a8 <line:51:2, col:9>
|     `-IntegerLiteral 0x12e02a688 <col:9> 'int' 0
`-FunctionDecl 0x12e02a348 <line:49:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12e02a448 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12e02a4b0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12e02a518 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12e02a3f0 <<invalid sloc>> Implicit 882
