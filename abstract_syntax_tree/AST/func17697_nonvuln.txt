TranslationUnitDecl 0x12a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a055bd0 '__int128'
|-TypedefDecl 0x12a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a055bf0 'unsigned __int128'
|-TypedefDecl 0x12a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a126000 'struct __NSConstantString_tag'
|   `-Record 0x12a056580 '__NSConstantString_tag'
|-TypedefDecl 0x12a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a055d90 '__SVInt8_t'
|-TypedefDecl 0x12a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a055db0 '__SVInt16_t'
|-TypedefDecl 0x12a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a055dd0 '__SVInt32_t'
|-TypedefDecl 0x12a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a055df0 '__SVInt64_t'
|-TypedefDecl 0x12a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a055e10 '__SVUint8_t'
|-TypedefDecl 0x12a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a055e30 '__SVUint16_t'
|-TypedefDecl 0x12a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a055e50 '__SVUint32_t'
|-TypedefDecl 0x12a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a055e70 '__SVUint64_t'
|-TypedefDecl 0x12a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a055e90 '__SVFloat16_t'
|-TypedefDecl 0x12a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a056390 '__SVBool_t'
|-TypedefDecl 0x12a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a0563f0 '__SVCount_t'
|-TypedefDecl 0x12a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a127fb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-TypedefDecl 0x12a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a127fb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-FunctionDecl 0x12a1281d8 <dataset_diviso_filec/func17697_nonvuln.c:1:1, line:42:1> line:1:1 print_command_failed 'int (const unsigned char *)'
| |-ParmVarDecl 0x12a128108 <col:23, col:44> col:44 used msg 'const unsigned char *'
| `-CompoundStmt 0x12a1436d8 <line:2:1, line:42:1>
|   |-DeclStmt 0x12a128350 <line:3:3, col:16>
|   | `-VarDecl 0x12a1282e8 <col:3, col:15> col:15 used t 'const char *'
|   |-DeclStmt 0x12a128478 <line:4:3, col:19>
|   | `-VarDecl 0x12a128410 <col:3, col:18> col:8 used buffer 'char[100]'
|   |-DeclStmt 0x12a128510 <line:5:3, col:9>
|   | `-VarDecl 0x12a1284a8 <col:3, col:7> col:7 used ec 'int'
|   |-IfStmt 0x12a1285e8 <line:7:3, line:8:5>
|   | |-UnaryOperator 0x12a1285c0 <line:7:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12a1285a8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12a128588 <col:8> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x12a1285d8 <line:8:5>
|   |-BinaryOperator 0x12a141818 <line:10:3, col:28> 'int' '='
|   | |-DeclRefExpr 0x12a128608 <col:3> 'int' lvalue Var 0x12a1284a8 'ec' 'int'
|   | `-CallExpr 0x12a1287c8 <col:8, col:28> 'int'
|   |   |-ImplicitCastExpr 0x12a1287b0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12a128740 <col:8> 'int ()' Function 0x12a128688 'CCID_ERROR_CODE' 'int ()'
|   |   `-ImplicitCastExpr 0x12a141800 <col:25> 'const unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12a128760 <col:25> 'const unsigned char *' lvalue ParmVar 0x12a128108 'msg' 'const unsigned char *'
|   |-SwitchStmt 0x12a141870 <line:11:3, line:40:5>
|   | |-ImplicitCastExpr 0x12a141858 <line:11:11> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12a141838 <col:11> 'int' lvalue Var 0x12a1284a8 'ec' 'int'
|   | `-CompoundStmt 0x12a1433f8 <line:12:5, line:40:5>
|   |   |-CaseStmt 0x12a1418d0 <line:13:5, col:20>
|   |   | |-ConstantExpr 0x12a1418b8 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a141898 <col:10> 'int' 0
|   |   | `-BinaryOperator 0x12a1419b0 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a1418f8 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a141998 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a141980 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a141960 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a1419d0 <col:27>
|   |   |-CaseStmt 0x12a141a10 <line:15:5, col:20>
|   |   | |-ConstantExpr 0x12a1419f8 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a1419d8 <col:10> 'int' 224
|   |   | `-BinaryOperator 0x12a141aa8 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a141a38 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a141a90 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a141a78 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a141a58 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a141ac8 <col:27>
|   |   |-CaseStmt 0x12a141b08 <line:16:5, col:20>
|   |   | |-ConstantExpr 0x12a141af0 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a141ad0 <col:10> 'int' 239
|   |   | `-BinaryOperator 0x12a141ba0 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a141b30 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a141b88 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a141b70 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a141b50 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a141bc0 <col:27>
|   |   |-CaseStmt 0x12a141c00 <line:17:5, col:20>
|   |   | |-ConstantExpr 0x12a141be8 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a141bc8 <col:10> 'int' 240
|   |   | `-BinaryOperator 0x12a141c98 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a141c28 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a141c80 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a141c68 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a141c48 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a141cb8 <col:27>
|   |   |-CaseStmt 0x12a141cf8 <line:19:5, col:20>
|   |   | |-ConstantExpr 0x12a141ce0 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a141cc0 <col:10> 'int' 242
|   |   | `-BinaryOperator 0x12a141d90 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a141d20 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a141d78 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a141d60 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a141d40 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a141db0 <col:27>
|   |   |-CaseStmt 0x12a141df0 <line:20:5, col:20>
|   |   | |-ConstantExpr 0x12a141dd8 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a141db8 <col:10> 'int' 243
|   |   | `-BinaryOperator 0x12a141e88 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a141e18 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a141e70 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a141e58 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a141e38 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a141ea8 <col:27>
|   |   |-CaseStmt 0x12a141ee8 <line:21:5, col:20>
|   |   | |-ConstantExpr 0x12a141ed0 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a141eb0 <col:10> 'int' 244
|   |   | `-BinaryOperator 0x12a141f80 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a141f10 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a141f68 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a141f50 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a141f30 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a141fa0 <col:27>
|   |   |-CaseStmt 0x12a141fe0 <line:22:5, col:20>
|   |   | |-ConstantExpr 0x12a141fc8 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a141fa8 <col:10> 'int' 245
|   |   | `-BinaryOperator 0x12a142078 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a142008 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a142060 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a142048 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a142028 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a142098 <col:27>
|   |   |-CaseStmt 0x12a1420d8 <line:23:5, col:20>
|   |   | |-ConstantExpr 0x12a1420c0 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a1420a0 <col:10> 'int' 246
|   |   | `-BinaryOperator 0x12a142170 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a142100 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a142158 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a142140 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a142120 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a142190 <col:27>
|   |   |-CaseStmt 0x12a1421d0 <line:24:5, col:20>
|   |   | |-ConstantExpr 0x12a1421b8 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a142198 <col:10> 'int' 247
|   |   | `-BinaryOperator 0x12a142268 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a1421f8 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a142250 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a142238 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a142218 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a142288 <col:27>
|   |   |-CaseStmt 0x12a1422c8 <line:25:5, col:20>
|   |   | |-ConstantExpr 0x12a1422b0 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a142290 <col:10> 'int' 248
|   |   | `-BinaryOperator 0x12a142360 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a1422f0 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a142348 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a142330 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a142310 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a142380 <col:27>
|   |   |-CaseStmt 0x12a1423c0 <line:27:5, col:20>
|   |   | |-ConstantExpr 0x12a1423a8 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a142388 <col:10> 'int' 251
|   |   | `-BinaryOperator 0x12a142458 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a1423e8 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a142440 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a142428 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a142408 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a142478 <col:27>
|   |   |-CaseStmt 0x12a1424b8 <line:28:5, col:20>
|   |   | |-ConstantExpr 0x12a1424a0 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a142480 <col:10> 'int' 252
|   |   | `-BinaryOperator 0x12a142550 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a1424e0 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a142538 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a142520 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a142500 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a142570 <col:27>
|   |   |-CaseStmt 0x12a1425b0 <line:29:5, col:20>
|   |   | |-ConstantExpr 0x12a142598 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a142578 <col:10> 'int' 253
|   |   | `-BinaryOperator 0x12a142648 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a1425d8 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a142630 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a142618 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a1425f8 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a142668 <col:27>
|   |   |-CaseStmt 0x12a1426a8 <line:30:5, col:20>
|   |   | |-ConstantExpr 0x12a142690 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a142670 <col:10> 'int' 254
|   |   | `-BinaryOperator 0x12a142740 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a1426d0 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a142728 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a142710 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a1426f0 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a142760 <col:27>
|   |   |-CaseStmt 0x12a1427a0 <line:31:5, col:20>
|   |   | |-ConstantExpr 0x12a142788 <col:10> 'int'
|   |   | | `-IntegerLiteral 0x12a142768 <col:10> 'int' 255
|   |   | `-BinaryOperator 0x12a142850 <col:16, col:20> 'const char *' '='
|   |   |   |-DeclRefExpr 0x12a1427c8 <col:16> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   |   `-ImplicitCastExpr 0x12a142838 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12a142820 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12a142800 <col:20> 'char[4]' lvalue "STR"
|   |   |-BreakStmt 0x12a142870 <col:27>
|   |   |-DefaultStmt 0x12a143340 <line:33:5, line:37:35>
|   |   | `-IfStmt 0x12a143310 <line:34:7, line:37:35> has_else
|   |   |   |-BinaryOperator 0x12a142968 <line:34:11, col:26> 'int' '&&'
|   |   |   | |-BinaryOperator 0x12a1428d0 <col:11, col:16> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x12a1428b8 <col:11> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x12a142878 <col:11> 'int' lvalue Var 0x12a1284a8 'ec' 'int'
|   |   |   | | `-IntegerLiteral 0x12a142898 <col:16> 'int' 0
|   |   |   | `-BinaryOperator 0x12a142948 <col:21, col:26> 'int' '<'
|   |   |   |   |-ImplicitCastExpr 0x12a142930 <col:21> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x12a1428f0 <col:21> 'int' lvalue Var 0x12a1284a8 'ec' 'int'
|   |   |   |   `-IntegerLiteral 0x12a142910 <col:26> 'int' 128
|   |   |   |-CallExpr 0x12a143118 <line:35:9, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x12a143100 <col:9> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12a143018 <col:9> 'int (char *, const char *, ...)' Function 0x12a142e00 'sprintf' 'int (char *, const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x12a143150 <col:18> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12a143038 <col:18> 'char[100]' lvalue Var 0x12a128410 'buffer' 'char[100]'
|   |   |   | |-ImplicitCastExpr 0x12a143180 <col:26> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x12a143168 <col:26> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x12a143058 <col:26> 'char[4]' lvalue "STR"
|   |   |   | `-ImplicitCastExpr 0x12a143198 <col:33> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12a143078 <col:33> 'int' lvalue Var 0x12a1284a8 'ec' 'int'
|   |   |   `-CallExpr 0x12a143278 <line:37:9, col:35> 'int'
|   |   |     |-ImplicitCastExpr 0x12a143260 <col:9> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12a1431b0 <col:9> 'int (char *, const char *, ...)' Function 0x12a142e00 'sprintf' 'int (char *, const char *, ...)'
|   |   |     |-ImplicitCastExpr 0x12a1432b0 <col:18> 'char *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12a1431d0 <col:18> 'char[100]' lvalue Var 0x12a128410 'buffer' 'char[100]'
|   |   |     |-ImplicitCastExpr 0x12a1432e0 <col:26> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x12a1432c8 <col:26> 'char *' <ArrayToPointerDecay>
|   |   |     |   `-StringLiteral 0x12a1431f0 <col:26> 'char[4]' lvalue "STR"
|   |   |     `-ImplicitCastExpr 0x12a1432f8 <col:33> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x12a143210 <col:33> 'int' lvalue Var 0x12a1284a8 'ec' 'int'
|   |   |-BinaryOperator 0x12a1433d0 <line:38:7, col:11> 'const char *' '='
|   |   | |-DeclRefExpr 0x12a143360 <col:7> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
|   |   | `-ImplicitCastExpr 0x12a1433b8 <col:11> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x12a1433a0 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x12a143380 <col:11> 'char[100]' lvalue Var 0x12a128410 'buffer' 'char[100]'
|   |   `-BreakStmt 0x12a1433f0 <line:39:7>
|   `-CallExpr 0x12a143678 <line:41:3, col:23> 'int'
|     |-ImplicitCastExpr 0x12a143660 <col:3> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x12a143600 <col:3> 'int ()' Function 0x12a143548 'DEBUGOUT_1' 'int ()'
|     |-ImplicitCastExpr 0x12a1436a8 <col:15> 'char *' <ArrayToPointerDecay>
|     | `-StringLiteral 0x12a143620 <col:15> 'char[4]' lvalue "STR"
|     `-ImplicitCastExpr 0x12a1436c0 <col:22> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x12a143640 <col:22> 'const char *' lvalue Var 0x12a1282e8 't' 'const char *'
`-FunctionDecl 0x12a142e00 <line:35:9> col:9 implicit used sprintf 'int (char *, const char *, ...)' extern
  |-ParmVarDecl 0x12a142f00 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x12a142f68 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x12a142ea8 <<invalid sloc>> Implicit 906
  `-FormatAttr 0x12a142fe0 <col:9> Implicit printf 2 3
