TranslationUnitDecl 0x145055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1450564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145055bd0 '__int128'
|-TypedefDecl 0x145056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145055bf0 'unsigned __int128'
|-TypedefDecl 0x14580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14580bc00 'struct __NSConstantString_tag'
|   `-Record 0x145056580 '__NSConstantString_tag'
|-TypedefDecl 0x14580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145055d90 '__SVInt8_t'
|-TypedefDecl 0x14580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145055db0 '__SVInt16_t'
|-TypedefDecl 0x14580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145055dd0 '__SVInt32_t'
|-TypedefDecl 0x14580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145055df0 '__SVInt64_t'
|-TypedefDecl 0x14580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145055e10 '__SVUint8_t'
|-TypedefDecl 0x14580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145055e30 '__SVUint16_t'
|-TypedefDecl 0x14580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145055e50 '__SVUint32_t'
|-TypedefDecl 0x14580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145055e70 '__SVUint64_t'
|-TypedefDecl 0x14580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145055e90 '__SVFloat16_t'
|-TypedefDecl 0x14580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1450560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1450560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1450560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1450561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1450561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1450561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1450562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1450562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1450562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145056390 '__SVBool_t'
|-TypedefDecl 0x14580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1450563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1450563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1450563f0 '__SVCount_t'
|-TypedefDecl 0x14580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14580dbb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-TypedefDecl 0x14580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14580dbb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-FunctionDecl 0x14580ddf0 <dataset_diviso_filec/func22010_vuln.c:1:1, line:65:1> line:1:13 invalid esp_do_nodma 'void (int *)' static
| |-ParmVarDecl 0x14580dd28 <col:26, col:36> col:36 referenced invalid s 'int *'
| `-CompoundStmt 0x1458297a8 <line:2:1, line:65:1>
|   |-DeclStmt 0x14580dfd8 <line:3:5, col:59>
|   | `-VarDecl 0x14580deb8 <col:5, col:9> col:9 used to_device 'int'
|   |-DeclStmt 0x14580e070 <line:5:5, col:12>
|   | `-VarDecl 0x14580e008 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x1468093f0 <line:7:5, line:29:5>
|   | |-CXXDependentScopeMemberExpr 0x14580e0a8 <line:7:9, col:12> '<dependent type>' contains-errors lvalue ->do_cmd
|   | | `-RecoveryExpr 0x14580e088 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1468093c0 <col:20, line:29:5>
|   |   |-CallExpr 0x146808880 <line:9:9, col:39> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x146808800 <col:9> 'int ()' Function 0x14580e340 'trace_esp_handle_ti_cmd' 'int ()'
|   |   | `-RecoveryExpr 0x146808860 <col:33> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x146808958 <line:10:9, col:22> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x1468088f0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->ti_size
|   |   | | `-RecoveryExpr 0x1468088c8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1468088a8 <col:9> 'int *' lvalue ParmVar 0x14580dd28 's' 'int *'
|   |   | `-IntegerLiteral 0x146808938 <col:22> 'int' 0
|   |   |-IfStmt 0x146809380 <line:11:9, line:27:9> has_else
|   |   | |-RecoveryExpr 0x146808a30 <line:11:13, col:42> '_Bool' contains-errors
|   |   | |-CompoundStmt 0x146808e00 <col:51, line:20:9>
|   |   | | |-IfStmt 0x146808bc8 <line:13:13, line:15:13>
|   |   | | | |-BinaryOperator 0x146808b80 <line:13:17, col:68> 'int' contains-errors '=='
|   |   | | | | |-CXXDependentScopeMemberExpr 0x146808a70 <col:17, col:20> '<dependent type>' contains-errors lvalue ->cmdfifo_cdb_offset
|   |   | | | | | `-RecoveryExpr 0x146808a50 <col:17> '<dependent type>' contains-errors lvalue
|   |   | | | | `-CallExpr 0x146808b58 <col:42, col:68> '<dependent type>' contains-errors
|   |   | | | |   |-DeclRefExpr 0x146808ab8 <col:42> 'int ()' Function 0x14580e198 'fifo8_num_used' 'int ()'
|   |   | | | |   `-UnaryOperator 0x146808b40 <col:57, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | | |     `-CXXDependentScopeMemberExpr 0x146808af8 <col:58, col:61> '<dependent type>' contains-errors lvalue ->cmdfifo
|   |   | | | |       `-RecoveryExpr 0x146808ad8 <col:58> '<dependent type>' contains-errors lvalue
|   |   | | | `-CompoundStmt 0x146808bb0 <col:71, line:15:13>
|   |   | | |   `-ReturnStmt 0x146808ba0 <line:14:17>
|   |   | | |-BinaryOperator 0x146808c98 <line:18:13, col:25> '<dependent type>' contains-errors '='
|   |   | | | |-CXXDependentScopeMemberExpr 0x146808c30 <col:13, col:16> '<dependent type>' contains-errors lvalue ->do_cmd
|   |   | | | | `-RecoveryExpr 0x146808c08 <col:13> '<dependent type>' contains-errors lvalue
|   |   | | | |   `-DeclRefExpr 0x146808be8 <col:13> 'int *' lvalue ParmVar 0x14580dd28 's' 'int *'
|   |   | | | `-IntegerLiteral 0x146808c78 <col:25> 'int' 0
|   |   | | `-CallExpr 0x146808dd8 <line:19:13, col:21> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x146808d98 <col:13> 'int ()' Function 0x146808ce0 'do_cmd' 'int ()'
|   |   | |   `-RecoveryExpr 0x146808db8 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x146809360 <line:20:16, line:27:9>
|   |   |   |-BinaryOperator 0x146808f80 <line:22:13, col:63> '<dependent type>' contains-errors '='
|   |   |   | |-CXXDependentScopeMemberExpr 0x146808e70 <col:13, col:16> '<dependent type>' contains-errors lvalue ->cmdfifo_cdb_offset
|   |   |   | | `-RecoveryExpr 0x146808e48 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x146808e28 <col:13> 'int *' lvalue ParmVar 0x14580dd28 's' 'int *'
|   |   |   | `-CallExpr 0x146808f58 <col:37, col:63> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x146808eb8 <col:37> 'int ()' Function 0x14580e198 'fifo8_num_used' 'int ()'
|   |   |   |   `-UnaryOperator 0x146808f40 <col:52, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   |     `-CXXDependentScopeMemberExpr 0x146808ef8 <col:53, col:56> '<dependent type>' contains-errors lvalue ->cmdfifo
|   |   |   |       `-RecoveryExpr 0x146808ed8 <col:53> '<dependent type>' contains-errors lvalue
|   |   |   `-CallExpr 0x146809338 <line:26:13, col:28> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x1468092f8 <col:13> 'int ()' Function 0x146809240 'esp_raise_irq' 'int ()'
|   |   |     `-RecoveryExpr 0x146809318 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x1468093b0 <line:28:9>
|   |-IfStmt 0x1468094d0 <line:31:5, line:33:5>
|   | |-UnaryOperator 0x146809490 <line:31:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x146809478 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x146809430 <col:10, col:13> '<dependent type>' contains-errors lvalue ->current_req
|   | |     `-RecoveryExpr 0x146809410 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1468094b8 <col:26, line:33:5>
|   |   `-ReturnStmt 0x1468094a8 <line:32:9>
|   |-IfStmt 0x1468095c0 <line:35:5, line:38:5>
|   | |-BinaryOperator 0x146809578 <line:35:9, col:25> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x146809510 <col:9, col:12> '<dependent type>' contains-errors lvalue ->async_len
|   | | | `-RecoveryExpr 0x1468094f0 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x146809558 <col:25> 'int' 0
|   | `-CompoundStmt 0x1468095a8 <col:28, line:38:5>
|   |   `-ReturnStmt 0x146809598 <line:37:9>
|   |-IfStmt 0x1458292d8 <line:40:5, line:53:5> has_else
|   | |-ImplicitCastExpr 0x146809600 <line:40:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1468095e0 <col:9> 'int' lvalue Var 0x14580deb8 'to_device' 'int'
|   | |-CompoundStmt 0x1458289b0 <col:20, line:46:5>
|   | | |-CompoundAssignOperator 0x1458287c0 <line:43:9, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | | | |-CXXDependentScopeMemberExpr 0x145828758 <col:9, col:12> '<dependent type>' contains-errors lvalue ->async_buf
|   | | | | `-RecoveryExpr 0x145828730 <col:9> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x145828710 <col:9> 'int *' lvalue ParmVar 0x14580dd28 's' 'int *'
|   | | | `-DeclRefExpr 0x1458287a0 <col:25> 'int' lvalue Var 0x14580e008 'len' 'int'
|   | | |-CompoundAssignOperator 0x1458288a0 <line:44:9, col:25> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | | | |-CXXDependentScopeMemberExpr 0x145828838 <col:9, col:12> '<dependent type>' contains-errors lvalue ->async_len
|   | | | | `-RecoveryExpr 0x145828810 <col:9> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x1458287f0 <col:9> 'int *' lvalue ParmVar 0x14580dd28 's' 'int *'
|   | | | `-DeclRefExpr 0x145828880 <col:25> 'int' lvalue Var 0x14580e008 'len' 'int'
|   | | `-CompoundAssignOperator 0x145828980 <line:45:9, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |   |-CXXDependentScopeMemberExpr 0x145828918 <col:9, col:12> '<dependent type>' contains-errors lvalue ->ti_size
|   | |   | `-RecoveryExpr 0x1458288f0 <col:9> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x1458288d0 <col:9> 'int *' lvalue ParmVar 0x14580dd28 's' 'int *'
|   | |   `-DeclRefExpr 0x145828960 <col:23> 'int' lvalue Var 0x14580e008 'len' 'int'
|   | `-CompoundStmt 0x145829298 <line:46:12, line:53:5>
|   |   |-BinaryOperator 0x145828b18 <line:47:9, col:43> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1458289d8 <col:9> 'int' lvalue Var 0x14580e008 'len' 'int'
|   |   | `-CallExpr 0x145828ae8 <col:15, col:43> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1458289f8 <col:15> 'int ()' Function 0x146809660 'MIN' 'int ()'
|   |   |   |-CXXDependentScopeMemberExpr 0x145828a38 <col:19, col:22> '<dependent type>' contains-errors lvalue ->ti_size
|   |   |   | `-RecoveryExpr 0x145828a18 <col:19> '<dependent type>' contains-errors lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x145828aa0 <col:31, col:34> '<dependent type>' contains-errors lvalue ->async_len
|   |   |     `-RecoveryExpr 0x145828a80 <col:31> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x145828d70 <line:48:9, col:48> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x145828b38 <col:9> 'int' lvalue Var 0x14580e008 'len' 'int'
|   |   | `-CallExpr 0x145828d40 <col:15, col:48> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x145828b58 <col:15> 'int ()' Function 0x146809660 'MIN' 'int ()'
|   |   |   |-DeclRefExpr 0x145828b78 <col:19> 'int' lvalue Var 0x14580e008 'len' 'int'
|   |   |   `-CallExpr 0x145828d18 <col:24, col:47> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x145828c78 <col:24> 'int ()' Function 0x145828bc0 'fifo8_num_free' 'int ()'
|   |   |     `-UnaryOperator 0x145828d00 <col:39, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |       `-CXXDependentScopeMemberExpr 0x145828cb8 <col:40, col:43> '<dependent type>' contains-errors lvalue ->fifo
|   |   |         `-RecoveryExpr 0x145828c98 <col:40> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x145828f98 <line:49:9, col:51> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x145828e70 <col:9> 'int ()' Function 0x145828db8 'fifo8_push_all' 'int ()'
|   |   | |-UnaryOperator 0x145828ef8 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-CXXDependentScopeMemberExpr 0x145828eb0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->fifo
|   |   | |   `-RecoveryExpr 0x145828e90 <col:25> '<dependent type>' contains-errors lvalue
|   |   | |-CXXDependentScopeMemberExpr 0x145828f30 <col:34, col:37> '<dependent type>' contains-errors lvalue ->async_buf
|   |   | | `-RecoveryExpr 0x145828f10 <col:34> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x145828f78 <col:48> 'int' lvalue Var 0x14580e008 'len' 'int'
|   |   |-CompoundAssignOperator 0x145829080 <line:50:9, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x145829018 <col:9, col:12> '<dependent type>' contains-errors lvalue ->async_buf
|   |   | | `-RecoveryExpr 0x145828ff0 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x145828fd0 <col:9> 'int *' lvalue ParmVar 0x14580dd28 's' 'int *'
|   |   | `-DeclRefExpr 0x145829060 <col:25> 'int' lvalue Var 0x14580e008 'len' 'int'
|   |   |-CompoundAssignOperator 0x145829160 <line:51:9, col:25> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x1458290f8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->async_len
|   |   | | `-RecoveryExpr 0x1458290d0 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1458290b0 <col:9> 'int *' lvalue ParmVar 0x14580dd28 's' 'int *'
|   |   | `-DeclRefExpr 0x145829140 <col:25> 'int' lvalue Var 0x14580e008 'len' 'int'
|   |   `-CompoundAssignOperator 0x145829268 <line:52:9, col:23> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     |-CXXDependentScopeMemberExpr 0x145829200 <col:9, col:12> '<dependent type>' contains-errors lvalue ->ti_size
|   |     | `-RecoveryExpr 0x1458291b0 <col:9> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x145829190 <col:9> 'int *' lvalue ParmVar 0x14580dd28 's' 'int *'
|   |     `-DeclRefExpr 0x145829248 <col:23> 'int' lvalue Var 0x14580e008 'len' 'int'
|   |-IfStmt 0x145829690 <line:55:5, line:61:5>
|   | |-BinaryOperator 0x145829390 <line:55:9, col:25> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x145829328 <col:9, col:12> '<dependent type>' contains-errors lvalue ->async_len
|   | | | `-RecoveryExpr 0x145829308 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x145829370 <col:25> 'int' 0
|   | `-CompoundStmt 0x145829670 <col:28, line:61:5>
|   |   |-CallExpr 0x145829518 <line:56:9, col:41> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x145829490 <col:9> 'int ()' Function 0x1458293d8 'scsi_req_continue' 'int ()'
|   |   | `-CXXDependentScopeMemberExpr 0x1458294d0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->current_req
|   |   |   `-RecoveryExpr 0x1458294b0 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x145829650 <line:58:9, line:60:9>
|   |     |-BinaryOperator 0x145829608 <line:58:13, col:40> 'int' contains-errors '||'
|   |     | |-DeclRefExpr 0x145829540 <col:13> 'int' lvalue Var 0x14580deb8 'to_device' 'int'
|   |     | `-BinaryOperator 0x1458295e8 <col:26, col:40> 'int' contains-errors '=='
|   |     |   |-CXXDependentScopeMemberExpr 0x145829580 <col:26, col:29> '<dependent type>' contains-errors lvalue ->ti_size
|   |     |   | `-RecoveryExpr 0x145829560 <col:26> '<dependent type>' contains-errors lvalue
|   |     |   `-IntegerLiteral 0x1458295c8 <col:40> 'int' 0
|   |     `-CompoundStmt 0x145829638 <col:43, line:60:9>
|   |       `-ReturnStmt 0x145829628 <line:59:13>
|   `-CallExpr 0x145829780 <line:64:5, col:20> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x145829740 <col:5> 'int ()' Function 0x146809240 'esp_raise_irq' 'int ()'
|     `-RecoveryExpr 0x145829760 <col:19> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x145828278 <line:42:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x145828378 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1458283e0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x145828448 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x145828320 <<invalid sloc>> Implicit 882
