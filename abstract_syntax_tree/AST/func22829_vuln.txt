TranslationUnitDecl 0x145855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1458564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145855bd0 '__int128'
|-TypedefDecl 0x145856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145855bf0 'unsigned __int128'
|-TypedefDecl 0x14600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14600bc00 'struct __NSConstantString_tag'
|   `-Record 0x145856580 '__NSConstantString_tag'
|-TypedefDecl 0x14600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145855d90 '__SVInt8_t'
|-TypedefDecl 0x14600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145855db0 '__SVInt16_t'
|-TypedefDecl 0x14600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145855dd0 '__SVInt32_t'
|-TypedefDecl 0x14600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145855df0 '__SVInt64_t'
|-TypedefDecl 0x14600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145855e10 '__SVUint8_t'
|-TypedefDecl 0x14600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145855e30 '__SVUint16_t'
|-TypedefDecl 0x14600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145855e50 '__SVUint32_t'
|-TypedefDecl 0x14600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145855e70 '__SVUint64_t'
|-TypedefDecl 0x14600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145855e90 '__SVFloat16_t'
|-TypedefDecl 0x14600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1458560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1458560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1458560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1458561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1458561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1458561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1458562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1458562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1458562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145856390 '__SVBool_t'
|-TypedefDecl 0x14600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1458563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1458563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1458563f0 '__SVCount_t'
|-TypedefDecl 0x14600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-TypedefDecl 0x14600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-FunctionDecl 0x14600de88 <dataset_diviso_filec/func22829_vuln.c:1:1, line:73:1> line:1:1 invalid PyImaging_MapBuffer 'int (int *, int *)'
| |-ParmVarDecl 0x14600dd28 <col:21, col:31> col:31 invalid self 'int *'
| |-ParmVarDecl 0x14600dda8 <col:37, col:47> col:47 invalid args 'int *'
| `-CompoundStmt 0x1460280e0 <line:2:1, line:73:1>
|   |-DeclStmt 0x14600dfd8 <line:8:5, col:15>
|   | `-VarDecl 0x14600df70 <col:5, col:11> col:11 used mode 'char *'
|   |-DeclStmt 0x14600e070 <line:9:5, col:16>
|   | `-VarDecl 0x14600e008 <col:5, col:11> col:11 used codec 'char *'
|   |-DeclStmt 0x14600e1b8 <line:12:5, col:21>
|   | |-VarDecl 0x14600e0b8 <col:5, col:9> col:9 used xsize 'int'
|   | `-VarDecl 0x14600e138 <col:5, col:16> col:16 used ysize 'int'
|   |-DeclStmt 0x14600e250 <line:13:5, col:15>
|   | `-VarDecl 0x14600e1e8 <col:5, col:9> col:9 used stride 'int'
|   |-DeclStmt 0x14600e2e8 <line:14:5, col:14>
|   | `-VarDecl 0x14600e280 <col:5, col:9> col:9 used ystep 'int'
|   |-IfStmt 0x147008780 <line:16:5, line:18:16>
|   | |-UnaryOperator 0x147008720 <line:16:9, line:17:73> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x1470086a8 <line:16:10, line:17:73> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x1470082b8 <line:16:10> 'int ()' Function 0x147008200 'PyArg_ParseTuple' 'int ()'
|   | |   |-RecoveryExpr 0x1470082d8 <col:27> '<dependent type>' contains-errors lvalue
|   | |   |-StringLiteral 0x147008340 <col:33> 'char[4]' lvalue "STR"
|   | |   |-UnaryOperator 0x147008620 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x147008600 <col:41> '<dependent type>' contains-errors lvalue
|   | |   |-UnaryOperator 0x1470083b0 <col:49, col:50> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x147008390 <col:50> 'int' lvalue Var 0x14600e0b8 'xsize' 'int'
|   | |   |-UnaryOperator 0x1470083e8 <col:57, col:58> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1470083c8 <col:58> 'int' lvalue Var 0x14600e138 'ysize' 'int'
|   | |   |-UnaryOperator 0x147008450 <line:17:27, col:28> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x147008400 <col:28> 'char *' lvalue Var 0x14600e008 'codec' 'char *'
|   | |   |-UnaryOperator 0x147008658 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x147008638 <col:36> '<dependent type>' contains-errors lvalue
|   | |   |-UnaryOperator 0x147008690 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x147008670 <col:43> '<dependent type>' contains-errors lvalue
|   | |   |-UnaryOperator 0x1470084e8 <col:51, col:52> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1470084c8 <col:52> 'char *' lvalue Var 0x14600df70 'mode' 'char *'
|   | |   |-UnaryOperator 0x147008520 <col:58, col:59> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x147008500 <col:59> 'int' lvalue Var 0x14600e1e8 'stride' 'int'
|   | |   `-UnaryOperator 0x147008558 <col:67, col:68> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x147008538 <col:68> 'int' lvalue Var 0x14600e280 'ystep' 'int'
|   | `-ReturnStmt 0x147008770 <line:18:9, col:16>
|   |   `-RecoveryExpr 0x147008750 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x147008b28 <line:20:5, line:23:5>
|   | |-UnaryOperator 0x147008940 <line:20:9, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x147008918 <col:10, col:38> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x147008880 <col:10> 'int ()' Function 0x1470087c8 'PyImaging_CheckBuffer' 'int ()'
|   | |   `-RecoveryExpr 0x1470088f8 <col:32> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x147008b10 <col:41, line:23:5>
|   |   `-CallExpr 0x147008ae0 <line:21:9, col:47> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x147008a38 <col:9> 'int ()' Function 0x147008980 'PyErr_SetString' 'int ()'
|   |     |-RecoveryExpr 0x147008ac0 <col:25> '<dependent type>' contains-errors lvalue
|   |     `-StringLiteral 0x147008a70 <col:42> 'char[4]' lvalue "STR"
|   |-IfStmt 0x146027828 <line:25:5, line:32:5>
|   | |-BinaryOperator 0x147008ba0 <line:25:9, col:19> 'int' '<='
|   | | |-ImplicitCastExpr 0x147008b88 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x147008b48 <col:9> 'int' lvalue Var 0x14600e1e8 'stride' 'int'
|   | | `-IntegerLiteral 0x147008b68 <col:19> 'int' 0
|   | `-CompoundStmt 0x146027810 <col:22, line:32:5>
|   |   `-IfStmt 0x1460277e0 <line:26:9, line:31:30> has_else
|   |     |-UnaryOperator 0x147008f48 <line:26:13, col:32> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x147008eb8 <col:14, col:32> 'int'
|   |     |   |-ImplicitCastExpr 0x147008ea0 <col:14> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x147008de0 <col:14> 'int (const char *, const char *)' Function 0x147008c00 'strcmp' 'int (const char *, const char *)'
|   |     |   |-ImplicitCastExpr 0x147008f00 <col:21> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x147008ee8 <col:21> 'char *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x147008e00 <col:21> 'char *' lvalue Var 0x14600df70 'mode' 'char *'
|   |     |   `-ImplicitCastExpr 0x147008f30 <col:27> 'const char *' <NoOp>
|   |     |     `-ImplicitCastExpr 0x147008f18 <col:27> 'char *' <ArrayToPointerDecay>
|   |     |       `-StringLiteral 0x147008e20 <col:27> 'char[4]' lvalue "STR"
|   |     |-BinaryOperator 0x147008fb8 <line:27:13, col:22> 'int' '='
|   |     | |-DeclRefExpr 0x147008f60 <col:13> 'int' lvalue Var 0x14600e1e8 'stride' 'int'
|   |     | `-ImplicitCastExpr 0x147008fa0 <col:22> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x147008f80 <col:22> 'int' lvalue Var 0x14600e0b8 'xsize' 'int'
|   |     `-IfStmt 0x1460277b0 <line:28:14, line:31:30> has_else
|   |       |-UnaryOperator 0x146027628 <line:28:18, col:41> 'int' prefix '!' cannot overflow
|   |       | `-CallExpr 0x146027578 <col:19, col:41> 'int'
|   |       |   |-ImplicitCastExpr 0x146027560 <col:19> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x146027480 <col:19> 'int (const char *, const char *, unsigned long)' Function 0x147009028 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |       |   |-ImplicitCastExpr 0x1460275c8 <col:27> 'const char *' <NoOp>
|   |       |   | `-ImplicitCastExpr 0x1460275b0 <col:27> 'char *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1460274a0 <col:27> 'char *' lvalue Var 0x14600df70 'mode' 'char *'
|   |       |   |-ImplicitCastExpr 0x1460275f8 <col:33> 'const char *' <NoOp>
|   |       |   | `-ImplicitCastExpr 0x1460275e0 <col:33> 'char *' <ArrayToPointerDecay>
|   |       |   |   `-StringLiteral 0x1460274c0 <col:33> 'char[4]' lvalue "STR"
|   |       |   `-ImplicitCastExpr 0x146027610 <col:40> 'unsigned long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x1460274e0 <col:40> 'int' 4
|   |       |-BinaryOperator 0x1460276d8 <line:29:13, col:30> 'int' '='
|   |       | |-DeclRefExpr 0x146027640 <col:13> 'int' lvalue Var 0x14600e1e8 'stride' 'int'
|   |       | `-BinaryOperator 0x1460276b8 <col:22, col:30> 'int' '*'
|   |       |   |-ImplicitCastExpr 0x1460276a0 <col:22> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x146027660 <col:22> 'int' lvalue Var 0x14600e0b8 'xsize' 'int'
|   |       |   `-IntegerLiteral 0x146027680 <col:30> 'int' 2
|   |       `-BinaryOperator 0x146027790 <line:31:13, col:30> 'int' '='
|   |         |-DeclRefExpr 0x1460276f8 <col:13> 'int' lvalue Var 0x14600e1e8 'stride' 'int'
|   |         `-BinaryOperator 0x146027770 <col:22, col:30> 'int' '*'
|   |           |-ImplicitCastExpr 0x146027758 <col:22> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x146027718 <col:22> 'int' lvalue Var 0x14600e0b8 'xsize' 'int'
|   |           `-IntegerLiteral 0x146027738 <col:30> 'int' 4
|   |-IfStmt 0x146027a18 <line:40:5, line:43:5>
|   | |-RecoveryExpr 0x1460279a8 <line:40:9, col:20> '_Bool' contains-errors
|   | `-CompoundStmt 0x146027a08 <col:23, line:43:5>
|   `-IfStmt 0x146027aa8 <line:44:5, line:47:5>
|     |-RecoveryExpr 0x146027a38 <line:44:9, col:30> '_Bool' contains-errors
|     `-CompoundStmt 0x146027a98 <col:35, line:47:5>
|-FunctionDecl 0x147008c00 <line:26:14> col:14 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x147008d00 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x147008d68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x147008ca8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x147009028 <line:28:19> col:19 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x147009128 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x147009190 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x146027400 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1470090d0 <<invalid sloc>> Implicit 888
