TranslationUnitDecl 0x147855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1478564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147855bd0 '__int128'
|-TypedefDecl 0x147856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147855bf0 'unsigned __int128'
|-TypedefDecl 0x15000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15000bc00 'struct __NSConstantString_tag'
|   `-Record 0x147856580 '__NSConstantString_tag'
|-TypedefDecl 0x15000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147855d90 '__SVInt8_t'
|-TypedefDecl 0x15000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147855db0 '__SVInt16_t'
|-TypedefDecl 0x15000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147855dd0 '__SVInt32_t'
|-TypedefDecl 0x15000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147855df0 '__SVInt64_t'
|-TypedefDecl 0x15000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147855e10 '__SVUint8_t'
|-TypedefDecl 0x15000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147855e30 '__SVUint16_t'
|-TypedefDecl 0x15000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147855e50 '__SVUint32_t'
|-TypedefDecl 0x15000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147855e70 '__SVUint64_t'
|-TypedefDecl 0x15000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147855e90 '__SVFloat16_t'
|-TypedefDecl 0x15000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1478560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1478560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1478560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1478561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1478561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1478561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1478562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1478562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1478562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147856390 '__SVBool_t'
|-TypedefDecl 0x15000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1478563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1478563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1478563f0 '__SVCount_t'
|-TypedefDecl 0x15000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-TypedefDecl 0x15000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
`-FunctionDecl 0x15000dda8 <dataset_diviso_filec/func18843_nonvuln.c:1:1, line:37:17> line:2:1 my_os_charset_to_mysql_charset 'const char *(const char *)' static
  |-ParmVarDecl 0x15000dcd8 <col:32, col:44> col:44 used csname 'const char *'
  `-CompoundStmt 0x150028378 <line:3:1, line:37:17>
    |-DeclStmt 0x15000df38 <line:4:3, col:29>
    | `-VarDecl 0x15000ded0 <col:3, col:26> col:26 invalid csp 'const int *'
    |-ForStmt 0x150027e50 <line:5:3, line:26:3>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-CXXDependentScopeMemberExpr 0x15000dfc8 <line:5:23, col:28> '<dependent type>' contains-errors lvalue ->os_name
    | | `-RecoveryExpr 0x15000dfa8 <col:23> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x15000e030 <col:37, col:40> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x15000e010 <col:37> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x150027e38 <line:6:3, line:26:3>
    |   `-IfStmt 0x150027e18 <line:7:5, line:25:5>
    |     |-UnaryOperator 0x15000e2f8 <line:7:9, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-CallExpr 0x15000e2c0 <col:10, col:64> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x15000e160 <col:10> 'int ()' Function 0x15000e0a8 'my_strcasecmp' 'int ()'
    |     |   |-UnaryOperator 0x15000e2a8 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   | `-RecoveryExpr 0x15000e288 <col:25> '<dependent type>' contains-errors lvalue
    |     |   |-CXXDependentScopeMemberExpr 0x15000e1d0 <col:44, col:49> '<dependent type>' contains-errors lvalue ->os_name
    |     |   | `-RecoveryExpr 0x15000e1b0 <col:44> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x15000e218 <col:58> 'const char *' lvalue ParmVar 0x15000dcd8 'csname' 'const char *'
    |     `-CompoundStmt 0x150027e00 <line:8:5, line:25:5>
    |       `-SwitchStmt 0x15000e390 <line:9:7, line:24:7>
    |         |-ImplicitCastExpr 0x15000e378 <line:9:15, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-CXXDependentScopeMemberExpr 0x15000e330 <col:15, col:20> '<dependent type>' contains-errors lvalue ->param
    |         |   `-RecoveryExpr 0x15000e310 <col:15> '<dependent type>' contains-errors lvalue
    |         `-CompoundStmt 0x150027dd0 <line:10:7, line:24:7>
    |           |-ReturnStmt 0x150027848 <line:12:9, col:21>
    |           | `-CXXDependentScopeMemberExpr 0x150027800 <col:16, col:21> '<dependent type>' contains-errors lvalue ->my_name
    |           |   `-RecoveryExpr 0x15000e3d0 <col:16> '<dependent type>' contains-errors lvalue
    |           |-ReturnStmt 0x1500278d8 <line:16:9, col:21>
    |           | `-CXXDependentScopeMemberExpr 0x150027890 <col:16, col:21> '<dependent type>' contains-errors lvalue ->my_name
    |           |   `-RecoveryExpr 0x150027870 <col:16> '<dependent type>' contains-errors lvalue
    |           |-DefaultStmt 0x150027d48 <line:18:7, line:22:46>
    |           | `-CallExpr 0x150027d08 <line:19:9, line:22:46> '<dependent type>' contains-errors
    |           |   |-DeclRefExpr 0x1500279c8 <line:19:9> 'int ()' Function 0x150027910 'my_printf_error' 'int ()'
    |           |   |-RecoveryExpr 0x150027ca8 <col:25> '<dependent type>' contains-errors lvalue
    |           |   |-StringLiteral 0x150027a40 <line:20:25, line:21:25> 'char[7]' lvalue "STRSTR"
    |           |   |-CallExpr 0x150027ce0 <line:22:26, col:31> 'int'
    |           |   | |-ImplicitCastExpr 0x150027cc8 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |           |   | | `-DeclRefExpr 0x150027b48 <col:26> 'int ()' Function 0x150027a90 'MYF' 'int ()'
    |           |   | `-IntegerLiteral 0x150027b68 <col:30> 'int' 0
    |           |   `-CXXDependentScopeMemberExpr 0x150027c20 <col:34, col:39> '<dependent type>' contains-errors lvalue ->my_name
    |           |     `-RecoveryExpr 0x150027c00 <col:34> '<dependent type>' contains-errors lvalue
    |           `-GotoStmt 0x150027db8 <line:23:9, col:14> 'def' 0x150027d68
    |-CallExpr 0x150028060 <line:28:3, line:30:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x150027e88 <line:28:3> 'int ()' Function 0x150027910 'my_printf_error' 'int ()'
    | |-RecoveryExpr 0x150028000 <col:19> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x150027f00 <line:29:19> 'char[4]' lvalue "STR"
    | |-CallExpr 0x150028038 <line:30:19, col:24> 'int'
    | | |-ImplicitCastExpr 0x150028020 <col:19> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x150027f20 <col:19> 'int ()' Function 0x150027a90 'MYF' 'int ()'
    | | `-IntegerLiteral 0x150027f40 <col:23> 'int' 0
    | `-DeclRefExpr 0x150027fa0 <col:27> 'const char *' lvalue ParmVar 0x15000dcd8 'csname' 'const char *'
    |-LabelStmt 0x150028138 <line:32:1, line:33:11> 'def'
    | `-BinaryOperator 0x150028118 <col:3, col:11> 'const char *' contains-errors '='
    |   |-DeclRefExpr 0x1500280a0 <col:3> 'const char *' lvalue ParmVar 0x15000dcd8 'csname' 'const char *'
    |   `-RecoveryExpr 0x1500280f8 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1500282f0 <line:34:3, line:36:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x150028158 <line:34:3> 'int ()' Function 0x150027910 'my_printf_error' 'int ()'
    | |-RecoveryExpr 0x150028290 <col:19> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x150028190 <line:35:19> 'char[4]' lvalue "STR"
    | |-CallExpr 0x1500282c8 <line:36:19, col:24> 'int'
    | | |-ImplicitCastExpr 0x1500282b0 <col:19> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1500281b0 <col:19> 'int ()' Function 0x150027a90 'MYF' 'int ()'
    | | `-IntegerLiteral 0x1500281d0 <col:23> 'int' 0
    | `-DeclRefExpr 0x150028230 <col:27> 'const char *' lvalue ParmVar 0x15000dcd8 'csname' 'const char *'
    `-ReturnStmt 0x150028368 <line:37:3, col:10>
      `-ImplicitCastExpr 0x150028350 <col:10> 'const char *' <LValueToRValue>
        `-DeclRefExpr 0x150028330 <col:10> 'const char *' lvalue ParmVar 0x15000dcd8 'csname' 'const char *'
