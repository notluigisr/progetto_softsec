TranslationUnitDecl 0x11d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d855bd0 '__int128'
|-TypedefDecl 0x11d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d855bf0 'unsigned __int128'
|-TypedefDecl 0x11e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x11d856580 '__NSConstantString_tag'
|-TypedefDecl 0x11e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d855d90 '__SVInt8_t'
|-TypedefDecl 0x11e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d855db0 '__SVInt16_t'
|-TypedefDecl 0x11e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d855dd0 '__SVInt32_t'
|-TypedefDecl 0x11e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d855df0 '__SVInt64_t'
|-TypedefDecl 0x11e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d855e10 '__SVUint8_t'
|-TypedefDecl 0x11e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d855e30 '__SVUint16_t'
|-TypedefDecl 0x11e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d855e50 '__SVUint32_t'
|-TypedefDecl 0x11e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d855e70 '__SVUint64_t'
|-TypedefDecl 0x11e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d855e90 '__SVFloat16_t'
|-TypedefDecl 0x11e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d856390 '__SVBool_t'
|-TypedefDecl 0x11e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d8563f0 '__SVCount_t'
|-TypedefDecl 0x11e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
|-TypedefDecl 0x11e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
`-FunctionDecl 0x11e00e358 <dataset_diviso_filec/func12184_vuln.c:1:1, line:24:1> line:1:5 sas_ex_revalidate_domain 'int (struct domain_device *)'
  |-ParmVarDecl 0x11e00e248 <col:30, col:52> col:52 used port_dev 'struct domain_device *'
  `-CompoundStmt 0x11e029ba0 <line:2:1, line:24:1>
    |-DeclStmt 0x11e0266d0 <line:3:2, col:9>
    | `-VarDecl 0x11e026668 <col:2, col:6> col:6 used res 'int'
    |-DeclStmt 0x11e026830 <line:4:2, col:34>
    | `-VarDecl 0x11e026778 <col:2, col:30> col:24 used dev 'struct domain_device *' cinit
    |   `-RecoveryExpr 0x11e026810 <col:30> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x11e026af0 <line:6:2, col:41> 'int' contains-errors '='
    | |-DeclRefExpr 0x11e026848 <col:2> 'int' lvalue Var 0x11e026668 'res' 'int'
    | `-CallExpr 0x11e026aa8 <col:8, col:41> 'int' contains-errors
    |   |-ImplicitCastExpr 0x11e026a90 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11e026980 <col:8> 'int ()' Function 0x11e0268c8 'sas_find_bcast_dev' 'int ()'
    |   |-ImplicitCastExpr 0x11e026ad8 <col:27> 'struct domain_device *' <LValueToRValue>
    |   | `-DeclRefExpr 0x11e0269a0 <col:27> 'struct domain_device *' lvalue ParmVar 0x11e00e248 'port_dev' 'struct domain_device *'
    |   `-UnaryOperator 0x11e026a40 <col:37, col:38> 'struct domain_device **' contains-errors prefix '&' cannot overflow
    |     `-DeclRefExpr 0x11e0269c0 <col:38> 'struct domain_device *' contains-errors lvalue Var 0x11e026778 'dev' 'struct domain_device *'
    |-WhileStmt 0x11e029b38 <line:7:2, line:22:2>
    | |-BinaryOperator 0x11e026bc0 <line:7:9, col:21> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x11e026b68 <col:9, col:16> 'int' '=='
    | | | |-ImplicitCastExpr 0x11e026b50 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x11e026b10 <col:9> 'int' lvalue Var 0x11e026668 'res' 'int'
    | | | `-IntegerLiteral 0x11e026b30 <col:16> 'int' 0
    | | `-ImplicitCastExpr 0x11e026ba8 <col:21> 'struct domain_device *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x11e026b88 <col:21> 'struct domain_device *' contains-errors lvalue Var 0x11e026778 'dev' 'struct domain_device *'
    | `-CompoundStmt 0x11e029b00 <col:26, line:22:2>
    |   |-DeclStmt 0x11e026e40 <line:8:3, col:44>
    |   | |-RecordDecl 0x11e026be0 <col:3, col:10> col:10 struct expander_device
    |   | `-VarDecl 0x11e026d48 <col:3, col:38> col:27 used ex 'struct expander_device *' cinit
    |   |   `-UnaryOperator 0x11e026e10 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x11e026de8 <col:33, col:38> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x11e026db0 <col:33> 'struct domain_device *' contains-errors lvalue Var 0x11e026778 'dev' 'struct domain_device *'
    |   |-DeclStmt 0x11e026f90 <line:9:3, col:20>
    |   | |-VarDecl 0x11e026e70 <col:3, col:11> col:7 used i 'int' cinit
    |   | | `-IntegerLiteral 0x11e026ed8 <col:11> 'int' 0
    |   | `-VarDecl 0x11e026f10 <col:3, col:14> col:14 used phy_id 'int'
    |   |-DoStmt 0x11e029930 <line:11:3, line:18:28>
    |   | |-CompoundStmt 0x11e029858 <line:11:6, line:18:3>
    |   | | |-BinaryOperator 0x11e027000 <line:12:4, col:14> 'int' '='
    |   | | | |-DeclRefExpr 0x11e026fa8 <col:4> 'int' lvalue Var 0x11e026f10 'phy_id' 'int'
    |   | | | `-UnaryOperator 0x11e026fe8 <col:13, col:14> 'int' prefix '-'
    |   | | |   `-IntegerLiteral 0x11e026fc8 <col:14> 'int' 1
    |   | | |-BinaryOperator 0x11e0272c0 <line:13:4, col:50> 'int' contains-errors '='
    |   | | | |-DeclRefExpr 0x11e027020 <col:4> 'int' lvalue Var 0x11e026668 'res' 'int'
    |   | | | `-CallExpr 0x11e027280 <col:10, col:50> '<dependent type>' contains-errors
    |   | | |   |-DeclRefExpr 0x11e027120 <col:10> 'int ()' Function 0x11e027068 'sas_find_bcast_phy' 'int ()'
    |   | | |   |-DeclRefExpr 0x11e027140 <col:29> 'struct domain_device *' contains-errors lvalue Var 0x11e026778 'dev' 'struct domain_device *'
    |   | | |   |-UnaryOperator 0x11e0271b0 <col:34, col:35> 'int *' prefix '&' cannot overflow
    |   | | |   | `-DeclRefExpr 0x11e027160 <col:35> 'int' lvalue Var 0x11e026f10 'phy_id' 'int'
    |   | | |   |-DeclRefExpr 0x11e0271c8 <col:43> 'int' lvalue Var 0x11e026e70 'i' 'int'
    |   | | |   `-RecoveryExpr 0x11e027260 <col:46> '<dependent type>' contains-errors lvalue
    |   | | |-IfStmt 0x11e027378 <line:14:4, line:15:5>
    |   | | | |-BinaryOperator 0x11e027350 <line:14:8, col:19> 'int' '=='
    |   | | | | |-ImplicitCastExpr 0x11e027338 <col:8> 'int' <LValueToRValue>
    |   | | | | | `-DeclRefExpr 0x11e0272e0 <col:8> 'int' lvalue Var 0x11e026f10 'phy_id' 'int'
    |   | | | | `-UnaryOperator 0x11e027320 <col:18, col:19> 'int' prefix '-'
    |   | | | |   `-IntegerLiteral 0x11e027300 <col:19> 'int' 1
    |   | | | `-BreakStmt 0x11e027370 <line:15:5>
    |   | | |-BinaryOperator 0x11e027570 <line:16:4, col:36> 'int' contains-errors '='
    |   | | | |-DeclRefExpr 0x11e027398 <col:4> 'int' lvalue Var 0x11e026668 'res' 'int'
    |   | | | `-CallExpr 0x11e027510 <col:10, col:36> 'int' contains-errors
    |   | | |   |-ImplicitCastExpr 0x11e0274f8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | | |   | `-DeclRefExpr 0x11e027498 <col:10> 'int ()' Function 0x11e0273e0 'sas_rediscover' 'int ()'
    |   | | |   |-ImplicitCastExpr 0x11e027540 <col:25> 'struct domain_device *' contains-errors <LValueToRValue>
    |   | | |   | `-DeclRefExpr 0x11e0274b8 <col:25> 'struct domain_device *' contains-errors lvalue Var 0x11e026778 'dev' 'struct domain_device *'
    |   | | |   `-ImplicitCastExpr 0x11e027558 <col:30> 'int' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x11e0274d8 <col:30> 'int' lvalue Var 0x11e026f10 'phy_id' 'int'
    |   | | `-BinaryOperator 0x11e029838 <line:17:4, col:17> 'int' '='
    |   | |   |-DeclRefExpr 0x11e027590 <col:4> 'int' lvalue Var 0x11e026e70 'i' 'int'
    |   | |   `-BinaryOperator 0x11e029818 <col:8, col:17> 'int' '+'
    |   | |     |-ImplicitCastExpr 0x11e029800 <col:8> 'int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x11e0275b0 <col:8> 'int' lvalue Var 0x11e026f10 'phy_id' 'int'
    |   | |     `-IntegerLiteral 0x11e0275d0 <col:17> 'int' 1
    |   | `-BinaryOperator 0x11e029910 <line:18:12, col:20> 'int' contains-errors '<'
    |   |   |-DeclRefExpr 0x11e029890 <col:12> 'int' lvalue Var 0x11e026e70 'i' 'int'
    |   |   `-RecoveryExpr 0x11e0298e8 <col:16, col:20> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x11e0298b0 <col:16> 'struct expander_device *' contains-errors lvalue Var 0x11e026d48 'ex' 'struct expander_device *'
    |   |-BinaryOperator 0x11e0299c8 <line:20:3, col:9> 'struct domain_device *' contains-errors '='
    |   | |-DeclRefExpr 0x11e029950 <col:3> 'struct domain_device *' contains-errors lvalue Var 0x11e026778 'dev' 'struct domain_device *'
    |   | `-RecoveryExpr 0x11e0299a8 <col:9> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x11e029ae0 <line:21:3, col:42> 'int' contains-errors '='
    |     |-DeclRefExpr 0x11e0299e8 <col:3> 'int' lvalue Var 0x11e026668 'res' 'int'
    |     `-CallExpr 0x11e029a98 <col:9, col:42> 'int' contains-errors
    |       |-ImplicitCastExpr 0x11e029a80 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x11e029a08 <col:9> 'int ()' Function 0x11e0268c8 'sas_find_bcast_dev' 'int ()'
    |       |-ImplicitCastExpr 0x11e029ac8 <col:28> 'struct domain_device *' <LValueToRValue>
    |       | `-DeclRefExpr 0x11e029a28 <col:28> 'struct domain_device *' lvalue ParmVar 0x11e00e248 'port_dev' 'struct domain_device *'
    |       `-UnaryOperator 0x11e029a68 <col:38, col:39> 'struct domain_device **' contains-errors prefix '&' cannot overflow
    |         `-DeclRefExpr 0x11e029a48 <col:39> 'struct domain_device *' contains-errors lvalue Var 0x11e026778 'dev' 'struct domain_device *'
    `-ReturnStmt 0x11e029b90 <line:23:2, col:9>
      `-ImplicitCastExpr 0x11e029b78 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11e029b58 <col:9> 'int' lvalue Var 0x11e026668 'res' 'int'
