TranslationUnitDecl 0x120855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1208564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120855bd0 '__int128'
|-TypedefDecl 0x120856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120855bf0 'unsigned __int128'
|-TypedefDecl 0x12100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12100bc00 'struct __NSConstantString_tag'
|   `-Record 0x120856580 '__NSConstantString_tag'
|-TypedefDecl 0x12100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120855d90 '__SVInt8_t'
|-TypedefDecl 0x12100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120855db0 '__SVInt16_t'
|-TypedefDecl 0x12100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120855dd0 '__SVInt32_t'
|-TypedefDecl 0x12100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120855df0 '__SVInt64_t'
|-TypedefDecl 0x12100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120855e10 '__SVUint8_t'
|-TypedefDecl 0x12100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120855e30 '__SVUint16_t'
|-TypedefDecl 0x12100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120855e50 '__SVUint32_t'
|-TypedefDecl 0x12100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120855e70 '__SVUint64_t'
|-TypedefDecl 0x12100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120855e90 '__SVFloat16_t'
|-TypedefDecl 0x12100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1208560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1208560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1208560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1208561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1208561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1208561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1208562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1208562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1208562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120856390 '__SVBool_t'
|-TypedefDecl 0x12100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1208563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1208563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1208563f0 '__SVCount_t'
|-TypedefDecl 0x12100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12100dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-TypedefDecl 0x12100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12100dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
`-FunctionDecl 0x122008968 <dataset_diviso_filec/func11807_vuln.c:1:1, line:27:1> line:1:1 invalid ikev2_ke_print 'int (int *, char, const struct isakmp_gen *, int)'
  |-ParmVarDecl 0x12100dd28 <col:16, col:36> col:36 invalid ndo 'int *'
  |-ParmVarDecl 0x12100dda0 <col:41, col:48> col:48 used tpay 'char'
  |-ParmVarDecl 0x12100e398 <line:2:3, col:28> col:28 used ext 'const struct isakmp_gen *'
  |-ParmVarDecl 0x122008818 <line:3:3, col:9> col:9 invalid item_len 'int'
  `-CompoundStmt 0x1209233d0 <line:6:1, line:27:1>
    |-DeclStmt 0x122008ba8 <line:7:2, col:20>
    | |-RecordDecl 0x122008a30 <col:2, col:9> col:9 struct ikev2_ke
    | `-VarDecl 0x122008b28 <col:2, col:18> col:18 invalid ke 'struct ikev2_ke'
    |-DeclStmt 0x122008ce0 <line:8:2, col:26>
    | `-VarDecl 0x122008c78 <col:2, col:25> col:25 used k 'const struct ikev2_ke *'
    |-BinaryOperator 0x122008da0 <line:10:2, col:31> 'const struct ikev2_ke *' '='
    | |-DeclRefExpr 0x122008cf8 <col:2> 'const struct ikev2_ke *' lvalue Var 0x122008c78 'k' 'const struct ikev2_ke *'
    | `-CStyleCastExpr 0x122008d78 <col:6, col:31> 'const struct ikev2_ke *' <BitCast>
    |   `-ImplicitCastExpr 0x122008d60 <col:31> 'const struct isakmp_gen *' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x122008d18 <col:31> 'const struct isakmp_gen *' lvalue ParmVar 0x12100e398 'ext' 'const struct isakmp_gen *'
    |-ImplicitCastExpr 0x122009048 <line:11:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | `-RecoveryExpr 0x122009018 <col:2, col:16> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x122008f20 <col:2> 'int ()' Function 0x122008e68 'ND_TCHECK' 'int ()'
    |   `-UnaryOperator 0x122008f78 <col:12, col:13> 'const struct isakmp_gen' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x122008f60 <col:13> 'const struct isakmp_gen *' <LValueToRValue>
    |       `-DeclRefExpr 0x122008f40 <col:13> 'const struct isakmp_gen *' lvalue ParmVar 0x12100e398 'ext' 'const struct isakmp_gen *'
    |-CallExpr 0x122009218 <line:12:2, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122009140 <col:2> 'int ()' Function 0x122009088 'UNALIGNED_MEMCPY' 'int ()'
    | |-UnaryOperator 0x122009180 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x122009160 <col:20> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x122009198 <col:24> 'const struct isakmp_gen *' lvalue ParmVar 0x12100e398 'ext' 'const struct isakmp_gen *'
    | `-UnaryExprOrTypeTraitExpr 0x1220091f8 <col:29, col:38> 'unsigned long' contains-errors sizeof
    |   `-ParenExpr 0x1220091d8 <col:35, col:38> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x1220091b8 <col:36> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1220095b0 <line:13:2, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122009330 <col:2> 'int ()' Function 0x122009278 'ikev2_pay_print' 'int ()'
    | |-RecoveryExpr 0x122009350 <col:18> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x1220094a8 <col:23, col:33> 'int'
    | | |-ImplicitCastExpr 0x122009490 <col:23> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x122009450 <col:23> 'int ()' Function 0x122009398 'NPSTR' 'int ()'
    | | `-ImplicitCastExpr 0x1220094e8 <col:29> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x1220094d0 <col:29> 'char' <LValueToRValue>
    | |     `-DeclRefExpr 0x122009470 <col:29> 'char' lvalue ParmVar 0x12100dda0 'tpay' 'char'
    | `-CXXDependentScopeMemberExpr 0x122009568 <col:36, col:41> '<dependent type>' contains-errors lvalue .critical
    |   `-CXXDependentScopeMemberExpr 0x122009520 <col:36, col:39> '<dependent type>' contains-errors lvalue .h
    |     `-RecoveryExpr 0x122009500 <col:36> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x120923010 <line:18:2, line:22:2>
    | |-BinaryOperator 0x120922c08 <line:18:6, col:46> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x120922ab0 <col:6, col:15> 'int' contains-errors '<'
    | | | |-IntegerLiteral 0x120922a28 <col:6> 'int' 2
    | | | `-CXXDependentScopeMemberExpr 0x120922a68 <col:10, col:15> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | | |   `-RecoveryExpr 0x120922a48 <col:10> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x120922be8 <col:28, col:46> 'int' contains-errors '<'
    | |   |-IntegerLiteral 0x120922ad0 <col:28> 'int' 8
    | |   `-CallExpr 0x120922bc0 <col:32, col:46> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x120922af0 <col:32> 'int ()' Function 0x120922600 'ntohs' 'int ()'
    | |     `-CXXDependentScopeMemberExpr 0x120922b78 <col:38, col:43> '<dependent type>' contains-errors lvalue .len
    | |       `-CXXDependentScopeMemberExpr 0x120922b30 <col:38, col:41> '<dependent type>' contains-errors lvalue .h
    | |         `-RecoveryExpr 0x120922b10 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x120922ff0 <col:49, line:22:2>
    |   |-CallExpr 0x120922cc8 <line:19:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x120922c28 <col:3> 'int ()' Function 0x122009610 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x120922ca8 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x120922c88 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x120922c48 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x120922c68 <col:17> 'char[4]' lvalue "STR"
    |   `-IfStmt 0x120922fd0 <line:20:3, line:21:9>
    |     |-RecoveryExpr 0x120922f48 <line:20:7, col:67> '_Bool' contains-errors
    |     `-GotoStmt 0x120922fb8 <line:21:4, col:9> 'trunc' 0x120922f68
    |-ReturnStmt 0x1209231c0 <line:23:2, col:45>
    | `-BinaryOperator 0x1209231a0 <col:9, col:45> '<dependent type>' contains-errors '+'
    |   |-CStyleCastExpr 0x120923080 <col:9, col:25> 'const char *' <BitCast>
    |   | `-ImplicitCastExpr 0x120923068 <col:25> 'const struct isakmp_gen *' <LValueToRValue> part_of_explicit_cast
    |   |   `-DeclRefExpr 0x120923030 <col:25> 'const struct isakmp_gen *' lvalue ParmVar 0x12100e398 'ext' 'const struct isakmp_gen *'
    |   `-CallExpr 0x120923178 <col:31, col:45> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1209230a8 <col:31> 'int ()' Function 0x120922600 'ntohs' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x120923130 <col:37, col:42> '<dependent type>' contains-errors lvalue .len
    |       `-CXXDependentScopeMemberExpr 0x1209230e8 <col:37, col:40> '<dependent type>' contains-errors lvalue .h
    |         `-RecoveryExpr 0x1209230c8 <col:37> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x120923368 <line:24:1, line:25:35> 'trunc'
    | `-CallExpr 0x120923340 <col:2, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1209231d0 <col:2> 'int ()' Function 0x122009610 'ND_PRINT' 'int ()'
    |   `-ParenExpr 0x120923320 <col:11, col:34> 'int' contains-errors
    |     `-BinaryOperator 0x120923300 <col:12, col:33> 'int' contains-errors ','
    |       |-BinaryOperator 0x120923230 <col:12, col:16> 'char[4]' contains-errors ','
    |       | |-RecoveryExpr 0x1209231f0 <col:12> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x120923210 <col:16> 'char[4]' lvalue "STR"
    |       `-CallExpr 0x1209232a8 <col:23, col:33> 'int'
    |         |-ImplicitCastExpr 0x120923290 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x120923250 <col:23> 'int ()' Function 0x122009398 'NPSTR' 'int ()'
    |         `-ImplicitCastExpr 0x1209232e8 <col:29> 'int' <IntegralCast>
    |           `-ImplicitCastExpr 0x1209232d0 <col:29> 'char' <LValueToRValue>
    |             `-DeclRefExpr 0x120923270 <col:29> 'char' lvalue ParmVar 0x12100dda0 'tpay' 'char'
    `-ReturnStmt 0x1209233c0 <line:26:2, col:9>
      `-RecoveryExpr 0x1209233a0 <col:9> '<dependent type>' contains-errors lvalue
