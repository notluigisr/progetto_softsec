TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12d926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d926000 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12d926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12d926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12d926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12d9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12d926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12d926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12d9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12d927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12d927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d927fb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12d928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d927fb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-FunctionDecl 0x12d9283a8 <dataset_diviso_filec/func9993_nonvuln.c:1:1, line:37:1> line:1:1 referenced invalid stringprep_profile 'int (const char *, char **, const char *, int)'
| |-ParmVarDecl 0x12d9280d8 <col:21, col:33> col:33 used in 'const char *'
| |-ParmVarDecl 0x12d928188 <line:2:7, col:14> col:14 used out 'char **'
| |-ParmVarDecl 0x12d928208 <line:3:7, col:19> col:19 used profile 'const char *'
| |-ParmVarDecl 0x12d9282a0 <col:28, col:53> col:53 invalid flags 'int'
| `-CompoundStmt 0x12d943bd8 <line:4:1, line:37:1>
|   |-DeclStmt 0x12d9284f0 <line:5:3, col:31>
|   | `-VarDecl 0x12d928488 <col:3, col:30> col:30 invalid p 'const int *'
|   |-DeclStmt 0x12d9285c0 <line:6:3, col:19>
|   | `-VarDecl 0x12d928520 <col:3, col:15> col:9 used str 'char *' cinit
|   |   `-RecoveryExpr 0x12d9285a0 <col:15> '<dependent type>' contains-errors lvalue
|   |-RecoveryExpr 0x12d941e50 <line:7:3, col:30> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x12d941d88 <col:3, col:10> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x12d941d68 <col:10> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x12d941e30 <col:16, col:30> 'unsigned long' '+'
|   |   |-CallExpr 0x12d941dd8 <col:16, col:26> 'unsigned long'
|   |   | |-ImplicitCastExpr 0x12d941dc0 <col:16> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12d941be0 <col:16> 'unsigned long (const char *)' Function 0x12d941a70 'strlen' 'unsigned long (const char *)'
|   |   | `-ImplicitCastExpr 0x12d941e00 <col:24> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12d941c00 <col:24> 'const char *' lvalue ParmVar 0x12d9280d8 'in' 'const char *'
|   |   `-ImplicitCastExpr 0x12d941e18 <col:30> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x12d941cc8 <col:30> 'int' 1
|   |-DeclStmt 0x12d941f00 <line:8:3, col:9>
|   | `-VarDecl 0x12d941e98 <col:3, col:7> col:7 used rc 'int'
|   |-ForStmt 0x12d9423c0 <line:10:3, line:12:7>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-CXXDependentScopeMemberExpr 0x12d941fb0 <line:10:37, col:40> '<dependent type>' contains-errors lvalue ->name
|   | | `-RecoveryExpr 0x12d941f90 <col:37> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x12d942018 <col:46, col:47> '<dependent type>' contains-errors postfix '++' cannot overflow
|   | | `-RecoveryExpr 0x12d941ff8 <col:46> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x12d9423a0 <line:11:5, line:12:7>
|   |   |-BinaryOperator 0x12d942378 <line:11:9, col:38> 'int' contains-errors '=='
|   |   | |-CallExpr 0x12d942328 <col:9, col:33> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x12d942250 <col:9> 'int (const char *, const char *)' Function 0x12d942070 'strcmp' 'int (const char *, const char *)'
|   |   | | |-CXXDependentScopeMemberExpr 0x12d942290 <col:17, col:20> '<dependent type>' contains-errors lvalue ->name
|   |   | | | `-RecoveryExpr 0x12d942270 <col:17> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x12d9422d8 <col:26> 'const char *' lvalue ParmVar 0x12d928208 'profile' 'const char *'
|   |   | `-IntegerLiteral 0x12d942358 <col:38> 'int' 0
|   |   `-BreakStmt 0x12d942398 <line:12:7>
|   |-IfStmt 0x12d942600 <line:14:3, line:15:12>
|   | |-BinaryOperator 0x12d942598 <line:14:7, col:29> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x12d9424e0 <col:7, col:17> 'int' contains-errors '||'
|   | | | |-UnaryOperator 0x12d942430 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x12d942418 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   `-RecoveryExpr 0x12d9423f8 <col:8> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x12d9424c8 <col:13, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x12d9424b0 <col:14, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   | | |     `-CXXDependentScopeMemberExpr 0x12d942468 <col:14, col:17> '<dependent type>' contains-errors lvalue ->name
|   | | |       `-RecoveryExpr 0x12d942448 <col:14> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x12d942580 <col:25, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x12d942568 <col:26, col:29> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-CXXDependentScopeMemberExpr 0x12d942520 <col:26, col:29> '<dependent type>' contains-errors lvalue ->tables
|   | |       `-RecoveryExpr 0x12d942500 <col:26> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x12d9425f0 <line:15:5, col:12>
|   |   `-RecoveryExpr 0x12d9425d0 <col:12> '<dependent type>' contains-errors lvalue
|   |-DoStmt 0x12d943990 <line:17:3, line:29:43>
|   | |-CompoundStmt 0x12d943920 <line:18:5, line:28:5>
|   | | |-CallExpr 0x12d942e88 <line:19:7, col:16> 'void' contains-errors
|   | | | |-ImplicitCastExpr 0x12d942e70 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12d9427c8 <col:7> 'void (void *)' Function 0x12d942658 'free' 'void (void *)'
|   | | | `-ImplicitCastExpr 0x12d942ec8 <col:13> 'void *' contains-errors <BitCast>
|   | | |   `-ImplicitCastExpr 0x12d942eb0 <col:13> 'char *' contains-errors <LValueToRValue>
|   | | |     `-DeclRefExpr 0x12d942e00 <col:13> 'char *' contains-errors lvalue Var 0x12d928520 'str' 'char *'
|   | | |-IfStmt 0x12d943248 <line:21:7, line:22:9>
|   | | | |-BinaryOperator 0x12d9431e0 <line:21:11, col:18> 'int' contains-errors '=='
|   | | | | |-DeclRefExpr 0x12d943168 <col:11> 'char *' contains-errors lvalue Var 0x12d928520 'str' 'char *'
|   | | | | `-RecoveryExpr 0x12d9431c0 <col:18> '<dependent type>' contains-errors lvalue
|   | | | `-ReturnStmt 0x12d943238 <line:22:2, col:9>
|   | | |   `-RecoveryExpr 0x12d943218 <col:9> '<dependent type>' contains-errors lvalue
|   | | |-CallExpr 0x12d943568 <line:24:7, col:22> 'char *' contains-errors
|   | | | |-ImplicitCastExpr 0x12d943550 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12d943490 <col:7> 'char *(char *, const char *)' Function 0x12d9432b0 'strcpy' 'char *(char *, const char *)'
|   | | | |-ImplicitCastExpr 0x12d943598 <col:15> 'char *' contains-errors <LValueToRValue>
|   | | | | `-DeclRefExpr 0x12d9434b0 <col:15> 'char *' contains-errors lvalue Var 0x12d928520 'str' 'char *'
|   | | | `-ImplicitCastExpr 0x12d9435b0 <col:20> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12d9434d0 <col:20> 'const char *' lvalue ParmVar 0x12d9280d8 'in' 'const char *'
|   | | `-BinaryOperator 0x12d9438e0 <line:26:7, col:50> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x12d9435c8 <col:7> 'int' lvalue Var 0x12d941e98 'rc' 'int'
|   | |   `-CallExpr 0x12d9438a0 <col:12, col:50> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x12d943740 <col:12> 'int ()' Function 0x12d943688 'stringprep' 'int ()'
|   | |     |-DeclRefExpr 0x12d943760 <col:24> 'char *' contains-errors lvalue Var 0x12d928520 'str' 'char *'
|   | |     |-RecoveryExpr 0x12d943880 <col:29> '<dependent type>' contains-errors lvalue
|   | |     |-RecoveryExpr 0x12d943798 <col:34> '<dependent type>' contains-errors lvalue
|   | |     `-CXXDependentScopeMemberExpr 0x12d9437d8 <col:41, col:44> '<dependent type>' contains-errors lvalue ->tables
|   | |       `-RecoveryExpr 0x12d9437b8 <col:41> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12d943970 <line:29:10, col:16> '_Bool' contains-errors
|   |-IfStmt 0x12d943b60 <line:31:3, line:34:14> has_else
|   | |-RecoveryExpr 0x12d9439d0 <line:31:7, col:13> '_Bool' contains-errors
|   | |-BinaryOperator 0x12d943a78 <line:32:5, col:12> 'char *' contains-errors '='
|   | | |-UnaryOperator 0x12d943a28 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x12d943a10 <col:6> 'char **' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12d9439f0 <col:6> 'char **' lvalue ParmVar 0x12d928188 'out' 'char **'
|   | | `-ImplicitCastExpr 0x12d943a60 <col:12> 'char *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x12d943a40 <col:12> 'char *' contains-errors lvalue Var 0x12d928520 'str' 'char *'
|   | `-CallExpr 0x12d943b08 <line:34:5, col:14> 'void' contains-errors
|   |   |-ImplicitCastExpr 0x12d943af0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12d943a98 <col:5> 'void (void *)' Function 0x12d942658 'free' 'void (void *)'
|   |   `-ImplicitCastExpr 0x12d943b48 <col:11> 'void *' contains-errors <BitCast>
|   |     `-ImplicitCastExpr 0x12d943b30 <col:11> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x12d943ab8 <col:11> 'char *' contains-errors lvalue Var 0x12d928520 'str' 'char *'
|   `-ReturnStmt 0x12d943bc8 <line:36:3, col:10>
|     `-ImplicitCastExpr 0x12d943bb0 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12d943b90 <col:10> 'int' lvalue Var 0x12d941e98 'rc' 'int'
|-FunctionDecl 0x12d941a70 <line:7:16> col:16 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x12d941b70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12d941b18 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x12d942070 <line:11:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x12d942170 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12d9421d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12d942118 <<invalid sloc>> Implicit 887
|-FunctionDecl 0x12d942658 <line:19:7> col:7 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x12d942758 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x12d942700 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x12d942f38 <line:20:22> col:22 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x12d943038 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x12d942fe0 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x12d9430a8 <col:22> Implicit 1
`-FunctionDecl 0x12d9432b0 <line:24:7> col:7 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x12d9433b0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x12d943418 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12d943358 <<invalid sloc>> Implicit 885
