TranslationUnitDecl 0x103036408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1030372b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1030369d0 '__int128'
|-TypedefDecl 0x103037328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1030369f0 'unsigned __int128'
|-TypedefDecl 0x12001d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12001d600 'struct __NSConstantString_tag'
|   `-Record 0x103037380 '__NSConstantString_tag'
|-TypedefDecl 0x12001d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x103036b90 '__SVInt8_t'
|-TypedefDecl 0x12001d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x103036bb0 '__SVInt16_t'
|-TypedefDecl 0x12001d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x103036bd0 '__SVInt32_t'
|-TypedefDecl 0x12001d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x103036bf0 '__SVInt64_t'
|-TypedefDecl 0x12001da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x103036c10 '__SVUint8_t'
|-TypedefDecl 0x12001daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x103036c30 '__SVUint16_t'
|-TypedefDecl 0x12001db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x103036c50 '__SVUint32_t'
|-TypedefDecl 0x12001db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x103036c70 '__SVUint64_t'
|-TypedefDecl 0x12001dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x103036c90 '__SVFloat16_t'
|-TypedefDecl 0x12001dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x103036cb0 '__SVFloat32_t'
|-TypedefDecl 0x12001dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x103036cd0 '__SVFloat64_t'
|-TypedefDecl 0x12001dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x103036cf0 '__SVBfloat16_t'
|-TypedefDecl 0x12001dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x103036d10 '__clang_svint8x2_t'
|-TypedefDecl 0x12001dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x103036d30 '__clang_svint16x2_t'
|-TypedefDecl 0x12001de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x103036d50 '__clang_svint32x2_t'
|-TypedefDecl 0x12001deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x103036d70 '__clang_svint64x2_t'
|-TypedefDecl 0x12001df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x103036d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12001df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x103036db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12001dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x103036dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12001e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x103036df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12001e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x103036e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12001e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x103036e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12001e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x103036e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12001e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x103036e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12001e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x103036e90 '__clang_svint8x3_t'
|-TypedefDecl 0x12001e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x103036eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12001e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x103036ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x12001e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x103036ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x12001e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x103036f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12001e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x103036f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12001e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x103036f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12001e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x103036f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12001e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x103036f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12001ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x103036fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12001ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x103036fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12001ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x103036ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12001eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x103037010 '__clang_svint8x4_t'
|-TypedefDecl 0x12001eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x103037030 '__clang_svint16x4_t'
|-TypedefDecl 0x12001ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x103037050 '__clang_svint32x4_t'
|-TypedefDecl 0x12001ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x103037070 '__clang_svint64x4_t'
|-TypedefDecl 0x12001ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x103037090 '__clang_svuint8x4_t'
|-TypedefDecl 0x12001ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1030370b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12001eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1030370d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12001ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1030370f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12001ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x103037110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12001eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x103037130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12001ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x103037150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12001efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x103037170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12001f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x103037190 '__SVBool_t'
|-TypedefDecl 0x12001f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1030371b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12001f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1030371d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12001f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1030371f0 '__SVCount_t'
|-TypedefDecl 0x12001f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12001f1b0 'char *'
|   `-BuiltinType 0x1030364b0 'char'
|-TypedefDecl 0x12001f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12001f1b0 'char *'
|   `-BuiltinType 0x1030364b0 'char'
|-RecordDecl 0x12001f2c0 <dataset_diviso_filec/func21537_nonvuln.c:1:1, col:8> col:8 struct razer_report
`-FunctionDecl 0x12001f600 <col:1, line:9:1> line:1:21 invalid razer_chroma_standard_set_led_state 'struct razer_report (unsigned char, unsigned char, unsigned char)'
  |-ParmVarDecl 0x12001f378 <col:57, col:71> col:71 used variable_storage 'unsigned char'
  |-ParmVarDecl 0x12001f3f8 <col:89, col:103> col:103 used led_id 'unsigned char'
  |-ParmVarDecl 0x12001f478 <col:111, col:125> col:125 used led_state 'unsigned char'
  `-CompoundStmt 0x1200467a0 <line:2:1, line:9:1>
    |-DeclStmt 0x120046220 <line:3:5, col:68>
    | `-VarDecl 0x120045f90 <col:5, col:25> col:25 referenced invalid report 'struct razer_report'
    |-BinaryOperator 0x120046340 <line:4:5, col:27> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x120046300 <col:5, col:23> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x1200462e8 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x120046280 <col:5, col:12> '<dependent type>' contains-errors lvalue .arguments
    | | |   `-RecoveryExpr 0x120046258 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x120046238 <col:5> 'struct razer_report' lvalue Var 0x120045f90 'report' 'struct razer_report'
    | | `-IntegerLiteral 0x1200462c8 <col:22> 'int' 0
    | `-DeclRefExpr 0x120046320 <col:27> 'unsigned char' lvalue ParmVar 0x12001f378 'variable_storage' 'unsigned char'
    |-BinaryOperator 0x120046468 <line:5:5, col:27> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x120046428 <col:5, col:23> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x120046410 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x1200463a8 <col:5, col:12> '<dependent type>' contains-errors lvalue .arguments
    | | |   `-RecoveryExpr 0x120046380 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x120046360 <col:5> 'struct razer_report' lvalue Var 0x120045f90 'report' 'struct razer_report'
    | | `-IntegerLiteral 0x1200463f0 <col:22> 'int' 1
    | `-DeclRefExpr 0x120046448 <col:27> 'unsigned char' lvalue ParmVar 0x12001f3f8 'led_id' 'unsigned char'
    |-BinaryOperator 0x120046750 <line:6:5, col:57> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x120046550 <col:5, col:23> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x120046538 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x1200464d0 <col:5, col:12> '<dependent type>' contains-errors lvalue .arguments
    | | |   `-RecoveryExpr 0x1200464a8 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x120046488 <col:5> 'struct razer_report' lvalue Var 0x120045f90 'report' 'struct razer_report'
    | | `-IntegerLiteral 0x120046518 <col:22> 'int' 2
    | `-CallExpr 0x1200466e8 <col:27, col:57> 'int'
    |   |-ImplicitCastExpr 0x1200466d0 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x120046650 <col:27> 'int ()' Function 0x120046598 'clamp_u8' 'int ()'
    |   |-ImplicitCastExpr 0x120046738 <col:36> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x120046720 <col:36> 'unsigned char' <LValueToRValue>
    |   |   `-DeclRefExpr 0x120046670 <col:36> 'unsigned char' lvalue ParmVar 0x12001f478 'led_state' 'unsigned char'
    |   |-IntegerLiteral 0x120046690 <col:47> 'int' 0
    |   `-IntegerLiteral 0x1200466b0 <col:53> 'int' 1
    `-ReturnStmt 0x120046790 <line:8:5, col:12>
      `-RecoveryExpr 0x120046770 <col:12> '<dependent type>' contains-errors lvalue
