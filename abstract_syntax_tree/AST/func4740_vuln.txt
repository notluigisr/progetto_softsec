TranslationUnitDecl 0x14d055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d0555d0 '__int128'
|-TypedefDecl 0x14d055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d0555f0 'unsigned __int128'
|-TypedefDecl 0x14e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14d055f80 '__NSConstantString_tag'
|-TypedefDecl 0x14e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d055790 '__SVInt8_t'
|-TypedefDecl 0x14e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d0557b0 '__SVInt16_t'
|-TypedefDecl 0x14e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d0557d0 '__SVInt32_t'
|-TypedefDecl 0x14e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d0557f0 '__SVInt64_t'
|-TypedefDecl 0x14e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d055810 '__SVUint8_t'
|-TypedefDecl 0x14e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d055830 '__SVUint16_t'
|-TypedefDecl 0x14e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d055850 '__SVUint32_t'
|-TypedefDecl 0x14e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d055870 '__SVUint64_t'
|-TypedefDecl 0x14e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d055890 '__SVFloat16_t'
|-TypedefDecl 0x14e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d0558b0 '__SVFloat32_t'
|-TypedefDecl 0x14e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d0558d0 '__SVFloat64_t'
|-TypedefDecl 0x14e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d0558f0 '__SVBfloat16_t'
|-TypedefDecl 0x14e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d055910 '__clang_svint8x2_t'
|-TypedefDecl 0x14e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d055930 '__clang_svint16x2_t'
|-TypedefDecl 0x14e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d055950 '__clang_svint32x2_t'
|-TypedefDecl 0x14e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d055970 '__clang_svint64x2_t'
|-TypedefDecl 0x14e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d0559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d0559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d0559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d055d90 '__SVBool_t'
|-TypedefDecl 0x14e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d055df0 '__SVCount_t'
|-TypedefDecl 0x14e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e00dbb0 'char *'
|   `-BuiltinType 0x14d0550b0 'char'
|-TypedefDecl 0x14e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e00dbb0 'char *'
|   `-BuiltinType 0x14d0550b0 'char'
`-FunctionDecl 0x14e00df18 <dataset_diviso_filec/func4740_vuln.c:1:1, line:27:1> line:1:1 invalid dane_verification_status_print 'int (unsigned int, int *, unsigned int)'
  |-ParmVarDecl 0x14e00dcd8 <col:33, col:46> col:46 used status 'unsigned int'
  |-ParmVarDecl 0x14e00dda8 <line:2:24, col:41> col:41 referenced invalid out 'int *'
  |-ParmVarDecl 0x14e00de28 <col:46, col:59> col:59 flags 'unsigned int'
  `-CompoundStmt 0x14e0299b8 <line:3:1, line:27:1>
    |-DeclStmt 0x14e00e058 <line:5:3, col:10>
    | `-VarDecl 0x14e00dff0 <col:3, col:7> col:7 used ret 'int'
    |-CallExpr 0x14e00e280 <line:7:3, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e00e1d0 <col:3> 'int ()' Function 0x14e00e118 '_gnutls_buffer_init' 'int ()'
    | `-UnaryOperator 0x14e00e268 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14e00e248 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14e0283c0 <line:9:3, line:12:46> has_else
    | |-BinaryOperator 0x14e00e318 <line:9:7, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x14e00e2e8 <col:7> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e00e2a8 <col:7> 'unsigned int' lvalue ParmVar 0x14e00dcd8 'status' 'unsigned int'
    | | `-ImplicitCastExpr 0x14e00e300 <col:17> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14e00e2c8 <col:17> 'int' 0
    | |-CallExpr 0x14e0281b8 <line:10:5, col:46> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14e027eb8 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    | | |-UnaryOperator 0x14e028148 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | `-RecoveryExpr 0x14e028128 <col:33> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x14e028178 <col:38, col:45> 'int'
    | |   |-ImplicitCastExpr 0x14e028160 <col:38> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x14e027fe8 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    | |   `-ImplicitCastExpr 0x14e0281a0 <col:40> 'char *' <ArrayToPointerDecay>
    | |     `-StringLiteral 0x14e028050 <col:40> 'char[4]' lvalue "STR"
    | `-CallExpr 0x14e028390 <line:12:5, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e0281e8 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    |   |-UnaryOperator 0x14e028320 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e028300 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e028350 <col:38, col:45> 'int'
    |     |-ImplicitCastExpr 0x14e028338 <col:38> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e028238 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    |     `-ImplicitCastExpr 0x14e028378 <col:40> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14e028258 <col:40> 'char[4]' lvalue "STR"
    |-IfStmt 0x14e028660 <line:14:3, line:15:46>
    | |-BinaryOperator 0x14e028468 <line:14:7, col:16> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x14e0283f0 <col:7> 'unsigned int' lvalue ParmVar 0x14e00dcd8 'status' 'unsigned int'
    | | `-RecoveryExpr 0x14e028448 <col:16> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14e028630 <line:15:5, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e028488 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    |   |-UnaryOperator 0x14e0285c0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e0285a0 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e0285f0 <col:38, col:45> 'int'
    |     |-ImplicitCastExpr 0x14e0285d8 <col:38> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e0284d8 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    |     `-ImplicitCastExpr 0x14e028618 <col:40> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14e0284f8 <col:40> 'char[4]' lvalue "STR"
    |-IfStmt 0x14e0288f0 <line:17:3, line:18:46>
    | |-BinaryOperator 0x14e0286f8 <line:17:7, col:16> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x14e028680 <col:7> 'unsigned int' lvalue ParmVar 0x14e00dcd8 'status' 'unsigned int'
    | | `-RecoveryExpr 0x14e0286d8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14e0288c0 <line:18:5, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e028718 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    |   |-UnaryOperator 0x14e028850 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e028830 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e028880 <col:38, col:45> 'int'
    |     |-ImplicitCastExpr 0x14e028868 <col:38> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e028768 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    |     `-ImplicitCastExpr 0x14e0288a8 <col:40> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14e028788 <col:40> 'char[4]' lvalue "STR"
    |-IfStmt 0x14e028b80 <line:20:3, line:21:46>
    | |-BinaryOperator 0x14e028988 <line:20:7, col:16> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x14e028910 <col:7> 'unsigned int' lvalue ParmVar 0x14e00dcd8 'status' 'unsigned int'
    | | `-RecoveryExpr 0x14e028968 <col:16> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14e028b50 <line:21:5, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e0289a8 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    |   |-UnaryOperator 0x14e028ae0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e028ac0 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e028b10 <col:38, col:45> 'int'
    |     |-ImplicitCastExpr 0x14e028af8 <col:38> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e0289f8 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    |     `-ImplicitCastExpr 0x14e028b38 <col:40> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14e028a18 <col:40> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x14e028dc8 <line:23:3, col:43> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e028ba0 <col:3> 'int' lvalue Var 0x14e00dff0 'ret' 'int'
    | `-CallExpr 0x14e028d98 <col:9, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e028ca0 <col:9> 'int ()' Function 0x14e028be8 '_gnutls_buffer_to_datum' 'int ()'
    |   |-UnaryOperator 0x14e028d80 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e028d60 <col:35> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14e028cf0 <col:40> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14e029950 <line:24:3, col:31>
    | |-BinaryOperator 0x14e029888 <col:7, col:19> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x14e029820 <col:7, col:12> '<dependent type>' contains-errors lvalue ->size
    | | | `-RecoveryExpr 0x14e029800 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14e029868 <col:19> 'int' 0
    | `-UnaryOperator 0x14e029938 <col:22, col:31> '<dependent type>' contains-errors postfix '--' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14e0298f0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->size
    |     `-RecoveryExpr 0x14e0298c8 <col:22> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14e0298a8 <col:22> 'int *' lvalue ParmVar 0x14e00dda8 'out' 'int *'
    `-ReturnStmt 0x14e0299a8 <line:26:3, col:10>
      `-ImplicitCastExpr 0x14e029990 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14e029970 <col:10> 'int' lvalue Var 0x14e00dff0 'ret' 'int'
