TranslationUnitDecl 0x13b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b855bd0 '__int128'
|-TypedefDecl 0x13b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b855bf0 'unsigned __int128'
|-TypedefDecl 0x13b926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b926800 'struct __NSConstantString_tag'
|   `-Record 0x13b856580 '__NSConstantString_tag'
|-TypedefDecl 0x13b926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b855d90 '__SVInt8_t'
|-TypedefDecl 0x13b926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b855db0 '__SVInt16_t'
|-TypedefDecl 0x13b926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b855dd0 '__SVInt32_t'
|-TypedefDecl 0x13b926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b855df0 '__SVInt64_t'
|-TypedefDecl 0x13b926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b855e10 '__SVUint8_t'
|-TypedefDecl 0x13b926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b855e30 '__SVUint16_t'
|-TypedefDecl 0x13b926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b855e50 '__SVUint32_t'
|-TypedefDecl 0x13b926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b855e70 '__SVUint64_t'
|-TypedefDecl 0x13b926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b855e90 '__SVFloat16_t'
|-TypedefDecl 0x13b926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b856390 '__SVBool_t'
|-TypedefDecl 0x13b928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b8563f0 '__SVCount_t'
|-TypedefDecl 0x13b9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b9287b0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
|-TypedefDecl 0x13b928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b9287b0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
|-FunctionDecl 0x13b941238 <dataset_diviso_filec/func12499_nonvuln.c:1:1, line:60:1> line:1:12 smtp_endofresp 'int (struct pingpong *, int *)' static
| |-ParmVarDecl 0x13b928e48 <col:27, col:44> col:44 used pp 'struct pingpong *'
| |-ParmVarDecl 0x13b928ef8 <col:48, col:53> col:53 used resp 'int *'
| `-CompoundStmt 0x13b946b20 <line:2:1, line:60:1>
|   |-DeclStmt 0x13b941418 <line:3:3, col:34>
|   | `-VarDecl 0x13b941350 <col:3, col:20> col:9 used line 'char *' cinit
|   |   `-RecoveryExpr 0x13b9413f0 <col:16, col:20> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x13b9413b8 <col:16> 'struct pingpong *' lvalue ParmVar 0x13b928e48 'pp' 'struct pingpong *'
|   |-BinaryOperator 0x13b941540 <line:4:3, col:20> 'unsigned long' contains-errors '='
|   | |-UnaryExprOrTypeTraitExpr 0x13b941520 <col:3, col:10> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x13b941500 <col:10> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x13b9414b8 <col:16, col:20> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x13b941480 <col:16> 'struct pingpong *' lvalue ParmVar 0x13b928e48 'pp' 'struct pingpong *'
|   |-DeclStmt 0x13b9417a8 <line:5:3, col:38>
|   | |-RecordDecl 0x13b941560 <col:3, col:10> col:10 struct connectdata
|   | `-VarDecl 0x13b9416c8 <col:3, col:34> col:23 used conn 'struct connectdata *' cinit
|   |   `-RecoveryExpr 0x13b941768 <col:30, col:34> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x13b941730 <col:30> 'struct pingpong *' lvalue ParmVar 0x13b928e48 'pp' 'struct pingpong *'
|   |-DeclStmt 0x13b941a68 <line:6:3, col:47>
|   | |-RecordDecl 0x13b9417c0 <col:3, col:10> col:10 struct smtp_conn
|   | `-VarDecl 0x13b941928 <col:3, col:42> col:21 used smtpc 'struct smtp_conn *' cinit
|   |   `-UnaryOperator 0x13b941a38 <col:29, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x13b9419f0 <col:30, col:42> '<dependent type>' contains-errors lvalue .smtpc
|   |       `-RecoveryExpr 0x13b9419c8 <col:30, col:36> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x13b941990 <col:30> 'struct connectdata *' contains-errors lvalue Var 0x13b9416c8 'conn' 'struct connectdata *'
|   |-DeclStmt 0x13b941b00 <line:7:3, col:13>
|   | `-VarDecl 0x13b941a98 <col:3, col:7> col:7 used result 'int'
|   |-UnaryExprOrTypeTraitExpr 0x13b941b70 <line:8:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x13b941b50 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13b943828 <line:10:3, line:11:12>
|   | |-BinaryOperator 0x13b9437c0 <line:10:6, col:75> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x13b9436e0 <col:6, col:54> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x13b943600 <col:6, col:33> 'int' contains-errors '||'
|   | | | | |-BinaryOperator 0x13b942118 <col:6, col:12> 'int' contains-errors '<'
|   | | | | | |-RecoveryExpr 0x13b9420f8 <col:6> '<dependent type>' contains-errors lvalue
|   | | | | | `-IntegerLiteral 0x13b941ba8 <col:12> 'int' 4
|   | | | | `-UnaryOperator 0x13b9421e0 <col:17, col:33> 'int' contains-errors prefix '!' cannot overflow
|   | | | |   `-CallExpr 0x13b942188 <col:18, col:33> 'int' contains-errors
|   | | | |     |-ImplicitCastExpr 0x13b942170 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | | | |     | `-DeclRefExpr 0x13b941d00 <col:18> 'int ()' Function 0x13b941c48 'ISDIGIT' 'int ()'
|   | | | |     `-ImplicitCastExpr 0x13b9421c8 <col:26, col:32> 'int' contains-errors <IntegralCast>
|   | | | |       `-ImplicitCastExpr 0x13b9421b0 <col:26, col:32> 'char' contains-errors <LValueToRValue>
|   | | | |         `-ArraySubscriptExpr 0x13b942150 <col:26, col:32> 'char' contains-errors lvalue
|   | | | |           |-ImplicitCastExpr 0x13b942138 <col:26> 'char *' contains-errors <LValueToRValue>
|   | | | |           | `-DeclRefExpr 0x13b941d20 <col:26> 'char *' contains-errors lvalue Var 0x13b941350 'line' 'char *'
|   | | | |           `-IntegerLiteral 0x13b941d40 <col:31> 'int' 0
|   | | | `-UnaryOperator 0x13b9436c8 <col:38, col:54> 'int' contains-errors prefix '!' cannot overflow
|   | | |   `-CallExpr 0x13b943670 <col:39, col:54> 'int' contains-errors
|   | | |     |-ImplicitCastExpr 0x13b943658 <col:39> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x13b941e78 <col:39> 'int ()' Function 0x13b941c48 'ISDIGIT' 'int ()'
|   | | |     `-ImplicitCastExpr 0x13b9436b0 <col:47, col:53> 'int' contains-errors <IntegralCast>
|   | | |       `-ImplicitCastExpr 0x13b943698 <col:47, col:53> 'char' contains-errors <LValueToRValue>
|   | | |         `-ArraySubscriptExpr 0x13b943638 <col:47, col:53> 'char' contains-errors lvalue
|   | | |           |-ImplicitCastExpr 0x13b943620 <col:47> 'char *' contains-errors <LValueToRValue>
|   | | |           | `-DeclRefExpr 0x13b941e98 <col:47> 'char *' contains-errors lvalue Var 0x13b941350 'line' 'char *'
|   | | |           `-IntegerLiteral 0x13b941eb8 <col:52> 'int' 1
|   | | `-UnaryOperator 0x13b9437a8 <col:59, col:75> 'int' contains-errors prefix '!' cannot overflow
|   | |   `-CallExpr 0x13b943750 <col:60, col:75> 'int' contains-errors
|   | |     |-ImplicitCastExpr 0x13b943738 <col:60> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x13b941fb8 <col:60> 'int ()' Function 0x13b941c48 'ISDIGIT' 'int ()'
|   | |     `-ImplicitCastExpr 0x13b943790 <col:68, col:74> 'int' contains-errors <IntegralCast>
|   | |       `-ImplicitCastExpr 0x13b943778 <col:68, col:74> 'char' contains-errors <LValueToRValue>
|   | |         `-ArraySubscriptExpr 0x13b943718 <col:68, col:74> 'char' contains-errors lvalue
|   | |           |-ImplicitCastExpr 0x13b943700 <col:68> 'char *' contains-errors <LValueToRValue>
|   | |           | `-DeclRefExpr 0x13b941fd8 <col:68> 'char *' contains-errors lvalue Var 0x13b941350 'line' 'char *'
|   | |           `-IntegerLiteral 0x13b941ff8 <col:73> 'int' 2
|   | `-ReturnStmt 0x13b943818 <line:11:5, col:12>
|   |   `-RecoveryExpr 0x13b9437f8 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13b944060 <line:13:3, line:14:48>
|   | |-BinaryOperator 0x13b9439c8 <line:13:6, col:37> 'int' contains-errors '!='
|   | | |-ParenExpr 0x13b943988 <col:6, col:32> 'int' contains-errors
|   | | | `-BinaryOperator 0x13b943968 <col:7, col:31> 'int' contains-errors '='
|   | | |   |-DeclRefExpr 0x13b943848 <col:7> 'int' lvalue Var 0x13b941a98 'result' 'int'
|   | | |   `-ParenExpr 0x13b943948 <col:16, col:31> 'int' contains-errors
|   | | |     `-BinaryOperator 0x13b943928 <col:17, col:28> 'int' contains-errors '=='
|   | | |       |-ImplicitCastExpr 0x13b943910 <col:17, col:23> 'int' contains-errors <IntegralCast>
|   | | |       | `-ImplicitCastExpr 0x13b9438f8 <col:17, col:23> 'char' contains-errors <LValueToRValue>
|   | | |       |   `-ArraySubscriptExpr 0x13b9438c0 <col:17, col:23> 'char' contains-errors lvalue
|   | | |       |     |-ImplicitCastExpr 0x13b9438a8 <col:17> 'char *' contains-errors <LValueToRValue>
|   | | |       |     | `-DeclRefExpr 0x13b943868 <col:17> 'char *' contains-errors lvalue Var 0x13b941350 'line' 'char *'
|   | | |       |     `-IntegerLiteral 0x13b943888 <col:22> 'int' 3
|   | | |       `-CharacterLiteral 0x13b9438e0 <col:28> 'int' 32
|   | | `-IntegerLiteral 0x13b9439a8 <col:37> 'int' 0
|   | `-BinaryOperator 0x13b944040 <line:14:5, col:48> 'int' contains-errors '='
|   |   |-UnaryOperator 0x13b943f78 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x13b943f60 <col:6> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13b9439e8 <col:6> 'int *' lvalue ParmVar 0x13b928ef8 'resp' 'int *'
|   |   `-CallExpr 0x13b944018 <col:13, col:48> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13b943b18 <col:13> 'int ()' Function 0x13b943a60 'curlx_sltosi' 'int ()'
|   |     `-CallExpr 0x13b943fe0 <col:26, col:47> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x13b943e08 <col:26> 'long (const char *, char **, int)' Function 0x13b943bb8 'strtol' 'long (const char *, char **, int)'
|   |       |-DeclRefExpr 0x13b943e28 <col:33> 'char *' contains-errors lvalue Var 0x13b941350 'line' 'char *'
|   |       |-RecoveryExpr 0x13b943f90 <col:39> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x13b943e60 <col:45> 'int' 10
|   |-CompoundAssignOperator 0x13b9440c0 <line:16:3, col:11> 'char *' contains-errors '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x13b944080 <col:3> 'char *' contains-errors lvalue Var 0x13b941350 'line' 'char *'
|   | `-IntegerLiteral 0x13b9440a0 <col:11> 'int' 4
|   |-IfStmt 0x13b946ab8 <line:19:3, line:57:3>
|   | |-BinaryOperator 0x13b944ee0 <line:19:6, col:69> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x13b944db0 <col:6, col:42> 'int' contains-errors '&&'
|   | | | |-BinaryOperator 0x13b944d50 <col:6, col:22> 'int' contains-errors '=='
|   | | | | |-RecoveryExpr 0x13b944148 <col:6, col:13> '<dependent type>' contains-errors lvalue
|   | | | | | `-DeclRefExpr 0x13b944110 <col:6> 'struct smtp_conn *' contains-errors lvalue Var 0x13b941928 'smtpc' 'struct smtp_conn *'
|   | | | | `-RecoveryExpr 0x13b944d30 <col:22> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x13b944d90 <col:35, col:42> 'int' contains-errors '>='
|   | | |   |-RecoveryExpr 0x13b944d70 <col:35> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x13b9441c0 <col:42> 'int' 5
|   | | `-UnaryOperator 0x13b944ec8 <col:47, col:69> 'int' contains-errors prefix '!' cannot overflow
|   | |   `-CallExpr 0x13b944e18 <col:48, col:69> 'int' contains-errors
|   | |     |-ImplicitCastExpr 0x13b944e00 <col:48> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x13b9444e8 <col:48> 'int (const void *, const void *, unsigned long)' Function 0x13b944298 'memcmp' 'int (const void *, const void *, unsigned long)'
|   | |     |-ImplicitCastExpr 0x13b944e68 <col:55> 'const void *' contains-errors <BitCast>
|   | |     | `-ImplicitCastExpr 0x13b944e50 <col:55> 'char *' contains-errors <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x13b944508 <col:55> 'char *' contains-errors lvalue Var 0x13b941350 'line' 'char *'
|   | |     |-ImplicitCastExpr 0x13b944e98 <col:61> 'const void *' <BitCast>
|   | |     | `-ImplicitCastExpr 0x13b944e80 <col:61> 'char *' <ArrayToPointerDecay>
|   | |     |   `-StringLiteral 0x13b944570 <col:61> 'char[4]' lvalue "STR"
|   | |     `-ImplicitCastExpr 0x13b944eb0 <col:68> 'unsigned long' <IntegralCast>
|   | |       `-IntegerLiteral 0x13b944590 <col:68> 'int' 5
|   | `-CompoundStmt 0x13b946a98 <col:72, line:57:3>
|   |   |-CompoundAssignOperator 0x13b944f40 <line:20:5, col:13> 'char *' contains-errors '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x13b944f00 <col:5> 'char *' contains-errors lvalue Var 0x13b941350 'line' 'char *'
|   |   | `-IntegerLiteral 0x13b944f20 <col:13> 'int' 5
|   |   `-ForStmt 0x13b946a60 <line:23:5, line:56:5>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x13b946a40 <line:23:13, line:56:5>
|   |       |-WhileStmt 0x13b945360 <line:24:7, line:29:7>
|   |       | |-RecoveryExpr 0x13b9452f0 <line:24:13, line:26:44> '_Bool' contains-errors
|   |       | `-CompoundStmt 0x13b945348 <col:47, line:29:7>
|   |       |   `-UnaryOperator 0x13b945330 <line:27:9, col:13> 'char *' contains-errors postfix '++'
|   |       |     `-DeclRefExpr 0x13b945310 <col:9> 'char *' contains-errors lvalue Var 0x13b941350 'line' 'char *'
|   |       `-IfStmt 0x13b9453a8 <line:31:7, line:32:9>
|   |         |-RecoveryExpr 0x13b945380 <line:31:10, col:11> '_Bool' contains-errors
|   |         `-BreakStmt 0x13b9453a0 <line:32:9>
|   `-ReturnStmt 0x13b946b10 <line:59:3, col:10>
|     `-ImplicitCastExpr 0x13b946af8 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13b946ad8 <col:10> 'int' lvalue Var 0x13b941a98 'result' 'int'
|-FunctionDecl 0x13b943bb8 <line:14:26> col:26 implicit used strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x13b943cb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13b943d20 <<invalid sloc>> <invalid sloc> 'char **'
| |-ParmVarDecl 0x13b943d88 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13b943c60 <<invalid sloc>> Implicit 877
`-FunctionDecl 0x13b944298 <line:19:48> col:48 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13b944398 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13b944400 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13b944468 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13b944340 <<invalid sloc>> Implicit 883
