TranslationUnitDecl 0x125828008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x125828eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1258285d0 '__int128'
|-TypedefDecl 0x125828f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1258285f0 'unsigned __int128'
|-TypedefDecl 0x12680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12680bc00 'struct __NSConstantString_tag'
|   `-Record 0x125828f80 '__NSConstantString_tag'
|-TypedefDecl 0x12680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125828790 '__SVInt8_t'
|-TypedefDecl 0x12680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1258287b0 '__SVInt16_t'
|-TypedefDecl 0x12680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1258287d0 '__SVInt32_t'
|-TypedefDecl 0x12680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1258287f0 '__SVInt64_t'
|-TypedefDecl 0x12680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125828810 '__SVUint8_t'
|-TypedefDecl 0x12680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125828830 '__SVUint16_t'
|-TypedefDecl 0x12680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125828850 '__SVUint32_t'
|-TypedefDecl 0x12680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125828870 '__SVUint64_t'
|-TypedefDecl 0x12680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125828890 '__SVFloat16_t'
|-TypedefDecl 0x12680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1258288b0 '__SVFloat32_t'
|-TypedefDecl 0x12680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1258288d0 '__SVFloat64_t'
|-TypedefDecl 0x12680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1258288f0 '__SVBfloat16_t'
|-TypedefDecl 0x12680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125828910 '__clang_svint8x2_t'
|-TypedefDecl 0x12680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125828930 '__clang_svint16x2_t'
|-TypedefDecl 0x12680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125828950 '__clang_svint32x2_t'
|-TypedefDecl 0x12680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125828970 '__clang_svint64x2_t'
|-TypedefDecl 0x12680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125828990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1258289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1258289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1258289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125828a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125828a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125828a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125828a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125828a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x125828ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x125828ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x125828af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125828b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125828b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125828b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125828b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125828b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x125828bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x125828bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x125828bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125828c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125828c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125828c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125828c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125828c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x125828cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x125828cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x125828cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125828d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125828d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125828d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125828d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125828d90 '__SVBool_t'
|-TypedefDecl 0x12680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x125828db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x125828dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x125828df0 '__SVCount_t'
|-TypedefDecl 0x12680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1258280b0 'char'
|-TypedefDecl 0x12680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1258280b0 'char'
|-FunctionDecl 0x12680e350 <dataset_diviso_filec/func718_nonvuln.c:1:1, line:86:1> line:1:13 upnp_event_prepare 'void (struct upnp_event_notify *)' static
| |-ParmVarDecl 0x12680e248 <col:32, col:59> col:59 used obj 'struct upnp_event_notify *'
| `-CompoundStmt 0x1258f6cd0 <line:2:1, line:86:1>
|   |-DeclStmt 0x126826830 <line:3:2, line:19:8>
|   | `-VarDecl 0x1268266d0 <line:3:2, line:19:3> line:3:20 used notifymsg 'const char[37]' static cinit
|   |   `-StringLiteral 0x126826780 <line:4:3, line:19:3> 'const char[37]' "STRSTRSTRSTRSTRSTRSTRSTRSTRSTRSTRSTR"
|   |-DeclStmt 0x1268268c8 <line:20:2, col:12>
|   | `-VarDecl 0x126826860 <col:2, col:9> col:9 used xml 'char *'
|   |-DeclStmt 0x126826960 <line:21:2, col:7>
|   | `-VarDecl 0x1268268f8 <col:2, col:6> col:6 used l 'int'
|   |-IfStmt 0x126826b70 <line:22:2, line:25:2>
|   | |-BinaryOperator 0x126826a48 <line:22:5, col:17> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x1268269b0 <col:5, col:10> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x126826978 <col:5> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   | | `-RecoveryExpr 0x126826a28 <col:17> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x126826b50 <col:23, line:25:2>
|   |   |-BinaryOperator 0x126826b20 <line:23:3, col:16> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x126826aa0 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x126826a68 <col:3> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   | `-RecoveryExpr 0x126826b00 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x126826b40 <line:24:3>
|   |-SwitchStmt 0x126826c50 <line:26:2, line:51:2>
|   | |-ImplicitCastExpr 0x126826c38 <line:26:9, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-CXXDependentScopeMemberExpr 0x126826bf0 <col:9, col:19> '<dependent type>' contains-errors lvalue ->service
|   | |   `-RecoveryExpr 0x126826bc8 <col:9, col:14> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x126826b90 <col:9> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   | `-CompoundStmt 0x126827208 <col:28, line:51:2>
|   |   |-BinaryOperator 0x126826ed8 <line:28:3, col:25> 'char *' '='
|   |   | |-DeclRefExpr 0x126826c90 <col:3> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|   |   | `-ImplicitCastExpr 0x126826ec0 <col:9, col:25> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x126826e98 <col:9, col:25> 'int'
|   |   |     |-ImplicitCastExpr 0x126826e80 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x126826dc0 <col:9> 'int ()' Function 0x126826d08 'getVarsWANCfg' 'int ()'
|   |   |     `-UnaryOperator 0x126826e30 <col:23, col:24> 'int *' prefix '&' cannot overflow
|   |   |       `-DeclRefExpr 0x126826de0 <col:24> 'int' lvalue Var 0x1268268f8 'l' 'int'
|   |   |-BreakStmt 0x126826ef8 <line:29:3>
|   |   |-BinaryOperator 0x1268270c8 <line:31:3, col:26> 'char *' '='
|   |   | |-DeclRefExpr 0x126826f18 <col:3> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|   |   | `-ImplicitCastExpr 0x1268270b0 <col:9, col:26> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x126827088 <col:9, col:26> 'int'
|   |   |     |-ImplicitCastExpr 0x126827070 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x126827018 <col:9> 'int ()' Function 0x126826f60 'getVarsWANIPCn' 'int ()'
|   |   |     `-UnaryOperator 0x126827058 <col:24, col:25> 'int *' prefix '&' cannot overflow
|   |   |       `-DeclRefExpr 0x126827038 <col:25> 'int' lvalue Var 0x1268268f8 'l' 'int'
|   |   |-BreakStmt 0x1268270e8 <line:32:3>
|   |   |-DefaultStmt 0x126827188 <line:48:2, line:49:9>
|   |   | `-BinaryOperator 0x126827168 <col:3, col:9> 'char *' contains-errors '='
|   |   |   |-DeclRefExpr 0x1268270f0 <col:3> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|   |   |   `-RecoveryExpr 0x126827148 <col:9> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x1268271e8 <line:50:3, col:7> 'int' '='
|   |     |-DeclRefExpr 0x1268271a8 <col:3> 'int' lvalue Var 0x1268268f8 'l' 'int'
|   |     `-IntegerLiteral 0x1268271c8 <col:7> 'int' 0
|   |-BinaryOperator 0x1268272c8 <line:52:2, col:20> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x126827280 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x126827248 <col:2> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   | `-IntegerLiteral 0x1268272a8 <col:20> 'int' 1024
|   |-ForStmt 0x1258f6ae0 <line:53:2, line:80:2>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1258f6aa0 <line:53:11, line:80:2>
|   |   |-BinaryOperator 0x127008200 <line:54:3, col:39> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x126827320 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x1268272e8 <col:3> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   | `-CallExpr 0x1268275c0 <col:17, col:39> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x126827528 <col:17> 'void *(unsigned long)' Function 0x126827388 'malloc' 'void *(unsigned long)'
|   |   |   `-RecoveryExpr 0x126827580 <col:24, col:29> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x126827548 <col:24> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |-IfStmt 0x127008860 <line:55:3, line:62:3>
|   |   | |-UnaryOperator 0x127008298 <line:55:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x127008280 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x127008258 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x127008220 <col:7> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   | `-CompoundStmt 0x127008838 <col:20, line:62:3>
|   |   |   |-CallExpr 0x127008480 <line:56:4, col:25> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x127008390 <col:4> 'int ()' Function 0x1270082d8 'syslog' 'int ()'
|   |   |   | |-RecoveryExpr 0x127008460 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   | `-StringLiteral 0x127008410 <col:20> 'char[4]' lvalue "STR"
|   |   |   |-IfStmt 0x1270087a8 <line:57:4, line:59:4>
|   |   |   | |-ImplicitCastExpr 0x1270084d0 <line:57:7> 'char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1270084b0 <col:7> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|   |   |   | `-CompoundStmt 0x127008790 <col:12, line:59:4>
|   |   |   |   `-CallExpr 0x127008738 <line:58:5, col:13> 'void'
|   |   |   |     |-ImplicitCastExpr 0x127008720 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x127008698 <col:5> 'void (void *)' Function 0x127008528 'free' 'void (void *)'
|   |   |   |     `-ImplicitCastExpr 0x127008778 <col:10> 'void *' <BitCast>
|   |   |   |       `-ImplicitCastExpr 0x127008760 <col:10> 'char *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1270086b8 <col:10> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|   |   |   `-ReturnStmt 0x127008828 <line:61:4>
|   |   |-BinaryOperator 0x1270090a0 <line:63:3, line:66:32> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x1270088b8 <line:63:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x127008880 <col:3> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   | `-CallExpr 0x127009028 <col:17, line:66:32> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x127008bb8 <line:63:17> 'int (char *, unsigned long, const char *, ...)' Function 0x127008930 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   |   |-RecoveryExpr 0x127008c10 <col:26, col:31> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x127008bd8 <col:26> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |   |-RecoveryExpr 0x127008c70 <col:39, col:44> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x127008c38 <col:39> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |   |-DeclRefExpr 0x127008c98 <col:56> 'const char[37]' lvalue Var 0x1268266d0 'notifymsg' 'const char[37]'
|   |   |   |-RecoveryExpr 0x127008cf0 <line:64:26, col:31> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x127008cb8 <col:26> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |   |-RecoveryExpr 0x127008d50 <col:37, col:42> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x127008d18 <col:37> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |   |-RecoveryExpr 0x127008db0 <col:51, col:56> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x127008d78 <col:51> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |   |-BinaryOperator 0x127008e30 <col:65, col:67> 'int' '+'
|   |   |   | |-ImplicitCastExpr 0x127008e18 <col:65> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x127008dd8 <col:65> 'int' lvalue Var 0x1268268f8 'l' 'int'
|   |   |   | `-IntegerLiteral 0x127008df8 <col:67> 'int' 2
|   |   |   |-CXXDependentScopeMemberExpr 0x127008eb0 <line:65:26, col:36> '<dependent type>' contains-errors lvalue ->uuid
|   |   |   | `-RecoveryExpr 0x127008e88 <col:26, col:31> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x127008e50 <col:26> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |   |-CXXDependentScopeMemberExpr 0x127008f58 <col:42, col:52> '<dependent type>' contains-errors lvalue ->seq
|   |   |   | `-RecoveryExpr 0x127008f30 <col:42, col:47> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x127008ef8 <col:42> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |   |-DeclRefExpr 0x127008fa0 <line:66:26> 'int' lvalue Var 0x1268268f8 'l' 'int'
|   |   |   `-DeclRefExpr 0x127008fc0 <col:29> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|   |   |-IfStmt 0x1258f6890 <line:67:3, line:76:3> has_else
|   |   | |-BinaryOperator 0x127009140 <line:67:7, col:21> 'int' contains-errors '<'
|   |   | | |-RecoveryExpr 0x1270090f8 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x1270090c0 <col:7> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   | | `-IntegerLiteral 0x127009120 <col:21> 'int' 0
|   |   | |-CompoundStmt 0x1258f6750 <col:24, line:74:3>
|   |   | | |-IfStmt 0x1258f66c0 <line:69:4, line:71:4>
|   |   | | | |-ImplicitCastExpr 0x1270091c0 <line:69:7> 'char *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1270091a0 <col:7> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|   |   | | | `-CompoundStmt 0x1258f66a8 <col:12, line:71:4>
|   |   | | |   `-CallExpr 0x1258f6650 <line:70:5, col:13> 'void'
|   |   | | |     |-ImplicitCastExpr 0x1258f6638 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x1270091d8 <col:5> 'void (void *)' Function 0x127008528 'free' 'void (void *)'
|   |   | | |     `-ImplicitCastExpr 0x1258f6690 <col:10> 'void *' <BitCast>
|   |   | | |       `-ImplicitCastExpr 0x1258f6678 <col:10> 'char *' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x1258f6600 <col:10> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|   |   | | `-ReturnStmt 0x1258f6740 <line:73:4>
|   |   | `-IfStmt 0x1258f6870 <line:74:10, line:76:3>
|   |   |   |-BinaryOperator 0x1258f6830 <line:74:14, col:33> 'int' contains-errors '<'
|   |   |   | |-RecoveryExpr 0x1258f67a8 <col:14, col:19> '<dependent type>' contains-errors lvalue
|   |   |   | | `-DeclRefExpr 0x1258f6770 <col:14> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |   | `-RecoveryExpr 0x1258f6808 <col:28, col:33> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x1258f67d0 <col:28> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   |   `-CompoundStmt 0x1258f6858 <col:45, line:76:3>
|   |   |     `-BreakStmt 0x1258f6850 <line:75:4>
|   |   |-CallExpr 0x1258f6958 <line:78:3, col:19> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1258f68c0 <col:3> 'void (void *)' Function 0x127008528 'free' 'void (void *)'
|   |   | `-RecoveryExpr 0x1258f6918 <col:8, col:13> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x1258f68e0 <col:8> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |   `-BinaryOperator 0x1258f6a80 <line:79:3, col:35> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x1258f69b8 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x1258f6980 <col:3> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |     `-BinaryOperator 0x1258f6a60 <col:21, col:35> '<dependent type>' contains-errors '+'
|   |       |-RecoveryExpr 0x1258f6a18 <col:21, col:26> '<dependent type>' contains-errors lvalue
|   |       | `-DeclRefExpr 0x1258f69e0 <col:21> 'struct upnp_event_notify *' lvalue ParmVar 0x12680e248 'obj' 'struct upnp_event_notify *'
|   |       `-IntegerLiteral 0x1258f6a40 <col:35> 'int' 1
|   `-IfStmt 0x1258f6c50 <line:81:2, line:84:2>
|     |-ImplicitCastExpr 0x1258f6b38 <line:81:5> 'char *' <LValueToRValue>
|     | `-DeclRefExpr 0x1258f6b18 <col:5> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|     `-CompoundStmt 0x1258f6c38 <col:10, line:84:2>
|       `-CallExpr 0x1258f6bc0 <line:82:3, col:11> 'void'
|         |-ImplicitCastExpr 0x1258f6ba8 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1258f6b50 <col:3> 'void (void *)' Function 0x127008528 'free' 'void (void *)'
|         `-ImplicitCastExpr 0x1258f6c00 <col:8> 'void *' <BitCast>
|           `-ImplicitCastExpr 0x1258f6be8 <col:8> 'char *' <LValueToRValue>
|             `-DeclRefExpr 0x1258f6b70 <col:8> 'char *' lvalue Var 0x126826860 'xml' 'char *'
|-FunctionDecl 0x126827388 <line:54:17> col:17 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x126827488 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x126827430 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x1268274f8 <col:17> Implicit 1
|-FunctionDecl 0x127008528 <line:58:5> col:5 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x127008628 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x1270085d0 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x127008930 <line:63:17> col:17 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x127008a30 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x127008a98 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x127008b00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x1270089d8 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x127008b80 <col:17> Implicit printf 3 4
