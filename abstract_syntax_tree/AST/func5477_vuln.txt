TranslationUnitDecl 0x141055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1410564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x141055bd0 '__int128'
|-TypedefDecl 0x141056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x141055bf0 'unsigned __int128'
|-TypedefDecl 0x14180be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14180bc00 'struct __NSConstantString_tag'
|   `-Record 0x141056580 '__NSConstantString_tag'
|-TypedefDecl 0x14180be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x141055d90 '__SVInt8_t'
|-TypedefDecl 0x14180bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x141055db0 '__SVInt16_t'
|-TypedefDecl 0x14180bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x141055dd0 '__SVInt32_t'
|-TypedefDecl 0x14180bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x141055df0 '__SVInt64_t'
|-TypedefDecl 0x14180c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x141055e10 '__SVUint8_t'
|-TypedefDecl 0x14180c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x141055e30 '__SVUint16_t'
|-TypedefDecl 0x14180c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x141055e50 '__SVUint32_t'
|-TypedefDecl 0x14180c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x141055e70 '__SVUint64_t'
|-TypedefDecl 0x14180c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x141055e90 '__SVFloat16_t'
|-TypedefDecl 0x14180c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x141055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14180c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x141055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14180c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x141055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14180c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x141055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14180c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x141055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14180c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x141055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14180c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x141055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14180c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x141055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14180c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x141055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14180c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x141055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14180c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x141055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14180c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x141056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14180c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x141056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14180c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x141056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14180c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x141056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14180c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x141056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14180c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1410560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14180c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1410560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14180c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1410560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14180c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x141056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14180ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x141056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14180cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x141056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14180cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x141056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14180cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x141056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14180d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1410561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14180d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1410561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14180d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1410561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14180d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x141056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14180d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x141056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14180d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x141056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14180d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x141056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14180d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x141056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14180d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1410562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14180d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1410562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14180d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1410562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14180d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x141056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14180d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x141056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14180d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x141056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14180d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x141056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14180da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x141056390 '__SVBool_t'
|-TypedefDecl 0x14180da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1410563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14180dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1410563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14180db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1410563f0 '__SVCount_t'
|-TypedefDecl 0x14180dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14180dbb0 'char *'
|   `-BuiltinType 0x1410556b0 'char'
|-TypedefDecl 0x14180dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14180dbb0 'char *'
|   `-BuiltinType 0x1410556b0 'char'
|-FunctionDecl 0x14180e0f8 <dataset_diviso_filec/func5477_vuln.c:1:1, line:53:1> line:1:1 invalid gerbv_gdk_draw_prim4 'int (int *, int *, double *, double, int, int)'
| |-ParmVarDecl 0x14180dd28 <col:22, col:33> col:33 invalid pixmap 'int *'
| |-ParmVarDecl 0x14180dda8 <col:41, col:48> col:48 invalid gc 'int *'
| |-ParmVarDecl 0x14180de58 <col:52, col:60> col:60 used p 'double *'
| |-ParmVarDecl 0x14180ded8 <line:2:8, col:15> col:15 used scale 'double'
| |-ParmVarDecl 0x14180df58 <col:22, col:27> col:27 used x 'int'
| |-ParmVarDecl 0x14180dfd8 <col:30, col:35> col:35 used y 'int'
| `-CompoundStmt 0x141124ce8 <line:3:1, line:53:1>
|   |-DeclStmt 0x14180e270 <line:4:5, col:31>
|   | `-VarDecl 0x14180e1e8 <col:5, col:30> col:15 used exposure_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14180e250 <col:30> 'int' 0
|   |-DeclStmt 0x14180e328 <line:5:5, col:33>
|   | `-VarDecl 0x14180e2a0 <col:5, col:32> col:15 used nuf_points_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14180e308 <col:32> 'int' 1
|   |-DeclStmt 0x14180e3e0 <line:6:5, col:30>
|   | `-VarDecl 0x14180e358 <col:5, col:29> col:15 used first_x_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14180e3c0 <col:29> 'int' 2
|   |-DeclStmt 0x1428088a0 <line:7:5, col:30>
|   | `-VarDecl 0x142808818 <col:5, col:29> col:15 used first_y_idx 'const int' cinit
|   |   `-IntegerLiteral 0x142808880 <col:29> 'int' 3
|   |-DeclStmt 0x142808958 <line:8:5, col:29>
|   | `-VarDecl 0x1428088d0 <col:5, col:28> col:15 used rotext_idx 'const int' cinit
|   |   `-IntegerLiteral 0x142808938 <col:28> 'int' 4
|   |-DeclStmt 0x142808c60 <line:10:5, col:26>
|   | |-VarDecl 0x142808b60 <col:5, col:9> col:9 used nuf_points 'int'
|   | `-VarDecl 0x142808be0 <col:5, col:21> col:21 used point 'int'
|   |-DeclStmt 0x142808cf8 <line:11:5, col:20>
|   | `-VarDecl 0x142808c90 <col:5, col:12> col:12 used rotation 'double'
|   |-BinaryOperator 0x142808e90 <line:16:5, col:43> 'int' '='
|   | |-DeclRefExpr 0x142808d48 <col:5> 'int' lvalue Var 0x142808b60 'nuf_points' 'int'
|   | `-BinaryOperator 0x142808e70 <col:18, col:43> 'int' '+'
|   |   |-CStyleCastExpr 0x142808e28 <col:18, col:39> 'int' <FloatingToIntegral>
|   |   | `-ImplicitCastExpr 0x142808e10 <col:23, col:39> 'double' <LValueToRValue> part_of_explicit_cast
|   |   |   `-ArraySubscriptExpr 0x142808dd8 <col:23, col:39> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x142808da8 <col:23> 'double *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x142808d68 <col:23> 'double *' lvalue ParmVar 0x14180de58 'p' 'double *'
|   |   |     `-ImplicitCastExpr 0x142808dc0 <col:25> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x142808d88 <col:25> 'const int' lvalue Var 0x14180e2a0 'nuf_points_idx' 'const int'
|   |   `-IntegerLiteral 0x142808e50 <col:43> 'int' 1
|   |-BinaryOperator 0x142809100 <line:17:5, col:40> 'int' contains-errors '='
|   | |-DeclRefExpr 0x142808f08 <col:5> 'int' lvalue Var 0x142808be0 'point' 'int'
|   | `-CallExpr 0x1428090d0 <col:14, col:40> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x142809008 <col:14> 'int ()' Function 0x142808f50 'g_new' 'int ()'
|   |   |-RecoveryExpr 0x1428090b0 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x142809040 <col:30> 'int' lvalue Var 0x142808b60 'nuf_points' 'int'
|   |-IfStmt 0x1428093d8 <line:18:5, line:21:5>
|   | |-UnaryOperator 0x1428091a0 <line:18:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x142809188 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x142809168 <col:10> 'int' lvalue Var 0x142808be0 'point' 'int'
|   | `-CompoundStmt 0x1428093b8 <col:18, line:21:5>
|   |   |-CallExpr 0x142809368 <line:19:2, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x142809350 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x142809298 <col:2> 'int ()' Function 0x1428091e0 'g_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x142809390 <col:9> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1428092f8 <col:9> 'int' lvalue Var 0x142808be0 'point' 'int'
|   |   `-ReturnStmt 0x1428093a8 <line:20:2>
|   |-BinaryOperator 0x1428095b8 <line:23:5, col:51> 'double' '='
|   | |-DeclRefExpr 0x1428093f8 <col:5> 'double' lvalue Var 0x142808c90 'rotation' 'double'
|   | `-ImplicitCastExpr 0x1428095a0 <col:16, col:51> 'double' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x142809580 <col:16, col:51> 'double' lvalue
|   |     |-ImplicitCastExpr 0x142809568 <col:16> 'double *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x142809418 <col:16> 'double *' lvalue ParmVar 0x14180de58 'p' 'double *'
|   |     `-BinaryOperator 0x142809548 <col:18, col:41> 'int' '+'
|   |       |-BinaryOperator 0x1428094f0 <col:18, col:37> 'int' '*'
|   |       | |-ParenExpr 0x1428094b0 <col:18, col:33> 'int'
|   |       | | `-BinaryOperator 0x142809490 <col:19, col:32> 'int' '-'
|   |       | |   |-ImplicitCastExpr 0x142809478 <col:19> 'int' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x142809438 <col:19> 'int' lvalue Var 0x142808b60 'nuf_points' 'int'
|   |       | |   `-IntegerLiteral 0x142809458 <col:32> 'int' 1
|   |       | `-IntegerLiteral 0x1428094d0 <col:37> 'int' 2
|   |       `-ImplicitCastExpr 0x142809530 <col:41> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x142809510 <col:41> 'const int' lvalue Var 0x1428088d0 'rotext_idx' 'const int'
|   |-ForStmt 0x141124508 <line:24:5, line:31:5>
|   | |-BinaryOperator 0x142809618 <line:24:10, col:18> 'int' '='
|   | | |-DeclRefExpr 0x1428095d8 <col:10> 'int' lvalue Var 0x142808be0 'point' 'int'
|   | | `-IntegerLiteral 0x1428095f8 <col:18> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1428096a8 <col:21, col:29> 'int' '<'
|   | | |-ImplicitCastExpr 0x142809678 <col:21> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142809638 <col:21> 'int' lvalue Var 0x142808be0 'point' 'int'
|   | | `-ImplicitCastExpr 0x142809690 <col:29> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x142809658 <col:29> 'int' lvalue Var 0x142808b60 'nuf_points' 'int'
|   | |-UnaryOperator 0x1428096e8 <col:41, col:46> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1428096c8 <col:41> 'int' lvalue Var 0x142808be0 'point' 'int'
|   | `-CompoundStmt 0x1411244f8 <col:50, line:31:5>
|   |-IfStmt 0x1411248d0 <line:36:5, line:39:5>
|   | |-BinaryOperator 0x141124780 <line:36:9, col:28> 'int' '=='
|   | | |-ImplicitCastExpr 0x141124710 <col:9, col:23> 'double' <LValueToRValue>
|   | | | `-ArraySubscriptExpr 0x1411246d0 <col:9, col:23> 'double' lvalue
|   | | |   |-ImplicitCastExpr 0x1411246a0 <col:9> 'double *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x141124660 <col:9> 'double *' lvalue ParmVar 0x14180de58 'p' 'double *'
|   | | |   `-ImplicitCastExpr 0x1411246b8 <col:11> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x141124680 <col:11> 'const int' lvalue Var 0x14180e1e8 'exposure_idx' 'const int'
|   | | `-FloatingLiteral 0x1411246f0 <col:28> 'double' 0.000000e+00
|   | `-CompoundStmt 0x1411248c0 <col:33, line:39:5>
|   `-ReturnStmt 0x141124cd8 <line:52:5>
`-FunctionDecl 0x141123c00 <line:25:25> col:25 implicit used round 'double (double)' extern
  |-ParmVarDecl 0x141123d00 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x141123ca8 <<invalid sloc>> Implicit 1145
  |-NoThrowAttr 0x141123d70 <col:25> Implicit
  `-ConstAttr 0x141123d98 <col:25> Implicit
