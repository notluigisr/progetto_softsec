TranslationUnitDecl 0x129855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1298564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129855bd0 '__int128'
|-TypedefDecl 0x129856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129855bf0 'unsigned __int128'
|-TypedefDecl 0x129926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x129926000 'struct __NSConstantString_tag'
|   `-Record 0x129856580 '__NSConstantString_tag'
|-TypedefDecl 0x129926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129855d90 '__SVInt8_t'
|-TypedefDecl 0x129926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129855db0 '__SVInt16_t'
|-TypedefDecl 0x129926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129855dd0 '__SVInt32_t'
|-TypedefDecl 0x1299263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129855df0 '__SVInt64_t'
|-TypedefDecl 0x129926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129855e10 '__SVUint8_t'
|-TypedefDecl 0x1299264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129855e30 '__SVUint16_t'
|-TypedefDecl 0x129926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129855e50 '__SVUint32_t'
|-TypedefDecl 0x129926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129855e70 '__SVUint64_t'
|-TypedefDecl 0x1299265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129855e90 '__SVFloat16_t'
|-TypedefDecl 0x129926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1299266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129855ed0 '__SVFloat64_t'
|-TypedefDecl 0x129926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x129926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1299267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x129926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1299268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x129926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x129926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1299269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x129926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x129926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x129926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x129926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x129926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x129926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129856090 '__clang_svint8x3_t'
|-TypedefDecl 0x129926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1298560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x129926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1298560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x129926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1298560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x129926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x129926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x129926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x129926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x129926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x129927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1298561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x129927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1298561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1299278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1298561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x129927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1299279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129856230 '__clang_svint16x4_t'
|-TypedefDecl 0x129927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129856250 '__clang_svint32x4_t'
|-TypedefDecl 0x129927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129856270 '__clang_svint64x4_t'
|-TypedefDecl 0x129927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x129927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1298562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x129927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1298562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x129927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1298562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x129927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x129927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x129927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x129927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x129927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129856390 '__SVBool_t'
|-TypedefDecl 0x129927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1298563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x129927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1298563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x129927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1298563f0 '__SVCount_t'
|-TypedefDecl 0x129927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x129927fb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-TypedefDecl 0x129928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x129927fb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-FunctionDecl 0x1299282f8 <dataset_diviso_filec/func7981_vuln.c:1:1, line:62:1> line:1:12 rename_in_ns 'int (int, char *, char **)' static
| |-ParmVarDecl 0x1299280d8 <col:25, col:29> col:29 used pid 'int'
| |-ParmVarDecl 0x129928158 <col:34, col:40> col:40 used oldname 'char *'
| |-ParmVarDecl 0x129928208 <col:49, col:56> col:56 used newnamep 'char **'
| `-CompoundStmt 0x129943798 <line:2:1, line:62:1>
|   |-DeclStmt 0x1299286d0 <line:3:2, col:42>
|   | |-VarDecl 0x129928418 <col:2, col:12> col:6 used fd 'int' cinit
|   | | `-UnaryOperator 0x1299284a0 <col:11, col:12> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x129928480 <col:12> 'int' 1
|   | |-VarDecl 0x1299284d0 <col:2, col:22> col:15 used ofd 'int' cinit
|   | | `-UnaryOperator 0x129928558 <col:21, col:22> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x129928538 <col:22> 'int' 1
|   | |-VarDecl 0x129928588 <col:2, col:25> col:25 used ret 'int'
|   | `-VarDecl 0x129928608 <col:2, col:41> col:30 used ifindex 'int' cinit
|   |   `-UnaryOperator 0x129928690 <col:40, col:41> 'int' prefix '-'
|   |     `-IntegerLiteral 0x129928670 <col:41> 'int' 1
|   |-BinaryOperator 0x129941b10 <line:6:2, col:39> 'int' '='
|   | |-DeclRefExpr 0x129928700 <col:2> 'int' lvalue Var 0x1299284d0 'ofd' 'int'
|   | `-CallExpr 0x129941ac8 <col:8, col:39> 'int'
|   |   |-ImplicitCastExpr 0x129941ab0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1299418b8 <col:8> 'int ()' Function 0x129941800 'lxc_preserve_ns' 'int ()'
|   |   |-CallExpr 0x129941a28 <col:24, col:31> 'int'
|   |   | `-ImplicitCastExpr 0x129941a10 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x1299419b8 <col:24> 'int ()' Function 0x129941900 'getpid' 'int ()'
|   |   `-ImplicitCastExpr 0x129941af8 <col:34> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x129941a90 <col:34> 'char[4]' lvalue "STR"
|   |-IfStmt 0x129941e68 <line:7:2, line:10:2>
|   | |-BinaryOperator 0x129941b88 <line:7:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x129941b70 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x129941b30 <col:6> 'int' lvalue Var 0x1299284d0 'ofd' 'int'
|   | | `-IntegerLiteral 0x129941b50 <col:12> 'int' 0
|   | `-CompoundStmt 0x129941e48 <col:15, line:10:2>
|   |   |-CallExpr 0x129941dc8 <line:8:3, col:34> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x129941c88 <col:3> 'int ()' Function 0x129941bd0 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x129941d70 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x129941cc0 <col:19> 'char[4]' lvalue "STR"
|   |   | `-CallExpr 0x129941da8 <col:26, col:33> 'int'
|   |   |   `-ImplicitCastExpr 0x129941d90 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |   |     `-DeclRefExpr 0x129941ce0 <col:26> 'int ()' Function 0x129941900 'getpid' 'int ()'
|   |   `-ReturnStmt 0x129941e38 <line:9:3, col:11>
|   |     `-UnaryOperator 0x129941e20 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x129941e00 <col:11> 'int' 1
|   |-BinaryOperator 0x129941f80 <line:12:2, col:33> 'int' '='
|   | |-DeclRefExpr 0x129941e88 <col:2> 'int' lvalue Var 0x129928418 'fd' 'int'
|   | `-CallExpr 0x129941f20 <col:7, col:33> 'int'
|   |   |-ImplicitCastExpr 0x129941f08 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x129941ea8 <col:7> 'int ()' Function 0x129941800 'lxc_preserve_ns' 'int ()'
|   |   |-ImplicitCastExpr 0x129941f50 <col:23> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x129941ec8 <col:23> 'int' lvalue ParmVar 0x1299280d8 'pid' 'int'
|   |   `-ImplicitCastExpr 0x129941f68 <col:28> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x129941ee8 <col:28> 'char[4]' lvalue "STR"
|   |-IfStmt 0x129942188 <line:13:2, line:16:2>
|   | |-BinaryOperator 0x129941ff8 <line:13:6, col:11> 'int' '<'
|   | | |-ImplicitCastExpr 0x129941fe0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x129941fa0 <col:6> 'int' lvalue Var 0x129928418 'fd' 'int'
|   | | `-IntegerLiteral 0x129941fc0 <col:11> 'int' 0
|   | `-CompoundStmt 0x129942168 <col:14, line:16:2>
|   |   |-CallExpr 0x1299420e8 <line:14:3, col:29> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x129942018 <col:3> 'int ()' Function 0x129941bd0 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x1299420c8 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x129942050 <col:19> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x129942070 <col:26> 'int' lvalue ParmVar 0x1299280d8 'pid' 'int'
|   |   `-ReturnStmt 0x129942158 <line:15:3, col:11>
|   |     `-UnaryOperator 0x129942140 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x129942120 <col:11> 'int' 1
|   |-IfStmt 0x1299424e8 <line:18:2, line:21:2>
|   | |-BinaryOperator 0x129942368 <line:18:6, col:21> 'int' '<'
|   | | |-CallExpr 0x129942300 <col:6, col:17> 'int'
|   | | | |-ImplicitCastExpr 0x1299422e8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x129942288 <col:6> 'int ()' Function 0x1299421d0 'setns' 'int ()'
|   | | | |-ImplicitCastExpr 0x129942330 <col:12> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1299422a8 <col:12> 'int' lvalue Var 0x129928418 'fd' 'int'
|   | | | `-IntegerLiteral 0x1299422c8 <col:16> 'int' 0
|   | | `-IntegerLiteral 0x129942348 <col:21> 'int' 0
|   | `-CompoundStmt 0x1299424c8 <col:24, line:21:2>
|   |   |-CallExpr 0x129942430 <line:19:3, col:24> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x129942388 <col:3> 'int ()' Function 0x129941bd0 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x129942410 <col:11> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x1299423c0 <col:19> 'char[4]' lvalue "STR"
|   |   `-GotoStmt 0x1299424b0 <line:20:3, col:8> 'out_err' 0x129942460
|   |-CallExpr 0x129942640 <line:22:2, col:10> 'int'
|   | |-ImplicitCastExpr 0x129942628 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1299425e8 <col:2> 'int ()' Function 0x129942530 'close' 'int ()'
|   | `-ImplicitCastExpr 0x129942668 <col:8> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x129942608 <col:8> 'int' lvalue Var 0x129928418 'fd' 'int'
|   |-BinaryOperator 0x1299426d8 <col:13, col:19> 'int' '='
|   | |-DeclRefExpr 0x129942680 <col:13> 'int' lvalue Var 0x129928418 'fd' 'int'
|   | `-UnaryOperator 0x1299426c0 <col:18, col:19> 'int' prefix '-'
|   |   `-IntegerLiteral 0x1299426a0 <col:19> 'int' 1
|   |-IfStmt 0x12a008c00 <line:23:2, line:30:2>
|   | |-UnaryOperator 0x129942760 <line:23:6, col:8> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x129942748 <col:7, col:8> 'char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x129942730 <col:7, col:8> 'char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x129942718 <col:8> 'char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1299426f8 <col:8> 'char **' lvalue ParmVar 0x129928208 'newnamep' 'char **'
|   | `-CompoundStmt 0x12a008be0 <col:18, line:30:2>
|   |   |-BinaryOperator 0x12a0088a0 <line:25:3, col:15> 'char *' contains-errors '='
|   |   | |-UnaryOperator 0x12a008868 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x12a008850 <col:4> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x129942790 <col:4> 'char **' lvalue ParmVar 0x129928208 'newnamep' 'char **'
|   |   | `-RecoveryExpr 0x12a008880 <col:15> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x12a008bc0 <line:26:3, line:29:3>
|   |     |-UnaryOperator 0x12a008a98 <line:26:7, col:42> 'int' prefix '!' cannot overflow
|   |     | `-ParenExpr 0x12a008a78 <col:8, col:42> 'int'
|   |     |   `-BinaryOperator 0x12a008a58 <col:9, col:41> 'int' '='
|   |     |     |-DeclRefExpr 0x12a0088c0 <col:9> 'int' lvalue Var 0x129928608 'ifindex' 'int'
|   |     |     `-CallExpr 0x12a008a18 <col:19, col:41> 'int'
|   |     |       |-ImplicitCastExpr 0x12a008a00 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     |       | `-DeclRefExpr 0x12a0089c0 <col:19> 'int ()' Function 0x12a008908 'if_nametoindex' 'int ()'
|   |     |       `-ImplicitCastExpr 0x12a008a40 <col:34> 'char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x12a0089e0 <col:34> 'char *' lvalue ParmVar 0x129928158 'oldname' 'char *'
|   |     `-CompoundStmt 0x12a008ba0 <col:45, line:29:3>
|   |       |-CallExpr 0x12a008b58 <line:27:4, col:25> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x12a008ab0 <col:4> 'int ()' Function 0x129941bd0 'fprintf' 'int ()'
|   |       | |-RecoveryExpr 0x12a008b38 <col:12> '<dependent type>' contains-errors lvalue
|   |       | `-StringLiteral 0x12a008ae8 <col:20> 'char[4]' lvalue "STR"
|   |       `-GotoStmt 0x12a008b88 <line:28:4, col:9> 'out_err' 0x129942460
|   |-IfStmt 0x12a0090a8 <line:31:2, line:34:2>
|   | |-BinaryOperator 0x12a008e88 <line:31:6, col:62> 'int' '<'
|   | | |-ParenExpr 0x12a008e48 <col:6, col:58> 'int'
|   | | | `-BinaryOperator 0x12a008e28 <col:7, col:57> 'int' '='
|   | | |   |-DeclRefExpr 0x12a008c20 <col:7> 'int' lvalue Var 0x129928588 'ret' 'int'
|   | | |   `-CallExpr 0x12a008dc8 <col:13, col:57> 'int'
|   | | |     |-ImplicitCastExpr 0x12a008db0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x12a008d20 <col:13> 'int ()' Function 0x12a008c68 'lxc_netdev_rename_by_name' 'int ()'
|   | | |     |-ImplicitCastExpr 0x12a008df8 <col:39> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12a008d40 <col:39> 'char *' lvalue ParmVar 0x129928158 'oldname' 'char *'
|   | | |     `-ImplicitCastExpr 0x12a008e10 <col:48, col:49> 'char *' <LValueToRValue>
|   | | |       `-UnaryOperator 0x12a008d98 <col:48, col:49> 'char *' lvalue prefix '*' cannot overflow
|   | | |         `-ImplicitCastExpr 0x12a008d80 <col:49> 'char **' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x12a008d60 <col:49> 'char **' lvalue ParmVar 0x129928208 'newnamep' 'char **'
|   | | `-IntegerLiteral 0x12a008e68 <col:62> 'int' 0
|   | `-CompoundStmt 0x12a009088 <col:65, line:34:2>
|   |   |-CallExpr 0x12a009028 <line:32:3, col:49> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12a008ea8 <col:3> 'int ()' Function 0x129941bd0 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x12a008fd8 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x12a008ee0 <col:19> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x12a008f00 <col:26> 'int' lvalue Var 0x129928588 'ret' 'int'
|   |   | |-DeclRefExpr 0x12a008f20 <col:31> 'char *' lvalue ParmVar 0x129928158 'oldname' 'char *'
|   |   | `-UnaryOperator 0x12a009010 <col:40, col:41> 'char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x12a008ff8 <col:41> 'char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12a008f40 <col:41> 'char **' lvalue ParmVar 0x129928208 'newnamep' 'char **'
|   |   `-GotoStmt 0x12a009070 <line:33:3, col:8> 'out_err' 0x129942460
|   |-IfStmt 0x12a009648 <line:35:2, line:44:2>
|   | |-RecoveryExpr 0x12a0090c8 <line:35:6> '_Bool' contains-errors
|   | `-CompoundStmt 0x12a009620 <col:20, line:44:2>
|   |   |-DeclStmt 0x12a009160 <line:36:3, col:33>
|   |   | `-VarDecl 0x12a0090f8 <col:3, col:8> col:8 invalid ifname 'char'
|   |   |-IfStmt 0x12a009328 <line:37:3, line:40:3>
|   |   | |-RecoveryExpr 0x12a009298 <line:37:7, col:37> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x12a009310 <col:40, line:40:3>
|   |   |   `-GotoStmt 0x12a0092f8 <line:39:4, col:9> 'out_err' 0x129942460
|   |   `-IfStmt 0x12a009600 <line:42:3, line:43:9>
|   |     |-UnaryOperator 0x12a0095d0 <line:42:7, col:9> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x12a0095b8 <col:8, col:9> 'char *' <LValueToRValue>
|   |     |   `-UnaryOperator 0x12a0095a0 <col:8, col:9> 'char *' lvalue prefix '*' cannot overflow
|   |     |     `-ImplicitCastExpr 0x12a009588 <col:9> 'char **' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x12a009568 <col:9> 'char **' lvalue ParmVar 0x129928208 'newnamep' 'char **'
|   |     `-GotoStmt 0x12a0095e8 <line:43:4, col:9> 'out_err' 0x129942460
|   |-IfStmt 0x1299432a8 <line:45:2, line:49:2>
|   | |-BinaryOperator 0x12a009748 <line:45:6, col:22> 'int' '<'
|   | | |-CallExpr 0x12a0096e0 <col:6, col:18> 'int'
|   | | | |-ImplicitCastExpr 0x12a0096c8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12a009668 <col:6> 'int ()' Function 0x1299421d0 'setns' 'int ()'
|   | | | |-ImplicitCastExpr 0x12a009710 <col:12> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x12a009688 <col:12> 'int' lvalue Var 0x1299284d0 'ofd' 'int'
|   | | | `-IntegerLiteral 0x12a0096a8 <col:17> 'int' 0
|   | | `-IntegerLiteral 0x12a009728 <col:22> 'int' 0
|   | `-CompoundStmt 0x129943288 <col:25, line:49:2>
|   |   |-CallExpr 0x129943200 <line:47:3, col:12> 'int'
|   |   | |-ImplicitCastExpr 0x12a0097e8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12a0097a8 <col:3> 'int ()' Function 0x129942530 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x129943228 <col:9> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12a0097c8 <col:9> 'int' lvalue Var 0x1299284d0 'ofd' 'int'
|   |   `-ReturnStmt 0x129943278 <line:48:3, col:11>
|   |     `-UnaryOperator 0x129943260 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x129943240 <col:11> 'int' 1
|   |-CallExpr 0x129943320 <line:50:2, col:11> 'int'
|   | |-ImplicitCastExpr 0x129943308 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1299432c8 <col:2> 'int ()' Function 0x129942530 'close' 'int ()'
|   | `-ImplicitCastExpr 0x129943348 <col:8> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1299432e8 <col:8> 'int' lvalue Var 0x1299284d0 'ofd' 'int'
|   |-ReturnStmt 0x129943380 <line:52:2, col:9>
|   | `-IntegerLiteral 0x129943360 <col:9> 'int' 0
|   |-LabelStmt 0x1299434c0 <line:54:1, line:56:12> 'out_err'
|   | `-IfStmt 0x1299434a0 <line:55:2, line:56:12>
|   |   |-BinaryOperator 0x1299433e8 <line:55:6, col:13> 'int' '>='
|   |   | |-ImplicitCastExpr 0x1299433d0 <col:6> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x129943390 <col:6> 'int' lvalue Var 0x1299284d0 'ofd' 'int'
|   |   | `-IntegerLiteral 0x1299433b0 <col:13> 'int' 0
|   |   `-CallExpr 0x129943460 <line:56:3, col:12> 'int'
|   |     |-ImplicitCastExpr 0x129943448 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x129943408 <col:3> 'int ()' Function 0x129942530 'close' 'int ()'
|   |     `-ImplicitCastExpr 0x129943488 <col:9> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x129943428 <col:9> 'int' lvalue Var 0x1299284d0 'ofd' 'int'
|   |-IfStmt 0x129943730 <line:59:2, line:60:11>
|   | |-BinaryOperator 0x129943678 <line:59:6, col:12> 'int' '>='
|   | | |-ImplicitCastExpr 0x129943660 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x129943620 <col:6> 'int' lvalue Var 0x129928418 'fd' 'int'
|   | | `-IntegerLiteral 0x129943640 <col:12> 'int' 0
|   | `-CallExpr 0x1299436f0 <line:60:3, col:11> 'int'
|   |   |-ImplicitCastExpr 0x1299436d8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x129943698 <col:3> 'int ()' Function 0x129942530 'close' 'int ()'
|   |   `-ImplicitCastExpr 0x129943718 <col:9> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1299436b8 <col:9> 'int' lvalue Var 0x129928418 'fd' 'int'
|   `-ReturnStmt 0x129943788 <line:61:2, col:10>
|     `-UnaryOperator 0x129943770 <col:9, col:10> 'int' prefix '-'
|       `-IntegerLiteral 0x129943750 <col:10> 'int' 1
`-FunctionDecl 0x12a0093d8 <line:41:15> col:15 implicit used strdup 'char *(const char *)' extern
  |-ParmVarDecl 0x12a0094d8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12a009480 <<invalid sloc>> Implicit 950
