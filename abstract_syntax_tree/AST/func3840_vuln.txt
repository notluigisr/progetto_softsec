TranslationUnitDecl 0x158053608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1580544b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158053bd0 '__int128'
|-TypedefDecl 0x158054528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158053bf0 'unsigned __int128'
|-TypedefDecl 0x15000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15000bc00 'struct __NSConstantString_tag'
|   `-Record 0x158054580 '__NSConstantString_tag'
|-TypedefDecl 0x15000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158053d90 '__SVInt8_t'
|-TypedefDecl 0x15000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158053db0 '__SVInt16_t'
|-TypedefDecl 0x15000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158053dd0 '__SVInt32_t'
|-TypedefDecl 0x15000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158053df0 '__SVInt64_t'
|-TypedefDecl 0x15000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158053e10 '__SVUint8_t'
|-TypedefDecl 0x15000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158053e30 '__SVUint16_t'
|-TypedefDecl 0x15000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158053e50 '__SVUint32_t'
|-TypedefDecl 0x15000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158053e70 '__SVUint64_t'
|-TypedefDecl 0x15000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158053e90 '__SVFloat16_t'
|-TypedefDecl 0x15000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158053eb0 '__SVFloat32_t'
|-TypedefDecl 0x15000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158053ed0 '__SVFloat64_t'
|-TypedefDecl 0x15000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158053ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158053f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158053f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158053f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158053f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158053f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158053fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158053fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158053ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158054010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158054030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158054050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158054070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158054090 '__clang_svint8x3_t'
|-TypedefDecl 0x15000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1580540b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1580540d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1580540f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158054110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158054130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158054150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158054170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158054190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1580541b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1580541d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1580541f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158054210 '__clang_svint8x4_t'
|-TypedefDecl 0x15000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158054230 '__clang_svint16x4_t'
|-TypedefDecl 0x15000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158054250 '__clang_svint32x4_t'
|-TypedefDecl 0x15000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158054270 '__clang_svint64x4_t'
|-TypedefDecl 0x15000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158054290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1580542b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1580542d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1580542f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158054310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158054330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158054350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158054370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158054390 '__SVBool_t'
|-TypedefDecl 0x15000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1580543b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1580543d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1580543f0 '__SVCount_t'
|-TypedefDecl 0x15000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1580536b0 'char'
|-TypedefDecl 0x15000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1580536b0 'char'
|-FunctionDecl 0x15000df10 <dataset_diviso_filec/func3840_vuln.c:1:1, line:34:1> line:1:13 invalid gx_ttfReader__Read 'void (int *, void *, int)' static
| |-ParmVarDecl 0x15000dd28 <col:32, col:43> col:43 invalid self 'int *'
| |-ParmVarDecl 0x15000dda8 <col:49, col:55> col:55 used p 'void *'
| |-ParmVarDecl 0x15000de28 <col:58, col:62> col:62 used n 'int'
| `-CompoundStmt 0x1581243d8 <line:2:1, line:34:1>
|   |-DeclStmt 0x15000e080 <line:4:5, col:18>
|   | `-VarDecl 0x15000e018 <col:5, col:17> col:17 referenced invalid q 'const int *'
|   |-IfStmt 0x158123f08 <line:6:5, line:28:5>
|   | |-UnaryOperator 0x15000e1a8 <line:6:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15000e190 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x15000e148 <col:10, col:13> '<dependent type>' contains-errors lvalue ->error
|   | |     `-RecoveryExpr 0x15000e128 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x158123ef0 <col:20, line:28:5>
|   |   `-IfStmt 0x158123ec0 <line:7:9, line:27:9> has_else
|   |     |-BinaryOperator 0x15000e2e0 <line:7:13, col:38> 'int' contains-errors '!='
|   |     | |-CXXDependentScopeMemberExpr 0x15000e298 <col:13, col:16> '<dependent type>' contains-errors lvalue ->extra_glyph_index
|   |     | | `-RecoveryExpr 0x15000e278 <col:13> '<dependent type>' contains-errors lvalue
|   |     | `-UnaryOperator 0x15000e240 <col:37, col:38> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x15000e220 <col:38> 'int' 1
|   |     |-CompoundStmt 0x158121b80 <col:41, line:13:9>
|   |     | |-BinaryOperator 0x158120e68 <line:8:13, col:46> '<dependent type>' contains-errors '='
|   |     | | |-RecoveryExpr 0x15000e320 <col:13> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x15000e300 <col:13> 'const int *' lvalue Var 0x15000e018 'q' 'const int *'
|   |     | | `-BinaryOperator 0x158120e48 <col:17, col:46> '<dependent type>' contains-errors '+'
|   |     | |   |-CXXDependentScopeMemberExpr 0x158120d98 <col:17, col:36> '<dependent type>' contains-errors lvalue .data
|   |     | |   | `-CXXDependentScopeMemberExpr 0x158120d50 <col:17, col:31> '<dependent type>' contains-errors lvalue .bits
|   |     | |   |   `-CXXDependentScopeMemberExpr 0x158120d08 <col:17, col:20> '<dependent type>' contains-errors lvalue ->glyph_data
|   |     | |   |     `-RecoveryExpr 0x158120ce8 <col:17> '<dependent type>' contains-errors lvalue
|   |     | |   `-CXXDependentScopeMemberExpr 0x158120e00 <col:43, col:46> '<dependent type>' contains-errors lvalue ->pos
|   |     | |     `-RecoveryExpr 0x158120de0 <col:43> '<dependent type>' contains-errors lvalue
|   |     | `-IfStmt 0x158121b60 <line:11:13, line:12:31>
|   |     |   |-BinaryOperator 0x158121348 <line:11:17, col:29> 'int' contains-errors '=='
|   |     |   | |-CXXDependentScopeMemberExpr 0x158121300 <col:17, col:20> '<dependent type>' contains-errors lvalue ->error
|   |     |   | | `-RecoveryExpr 0x1581212e0 <col:17> '<dependent type>' contains-errors lvalue
|   |     |   | `-IntegerLiteral 0x1581212a0 <col:29> 'int' 0
|   |     |   `-CallExpr 0x158121b28 <line:12:17, col:31> '<dependent type>' contains-errors
|   |     |     |-DeclRefExpr 0x158121a60 <col:17> 'void *(void *, const void *, unsigned long)' Function 0x158121810 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |     |     |-DeclRefExpr 0x158121a80 <col:24> 'void *' lvalue ParmVar 0x15000dda8 'p' 'void *'
|   |     |     |-RecoveryExpr 0x158121aa0 <col:27> '<dependent type>' contains-errors lvalue
|   |     |     `-DeclRefExpr 0x158121ac0 <col:30> 'int' lvalue ParmVar 0x15000de28 'n' 'int'
|   |     `-CompoundStmt 0x158123ea0 <line:13:16, line:27:9>
|   |       |-DeclStmt 0x158123868 <line:14:13, col:29>
|   |       | `-VarDecl 0x158123800 <col:13, col:26> col:26 used cnt 'unsigned int'
|   |       `-ForStmt 0x158123e68 <line:16:13, line:26:13>
|   |         |-BinaryOperator 0x1581238d8 <line:16:18, col:24> 'unsigned int' '='
|   |         | |-DeclRefExpr 0x158123880 <col:18> 'unsigned int' lvalue Var 0x158123800 'cnt' 'unsigned int'
|   |         | `-ImplicitCastExpr 0x1581238c0 <col:24> 'unsigned int' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1581238a0 <col:24> 'int' 0
|   |         |-<<<NULL>>>
|   |         |-RecoveryExpr 0x158123990 <col:27, col:38> '<dependent type>' contains-errors lvalue
|   |         | |-DeclRefExpr 0x1581238f8 <col:27> 'unsigned int' lvalue Var 0x158123800 'cnt' 'unsigned int'
|   |         | `-ParenExpr 0x158123970 <col:33, col:38> '<overloaded function type>' lvalue
|   |         |   `-UnresolvedLookupExpr 0x158123930 <col:34> '<overloaded function type>' lvalue (no ADL) = 'uint' empty
|   |         |-<<<NULL>>>
|   |         `-CompoundStmt 0x158123e50 <col:59, line:26:13>
|   |           `-IfStmt 0x158123e20 <line:18:17, line:25:17> has_else
|   |             |-RecoveryExpr 0x158123a38 <line:18:21, col:32> '_Bool' contains-errors
|   |             |-BreakStmt 0x158123a58 <line:19:21>
|   |             `-IfStmt 0x158123df0 <line:20:22, line:25:17> has_else
|   |               |-RecoveryExpr 0x158123a80 <line:20:27, col:39> '_Bool' contains-errors
|   |               |-CompoundStmt 0x158123cb0 <col:42, line:23:17>
|   |               | |-CallExpr 0x158123c70 <line:21:21, col:55> '<dependent type>' contains-errors
|   |               | | |-DeclRefExpr 0x158123aa0 <col:21> 'void *(void *, const void *, unsigned long)' Function 0x158121810 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |               | | |-BinaryOperator 0x158123b70 <col:28, col:40> 'char *' '+'
|   |               | | | |-CStyleCastExpr 0x158123b10 <col:28, col:36> 'char *' <BitCast>
|   |               | | | | `-ImplicitCastExpr 0x158123af8 <col:36> 'void *' <LValueToRValue> part_of_explicit_cast
|   |               | | | |   `-DeclRefExpr 0x158123ac0 <col:36> 'void *' lvalue ParmVar 0x15000dda8 'p' 'void *'
|   |               | | | `-ImplicitCastExpr 0x158123b58 <col:40> 'unsigned int' <LValueToRValue>
|   |               | | |   `-DeclRefExpr 0x158123b38 <col:40> 'unsigned int' lvalue Var 0x158123800 'cnt' 'unsigned int'
|   |               | | |-RecoveryExpr 0x158123b90 <col:45> '<dependent type>' contains-errors lvalue
|   |               | | `-BinaryOperator 0x158123c38 <col:48, col:52> 'unsigned int' '-'
|   |               | |   |-ImplicitCastExpr 0x158123c20 <col:48> 'unsigned int' <IntegralCast>
|   |               | |   | `-ImplicitCastExpr 0x158123bf0 <col:48> 'int' <LValueToRValue>
|   |               | |   |   `-DeclRefExpr 0x158123bb0 <col:48> 'int' lvalue ParmVar 0x15000de28 'n' 'int'
|   |               | |   `-ImplicitCastExpr 0x158123c08 <col:52> 'unsigned int' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x158123bd0 <col:52> 'unsigned int' lvalue Var 0x158123800 'cnt' 'unsigned int'
|   |               | `-BreakStmt 0x158123ca8 <line:22:21>
|   |               `-CompoundStmt 0x158123de0 <line:23:24, line:25:17>
|   `-IfStmt 0x158124398 <line:29:5, line:32:5>
|     |-RecoveryExpr 0x158123f28 <line:29:9, col:12> '_Bool' contains-errors
|     `-CompoundStmt 0x158124378 <col:19, line:32:5>
|       |-CallExpr 0x1581242e8 <line:30:9, col:23> 'void *'
|       | |-ImplicitCastExpr 0x1581242d0 <col:9> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1581241e8 <col:9> 'void *(void *, int, unsigned long)' Function 0x158123f98 'memset' 'void *(void *, int, unsigned long)'
|       | |-ImplicitCastExpr 0x158124320 <col:16> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x158124208 <col:16> 'void *' lvalue ParmVar 0x15000dda8 'p' 'void *'
|       | |-IntegerLiteral 0x158124228 <col:19> 'int' 0
|       | `-ImplicitCastExpr 0x158124350 <col:22> 'unsigned long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x158124338 <col:22> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x158124248 <col:22> 'int' lvalue ParmVar 0x15000de28 'n' 'int'
|       `-ReturnStmt 0x158124368 <line:31:9>
|-FunctionDecl 0x158121810 <line:12:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x158121910 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x158121978 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1581219e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1581218b8 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x158123f98 <line:30:9> col:9 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x158124098 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x158124100 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x158124168 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x158124040 <<invalid sloc>> Implicit 900
