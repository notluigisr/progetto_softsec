TranslationUnitDecl 0x14a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a055bd0 '__int128'
|-TypedefDecl 0x14a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a055bf0 'unsigned __int128'
|-TypedefDecl 0x14a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a126000 'struct __NSConstantString_tag'
|   `-Record 0x14a056580 '__NSConstantString_tag'
|-TypedefDecl 0x14a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a055d90 '__SVInt8_t'
|-TypedefDecl 0x14a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a055db0 '__SVInt16_t'
|-TypedefDecl 0x14a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a055dd0 '__SVInt32_t'
|-TypedefDecl 0x14a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a055df0 '__SVInt64_t'
|-TypedefDecl 0x14a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a055e10 '__SVUint8_t'
|-TypedefDecl 0x14a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a055e30 '__SVUint16_t'
|-TypedefDecl 0x14a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a055e50 '__SVUint32_t'
|-TypedefDecl 0x14a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a055e70 '__SVUint64_t'
|-TypedefDecl 0x14a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a055e90 '__SVFloat16_t'
|-TypedefDecl 0x14a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a056390 '__SVBool_t'
|-TypedefDecl 0x14a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a0563f0 '__SVCount_t'
|-TypedefDecl 0x14a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a127fb0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
|-TypedefDecl 0x14a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a127fb0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
|-FunctionDecl 0x14a140a00 <dataset_diviso_filec/func6559_vuln.c:1:1, line:60:1> line:1:1 build_state 'int (int, struct dfa *)'
| |-ParmVarDecl 0x14a1280d8 <col:14, col:18> col:18 used s 'int'
| |-ParmVarDecl 0x14a1286c8 <col:21, col:33> col:33 used d 'struct dfa *'
| `-CompoundStmt 0x14a145e48 <line:2:1, line:60:1>
|   |-DeclStmt 0x14a140bb0 <line:3:3, col:13>
|   | `-VarDecl 0x14a140b48 <col:3, col:8> col:8 used trans 'int *'
|   |-DeclStmt 0x14a140c48 <line:4:3, col:8>
|   | `-VarDecl 0x14a140be0 <col:3, col:7> col:7 used i 'int'
|   |-IfStmt 0x14a141718 <line:7:3, line:16:5>
|   | |-BinaryOperator 0x14a140ce0 <line:7:7, col:21> 'int' contains-errors '>='
|   | | |-RecoveryExpr 0x14a140c98 <col:7, col:10> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x14a140c60 <col:7> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   | | `-IntegerLiteral 0x14a140cc0 <col:21> 'int' 1024
|   | `-CompoundStmt 0x14a1416f8 <line:8:5, line:16:5>
|   |   |-ForStmt 0x14a141620 <line:9:7, line:14:9>
|   |   | |-BinaryOperator 0x14a140d40 <line:9:12, col:16> 'int' '='
|   |   | | |-DeclRefExpr 0x14a140d00 <col:12> 'int' lvalue Var 0x14a140be0 'i' 'int'
|   |   | | `-IntegerLiteral 0x14a140d20 <col:16> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x14a140de0 <col:19, col:26> 'int' contains-errors '<'
|   |   | | |-DeclRefExpr 0x14a140d60 <col:19> 'int' lvalue Var 0x14a140be0 'i' 'int'
|   |   | | `-RecoveryExpr 0x14a140db8 <col:23, col:26> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x14a140d80 <col:23> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   |   | |-UnaryOperator 0x14a140e20 <col:35, col:37> 'int' prefix '++'
|   |   | | `-DeclRefExpr 0x14a140e00 <col:37> 'int' lvalue Var 0x14a140be0 'i' 'int'
|   |   | `-CompoundStmt 0x14a1415f8 <line:10:9, line:14:9>
|   |   |   |-CallExpr 0x14a1410f0 <line:11:11, col:27> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x14a140fe8 <col:11> 'void (void *)' Function 0x14a140e78 'free' 'void (void *)'
|   |   |   | `-ArraySubscriptExpr 0x14a1410b8 <col:16, col:26> '<dependent type>' contains-errors lvalue
|   |   |   |   |-ImplicitCastExpr 0x14a141088 <col:16, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |   | `-RecoveryExpr 0x14a141040 <col:16, col:19> '<dependent type>' contains-errors lvalue
|   |   |   |   |   `-DeclRefExpr 0x14a141008 <col:16> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   |   |   |   `-ImplicitCastExpr 0x14a1410a0 <col:25> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x14a141068 <col:25> 'int' lvalue Var 0x14a140be0 'i' 'int'
|   |   |   |-CallExpr 0x14a141220 <line:12:11, col:27> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x14a141118 <col:11> 'void (void *)' Function 0x14a140e78 'free' 'void (void *)'
|   |   |   | `-ArraySubscriptExpr 0x14a1411e8 <col:16, col:26> '<dependent type>' contains-errors lvalue
|   |   |   |   |-ImplicitCastExpr 0x14a1411b8 <col:16, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |   | `-RecoveryExpr 0x14a141170 <col:16, col:19> '<dependent type>' contains-errors lvalue
|   |   |   |   |   `-DeclRefExpr 0x14a141138 <col:16> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   |   |   |   `-ImplicitCastExpr 0x14a1411d0 <col:25> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x14a141198 <col:25> 'int' lvalue Var 0x14a140be0 'i' 'int'
|   |   |   `-BinaryOperator 0x14a1415d8 <line:13:11, col:39> '<dependent type>' contains-errors '='
|   |   |     |-ArraySubscriptExpr 0x14a141528 <col:11, col:21> '<dependent type>' contains-errors lvalue
|   |   |     | |-ImplicitCastExpr 0x14a1414f8 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | | `-RecoveryExpr 0x14a141280 <col:11, col:14> '<dependent type>' contains-errors lvalue
|   |   |     | |   `-DeclRefExpr 0x14a141248 <col:11> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   |   |     | `-ImplicitCastExpr 0x14a141510 <col:20> 'int' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x14a1412a8 <col:20> 'int' lvalue Var 0x14a140be0 'i' 'int'
|   |   |     `-BinaryOperator 0x14a1415b8 <col:25, col:39> '<dependent type>' contains-errors '='
|   |   |       |-ArraySubscriptExpr 0x14a141578 <col:25, col:35> '<dependent type>' contains-errors lvalue
|   |   |       | |-ImplicitCastExpr 0x14a141548 <col:25, col:28> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | | `-RecoveryExpr 0x14a141350 <col:25, col:28> '<dependent type>' contains-errors lvalue
|   |   |       | |   `-DeclRefExpr 0x14a141318 <col:25> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   |   |       | `-ImplicitCastExpr 0x14a141560 <col:34> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x14a141378 <col:34> 'int' lvalue Var 0x14a140be0 'i' 'int'
|   |   |       `-RecoveryExpr 0x14a141598 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x14a1416d8 <line:15:7, col:20> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x14a141690 <col:7, col:10> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x14a141658 <col:7> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   |     `-IntegerLiteral 0x14a1416b8 <col:20> 'int' 0
|   |-UnaryOperator 0x14a141798 <line:18:3, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow
|   | `-RecoveryExpr 0x14a141770 <col:5, col:8> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14a141738 <col:5> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   |-BinaryOperator 0x14a1418a0 <line:21:3, col:19> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x14a141860 <col:3, col:15> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14a141830 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-RecoveryExpr 0x14a1417e8 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x14a1417b0 <col:3> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   | | `-ImplicitCastExpr 0x14a141848 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a141810 <col:14> 'int' lvalue ParmVar 0x14a1280d8 's' 'int'
|   | `-IntegerLiteral 0x14a141880 <col:19> 'int' 0
|   |-IfStmt 0x14a1433a8 <line:22:3, line:23:22>
|   | |-CallExpr 0x14a143160 <line:22:7, col:66> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14a1419d0 <col:7> 'int ()' Function 0x14a141918 'ACCEPTS_IN_CONTEXT' 'int ()'
|   | | |-CXXDependentScopeMemberExpr 0x14a1430c8 <col:26, col:39> '<dependent type>' contains-errors lvalue .context
|   | | | `-ArraySubscriptExpr 0x14a1430a8 <col:26, col:37> '<dependent type>' contains-errors lvalue
|   | | |   |-ImplicitCastExpr 0x14a143078 <col:26, col:29> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | `-RecoveryExpr 0x14a142e38 <col:26, col:29> '<dependent type>' contains-errors lvalue
|   | | |   |   `-DeclRefExpr 0x14a142e00 <col:26> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   | | |   `-ImplicitCastExpr 0x14a143090 <col:36> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x14a142e60 <col:36> 'int' lvalue ParmVar 0x14a1280d8 's' 'int'
|   | | |-RecoveryExpr 0x14a143110 <col:48> '<dependent type>' contains-errors lvalue
|   | | |-DeclRefExpr 0x14a142f30 <col:61> 'int' lvalue ParmVar 0x14a1280d8 's' 'int'
|   | | `-UnaryOperator 0x14a143148 <col:64, col:65> 'struct dfa' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x14a143130 <col:65> 'struct dfa *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x14a142f50 <col:65> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   | `-CompoundAssignOperator 0x14a143378 <line:23:5, col:22> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |-ArraySubscriptExpr 0x14a143338 <col:5, col:17> '<dependent type>' contains-errors lvalue
|   |   | |-ImplicitCastExpr 0x14a143308 <col:5, col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | `-RecoveryExpr 0x14a1431d8 <col:5, col:8> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x14a1431a0 <col:5> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   |   | `-ImplicitCastExpr 0x14a143320 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14a143200 <col:16> 'int' lvalue ParmVar 0x14a1280d8 's' 'int'
|   |   `-RecoveryExpr 0x14a143358 <col:22> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14a143db8 <line:30:3, col:23> 'int'
|   | |-ImplicitCastExpr 0x14a143da0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14a143cf0 <col:3> 'int ()' Function 0x14a143c38 'dfastate' 'int ()'
|   | |-ImplicitCastExpr 0x14a144a00 <col:12> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x14a143d10 <col:12> 'int' lvalue ParmVar 0x14a1280d8 's' 'int'
|   | |-ImplicitCastExpr 0x14a144a18 <col:15> 'struct dfa *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14a143d30 <col:15> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|   | `-ImplicitCastExpr 0x14a144a30 <col:18> 'int *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14a143d50 <col:18> 'int *' lvalue Var 0x14a140b48 'trans' 'int *'
|   `-IfStmt 0x14a145e18 <line:56:3, line:59:19> has_else
|     |-RecoveryExpr 0x14a145bc0 <line:56:7, col:22> '<dependent type>' contains-errors lvalue
|     | |-DeclRefExpr 0x14a145ab8 <col:7> 'int ()' Function 0x14a145a00 'ACCEPTING' 'int ()'
|     | |-DeclRefExpr 0x14a145ad8 <col:17> 'int' lvalue ParmVar 0x14a1280d8 's' 'int'
|     | `-UnaryOperator 0x14a145b30 <col:20, col:21> 'struct dfa' lvalue prefix '*' cannot overflow
|     |   `-ImplicitCastExpr 0x14a145b18 <col:21> 'struct dfa *' <LValueToRValue>
|     |     `-DeclRefExpr 0x14a145af8 <col:21> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|     |-BinaryOperator 0x14a145ce8 <line:57:5, col:19> '<dependent type>' contains-errors '='
|     | |-ArraySubscriptExpr 0x14a145ca8 <col:5, col:15> '<dependent type>' contains-errors lvalue
|     | | |-ImplicitCastExpr 0x14a145c78 <col:5, col:8> '<dependent type>' contains-errors <LValueToRValue>
|     | | | `-RecoveryExpr 0x14a145c30 <col:5, col:8> '<dependent type>' contains-errors lvalue
|     | | |   `-DeclRefExpr 0x14a145bf8 <col:5> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|     | | `-ImplicitCastExpr 0x14a145c90 <col:14> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x14a145c58 <col:14> 'int' lvalue ParmVar 0x14a1280d8 's' 'int'
|     | `-DeclRefExpr 0x14a145cc8 <col:19> 'int *' lvalue Var 0x14a140b48 'trans' 'int *'
|     `-BinaryOperator 0x14a145df8 <line:59:5, col:19> '<dependent type>' contains-errors '='
|       |-ArraySubscriptExpr 0x14a145db8 <col:5, col:15> '<dependent type>' contains-errors lvalue
|       | |-ImplicitCastExpr 0x14a145d88 <col:5, col:8> '<dependent type>' contains-errors <LValueToRValue>
|       | | `-RecoveryExpr 0x14a145d40 <col:5, col:8> '<dependent type>' contains-errors lvalue
|       | |   `-DeclRefExpr 0x14a145d08 <col:5> 'struct dfa *' lvalue ParmVar 0x14a1286c8 'd' 'struct dfa *'
|       | `-ImplicitCastExpr 0x14a145da0 <col:14> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x14a145d68 <col:14> 'int' lvalue ParmVar 0x14a1280d8 's' 'int'
|       `-DeclRefExpr 0x14a145dd8 <col:19> 'int *' lvalue Var 0x14a140b48 'trans' 'int *'
`-FunctionDecl 0x14a140e78 <line:11:11> col:11 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14a140f78 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14a140f20 <<invalid sloc>> Implicit 873
