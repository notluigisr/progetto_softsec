TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x12700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12700bc00 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x12700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x12700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x12700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x12700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x12700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x12700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x12700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x12700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x12700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x12700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x12700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x12700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x12700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-FunctionDecl 0x12700dfd8 <dataset_diviso_filec/func10743_nonvuln.c:1:1, line:61:1> line:1:1 invalid create_tmp_file 'int (const char *, char **, char **, int *)'
| |-ParmVarDecl 0x12700dcd8 <col:18, col:30> col:30 used template 'const char *'
| |-ParmVarDecl 0x12700dd88 <line:2:18, col:25> col:25 used r_bakfname 'char **'
| |-ParmVarDecl 0x12700de08 <col:37, col:44> col:44 used r_tmpfname 'char **'
| |-ParmVarDecl 0x12700ded8 <col:56, col:63> col:63 invalid r_fp 'int *'
| `-CompoundStmt 0x126925270 <line:3:1, line:61:1>
|   |-DeclStmt 0x12700e1b8 <line:4:3, col:28>
|   | |-VarDecl 0x12700e0b8 <col:3, col:9> col:9 used bakfname 'char *'
|   | `-VarDecl 0x12700e138 <col:3, col:20> col:20 used tmpfname 'char *'
|   |-BinaryOperator 0x12700e2d8 <line:7:3, col:17> 'char *' contains-errors '='
|   | |-UnaryOperator 0x12700e2a0 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12700e288 <col:4> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12700e1d0 <col:4> 'char **' lvalue ParmVar 0x12700dd88 'r_bakfname' 'char **'
|   | `-RecoveryExpr 0x12700e2b8 <col:17> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x127027c00 <line:8:3, col:17> 'char *' contains-errors '='
|   | |-UnaryOperator 0x12700e3c8 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12700e3b0 <col:4> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12700e2f8 <col:4> 'char **' lvalue ParmVar 0x12700de08 'r_tmpfname' 'char **'
|   | `-RecoveryExpr 0x12700e3e0 <col:17> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x127028558 <line:32:5, col:47> 'char *' '='
|   | |-DeclRefExpr 0x127027c20 <col:5> 'char *' lvalue Var 0x12700e0b8 'bakfname' 'char *'
|   | `-ImplicitCastExpr 0x127028540 <col:16, col:47> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x127028518 <col:16, col:47> 'int'
|   |     |-ImplicitCastExpr 0x127028500 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x127027da0 <col:16> 'int ()' Function 0x127027ce8 'xmalloc' 'int ()'
|   |     `-BinaryOperator 0x1270284b0 <col:25, col:46> 'unsigned long' '+'
|   |       |-CallExpr 0x127028438 <col:25, col:42> 'unsigned long'
|   |       | |-ImplicitCastExpr 0x127028420 <col:25> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x127028390 <col:25> 'unsigned long (const char *)' Function 0x127028220 'strlen' 'unsigned long (const char *)'
|   |       | `-ImplicitCastExpr 0x127028460 <col:33> 'const char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1270283b0 <col:33> 'const char *' lvalue ParmVar 0x12700dcd8 'template' 'const char *'
|   |       `-ImplicitCastExpr 0x127028498 <col:46> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x127028478 <col:46> 'int' 2
|   |-CallExpr 0x127028b70 <line:33:5, col:45> 'char *'
|   | |-ImplicitCastExpr 0x127028b58 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1270287a0 <col:5> 'char *(char *, const char *)' Function 0x1270285c0 'strcpy' 'char *(char *, const char *)'
|   | |-CallExpr 0x127028a78 <col:13, col:38> 'char *'
|   | | |-ImplicitCastExpr 0x127028a60 <col:13> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1270289a0 <col:13> 'char *(char *, const char *)' Function 0x1270287c0 'stpcpy' 'char *(char *, const char *)'
|   | | |-ImplicitCastExpr 0x127028aa8 <col:21> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1270289c0 <col:21> 'char *' lvalue Var 0x12700e0b8 'bakfname' 'char *'
|   | | `-ImplicitCastExpr 0x127028ac0 <col:30> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1270289e0 <col:30> 'const char *' lvalue ParmVar 0x12700dcd8 'template' 'const char *'
|   | `-ImplicitCastExpr 0x127028bb8 <col:40> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x127028ba0 <col:40> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x127028b20 <col:40> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x126923780 <line:35:5, col:47> 'char *' '='
|   | |-DeclRefExpr 0x127028bd0 <col:5> 'char *' lvalue Var 0x12700e138 'tmpfname' 'char *'
|   | `-ImplicitCastExpr 0x126923768 <col:16, col:47> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x126923740 <col:16, col:47> 'int'
|   |     |-ImplicitCastExpr 0x126923728 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x126923600 <col:16> 'int ()' Function 0x127027ce8 'xmalloc' 'int ()'
|   |     `-BinaryOperator 0x126923708 <col:25, col:46> 'unsigned long' '+'
|   |       |-CallExpr 0x126923690 <col:25, col:42> 'unsigned long'
|   |       | |-ImplicitCastExpr 0x126923678 <col:25> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x126923620 <col:25> 'unsigned long (const char *)' Function 0x127028220 'strlen' 'unsigned long (const char *)'
|   |       | `-ImplicitCastExpr 0x1269236b8 <col:33> 'const char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x126923640 <col:33> 'const char *' lvalue ParmVar 0x12700dcd8 'template' 'const char *'
|   |       `-ImplicitCastExpr 0x1269236f0 <col:46> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x1269236d0 <col:46> 'int' 5
|   |-IfStmt 0x126924098 <line:41:5, line:47:40> has_else
|   | |-CallExpr 0x126923b78 <line:41:9, col:38> 'int'
|   | | |-ImplicitCastExpr 0x126923b60 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x126923b20 <col:9> 'int ()' Function 0x126923a68 'is_secured_filename' 'int ()'
|   | | `-ImplicitCastExpr 0x126923ba0 <col:30> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x126923b40 <col:30> 'char *' lvalue Var 0x12700e138 'tmpfname' 'char *'
|   | |-CompoundStmt 0x126923e68 <line:42:7, line:45:7>
|   | | |-BinaryOperator 0x126923cc0 <line:43:9, col:17> '<dependent type>' contains-errors '='
|   | | | |-UnaryOperator 0x126923c88 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x126923c70 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   `-RecoveryExpr 0x126923bb8 <col:10> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x126923ca0 <col:17> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x126923e40 <line:44:9, col:33> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x126923dc0 <col:9> 'int ()' Function 0x126923d08 'gpg_err_set_errno' 'int ()'
|   | |   `-RecoveryExpr 0x126923e20 <col:28> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x126924078 <line:47:7, col:40> '<dependent type>' contains-errors '='
|   |   |-UnaryOperator 0x126923ec0 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x126923ea8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   `-RecoveryExpr 0x126923e88 <col:8> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x126924030 <col:15, col:40> 'int'
|   |     |-ImplicitCastExpr 0x126924018 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x126923fb8 <col:15> 'int ()' Function 0x126923f00 'iobuf_create' 'int ()'
|   |     |-ImplicitCastExpr 0x126924060 <col:29> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x126923fd8 <col:29> 'char *' lvalue Var 0x12700e138 'tmpfname' 'char *'
|   |     `-IntegerLiteral 0x126923ff8 <col:39> 'int' 1
|   |-CallExpr 0x126924160 <line:48:5, col:18> 'int'
|   | |-ImplicitCastExpr 0x126924148 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1269240c8 <col:5> 'int ()' Function 0x126923908 'umask' 'int ()'
|   | `-ImplicitCastExpr 0x126924188 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x126924128 <col:11> 'int ()' Function 0x126923908 'umask' 'int ()'
|   |-IfStmt 0x1269250d0 <line:49:5, line:56:7>
|   | |-UnaryOperator 0x1269241f0 <line:49:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-UnaryOperator 0x1269241d8 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x1269241c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x1269241a0 <col:11> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1269250a0 <line:50:7, line:56:7>
|   |   |-DeclStmt 0x1269243c0 <line:51:9, col:44>
|   |   | `-VarDecl 0x126924220 <col:9, col:43> col:13 used rc 'int' cinit
|   |   |   `-CallExpr 0x1269243a0 <col:18, col:43> 'int'
|   |   |     `-ImplicitCastExpr 0x126924388 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |       `-DeclRefExpr 0x126924368 <col:18> 'int ()' Function 0x1269242b0 'gpg_error_from_syserror' 'int ()'
|   |   |-CallExpr 0x126924f80 <line:53:9, col:24> 'int'
|   |   | |-ImplicitCastExpr 0x126924f68 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x126924f28 <col:9> 'int ()' Function 0x126924e70 'xfree' 'int ()'
|   |   | `-ImplicitCastExpr 0x126924fa8 <col:16> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x126924f48 <col:16> 'char *' lvalue Var 0x12700e138 'tmpfname' 'char *'
|   |   |-CallExpr 0x126925018 <line:54:9, col:24> 'int'
|   |   | |-ImplicitCastExpr 0x126925000 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x126924fc0 <col:9> 'int ()' Function 0x126924e70 'xfree' 'int ()'
|   |   | `-ImplicitCastExpr 0x126925040 <col:16> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x126924fe0 <col:16> 'char *' lvalue Var 0x12700e0b8 'bakfname' 'char *'
|   |   `-ReturnStmt 0x126925090 <line:55:2, col:9>
|   |     `-ImplicitCastExpr 0x126925078 <col:9> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x126925058 <col:9> 'int' lvalue Var 0x126924220 'rc' 'int'
|   |-BinaryOperator 0x126925178 <line:58:5, col:19> 'char *' '='
|   | |-UnaryOperator 0x126925128 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x126925110 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1269250f0 <col:6> 'char **' lvalue ParmVar 0x12700dd88 'r_bakfname' 'char **'
|   | `-ImplicitCastExpr 0x126925160 <col:19> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x126925140 <col:19> 'char *' lvalue Var 0x12700e0b8 'bakfname' 'char *'
|   |-BinaryOperator 0x126925220 <line:59:5, col:19> 'char *' '='
|   | |-UnaryOperator 0x1269251d0 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1269251b8 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x126925198 <col:6> 'char **' lvalue ParmVar 0x12700de08 'r_tmpfname' 'char **'
|   | `-ImplicitCastExpr 0x126925208 <col:19> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1269251e8 <col:19> 'char *' lvalue Var 0x12700e138 'tmpfname' 'char *'
|   `-ReturnStmt 0x126925260 <line:60:5, col:12>
|     `-IntegerLiteral 0x126925240 <col:12> 'int' 0
|-FunctionDecl 0x127028220 <line:32:25> col:25 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x127028320 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1270282c8 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1270285c0 <line:33:5> col:5 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1270286c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x127028728 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x127028668 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x1270287c0 <col:13> col:13 implicit used stpcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1270288c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x127028928 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x127028868 <<invalid sloc>> Implicit 948
`-FunctionDecl 0x126924cb8 <line:52:32> col:32 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x126924db8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x126924d60 <<invalid sloc>> Implicit 901
