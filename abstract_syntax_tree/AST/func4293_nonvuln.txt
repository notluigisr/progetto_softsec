TranslationUnitDecl 0x140855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1408564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x140855bd0 '__int128'
|-TypedefDecl 0x140856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x140855bf0 'unsigned __int128'
|-TypedefDecl 0x14100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14100bc00 'struct __NSConstantString_tag'
|   `-Record 0x140856580 '__NSConstantString_tag'
|-TypedefDecl 0x14100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140855d90 '__SVInt8_t'
|-TypedefDecl 0x14100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x140855db0 '__SVInt16_t'
|-TypedefDecl 0x14100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x140855dd0 '__SVInt32_t'
|-TypedefDecl 0x14100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x140855df0 '__SVInt64_t'
|-TypedefDecl 0x14100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140855e10 '__SVUint8_t'
|-TypedefDecl 0x14100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140855e30 '__SVUint16_t'
|-TypedefDecl 0x14100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140855e50 '__SVUint32_t'
|-TypedefDecl 0x14100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140855e70 '__SVUint64_t'
|-TypedefDecl 0x14100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140855e90 '__SVFloat16_t'
|-TypedefDecl 0x14100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x140855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x140855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x140855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x140855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x140855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x140855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1408560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1408560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1408560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1408561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1408561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1408561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1408562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1408562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1408562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140856390 '__SVBool_t'
|-TypedefDecl 0x14100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1408563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1408563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1408563f0 '__SVCount_t'
|-TypedefDecl 0x14100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14100dbb0 'char *'
|   `-BuiltinType 0x1408556b0 'char'
|-TypedefDecl 0x14100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14100dbb0 'char *'
|   `-BuiltinType 0x1408556b0 'char'
|-FunctionDecl 0x14100de38 <dataset_diviso_filec/func4293_nonvuln.c:1:1, line:37:1> line:1:1 CreateStagingDirectory 'int (const char *, const char *)'
| |-ParmVarDecl 0x14100dcd8 <line:2:4, col:16> col:16 used realRoot 'const char *'
| |-ParmVarDecl 0x14100dd58 <line:3:4, col:16> col:16 used apparentRoot 'const char *'
| `-CompoundStmt 0x14102b660 <line:4:1, line:37:1>
|   |-DeclStmt 0x14100e008 <line:5:4, col:23>
|   | `-VarDecl 0x14100df50 <col:4, col:19> col:10 used result 'char *' cinit
|   |   `-RecoveryExpr 0x14100dfe8 <col:19> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14100e0a0 <line:6:4, col:9>
|   | `-VarDecl 0x14100e038 <col:4, col:8> col:8 used i 'int'
|   |-ForStmt 0x14102b5c8 <line:8:4, line:34:4>
|   | |-BinaryOperator 0x14100e0f8 <line:8:9, col:13> 'int' '='
|   | | |-DeclRefExpr 0x14100e0b8 <col:9> 'int' lvalue Var 0x14100e038 'i' 'int'
|   | | `-IntegerLiteral 0x14100e0d8 <col:13> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14100e2b8 <col:16, col:36> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x14100e258 <col:16, col:20> 'int' '<'
|   | | | |-ImplicitCastExpr 0x14100e240 <col:16> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14100e118 <col:16> 'int' lvalue Var 0x14100e038 'i' 'int'
|   | | | `-IntegerLiteral 0x14100e138 <col:20> 'int' 10
|   | | `-BinaryOperator 0x14100e298 <col:26, col:36> 'int' contains-errors '=='
|   | |   |-DeclRefExpr 0x14100e190 <col:26> 'char *' contains-errors lvalue Var 0x14100df50 'result' 'char *'
|   | |   `-RecoveryExpr 0x14100e278 <col:36> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x14100e2f8 <col:42, col:43> 'int' postfix '++'
|   | | `-DeclRefExpr 0x14100e2d8 <col:42> 'int' lvalue Var 0x14100e038 'i' 'int'
|   | `-CompoundStmt 0x14102b588 <col:47, line:34:4>
|   |   |-DeclStmt 0x14100e3c8 <line:9:7, col:34>
|   |   | `-VarDecl 0x14100e328 <col:7, col:30> col:13 used realStagingDir 'char *' cinit
|   |   |   `-RecoveryExpr 0x14100e3a8 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-DeclStmt 0x141026aa0 <line:10:7, col:38>
|   |   | `-VarDecl 0x141026a00 <col:7, col:34> col:13 used apparentStagingDir 'char *' cinit
|   |   |   `-RecoveryExpr 0x141026a80 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x141026d60 <line:13:7, col:62> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x141026ab8 <col:7> 'char *' contains-errors lvalue Var 0x14100e328 'realStagingDir' 'char *'
|   |   | `-CallExpr 0x141026d28 <col:24, col:62> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x141026bf0 <col:24> 'int ()' Function 0x141026b38 'Str_SafeAsprintf' 'int ()'
|   |   |   |-RecoveryExpr 0x141026d08 <col:41> '<dependent type>' contains-errors lvalue
|   |   |   |-StringLiteral 0x141026c70 <col:47> 'char[4]' lvalue "STR"
|   |   |   `-DeclRefExpr 0x141026c90 <col:54> 'const char *' lvalue ParmVar 0x14100dcd8 'realRoot' 'const char *'
|   |   |-IfStmt 0x14102b1f0 <line:14:7, line:30:7> has_else
|   |   | |-BinaryOperator 0x141027030 <line:14:11, col:38> 'int' contains-errors '!='
|   |   | | |-CallExpr 0x141026fd0 <col:11, col:33> 'int' contains-errors
|   |   | | | |-ImplicitCastExpr 0x141026fb8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x141026e60 <col:11> 'int ()' Function 0x141026da8 'mkdtemp' 'int ()'
|   |   | | | `-ImplicitCastExpr 0x141026ff8 <col:19> 'char *' contains-errors <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x141026e80 <col:19> 'char *' contains-errors lvalue Var 0x14100e328 'realStagingDir' 'char *'
|   |   | | `-RecoveryExpr 0x141027010 <col:38> '<dependent type>' contains-errors lvalue
|   |   | |-CompoundStmt 0x14102b070 <col:44, line:28:7>
|   |   | | |-DeclStmt 0x141027868 <line:15:10, col:61>
|   |   | | | `-VarDecl 0x141027068 <col:10, col:60> col:16 used randomPart 'char *' cinit
|   |   | | |   `-BinaryOperator 0x141027848 <col:29, col:60> 'char *' contains-errors '+'
|   |   | | |     |-CallExpr 0x1410277c8 <col:29, col:56> 'char *' contains-errors
|   |   | | |     | |-ImplicitCastExpr 0x1410277b0 <col:29> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | | |     | | `-DeclRefExpr 0x141027710 <col:29> 'char *(const char *, int)' Function 0x141027530 'strrchr' 'char *(const char *, int)'
|   |   | | |     | |-ImplicitCastExpr 0x141027810 <col:37> 'const char *' contains-errors <NoOp>
|   |   | | |     | | `-ImplicitCastExpr 0x1410277f8 <col:37> 'char *' contains-errors <LValueToRValue>
|   |   | | |     | |   `-DeclRefExpr 0x141027730 <col:37> 'char *' contains-errors lvalue Var 0x14100e328 'realStagingDir' 'char *'
|   |   | | |     | `-CharacterLiteral 0x141027750 <col:53> 'int' 47
|   |   | | |     `-IntegerLiteral 0x141027828 <col:60> 'int' 1
|   |   | | |-CallExpr 0x14102a650 <line:16:10, col:36> 'int' contains-errors
|   |   | | | |-ImplicitCastExpr 0x14102a638 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x141027960 <col:10> 'int ()' Function 0x1410278a8 'VERIFY' 'int ()'
|   |   | | | `-BinaryOperator 0x14102a618 <col:17, col:32> 'int' contains-errors '!='
|   |   | | |   |-ImplicitCastExpr 0x14102a600 <col:17, col:18> 'int' contains-errors <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x1410279e8 <col:17, col:18> 'char' contains-errors <LValueToRValue>
|   |   | | |   |   `-UnaryOperator 0x1410279b8 <col:17, col:18> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   | | |   |     `-ImplicitCastExpr 0x1410279a0 <col:18> 'char *' contains-errors <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x141027980 <col:18> 'char *' contains-errors lvalue Var 0x141027068 'randomPart' 'char *'
|   |   | | |   `-CharacterLiteral 0x1410279d0 <col:32> 'int' 0
|   |   | | |-BinaryOperator 0x14102a868 <line:18:10, col:70> 'char *' contains-errors '='
|   |   | | | |-DeclRefExpr 0x14102a678 <col:10> 'char *' contains-errors lvalue Var 0x141026a00 'apparentStagingDir' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14102a850 <col:31, col:70> 'char *' contains-errors <IntegralToPointer>
|   |   | | |   `-CallExpr 0x14102a7f0 <col:31, col:70> 'int' contains-errors
|   |   | | |     |-ImplicitCastExpr 0x14102a7d8 <col:31> 'int (*)()' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x14102a778 <col:31> 'int ()' Function 0x14102a6c0 'Unicode_Append' 'int ()'
|   |   | | |     |-ImplicitCastExpr 0x14102a820 <col:46> 'const char *' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x14102a798 <col:46> 'const char *' lvalue ParmVar 0x14100dd58 'apparentRoot' 'const char *'
|   |   | | |     `-ImplicitCastExpr 0x14102a838 <col:60> 'char *' contains-errors <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x14102a7b8 <col:60> 'char *' contains-errors lvalue Var 0x141027068 'randomPart' 'char *'
|   |   | | `-IfStmt 0x14102b040 <line:20:10, line:27:10> has_else
|   |   | |   |-BinaryOperator 0x14102aa60 <line:20:14, col:67> 'int' contains-errors '=='
|   |   | |   | |-CallExpr 0x14102a9e0 <col:14, col:62> 'int' contains-errors
|   |   | |   | | |-ImplicitCastExpr 0x14102a9c8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x14102a968 <col:14> 'int ()' Function 0x14102a8b0 'Posix_Symlink' 'int ()'
|   |   | |   | | |-ImplicitCastExpr 0x14102aa10 <col:28> 'char *' contains-errors <LValueToRValue>
|   |   | |   | | | `-DeclRefExpr 0x14102a988 <col:28> 'char *' contains-errors lvalue Var 0x14100e328 'realStagingDir' 'char *'
|   |   | |   | | `-ImplicitCastExpr 0x14102aa28 <col:44> 'char *' contains-errors <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x14102a9a8 <col:44> 'char *' contains-errors lvalue Var 0x141026a00 'apparentStagingDir' 'char *'
|   |   | |   | `-IntegerLiteral 0x14102aa40 <col:67> 'int' 0
|   |   | |   |-CompoundStmt 0x14102ab90 <col:70, line:24:10>
|   |   | |   | |-BinaryOperator 0x14102aad8 <line:22:13, col:22> 'char *' contains-errors '='
|   |   | |   | | |-DeclRefExpr 0x14102aa80 <col:13> 'char *' contains-errors lvalue Var 0x14100df50 'result' 'char *'
|   |   | |   | | `-ImplicitCastExpr 0x14102aac0 <col:22> 'char *' contains-errors <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x14102aaa0 <col:22> 'char *' contains-errors lvalue Var 0x141026a00 'apparentStagingDir' 'char *'
|   |   | |   | `-BinaryOperator 0x14102ab70 <line:23:13, col:34> 'char *' contains-errors '='
|   |   | |   |   |-DeclRefExpr 0x14102aaf8 <col:13> 'char *' contains-errors lvalue Var 0x141026a00 'apparentStagingDir' 'char *'
|   |   | |   |   `-RecoveryExpr 0x14102ab50 <col:34> '<dependent type>' contains-errors lvalue
|   |   | |   `-CompoundStmt 0x14102b020 <line:24:17, line:27:10>
|   |   | |     |-CallExpr 0x14102ae40 <line:25:13, col:63> 'int' contains-errors
|   |   | |     | |-ImplicitCastExpr 0x14102ae28 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | | `-DeclRefExpr 0x14102ac90 <col:13> 'int ()' Function 0x14102abd8 'Warning' 'int ()'
|   |   | |     | |-ImplicitCastExpr 0x14102ae78 <col:21> 'char *' <ArrayToPointerDecay>
|   |   | |     | | `-StringLiteral 0x14102acb0 <col:21> 'char[4]' lvalue "STR"
|   |   | |     | |-ImplicitCastExpr 0x14102ae90 <col:28> 'char *' contains-errors <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x14102acd0 <col:28> 'char *' contains-errors lvalue Var 0x141026a00 'apparentStagingDir' 'char *'
|   |   | |     | `-CallExpr 0x14102ae08 <col:48, col:62> 'int'
|   |   | |     |   `-ImplicitCastExpr 0x14102adf0 <col:48> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     |     `-DeclRefExpr 0x14102add0 <col:48> 'int ()' Function 0x14102ad18 'Err_ErrString' 'int ()'
|   |   | |     `-CallExpr 0x14102afe0 <line:26:13, col:39> 'int' contains-errors
|   |   | |       |-ImplicitCastExpr 0x14102afc8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x14102af88 <col:13> 'int ()' Function 0x14102aed0 'Posix_Rmdir' 'int ()'
|   |   | |       `-ImplicitCastExpr 0x14102b008 <col:25> 'char *' contains-errors <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x14102afa8 <col:25> 'char *' contains-errors lvalue Var 0x14100e328 'realStagingDir' 'char *'
|   |   | `-CompoundStmt 0x14102b1d8 <line:28:14, line:30:7>
|   |   |   `-CallExpr 0x14102b170 <line:29:10, col:56> 'int' contains-errors
|   |   |     |-ImplicitCastExpr 0x14102b158 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x14102b0a0 <col:10> 'int ()' Function 0x14102abd8 'Warning' 'int ()'
|   |   |     |-ImplicitCastExpr 0x14102b1a8 <col:18> 'char *' <ArrayToPointerDecay>
|   |   |     | `-StringLiteral 0x14102b0c0 <col:18> 'char[4]' lvalue "STR"
|   |   |     |-ImplicitCastExpr 0x14102b1c0 <col:25> 'char *' contains-errors <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x14102b0e0 <col:25> 'char *' contains-errors lvalue Var 0x14100e328 'realStagingDir' 'char *'
|   |   |     `-CallExpr 0x14102b138 <col:41, col:55> 'int'
|   |   |       `-ImplicitCastExpr 0x14102b120 <col:41> 'int (*)()' <FunctionToPointerDecay>
|   |   |         `-DeclRefExpr 0x14102b100 <col:41> 'int ()' Function 0x14102ad18 'Err_ErrString' 'int ()'
|   |   |-CallExpr 0x14102b468 <line:32:7, col:26> 'void' contains-errors
|   |   | |-ImplicitCastExpr 0x14102b450 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14102b3c8 <col:7> 'void (void *)' Function 0x14102b258 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x14102b4a8 <col:12> 'void *' contains-errors <BitCast>
|   |   |   `-ImplicitCastExpr 0x14102b490 <col:12> 'char *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14102b3e8 <col:12> 'char *' contains-errors lvalue Var 0x14100e328 'realStagingDir' 'char *'
|   |   `-CallExpr 0x14102b530 <line:33:7, col:30> 'void' contains-errors
|   |     |-ImplicitCastExpr 0x14102b518 <col:7> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14102b4c0 <col:7> 'void (void *)' Function 0x14102b258 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x14102b570 <col:12> 'void *' contains-errors <BitCast>
|   |       `-ImplicitCastExpr 0x14102b558 <col:12> 'char *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x14102b4e0 <col:12> 'char *' contains-errors lvalue Var 0x141026a00 'apparentStagingDir' 'char *'
|   `-ReturnStmt 0x14102b650 <line:36:4, col:11>
|     `-ImplicitCastExpr 0x14102b638 <col:11> 'int' contains-errors <PointerToIntegral>
|       `-ImplicitCastExpr 0x14102b620 <col:11> 'char *' contains-errors <LValueToRValue>
|         `-DeclRefExpr 0x14102b600 <col:11> 'char *' contains-errors lvalue Var 0x14100df50 'result' 'char *'
|-FunctionDecl 0x141027530 <line:15:29> col:29 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x141027630 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x141027698 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1410275d8 <<invalid sloc>> Implicit 896
`-FunctionDecl 0x14102b258 <line:32:7> col:7 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14102b358 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14102b300 <<invalid sloc>> Implicit 873
