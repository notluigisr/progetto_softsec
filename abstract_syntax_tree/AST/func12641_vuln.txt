TranslationUnitDecl 0x129855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1298564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129855bd0 '__int128'
|-TypedefDecl 0x129856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129855bf0 'unsigned __int128'
|-TypedefDecl 0x129926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x129926000 'struct __NSConstantString_tag'
|   `-Record 0x129856580 '__NSConstantString_tag'
|-TypedefDecl 0x129926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129855d90 '__SVInt8_t'
|-TypedefDecl 0x129926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129855db0 '__SVInt16_t'
|-TypedefDecl 0x129926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129855dd0 '__SVInt32_t'
|-TypedefDecl 0x1299263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129855df0 '__SVInt64_t'
|-TypedefDecl 0x129926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129855e10 '__SVUint8_t'
|-TypedefDecl 0x1299264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129855e30 '__SVUint16_t'
|-TypedefDecl 0x129926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129855e50 '__SVUint32_t'
|-TypedefDecl 0x129926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129855e70 '__SVUint64_t'
|-TypedefDecl 0x1299265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129855e90 '__SVFloat16_t'
|-TypedefDecl 0x129926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1299266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129855ed0 '__SVFloat64_t'
|-TypedefDecl 0x129926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x129926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1299267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x129926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1299268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x129926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x129926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1299269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x129926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x129926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x129926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x129926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x129926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x129926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129856090 '__clang_svint8x3_t'
|-TypedefDecl 0x129926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1298560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x129926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1298560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x129926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1298560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x129926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x129926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x129926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x129926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x129926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x129927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1298561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x129927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1298561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1299278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1298561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x129927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1299279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129856230 '__clang_svint16x4_t'
|-TypedefDecl 0x129927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129856250 '__clang_svint32x4_t'
|-TypedefDecl 0x129927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129856270 '__clang_svint64x4_t'
|-TypedefDecl 0x129927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x129927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1298562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x129927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1298562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x129927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1298562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x129927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x129927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x129927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x129927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x129927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129856390 '__SVBool_t'
|-TypedefDecl 0x129927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1298563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x129927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1298563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x129927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1298563f0 '__SVCount_t'
|-TypedefDecl 0x129927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x129927fb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-TypedefDecl 0x129928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x129927fb0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-FunctionDecl 0x1299418d8 <dataset_diviso_filec/func12641_vuln.c:1:1, line:52:1> line:1:1 invalid parse_device 'int (int *, struct archive *, char *)'
| |-ParmVarDecl 0x129928128 <col:14, col:21> col:21 invalid pdev 'int *'
| |-ParmVarDecl 0x129928718 <col:27, col:43> col:43 used a 'struct archive *'
| |-ParmVarDecl 0x129928798 <col:46, col:52> col:52 used val 'char *'
| `-CompoundStmt 0x1299469d8 <line:2:1, line:52:1>
|   |-DeclStmt 0x129941a30 <line:4:2, col:38>
|   | `-VarDecl 0x1299419c8 <col:2, col:16> col:16 referenced invalid numbers 'unsigned long'
|   |-DeclStmt 0x129941b60 <line:5:2, col:15>
|   | |-VarDecl 0x129941a60 <col:2, col:8> col:8 used p 'char *'
|   | `-VarDecl 0x129941ae0 <col:2, col:12> col:12 used dev 'char *'
|   |-DeclStmt 0x129941bf8 <line:6:2, col:10>
|   | `-VarDecl 0x129941b90 <col:2, col:6> col:6 used argc 'int'
|   |-DeclStmt 0x129941ce0 <line:9:2, col:26>
|   | `-VarDecl 0x129941c40 <col:2, col:22> col:14 used error 'const char *' cinit
|   |   `-RecoveryExpr 0x129941cc0 <col:22> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1299420a0 <line:11:2, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x129941f98 <col:2> 'void *(void *, int, unsigned long)' Function 0x129941d48 'memset' 'void *(void *, int, unsigned long)'
|   | |-RecoveryExpr 0x129941fb8 <col:9> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x129941fd8 <col:15> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x129942068 <col:18, col:30> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x129942048 <col:24, col:30> '<dependent type>' contains-errors
|   |     `-UnaryOperator 0x129942030 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x129942018 <col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x129941ff8 <col:26> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x129946958 <line:12:2, line:48:2> has_else
|     |-BinaryOperator 0x129942670 <line:12:6, col:34> 'int' contains-errors '!='
|     | |-ParenExpr 0x129942630 <col:6, col:29> 'char *'
|     | | `-BinaryOperator 0x129942610 <col:7, col:28> 'char *' '='
|     | |   |-DeclRefExpr 0x1299420d8 <col:7> 'char *' lvalue Var 0x129941ae0 'dev' 'char *'
|     | |   `-CallExpr 0x1299425b0 <col:13, col:28> 'char *'
|     | |     |-ImplicitCastExpr 0x129942598 <col:13> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|     | |     | `-DeclRefExpr 0x129942320 <col:13> 'char *(const char *, int)' Function 0x129942140 'strchr' 'char *(const char *, int)'
|     | |     |-ImplicitCastExpr 0x1299425f8 <col:20> 'const char *' <NoOp>
|     | |     | `-ImplicitCastExpr 0x1299425e0 <col:20> 'char *' <LValueToRValue>
|     | |     |   `-DeclRefExpr 0x129942340 <col:20> 'char *' lvalue ParmVar 0x129928798 'val' 'char *'
|     | |     `-CharacterLiteral 0x129942360 <col:25> 'int' 44
|     | `-RecoveryExpr 0x129942650 <col:34> '<dependent type>' contains-errors lvalue
|     |-CompoundStmt 0x129946908 <col:40, line:45:2>
|     | |-BinaryOperator 0x129942710 <line:14:3, col:12> 'char' '='
|     | | |-UnaryOperator 0x1299426c8 <col:3, col:7> 'char' lvalue prefix '*' cannot overflow
|     | | | `-UnaryOperator 0x1299426b0 <col:4, col:7> 'char *' postfix '++'
|     | | |   `-DeclRefExpr 0x129942690 <col:4> 'char *' lvalue Var 0x129941ae0 'dev' 'char *'
|     | | `-ImplicitCastExpr 0x1299426f8 <col:12> 'char' <IntegralCast>
|     | |   `-CharacterLiteral 0x1299426e0 <col:12> 'int' 0
|     | |-IfStmt 0x129943ea8 <line:15:3, line:19:3>
|     | | |-RecoveryExpr 0x129943bc0 <line:15:7, col:34> '_Bool' contains-errors
|     | | `-CompoundStmt 0x129943e88 <col:40, line:19:3>
|     | |   |-CallExpr 0x129943e00 <line:16:4, line:17:18> '<dependent type>' contains-errors
|     | |   | |-DeclRefExpr 0x129943cc0 <line:16:4> 'int ()' Function 0x129943c08 'archive_set_error' 'int ()'
|     | |   | |-DeclRefExpr 0x129943ce0 <col:22> 'struct archive *' lvalue ParmVar 0x129928718 'a' 'struct archive *'
|     | |   | |-RecoveryExpr 0x129943de0 <col:25> '<dependent type>' contains-errors lvalue
|     | |   | |-StringLiteral 0x129943d60 <line:17:8> 'char[4]' lvalue "STR"
|     | |   | `-DeclRefExpr 0x129943d80 <col:15> 'char *' lvalue ParmVar 0x129928798 'val' 'char *'
|     | |   `-ReturnStmt 0x129943e78 <line:18:4, col:11>
|     | |     `-RecoveryExpr 0x129943e58 <col:11> '<dependent type>' contains-errors lvalue
|     | |-BinaryOperator 0x129943f08 <line:20:3, col:10> 'int' '='
|     | | |-DeclRefExpr 0x129943ec8 <col:3> 'int' lvalue Var 0x129941b90 'argc' 'int'
|     | | `-IntegerLiteral 0x129943ee8 <col:10> 'int' 0
|     | |-WhileStmt 0x129944848 <line:21:3, line:33:3>
|     | | |-BinaryOperator 0x129944358 <line:21:10, col:42> 'int' contains-errors '!='
|     | | | |-ParenExpr 0x129944318 <col:10, col:37> 'char *'
|     | | | | `-BinaryOperator 0x1299442f8 <col:11, col:36> 'char *' '='
|     | | | |   |-DeclRefExpr 0x129943f28 <col:11> 'char *' lvalue Var 0x129941a60 'p' 'char *'
|     | | | |   `-ImplicitCastExpr 0x1299442e0 <col:15, col:36> 'char *' <IntegralToPointer>
|     | | | |     `-CallExpr 0x129944298 <col:15, col:36> 'int'
|     | | | |       |-ImplicitCastExpr 0x129944280 <col:15> 'int (*)()' <FunctionToPointerDecay>
|     | | | |       | `-DeclRefExpr 0x129944028 <col:15> 'int ()' Function 0x129943f70 'la_strsep' 'int ()'
|     | | | |       |-UnaryOperator 0x1299440a0 <col:25, col:26> 'char **' prefix '&' cannot overflow
|     | | | |       | `-DeclRefExpr 0x129944048 <col:26> 'char *' lvalue Var 0x129941ae0 'dev' 'char *'
|     | | | |       `-ImplicitCastExpr 0x1299442c8 <col:31> 'char *' <ArrayToPointerDecay>
|     | | | |         `-StringLiteral 0x1299440b8 <col:31> 'char[4]' lvalue "STR"
|     | | | `-RecoveryExpr 0x129944338 <col:42> '<dependent type>' contains-errors lvalue
|     | | `-CompoundStmt 0x129944820 <col:48, line:33:3>
|     | |   |-IfStmt 0x1299444a0 <line:22:4, line:26:4>
|     | |   | |-BinaryOperator 0x129944410 <line:22:8, col:14> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x1299443f8 <col:8, col:9> 'int' <IntegralCast>
|     | |   | | | `-ImplicitCastExpr 0x1299443e0 <col:8, col:9> 'char' <LValueToRValue>
|     | |   | | |   `-UnaryOperator 0x1299443b0 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|     | |   | | |     `-ImplicitCastExpr 0x129944398 <col:9> 'char *' <LValueToRValue>
|     | |   | | |       `-DeclRefExpr 0x129944378 <col:9> 'char *' lvalue Var 0x129941a60 'p' 'char *'
|     | |   | | `-CharacterLiteral 0x1299443c8 <col:14> 'int' 0
|     | |   | `-CompoundStmt 0x129944490 <col:20, line:26:4>
|     | |   |-BinaryOperator 0x129944730 <line:27:4, col:50> '<dependent type>' contains-errors '='
|     | |   | |-ArraySubscriptExpr 0x129944558 <col:4, col:18> '<dependent type>' contains-errors lvalue
|     | |   | | |-ImplicitCastExpr 0x129944540 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|     | |   | | | `-RecoveryExpr 0x1299444e0 <col:4> '<dependent type>' contains-errors lvalue
|     | |   | | |   `-DeclRefExpr 0x1299444c0 <col:4> 'unsigned long' lvalue Var 0x1299419c8 'numbers' 'unsigned long'
|     | |   | | `-UnaryOperator 0x129944528 <col:12, col:16> 'int' postfix '++'
|     | |   | |   `-DeclRefExpr 0x129944508 <col:12> 'int' lvalue Var 0x129941b90 'argc' 'int'
|     | |   | `-CStyleCastExpr 0x129944708 <col:22, col:50> 'unsigned long' <IntegralCast>
|     | |   |   `-CallExpr 0x1299446c8 <col:37, col:50> 'int'
|     | |   |     |-ImplicitCastExpr 0x1299446b0 <col:37> 'int (*)()' <FunctionToPointerDecay>
|     | |   |     | `-DeclRefExpr 0x129944658 <col:37> 'int ()' Function 0x1299445a0 'mtree_atol' 'int ()'
|     | |   |     `-UnaryOperator 0x129944698 <col:48, col:49> 'char **' prefix '&' cannot overflow
|     | |   |       `-DeclRefExpr 0x129944678 <col:49> 'char *' lvalue Var 0x129941a60 'p' 'char *'
|     | |   `-IfStmt 0x129944800 <line:28:4, line:32:4>
|     | |     |-RecoveryExpr 0x129944770 <line:28:8, col:15> '_Bool' contains-errors
|     | |     `-CompoundStmt 0x1299447f0 <col:30, line:32:4>
|     | |-IfStmt 0x129944950 <line:34:3, line:38:3>
|     | | |-BinaryOperator 0x1299448c0 <line:34:7, col:14> 'int' '<'
|     | | | |-ImplicitCastExpr 0x1299448a8 <col:7> 'int' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x129944868 <col:7> 'int' lvalue Var 0x129941b90 'argc' 'int'
|     | | | `-IntegerLiteral 0x129944888 <col:14> 'int' 2
|     | | `-CompoundStmt 0x129944940 <col:17, line:38:3>
|     | `-IfStmt 0x1299468e8 <line:40:3, line:44:3>
|     |   |-RecoveryExpr 0x129946838 <line:40:7, col:16> '_Bool' contains-errors
|     |   `-CompoundStmt 0x1299468d8 <col:22, line:44:3>
|     `-CompoundStmt 0x129946948 <line:45:9, line:48:2>
|-FunctionDecl 0x129941d48 <line:11:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x129941e48 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x129941eb0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x129941f18 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x129941df0 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x129942140 <line:12:13> col:13 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x129942240 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1299422a8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1299421e8 <<invalid sloc>> Implicit 893
