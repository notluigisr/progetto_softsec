TranslationUnitDecl 0x13b839408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b83a2b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b8399d0 '__int128'
|-TypedefDecl 0x13b83a328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b8399f0 'unsigned __int128'
|-TypedefDecl 0x13b90a030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b909e00 'struct __NSConstantString_tag'
|   `-Record 0x13b83a380 '__NSConstantString_tag'
|-TypedefDecl 0x13b90a098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b839b90 '__SVInt8_t'
|-TypedefDecl 0x13b90a100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b839bb0 '__SVInt16_t'
|-TypedefDecl 0x13b90a168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b839bd0 '__SVInt32_t'
|-TypedefDecl 0x13b90a1d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b839bf0 '__SVInt64_t'
|-TypedefDecl 0x13b90a238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b839c10 '__SVUint8_t'
|-TypedefDecl 0x13b90a2a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b839c30 '__SVUint16_t'
|-TypedefDecl 0x13b90a308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b839c50 '__SVUint32_t'
|-TypedefDecl 0x13b90a370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b839c70 '__SVUint64_t'
|-TypedefDecl 0x13b90a3d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b839c90 '__SVFloat16_t'
|-TypedefDecl 0x13b90a440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b839cb0 '__SVFloat32_t'
|-TypedefDecl 0x13b90a4a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b839cd0 '__SVFloat64_t'
|-TypedefDecl 0x13b90a510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b839cf0 '__SVBfloat16_t'
|-TypedefDecl 0x13b90a578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b839d10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b90a5e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b839d30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b90a648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b839d50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b90a6b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b839d70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b90a718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b839d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b90a780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b839db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b90a7e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b839dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b90a850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b839df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b90a8b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b839e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b90a920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b839e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b90a988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b839e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b90a9f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b839e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b90aa58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b839e90 '__clang_svint8x3_t'
|-TypedefDecl 0x13b90aac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b839eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b90ab28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b839ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b90ab90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b839ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b90abf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b839f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b90ac60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b839f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b90acc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b839f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b90ad30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b839f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b90ad98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b839f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b90b600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b839fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b90b668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b839fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b90b6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b839ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b90b738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b83a010 '__clang_svint8x4_t'
|-TypedefDecl 0x13b90b7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b83a030 '__clang_svint16x4_t'
|-TypedefDecl 0x13b90b808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b83a050 '__clang_svint32x4_t'
|-TypedefDecl 0x13b90b870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b83a070 '__clang_svint64x4_t'
|-TypedefDecl 0x13b90b8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b83a090 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b90b940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b83a0b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b90b9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b83a0d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b90ba10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b83a0f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b90ba78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b83a110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b90bae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b83a130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b90bb48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b83a150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b90bbb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b83a170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b90bc18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b83a190 '__SVBool_t'
|-TypedefDecl 0x13b90bc80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b83a1b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b90bce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b83a1d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b90bd50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b83a1f0 '__SVCount_t'
|-TypedefDecl 0x13b90bdf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b90bdb0 'char *'
|   `-BuiltinType 0x13b8394b0 'char'
|-TypedefDecl 0x13b90be68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b90bdb0 'char *'
|   `-BuiltinType 0x13b8394b0 'char'
|-FunctionDecl 0x13b90c1e8 <dataset_diviso_filec/func24734_vuln.c:1:1, line:52:1> line:1:7 suhosin_encrypt_single_cookie 'char *(char *, int, char *, int, char *)'
| |-ParmVarDecl 0x13b90bed8 <col:37, col:43> col:43 used name 'char *'
| |-ParmVarDecl 0x13b90bf58 <col:49, col:53> col:53 used name_len 'int'
| |-ParmVarDecl 0x13b90bfd8 <col:63, col:69> col:69 used value 'char *'
| |-ParmVarDecl 0x13b90c058 <col:76, col:80> col:80 used value_len 'int'
| |-ParmVarDecl 0x13b90c0d8 <col:91, col:97> col:97 used key 'char *'
| `-CompoundStmt 0x13c809a38 <line:2:1, line:52:1>
|   |-DeclStmt 0x13b90c408 <line:3:2, col:19>
|   | `-VarDecl 0x13b90c3a0 <col:2, col:18> col:7 used buffer 'char[4096]'
|   |-DeclStmt 0x13b90c4e8 <line:4:5, col:23>
|   | `-VarDecl 0x13b90c480 <col:5, col:22> col:10 used buffer2 'char[4096]'
|   |-DeclStmt 0x13b9249c8 <line:5:2, col:49>
|   | |-VarDecl 0x13b90c518 <col:2, col:14> col:8 used buf 'char *' cinit
|   | | `-ImplicitCastExpr 0x13b90c5a0 <col:14> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x13b90c580 <col:14> 'char[4096]' lvalue Var 0x13b90c3a0 'buffer' 'char[4096]'
|   | |-VarDecl 0x13b924800 <col:2, col:30> col:23 used buf2 'char *' cinit
|   | | `-ImplicitCastExpr 0x13b924888 <col:30> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x13b924868 <col:30> 'char[4096]' lvalue Var 0x13b90c480 'buffer2' 'char[4096]'
|   | |-VarDecl 0x13b9248b8 <col:2, col:40> col:40 used d 'char *'
|   | `-VarDecl 0x13b924938 <col:2, col:44> col:44 used d_url 'char *'
|   |-DeclStmt 0x13b924a60 <line:6:5, col:10>
|   | `-VarDecl 0x13b9249f8 <col:5, col:9> col:9 used l 'int'
|   |-IfStmt 0x13b927420 <line:8:2, line:13:2> has_else
|   | |-BinaryOperator 0x13b924b80 <line:8:6, col:32> 'int' '>'
|   | | |-ImplicitCastExpr 0x13b924b68 <col:6> 'unsigned long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x13b924b50 <col:6> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13b924a78 <col:6> 'int' lvalue ParmVar 0x13b90bf58 'name_len' 'int'
|   | | `-BinaryOperator 0x13b924b30 <col:17, col:32> 'unsigned long' '-'
|   | |   |-UnaryExprOrTypeTraitExpr 0x13b924ad8 <col:17, col:30> 'unsigned long' sizeof
|   | |   | `-ParenExpr 0x13b924ab8 <col:23, col:30> 'char[4096]' lvalue
|   | |   |   `-DeclRefExpr 0x13b924a98 <col:24> 'char[4096]' lvalue Var 0x13b90c3a0 'buffer' 'char[4096]' non_odr_use_unevaluated
|   | |   `-ImplicitCastExpr 0x13b924b18 <col:32> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x13b924af8 <col:32> 'int' 2
|   | |-CompoundStmt 0x13b925250 <col:35, line:10:2>
|   | | `-BinaryOperator 0x13b925230 <line:9:3, col:32> 'char *' '='
|   | |   |-DeclRefExpr 0x13b924ba0 <col:3> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   | |   `-ImplicitCastExpr 0x13b924df8 <col:9, col:32> 'char *' <IntegralToPointer>
|   | |     `-CallExpr 0x13b924d98 <col:9, col:32> 'int'
|   | |       |-ImplicitCastExpr 0x13b924d80 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x13b924cf0 <col:9> 'int ()' Function 0x13b924c38 'estrndup' 'int ()'
|   | |       |-ImplicitCastExpr 0x13b924dc8 <col:18> 'char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x13b924d10 <col:18> 'char *' lvalue ParmVar 0x13b90bed8 'name' 'char *'
|   | |       `-ImplicitCastExpr 0x13b924de0 <col:24> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x13b924d30 <col:24> 'int' lvalue ParmVar 0x13b90bf58 'name_len' 'int'
|   | `-CompoundStmt 0x13b927400 <line:10:9, line:13:2>
|   |   |-CallExpr 0x13b925648 <line:11:3, col:29> 'void *'
|   |   | |-ImplicitCastExpr 0x13b925630 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13b925538 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13b9252e8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x13b925698 <col:10> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x13b925680 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b925558 <col:10> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   |   | |-ImplicitCastExpr 0x13b9256c8 <col:15> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x13b9256b0 <col:15> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b925578 <col:15> 'char *' lvalue ParmVar 0x13b90bed8 'name' 'char *'
|   |   | `-ImplicitCastExpr 0x13b9256f8 <col:21> 'unsigned long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x13b9256e0 <col:21> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13b925598 <col:21> 'int' lvalue ParmVar 0x13b90bf58 'name_len' 'int'
|   |   `-BinaryOperator 0x13b9257d8 <line:12:3, col:19> 'char' '='
|   |     |-ArraySubscriptExpr 0x13b925780 <col:3, col:15> 'char' lvalue
|   |     | |-ImplicitCastExpr 0x13b925750 <col:3> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13b925710 <col:3> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   |     | `-ImplicitCastExpr 0x13b925768 <col:7> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x13b925730 <col:7> 'int' lvalue ParmVar 0x13b90bf58 'name_len' 'int'
|   |     `-ImplicitCastExpr 0x13b9257c0 <col:19> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x13b9257a0 <col:19> 'int' 0
|   |-BinaryOperator 0x13b927628 <line:15:2, col:41> 'int' '='
|   | |-DeclRefExpr 0x13b927450 <col:2> 'int' lvalue ParmVar 0x13b90bf58 'name_len' 'int'
|   | `-CallExpr 0x13b9275c8 <col:13, col:41> 'int'
|   |   |-ImplicitCastExpr 0x13b9275b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13b927550 <col:13> 'int ()' Function 0x13b927498 'php_url_decode' 'int ()'
|   |   |-ImplicitCastExpr 0x13b9275f8 <col:28> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13b927570 <col:28> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   |   `-ImplicitCastExpr 0x13b927610 <col:33> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13b927590 <col:33> 'int' lvalue ParmVar 0x13b90bf58 'name_len' 'int'
|   |-CallExpr 0x13b927780 <line:16:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x13b927768 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13b927728 <col:5> 'int ()' Function 0x13b927670 'normalize_varname' 'int ()'
|   | `-ImplicitCastExpr 0x13b9277a8 <col:23> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13b927748 <col:23> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   |-BinaryOperator 0x13b927a98 <line:17:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x13b9277c0 <col:5> 'int' lvalue ParmVar 0x13b90bf58 'name_len' 'int'
|   | `-ImplicitCastExpr 0x13b927a80 <col:16, col:26> 'int' <IntegralCast>
|   |   `-CallExpr 0x13b927a28 <col:16, col:26> 'unsigned long'
|   |     |-ImplicitCastExpr 0x13b927a10 <col:16> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b927988 <col:16> 'unsigned long (const char *)' Function 0x13b927818 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x13b927a68 <col:23> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x13b927a50 <col:23> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13b9279a8 <col:23> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   |-IfStmt 0x13c808aa0 <line:19:2, line:31:2> has_else
|   | |-CallExpr 0x13b927c18 <line:19:6, col:32> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13b927b98 <col:6> 'int ()' Function 0x13b927ae0 'SUHOSIN_G' 'int ()'
|   | | `-RecoveryExpr 0x13b927bf8 <col:16> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x13b928318 <col:35, line:27:2>
|   | | `-IfStmt 0x13b9282f8 <line:20:3, line:26:3>
|   | |   |-CallExpr 0x13b927ef0 <line:20:7, col:68> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x13b927d20 <col:7> 'int ()' Function 0x13b927c68 'zend_hash_exists' 'int ()'
|   | |   | |-CallExpr 0x13b927e90 <col:24, col:50> '<dependent type>' contains-errors
|   | |   | | |-DeclRefExpr 0x13b927d40 <col:24> 'int ()' Function 0x13b927ae0 'SUHOSIN_G' 'int ()'
|   | |   | | `-RecoveryExpr 0x13b927e70 <col:34> '<dependent type>' contains-errors lvalue
|   | |   | |-DeclRefExpr 0x13b927da0 <col:53> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   | |   | `-BinaryOperator 0x13b927ed0 <col:58, col:67> 'int' '+'
|   | |   |   |-ImplicitCastExpr 0x13b927eb8 <col:58> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13b927dc0 <col:58> 'int' lvalue ParmVar 0x13b90bf58 'name_len' 'int'
|   | |   |   `-IntegerLiteral 0x13b927de0 <col:67> 'int' 1
|   | |   `-CompoundStmt 0x13b9282d8 <col:71, line:26:3>
|   | |     |-LabelStmt 0x13b9281b8 <line:21:1, line:24:4> 'encrypt_return_plain'
|   | |     | `-IfStmt 0x13b928148 <line:22:4, line:24:4>
|   | |     |   |-BinaryOperator 0x13b927f98 <line:22:8, col:15> 'int' '!='
|   | |     |   | |-ImplicitCastExpr 0x13b927f68 <col:8> 'char *' <LValueToRValue>
|   | |     |   | | `-DeclRefExpr 0x13b927f28 <col:8> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   | |     |   | `-ImplicitCastExpr 0x13b927f80 <col:15> 'char *' <ArrayToPointerDecay>
|   | |     |   |   `-DeclRefExpr 0x13b927f48 <col:15> 'char[4096]' lvalue Var 0x13b90c3a0 'buffer' 'char[4096]'
|   | |     |   `-CompoundStmt 0x13b928130 <col:23, line:24:4>
|   | |     |     `-CallExpr 0x13b9280f0 <line:23:5, col:14> 'int'
|   | |     |       |-ImplicitCastExpr 0x13b9280d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | |     |       | `-DeclRefExpr 0x13b928098 <col:5> 'int ()' Function 0x13b927fe0 'efree' 'int ()'
|   | |     |       `-ImplicitCastExpr 0x13b928118 <col:11> 'char *' <LValueToRValue>
|   | |     |         `-DeclRefExpr 0x13b9280b8 <col:11> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   | |     `-ReturnStmt 0x13b9282c8 <line:25:4, col:36>
|   | |       `-ImplicitCastExpr 0x13b9282b0 <col:11, col:36> 'char *' <IntegralToPointer>
|   | |         `-CallExpr 0x13b928250 <col:11, col:36> 'int'
|   | |           |-ImplicitCastExpr 0x13b928238 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   | |           | `-DeclRefExpr 0x13b9281d8 <col:11> 'int ()' Function 0x13b924c38 'estrndup' 'int ()'
|   | |           |-ImplicitCastExpr 0x13b928280 <col:20> 'char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x13b9281f8 <col:20> 'char *' lvalue ParmVar 0x13b90bfd8 'value' 'char *'
|   | |           `-ImplicitCastExpr 0x13b928298 <col:27> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x13b928218 <col:27> 'int' lvalue ParmVar 0x13b90c058 'value_len' 'int'
|   | `-IfStmt 0x13c808a80 <line:27:9, line:31:2>
|   |   |-CallExpr 0x13b9283b0 <line:27:13, col:39> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13b928330 <col:13> 'int ()' Function 0x13b927ae0 'SUHOSIN_G' 'int ()'
|   |   | `-RecoveryExpr 0x13b928390 <col:23> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x13c808a68 <col:42, line:31:2>
|   |     `-IfStmt 0x13c808a48 <line:28:3, line:30:3>
|   |       |-UnaryOperator 0x13c808a00 <line:28:7, col:69> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |       | `-CallExpr 0x13c8089c8 <col:8, col:69> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x13b9283d8 <col:8> 'int ()' Function 0x13b927c68 'zend_hash_exists' 'int ()'
|   |       |   |-CallExpr 0x13c808968 <col:25, col:51> '<dependent type>' contains-errors
|   |       |   | |-DeclRefExpr 0x13c808800 <col:25> 'int ()' Function 0x13b927ae0 'SUHOSIN_G' 'int ()'
|   |       |   | `-RecoveryExpr 0x13c808948 <col:35> '<dependent type>' contains-errors lvalue
|   |       |   |-DeclRefExpr 0x13c808860 <col:54> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   |       |   `-BinaryOperator 0x13c8089a8 <col:59, col:68> 'int' '+'
|   |       |     |-ImplicitCastExpr 0x13c808990 <col:59> 'int' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x13c808880 <col:59> 'int' lvalue ParmVar 0x13b90bf58 'name_len' 'int'
|   |       |     `-IntegerLiteral 0x13c8088a0 <col:68> 'int' 1
|   |       `-CompoundStmt 0x13c808a30 <col:72, line:30:3>
|   |         `-GotoStmt 0x13c808a18 <line:29:4, col:9> 'encrypt_return_plain' 0x13b928168
|   |-IfStmt 0x13c809068 <line:33:2, line:38:2> has_else
|   | |-BinaryOperator 0x13c808c50 <line:33:6, col:39> 'int' '<='
|   | | |-CallExpr 0x13c808b40 <col:6, col:18> 'unsigned long'
|   | | | |-ImplicitCastExpr 0x13c808b28 <col:6> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13c808ad0 <col:6> 'unsigned long (const char *)' Function 0x13b927818 'strlen' 'unsigned long (const char *)'
|   | | | `-ImplicitCastExpr 0x13c808b80 <col:13> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x13c808b68 <col:13> 'char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13c808af0 <col:13> 'char *' lvalue ParmVar 0x13b90bfd8 'value' 'char *'
|   | | `-BinaryOperator 0x13c808c30 <col:23, col:39> 'unsigned long' '-'
|   | |   |-UnaryExprOrTypeTraitExpr 0x13c808bd8 <col:23, col:37> 'unsigned long' sizeof
|   | |   | `-ParenExpr 0x13c808bb8 <col:29, col:37> 'char[4096]' lvalue
|   | |   |   `-DeclRefExpr 0x13c808b98 <col:30> 'char[4096]' lvalue Var 0x13b90c480 'buffer2' 'char[4096]' non_odr_use_unevaluated
|   | |   `-ImplicitCastExpr 0x13c808c18 <col:39> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x13c808bf8 <col:39> 'int' 2
|   | |-CompoundStmt 0x13c808f00 <col:42, line:36:2>
|   | | |-CallExpr 0x13c808d50 <line:34:3, col:32> 'void *'
|   | | | |-ImplicitCastExpr 0x13c808d38 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13c808c70 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13b9252e8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | | |-ImplicitCastExpr 0x13c808da0 <col:10> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13c808d88 <col:10> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13c808c90 <col:10> 'char *' lvalue Var 0x13b924800 'buf2' 'char *'
|   | | | |-ImplicitCastExpr 0x13c808dd0 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13c808db8 <col:16> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13c808cb0 <col:16> 'char *' lvalue ParmVar 0x13b90bfd8 'value' 'char *'
|   | | | `-ImplicitCastExpr 0x13c808e00 <col:23> 'unsigned long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x13c808de8 <col:23> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13c808cd0 <col:23> 'int' lvalue ParmVar 0x13b90c058 'value_len' 'int'
|   | | `-BinaryOperator 0x13c808ee0 <line:35:3, col:21> 'char' '='
|   | |   |-ArraySubscriptExpr 0x13c808e88 <col:3, col:17> 'char' lvalue
|   | |   | |-ImplicitCastExpr 0x13c808e58 <col:3> 'char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x13c808e18 <col:3> 'char *' lvalue Var 0x13b924800 'buf2' 'char *'
|   | |   | `-ImplicitCastExpr 0x13c808e70 <col:8> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x13c808e38 <col:8> 'int' lvalue ParmVar 0x13b90c058 'value_len' 'int'
|   | |   `-ImplicitCastExpr 0x13c808ec8 <col:21> 'char' <IntegralCast>
|   | |     `-IntegerLiteral 0x13c808ea8 <col:21> 'int' 0
|   | `-CompoundStmt 0x13c809050 <line:36:9, line:38:2>
|   |   `-BinaryOperator 0x13c809030 <line:37:3, col:35> 'char *' '='
|   |     |-DeclRefExpr 0x13c808f20 <col:3> 'char *' lvalue Var 0x13b924800 'buf2' 'char *'
|   |     `-ImplicitCastExpr 0x13c809018 <col:10, col:35> 'char *' <IntegralToPointer>
|   |       `-CallExpr 0x13c808fb8 <col:10, col:35> 'int'
|   |         |-ImplicitCastExpr 0x13c808fa0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x13c808f40 <col:10> 'int ()' Function 0x13b924c38 'estrndup' 'int ()'
|   |         |-ImplicitCastExpr 0x13c808fe8 <col:19> 'char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x13c808f60 <col:19> 'char *' lvalue ParmVar 0x13b90bfd8 'value' 'char *'
|   |         `-ImplicitCastExpr 0x13c809000 <col:26> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x13c808f80 <col:26> 'int' lvalue ParmVar 0x13b90c058 'value_len' 'int'
|   |-BinaryOperator 0x13c809190 <line:40:2, col:44> 'int' '='
|   | |-DeclRefExpr 0x13c809098 <col:2> 'int' lvalue ParmVar 0x13b90c058 'value_len' 'int'
|   | `-CallExpr 0x13c809130 <col:14, col:44> 'int'
|   |   |-ImplicitCastExpr 0x13c809118 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13c8090b8 <col:14> 'int ()' Function 0x13b927498 'php_url_decode' 'int ()'
|   |   |-ImplicitCastExpr 0x13c809160 <col:29> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13c8090d8 <col:29> 'char *' lvalue Var 0x13b924800 'buf2' 'char *'
|   |   `-ImplicitCastExpr 0x13c809178 <col:35> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13c8090f8 <col:35> 'int' lvalue ParmVar 0x13b90c058 'value_len' 'int'
|   |-BinaryOperator 0x13c809668 <line:43:2, col:41> 'char *' '='
|   | |-DeclRefExpr 0x13c809370 <col:2> 'char *' lvalue Var 0x13b924938 'd_url' 'char *'
|   | `-ImplicitCastExpr 0x13c809650 <col:10, col:41> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x13c809600 <col:10, col:41> 'int'
|   |     |-ImplicitCastExpr 0x13c8095e8 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13c809470 <col:10> 'int ()' Function 0x13c8093b8 'php_url_encode' 'int ()'
|   |     |-ImplicitCastExpr 0x13c809638 <col:25> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13c809490 <col:25> 'char *' lvalue Var 0x13b9248b8 'd' 'char *'
|   |     |-CallExpr 0x13c809520 <col:28, col:36> 'unsigned long'
|   |     | |-ImplicitCastExpr 0x13c809508 <col:28> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x13c8094b0 <col:28> 'unsigned long (const char *)' Function 0x13b927818 'strlen' 'unsigned long (const char *)'
|   |     | `-ImplicitCastExpr 0x13c809560 <col:35> 'const char *' <NoOp>
|   |     |   `-ImplicitCastExpr 0x13c809548 <col:35> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x13c8094d0 <col:35> 'char *' lvalue Var 0x13b9248b8 'd' 'char *'
|   |     `-UnaryOperator 0x13c8095d0 <col:39, col:40> 'int *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x13c809578 <col:40> 'int' lvalue Var 0x13b9249f8 'l' 'int'
|   |-CallExpr 0x13c8096e0 <line:44:2, col:9> 'int'
|   | |-ImplicitCastExpr 0x13c8096c8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13c809688 <col:2> 'int ()' Function 0x13b927fe0 'efree' 'int ()'
|   | `-ImplicitCastExpr 0x13c809708 <col:8> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13c8096a8 <col:8> 'char *' lvalue Var 0x13b9248b8 'd' 'char *'
|   |-IfStmt 0x13c809870 <line:45:5, line:47:2>
|   | |-BinaryOperator 0x13c809790 <line:45:9, col:16> 'int' '!='
|   | | |-ImplicitCastExpr 0x13c809760 <col:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13c809720 <col:9> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   | | `-ImplicitCastExpr 0x13c809778 <col:16> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x13c809740 <col:16> 'char[4096]' lvalue Var 0x13b90c3a0 'buffer' 'char[4096]'
|   | `-CompoundStmt 0x13c809858 <col:24, line:47:2>
|   |   `-CallExpr 0x13c809818 <line:46:3, col:12> 'int'
|   |     |-ImplicitCastExpr 0x13c809800 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13c8097b0 <col:3> 'int ()' Function 0x13b927fe0 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x13c809840 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13c8097d0 <col:9> 'char *' lvalue Var 0x13b90c518 'buf' 'char *'
|   |-IfStmt 0x13c8099d0 <line:48:5, line:50:2>
|   | |-BinaryOperator 0x13c809900 <line:48:9, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x13c8098d0 <col:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13c809890 <col:9> 'char *' lvalue Var 0x13b924800 'buf2' 'char *'
|   | | `-ImplicitCastExpr 0x13c8098e8 <col:17> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x13c8098b0 <col:17> 'char[4096]' lvalue Var 0x13b90c480 'buffer2' 'char[4096]'
|   | `-CompoundStmt 0x13c8099b8 <col:26, line:50:2>
|   |   `-CallExpr 0x13c809978 <line:49:3, col:13> 'int'
|   |     |-ImplicitCastExpr 0x13c809960 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13c809920 <col:3> 'int ()' Function 0x13b927fe0 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x13c8099a0 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13c809940 <col:9> 'char *' lvalue Var 0x13b924800 'buf2' 'char *'
|   `-ReturnStmt 0x13c809a28 <line:51:2, col:9>
|     `-ImplicitCastExpr 0x13c809a10 <col:9> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x13c8099f0 <col:9> 'char *' lvalue Var 0x13b924938 'd_url' 'char *'
|-FunctionDecl 0x13b9252e8 <line:11:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x13b9253e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13b925450 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13b9254b8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13b925390 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x13b927818 <line:17:16> col:16 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13b927918 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13b9278c0 <<invalid sloc>> Implicit 902
