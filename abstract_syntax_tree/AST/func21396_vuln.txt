TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x127926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x127926000 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x127926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x127926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x127926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x1279263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x127926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x1279264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x127926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x127926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x1279265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x127926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1279266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x127926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x127926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1279267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x127926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1279268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x127926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x127926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1279269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x127926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x127926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x127926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x127926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x127926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x127926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x127926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x127926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x127926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x127926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x127926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x127926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x127926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x127926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x127927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x127927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1279278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x127927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1279279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x127927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x127927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x127927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x127927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x127927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x127927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x127927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x127927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x127927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x127927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x127927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x127927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x127927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x127927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x127927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x127928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-FunctionDecl 0x130008348 <dataset_diviso_filec/func21396_vuln.c:1:1, line:71:1> line:1:12 trusted_update 'int (struct key *, struct key_preparsed_payload *)' static
| |-ParmVarDecl 0x127928648 <col:27, col:39> col:39 used key 'struct key *'
| |-ParmVarDecl 0x130008228 <col:44, col:74> col:74 used prep 'struct key_preparsed_payload *'
| `-CompoundStmt 0x13000c558 <line:2:1, line:71:1>
|   |-DeclStmt 0x130008738 <line:3:2, col:54>
|   | |-RecordDecl 0x130008448 <col:2, col:9> col:9 struct trusted_key_payload
|   | `-VarDecl 0x1300085b8 <col:2, col:53> col:30 used p 'struct trusted_key_payload *' cinit
|   |   `-ArraySubscriptExpr 0x130008700 <col:34, col:53> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x1300086e8 <col:34, col:47> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x130008680 <col:34, col:47> '<dependent type>' contains-errors lvalue .data
|   |     |   `-RecoveryExpr 0x130008658 <col:34, col:39> '<dependent type>' contains-errors lvalue
|   |     |     `-DeclRefExpr 0x130008620 <col:34> 'struct key *' lvalue ParmVar 0x127928648 'key' 'struct key *'
|   |     `-IntegerLiteral 0x1300086c8 <col:52> 'int' 0
|   |-DeclStmt 0x130008840 <line:4:2, col:35>
|   | `-VarDecl 0x1300087d8 <col:2, col:30> col:30 used new_p 'struct trusted_key_payload *'
|   |-DeclStmt 0x130008a48 <line:5:2, col:35>
|   | |-RecordDecl 0x130008858 <col:2, col:9> col:9 struct trusted_key_options
|   | `-VarDecl 0x1300089c8 <col:2, col:30> col:30 used new_o 'struct trusted_key_options *'
|   |-BinaryOperator 0x130008b70 <line:6:2, col:25> 'unsigned long' contains-errors '='
|   | |-UnaryExprOrTypeTraitExpr 0x130008b50 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x130008b30 <col:9> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x130008ae8 <col:19, col:25> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x130008ab0 <col:19> 'struct key_preparsed_payload *' lvalue ParmVar 0x130008228 'prep' 'struct key_preparsed_payload *'
|   |-DeclStmt 0x130008c10 <line:7:2, col:16>
|   | `-VarDecl 0x130008ba8 <col:2, col:8> col:8 used datablob 'char *'
|   |-DeclStmt 0x130008cc8 <line:8:2, col:13>
|   | `-VarDecl 0x130008c40 <col:2, col:12> col:6 used ret 'int' cinit
|   |   `-IntegerLiteral 0x130008ca8 <col:12> 'int' 0
|   |-IfStmt 0x130008e18 <line:10:2, line:11:11>
|   | |-UnaryOperator 0x130008d58 <line:10:6, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x130008d40 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x130008d18 <col:7, col:10> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x130008ce0 <col:7> 'struct trusted_key_payload *' contains-errors lvalue Var 0x1300085b8 'p' 'struct trusted_key_payload *'
|   | `-ReturnStmt 0x130008e08 <line:11:3, col:11>
|   |   `-UnaryOperator 0x130008df0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x130008dd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x130008db8 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1300091b0 <line:12:2, line:13:11>
|   | |-BinaryOperator 0x1300090e8 <line:12:6, col:48> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x130009098 <col:6, col:32> 'int' '||'
|   | | | |-BinaryOperator 0x130009008 <col:6, col:17> 'int' '<='
|   | | | | |-ImplicitCastExpr 0x130008fd8 <col:6> 'char *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x130008fb8 <col:6> 'char *' lvalue Var 0x130008ba8 'datablob' 'char *'
|   | | | | `-ImplicitCastExpr 0x130008ff0 <col:17> 'char *' <NullToPointer>
|   | | | |   `-IntegerLiteral 0x130008e50 <col:17> 'int' 0
|   | | | `-BinaryOperator 0x130009078 <col:22, col:32> 'int' '>'
|   | | |   |-ImplicitCastExpr 0x130009048 <col:22> 'char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x130009028 <col:22> 'char *' lvalue Var 0x130008ba8 'datablob' 'char *'
|   | | |   `-ImplicitCastExpr 0x130009060 <col:32> 'char *' <IntegralToPointer>
|   | | |     `-IntegerLiteral 0x130008ea8 <col:32> 'int' 32767
|   | | `-UnaryOperator 0x1300090d0 <col:41, col:48> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1300090b8 <col:42, col:48> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x130008f40 <col:42, col:48> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x130008f08 <col:42> 'struct key_preparsed_payload *' lvalue ParmVar 0x130008228 'prep' 'struct key_preparsed_payload *'
|   | `-ReturnStmt 0x1300091a0 <line:13:3, col:11>
|   |   `-UnaryOperator 0x130009188 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x130009170 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x130009150 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x127945cd8 <line:15:2, col:44> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1300091d0 <col:2> 'char *' lvalue Var 0x130008ba8 'datablob' 'char *'
|   | `-CallExpr 0x127945ca8 <col:13, col:44> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x127945b10 <col:13> 'int ()' Function 0x127945a58 'kmalloc' 'int ()'
|   |   |-BinaryOperator 0x127945c68 <col:21, col:31> '<dependent type>' contains-errors '+'
|   |   | |-RecoveryExpr 0x127945c48 <col:21> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x127945b48 <col:31> 'int' 1
|   |   `-RecoveryExpr 0x127945c88 <col:34> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x127945df0 <line:16:2, line:17:11>
|   | |-UnaryOperator 0x127945d30 <line:16:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x127945d18 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127945cf8 <col:7> 'char *' lvalue Var 0x130008ba8 'datablob' 'char *'
|   | `-ReturnStmt 0x127945de0 <line:17:3, col:11>
|   |   `-UnaryOperator 0x127945dc8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x127945db0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x127945d90 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x127945fb0 <line:18:2, col:32> 'struct trusted_key_options *' '='
|   | |-DeclRefExpr 0x127945e10 <col:2> 'struct trusted_key_options *' lvalue Var 0x1300089c8 'new_o' 'struct trusted_key_options *'
|   | `-ImplicitCastExpr 0x127945f98 <col:10, col:32> 'struct trusted_key_options *' <IntegralToPointer>
|   |   `-CallExpr 0x127945f78 <col:10, col:32> 'int'
|   |     `-ImplicitCastExpr 0x127945f60 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x127945f10 <col:10> 'int ()' Function 0x127945e58 'trusted_options_alloc' 'int ()'
|   |-IfStmt 0x1279461a0 <line:19:2, line:22:2>
|   | |-UnaryOperator 0x127946008 <line:19:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x127945ff0 <col:7> 'struct trusted_key_options *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127945fd0 <col:7> 'struct trusted_key_options *' lvalue Var 0x1300089c8 'new_o' 'struct trusted_key_options *'
|   | `-CompoundStmt 0x127946180 <col:14, line:22:2>
|   |   |-BinaryOperator 0x1279460f8 <line:20:3, col:10> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x127946020 <col:3> 'int' lvalue Var 0x130008c40 'ret' 'int'
|   |   | `-UnaryOperator 0x1279460e0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   `-ImplicitCastExpr 0x1279460c8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-RecoveryExpr 0x1279460a8 <col:10> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x127946168 <line:21:3, col:8> 'out' 0x127946118
|   |-BinaryOperator 0x127946370 <line:23:2, col:35> 'struct trusted_key_payload *' '='
|   | |-DeclRefExpr 0x1279461c0 <col:2> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   | `-ImplicitCastExpr 0x127946358 <col:10, col:35> 'struct trusted_key_payload *' <IntegralToPointer>
|   |   `-CallExpr 0x127946318 <col:10, col:35> 'int'
|   |     |-ImplicitCastExpr 0x127946300 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1279462c0 <col:10> 'int ()' Function 0x127946208 'trusted_payload_alloc' 'int ()'
|   |     `-ImplicitCastExpr 0x127946340 <col:32> 'struct key *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1279462e0 <col:32> 'struct key *' lvalue ParmVar 0x127928648 'key' 'struct key *'
|   |-IfStmt 0x127946510 <line:24:2, line:27:2>
|   | |-UnaryOperator 0x1279463c8 <line:24:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1279463b0 <col:7> 'struct trusted_key_payload *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127946390 <col:7> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   | `-CompoundStmt 0x1279464f0 <col:14, line:27:2>
|   |   |-BinaryOperator 0x1279464b8 <line:25:3, col:10> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1279463e0 <col:3> 'int' lvalue Var 0x130008c40 'ret' 'int'
|   |   | `-UnaryOperator 0x1279464a0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   `-ImplicitCastExpr 0x127946488 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-RecoveryExpr 0x127946468 <col:10> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x1279464d8 <line:26:3, col:8> 'out' 0x127946118
|   |-BinaryOperator 0x13000a0f8 <line:31:2, col:45> 'int' '='
|   | |-DeclRefExpr 0x1279468d0 <col:2> 'int' lvalue Var 0x130008c40 'ret' 'int'
|   | `-CallExpr 0x13000a078 <col:8, col:45> 'int'
|   |   |-ImplicitCastExpr 0x13000a060 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1279469d0 <col:8> 'int ()' Function 0x127946918 'datablob_parse' 'int ()'
|   |   |-ImplicitCastExpr 0x13000a0b0 <col:23> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13000a000 <col:23> 'char *' lvalue Var 0x130008ba8 'datablob' 'char *'
|   |   |-ImplicitCastExpr 0x13000a0c8 <col:33> 'struct trusted_key_payload *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13000a020 <col:33> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   |   `-ImplicitCastExpr 0x13000a0e0 <col:40> 'struct trusted_key_options *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13000a040 <col:40> 'struct trusted_key_options *' lvalue Var 0x1300089c8 'new_o' 'struct trusted_key_options *'
|   |-IfStmt 0x13000a328 <line:32:2, line:36:2>
|   | |-RecoveryExpr 0x13000a138 <line:32:6, col:13> '_Bool' contains-errors
|   | `-CompoundStmt 0x13000a308 <col:25, line:36:2>
|   |   |-CallExpr 0x13000a2b0 <line:34:3, col:14> 'int'
|   |   | |-ImplicitCastExpr 0x13000a298 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13000a258 <col:3> 'int ()' Function 0x13000a1a0 'kfree' 'int ()'
|   |   | `-ImplicitCastExpr 0x13000a2d8 <col:9> 'struct trusted_key_payload *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13000a278 <col:9> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   |   `-GotoStmt 0x13000a2f0 <line:35:3, col:8> 'out' 0x127946118
|   |-IfStmt 0x13000a4c8 <line:38:2, line:42:2>
|   | |-UnaryOperator 0x13000a3c0 <line:38:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13000a3a8 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13000a380 <col:7, col:14> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x13000a348 <col:7> 'struct trusted_key_options *' lvalue Var 0x1300089c8 'new_o' 'struct trusted_key_options *'
|   | `-CompoundStmt 0x13000a4a8 <col:25, line:42:2>
|   |   |-CallExpr 0x13000a450 <line:40:3, col:14> 'int'
|   |   | |-ImplicitCastExpr 0x13000a438 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13000a3f8 <col:3> 'int ()' Function 0x13000a1a0 'kfree' 'int ()'
|   |   | `-ImplicitCastExpr 0x13000a478 <col:9> 'struct trusted_key_payload *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13000a418 <col:9> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   |   `-GotoStmt 0x13000a490 <line:41:3, col:8> 'out' 0x127946118
|   |-BinaryOperator 0x13000a5a8 <line:45:2, col:25> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x13000a520 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13000a4e8 <col:2> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   | `-RecoveryExpr 0x13000a580 <col:22, col:25> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x13000a548 <col:22> 'struct trusted_key_payload *' contains-errors lvalue Var 0x1300085b8 'p' 'struct trusted_key_payload *'
|   |-BinaryOperator 0x13000a688 <line:46:2, col:22> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x13000a600 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13000a5c8 <col:2> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   | `-RecoveryExpr 0x13000a660 <col:19, col:22> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x13000a628 <col:19> 'struct trusted_key_payload *' contains-errors lvalue Var 0x1300085b8 'p' 'struct trusted_key_payload *'
|   |-CallExpr 0x13000a830 <line:47:2, col:39> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13000a6a8 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x1279465a8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-RecoveryExpr 0x13000a700 <col:9, col:16> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13000a6c8 <col:9> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   | |-RecoveryExpr 0x13000a760 <col:21, col:24> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13000a728 <col:21> 'struct trusted_key_payload *' contains-errors lvalue Var 0x1300085b8 'p' 'struct trusted_key_payload *'
|   | `-RecoveryExpr 0x13000a7c0 <col:29, col:32> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x13000a788 <col:29> 'struct trusted_key_payload *' contains-errors lvalue Var 0x1300085b8 'p' 'struct trusted_key_payload *'
|   |-CallExpr 0x13000a9a0 <line:48:2, col:16> 'int' contains-errors
|   | |-ImplicitCastExpr 0x13000a988 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13000a948 <col:2> 'int ()' Function 0x13000a890 'dump_payload' 'int ()'
|   | `-ImplicitCastExpr 0x13000a9c8 <col:15> 'struct trusted_key_payload *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x13000a968 <col:15> 'struct trusted_key_payload *' contains-errors lvalue Var 0x1300085b8 'p' 'struct trusted_key_payload *'
|   |-CallExpr 0x13000aa38 <line:49:2, col:20> 'int'
|   | |-ImplicitCastExpr 0x13000aa20 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13000a9e0 <col:2> 'int ()' Function 0x13000a890 'dump_payload' 'int ()'
|   | `-ImplicitCastExpr 0x13000aa60 <col:15> 'struct trusted_key_payload *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13000aa00 <col:15> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   |-BinaryOperator 0x13000ac50 <line:51:2, col:29> 'int' '='
|   | |-DeclRefExpr 0x13000aa78 <col:2> 'int' lvalue Var 0x130008c40 'ret' 'int'
|   | `-CallExpr 0x13000abf0 <col:8, col:29> 'int'
|   |   |-ImplicitCastExpr 0x13000abd8 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13000ab78 <col:8> 'int ()' Function 0x13000aac0 'key_seal' 'int ()'
|   |   |-ImplicitCastExpr 0x13000ac20 <col:17> 'struct trusted_key_payload *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13000ab98 <col:17> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   |   `-ImplicitCastExpr 0x13000ac38 <col:24> 'struct trusted_key_options *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13000abb8 <col:24> 'struct trusted_key_options *' lvalue Var 0x1300089c8 'new_o' 'struct trusted_key_options *'
|   |-IfStmt 0x13000afc0 <line:52:2, line:56:2>
|   | |-BinaryOperator 0x13000acc8 <line:52:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x13000acb0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13000ac70 <col:6> 'int' lvalue Var 0x130008c40 'ret' 'int'
|   | | `-IntegerLiteral 0x13000ac90 <col:12> 'int' 0
|   | `-CompoundStmt 0x13000af98 <col:15, line:56:2>
|   |   |-CallExpr 0x13000ae88 <line:53:3, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x13000ae70 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13000adc8 <col:3> 'int ()' Function 0x13000ad10 'pr_info' 'int ()'
|   |   | |-ImplicitCastExpr 0x13000aeb8 <col:11> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x13000ae30 <col:11> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x13000aed0 <col:18> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13000ae50 <col:18> 'int' lvalue Var 0x130008c40 'ret' 'int'
|   |   |-CallExpr 0x13000af40 <line:54:3, col:14> 'int'
|   |   | |-ImplicitCastExpr 0x13000af28 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13000aee8 <col:3> 'int ()' Function 0x13000a1a0 'kfree' 'int ()'
|   |   | `-ImplicitCastExpr 0x13000af68 <col:9> 'struct trusted_key_payload *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13000af08 <col:9> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   |   `-GotoStmt 0x13000af80 <line:55:3, col:8> 'out' 0x127946118
|   |-IfStmt 0x13000c070 <line:57:2, line:64:2>
|   | |-RecoveryExpr 0x13000bc18 <line:57:6, col:13> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13000afe0 <col:6> 'struct trusted_key_options *' lvalue Var 0x1300089c8 'new_o' 'struct trusted_key_options *'
|   | `-CompoundStmt 0x13000c050 <col:22, line:64:2>
|   |   |-BinaryOperator 0x13000bde8 <line:58:3, col:31> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x13000bc40 <col:3> 'int' lvalue Var 0x130008c40 'ret' 'int'
|   |   | `-CallExpr 0x13000bdc0 <col:9, col:31> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13000bd40 <col:9> 'int ()' Function 0x13000bc88 'pcrlock' 'int ()'
|   |   |   `-RecoveryExpr 0x13000bd98 <col:17, col:24> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x13000bd60 <col:17> 'struct trusted_key_options *' lvalue Var 0x1300089c8 'new_o' 'struct trusted_key_options *'
|   |   `-IfStmt 0x13000c030 <line:59:3, line:63:3>
|   |     |-BinaryOperator 0x13000be60 <line:59:7, col:13> 'int' '<'
|   |     | |-ImplicitCastExpr 0x13000be48 <col:7> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13000be08 <col:7> 'int' lvalue Var 0x130008c40 'ret' 'int'
|   |     | `-IntegerLiteral 0x13000be28 <col:13> 'int' 0
|   |     `-CompoundStmt 0x13000c008 <col:16, line:63:3>
|   |       |-CallExpr 0x13000bef8 <line:60:4, col:22> 'int'
|   |       | |-ImplicitCastExpr 0x13000bee0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x13000be80 <col:4> 'int ()' Function 0x13000ad10 'pr_info' 'int ()'
|   |       | |-ImplicitCastExpr 0x13000bf28 <col:12> 'char *' <ArrayToPointerDecay>
|   |       | | `-StringLiteral 0x13000bea0 <col:12> 'char[4]' lvalue "STR"
|   |       | `-ImplicitCastExpr 0x13000bf40 <col:19> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13000bec0 <col:19> 'int' lvalue Var 0x130008c40 'ret' 'int'
|   |       |-CallExpr 0x13000bfb0 <line:61:4, col:15> 'int'
|   |       | |-ImplicitCastExpr 0x13000bf98 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x13000bf58 <col:4> 'int ()' Function 0x13000a1a0 'kfree' 'int ()'
|   |       | `-ImplicitCastExpr 0x13000bfd8 <col:10> 'struct trusted_key_payload *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13000bf78 <col:10> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   |       `-GotoStmt 0x13000bff0 <line:62:4, col:9> 'out' 0x127946118
|   |-CallExpr 0x13000c1e8 <line:65:2, col:34> 'int'
|   | |-ImplicitCastExpr 0x13000c1d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13000c170 <col:2> 'int ()' Function 0x13000c0b8 'rcu_assign_keypointer' 'int ()'
|   | |-ImplicitCastExpr 0x13000c218 <col:24> 'struct key *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13000c190 <col:24> 'struct key *' lvalue ParmVar 0x127928648 'key' 'struct key *'
|   | `-ImplicitCastExpr 0x13000c230 <col:29> 'struct trusted_key_payload *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13000c1b0 <col:29> 'struct trusted_key_payload *' lvalue Var 0x1300087d8 'new_p' 'struct trusted_key_payload *'
|   |-LabelStmt 0x13000c458 <line:67:1, line:68:16> 'out'
|   | `-CallExpr 0x13000c418 <col:2, col:16> 'int'
|   |   |-ImplicitCastExpr 0x13000c400 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13000c3c0 <col:2> 'int ()' Function 0x13000a1a0 'kfree' 'int ()'
|   |   `-ImplicitCastExpr 0x13000c440 <col:8> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13000c3e0 <col:8> 'char *' lvalue Var 0x130008ba8 'datablob' 'char *'
|   |-CallExpr 0x13000c4d0 <line:69:2, col:13> 'int'
|   | |-ImplicitCastExpr 0x13000c4b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13000c478 <col:2> 'int ()' Function 0x13000a1a0 'kfree' 'int ()'
|   | `-ImplicitCastExpr 0x13000c4f8 <col:8> 'struct trusted_key_options *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13000c498 <col:8> 'struct trusted_key_options *' lvalue Var 0x1300089c8 'new_o' 'struct trusted_key_options *'
|   `-ReturnStmt 0x13000c548 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x13000c530 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13000c510 <col:9> 'int' lvalue Var 0x130008c40 'ret' 'int'
`-FunctionDecl 0x1279465a8 <line:29:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1279466a8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x127946710 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x127946778 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x127946650 <<invalid sloc>> Implicit 882
