TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-FunctionDecl 0x12d80def8 <dataset_diviso_filec/func5746_nonvuln.c:1:1, line:33:1> line:1:5 unit_name_replace_instance 'int (const char *, const char *, char **)'
| |-ParmVarDecl 0x12d80dcd8 <col:32, col:44> col:44 used f 'const char *'
| |-ParmVarDecl 0x12d80dd58 <col:47, col:59> col:59 used i 'const char *'
| |-ParmVarDecl 0x12d80de08 <col:62, col:69> col:69 used ret 'char **'
| `-CompoundStmt 0x12d82b400 <col:74, line:33:1>
|   |-DeclStmt 0x12d80e130 <line:3:9, col:26>
|   | |-VarDecl 0x12d80e030 <col:9, col:21> col:21 used p 'const char *'
|   | `-VarDecl 0x12d80e0b0 <col:9, col:25> col:25 used e 'const char *'
|   |-BinaryOperator 0x12d80e218 <line:4:9, col:19> '<dependent type>' contains-errors ','
|   | |-UnaryExprOrTypeTraitExpr 0x12d80e1d8 <col:9, col:16> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x12d80e1b8 <col:16> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12d80e1f8 <col:19> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12d80e3d8 <line:6:9, col:17> 'int'
|   | |-ImplicitCastExpr 0x12d80e3c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12d80e350 <col:9> 'int ()' Function 0x12d80e298 'assert' 'int ()'
|   | `-ImplicitCastExpr 0x12d827800 <col:16> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12d80e370 <col:16> 'const char *' lvalue ParmVar 0x12d80dcd8 'f' 'const char *'
|   |-CallExpr 0x12d827870 <line:7:9, col:17> 'int'
|   | |-ImplicitCastExpr 0x12d827858 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12d827818 <col:9> 'int ()' Function 0x12d80e298 'assert' 'int ()'
|   | `-ImplicitCastExpr 0x12d827898 <col:16> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12d827838 <col:16> 'const char *' lvalue ParmVar 0x12d80dd58 'i' 'const char *'
|   |-CallExpr 0x12d827908 <line:8:9, col:19> 'int'
|   | |-ImplicitCastExpr 0x12d8278f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12d8278b0 <col:9> 'int ()' Function 0x12d80e298 'assert' 'int ()'
|   | `-ImplicitCastExpr 0x12d827930 <col:16> 'char **' <LValueToRValue>
|   |   `-DeclRefExpr 0x12d8278d0 <col:16> 'char **' lvalue ParmVar 0x12d80de08 'ret' 'char **'
|   |-IfStmt 0x12d827c50 <line:10:9, line:11:25>
|   | |-UnaryOperator 0x12d827b90 <line:10:13, col:73> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x12d827b60 <col:14, col:73> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x12d827a28 <col:14> 'int ()' Function 0x12d827970 'unit_name_is_valid' 'int ()'
|   | |   |-DeclRefExpr 0x12d827a48 <col:33> 'const char *' lvalue ParmVar 0x12d80dcd8 'f' 'const char *'
|   | |   `-BinaryOperator 0x12d827b40 <col:36, col:55> '<dependent type>' contains-errors '|'
|   | |     |-RecoveryExpr 0x12d827b00 <col:36> '<dependent type>' contains-errors lvalue
|   | |     `-RecoveryExpr 0x12d827b20 <col:55> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x12d827c40 <line:11:17, col:25>
|   |   `-UnaryOperator 0x12d827c28 <col:24, col:25> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x12d827c10 <col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x12d827bf0 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d827ea8 <line:12:9, line:13:25>
|   | |-UnaryOperator 0x12d827de8 <line:12:13, col:38> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x12d827da8 <col:14, col:38> 'int'
|   | |   |-ImplicitCastExpr 0x12d827d90 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12d827d50 <col:14> 'int ()' Function 0x12d827c98 'unit_instance_is_valid' 'int ()'
|   | |   `-ImplicitCastExpr 0x12d827dd0 <col:37> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12d827d70 <col:37> 'const char *' lvalue ParmVar 0x12d80dd58 'i' 'const char *'
|   | `-ReturnStmt 0x12d827e98 <line:13:17, col:25>
|   |   `-UnaryOperator 0x12d827e80 <col:24, col:25> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x12d827e68 <col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x12d827e48 <col:25> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12d828780 <line:15:9, col:37> 'int'
|   | |-ImplicitCastExpr 0x12d828768 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12d827fa8 <col:9> 'int ()' Function 0x12d827ef0 'assert_se' 'int ()'
|   | `-BinaryOperator 0x12d828748 <col:19, col:36> 'const char *' '='
|   |   |-DeclRefExpr 0x12d827fc8 <col:19> 'const char *' lvalue Var 0x12d80e030 'p' 'const char *'
|   |   `-ImplicitCastExpr 0x12d828730 <col:23, col:36> 'const char *' <NoOp>
|   |     `-CallExpr 0x12d8286e8 <col:23, col:36> 'char *'
|   |       |-ImplicitCastExpr 0x12d8286d0 <col:23> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12d828630 <col:23> 'char *(const char *, int)' Function 0x12d828450 'strchr' 'char *(const char *, int)'
|   |       |-ImplicitCastExpr 0x12d828718 <col:30> 'const char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x12d828650 <col:30> 'const char *' lvalue ParmVar 0x12d80dcd8 'f' 'const char *'
|   |       `-CharacterLiteral 0x12d828670 <col:33> 'int' 64
|   |-CallExpr 0x12d829900 <line:16:9, col:38> 'int'
|   | |-ImplicitCastExpr 0x12d8298e8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12d8287a8 <col:9> 'int ()' Function 0x12d827ef0 'assert_se' 'int ()'
|   | `-BinaryOperator 0x12d8298c8 <col:19, col:37> 'const char *' '='
|   |   |-DeclRefExpr 0x12d8287c8 <col:19> 'const char *' lvalue Var 0x12d80e0b0 'e' 'const char *'
|   |   `-ImplicitCastExpr 0x12d8298b0 <col:23, col:37> 'const char *' <NoOp>
|   |     `-CallExpr 0x12d829868 <col:23, col:37> 'char *'
|   |       |-ImplicitCastExpr 0x12d829850 <col:23> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12d8297e0 <col:23> 'char *(const char *, int)' Function 0x12d829600 'strrchr' 'char *(const char *, int)'
|   |       |-ImplicitCastExpr 0x12d829898 <col:31> 'const char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x12d829800 <col:31> 'const char *' lvalue ParmVar 0x12d80dcd8 'f' 'const char *'
|   |       `-CharacterLiteral 0x12d829820 <col:34> 'int' 46
|   `-ReturnStmt 0x12d82a5d8 <line:32:9, col:16>
|     `-IntegerLiteral 0x12d82a5b8 <col:16> 'int' 0
|-FunctionDecl 0x12d828450 <line:15:23> col:23 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x12d828550 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12d8285b8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x12d8284f8 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x12d829600 <line:16:23> col:23 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x12d829700 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12d829768 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x12d8296a8 <<invalid sloc>> Implicit 896
|-FunctionDecl 0x12d8299f8 <line:19:13> col:13 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x12d829af8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12d829aa0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x12d829ea0 <line:25:9> col:9 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x12d829fa0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12d82a008 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12d829f48 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x12d82a118 <col:16> col:16 implicit used mempcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12d82a218 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12d82a280 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12d82a2e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12d82a1c0 <<invalid sloc>> Implicit 947
