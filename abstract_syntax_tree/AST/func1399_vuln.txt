TranslationUnitDecl 0x139855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1398564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x139855bd0 '__int128'
|-TypedefDecl 0x139856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x139855bf0 'unsigned __int128'
|-TypedefDecl 0x13a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x139856580 '__NSConstantString_tag'
|-TypedefDecl 0x13a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x139855d90 '__SVInt8_t'
|-TypedefDecl 0x13a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x139855db0 '__SVInt16_t'
|-TypedefDecl 0x13a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x139855dd0 '__SVInt32_t'
|-TypedefDecl 0x13a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x139855df0 '__SVInt64_t'
|-TypedefDecl 0x13a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x139855e10 '__SVUint8_t'
|-TypedefDecl 0x13a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x139855e30 '__SVUint16_t'
|-TypedefDecl 0x13a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x139855e50 '__SVUint32_t'
|-TypedefDecl 0x13a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x139855e70 '__SVUint64_t'
|-TypedefDecl 0x13a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x139855e90 '__SVFloat16_t'
|-TypedefDecl 0x13a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x139855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x139855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x139855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x139855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x139855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x139855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x139855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x139855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x139855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x139855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x139855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x139856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x139856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x139856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x139856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x139856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1398560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1398560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1398560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x139856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x139856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x139856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x139856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x139856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1398561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1398561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1398561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x139856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x139856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x139856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x139856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x139856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1398562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1398562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1398562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x139856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x139856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x139856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x139856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x139856390 '__SVBool_t'
|-TypedefDecl 0x13a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1398563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1398563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1398563f0 '__SVCount_t'
|-TypedefDecl 0x13a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a00dbb0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
|-TypedefDecl 0x13a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a00dbb0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
|-FunctionDecl 0x13a00dee8 <dataset_diviso_filec/func1399_vuln.c:1:1, line:35:1> line:1:13 invalid dump_fd_info 'int (const char *, char *, int)' static
| |-ParmVarDecl 0x13a00dcf0 <col:26, col:38> col:38 used dest_filename 'const char *'
| |-ParmVarDecl 0x13a00dd70 <col:53, col:59> col:59 used source_filename 'char *'
| |-ParmVarDecl 0x13a00ddf0 <col:76, col:80> col:80 used source_base_ofs 'int'
| `-CompoundStmt 0x1399234d0 <line:2:1, line:35:1>
|   |-DeclStmt 0x13a00e3d0 <line:7:5, col:20>
|   | `-VarDecl 0x13a00e330 <col:5, col:19> col:14 used fd 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x13a00e3b8 <col:19> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x13a00e398 <col:19> 'int' 0
|   `-WhileStmt 0x139923490 <line:8:5, line:32:5>
|     |-BinaryOperator 0x13a027870 <line:8:12, col:18> 'int' '<='
|     | |-ImplicitCastExpr 0x13a027840 <col:12> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x13a027800 <col:12> 'unsigned int' lvalue Var 0x13a00e330 'fd' 'unsigned int'
|     | `-ImplicitCastExpr 0x13a027858 <col:18> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x13a027820 <col:18> 'int' 99999
|     `-CompoundStmt 0x139923430 <line:9:5, line:32:5>
|       |-CallExpr 0x13a028068 <line:10:9, col:61> 'int'
|       | |-ImplicitCastExpr 0x13a028050 <col:9> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x13a027f18 <col:9> 'int (char *, const char *, ...)' Function 0x13a027d00 'sprintf' 'int (char *, const char *, ...)'
|       | |-BinaryOperator 0x13a027fa8 <col:17, col:35> 'char *' '+'
|       | | |-ImplicitCastExpr 0x13a027f78 <col:17> 'char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x13a027f38 <col:17> 'char *' lvalue ParmVar 0x13a00dd70 'source_filename' 'char *'
|       | | `-ImplicitCastExpr 0x13a027f90 <col:35> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x13a027f58 <col:35> 'int' lvalue ParmVar 0x13a00ddf0 'source_base_ofs' 'int'
|       | |-ImplicitCastExpr 0x13a0280b8 <col:52> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x13a0280a0 <col:52> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x13a027fc8 <col:52> 'char[4]' lvalue "STR"
|       | `-ImplicitCastExpr 0x13a0280d0 <col:59> 'unsigned int' <LValueToRValue>
|       |   `-DeclRefExpr 0x13a027fe8 <col:59> 'unsigned int' lvalue Var 0x13a00e330 'fd' 'unsigned int'
|       |-DeclStmt 0x13a0282f8 <line:11:9, col:54>
|       | `-VarDecl 0x13a028100 <col:9, col:53> col:15 used name 'char *' cinit
|       |   `-ImplicitCastExpr 0x13a0282e0 <col:22, col:53> 'char *' <IntegralToPointer>
|       |     `-CallExpr 0x13a0282a0 <col:22, col:53> 'int'
|       |       |-ImplicitCastExpr 0x13a028288 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x13a028248 <col:22> 'int ()' Function 0x13a028190 'malloc_readlink' 'int ()'
|       |       `-ImplicitCastExpr 0x13a0282c8 <col:38> 'char *' <LValueToRValue>
|       |         `-DeclRefExpr 0x13a028268 <col:38> 'char *' lvalue ParmVar 0x13a00dd70 'source_filename' 'char *'
|       |-IfStmt 0x13a028368 <line:12:9, line:13:13>
|       | |-UnaryOperator 0x13a028348 <line:12:13, col:14> 'int' prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x13a028330 <col:14> 'char *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x13a028310 <col:14> 'char *' lvalue Var 0x13a028100 'name' 'char *'
|       | `-BreakStmt 0x13a028360 <line:13:13>
|       |-CallExpr 0x13a028560 <line:14:9, col:36> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x13a028468 <col:9> 'int ()' Function 0x13a0283b0 'fprintf' 'int ()'
|       | |-RecoveryExpr 0x13a028540 <col:17> '<dependent type>' contains-errors lvalue
|       | |-StringLiteral 0x13a0284a0 <col:21> 'char[4]' lvalue "STR"
|       | |-DeclRefExpr 0x13a0284c0 <col:28> 'unsigned int' lvalue Var 0x13a00e330 'fd' 'unsigned int'
|       | `-DeclRefExpr 0x13a0284e0 <col:32> 'char *' lvalue Var 0x13a028100 'name' 'char *'
|       |-CallExpr 0x139922600 <line:15:9, col:18> 'void'
|       | |-ImplicitCastExpr 0x13a0287d0 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x13a028748 <col:9> 'void (void *)' Function 0x13a0285d8 'free' 'void (void *)'
|       | `-ImplicitCastExpr 0x139922640 <col:14> 'void *' <BitCast>
|       |   `-ImplicitCastExpr 0x139922628 <col:14> 'char *' <LValueToRValue>
|       |     `-DeclRefExpr 0x13a028768 <col:14> 'char *' lvalue Var 0x13a028100 'name' 'char *'
|       |-CallExpr 0x139922778 <line:17:9, col:61> 'int'
|       | |-ImplicitCastExpr 0x139922760 <col:9> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x139922658 <col:9> 'int (char *, const char *, ...)' Function 0x13a027d00 'sprintf' 'int (char *, const char *, ...)'
|       | |-BinaryOperator 0x1399226e8 <col:17, col:35> 'char *' '+'
|       | | |-ImplicitCastExpr 0x1399226b8 <col:17> 'char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x139922678 <col:17> 'char *' lvalue ParmVar 0x13a00dd70 'source_filename' 'char *'
|       | | `-ImplicitCastExpr 0x1399226d0 <col:35> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x139922698 <col:35> 'int' lvalue ParmVar 0x13a00ddf0 'source_base_ofs' 'int'
|       | |-ImplicitCastExpr 0x1399227c8 <col:52> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x1399227b0 <col:52> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x139922708 <col:52> 'char[4]' lvalue "STR"
|       | `-ImplicitCastExpr 0x1399227e0 <col:59> 'unsigned int' <LValueToRValue>
|       |   `-DeclRefExpr 0x139922728 <col:59> 'unsigned int' lvalue Var 0x13a00e330 'fd' 'unsigned int'
|       |-UnaryOperator 0x139922818 <line:18:9, col:11> 'unsigned int' postfix '++'
|       | `-DeclRefExpr 0x1399227f8 <col:9> 'unsigned int' lvalue Var 0x13a00e330 'fd' 'unsigned int'
|       |-IfStmt 0x1399229c0 <line:20:9, line:21:13>
|       | |-UnaryOperator 0x1399229a0 <line:20:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x139922988 <col:14> '<dependent type>' contains-errors <LValueToRValue>
|       | |   `-RecoveryExpr 0x139922968 <col:14> '<dependent type>' contains-errors lvalue
|       | `-ContinueStmt 0x1399229b8 <line:21:13>
|       |-DeclStmt 0x139922ae8 <line:22:9, col:22>
|       | `-VarDecl 0x139922a80 <col:9, col:21> col:14 used buf 'char[128]'
|       `-WhileStmt 0x139923310 <line:23:9, line:30:9>
|         |-CallExpr 0x139922db8 <line:23:16, col:44> '<dependent type>' contains-errors
|         | |-DeclRefExpr 0x139922be0 <col:16> 'int ()' Function 0x139922b28 'fgets' 'int ()'
|         | |-DeclRefExpr 0x139922c00 <col:22> 'char[128]' lvalue Var 0x139922a80 'buf' 'char[128]'
|         | |-BinaryOperator 0x139922d78 <col:27, col:39> 'unsigned long' '-'
|         | | |-UnaryExprOrTypeTraitExpr 0x139922c60 <col:27, col:37> 'unsigned long' sizeof
|         | | | `-ParenExpr 0x139922c40 <col:33, col:37> 'char[128]' lvalue
|         | | |   `-DeclRefExpr 0x139922c20 <col:34> 'char[128]' lvalue Var 0x139922a80 'buf' 'char[128]' non_odr_use_unevaluated
|         | | `-ImplicitCastExpr 0x139922d60 <col:39> 'unsigned long' <IntegralCast>
|         | |   `-IntegerLiteral 0x139922c80 <col:39> 'int' 1
|         | `-RecoveryExpr 0x139922d98 <col:42> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x1399232e8 <line:24:9, line:30:9>
|           |-DeclStmt 0x139923020 <line:26:13, col:45>
|           | `-VarDecl 0x139922e08 <col:13, col:44> col:19 used eol 'char *' cinit
|           |   `-ImplicitCastExpr 0x139923008 <col:25, col:44> 'char *' <IntegralToPointer>
|           |     `-CallExpr 0x139922fc0 <col:25, col:44> 'int'
|           |       |-ImplicitCastExpr 0x139922fa8 <col:25> 'int (*)()' <FunctionToPointerDecay>
|           |       | `-DeclRefExpr 0x139922f50 <col:25> 'int ()' Function 0x139922e98 'strchrnul' 'int ()'
|           |       |-ImplicitCastExpr 0x139922ff0 <col:35> 'char *' <ArrayToPointerDecay>
|           |       | `-DeclRefExpr 0x139922f70 <col:35> 'char[128]' lvalue Var 0x139922a80 'buf' 'char[128]'
|           |       `-CharacterLiteral 0x139922f90 <col:40> 'int' 10
|           |-BinaryOperator 0x1399230e0 <line:27:13, col:22> 'char' '='
|           | |-ArraySubscriptExpr 0x139923090 <col:13, col:18> 'char' lvalue
|           | | |-ImplicitCastExpr 0x139923078 <col:13> 'char *' <LValueToRValue>
|           | | | `-DeclRefExpr 0x139923038 <col:13> 'char *' lvalue Var 0x139922e08 'eol' 'char *'
|           | | `-IntegerLiteral 0x139923058 <col:17> 'int' 0
|           | `-ImplicitCastExpr 0x1399230c8 <col:22> 'char' <IntegralCast>
|           |   `-CharacterLiteral 0x1399230b0 <col:22> 'int' 10
|           `-BinaryOperator 0x1399231a8 <line:28:13, col:22> 'char' '='
|             |-ArraySubscriptExpr 0x139923158 <col:13, col:18> 'char' lvalue
|             | |-ImplicitCastExpr 0x139923140 <col:13> 'char *' <LValueToRValue>
|             | | `-DeclRefExpr 0x139923100 <col:13> 'char *' lvalue Var 0x139922e08 'eol' 'char *'
|             | `-IntegerLiteral 0x139923120 <col:17> 'int' 1
|             `-ImplicitCastExpr 0x139923190 <col:22> 'char' <IntegralCast>
|               `-CharacterLiteral 0x139923178 <col:22> 'int' 0
|-FunctionDecl 0x13a027d00 <line:10:9> col:9 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x13a027e00 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13a027e68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x13a027da8 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x13a027ee0 <col:9> Implicit printf 2 3
`-FunctionDecl 0x13a0285d8 <line:15:9> col:9 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13a0286d8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13a028680 <<invalid sloc>> Implicit 873
