TranslationUnitDecl 0x158055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1580564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158055bd0 '__int128'
|-TypedefDecl 0x158056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158055bf0 'unsigned __int128'
|-TypedefDecl 0x158126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x158126000 'struct __NSConstantString_tag'
|   `-Record 0x158056580 '__NSConstantString_tag'
|-TypedefDecl 0x158126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158055d90 '__SVInt8_t'
|-TypedefDecl 0x158126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158055db0 '__SVInt16_t'
|-TypedefDecl 0x158126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158055dd0 '__SVInt32_t'
|-TypedefDecl 0x1581263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158055df0 '__SVInt64_t'
|-TypedefDecl 0x158126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158055e10 '__SVUint8_t'
|-TypedefDecl 0x1581264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158055e30 '__SVUint16_t'
|-TypedefDecl 0x158126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158055e50 '__SVUint32_t'
|-TypedefDecl 0x158126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158055e70 '__SVUint64_t'
|-TypedefDecl 0x1581265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158055e90 '__SVFloat16_t'
|-TypedefDecl 0x158126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1581266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158055ed0 '__SVFloat64_t'
|-TypedefDecl 0x158126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x158126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1581267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x158126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1581268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x158126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x158126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1581269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x158126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x158126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x158126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x158126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x158126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x158126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158056090 '__clang_svint8x3_t'
|-TypedefDecl 0x158126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1580560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x158126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1580560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x158126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1580560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x158126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x158126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x158126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x158126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x158126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x158127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1580561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x158127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1580561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1581278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1580561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x158127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1581279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158056230 '__clang_svint16x4_t'
|-TypedefDecl 0x158127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158056250 '__clang_svint32x4_t'
|-TypedefDecl 0x158127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158056270 '__clang_svint64x4_t'
|-TypedefDecl 0x158127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x158127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1580562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x158127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1580562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x158127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1580562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x158127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x158127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x158127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x158127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x158127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158056390 '__SVBool_t'
|-TypedefDecl 0x158127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1580563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x158127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1580563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x158127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1580563f0 '__SVCount_t'
|-TypedefDecl 0x158127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x158127fb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
|-TypedefDecl 0x158128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x158127fb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
`-FunctionDecl 0x158128388 <dataset_diviso_filec/func11364_vuln.c:1:1, line:58:1> line:1:12 clone_file 'int (const char *, const char *, const char **, int)' static
  |-ParmVarDecl 0x1581280d8 <col:23, col:35> col:35 used from 'const char *'
  |-ParmVarDecl 0x158128158 <col:41, col:53> col:53 used to 'const char *'
  |-ParmVarDecl 0x158128208 <line:2:23, col:36> col:36 used err_status 'const char **'
  |-ParmVarDecl 0x158128288 <col:48, col:52> col:52 used copy_if_rename_fails 'int'
  `-CompoundStmt 0x1581448a8 <col:74, line:58:1>
    |-DeclStmt 0x1581285f0 <line:4:5, col:21>
    | `-VarDecl 0x158128588 <col:5, col:10> col:10 invalid buf 'char'
    |-UnaryExprOrTypeTraitExpr 0x158128660 <line:5:5, col:12> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x158128640 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x158128738 <line:6:5, col:20>
    | `-VarDecl 0x158128698 <col:5, col:19> col:9 used result 'int' cinit
    |   `-UnaryOperator 0x158128720 <col:18, col:19> 'int' prefix '-'
    |     `-IntegerLiteral 0x158128700 <col:19> 'int' 1
    |-IfStmt 0x158142038 <line:8:5, line:9:16>
    | |-BinaryOperator 0x158141fe8 <line:8:9, col:29> 'int' '=='
    | | |-CallExpr 0x158141f68 <col:9, col:24> 'int'
    | | | |-ImplicitCastExpr 0x158141f50 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x158141eb8 <col:9> 'int ()' Function 0x158141e00 'rename' 'int ()'
    | | | |-ImplicitCastExpr 0x158141f98 <col:16> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x158141ed8 <col:16> 'const char *' lvalue ParmVar 0x1581280d8 'from' 'const char *'
    | | | `-ImplicitCastExpr 0x158141fb0 <col:22> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x158141ef8 <col:22> 'const char *' lvalue ParmVar 0x158128158 'to' 'const char *'
    | | `-IntegerLiteral 0x158141fc8 <col:29> 'int' 0
    | `-ReturnStmt 0x158142028 <line:9:9, col:16>
    |   `-IntegerLiteral 0x158142008 <col:16> 'int' 0
    |-IfStmt 0x1581422f8 <line:10:5, line:13:5>
    | |-RecoveryExpr 0x158142168 <line:10:9, col:48> '_Bool' contains-errors
    | `-CompoundStmt 0x1581422d8 <col:70, line:13:5>
    |   |-BinaryOperator 0x158142270 <line:11:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x1581421c0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1581421a8 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x158142188 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x158142258 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x158142240 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x158142220 <col:23> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x1581422c8 <line:12:9, col:17>
    |     `-UnaryOperator 0x1581422b0 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x158142290 <col:17> 'int' 1
    |-IfStmt 0x158142670 <line:16:5, line:19:5>
    | |-RecoveryExpr 0x158142508 <line:16:9, col:39> '_Bool' contains-errors
    | `-CompoundStmt 0x158142650 <col:42, line:19:5>
    |   |-BinaryOperator 0x1581425c8 <line:17:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x158142560 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x158142548 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x158142528 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x1581425b0 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x158142598 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x158142578 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x158142638 <line:18:9, col:14> 'done' 0x1581425e8
    |-IfStmt 0x1581428b8 <line:21:5, line:24:5>
    | |-RecoveryExpr 0x1581427a0 <line:21:9, col:35> '_Bool' contains-errors
    | `-CompoundStmt 0x158142898 <col:38, line:24:5>
    |   |-BinaryOperator 0x158142860 <line:22:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x1581427f8 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1581427e0 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1581427c0 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x158142848 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x158142830 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x158142810 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x158142880 <line:23:9, col:14> 'done' 0x1581425e8
    |-IfStmt 0x158142b50 <line:26:5, line:27:14>
    | |-BinaryOperator 0x158142b18 <line:26:9, col:59> 'int' contains-errors '<'
    | | |-CallExpr 0x158142ae0 <col:9, col:55> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1581429b8 <col:9> 'int ()' Function 0x158142900 'transfer_file_attrs' 'int ()'
    | | | |-RecoveryExpr 0x158142aa0 <col:29> '<dependent type>' contains-errors lvalue
    | | | |-RecoveryExpr 0x158142ac0 <col:38> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x158142a08 <col:45> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'
    | | `-IntegerLiteral 0x158142a60 <col:59> 'int' 0
    | `-GotoStmt 0x158142b38 <line:27:9, col:14> 'done' 0x1581425e8
    |-WhileStmt 0x158143a68 <line:29:5, line:34:5>
    | |-RecoveryExpr 0x158142ce8 <line:29:12, col:53> '_Bool' contains-errors
    | `-CompoundStmt 0x158143a50 <col:56, line:34:5>
    |   `-IfStmt 0x158143a30 <line:30:9, line:33:9>
    |     |-RecoveryExpr 0x158143918 <line:30:13, col:43> '_Bool' contains-errors
    |     `-CompoundStmt 0x158143a10 <col:48, line:33:9>
    |       |-BinaryOperator 0x1581439d8 <line:31:13, col:27> 'const char *' '='
    |       | |-UnaryOperator 0x158143970 <col:13, col:14> 'const char *' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x158143958 <col:14> 'const char **' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x158143938 <col:14> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'
    |       | `-ImplicitCastExpr 0x1581439c0 <col:27> 'const char *' <NoOp>
    |       |   `-ImplicitCastExpr 0x1581439a8 <col:27> 'char *' <ArrayToPointerDecay>
    |       |     `-StringLiteral 0x158143988 <col:27> 'char[4]' lvalue "STR"
    |       `-GotoStmt 0x1581439f8 <line:32:13, col:18> 'done' 0x1581425e8
    |-IfStmt 0x158143ca0 <line:35:5, line:38:5>
    | |-RecoveryExpr 0x158143b88 <line:35:9, col:23> '_Bool' contains-errors
    | `-CompoundStmt 0x158143c80 <col:26, line:38:5>
    |   |-BinaryOperator 0x158143c48 <line:36:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x158143be0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x158143bc8 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x158143ba8 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x158143c30 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x158143c18 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x158143bf8 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x158143c68 <line:37:9, col:14> 'done' 0x1581425e8
    |-IfStmt 0x158143ef8 <line:39:5, line:42:5>
    | |-RecoveryExpr 0x158143de0 <line:39:9, col:26> '_Bool' contains-errors
    | `-CompoundStmt 0x158143ed8 <col:29, line:42:5>
    |   |-BinaryOperator 0x158143ea0 <line:40:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x158143e38 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x158143e20 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x158143e00 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x158143e88 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x158143e70 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x158143e50 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x158143ec0 <line:41:9, col:14> 'done' 0x1581425e8
    |-IfStmt 0x158144250 <line:43:5, line:46:5>
    | |-RecoveryExpr 0x158144138 <line:43:9, col:32> '_Bool' contains-errors
    | `-CompoundStmt 0x158144230 <col:35, line:46:5>
    |   |-BinaryOperator 0x1581441f8 <line:44:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x158144190 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x158144178 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x158144158 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x1581441e0 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x1581441c8 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x1581441a8 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x158144218 <line:45:9, col:14> 'done' 0x1581425e8
    |-BinaryOperator 0x1581442b0 <line:47:5, col:14> 'int' '='
    | |-DeclRefExpr 0x158144270 <col:5> 'int' lvalue Var 0x158128698 'result' 'int'
    | `-IntegerLiteral 0x158144290 <col:14> 'int' 0
    |-LabelStmt 0x1581443f8 <line:48:2, col:6> 'done'
    | `-NullStmt 0x1581443f0 <col:6>
    |-IfStmt 0x1581444f0 <line:51:5, line:52:19>
    | |-RecoveryExpr 0x158144458 <line:51:9, col:43> '_Bool' contains-errors
    | `-BinaryOperator 0x1581444d0 <line:52:9, col:19> 'int' '='
    |   |-DeclRefExpr 0x158144478 <col:9> 'int' lvalue Var 0x158128698 'result' 'int'
    |   `-UnaryOperator 0x1581444b8 <col:18, col:19> 'int' prefix '-'
    |     `-IntegerLiteral 0x158144498 <col:19> 'int' 1
    |-IfStmt 0x158144700 <line:53:5, line:54:18>
    | |-BinaryOperator 0x158144568 <line:53:9, col:19> 'int' '!='
    | | |-ImplicitCastExpr 0x158144550 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x158144510 <col:9> 'int' lvalue Var 0x158128698 'result' 'int'
    | | `-IntegerLiteral 0x158144530 <col:19> 'int' 0
    | `-CallExpr 0x1581446c0 <line:54:9, col:18> 'int'
    |   |-ImplicitCastExpr 0x1581446a8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x158144668 <col:9> 'int ()' Function 0x1581445b0 'unlink' 'int ()'
    |   `-ImplicitCastExpr 0x1581446e8 <col:16> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x158144688 <col:16> 'const char *' lvalue ParmVar 0x158128158 'to' 'const char *'
    |-IfStmt 0x158144840 <line:55:5, line:56:20>
    | |-BinaryOperator 0x158144778 <line:55:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x158144760 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x158144720 <col:9> 'int' lvalue Var 0x158128698 'result' 'int'
    | | `-IntegerLiteral 0x158144740 <col:19> 'int' 0
    | `-CallExpr 0x158144800 <line:56:9, col:20> 'int'
    |   |-ImplicitCastExpr 0x1581447d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x158144798 <col:9> 'int ()' Function 0x1581445b0 'unlink' 'int ()'
    |   `-ImplicitCastExpr 0x158144828 <col:16> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x1581447b8 <col:16> 'const char *' lvalue ParmVar 0x1581280d8 'from' 'const char *'
    `-ReturnStmt 0x158144898 <line:57:5, col:12>
      `-ImplicitCastExpr 0x158144880 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x158144860 <col:12> 'int' lvalue Var 0x158128698 'result' 'int'
