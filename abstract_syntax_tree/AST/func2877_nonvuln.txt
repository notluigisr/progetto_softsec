TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x123126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x123126800 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x123126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x123126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x123126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x123126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x123126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x123126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x123126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x123126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x123126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x123126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x123126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x123126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x123126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x123126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x123127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1231270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x123127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x123127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1231271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x123127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1231272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x123127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x123127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1231273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x123127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1231274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x123127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x123127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1231275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x123127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1231276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x123127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x123127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1231280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1231281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x123128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x123128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1231282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x123128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1231283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1231284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1231285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x123128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1231286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x123128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x1231287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1231287b0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x123128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1231287b0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
`-FunctionDecl 0x123128a58 <dataset_diviso_filec/func2877_nonvuln.c:1:1, line:69:1> line:1:15 invalid ossl_version 'int (char *, int)' static
  |-ParmVarDecl 0x1231288f0 <col:28, col:34> col:34 used buffer 'char *'
  |-ParmVarDecl 0x123128970 <col:42, col:49> col:49 invalid size 'int'
  `-CompoundStmt 0x123144758 <line:2:1, line:69:1>
    |-DeclStmt 0x123128c18 <line:33:3, col:14>
    | `-VarDecl 0x123128bb0 <col:3, col:13> col:8 used sub 'char[3]'
    |-DeclStmt 0x123128cb0 <line:34:3, col:29>
    | `-VarDecl 0x123128c48 <col:3, col:17> col:17 used ssleay_value 'unsigned long'
    |-BinaryOperator 0x123128d70 <line:35:3, col:10> 'char' '='
    | |-ArraySubscriptExpr 0x123128d20 <col:3, col:8> 'char' lvalue
    | | |-ImplicitCastExpr 0x123128d08 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x123128cc8 <col:3> 'char[3]' lvalue Var 0x123128bb0 'sub' 'char[3]'
    | | `-IntegerLiteral 0x123128ce8 <col:7> 'int' 2
    | `-ImplicitCastExpr 0x123128d58 <col:10> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x123128d40 <col:10> 'int' 0
    |-BinaryOperator 0x123128e38 <line:36:3, col:10> 'char' '='
    | |-ArraySubscriptExpr 0x123128de8 <col:3, col:8> 'char' lvalue
    | | |-ImplicitCastExpr 0x123128dd0 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x123128d90 <col:3> 'char[3]' lvalue Var 0x123128bb0 'sub' 'char[3]'
    | | `-IntegerLiteral 0x123128db0 <col:7> 'int' 1
    | `-ImplicitCastExpr 0x123128e20 <col:10> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x123128e08 <col:10> 'int' 0
    |-BinaryOperator 0x123142080 <line:37:3, col:38> 'unsigned long' '='
    | |-DeclRefExpr 0x123128e58 <col:3> 'unsigned long' lvalue Var 0x123128c48 'ssleay_value' 'unsigned long'
    | `-ImplicitCastExpr 0x123142068 <col:18, col:38> 'unsigned long' <IntegralCast>
    |   `-CallExpr 0x123142048 <col:18, col:38> 'int'
    |     `-ImplicitCastExpr 0x123142030 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x123128fd0 <col:18> 'int ()' Function 0x123128f18 'OpenSSL_version_num' 'int ()'
    |-IfStmt 0x123142bd8 <line:38:3, line:56:3> has_else
    | |-BinaryOperator 0x123142110 <line:38:6, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x1231420e0 <col:6> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1231420a0 <col:6> 'unsigned long' lvalue Var 0x123128c48 'ssleay_value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1231420f8 <col:21> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1231420c0 <col:21> 'int' 9461760
    | |-CompoundStmt 0x123142290 <col:31, line:41:3>
    | | |-BinaryOperator 0x1231421a8 <line:39:5, col:20> 'unsigned long' contains-errors '='
    | | | |-DeclRefExpr 0x123142130 <col:5> 'unsigned long' lvalue Var 0x123128c48 'ssleay_value' 'unsigned long'
    | | | `-RecoveryExpr 0x123142188 <col:20> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x123142270 <line:40:5, col:12> 'char' '='
    | |   |-ArraySubscriptExpr 0x123142220 <col:5, col:10> 'char' lvalue
    | |   | |-ImplicitCastExpr 0x123142208 <col:5> 'char *' <ArrayToPointerDecay>
    | |   | | `-DeclRefExpr 0x1231421c8 <col:5> 'char[3]' lvalue Var 0x123128bb0 'sub' 'char[3]'
    | |   | `-IntegerLiteral 0x1231421e8 <col:9> 'int' 0
    | |   `-ImplicitCastExpr 0x123142258 <col:12> 'char' <IntegralCast>
    | |     `-CharacterLiteral 0x123142240 <col:12> 'int' 0
    | `-CompoundStmt 0x123142bc0 <line:42:8, line:56:3>
    |   `-IfStmt 0x123142b90 <line:43:5, line:55:14> has_else
    |     |-BinaryOperator 0x123142320 <line:43:8, col:21> 'unsigned long' '&'
    |     | |-ImplicitCastExpr 0x1231422f0 <col:8> 'unsigned long' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1231422b0 <col:8> 'unsigned long' lvalue Var 0x123128c48 'ssleay_value' 'unsigned long'
    |     | `-ImplicitCastExpr 0x123142308 <col:21> 'unsigned long' <IntegralCast>
    |     |   `-IntegerLiteral 0x1231422d0 <col:21> 'int' 4080
    |     |-CompoundStmt 0x123142aa8 <col:28, line:53:5>
    |     | |-DeclStmt 0x1231424c8 <line:44:7, col:49>
    |     | | `-VarDecl 0x123142358 <col:7, col:45> col:11 used minor_ver 'int' cinit
    |     | |   `-ImplicitCastExpr 0x1231424b0 <col:23, col:45> 'int' <IntegralCast>
    |     | |     `-BinaryOperator 0x123142490 <col:23, col:45> 'unsigned long' '&'
    |     | |       |-ParenExpr 0x123142438 <col:23, col:41> 'unsigned long'
    |     | |       | `-BinaryOperator 0x123142418 <col:24, col:40> 'unsigned long' '>>'
    |     | |       |   |-ImplicitCastExpr 0x123142400 <col:24> 'unsigned long' <LValueToRValue>
    |     | |       |   | `-DeclRefExpr 0x1231423c0 <col:24> 'unsigned long' lvalue Var 0x123128c48 'ssleay_value' 'unsigned long'
    |     | |       |   `-IntegerLiteral 0x1231423e0 <col:40> 'int' 4
    |     | |       `-ImplicitCastExpr 0x123142478 <col:45> 'unsigned long' <IntegralCast>
    |     | |         `-IntegerLiteral 0x123142458 <col:45> 'int' 255
    |     | `-IfStmt 0x123142a78 <line:45:7, line:52:7> has_else
    |     |   |-BinaryOperator 0x123142538 <line:45:10, col:22> 'int' '>'
    |     |   | |-ImplicitCastExpr 0x123142520 <col:10> 'int' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x1231424e0 <col:10> 'int' lvalue Var 0x123142358 'minor_ver' 'int'
    |     |   | `-IntegerLiteral 0x123142500 <col:22> 'int' 26
    |     |   |-CompoundStmt 0x123142880 <col:26, line:49:7>
    |     |   | |-BinaryOperator 0x123142798 <line:47:9, col:56> 'char' '='
    |     |   | | |-ArraySubscriptExpr 0x1231425b0 <col:9, col:14> 'char' lvalue
    |     |   | | | |-ImplicitCastExpr 0x123142598 <col:9> 'char *' <ArrayToPointerDecay>
    |     |   | | | | `-DeclRefExpr 0x123142558 <col:9> 'char[3]' lvalue Var 0x123128bb0 'sub' 'char[3]'
    |     |   | | | `-IntegerLiteral 0x123142578 <col:13> 'int' 1
    |     |   | | `-CStyleCastExpr 0x123142770 <col:18, col:56> 'char' <IntegralCast>
    |     |   | |   `-ParenExpr 0x123142750 <col:25, col:56> 'int'
    |     |   | |     `-BinaryOperator 0x123142700 <col:26, col:55> 'int' '+'
    |     |   | |       |-BinaryOperator 0x1231426c0 <col:26, col:49> 'int' '+'
    |     |   | |       | |-BinaryOperator 0x123142688 <col:26, col:44> 'int' '%'
    |     |   | |       | | |-ParenExpr 0x123142648 <col:26, col:40> 'int'
    |     |   | |       | | | `-BinaryOperator 0x123142628 <col:27, col:39> 'int' '-'
    |     |   | |       | | |   |-ImplicitCastExpr 0x123142610 <col:27> 'int' <LValueToRValue>
    |     |   | |       | | |   | `-DeclRefExpr 0x1231425d0 <col:27> 'int' lvalue Var 0x123142358 'minor_ver' 'int'
    |     |   | |       | | |   `-IntegerLiteral 0x1231425f0 <col:39> 'int' 1
    |     |   | |       | | `-IntegerLiteral 0x123142668 <col:44> 'int' 26
    |     |   | |       | `-CharacterLiteral 0x1231426a8 <col:49> 'int' 97
    |     |   | |       `-IntegerLiteral 0x1231426e0 <col:55> 'int' 1
    |     |   | `-BinaryOperator 0x123142860 <line:48:9, col:18> 'char' '='
    |     |   |   |-ArraySubscriptExpr 0x123142810 <col:9, col:14> 'char' lvalue
    |     |   |   | |-ImplicitCastExpr 0x1231427f8 <col:9> 'char *' <ArrayToPointerDecay>
    |     |   |   | | `-DeclRefExpr 0x1231427b8 <col:9> 'char[3]' lvalue Var 0x123128bb0 'sub' 'char[3]'
    |     |   |   | `-IntegerLiteral 0x1231427d8 <col:13> 'int' 0
    |     |   |   `-ImplicitCastExpr 0x123142848 <col:18> 'char' <IntegralCast>
    |     |   |     `-CharacterLiteral 0x123142830 <col:18> 'int' 122
    |     |   `-CompoundStmt 0x123142a60 <line:50:12, line:52:7>
    |     |     `-BinaryOperator 0x123142a40 <line:51:9, col:45> 'char' '='
    |     |       |-ArraySubscriptExpr 0x1231428f8 <col:9, col:14> 'char' lvalue
    |     |       | |-ImplicitCastExpr 0x1231428e0 <col:9> 'char *' <ArrayToPointerDecay>
    |     |       | | `-DeclRefExpr 0x1231428a0 <col:9> 'char[3]' lvalue Var 0x123128bb0 'sub' 'char[3]'
    |     |       | `-IntegerLiteral 0x1231428c0 <col:13> 'int' 0
    |     |       `-CStyleCastExpr 0x123142a18 <col:18, col:45> 'char' <IntegralCast>
    |     |         `-ParenExpr 0x1231429f8 <col:25, col:45> 'int'
    |     |           `-BinaryOperator 0x1231429a8 <col:26, col:44> 'int' '-'
    |     |             |-BinaryOperator 0x123142968 <col:26, col:38> 'int' '+'
    |     |             | |-ImplicitCastExpr 0x123142950 <col:26> 'int' <LValueToRValue>
    |     |             | | `-DeclRefExpr 0x123142918 <col:26> 'int' lvalue Var 0x123142358 'minor_ver' 'int'
    |     |             | `-CharacterLiteral 0x123142938 <col:38> 'int' 97
    |     |             `-IntegerLiteral 0x123142988 <col:44> 'int' 1
    |     `-BinaryOperator 0x123142b70 <line:55:7, col:14> 'char' '='
    |       |-ArraySubscriptExpr 0x123142b20 <col:7, col:12> 'char' lvalue
    |       | |-ImplicitCastExpr 0x123142b08 <col:7> 'char *' <ArrayToPointerDecay>
    |       | | `-DeclRefExpr 0x123142ac8 <col:7> 'char[3]' lvalue Var 0x123128bb0 'sub' 'char[3]'
    |       | `-IntegerLiteral 0x123142ae8 <col:11> 'int' 0
    |       `-ImplicitCastExpr 0x123142b58 <col:14> 'char' <IntegralCast>
    |         `-CharacterLiteral 0x123142b40 <col:14> 'int' 0
    `-ReturnStmt 0x123144748 <line:58:3, line:67:23>
      `-CallExpr 0x1231446e8 <line:58:10, line:67:23> '<dependent type>' contains-errors
        |-DeclRefExpr 0x123142ce8 <line:58:10> 'int ()' Function 0x123142c30 'msnprintf' 'int ()'
        |-DeclRefExpr 0x123142d08 <col:20> 'char *' lvalue ParmVar 0x1231288f0 'buffer' 'char *'
        |-RecoveryExpr 0x123142d28 <col:28> '<dependent type>' contains-errors lvalue
        |-StringLiteral 0x123142d90 <col:34> 'char[4]' lvalue "STR"
        |-RecoveryExpr 0x123144518 <line:63:20> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x1231445a8 <line:64:20, col:39> 'unsigned long' '&'
        | |-ParenExpr 0x123144570 <col:20, col:37> 'unsigned long'
        | | `-BinaryOperator 0x123144550 <col:21, col:35> 'unsigned long' '>>'
        | |   |-ImplicitCastExpr 0x123144538 <col:21> 'unsigned long' <LValueToRValue>
        | |   | `-DeclRefExpr 0x123142dc8 <col:21> 'unsigned long' lvalue Var 0x123128c48 'ssleay_value' 'unsigned long'
        | |   `-IntegerLiteral 0x123142de8 <col:35> 'int' 28
        | `-ImplicitCastExpr 0x123144590 <col:39> 'unsigned long' <IntegralCast>
        |   `-IntegerLiteral 0x123142e60 <col:39> 'int' 15
        |-BinaryOperator 0x123144638 <line:65:20, col:39> 'unsigned long' '&'
        | |-ParenExpr 0x123144600 <col:20, col:37> 'unsigned long'
        | | `-BinaryOperator 0x1231445e0 <col:21, col:35> 'unsigned long' '>>'
        | |   |-ImplicitCastExpr 0x1231445c8 <col:21> 'unsigned long' <LValueToRValue>
        | |   | `-DeclRefExpr 0x123142eb8 <col:21> 'unsigned long' lvalue Var 0x123128c48 'ssleay_value' 'unsigned long'
        | |   `-IntegerLiteral 0x123142ed8 <col:35> 'int' 20
        | `-ImplicitCastExpr 0x123144620 <col:39> 'unsigned long' <IntegralCast>
        |   `-IntegerLiteral 0x123142f50 <col:39> 'int' 255
        |-BinaryOperator 0x1231446c8 <line:66:20, col:39> 'unsigned long' '&'
        | |-ParenExpr 0x123144690 <col:20, col:37> 'unsigned long'
        | | `-BinaryOperator 0x123144670 <col:21, col:35> 'unsigned long' '>>'
        | |   |-ImplicitCastExpr 0x123144658 <col:21> 'unsigned long' <LValueToRValue>
        | |   | `-DeclRefExpr 0x123142fa8 <col:21> 'unsigned long' lvalue Var 0x123128c48 'ssleay_value' 'unsigned long'
        | |   `-IntegerLiteral 0x123142fc8 <col:35> 'int' 12
        | `-ImplicitCastExpr 0x1231446b0 <col:39> 'unsigned long' <IntegralCast>
        |   `-IntegerLiteral 0x123144440 <col:39> 'int' 255
        `-DeclRefExpr 0x123144498 <line:67:20> 'char[3]' lvalue Var 0x123128bb0 'sub' 'char[3]'
