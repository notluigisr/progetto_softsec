TranslationUnitDecl 0x131855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1318564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x131855bd0 '__int128'
|-TypedefDecl 0x131856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x131855bf0 'unsigned __int128'
|-TypedefDecl 0x131926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x131926800 'struct __NSConstantString_tag'
|   `-Record 0x131856580 '__NSConstantString_tag'
|-TypedefDecl 0x131926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x131855d90 '__SVInt8_t'
|-TypedefDecl 0x131926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x131855db0 '__SVInt16_t'
|-TypedefDecl 0x131926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x131855dd0 '__SVInt32_t'
|-TypedefDecl 0x131926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x131855df0 '__SVInt64_t'
|-TypedefDecl 0x131926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x131855e10 '__SVUint8_t'
|-TypedefDecl 0x131926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x131855e30 '__SVUint16_t'
|-TypedefDecl 0x131926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x131855e50 '__SVUint32_t'
|-TypedefDecl 0x131926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x131855e70 '__SVUint64_t'
|-TypedefDecl 0x131926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x131855e90 '__SVFloat16_t'
|-TypedefDecl 0x131926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x131855eb0 '__SVFloat32_t'
|-TypedefDecl 0x131926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x131855ed0 '__SVFloat64_t'
|-TypedefDecl 0x131926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x131855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x131926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x131855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x131926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x131855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x131927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x131855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1319270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x131855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x131927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x131855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x131927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x131855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1319271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x131855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x131927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x131855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1319272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x131856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x131927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x131856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x131927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x131856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1319273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x131856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x131927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x131856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1319274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1318560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x131927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1318560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x131927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1318560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1319275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x131856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x131927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x131856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1319276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x131856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x131927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x131856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x131927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x131856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x131928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1318561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x131928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1318561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1319280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1318561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x131928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x131856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1319281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x131856230 '__clang_svint16x4_t'
|-TypedefDecl 0x131928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x131856250 '__clang_svint32x4_t'
|-TypedefDecl 0x131928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x131856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1319282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x131856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x131928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1318562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1319283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1318562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x131928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1318562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x131928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x131856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1319284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x131856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x131928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x131856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1319285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x131856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x131928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x131856390 '__SVBool_t'
|-TypedefDecl 0x131928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1318563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1319286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1318563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x131928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1318563f0 '__SVCount_t'
|-TypedefDecl 0x1319287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1319287b0 'char *'
|   `-BuiltinType 0x1318556b0 'char'
|-TypedefDecl 0x131928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1319287b0 'char *'
|   `-BuiltinType 0x1318556b0 'char'
|-FunctionDecl 0x131928cf8 <dataset_diviso_filec/func7621_vuln.c:1:1, line:80:1> line:1:13 invalid php_stream_zip_opener 'int *(int *, char *, char *, int, char **, int *)'
| |-ParmVarDecl 0x131928928 <col:35, col:55> col:55 invalid wrapper 'int *'
| |-ParmVarDecl 0x1319289a8 <line:2:12, col:18> col:18 used path 'char *'
| |-ParmVarDecl 0x131928a28 <line:3:12, col:18> col:18 used mode 'char *'
| |-ParmVarDecl 0x131928aa8 <line:4:12, col:16> col:16 options 'int'
| |-ParmVarDecl 0x131928b58 <line:5:12, col:19> col:19 used opened_path 'char **'
| |-ParmVarDecl 0x131928bd8 <line:6:12, col:32> col:32 invalid context 'int *'
| `-CompoundStmt 0x1319468c8 <line:7:1, line:80:1>
|   |-DeclStmt 0x131928e50 <line:8:2, col:14>
|   | `-VarDecl 0x131928de8 <col:2, col:6> col:6 used path_len 'int'
|   |-DeclStmt 0x131928ee8 <line:10:2, col:21>
|   | `-VarDecl 0x131928e80 <col:2, col:8> col:8 used file_basename 'char *'
|   |-UnaryExprOrTypeTraitExpr 0x131928f58 <line:11:2, col:9> 'unsigned long' sizeof
|   | `-DeclRefExpr 0x131928f38 <col:9> 'char *' lvalue Var 0x131928e80 'file_basename' 'char *' non_odr_use_unevaluated
|   |-DeclStmt 0x131942068 <line:12:2, col:31>
|   | `-VarDecl 0x131942000 <col:2, col:7> col:7 referenced invalid file_dirname 'char'
|   |-DeclStmt 0x131942268 <line:14:2, col:16>
|   | |-RecordDecl 0x131942080 <col:2, col:9> col:9 struct zip
|   | `-VarDecl 0x1319421e8 <col:2, col:14> col:14 used za 'struct zip *'
|   |-DeclStmt 0x1319424a0 <line:15:2, col:28>
|   | |-RecordDecl 0x131942280 <col:2, col:9> col:9 struct zip_file
|   | `-VarDecl 0x1319423e8 <col:2, col:24> col:19 used zf 'struct zip_file *' cinit
|   |   `-RecoveryExpr 0x131942468 <col:24> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x131942538 <line:16:2, col:16>
|   | `-VarDecl 0x1319424d0 <col:2, col:8> col:8 used fragment 'char *'
|   |-DeclStmt 0x1319425d0 <line:17:2, col:18>
|   | `-VarDecl 0x131942568 <col:2, col:6> col:6 used fragment_len 'int'
|   |-DeclStmt 0x131942668 <line:18:2, col:9>
|   | `-VarDecl 0x131942600 <col:2, col:6> col:6 used err 'int'
|   |-DeclStmt 0x131942898 <line:21:2, col:36>
|   | |-RecordDecl 0x1319426b0 <col:2, col:9> col:9 struct php_zip_stream_data_t
|   | `-VarDecl 0x131942818 <col:2, col:32> col:32 used self 'struct php_zip_stream_data_t *'
|   |-BinaryOperator 0x131943830 <line:23:2, col:29> 'char *' '='
|   | |-DeclRefExpr 0x1319428b0 <col:2> 'char *' lvalue Var 0x1319424d0 'fragment' 'char *'
|   | `-CallExpr 0x131942fc8 <col:13, col:29> 'char *'
|   |   |-ImplicitCastExpr 0x131942fb0 <col:13> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x131942f10 <col:13> 'char *(const char *, int)' Function 0x131942d30 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x131943818 <col:20> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x131943800 <col:20> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x131942f30 <col:20> 'char *' lvalue ParmVar 0x1319289a8 'path' 'char *'
|   |   `-CharacterLiteral 0x131942f50 <col:26> 'int' 35
|   |-IfStmt 0x131943900 <line:24:2, line:26:2>
|   | |-UnaryOperator 0x131943888 <line:24:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x131943870 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x131943850 <col:7> 'char *' lvalue Var 0x1319424d0 'fragment' 'char *'
|   | `-CompoundStmt 0x1319438e8 <col:17, line:26:2>
|   |   `-ReturnStmt 0x1319438d8 <line:25:3, col:10>
|   |     `-RecoveryExpr 0x1319438b8 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x131943e70 <line:28:2, line:30:2>
|   | |-BinaryOperator 0x131943dc8 <line:28:6, col:37> 'int' '=='
|   | | |-CallExpr 0x131943cf8 <col:6, col:32> 'int'
|   | | | |-ImplicitCastExpr 0x131943ce0 <col:6> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x131943bb8 <col:6> 'int (const char *, const char *, unsigned long)' Function 0x131943968 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | | | |-ImplicitCastExpr 0x131943d48 <col:18> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x131943d30 <col:18> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x131943c20 <col:18> 'char[4]' lvalue "STR"
|   | | | |-ImplicitCastExpr 0x131943d78 <col:25> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x131943d60 <col:25> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x131943c40 <col:25> 'char *' lvalue ParmVar 0x1319289a8 'path' 'char *'
|   | | | `-ImplicitCastExpr 0x131943d90 <col:31> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x131943c60 <col:31> 'int' 6
|   | | `-IntegerLiteral 0x131943da8 <col:37> 'int' 0
|   | `-CompoundStmt 0x131943e58 <col:40, line:30:2>
|   |   `-CompoundAssignOperator 0x131943e28 <line:29:3, col:11> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x131943de8 <col:3> 'char *' lvalue ParmVar 0x1319289a8 'path' 'char *'
|   |     `-IntegerLiteral 0x131943e08 <col:11> 'int' 6
|   |-BinaryOperator 0x131944168 <line:32:2, col:32> 'int' '='
|   | |-DeclRefExpr 0x131943e90 <col:2> 'int' lvalue Var 0x131942568 'fragment_len' 'int'
|   | `-ImplicitCastExpr 0x131944150 <col:17, col:32> 'int' <IntegralCast>
|   |   `-CallExpr 0x1319440f8 <col:17, col:32> 'unsigned long'
|   |     |-ImplicitCastExpr 0x1319440e0 <col:17> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x131944058 <col:17> 'unsigned long (const char *)' Function 0x131943ee8 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x131944138 <col:24> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x131944120 <col:24> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x131944078 <col:24> 'char *' lvalue Var 0x1319424d0 'fragment' 'char *'
|   |-IfStmt 0x131944260 <line:34:2, line:36:2>
|   | |-BinaryOperator 0x1319441e0 <line:34:6, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1319441c8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x131944188 <col:6> 'int' lvalue Var 0x131942568 'fragment_len' 'int'
|   | | `-IntegerLiteral 0x1319441a8 <col:21> 'int' 1
|   | `-CompoundStmt 0x131944248 <col:24, line:36:2>
|   |   `-ReturnStmt 0x131944238 <line:35:3, col:10>
|   |     `-RecoveryExpr 0x131944218 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131944380 <line:37:2, col:24> 'int' '='
|   | |-DeclRefExpr 0x131944280 <col:2> 'int' lvalue Var 0x131928de8 'path_len' 'int'
|   | `-ImplicitCastExpr 0x131944368 <col:13, col:24> 'int' <IntegralCast>
|   |   `-CallExpr 0x131944310 <col:13, col:24> 'unsigned long'
|   |     |-ImplicitCastExpr 0x1319442f8 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1319442a0 <col:13> 'unsigned long (const char *)' Function 0x131943ee8 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x131944350 <col:20> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x131944338 <col:20> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1319442c0 <col:20> 'char *' lvalue ParmVar 0x1319289a8 'path' 'char *'
|   |-IfStmt 0x131944640 <line:38:2, line:40:2>
|   | |-BinaryOperator 0x1319445c0 <line:38:6, col:43> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x131944518 <col:6, col:18> 'int' contains-errors '>='
|   | | | |-DeclRefExpr 0x1319443a0 <col:6> 'int' lvalue Var 0x131928de8 'path_len' 'int'
|   | | | `-RecoveryExpr 0x1319444f8 <col:18> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1319445a0 <col:32, col:43> 'int' '!='
|   | |   |-ImplicitCastExpr 0x131944588 <col:32, col:38> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x131944570 <col:32, col:38> 'char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x131944550 <col:32, col:38> 'char' lvalue
|   | |   |     |-ImplicitCastExpr 0x131944538 <col:32> 'char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1319443f8 <col:32> 'char *' lvalue ParmVar 0x131928a28 'mode' 'char *'
|   | |   |     `-IntegerLiteral 0x131944418 <col:37> 'int' 0
|   | |   `-CharacterLiteral 0x131944470 <col:43> 'int' 114
|   | `-CompoundStmt 0x131944628 <col:48, line:40:2>
|   |   `-ReturnStmt 0x131944618 <line:39:3, col:10>
|   |     `-RecoveryExpr 0x1319445f8 <col:10> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x131944a70 <line:42:2, col:52> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x131944950 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x1319446d8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-RecoveryExpr 0x131944970 <col:9> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x131944990 <col:23> 'char *' lvalue ParmVar 0x1319289a8 'path' 'char *'
|   | `-BinaryOperator 0x131944a20 <col:29, col:40> 'int' '-'
|   |   |-ImplicitCastExpr 0x1319449f0 <col:29> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1319449b0 <col:29> 'int' lvalue Var 0x131928de8 'path_len' 'int'
|   |   `-ImplicitCastExpr 0x131944a08 <col:40> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1319449d0 <col:40> 'int' lvalue Var 0x131942568 'fragment_len' 'int'
|   |-BinaryOperator 0x131944bd0 <line:43:2, col:42> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x131944b98 <col:2, col:38> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x131944b80 <col:2> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-RecoveryExpr 0x131944ac8 <col:2> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x131944aa8 <col:2> 'char' lvalue Var 0x131942000 'file_dirname' 'char'
|   | | `-BinaryOperator 0x131944b60 <col:15, col:26> 'int' '-'
|   | |   |-ImplicitCastExpr 0x131944b30 <col:15> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x131944af0 <col:15> 'int' lvalue Var 0x131928de8 'path_len' 'int'
|   | |   `-ImplicitCastExpr 0x131944b48 <col:26> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x131944b10 <col:26> 'int' lvalue Var 0x131942568 'fragment_len' 'int'
|   | `-CharacterLiteral 0x131944bb8 <col:42> 'int' 0
|   |-UnaryOperator 0x131944e98 <line:46:2, col:10> 'char *' postfix '++'
|   | `-DeclRefExpr 0x131944e78 <col:2> 'char *' lvalue Var 0x1319424d0 'fragment' 'char *'
|   |-IfStmt 0x1319451c0 <line:48:2, line:51:2>
|   | |-CallExpr 0x131944fd0 <line:48:6, col:44> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x131944f90 <col:6> 'int ()' Function 0x131944ed8 'ZIP_OPENBASEDIR_CHECKPATH' 'int ()'
|   | | `-RecoveryExpr 0x131944fb0 <col:32> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1319451a8 <col:47, line:51:2>
|   |   `-CallExpr 0x131945168 <line:49:3, col:22> 'int'
|   |     |-ImplicitCastExpr 0x131945150 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1319450d8 <col:3> 'int ()' Function 0x131945020 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x131945190 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1319450f8 <col:9> 'char *' lvalue Var 0x131928e80 'file_basename' 'char *'
|   |-IfStmt 0x1319467a0 <line:54:2, line:71:2>
|   | |-ImplicitCastExpr 0x131945378 <line:54:6> 'struct zip *' <LValueToRValue>
|   | | `-DeclRefExpr 0x131945358 <col:6> 'struct zip *' lvalue Var 0x1319421e8 'za' 'struct zip *'
|   | `-CompoundStmt 0x131946780 <col:10, line:71:2>
|   |   |-BinaryOperator 0x1319455a8 <line:55:3, col:33> 'struct zip_file *' contains-errors '='
|   |   | |-DeclRefExpr 0x131945390 <col:3> 'struct zip_file *' contains-errors lvalue Var 0x1319423e8 'zf' 'struct zip_file *'
|   |   | `-ImplicitCastExpr 0x131945590 <col:8, col:33> 'struct zip_file *' <IntegralToPointer>
|   |   |   `-CallExpr 0x131945528 <col:8, col:33> 'int'
|   |   |     |-ImplicitCastExpr 0x131945510 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x131945490 <col:8> 'int ()' Function 0x1319453d8 'zip_fopen' 'int ()'
|   |   |     |-ImplicitCastExpr 0x131945560 <col:18> 'struct zip *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1319454b0 <col:18> 'struct zip *' lvalue Var 0x1319421e8 'za' 'struct zip *'
|   |   |     |-ImplicitCastExpr 0x131945578 <col:22> 'char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1319454d0 <col:22> 'char *' lvalue Var 0x1319424d0 'fragment' 'char *'
|   |   |     `-IntegerLiteral 0x1319454f0 <col:32> 'int' 0
|   |   `-IfStmt 0x131946750 <line:56:3, line:70:3> has_else
|   |     |-ImplicitCastExpr 0x1319455e8 <line:56:7> 'struct zip_file *' contains-errors <LValueToRValue>
|   |     | `-DeclRefExpr 0x1319455c8 <col:7> 'struct zip_file *' contains-errors lvalue Var 0x1319423e8 'zf' 'struct zip_file *'
|   |     |-CompoundStmt 0x131946590 <col:11, line:68:3>
|   |     | |-BinaryOperator 0x131946020 <line:59:4, col:15> '<dependent type>' contains-errors '='
|   |     | | |-RecoveryExpr 0x1319457c8 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x131945790 <col:4> 'struct php_zip_stream_data_t *' lvalue Var 0x131942818 'self' 'struct php_zip_stream_data_t *'
|   |     | | `-DeclRefExpr 0x131946000 <col:15> 'struct zip *' lvalue Var 0x1319421e8 'za' 'struct zip *'
|   |     | |-BinaryOperator 0x1319460c0 <line:60:4, col:15> '<dependent type>' contains-errors '='
|   |     | | |-RecoveryExpr 0x131946078 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x131946040 <col:4> 'struct php_zip_stream_data_t *' lvalue Var 0x131942818 'self' 'struct php_zip_stream_data_t *'
|   |     | | `-DeclRefExpr 0x1319460a0 <col:15> 'struct zip_file *' contains-errors lvalue Var 0x1319423e8 'zf' 'struct zip_file *'
|   |     | |-BinaryOperator 0x1319461c0 <line:62:4, col:19> '<dependent type>' contains-errors '='
|   |     | | |-RecoveryExpr 0x131946178 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x131946140 <col:4> 'struct php_zip_stream_data_t *' lvalue Var 0x131942818 'self' 'struct php_zip_stream_data_t *'
|   |     | | `-IntegerLiteral 0x1319461a0 <col:19> 'int' 0
|   |     | `-IfStmt 0x131946570 <line:65:4, line:67:4>
|   |     |   |-ImplicitCastExpr 0x131946340 <line:65:8> 'char **' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x131946320 <col:8> 'char **' lvalue ParmVar 0x131928b58 'opened_path' 'char **'
|   |     |   `-CompoundStmt 0x131946558 <col:21, line:67:4>
|   |     |     `-BinaryOperator 0x131946538 <line:66:5, col:32> 'char *' '='
|   |     |       |-UnaryOperator 0x131946390 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   |     |       | `-ImplicitCastExpr 0x131946378 <col:6> 'char **' <LValueToRValue>
|   |     |       |   `-DeclRefExpr 0x131946358 <col:6> 'char **' lvalue ParmVar 0x131928b58 'opened_path' 'char **'
|   |     |       `-ImplicitCastExpr 0x131946520 <col:20, col:32> 'char *' <IntegralToPointer>
|   |     |         `-CallExpr 0x1319464e0 <col:20, col:32> 'int'
|   |     |           |-ImplicitCastExpr 0x1319464c8 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     |           | `-DeclRefExpr 0x131946488 <col:20> 'int ()' Function 0x1319463d0 'estrdup' 'int ()'
|   |     |           `-ImplicitCastExpr 0x131946508 <col:28> 'char *' <LValueToRValue>
|   |     |             `-DeclRefExpr 0x1319464a8 <col:28> 'char *' lvalue ParmVar 0x1319289a8 'path' 'char *'
|   |     `-CompoundStmt 0x131946738 <line:68:10, line:70:3>
|   |       `-CallExpr 0x1319466f8 <line:69:4, col:16> 'int'
|   |         |-ImplicitCastExpr 0x1319466e0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x1319466a0 <col:4> 'int ()' Function 0x1319465e8 'zip_close' 'int ()'
|   |         `-ImplicitCastExpr 0x131946720 <col:14> 'struct zip *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1319466c0 <col:14> 'struct zip *' lvalue Var 0x1319421e8 'za' 'struct zip *'
|   |-CallExpr 0x131946818 <line:73:2, col:21> 'int'
|   | |-ImplicitCastExpr 0x131946800 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1319467c0 <col:2> 'int ()' Function 0x131945020 'efree' 'int ()'
|   | `-ImplicitCastExpr 0x131946840 <col:8> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1319467e0 <col:8> 'char *' lvalue Var 0x131928e80 'file_basename' 'char *'
|   `-IfStmt 0x131946898 <line:75:2, line:79:2> has_else
|     |-RecoveryExpr 0x131946858 <line:75:6, col:7> '_Bool' contains-errors
|     |-CompoundStmt 0x131946878 <col:15, line:77:2>
|     `-CompoundStmt 0x131946888 <col:9, line:79:2>
|-FunctionDecl 0x131942d30 <line:23:13> col:13 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x131942e30 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x131942e98 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x131942dd8 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x131943968 <line:28:6> col:6 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x131943a68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x131943ad0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x131943b38 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x131943a10 <<invalid sloc>> Implicit 958
|-FunctionDecl 0x131943ee8 <line:32:17> col:17 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x131943fe8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x131943f90 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x1319446d8 <line:42:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x131944800 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x131944868 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x1319448d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x131944780 <<invalid sloc>> Implicit 882
