TranslationUnitDecl 0x12e833408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e8342b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e8339d0 '__int128'
|-TypedefDecl 0x12e834328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e8339f0 'unsigned __int128'
|-TypedefDecl 0x12e01ec30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e01ea00 'struct __NSConstantString_tag'
|   `-Record 0x12e834380 '__NSConstantString_tag'
|-TypedefDecl 0x12e01ec98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e833b90 '__SVInt8_t'
|-TypedefDecl 0x12e01ed00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e833bb0 '__SVInt16_t'
|-TypedefDecl 0x12e01ed68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e833bd0 '__SVInt32_t'
|-TypedefDecl 0x12e01edd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e833bf0 '__SVInt64_t'
|-TypedefDecl 0x12e01ee38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e833c10 '__SVUint8_t'
|-TypedefDecl 0x12e01eea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e833c30 '__SVUint16_t'
|-TypedefDecl 0x12e01ef08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e833c50 '__SVUint32_t'
|-TypedefDecl 0x12e01ef70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e833c70 '__SVUint64_t'
|-TypedefDecl 0x12e01efd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e833c90 '__SVFloat16_t'
|-TypedefDecl 0x12e01f040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e833cb0 '__SVFloat32_t'
|-TypedefDecl 0x12e01f0a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e833cd0 '__SVFloat64_t'
|-TypedefDecl 0x12e01f110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e833cf0 '__SVBfloat16_t'
|-TypedefDecl 0x12e01f178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e833d10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e01f1e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e833d30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e01f248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e833d50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e01f2b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e833d70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e01f318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e833d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e01f380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e833db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e01f3e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e833dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e01f450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e833df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e01f4b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e833e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e01f520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e833e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e01f588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e833e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e01f5f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e833e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e01f658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e833e90 '__clang_svint8x3_t'
|-TypedefDecl 0x12e01f6c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e833eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e01f728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e833ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e01f790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e833ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e01f7f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e833f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e01f860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e833f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e01f8c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e833f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e01f930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e833f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e01f998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e833f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e030800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e833fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e030868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e833fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e0308d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e833ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e030938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e834010 '__clang_svint8x4_t'
|-TypedefDecl 0x12e0309a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e834030 '__clang_svint16x4_t'
|-TypedefDecl 0x12e030a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e834050 '__clang_svint32x4_t'
|-TypedefDecl 0x12e030a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e834070 '__clang_svint64x4_t'
|-TypedefDecl 0x12e030ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e834090 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e030b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e8340b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e030ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e8340d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e030c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e8340f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e030c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e834110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e030ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e834130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e030d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e834150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e030db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e834170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e030e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e834190 '__SVBool_t'
|-TypedefDecl 0x12e030e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e8341b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e030ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e8341d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e030f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e8341f0 '__SVCount_t'
|-TypedefDecl 0x12e030ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e030fb0 'char *'
|   `-BuiltinType 0x12e8334b0 'char'
|-TypedefDecl 0x12e031068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e030fb0 'char *'
|   `-BuiltinType 0x12e8334b0 'char'
`-FunctionDecl 0x12f008538 <dataset_diviso_filec/func4563_vuln.c:1:1, line:65:1> line:1:12 rtnl_getlink 'int (struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *)' static
  |-ParmVarDecl 0x12e031648 <col:25, col:41> col:41 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x12f008228 <col:46, col:63> col:63 used nlh 'struct nlmsghdr *'
  |-ParmVarDecl 0x12f0083f8 <line:2:4, col:28> col:28 used extack 'struct netlink_ext_ack *'
  `-CompoundStmt 0x12f00fff0 <line:3:1, line:65:1>
    |-DeclStmt 0x12f008a00 <line:4:2, col:37>
    | |-RecordDecl 0x12f008640 <col:2, col:9> col:9 struct net
    | `-VarDecl 0x12f0087a8 <col:2, col:36> col:14 used net 'struct net *' cinit
    |   `-CallExpr 0x12f0089c0 <col:20, col:36> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12f008940 <col:20> 'int ()' Function 0x12f008888 'sock_net' 'int ()'
    |     `-RecoveryExpr 0x12f008998 <col:29, col:34> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12f008960 <col:29> 'struct sk_buff *' lvalue ParmVar 0x12e031648 'skb' 'struct sk_buff *'
    |-DeclStmt 0x12f008b48 <line:5:2, col:27>
    | `-VarDecl 0x12f008aa8 <col:2, col:24> col:14 used tgt_net 'struct net *' cinit
    |   `-ImplicitCastExpr 0x12f008b30 <col:24> 'struct net *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x12f008b10 <col:24> 'struct net *' contains-errors lvalue Var 0x12f0087a8 'net' 'struct net *'
    |-DeclStmt 0x12f008d48 <line:6:2, col:23>
    | |-RecordDecl 0x12f008b60 <col:2, col:9> col:9 struct ifinfomsg
    | `-VarDecl 0x12f008cc8 <col:2, col:20> col:20 used ifm 'struct ifinfomsg *'
    |-DeclStmt 0x12f008df0 <line:7:2, col:23>
    | `-VarDecl 0x12f008d88 <col:2, col:7> col:7 invalid ifname 'char'
    |-DeclStmt 0x12f009058 <line:8:2, col:31>
    | |-RecordDecl 0x12f008e08 <col:2, col:9> col:9 struct nlattr
    | `-VarDecl 0x12f008fd8 <col:2, col:17> col:17 invalid tb 'struct nlattr *'
    |-DeclStmt 0x12e900cb8 <line:9:2, col:31>
    | |-RecordDecl 0x12f009070 <col:2, col:9> col:9 struct net_device
    | `-VarDecl 0x12e900c00 <col:2, col:27> col:21 used dev 'struct net_device *' cinit
    |   `-RecoveryExpr 0x12e900c80 <col:27> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12e900dc0 <line:10:2, col:22>
    | `-VarDecl 0x12e900d58 <col:2, col:18> col:18 used nskb 'struct sk_buff *'
    |-DeclStmt 0x12e900e90 <line:11:2, col:18>
    | `-VarDecl 0x12e900df0 <col:2, col:17> col:6 used netnsid 'int' cinit
    |   `-UnaryOperator 0x12e900e78 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x12e900e58 <col:17> 'int' 1
    |-DeclStmt 0x12e900f28 <line:12:2, col:9>
    | `-VarDecl 0x12e900ec0 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x12e901220 <line:16:2, line:17:10>
    | |-BinaryOperator 0x12e9011b8 <line:16:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x12e9011a0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e901160 <col:6> 'int' lvalue Var 0x12e900ec0 'err' 'int'
    | | `-IntegerLiteral 0x12e901180 <col:12> 'int' 0
    | `-ReturnStmt 0x12e901210 <line:17:3, col:10>
    |   `-ImplicitCastExpr 0x12e9011f8 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12e9011d8 <col:10> 'int' lvalue Var 0x12e900ec0 'err' 'int'
    |-IfStmt 0x12e901970 <line:19:2, line:24:2>
    | |-RecoveryExpr 0x12e901278 <line:19:6, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x12e901950 <col:27, line:24:2>
    |   |-BinaryOperator 0x12e901610 <line:21:3, col:40> 'struct net *' contains-errors '='
    |   | |-DeclRefExpr 0x12e9013f0 <col:3> 'struct net *' contains-errors lvalue Var 0x12f008aa8 'tgt_net' 'struct net *'
    |   | `-ImplicitCastExpr 0x12e9015f8 <col:13, col:40> 'struct net *' <IntegralToPointer>
    |   |   `-CallExpr 0x12e901598 <col:13, col:40> 'int'
    |   |     |-ImplicitCastExpr 0x12e901580 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12e9014f0 <col:13> 'int ()' Function 0x12e901438 'get_target_net' 'int ()'
    |   |     |-ImplicitCastExpr 0x12e9015c8 <col:28> 'struct sk_buff *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x12e901510 <col:28> 'struct sk_buff *' lvalue ParmVar 0x12e031648 'skb' 'struct sk_buff *'
    |   |     `-ImplicitCastExpr 0x12e9015e0 <col:33> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12e901530 <col:33> 'int' lvalue Var 0x12e900df0 'netnsid' 'int'
    |   `-IfStmt 0x12e901930 <line:22:3, line:23:26>
    |     |-CallExpr 0x12e901768 <line:22:7, col:21> 'int' contains-errors
    |     | |-ImplicitCastExpr 0x12e901750 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x12e901710 <col:7> 'int ()' Function 0x12e901658 'IS_ERR' 'int ()'
    |     | `-ImplicitCastExpr 0x12e901790 <col:14> 'struct net *' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x12e901730 <col:14> 'struct net *' contains-errors lvalue Var 0x12f008aa8 'tgt_net' 'struct net *'
    |     `-ReturnStmt 0x12e901920 <line:23:4, col:26>
    |       `-CallExpr 0x12e9018e0 <col:11, col:26> 'int' contains-errors
    |         |-ImplicitCastExpr 0x12e9018c8 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x12e901888 <col:11> 'int ()' Function 0x12e9017d0 'PTR_ERR' 'int ()'
    |         `-ImplicitCastExpr 0x12e901908 <col:19> 'struct net *' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x12e9018a8 <col:19> 'struct net *' contains-errors lvalue Var 0x12f008aa8 'tgt_net' 'struct net *'
    |-BinaryOperator 0x138008ac8 <line:33:2, col:22> 'struct ifinfomsg *' '='
    | |-DeclRefExpr 0x138008918 <col:2> 'struct ifinfomsg *' lvalue Var 0x12f008cc8 'ifm' 'struct ifinfomsg *'
    | `-ImplicitCastExpr 0x138008ab0 <col:8, col:22> 'struct ifinfomsg *' <IntegralToPointer>
    |   `-CallExpr 0x138008a70 <col:8, col:22> 'int'
    |     |-ImplicitCastExpr 0x138008a58 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x138008a18 <col:8> 'int ()' Function 0x138008960 'nlmsg_data' 'int ()'
    |     `-ImplicitCastExpr 0x138008a98 <col:19> 'struct nlmsghdr *' <LValueToRValue>
    |       `-DeclRefExpr 0x138008a38 <col:19> 'struct nlmsghdr *' lvalue ParmVar 0x12f008228 'nlh' 'struct nlmsghdr *'
    |-IfStmt 0x138009000 <line:34:2, line:39:8> has_else
    | |-BinaryOperator 0x138008b68 <line:34:6, col:23> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x138008b20 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x138008ae8 <col:6> 'struct ifinfomsg *' lvalue Var 0x12f008cc8 'ifm' 'struct ifinfomsg *'
    | | `-IntegerLiteral 0x138008b48 <col:23> 'int' 0
    | |-BinaryOperator 0x138008d58 <line:35:3, col:51> 'struct net_device *' contains-errors '='
    | | |-DeclRefExpr 0x138008b88 <col:3> 'struct net_device *' contains-errors lvalue Var 0x12e900c00 'dev' 'struct net_device *'
    | | `-CallExpr 0x138008d28 <col:9, col:51> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x138008c88 <col:9> 'int ()' Function 0x138008bd0 '__dev_get_by_index' 'int ()'
    | |   |-DeclRefExpr 0x138008ca8 <col:28> 'struct net *' contains-errors lvalue Var 0x12f008aa8 'tgt_net' 'struct net *'
    | |   `-RecoveryExpr 0x138008d00 <col:37, col:42> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x138008cc8 <col:37> 'struct ifinfomsg *' lvalue Var 0x12f008cc8 'ifm' 'struct ifinfomsg *'
    | `-IfStmt 0x138008fd0 <line:36:7, line:39:8> has_else
    |   |-RecoveryExpr 0x138008d98 <line:36:11, col:25> '_Bool' contains-errors
    |   |-BinaryOperator 0x138008f48 <line:37:3, col:42> 'struct net_device *' contains-errors '='
    |   | |-DeclRefExpr 0x138008db8 <col:3> 'struct net_device *' contains-errors lvalue Var 0x12e900c00 'dev' 'struct net_device *'
    |   | `-CallExpr 0x138008f18 <col:9, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x138008eb8 <col:9> 'int ()' Function 0x138008e00 '__dev_get_by_name' 'int ()'
    |   |   |-DeclRefExpr 0x138008ed8 <col:27> 'struct net *' contains-errors lvalue Var 0x12f008aa8 'tgt_net' 'struct net *'
    |   |   `-RecoveryExpr 0x138008ef8 <col:36> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x138008fb8 <line:39:3, col:8> 'out' 0x138008f68
    |-IfStmt 0x1380090a8 <line:42:2, line:43:8>
    | |-RecoveryExpr 0x138009070 <line:42:6, col:13> '_Bool' contains-errors
    | `-GotoStmt 0x138009090 <line:43:3, col:8> 'out' 0x138008f68
    |-IfStmt 0x138009380 <line:47:2, line:48:8>
    | |-RecoveryExpr 0x138009348 <line:47:6, col:14> '_Bool' contains-errors
    | `-GotoStmt 0x138009368 <line:48:3, col:8> 'out' 0x138008f68
    |-IfStmt 0x12f00fd48 <line:54:2, line:59:55> has_else
    | |-BinaryOperator 0x12f00f800 <line:54:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x1380097e0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1380097a0 <col:6> 'int' lvalue Var 0x12e900ec0 'err' 'int'
    | | `-IntegerLiteral 0x1380097c0 <col:12> 'int' 0
    | |-CompoundStmt 0x12f00fab8 <col:15, line:58:2>
    | | `-CallExpr 0x12f00fa78 <line:57:3, col:17> 'int'
    | |   |-ImplicitCastExpr 0x12f00fa60 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12f00fa20 <col:3> 'int ()' Function 0x12f00f968 'kfree_skb' 'int ()'
    | |   `-ImplicitCastExpr 0x12f00faa0 <col:13> 'struct sk_buff *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12f00fa40 <col:13> 'struct sk_buff *' lvalue Var 0x12e900d58 'nskb' 'struct sk_buff *'
    | `-BinaryOperator 0x12f00fd28 <line:59:3, col:55> 'int' contains-errors '='
    |   |-DeclRefExpr 0x12f00fad0 <col:3> 'int' lvalue Var 0x12e900ec0 'err' 'int'
    |   `-CallExpr 0x12f00fcf0 <col:9, col:55> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12f00fbd0 <col:9> 'int ()' Function 0x12f00fb18 'rtnl_unicast' 'int ()'
    |     |-DeclRefExpr 0x12f00fbf0 <col:22> 'struct sk_buff *' lvalue Var 0x12e900d58 'nskb' 'struct sk_buff *'
    |     |-DeclRefExpr 0x12f00fc10 <col:28> 'struct net *' contains-errors lvalue Var 0x12f0087a8 'net' 'struct net *'
    |     `-RecoveryExpr 0x12f00fcc8 <col:33, col:49> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x12f00fc88 <col:33, col:47> 'int'
    |         |-ImplicitCastExpr 0x12f00fc70 <col:33> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x12f00fc30 <col:33> 'int ()' Function 0x138009548 'NETLINK_CB' 'int ()'
    |         `-ImplicitCastExpr 0x12f00fcb0 <col:44> 'struct sk_buff *' <LValueToRValue>
    |           `-DeclRefExpr 0x12f00fc50 <col:44> 'struct sk_buff *' lvalue ParmVar 0x12e031648 'skb' 'struct sk_buff *'
    |-LabelStmt 0x12f00ff88 <line:60:1, line:62:18> 'out'
    | `-IfStmt 0x12f00ff68 <line:61:2, line:62:18>
    |   |-BinaryOperator 0x12f00fdd0 <line:61:6, col:17> 'int' '>='
    |   | |-ImplicitCastExpr 0x12f00fdb8 <col:6> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12f00fd78 <col:6> 'int' lvalue Var 0x12e900df0 'netnsid' 'int'
    |   | `-IntegerLiteral 0x12f00fd98 <col:17> 'int' 0
    |   `-CallExpr 0x12f00ff28 <line:62:3, col:18> 'int' contains-errors
    |     |-ImplicitCastExpr 0x12f00ff10 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12f00fed0 <col:3> 'int ()' Function 0x12f00fe18 'put_net' 'int ()'
    |     `-ImplicitCastExpr 0x12f00ff50 <col:11> 'struct net *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x12f00fef0 <col:11> 'struct net *' contains-errors lvalue Var 0x12f008aa8 'tgt_net' 'struct net *'
    `-ReturnStmt 0x12f00ffe0 <line:64:2, col:9>
      `-ImplicitCastExpr 0x12f00ffc8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12f00ffa8 <col:9> 'int' lvalue Var 0x12e900ec0 'err' 'int'
