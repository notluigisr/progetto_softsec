TranslationUnitDecl 0x13d033408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0342b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d0339d0 '__int128'
|-TypedefDecl 0x13d034328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d0339f0 'unsigned __int128'
|-TypedefDecl 0x13d104030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d103e00 'struct __NSConstantString_tag'
|   `-Record 0x13d034380 '__NSConstantString_tag'
|-TypedefDecl 0x13d104098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d033b90 '__SVInt8_t'
|-TypedefDecl 0x13d104100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d033bb0 '__SVInt16_t'
|-TypedefDecl 0x13d104168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d033bd0 '__SVInt32_t'
|-TypedefDecl 0x13d1041d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d033bf0 '__SVInt64_t'
|-TypedefDecl 0x13d104238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d033c10 '__SVUint8_t'
|-TypedefDecl 0x13d1042a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d033c30 '__SVUint16_t'
|-TypedefDecl 0x13d104308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d033c50 '__SVUint32_t'
|-TypedefDecl 0x13d104370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d033c70 '__SVUint64_t'
|-TypedefDecl 0x13d1043d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d033c90 '__SVFloat16_t'
|-TypedefDecl 0x13d104440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d033cb0 '__SVFloat32_t'
|-TypedefDecl 0x13d1044a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d033cd0 '__SVFloat64_t'
|-TypedefDecl 0x13d104510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d033cf0 '__SVBfloat16_t'
|-TypedefDecl 0x13d104578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d033d10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d1045e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d033d30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d104648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d033d50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d1046b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d033d70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d104718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d033d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d104780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d033db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d1047e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d033dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d104850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d033df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d1048b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d033e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d104920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d033e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d104988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d033e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d1049f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d033e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d104a58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d033e90 '__clang_svint8x3_t'
|-TypedefDecl 0x13d104ac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d033eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d104b28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d033ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d104b90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d033ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d104bf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d033f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d104c60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d033f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d104cc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d033f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d104d30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d033f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d104d98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d033f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d105600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d033fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d105668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d033fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d1056d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d033ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d105738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d034010 '__clang_svint8x4_t'
|-TypedefDecl 0x13d1057a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d034030 '__clang_svint16x4_t'
|-TypedefDecl 0x13d105808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d034050 '__clang_svint32x4_t'
|-TypedefDecl 0x13d105870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d034070 '__clang_svint64x4_t'
|-TypedefDecl 0x13d1058d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d034090 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d105940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0340b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d1059a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0340d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d105a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0340f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d105a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d034110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d105ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d034130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d105b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d034150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d105bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d034170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d105c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d034190 '__SVBool_t'
|-TypedefDecl 0x13d105c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0341b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d105ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0341d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d105d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0341f0 '__SVCount_t'
|-TypedefDecl 0x13d105df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d105db0 'char *'
|   `-BuiltinType 0x13d0334b0 'char'
|-TypedefDecl 0x13d105e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d105db0 'char *'
|   `-BuiltinType 0x13d0334b0 'char'
|-FunctionDecl 0x13d106188 <dataset_diviso_filec/func11374_nonvuln.c:1:1, line:27:1> line:1:12 conf__parse_string 'int (char **, const char *, char **, char *)' static
| |-ParmVarDecl 0x13d105f08 <col:31, col:38> col:38 used token 'char **'
| |-ParmVarDecl 0x13d105f88 <col:45, col:57> col:57 used name 'const char *'
| |-ParmVarDecl 0x13d106008 <col:63, col:70> col:70 used value 'char **'
| |-ParmVarDecl 0x13d106088 <col:77, col:83> col:83 used saveptr 'char *'
| `-CompoundStmt 0x13d120de8 <line:2:1, line:27:1>
|   |-BinaryOperator 0x13d11f600 <line:3:2, col:38> 'char *' contains-errors '='
|   | |-UnaryOperator 0x13d106580 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13d106568 <col:3> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13d106298 <col:3> 'char **' lvalue ParmVar 0x13d105f08 'token' 'char **'
|   | `-CallExpr 0x13d1065b8 <col:11, col:38> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13d106410 <col:11> 'int ()' Function 0x13d106358 'strtok_r' 'int ()'
|   |   |-RecoveryExpr 0x13d106598 <col:20> '<dependent type>' contains-errors lvalue
|   |   |-StringLiteral 0x13d106490 <col:26> 'char[1]' lvalue ""
|   |   `-UnaryOperator 0x13d1064c8 <col:30, col:31> 'char **' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x13d1064a8 <col:31> 'char *' lvalue ParmVar 0x13d106088 'saveptr' 'char *'
|   `-IfStmt 0x13d120db8 <line:4:2, line:25:2> has_else
|     |-ImplicitCastExpr 0x13d11f670 <line:4:5, col:6> 'char *' <LValueToRValue>
|     | `-UnaryOperator 0x13d11f658 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|     |   `-ImplicitCastExpr 0x13d11f640 <col:6> 'char **' <LValueToRValue>
|     |     `-DeclRefExpr 0x13d11f620 <col:6> 'char **' lvalue ParmVar 0x13d105f08 'token' 'char **'
|     |-CompoundStmt 0x13d120c18 <col:12, line:22:2>
|     | |-IfStmt 0x13d11f9c8 <line:5:3, line:8:3>
|     | | |-ImplicitCastExpr 0x13d11f6d8 <line:5:6, col:7> 'char *' <LValueToRValue>
|     | | | `-UnaryOperator 0x13d11f6c0 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow
|     | | |   `-ImplicitCastExpr 0x13d11f6a8 <col:7> 'char **' <LValueToRValue>
|     | | |     `-DeclRefExpr 0x13d11f688 <col:7> 'char **' lvalue ParmVar 0x13d106008 'value' 'char **'
|     | | `-CompoundStmt 0x13d11f9a8 <col:13, line:8:3>
|     | |   |-CallExpr 0x13d11f920 <line:6:4, col:47> '<dependent type>' contains-errors
|     | |   | |-DeclRefExpr 0x13d11f7d0 <col:4> 'int ()' Function 0x13d11f718 'log__printf' 'int ()'
|     | |   | |-RecoveryExpr 0x13d11f8e0 <col:16> '<dependent type>' contains-errors lvalue
|     | |   | |-RecoveryExpr 0x13d11f900 <col:22> '<dependent type>' contains-errors lvalue
|     | |   | |-StringLiteral 0x13d11f860 <col:36> 'char[4]' lvalue "STR"
|     | |   | `-DeclRefExpr 0x13d11f880 <col:43> 'const char *' lvalue ParmVar 0x13d105f88 'name' 'const char *'
|     | |   `-ReturnStmt 0x13d11f998 <line:7:4, col:11>
|     | |     `-RecoveryExpr 0x13d11f978 <col:11> '<dependent type>' contains-errors lvalue
|     | |-WhileStmt 0x13d11fd08 <line:10:3, line:12:3>
|     | | |-BinaryOperator 0x13d11fc48 <line:10:9, col:46> 'int' '||'
|     | | | |-BinaryOperator 0x13d11faf8 <col:9, col:24> 'int' '=='
|     | | | | |-ImplicitCastExpr 0x13d11fae0 <col:9, col:19> 'int' <IntegralCast>
|     | | | | | `-ImplicitCastExpr 0x13d11fac8 <col:9, col:19> 'char' <LValueToRValue>
|     | | | | |   `-ArraySubscriptExpr 0x13d11fa90 <col:9, col:19> 'char' lvalue
|     | | | | |     |-ImplicitCastExpr 0x13d11fa78 <col:9, col:16> 'char *' <LValueToRValue>
|     | | | | |     | `-ParenExpr 0x13d11fa38 <col:9, col:16> 'char *' lvalue
|     | | | | |     |   `-UnaryOperator 0x13d11fa20 <col:10, col:11> 'char *' lvalue prefix '*' cannot overflow
|     | | | | |     |     `-ImplicitCastExpr 0x13d11fa08 <col:11> 'char **' <LValueToRValue>
|     | | | | |     |       `-DeclRefExpr 0x13d11f9e8 <col:11> 'char **' lvalue ParmVar 0x13d105f08 'token' 'char **'
|     | | | | |     `-IntegerLiteral 0x13d11fa58 <col:18> 'int' 0
|     | | | | `-CharacterLiteral 0x13d11fab0 <col:24> 'int' 32
|     | | | `-BinaryOperator 0x13d11fc28 <col:31, col:46> 'int' '=='
|     | | |   |-ImplicitCastExpr 0x13d11fc10 <col:31, col:41> 'int' <IntegralCast>
|     | | |   | `-ImplicitCastExpr 0x13d11fbf8 <col:31, col:41> 'char' <LValueToRValue>
|     | | |   |   `-ArraySubscriptExpr 0x13d11fbc0 <col:31, col:41> 'char' lvalue
|     | | |   |     |-ImplicitCastExpr 0x13d11fba8 <col:31, col:38> 'char *' <LValueToRValue>
|     | | |   |     | `-ParenExpr 0x13d11fb68 <col:31, col:38> 'char *' lvalue
|     | | |   |     |   `-UnaryOperator 0x13d11fb50 <col:32, col:33> 'char *' lvalue prefix '*' cannot overflow
|     | | |   |     |     `-ImplicitCastExpr 0x13d11fb38 <col:33> 'char **' <LValueToRValue>
|     | | |   |     |       `-DeclRefExpr 0x13d11fb18 <col:33> 'char **' lvalue ParmVar 0x13d105f08 'token' 'char **'
|     | | |   |     `-IntegerLiteral 0x13d11fb88 <col:40> 'int' 0
|     | | |   `-CharacterLiteral 0x13d11fbe0 <col:46> 'int' 9
|     | | `-CompoundStmt 0x13d11fcf0 <col:51, line:12:3>
|     | |   `-UnaryOperator 0x13d11fcd8 <line:11:4, col:12> 'char *' postfix '++'
|     | |     `-ParenExpr 0x13d11fcb8 <col:4, col:11> 'char *' lvalue
|     | |       `-UnaryOperator 0x13d11fca0 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|     | |         `-ImplicitCastExpr 0x13d11fc88 <col:6> 'char **' <LValueToRValue>
|     | |           `-DeclRefExpr 0x13d11fc68 <col:6> 'char **' lvalue ParmVar 0x13d105f08 'token' 'char **'
|     | |-IfStmt 0x13d1207a0 <line:13:3, line:16:3>
|     | | |-CallExpr 0x13d1205c8 <line:13:6, col:52> 'int'
|     | | | |-ImplicitCastExpr 0x13d1205b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|     | | | | `-DeclRefExpr 0x13d11fe08 <col:6> 'int ()' Function 0x13d11fd50 'mosquitto_validate_utf8' 'int ()'
|     | | | |-ImplicitCastExpr 0x13d120600 <col:30, col:31> 'char *' <LValueToRValue>
|     | | | | `-UnaryOperator 0x13d11fe60 <col:30, col:31> 'char *' lvalue prefix '*' cannot overflow
|     | | | |   `-ImplicitCastExpr 0x13d11fe48 <col:31> 'char **' <LValueToRValue>
|     | | | |     `-DeclRefExpr 0x13d11fe28 <col:31> 'char **' lvalue ParmVar 0x13d105f08 'token' 'char **'
|     | | | `-CallExpr 0x13d120528 <col:38, col:51> 'unsigned long'
|     | | |   |-ImplicitCastExpr 0x13d120510 <col:38> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|     | | |   | `-DeclRefExpr 0x13d120450 <col:38> 'unsigned long (const char *)' Function 0x13d1202e0 'strlen' 'unsigned long (const char *)'
|     | | |   `-ImplicitCastExpr 0x13d120568 <col:45, col:46> 'const char *' <NoOp>
|     | | |     `-ImplicitCastExpr 0x13d120550 <col:45, col:46> 'char *' <LValueToRValue>
|     | | |       `-UnaryOperator 0x13d1204a8 <col:45, col:46> 'char *' lvalue prefix '*' cannot overflow
|     | | |         `-ImplicitCastExpr 0x13d120490 <col:46> 'char **' <LValueToRValue>
|     | | |           `-DeclRefExpr 0x13d120470 <col:46> 'char **' lvalue ParmVar 0x13d105f08 'token' 'char **'
|     | | `-CompoundStmt 0x13d120780 <col:54, line:16:3>
|     | |   |-CallExpr 0x13d120700 <line:14:4, col:41> '<dependent type>' contains-errors
|     | |   | |-DeclRefExpr 0x13d120618 <col:4> 'int ()' Function 0x13d11f718 'log__printf' 'int ()'
|     | |   | |-RecoveryExpr 0x13d1206c0 <col:16> '<dependent type>' contains-errors lvalue
|     | |   | |-RecoveryExpr 0x13d1206e0 <col:22> '<dependent type>' contains-errors lvalue
|     | |   | `-StringLiteral 0x13d120668 <col:36> 'char[4]' lvalue "STR"
|     | |   `-ReturnStmt 0x13d120770 <line:15:4, col:11>
|     | |     `-RecoveryExpr 0x13d120750 <col:11> '<dependent type>' contains-errors lvalue
|     | |-BinaryOperator 0x13d1209d0 <line:17:3, col:36> 'char *' '='
|     | | |-UnaryOperator 0x13d1207f8 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|     | | | `-ImplicitCastExpr 0x13d1207e0 <col:4> 'char **' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x13d1207c0 <col:4> 'char **' lvalue ParmVar 0x13d106008 'value' 'char **'
|     | | `-ImplicitCastExpr 0x13d1209b8 <col:12, col:36> 'char *' <IntegralToPointer>
|     | |   `-CallExpr 0x13d120978 <col:12, col:36> 'int'
|     | |     |-ImplicitCastExpr 0x13d120960 <col:12> 'int (*)()' <FunctionToPointerDecay>
|     | |     | `-DeclRefExpr 0x13d1208f0 <col:12> 'int ()' Function 0x13d120838 'mosquitto__strdup' 'int ()'
|     | |     `-ImplicitCastExpr 0x13d1209a0 <col:30, col:31> 'char *' <LValueToRValue>
|     | |       `-UnaryOperator 0x13d120948 <col:30, col:31> 'char *' lvalue prefix '*' cannot overflow
|     | |         `-ImplicitCastExpr 0x13d120930 <col:31> 'char **' <LValueToRValue>
|     | |           `-DeclRefExpr 0x13d120910 <col:31> 'char **' lvalue ParmVar 0x13d105f08 'token' 'char **'
|     | `-IfStmt 0x13d120bf8 <line:18:3, line:21:3>
|     |   |-UnaryOperator 0x13d120a58 <line:18:6, col:8> 'int' prefix '!' cannot overflow
|     |   | `-ImplicitCastExpr 0x13d120a40 <col:7, col:8> 'char *' <LValueToRValue>
|     |   |   `-UnaryOperator 0x13d120a28 <col:7, col:8> 'char *' lvalue prefix '*' cannot overflow
|     |   |     `-ImplicitCastExpr 0x13d120a10 <col:8> 'char **' <LValueToRValue>
|     |   |       `-DeclRefExpr 0x13d1209f0 <col:8> 'char **' lvalue ParmVar 0x13d106008 'value' 'char **'
|     |   `-CompoundStmt 0x13d120bd8 <col:14, line:21:3>
|     |     |-CallExpr 0x13d120b58 <line:19:4, col:41> '<dependent type>' contains-errors
|     |     | |-DeclRefExpr 0x13d120a70 <col:4> 'int ()' Function 0x13d11f718 'log__printf' 'int ()'
|     |     | |-RecoveryExpr 0x13d120b18 <col:16> '<dependent type>' contains-errors lvalue
|     |     | |-RecoveryExpr 0x13d120b38 <col:22> '<dependent type>' contains-errors lvalue
|     |     | `-StringLiteral 0x13d120ac0 <col:36> 'char[4]' lvalue "STR"
|     |     `-ReturnStmt 0x13d120bc8 <line:20:4, col:11>
|     |       `-RecoveryExpr 0x13d120ba8 <col:11> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x13d120da0 <line:22:7, line:25:2>
|       `-CallExpr 0x13d120d60 <line:23:3, col:46> '<dependent type>' contains-errors
|         |-DeclRefExpr 0x13d120c50 <col:3> 'int ()' Function 0x13d11f718 'log__printf' 'int ()'
|         |-RecoveryExpr 0x13d120d20 <col:15> '<dependent type>' contains-errors lvalue
|         |-RecoveryExpr 0x13d120d40 <col:21> '<dependent type>' contains-errors lvalue
|         |-StringLiteral 0x13d120ca0 <col:35> 'char[4]' lvalue "STR"
|         `-DeclRefExpr 0x13d120cc0 <col:42> 'const char *' lvalue ParmVar 0x13d105f88 'name' 'const char *'
`-FunctionDecl 0x13d1202e0 <line:13:38> col:38 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13d1203e0 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13d120388 <<invalid sloc>> Implicit 902
