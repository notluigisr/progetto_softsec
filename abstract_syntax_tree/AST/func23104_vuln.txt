TranslationUnitDecl 0x135055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1350564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135055bd0 '__int128'
|-TypedefDecl 0x135056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135055bf0 'unsigned __int128'
|-TypedefDecl 0x135126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135126800 'struct __NSConstantString_tag'
|   `-Record 0x135056580 '__NSConstantString_tag'
|-TypedefDecl 0x135126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135055d90 '__SVInt8_t'
|-TypedefDecl 0x135126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135055db0 '__SVInt16_t'
|-TypedefDecl 0x135126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135055dd0 '__SVInt32_t'
|-TypedefDecl 0x135126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135055df0 '__SVInt64_t'
|-TypedefDecl 0x135126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135055e10 '__SVUint8_t'
|-TypedefDecl 0x135126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135055e30 '__SVUint16_t'
|-TypedefDecl 0x135126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135055e50 '__SVUint32_t'
|-TypedefDecl 0x135126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135055e70 '__SVUint64_t'
|-TypedefDecl 0x135126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135055e90 '__SVFloat16_t'
|-TypedefDecl 0x135126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135055eb0 '__SVFloat32_t'
|-TypedefDecl 0x135126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135055ed0 '__SVFloat64_t'
|-TypedefDecl 0x135126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x135126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1351270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1351271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1351272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1351273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1351274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1350560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1350560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1350560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1351275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1351276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1350561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1350561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1351280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1350561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1351281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135056230 '__clang_svint16x4_t'
|-TypedefDecl 0x135128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135056250 '__clang_svint32x4_t'
|-TypedefDecl 0x135128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1351282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1350562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1351283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1350562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1350562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1351284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1351285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135056390 '__SVBool_t'
|-TypedefDecl 0x135128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1350563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1351286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1350563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1350563f0 '__SVCount_t'
|-TypedefDecl 0x1351287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1351287b0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
|-TypedefDecl 0x135128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1351287b0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
`-FunctionDecl 0x135128b28 <dataset_diviso_filec/func23104_vuln.c:1:1, line:78:1> line:1:1 main 'int (int, char **)'
  |-ParmVarDecl 0x1351288d8 <col:6, col:10> col:10 used argc 'int'
  |-ParmVarDecl 0x135128a00 <col:16, col:27> col:22 used argv 'char **'
  `-CompoundStmt 0x135144c48 <line:2:1, line:78:1>
    |-DeclStmt 0x135128d20 <line:4:2, col:7>
    | `-VarDecl 0x135128cb8 <col:2, col:6> col:6 used c 'int'
    |-DeclStmt 0x135128dc8 <line:6:2, col:19>
    | `-VarDecl 0x135128d50 parent 0x135055608 <col:2, col:13> col:13 used optind 'int' extern
    |-DeclStmt 0x135128e70 <line:7:2, col:21>
    | `-VarDecl 0x135128df8 parent 0x135055608 <col:2, col:15> col:15 used optarg 'char *' extern
    |-WhileStmt 0x1351440d0 <line:10:2, line:53:3>
    | |-BinaryOperator 0x1351431c0 <line:10:9, col:45> 'int' '!='
    | | |-ParenExpr 0x135143168 <col:9, col:39> 'int'
    | | | `-BinaryOperator 0x135143148 <col:10, col:38> 'int' '='
    | | |   |-DeclRefExpr 0x135128e88 <col:10> 'int' lvalue Var 0x135128cb8 'c' 'int'
    | | |   `-CallExpr 0x1351430c8 <col:14, col:38> 'int'
    | | |     |-ImplicitCastExpr 0x1351430b0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x135128fc0 <col:14> 'int ()' Function 0x135128f08 'getopt' 'int ()'
    | | |     |-ImplicitCastExpr 0x135143100 <col:21> 'int' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x135128fe0 <col:21> 'int' lvalue ParmVar 0x1351288d8 'argc' 'int'
    | | |     |-ImplicitCastExpr 0x135143118 <col:27> 'char **' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x135143000 <col:27> 'char **' lvalue ParmVar 0x135128a00 'argv' 'char **'
    | | |     `-ImplicitCastExpr 0x135143130 <col:33> 'char *' <ArrayToPointerDecay>
    | | |       `-StringLiteral 0x135143060 <col:33> 'char[4]' lvalue "STR"
    | | `-UnaryOperator 0x1351431a8 <col:44, col:45> 'int' prefix '-'
    | |   `-IntegerLiteral 0x135143188 <col:45> 'int' 1
    | `-SwitchStmt 0x135143218 <line:11:3, line:53:3>
    |   |-ImplicitCastExpr 0x135143200 <line:11:11> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1351431e0 <col:11> 'int' lvalue Var 0x135128cb8 'c' 'int'
    |   `-CompoundStmt 0x135144050 <col:14, line:53:3>
    |     |-CaseStmt 0x135143270 <line:12:4, <invalid sloc>>
    |     | |-ConstantExpr 0x135143258 <col:9> 'int'
    |     | | `-CharacterLiteral 0x135143240 <col:9> 'int' 98
    |     | `-NullStmt 0x1351432b8 <<invalid sloc>>
    |     |-BreakStmt 0x1351432c0 <line:14:5>
    |     |-CaseStmt 0x1351432f8 <line:16:4, line:28:24>
    |     | |-ConstantExpr 0x1351432e0 <line:16:9> 'int'
    |     | | `-CharacterLiteral 0x1351432c8 <col:9> 'int' 99
    |     | `-IfStmt 0x135143b20 <line:17:5, line:28:24> has_else
    |     |   |-CallExpr 0x135143478 <line:17:9, col:28> 'int'
    |     |   | |-ImplicitCastExpr 0x135143460 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     |   | | `-DeclRefExpr 0x135143400 <col:9> 'int ()' Function 0x135143348 'streq' 'int ()'
    |     |   | |-ImplicitCastExpr 0x1351434a8 <col:15> 'char *' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x135143420 <col:15> 'char *' lvalue Var 0x135128df8 'optarg' 'char *'
    |     |   | `-ImplicitCastExpr 0x1351434c0 <col:23> 'char *' <ArrayToPointerDecay>
    |     |   |   `-StringLiteral 0x135143440 <col:23> 'char[4]' lvalue "STR"
    |     |   |-NullStmt 0x135143b18 <line:18:6>
    |     |   `-IfStmt 0x135143ae8 <line:19:10, line:28:24> has_else
    |     |     |-CallExpr 0x135143568 <line:19:14, col:33> 'int'
    |     |     | |-ImplicitCastExpr 0x135143550 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     |     | | `-DeclRefExpr 0x1351434f0 <col:14> 'int ()' Function 0x135143348 'streq' 'int ()'
    |     |     | |-ImplicitCastExpr 0x135143598 <col:20> 'char *' <LValueToRValue>
    |     |     | | `-DeclRefExpr 0x135143510 <col:20> 'char *' lvalue Var 0x135128df8 'optarg' 'char *'
    |     |     | `-ImplicitCastExpr 0x1351435b0 <col:28> 'char *' <ArrayToPointerDecay>
    |     |     |   `-StringLiteral 0x135143530 <col:28> 'char[4]' lvalue "STR"
    |     |     |-NullStmt 0x135143ae0 <line:20:6>
    |     |     `-IfStmt 0x135143ab0 <line:21:10, line:28:24> has_else
    |     |       |-CallExpr 0x135143658 <line:21:14, col:33> 'int'
    |     |       | |-ImplicitCastExpr 0x135143640 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     |       | | `-DeclRefExpr 0x1351435e0 <col:14> 'int ()' Function 0x135143348 'streq' 'int ()'
    |     |       | |-ImplicitCastExpr 0x135143688 <col:20> 'char *' <LValueToRValue>
    |     |       | | `-DeclRefExpr 0x135143600 <col:20> 'char *' lvalue Var 0x135128df8 'optarg' 'char *'
    |     |       | `-ImplicitCastExpr 0x1351436a0 <col:28> 'char *' <ArrayToPointerDecay>
    |     |       |   `-StringLiteral 0x135143620 <col:28> 'char[4]' lvalue "STR"
    |     |       |-NullStmt 0x135143aa8 <line:22:6>
    |     |       `-IfStmt 0x135143a78 <line:23:10, line:28:24> has_else
    |     |         |-CallExpr 0x135143748 <line:23:14, col:33> 'int'
    |     |         | |-ImplicitCastExpr 0x135143730 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     |         | | `-DeclRefExpr 0x1351436d0 <col:14> 'int ()' Function 0x135143348 'streq' 'int ()'
    |     |         | |-ImplicitCastExpr 0x135143778 <col:20> 'char *' <LValueToRValue>
    |     |         | | `-DeclRefExpr 0x1351436f0 <col:20> 'char *' lvalue Var 0x135128df8 'optarg' 'char *'
    |     |         | `-ImplicitCastExpr 0x135143790 <col:28> 'char *' <ArrayToPointerDecay>
    |     |         |   `-StringLiteral 0x135143710 <col:28> 'char[4]' lvalue "STR"
    |     |         |-NullStmt 0x135143a70 <line:24:6>
    |     |         `-IfStmt 0x135143a40 <line:25:10, line:28:24> has_else
    |     |           |-CallExpr 0x135143838 <line:25:14, col:33> 'int'
    |     |           | |-ImplicitCastExpr 0x135143820 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     |           | | `-DeclRefExpr 0x1351437c0 <col:14> 'int ()' Function 0x135143348 'streq' 'int ()'
    |     |           | |-ImplicitCastExpr 0x135143868 <col:20> 'char *' <LValueToRValue>
    |     |           | | `-DeclRefExpr 0x1351437e0 <col:20> 'char *' lvalue Var 0x135128df8 'optarg' 'char *'
    |     |           | `-ImplicitCastExpr 0x135143880 <col:28> 'char *' <ArrayToPointerDecay>
    |     |           |   `-StringLiteral 0x135143800 <col:28> 'char[4]' lvalue "STR"
    |     |           |-NullStmt 0x135143a38 <line:26:6>
    |     |           `-CallExpr 0x135143a10 <line:28:6, col:24> '<dependent type>' contains-errors
    |     |             |-DeclRefExpr 0x135143990 <col:6> 'int ()' Function 0x1351438d8 'usage' 'int ()'
    |     |             `-RecoveryExpr 0x1351439f0 <col:12> '<dependent type>' contains-errors lvalue
    |     |-BreakStmt 0x135143b50 <line:29:5>
    |     |-CaseStmt 0x135143b88 <line:31:4, <invalid sloc>>
    |     | |-ConstantExpr 0x135143b70 <col:9> 'int'
    |     | | `-CharacterLiteral 0x135143b58 <col:9> 'int' 114
    |     | `-NullStmt 0x135143d28 <<invalid sloc>>
    |     |-BreakStmt 0x135143d30 <line:33:5>
    |     |-CaseStmt 0x135143d68 <line:35:4, <invalid sloc>>
    |     | |-ConstantExpr 0x135143d50 <col:9> 'int'
    |     | | `-CharacterLiteral 0x135143d38 <col:9> 'int' 116
    |     | `-NullStmt 0x135143e28 <<invalid sloc>>
    |     |-BreakStmt 0x135143e30 <line:37:5>
    |     |-CaseStmt 0x135143e68 <line:39:4, <invalid sloc>>
    |     | |-ConstantExpr 0x135143e50 <col:9> 'int'
    |     | | `-CharacterLiteral 0x135143e38 <col:9> 'int' 110
    |     | `-NullStmt 0x135143eb0 <<invalid sloc>>
    |     |-BreakStmt 0x135143eb8 <line:41:5>
    |     |-CaseStmt 0x135143ef0 <line:43:4, <invalid sloc>>
    |     | |-ConstantExpr 0x135143ed8 <col:9> 'int'
    |     | | `-CharacterLiteral 0x135143ec0 <col:9> 'int' 56
    |     | `-NullStmt 0x135143f38 <<invalid sloc>>
    |     |-BreakStmt 0x135143f40 <line:45:5>
    |     |-CaseStmt 0x135143f78 <line:47:4, <invalid sloc>>
    |     | |-ConstantExpr 0x135143f60 <col:9> 'int'
    |     | | `-CharacterLiteral 0x135143f48 <col:9> 'int' 104
    |     | `-NullStmt 0x135143fc0 <<invalid sloc>>
    |     `-CaseStmt 0x135144000 <line:50:4, <invalid sloc>>
    |       |-ConstantExpr 0x135143fe0 <col:9> 'int'
    |       | `-CharacterLiteral 0x135143fc8 <col:9> 'int' 63
    |       `-NullStmt 0x135144048 <<invalid sloc>>
    `-ForStmt 0x135144bf0 <line:62:2, line:75:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x1351444a0 <line:62:9, col:23> 'int' '<'
      | |-ImplicitCastExpr 0x135144488 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1351443f0 <col:9> 'int' lvalue Var 0x135128d50 'optind' 'int'
      | `-BinaryOperator 0x135144468 <col:18, col:23> 'int' '-'
      |   |-ImplicitCastExpr 0x135144450 <col:18> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x135144410 <col:18> 'int' lvalue ParmVar 0x1351288d8 'argc' 'int'
      |   `-IntegerLiteral 0x135144430 <col:23> 'int' 1
      |-UnaryOperator 0x1351444e0 <col:26, col:32> 'int' postfix '++'
      | `-DeclRefExpr 0x1351444c0 <col:26> 'int' lvalue Var 0x135128d50 'optind' 'int'
      `-CompoundStmt 0x135144bd8 <col:36, line:75:2>
        `-IfStmt 0x135144bb8 <line:64:3, line:74:3>
          |-RecoveryExpr 0x135144640 <line:64:7, col:13> '_Bool' contains-errors
          `-CompoundStmt 0x135144ba0 <col:19, line:74:3>
            `-DoStmt 0x135144b60 <line:65:4, line:72:34>
              |-CompoundStmt 0x135144a28 <line:65:7, line:72:4>
              | `-IfStmt 0x135144a08 <line:66:5, line:71:5>
              |   |-RecoveryExpr 0x135144860 <line:66:9, line:67:32> '_Bool' contains-errors
              |   `-CompoundStmt 0x1351449f0 <col:35, line:71:5>
              |     `-ReturnStmt 0x1351449e0 <line:70:6, col:15>
              |       `-ParenExpr 0x1351449c0 <col:13, col:15> 'int'
              |         `-IntegerLiteral 0x1351449a0 <col:14> 'int' 1
              `-RecoveryExpr 0x135144b40 <line:72:13, col:33> '_Bool' contains-errors
