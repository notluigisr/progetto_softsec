TranslationUnitDecl 0x13e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e055bd0 '__int128'
|-TypedefDecl 0x13e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e055bf0 'unsigned __int128'
|-TypedefDecl 0x13e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e126000 'struct __NSConstantString_tag'
|   `-Record 0x13e056580 '__NSConstantString_tag'
|-TypedefDecl 0x13e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e055d90 '__SVInt8_t'
|-TypedefDecl 0x13e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e055db0 '__SVInt16_t'
|-TypedefDecl 0x13e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e055dd0 '__SVInt32_t'
|-TypedefDecl 0x13e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e055df0 '__SVInt64_t'
|-TypedefDecl 0x13e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e055e10 '__SVUint8_t'
|-TypedefDecl 0x13e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e055e30 '__SVUint16_t'
|-TypedefDecl 0x13e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e055e50 '__SVUint32_t'
|-TypedefDecl 0x13e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e055e70 '__SVUint64_t'
|-TypedefDecl 0x13e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e055e90 '__SVFloat16_t'
|-TypedefDecl 0x13e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e056390 '__SVBool_t'
|-TypedefDecl 0x13e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e0563f0 '__SVCount_t'
|-TypedefDecl 0x13e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
|-TypedefDecl 0x13e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
`-FunctionDecl 0x13e1283a0 <dataset_diviso_filec/func22969_nonvuln.c:1:1, line:10:1> line:1:13 invalid addColorBits 'void (unsigned char *, int, unsigned int, unsigned int)' static
  |-ParmVarDecl 0x13e128108 <col:26, col:41> col:41 used out 'unsigned char *'
  |-ParmVarDecl 0x13e1281a0 <col:46, col:53> col:53 invalid index 'int'
  |-ParmVarDecl 0x13e128220 <col:60, col:69> col:69 used bits 'unsigned int'
  |-ParmVarDecl 0x13e1282a0 <col:75, col:84> col:84 used in 'unsigned int'
  `-CompoundStmt 0x13e141e28 <line:2:1, line:10:1>
    |-DeclStmt 0x13e1286e0 <line:3:3, col:49>
    | `-VarDecl 0x13e128480 <col:3, col:48> col:12 used m 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x13e1286c8 <col:16, col:48> 'unsigned int' <IntegralCast>
    |     `-ConditionalOperator 0x13e128698 <col:16, col:48> 'int'
    |       |-BinaryOperator 0x13e128558 <col:16, col:24> 'int' '=='
    |       | |-ImplicitCastExpr 0x13e128528 <col:16> 'unsigned int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x13e1284e8 <col:16> 'unsigned int' lvalue ParmVar 0x13e128220 'bits' 'unsigned int'
    |       | `-ImplicitCastExpr 0x13e128540 <col:24> 'unsigned int' <IntegralCast>
    |       |   `-IntegerLiteral 0x13e128508 <col:24> 'int' 1
    |       |-IntegerLiteral 0x13e128578 <col:28> 'int' 7
    |       `-ConditionalOperator 0x13e128668 <col:32, col:48> 'int'
    |         |-BinaryOperator 0x13e128608 <col:32, col:40> 'int' '=='
    |         | |-ImplicitCastExpr 0x13e1285d8 <col:32> 'unsigned int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x13e128598 <col:32> 'unsigned int' lvalue ParmVar 0x13e128220 'bits' 'unsigned int'
    |         | `-ImplicitCastExpr 0x13e1285f0 <col:40> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x13e1285b8 <col:40> 'int' 2
    |         |-IntegerLiteral 0x13e128628 <col:44> 'int' 3
    |         `-IntegerLiteral 0x13e128648 <col:48> 'int' 1
    |-DeclStmt 0x13e1287d8 <line:5:3, col:25>
    | `-VarDecl 0x13e128710 <col:3, col:24> col:12 used p 'unsigned int' cinit
    |   `-BinaryOperator 0x13e1287b8 <col:16, col:24> '<dependent type>' contains-errors '&'
    |     |-RecoveryExpr 0x13e128778 <col:16> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13e128798 <col:24> 'unsigned int' lvalue Var 0x13e128480 'm' 'unsigned int'
    |-CompoundAssignOperator 0x13e1418f8 <line:6:3, col:24> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x13e141800 <col:3> 'unsigned int' lvalue ParmVar 0x13e1282a0 'in' 'unsigned int'
    | `-BinaryOperator 0x13e1418d8 <col:9, col:24> 'unsigned int' '-'
    |   |-ParenExpr 0x13e141898 <col:9, col:20> 'unsigned int'
    |   | `-BinaryOperator 0x13e141878 <col:10, col:16> 'unsigned int' '<<'
    |   |   |-IntegerLiteral 0x13e141820 <col:10> 'unsigned int' 1
    |   |   `-ImplicitCastExpr 0x13e141860 <col:16> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13e141840 <col:16> 'unsigned int' lvalue ParmVar 0x13e128220 'bits' 'unsigned int'
    |   `-IntegerLiteral 0x13e1418b8 <col:24> 'unsigned int' 1
    |-BinaryOperator 0x13e141ac8 <line:7:3, col:29> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x13e141928 <col:3> 'unsigned int' lvalue ParmVar 0x13e1282a0 'in' 'unsigned int'
    | `-BinaryOperator 0x13e141aa8 <col:8, col:29> 'unsigned int' contains-errors '<<'
    |   |-ImplicitCastExpr 0x13e141a90 <col:8> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13e141948 <col:8> 'unsigned int' lvalue ParmVar 0x13e1282a0 'in' 'unsigned int'
    |   `-ParenExpr 0x13e141a70 <col:14, col:29> 'unsigned int' contains-errors
    |     `-BinaryOperator 0x13e141a50 <col:15, col:28> 'unsigned int' contains-errors '*'
    |       |-ImplicitCastExpr 0x13e141a38 <col:15> 'unsigned int' <LValueToRValue>
    |       | `-DeclRefExpr 0x13e141968 <col:15> 'unsigned int' lvalue ParmVar 0x13e128220 'bits' 'unsigned int'
    |       `-ParenExpr 0x13e141a18 <col:22, col:28> 'unsigned int' contains-errors
    |         `-BinaryOperator 0x13e1419f8 <col:23, col:27> 'unsigned int' contains-errors '-'
    |           |-ImplicitCastExpr 0x13e1419c8 <col:23> 'unsigned int' <LValueToRValue>
    |           | `-DeclRefExpr 0x13e141988 <col:23> 'unsigned int' lvalue Var 0x13e128480 'm' 'unsigned int'
    |           `-ImplicitCastExpr 0x13e1419e0 <col:27> 'unsigned int' contains-errors <LValueToRValue>
    |             `-DeclRefExpr 0x13e1419a8 <col:27> 'unsigned int' contains-errors lvalue Var 0x13e128710 'p' 'unsigned int'
    `-IfStmt 0x13e141df8 <line:8:3, line:9:33> has_else
      |-BinaryOperator 0x13e141b58 <line:8:6, col:11> 'int' contains-errors '=='
      | |-ImplicitCastExpr 0x13e141b28 <col:6> 'unsigned int' contains-errors <LValueToRValue>
      | | `-DeclRefExpr 0x13e141ae8 <col:6> 'unsigned int' contains-errors lvalue Var 0x13e128710 'p' 'unsigned int'
      | `-ImplicitCastExpr 0x13e141b40 <col:11> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x13e141b08 <col:11> 'int' 0
      |-BinaryOperator 0x13e141c90 <col:14, col:38> '<dependent type>' contains-errors '='
      | |-ArraySubscriptExpr 0x13e141c50 <col:14, col:34> '<dependent type>' contains-errors lvalue
      | | |-ImplicitCastExpr 0x13e141c38 <col:14> 'unsigned char *' <LValueToRValue>
      | | | `-DeclRefExpr 0x13e141b78 <col:14> 'unsigned char *' lvalue ParmVar 0x13e128108 'out' 'unsigned char *'
      | | `-BinaryOperator 0x13e141c18 <col:18, col:33> '<dependent type>' contains-errors '/'
      | |   |-BinaryOperator 0x13e141bd8 <col:18, col:26> '<dependent type>' contains-errors '*'
      | |   | |-RecoveryExpr 0x13e141b98 <col:18> '<dependent type>' contains-errors lvalue
      | |   | `-DeclRefExpr 0x13e141bb8 <col:26> 'unsigned int' lvalue ParmVar 0x13e128220 'bits' 'unsigned int'
      | |   `-IntegerLiteral 0x13e141bf8 <col:33> 'int' 8
      | `-DeclRefExpr 0x13e141c70 <col:38> 'unsigned int' lvalue ParmVar 0x13e1282a0 'in' 'unsigned int'
      `-CompoundAssignOperator 0x13e141dc8 <line:9:8, col:33> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |-ArraySubscriptExpr 0x13e141d88 <col:8, col:28> '<dependent type>' contains-errors lvalue
        | |-ImplicitCastExpr 0x13e141d70 <col:8> 'unsigned char *' <LValueToRValue>
        | | `-DeclRefExpr 0x13e141cb0 <col:8> 'unsigned char *' lvalue ParmVar 0x13e128108 'out' 'unsigned char *'
        | `-BinaryOperator 0x13e141d50 <col:12, col:27> '<dependent type>' contains-errors '/'
        |   |-BinaryOperator 0x13e141d10 <col:12, col:20> '<dependent type>' contains-errors '*'
        |   | |-RecoveryExpr 0x13e141cd0 <col:12> '<dependent type>' contains-errors lvalue
        |   | `-DeclRefExpr 0x13e141cf0 <col:20> 'unsigned int' lvalue ParmVar 0x13e128220 'bits' 'unsigned int'
        |   `-IntegerLiteral 0x13e141d30 <col:27> 'int' 8
        `-DeclRefExpr 0x13e141da8 <col:33> 'unsigned int' lvalue ParmVar 0x13e1282a0 'in' 'unsigned int'
