TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x120128308 <dataset_diviso_filec/func13206_nonvuln.c:1:1, line:37:1> line:1:9 invalid messageTypeStringtoInt 'int (int *)'
| |-ParmVarDecl 0x1201281f0 <col:32, col:59> col:40 invalid messageTypeString 'int *'
| `-CompoundStmt 0x1201444f0 <col:62, line:37:1>
|   `-IfStmt 0x1201444c0 <line:2:2, line:36:2> has_else
|     |-BinaryOperator 0x1201423f8 <line:2:6, col:45> 'int' contains-errors '=='
|     | |-CallExpr 0x1201423a0 <col:6, col:40> '<dependent type>' contains-errors
|     | | |-DeclRefExpr 0x1201422b0 <col:6> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|     | | |-RecoveryExpr 0x1201422d0 <col:13> '<dependent type>' contains-errors lvalue
|     | | |-StringLiteral 0x120142330 <col:32> 'char[4]' lvalue "STR"
|     | | `-IntegerLiteral 0x120142350 <col:39> 'int' 8
|     | `-IntegerLiteral 0x1201423d8 <col:45> 'int' 0
|     |-CompoundStmt 0x120142460 <col:48, line:4:2>
|     | `-ReturnStmt 0x120142450 <line:3:3, col:10>
|     |   `-RecoveryExpr 0x120142430 <col:10> '<dependent type>' contains-errors lvalue
|     `-IfStmt 0x120144490 <line:4:9, line:36:2> has_else
|       |-BinaryOperator 0x120142580 <line:4:13, col:52> 'int' contains-errors '=='
|       | |-CallExpr 0x120142528 <col:13, col:47> '<dependent type>' contains-errors
|       | | |-DeclRefExpr 0x120142478 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|       | | |-RecoveryExpr 0x120142498 <col:20> '<dependent type>' contains-errors lvalue
|       | | |-StringLiteral 0x1201424b8 <col:39> 'char[4]' lvalue "STR"
|       | | `-IntegerLiteral 0x1201424d8 <col:46> 'int' 8
|       | `-IntegerLiteral 0x120142560 <col:52> 'int' 0
|       |-CompoundStmt 0x1201425e8 <col:55, line:6:2>
|       | `-ReturnStmt 0x1201425d8 <line:5:3, col:10>
|       |   `-RecoveryExpr 0x1201425b8 <col:10> '<dependent type>' contains-errors lvalue
|       `-IfStmt 0x120144460 <line:6:9, line:36:2> has_else
|         |-BinaryOperator 0x120142708 <line:6:13, col:52> 'int' contains-errors '=='
|         | |-CallExpr 0x1201426b0 <col:13, col:47> '<dependent type>' contains-errors
|         | | |-DeclRefExpr 0x120142600 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|         | | |-RecoveryExpr 0x120142620 <col:20> '<dependent type>' contains-errors lvalue
|         | | |-StringLiteral 0x120142640 <col:39> 'char[4]' lvalue "STR"
|         | | `-IntegerLiteral 0x120142660 <col:46> 'int' 8
|         | `-IntegerLiteral 0x1201426e8 <col:52> 'int' 0
|         |-CompoundStmt 0x120142770 <col:55, line:8:2>
|         | `-ReturnStmt 0x120142760 <line:7:3, col:10>
|         |   `-RecoveryExpr 0x120142740 <col:10> '<dependent type>' contains-errors lvalue
|         `-IfStmt 0x120144430 <line:8:9, line:36:2> has_else
|           |-BinaryOperator 0x120142890 <line:8:13, col:52> 'int' contains-errors '=='
|           | |-CallExpr 0x120142838 <col:13, col:47> '<dependent type>' contains-errors
|           | | |-DeclRefExpr 0x120142788 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|           | | |-RecoveryExpr 0x1201427a8 <col:20> '<dependent type>' contains-errors lvalue
|           | | |-StringLiteral 0x1201427c8 <col:39> 'char[4]' lvalue "STR"
|           | | `-IntegerLiteral 0x1201427e8 <col:46> 'int' 8
|           | `-IntegerLiteral 0x120142870 <col:52> 'int' 0
|           |-CompoundStmt 0x1201428f8 <col:55, line:10:2>
|           | `-ReturnStmt 0x1201428e8 <line:9:3, col:10>
|           |   `-RecoveryExpr 0x1201428c8 <col:10> '<dependent type>' contains-errors lvalue
|           `-IfStmt 0x120144400 <line:10:9, line:36:2> has_else
|             |-BinaryOperator 0x120142a18 <line:10:13, col:52> 'int' contains-errors '=='
|             | |-CallExpr 0x1201429c0 <col:13, col:47> '<dependent type>' contains-errors
|             | | |-DeclRefExpr 0x120142910 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|             | | |-RecoveryExpr 0x120142930 <col:20> '<dependent type>' contains-errors lvalue
|             | | |-StringLiteral 0x120142950 <col:39> 'char[4]' lvalue "STR"
|             | | `-IntegerLiteral 0x120142970 <col:46> 'int' 8
|             | `-IntegerLiteral 0x1201429f8 <col:52> 'int' 0
|             |-CompoundStmt 0x120142a80 <col:55, line:12:2>
|             | `-ReturnStmt 0x120142a70 <line:11:3, col:10>
|             |   `-RecoveryExpr 0x120142a50 <col:10> '<dependent type>' contains-errors lvalue
|             `-IfStmt 0x1201443d0 <line:12:9, line:36:2> has_else
|               |-BinaryOperator 0x120142ba0 <line:12:13, col:52> 'int' contains-errors '=='
|               | |-CallExpr 0x120142b48 <col:13, col:47> '<dependent type>' contains-errors
|               | | |-DeclRefExpr 0x120142a98 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|               | | |-RecoveryExpr 0x120142ab8 <col:20> '<dependent type>' contains-errors lvalue
|               | | |-StringLiteral 0x120142ad8 <col:39> 'char[4]' lvalue "STR"
|               | | `-IntegerLiteral 0x120142af8 <col:46> 'int' 8
|               | `-IntegerLiteral 0x120142b80 <col:52> 'int' 0
|               |-CompoundStmt 0x120142c08 <col:55, line:14:2>
|               | `-ReturnStmt 0x120142bf8 <line:13:3, col:10>
|               |   `-RecoveryExpr 0x120142bd8 <col:10> '<dependent type>' contains-errors lvalue
|               `-IfStmt 0x1201443a0 <line:14:9, line:36:2> has_else
|                 |-BinaryOperator 0x120142d28 <line:14:13, col:52> 'int' contains-errors '=='
|                 | |-CallExpr 0x120142cd0 <col:13, col:47> '<dependent type>' contains-errors
|                 | | |-DeclRefExpr 0x120142c20 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                 | | |-RecoveryExpr 0x120142c40 <col:20> '<dependent type>' contains-errors lvalue
|                 | | |-StringLiteral 0x120142c60 <col:39> 'char[4]' lvalue "STR"
|                 | | `-IntegerLiteral 0x120142c80 <col:46> 'int' 8
|                 | `-IntegerLiteral 0x120142d08 <col:52> 'int' 0
|                 |-CompoundStmt 0x120142d90 <col:55, line:16:2>
|                 | `-ReturnStmt 0x120142d80 <line:15:3, col:10>
|                 |   `-RecoveryExpr 0x120142d60 <col:10> '<dependent type>' contains-errors lvalue
|                 `-IfStmt 0x120144370 <line:16:9, line:36:2> has_else
|                   |-BinaryOperator 0x120142eb0 <line:16:13, col:52> 'int' contains-errors '=='
|                   | |-CallExpr 0x120142e58 <col:13, col:47> '<dependent type>' contains-errors
|                   | | |-DeclRefExpr 0x120142da8 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                   | | |-RecoveryExpr 0x120142dc8 <col:20> '<dependent type>' contains-errors lvalue
|                   | | |-StringLiteral 0x120142de8 <col:39> 'char[4]' lvalue "STR"
|                   | | `-IntegerLiteral 0x120142e08 <col:46> 'int' 8
|                   | `-IntegerLiteral 0x120142e90 <col:52> 'int' 0
|                   |-CompoundStmt 0x120142f18 <col:55, line:18:2>
|                   | `-ReturnStmt 0x120142f08 <line:17:3, col:10>
|                   |   `-RecoveryExpr 0x120142ee8 <col:10> '<dependent type>' contains-errors lvalue
|                   `-IfStmt 0x120144340 <line:18:9, line:36:2> has_else
|                     |-BinaryOperator 0x120143658 <line:18:13, col:52> 'int' contains-errors '=='
|                     | |-CallExpr 0x120143600 <col:13, col:47> '<dependent type>' contains-errors
|                     | | |-DeclRefExpr 0x120142f30 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                     | | |-RecoveryExpr 0x120142f50 <col:20> '<dependent type>' contains-errors lvalue
|                     | | |-StringLiteral 0x120142f70 <col:39> 'char[4]' lvalue "STR"
|                     | | `-IntegerLiteral 0x120142f90 <col:46> 'int' 8
|                     | `-IntegerLiteral 0x120143638 <col:52> 'int' 0
|                     |-CompoundStmt 0x1201436c0 <col:55, line:20:2>
|                     | `-ReturnStmt 0x1201436b0 <line:19:3, col:10>
|                     |   `-RecoveryExpr 0x120143690 <col:10> '<dependent type>' contains-errors lvalue
|                     `-IfStmt 0x120144310 <line:20:9, line:36:2> has_else
|                       |-BinaryOperator 0x1201437e0 <line:20:13, col:52> 'int' contains-errors '=='
|                       | |-CallExpr 0x120143788 <col:13, col:47> '<dependent type>' contains-errors
|                       | | |-DeclRefExpr 0x1201436d8 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                       | | |-RecoveryExpr 0x1201436f8 <col:20> '<dependent type>' contains-errors lvalue
|                       | | |-StringLiteral 0x120143718 <col:39> 'char[4]' lvalue "STR"
|                       | | `-IntegerLiteral 0x120143738 <col:46> 'int' 8
|                       | `-IntegerLiteral 0x1201437c0 <col:52> 'int' 0
|                       |-CompoundStmt 0x120143848 <col:55, line:22:2>
|                       | `-ReturnStmt 0x120143838 <line:21:3, col:10>
|                       |   `-RecoveryExpr 0x120143818 <col:10> '<dependent type>' contains-errors lvalue
|                       `-IfStmt 0x1201442e0 <line:22:9, line:36:2> has_else
|                         |-BinaryOperator 0x120143968 <line:22:13, col:52> 'int' contains-errors '=='
|                         | |-CallExpr 0x120143910 <col:13, col:47> '<dependent type>' contains-errors
|                         | | |-DeclRefExpr 0x120143860 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                         | | |-RecoveryExpr 0x120143880 <col:20> '<dependent type>' contains-errors lvalue
|                         | | |-StringLiteral 0x1201438a0 <col:39> 'char[4]' lvalue "STR"
|                         | | `-IntegerLiteral 0x1201438c0 <col:46> 'int' 8
|                         | `-IntegerLiteral 0x120143948 <col:52> 'int' 0
|                         |-CompoundStmt 0x1201439d0 <col:55, line:24:2>
|                         | `-ReturnStmt 0x1201439c0 <line:23:3, col:10>
|                         |   `-RecoveryExpr 0x1201439a0 <col:10> '<dependent type>' contains-errors lvalue
|                         `-IfStmt 0x1201442b0 <line:24:9, line:36:2> has_else
|                           |-BinaryOperator 0x120143af0 <line:24:13, col:52> 'int' contains-errors '=='
|                           | |-CallExpr 0x120143a98 <col:13, col:47> '<dependent type>' contains-errors
|                           | | |-DeclRefExpr 0x1201439e8 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                           | | |-RecoveryExpr 0x120143a08 <col:20> '<dependent type>' contains-errors lvalue
|                           | | |-StringLiteral 0x120143a28 <col:39> 'char[4]' lvalue "STR"
|                           | | `-IntegerLiteral 0x120143a48 <col:46> 'int' 8
|                           | `-IntegerLiteral 0x120143ad0 <col:52> 'int' 0
|                           |-CompoundStmt 0x120143b58 <col:55, line:26:2>
|                           | `-ReturnStmt 0x120143b48 <line:25:3, col:10>
|                           |   `-RecoveryExpr 0x120143b28 <col:10> '<dependent type>' contains-errors lvalue
|                           `-IfStmt 0x120144280 <line:26:9, line:36:2> has_else
|                             |-BinaryOperator 0x120143c78 <line:26:13, col:52> 'int' contains-errors '=='
|                             | |-CallExpr 0x120143c20 <col:13, col:47> '<dependent type>' contains-errors
|                             | | |-DeclRefExpr 0x120143b70 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                             | | |-RecoveryExpr 0x120143b90 <col:20> '<dependent type>' contains-errors lvalue
|                             | | |-StringLiteral 0x120143bb0 <col:39> 'char[4]' lvalue "STR"
|                             | | `-IntegerLiteral 0x120143bd0 <col:46> 'int' 8
|                             | `-IntegerLiteral 0x120143c58 <col:52> 'int' 0
|                             |-CompoundStmt 0x120143ce0 <col:55, line:28:2>
|                             | `-ReturnStmt 0x120143cd0 <line:27:3, col:10>
|                             |   `-RecoveryExpr 0x120143cb0 <col:10> '<dependent type>' contains-errors lvalue
|                             `-IfStmt 0x120144250 <line:28:9, line:36:2> has_else
|                               |-BinaryOperator 0x120143e00 <line:28:13, col:52> 'int' contains-errors '=='
|                               | |-CallExpr 0x120143da8 <col:13, col:47> '<dependent type>' contains-errors
|                               | | |-DeclRefExpr 0x120143cf8 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                               | | |-RecoveryExpr 0x120143d18 <col:20> '<dependent type>' contains-errors lvalue
|                               | | |-StringLiteral 0x120143d38 <col:39> 'char[4]' lvalue "STR"
|                               | | `-IntegerLiteral 0x120143d58 <col:46> 'int' 8
|                               | `-IntegerLiteral 0x120143de0 <col:52> 'int' 0
|                               |-CompoundStmt 0x120143e68 <col:55, line:30:2>
|                               | `-ReturnStmt 0x120143e58 <line:29:3, col:10>
|                               |   `-RecoveryExpr 0x120143e38 <col:10> '<dependent type>' contains-errors lvalue
|                               `-IfStmt 0x120144220 <line:30:9, line:36:2> has_else
|                                 |-BinaryOperator 0x120143f88 <line:30:13, col:52> 'int' contains-errors '=='
|                                 | |-CallExpr 0x120143f30 <col:13, col:47> '<dependent type>' contains-errors
|                                 | | |-DeclRefExpr 0x120143e80 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                                 | | |-RecoveryExpr 0x120143ea0 <col:20> '<dependent type>' contains-errors lvalue
|                                 | | |-StringLiteral 0x120143ec0 <col:39> 'char[4]' lvalue "STR"
|                                 | | `-IntegerLiteral 0x120143ee0 <col:46> 'int' 8
|                                 | `-IntegerLiteral 0x120143f68 <col:52> 'int' 0
|                                 |-CompoundStmt 0x120143ff0 <col:55, line:32:2>
|                                 | `-ReturnStmt 0x120143fe0 <line:31:3, col:10>
|                                 |   `-RecoveryExpr 0x120143fc0 <col:10> '<dependent type>' contains-errors lvalue
|                                 `-IfStmt 0x1201441f0 <line:32:9, line:36:2> has_else
|                                   |-BinaryOperator 0x120144110 <line:32:13, col:52> 'int' contains-errors '=='
|                                   | |-CallExpr 0x1201440b8 <col:13, col:47> '<dependent type>' contains-errors
|                                   | | |-DeclRefExpr 0x120144008 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x120142060 'memcmp' 'int (const void *, const void *, unsigned long)'
|                                   | | |-RecoveryExpr 0x120144028 <col:20> '<dependent type>' contains-errors lvalue
|                                   | | |-StringLiteral 0x120144048 <col:39> 'char[4]' lvalue "STR"
|                                   | | `-IntegerLiteral 0x120144068 <col:46> 'int' 8
|                                   | `-IntegerLiteral 0x1201440f0 <col:52> 'int' 0
|                                   |-CompoundStmt 0x120144178 <col:55, line:34:2>
|                                   | `-ReturnStmt 0x120144168 <line:33:3, col:10>
|                                   |   `-RecoveryExpr 0x120144148 <col:10> '<dependent type>' contains-errors lvalue
|                                   `-CompoundStmt 0x1201441d8 <line:34:9, line:36:2>
|                                     `-ReturnStmt 0x1201441c8 <line:35:3, col:10>
|                                       `-RecoveryExpr 0x1201441a8 <col:10> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x120142060 <line:2:6> col:6 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x120142160 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x1201421c8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x120142230 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x120142108 <<invalid sloc>> Implicit 883
