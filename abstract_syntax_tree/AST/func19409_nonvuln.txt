TranslationUnitDecl 0x140055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1400564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x140055bd0 '__int128'
|-TypedefDecl 0x140056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x140055bf0 'unsigned __int128'
|-TypedefDecl 0x13800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13800bc00 'struct __NSConstantString_tag'
|   `-Record 0x140056580 '__NSConstantString_tag'
|-TypedefDecl 0x13800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140055d90 '__SVInt8_t'
|-TypedefDecl 0x13800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x140055db0 '__SVInt16_t'
|-TypedefDecl 0x13800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x140055dd0 '__SVInt32_t'
|-TypedefDecl 0x13800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x140055df0 '__SVInt64_t'
|-TypedefDecl 0x13800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140055e10 '__SVUint8_t'
|-TypedefDecl 0x13800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140055e30 '__SVUint16_t'
|-TypedefDecl 0x13800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140055e50 '__SVUint32_t'
|-TypedefDecl 0x13800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140055e70 '__SVUint64_t'
|-TypedefDecl 0x13800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140055e90 '__SVFloat16_t'
|-TypedefDecl 0x13800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x140055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x140055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x140055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x140055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x140055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x140055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1400560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1400560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1400560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1400561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1400561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1400561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1400562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1400562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1400562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140056390 '__SVBool_t'
|-TypedefDecl 0x13800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1400563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1400563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1400563f0 '__SVCount_t'
|-TypedefDecl 0x13800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x1400556b0 'char'
|-TypedefDecl 0x13800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x1400556b0 'char'
|-FunctionDecl 0x13800df18 <dataset_diviso_filec/func19409_nonvuln.c:1:1, line:36:1> line:1:12 invalid append_session_memory_max 'int (int *, int *, const char *)' static
| |-ParmVarDecl 0x13800dd28 <col:38, col:52> col:52 invalid handle 'int *'
| |-ParmVarDecl 0x13800dda8 <col:60, col:76> col:76 invalid m 'int *'
| |-ParmVarDecl 0x13800de28 <col:79, col:91> col:91 used limit 'const char *'
| `-CompoundStmt 0x13880b118 <col:98, line:36:1>
|   |-DeclStmt 0x13800e058 <line:3:9, col:14>
|   | `-VarDecl 0x13800dff0 <col:9, col:13> col:13 used r 'int'
|   |-IfStmt 0x13800e2c8 <line:5:9, line:6:24>
|   | |-CallExpr 0x13800e258 <line:5:13, col:26> 'int'
|   | | |-ImplicitCastExpr 0x13800e240 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x13800e1d0 <col:13> 'int ()' Function 0x13800e118 'isempty' 'int ()'
|   | | `-ImplicitCastExpr 0x13800e280 <col:21> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13800e1f0 <col:21> 'const char *' lvalue ParmVar 0x13800de28 'limit' 'const char *'
|   | `-ReturnStmt 0x13800e2b8 <line:6:17, col:24>
|   |   `-IntegerLiteral 0x13800e298 <col:24> 'int' 0
|   |-IfStmt 0x13880b0b8 <line:8:9, line:33:9> has_else
|   | |-CallExpr 0x138808c98 <line:8:13, col:31> 'int'
|   | | |-ImplicitCastExpr 0x138808c80 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x13800e3c8 <col:13> 'int ()' Function 0x13800e310 'streq' 'int ()'
|   | | |-ImplicitCastExpr 0x138808cc8 <col:19> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x138808c00 <col:19> 'const char *' lvalue ParmVar 0x13800de28 'limit' 'const char *'
|   | | `-ImplicitCastExpr 0x138808ce0 <col:26> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x138808c60 <col:26> 'char[4]' lvalue "STR"
|   | |-CompoundStmt 0x1388098a8 <col:34, line:14:9>
|   | | `-IfStmt 0x138809888 <line:10:17, line:13:17>
|   | |   |-BinaryOperator 0x138808ee8 <line:10:21, col:25> 'int' '<'
|   | |   | |-ImplicitCastExpr 0x138808ed0 <col:21> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x138808e90 <col:21> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   | |   | `-IntegerLiteral 0x138808eb0 <col:25> 'int' 0
|   | |   `-CompoundStmt 0x138809868 <col:28, line:13:17>
|   | |     |-CallExpr 0x1388097e0 <line:11:25, col:72> '<dependent type>' contains-errors
|   | |     | |-DeclRefExpr 0x138808fe8 <col:25> 'int ()' Function 0x138808f30 'pam_syslog' 'int ()'
|   | |     | |-RecoveryExpr 0x138809008 <col:36> '<dependent type>' contains-errors lvalue
|   | |     | |-RecoveryExpr 0x138809750 <col:44> '<dependent type>' contains-errors lvalue
|   | |     | |-StringLiteral 0x138809040 <col:53> 'char[4]' lvalue "STR"
|   | |     | `-CallExpr 0x1388097b8 <col:60, col:71> 'char *'
|   | |     |   |-ImplicitCastExpr 0x1388097a0 <col:60> 'char *(*)(int)' <FunctionToPointerDecay>
|   | |     |   | `-DeclRefExpr 0x138809630 <col:60> 'char *(int)' Function 0x1388094c0 'strerror' 'char *(int)'
|   | |     |   `-UnaryOperator 0x138809788 <col:69, col:70> 'int' prefix '-'
|   | |     |     `-ImplicitCastExpr 0x138809770 <col:70> 'int' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x138809650 <col:70> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   | |     `-ReturnStmt 0x138809858 <line:12:25, col:32>
|   | |       `-ImplicitCastExpr 0x138809840 <col:32> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x138809820 <col:32> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   | `-CompoundStmt 0x13880b098 <line:14:16, line:33:9>
|   |   |-BinaryOperator 0x138809a58 <line:15:17, col:41> 'int' '='
|   |   | |-DeclRefExpr 0x1388098c0 <col:17> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |   | `-CallExpr 0x138809a18 <col:21, col:41> 'int'
|   |   |   |-ImplicitCastExpr 0x138809a00 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1388099c0 <col:21> 'int ()' Function 0x138809908 'parse_permille' 'int ()'
|   |   |   `-ImplicitCastExpr 0x138809a40 <col:36> 'const char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1388099e0 <col:36> 'const char *' lvalue ParmVar 0x13800de28 'limit' 'const char *'
|   |   `-IfStmt 0x13880b068 <line:16:17, line:32:17> has_else
|   |     |-BinaryOperator 0x138809ad0 <line:16:21, col:26> 'int' '>='
|   |     | |-ImplicitCastExpr 0x138809ab8 <col:21> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x138809a78 <col:21> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |     | `-IntegerLiteral 0x138809a98 <col:26> 'int' 0
|   |     |-CompoundStmt 0x13880a8f8 <col:29, line:22:17>
|   |     | `-IfStmt 0x13880a8d8 <line:18:25, line:21:25>
|   |     |   |-BinaryOperator 0x13880a618 <line:18:29, col:33> 'int' '<'
|   |     |   | |-ImplicitCastExpr 0x13880a600 <col:29> 'int' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x138809bc0 <col:29> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |     |   | `-IntegerLiteral 0x138809be0 <col:33> 'int' 0
|   |     |   `-CompoundStmt 0x13880a8b8 <col:36, line:21:25>
|   |     |     |-CallExpr 0x13880a830 <line:19:33, col:80> '<dependent type>' contains-errors
|   |     |     | |-DeclRefExpr 0x13880a638 <col:33> 'int ()' Function 0x138808f30 'pam_syslog' 'int ()'
|   |     |     | |-RecoveryExpr 0x13880a658 <col:44> '<dependent type>' contains-errors lvalue
|   |     |     | |-RecoveryExpr 0x13880a7a0 <col:52> '<dependent type>' contains-errors lvalue
|   |     |     | |-StringLiteral 0x13880a690 <col:61> 'char[4]' lvalue "STR"
|   |     |     | `-CallExpr 0x13880a808 <col:68, col:79> 'char *'
|   |     |     |   |-ImplicitCastExpr 0x13880a7f0 <col:68> 'char *(*)(int)' <FunctionToPointerDecay>
|   |     |     |   | `-DeclRefExpr 0x13880a6b0 <col:68> 'char *(int)' Function 0x1388094c0 'strerror' 'char *(int)'
|   |     |     |   `-UnaryOperator 0x13880a7d8 <col:77, col:78> 'int' prefix '-'
|   |     |     |     `-ImplicitCastExpr 0x13880a7c0 <col:78> 'int' <LValueToRValue>
|   |     |     |       `-DeclRefExpr 0x13880a6d0 <col:78> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |     |     `-ReturnStmt 0x13880a8a8 <line:20:33, col:40>
|   |     |       `-ImplicitCastExpr 0x13880a890 <col:40> 'int' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x13880a870 <col:40> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |     `-CompoundStmt 0x13880b048 <line:22:24, line:32:17>
|   |       |-BinaryOperator 0x13880ab68 <line:23:25, col:57> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x13880a910 <col:25> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |       | `-CallExpr 0x13880ab30 <col:29, col:57> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x13880aa10 <col:29> 'int ()' Function 0x13880a958 'parse_size' 'int ()'
|   |       |   |-DeclRefExpr 0x13880aa30 <col:40> 'const char *' lvalue ParmVar 0x13800de28 'limit' 'const char *'
|   |       |   |-IntegerLiteral 0x13880aa50 <col:47> 'int' 1024
|   |       |   `-UnaryOperator 0x13880ab18 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       |     `-RecoveryExpr 0x13880aaf8 <col:54> '<dependent type>' contains-errors lvalue
|   |       `-IfStmt 0x13880b018 <line:24:25, line:31:33> has_else
|   |         |-BinaryOperator 0x13880abe0 <line:24:29, col:34> 'int' '>='
|   |         | |-ImplicitCastExpr 0x13880abc8 <col:29> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x13880ab88 <col:29> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |         | `-IntegerLiteral 0x13880aba8 <col:34> 'int' 0
|   |         |-CompoundStmt 0x13880af70 <col:37, line:30:25>
|   |         | |-BinaryOperator 0x13880ad48 <line:25:33, col:72> 'int' contains-errors '='
|   |         | | |-DeclRefExpr 0x13880ac00 <col:33> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |         | | `-CallExpr 0x13880ad10 <col:37, col:72> '<dependent type>' contains-errors
|   |         | |   |-DeclRefExpr 0x13880ac20 <col:37> 'int ()' Function 0x138808d40 'sd_bus_message_append' 'int ()'
|   |         | |   |-RecoveryExpr 0x13880ac40 <col:59> '<dependent type>' contains-errors lvalue
|   |         | |   |-StringLiteral 0x13880ac60 <col:62> 'char[4]' lvalue "STR"
|   |         | |   `-RecoveryExpr 0x13880acf0 <col:69> '<dependent type>' contains-errors lvalue
|   |         | `-IfStmt 0x13880af50 <line:26:33, line:29:33>
|   |         |   |-BinaryOperator 0x13880adc0 <line:26:37, col:41> 'int' '<'
|   |         |   | |-ImplicitCastExpr 0x13880ada8 <col:37> 'int' <LValueToRValue>
|   |         |   | | `-DeclRefExpr 0x13880ad68 <col:37> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |         |   | `-IntegerLiteral 0x13880ad88 <col:41> 'int' 0
|   |         |   `-CompoundStmt 0x13880af38 <col:44, line:29:33>
|   |         |     `-ReturnStmt 0x13880af28 <line:28:41, col:48>
|   |         |       `-ImplicitCastExpr 0x13880af10 <col:48> 'int' <LValueToRValue>
|   |         |         `-DeclRefExpr 0x13880aef0 <col:48> 'int' lvalue Var 0x13800dff0 'r' 'int'
|   |         `-NullStmt 0x13880b010 <line:31:33>
|   `-ReturnStmt 0x13880b108 <line:35:9, col:16>
|     `-IntegerLiteral 0x13880b0e8 <col:16> 'int' 0
`-FunctionDecl 0x1388094c0 <line:11:60> col:60 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x1388095c0 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x138809568 <<invalid sloc>> Implicit 901
