TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x12700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12700bc00 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x12700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x12700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x12700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x12700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x12700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x12700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x12700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x12700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x12700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x12700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x12700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x12700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x12700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-FunctionDecl 0x127027438 <dataset_diviso_filec/func3616_nonvuln.c:1:1, line:66:1> line:1:19 invalid rb_write_something 'int (struct rb_test_data *, int)' static
| |-ParmVarDecl 0x12700e268 <col:38, col:59> col:59 used data 'struct rb_test_data *'
| |-ParmVarDecl 0x12700e2e8 <col:65, col:70> col:70 invalid nested 'int'
| `-CompoundStmt 0x12702c528 <line:2:1, line:66:1>
|   |-DeclStmt 0x1270276d8 <line:3:2, col:33>
|   | |-RecordDecl 0x1270274f0 <col:2, col:9> col:9 struct ring_buffer_event
|   | `-VarDecl 0x127027658 <col:2, col:28> col:28 used event 'struct ring_buffer_event *'
|   |-DeclStmt 0x1270278d8 <line:4:2, col:22>
|   | |-RecordDecl 0x1270276f0 <col:2, col:9> col:9 struct rb_item
|   | `-VarDecl 0x127027858 <col:2, col:18> col:18 used item 'struct rb_item *'
|   |-DeclStmt 0x127027970 <line:6:2, col:15>
|   | `-VarDecl 0x127027908 <col:2, col:6> col:6 used event_len 'int'
|   |-DeclStmt 0x127027a08 <line:7:2, col:10>
|   | `-VarDecl 0x1270279a0 <col:2, col:6> col:6 used size 'int'
|   |-DeclStmt 0x127027aa0 <line:8:2, col:9>
|   | `-VarDecl 0x127027a38 <col:2, col:6> col:6 used len 'int'
|   |-DeclStmt 0x127027b38 <line:9:2, col:9>
|   | `-VarDecl 0x127027ad0 <col:2, col:6> col:6 used cnt 'int'
|   |-BinaryOperator 0x127027ca0 <line:12:2, col:36> 'int' contains-errors '='
|   | |-DeclRefExpr 0x127027b50 <col:2> 'int' lvalue Var 0x127027ad0 'cnt' 'int'
|   | `-BinaryOperator 0x127027c80 <col:8, col:36> '<dependent type>' contains-errors '+'
|   |   |-RecoveryExpr 0x127027ba8 <col:8, col:14> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x127027b70 <col:8> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   `-ParenExpr 0x127027c60 <col:20, col:36> '<dependent type>' contains-errors
|   |     `-ConditionalOperator 0x127027c30 <col:21, col:35> '<dependent type>' contains-errors
|   |       |-RecoveryExpr 0x127027bd0 <col:21> '<dependent type>' contains-errors lvalue
|   |       |-IntegerLiteral 0x127027bf0 <col:30> 'int' 27
|   |       `-IntegerLiteral 0x127027c10 <col:35> 'int' 0
|   |-CallExpr 0x127028088 <line:21:2, col:10> 'int'
|   | `-ImplicitCastExpr 0x127028070 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x127028020 <col:2> 'int ()' Function 0x127027f68 'smp_rmb' 'int ()'
|   |-BinaryOperator 0x127028278 <line:23:2, col:52> 'struct ring_buffer_event *' contains-errors '='
|   | |-DeclRefExpr 0x1270280a8 <col:2> 'struct ring_buffer_event *' lvalue Var 0x127027658 'event' 'struct ring_buffer_event *'
|   | `-CallExpr 0x127028248 <col:10, col:52> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1270281a8 <col:10> 'int ()' Function 0x1270280f0 'ring_buffer_lock_reserve' 'int ()'
|   |   |-RecoveryExpr 0x127028200 <col:35, col:41> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x1270281c8 <col:35> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   `-DeclRefExpr 0x127028228 <col:49> 'int' lvalue Var 0x127027a38 'len' 'int'
|   |-IfStmt 0x12702a380 <line:24:2, line:33:2>
|   | |-UnaryOperator 0x1270282d0 <line:24:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1270282b8 <col:7> 'struct ring_buffer_event *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127028298 <col:7> 'struct ring_buffer_event *' lvalue Var 0x127027658 'event' 'struct ring_buffer_event *'
|   | `-CompoundStmt 0x12702a360 <col:14, line:33:2>
|   |   |-IfStmt 0x12702a2f8 <line:26:3, line:31:3>
|   |   | |-RecoveryExpr 0x127028300 <line:26:7> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x12702a2e0 <col:16, line:31:3>
|   |   |   `-IfStmt 0x12702a2b0 <line:27:4, line:30:35> has_else
|   |   |     |-RecoveryExpr 0x127028320 <line:27:8> '<dependent type>' contains-errors lvalue
|   |   |     |-CompoundAssignOperator 0x1270283c0 <line:28:5, col:28> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |     | |-RecoveryExpr 0x127028378 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   |   |     | | `-DeclRefExpr 0x127028340 <col:5> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   |     | `-DeclRefExpr 0x1270283a0 <col:28> 'int' lvalue Var 0x127027a38 'len' 'int'
|   |   |     `-CompoundAssignOperator 0x12702a280 <line:30:5, col:35> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |       |-RecoveryExpr 0x12702a238 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   |   |       | `-DeclRefExpr 0x12702a200 <col:5> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   |       `-DeclRefExpr 0x12702a260 <col:35> 'int' lvalue Var 0x127027a38 'len' 'int'
|   |   `-ReturnStmt 0x12702a350 <line:32:3, col:10>
|   |     `-ImplicitCastExpr 0x12702a338 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12702a318 <col:10> 'int' lvalue Var 0x127027a38 'len' 'int'
|   |-BinaryOperator 0x12702a538 <line:35:2, col:44> 'int' '='
|   | |-DeclRefExpr 0x12702a3a0 <col:2> 'int' lvalue Var 0x127027908 'event_len' 'int'
|   | `-CallExpr 0x12702a4f8 <col:14, col:44> 'int'
|   |   |-ImplicitCastExpr 0x12702a4e0 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12702a4a0 <col:14> 'int ()' Function 0x12702a3e8 'ring_buffer_event_length' 'int ()'
|   |   `-ImplicitCastExpr 0x12702a520 <col:39> 'struct ring_buffer_event *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12702a4c0 <col:39> 'struct ring_buffer_event *' lvalue Var 0x127027658 'event' 'struct ring_buffer_event *'
|   |-IfStmt 0x12702a7e0 <line:37:2, line:38:8>
|   | |-CallExpr 0x12702a748 <line:37:6, col:46> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x12702a638 <col:6> 'int ()' Function 0x12702a580 'RB_WARN_ON' 'int ()'
|   | | |-RecoveryExpr 0x12702a690 <col:17, col:23> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x12702a658 <col:17> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   | | `-BinaryOperator 0x12702a728 <col:31, col:43> 'int' '<'
|   | |   |-ImplicitCastExpr 0x12702a6f8 <col:31> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x12702a6b8 <col:31> 'int' lvalue Var 0x127027908 'event_len' 'int'
|   | |   `-ImplicitCastExpr 0x12702a710 <col:43> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12702a6d8 <col:43> 'int' lvalue Var 0x127027a38 'len' 'int'
|   | `-GotoStmt 0x12702a7c8 <line:38:3, col:8> 'out' 0x12702a778
|   |-BinaryOperator 0x12702a9b0 <line:40:2, col:37> 'struct rb_item *' '='
|   | |-DeclRefExpr 0x12702a800 <col:2> 'struct rb_item *' lvalue Var 0x127027858 'item' 'struct rb_item *'
|   | `-ImplicitCastExpr 0x12702a998 <col:9, col:37> 'struct rb_item *' <IntegralToPointer>
|   |   `-CallExpr 0x12702a958 <col:9, col:37> 'int'
|   |     |-ImplicitCastExpr 0x12702a940 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12702a900 <col:9> 'int ()' Function 0x12702a848 'ring_buffer_event_data' 'int ()'
|   |     `-ImplicitCastExpr 0x12702a980 <col:32> 'struct ring_buffer_event *' <LValueToRValue>
|   |       `-DeclRefExpr 0x12702a920 <col:32> 'struct ring_buffer_event *' lvalue Var 0x127027658 'event' 'struct ring_buffer_event *'
|   |-BinaryOperator 0x12702aa50 <line:41:2, col:15> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12702aa08 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12702a9d0 <col:2> 'struct rb_item *' lvalue Var 0x127027858 'item' 'struct rb_item *'
|   | `-DeclRefExpr 0x12702aa30 <col:15> 'int' lvalue Var 0x1270279a0 'size' 'int'
|   |-IfStmt 0x12702c2f8 <line:44:2, line:60:2> has_else
|   | |-RecoveryExpr 0x12702add8 <line:44:6> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x12702bd40 <col:14, line:52:2>
|   | | |-CompoundAssignOperator 0x12702ae78 <line:45:3, col:31> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | | | |-RecoveryExpr 0x12702ae30 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x12702adf8 <col:3> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   | | | `-DeclRefExpr 0x12702ae58 <col:31> 'int' lvalue Var 0x127027908 'event_len' 'int'
|   | | |-CompoundAssignOperator 0x12702af28 <line:46:3, col:33> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | | | |-RecoveryExpr 0x12702aee0 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x12702aea8 <col:3> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   | | | `-DeclRefExpr 0x12702af08 <col:33> 'int' lvalue Var 0x127027a38 'len' 'int'
|   | | |-UnaryOperator 0x12702afb8 <line:47:3, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow
|   | | | `-RecoveryExpr 0x12702af90 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x12702af58 <col:3> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   | | |-IfStmt 0x12702b1c0 <line:48:3, line:49:28>
|   | | | |-BinaryOperator 0x12702b100 <line:48:7, col:45> 'int' contains-errors '||'
|   | | | | |-UnaryOperator 0x12702b048 <col:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | | | `-ImplicitCastExpr 0x12702b030 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | |   `-RecoveryExpr 0x12702b008 <col:8, col:14> '<dependent type>' contains-errors lvalue
|   | | | | |     `-DeclRefExpr 0x12702afd0 <col:8> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   | | | | `-BinaryOperator 0x12702b0e0 <col:33, col:45> 'int' contains-errors '<'
|   | | | |   |-DeclRefExpr 0x12702b060 <col:33> 'int' lvalue Var 0x127027a38 'len' 'int'
|   | | | |   `-RecoveryExpr 0x12702b0b8 <col:39, col:45> '<dependent type>' contains-errors lvalue
|   | | | |     `-DeclRefExpr 0x12702b080 <col:39> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   | | | `-BinaryOperator 0x12702b1a0 <line:49:4, col:28> '<dependent type>' contains-errors '='
|   | | |   |-RecoveryExpr 0x12702b158 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   | | |   | `-DeclRefExpr 0x12702b120 <col:4> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   | | |   `-DeclRefExpr 0x12702b180 <col:28> 'int' lvalue Var 0x127027a38 'len' 'int'
|   | | `-IfStmt 0x12702bd20 <line:50:3, line:51:28>
|   | |   |-BinaryOperator 0x12702bc60 <line:50:7, col:19> 'int' contains-errors '>'
|   | |   | |-DeclRefExpr 0x12702b1e0 <col:7> 'int' lvalue Var 0x127027a38 'len' 'int'
|   | |   | `-RecoveryExpr 0x12702bc38 <col:13, col:19> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x12702bc00 <col:13> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   | |   `-BinaryOperator 0x12702bd00 <line:51:4, col:28> '<dependent type>' contains-errors '='
|   | |     |-RecoveryExpr 0x12702bcb8 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   | |     | `-DeclRefExpr 0x12702bc80 <col:4> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   | |     `-DeclRefExpr 0x12702bce0 <col:28> 'int' lvalue Var 0x127027a38 'len' 'int'
|   | `-CompoundStmt 0x12702c2c0 <line:52:9, line:60:2>
|   |   |-CompoundAssignOperator 0x12702bdf8 <line:53:3, col:24> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-RecoveryExpr 0x12702bdb0 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x12702bd78 <col:3> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   | `-DeclRefExpr 0x12702bdd8 <col:24> 'int' lvalue Var 0x127027908 'event_len' 'int'
|   |   |-CompoundAssignOperator 0x12702bea8 <line:54:3, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-RecoveryExpr 0x12702be60 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x12702be28 <col:3> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   | `-DeclRefExpr 0x12702be88 <col:26> 'int' lvalue Var 0x127027a38 'len' 'int'
|   |   |-UnaryOperator 0x12702bf38 <line:55:3, col:15> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   | `-RecoveryExpr 0x12702bf10 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x12702bed8 <col:3> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   |-IfStmt 0x12702c140 <line:56:3, line:57:21>
|   |   | |-BinaryOperator 0x12702c080 <line:56:7, col:38> 'int' contains-errors '||'
|   |   | | |-UnaryOperator 0x12702bfc8 <col:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x12702bfb0 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   `-RecoveryExpr 0x12702bf88 <col:8, col:14> '<dependent type>' contains-errors lvalue
|   |   | | |     `-DeclRefExpr 0x12702bf50 <col:8> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   | | `-BinaryOperator 0x12702c060 <col:26, col:38> 'int' contains-errors '<'
|   |   | |   |-DeclRefExpr 0x12702bfe0 <col:26> 'int' lvalue Var 0x127027a38 'len' 'int'
|   |   | |   `-RecoveryExpr 0x12702c038 <col:32, col:38> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x12702c000 <col:32> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   | `-BinaryOperator 0x12702c120 <line:57:4, col:21> '<dependent type>' contains-errors '='
|   |   |   |-RecoveryExpr 0x12702c0d8 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x12702c0a0 <col:4> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   |   `-DeclRefExpr 0x12702c100 <col:21> 'int' lvalue Var 0x127027a38 'len' 'int'
|   |   `-IfStmt 0x12702c2a0 <line:58:3, line:59:21>
|   |     |-BinaryOperator 0x12702c1e0 <line:58:7, col:19> 'int' contains-errors '>'
|   |     | |-DeclRefExpr 0x12702c160 <col:7> 'int' lvalue Var 0x127027a38 'len' 'int'
|   |     | `-RecoveryExpr 0x12702c1b8 <col:13, col:19> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x12702c180 <col:13> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |     `-BinaryOperator 0x12702c280 <line:59:4, col:21> '<dependent type>' contains-errors '='
|   |       |-RecoveryExpr 0x12702c238 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   |       | `-DeclRefExpr 0x12702c200 <col:4> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |       `-DeclRefExpr 0x12702c260 <col:21> 'int' lvalue Var 0x127027a38 'len' 'int'
|   |-LabelStmt 0x12702c4d8 <line:62:2, line:63:47> 'out'
|   | `-CallExpr 0x12702c4a8 <col:2, col:47> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12702c408 <col:2> 'int ()' Function 0x12702c350 'ring_buffer_unlock_commit' 'int ()'
|   |   |-RecoveryExpr 0x12702c460 <col:28, col:34> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12702c428 <col:28> 'struct rb_test_data *' lvalue ParmVar 0x12700e268 'data' 'struct rb_test_data *'
|   |   `-DeclRefExpr 0x12702c488 <col:42> 'struct ring_buffer_event *' lvalue Var 0x127027658 'event' 'struct ring_buffer_event *'
|   `-ReturnStmt 0x12702c518 <line:65:2, col:9>
|     `-IntegerLiteral 0x12702c4f8 <col:9> 'int' 0
`-FunctionDecl 0x12702aae8 <line:42:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12702abe8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12702ac50 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12702acb8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12702ab90 <<invalid sloc>> Implicit 882
