TranslationUnitDecl 0x13104f608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1310504b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13104fbd0 '__int128'
|-TypedefDecl 0x131050528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13104fbf0 'unsigned __int128'
|-TypedefDecl 0x12f80ee30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f80ec00 'struct __NSConstantString_tag'
|   `-Record 0x131050580 '__NSConstantString_tag'
|-TypedefDecl 0x12f80ee98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13104fd90 '__SVInt8_t'
|-TypedefDecl 0x12f80ef00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13104fdb0 '__SVInt16_t'
|-TypedefDecl 0x12f80ef68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13104fdd0 '__SVInt32_t'
|-TypedefDecl 0x12f80efd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13104fdf0 '__SVInt64_t'
|-TypedefDecl 0x12f80f038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13104fe10 '__SVUint8_t'
|-TypedefDecl 0x12f80f0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13104fe30 '__SVUint16_t'
|-TypedefDecl 0x12f80f108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13104fe50 '__SVUint32_t'
|-TypedefDecl 0x12f80f170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13104fe70 '__SVUint64_t'
|-TypedefDecl 0x12f80f1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13104fe90 '__SVFloat16_t'
|-TypedefDecl 0x12f80f240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13104feb0 '__SVFloat32_t'
|-TypedefDecl 0x12f80f2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13104fed0 '__SVFloat64_t'
|-TypedefDecl 0x12f80f310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13104fef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f80f378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13104ff10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f80f3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13104ff30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f80f448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13104ff50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f80f4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13104ff70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f80f518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13104ff90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f80f580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13104ffb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f80f5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13104ffd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f80f650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13104fff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f80f6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x131050010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f80f720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x131050030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f80f788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x131050050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f80f7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x131050070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f80f858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x131050090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f80f8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1310500b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f80f928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1310500d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f80f990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1310500f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f80f9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x131050110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f80fa60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x131050130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f80fac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x131050150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f80fb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x131050170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f80fb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x131050190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f80fc00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1310501b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f80fc68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1310501d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f80fcd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1310501f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f80fd38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x131050210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f80fda0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x131050230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f80fe08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x131050250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f80fe70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x131050270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f80fed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x131050290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f80ff40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1310502b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f80ffa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1310502d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f810010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1310502f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f810078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x131050310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f8100e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x131050330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f810148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x131050350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f8101b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x131050370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f810218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x131050390 '__SVBool_t'
|-TypedefDecl 0x12f810280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1310503b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f8102e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1310503d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f810350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1310503f0 '__SVCount_t'
|-TypedefDecl 0x12f8103f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f8103b0 'char *'
|   `-BuiltinType 0x13104f6b0 'char'
|-TypedefDecl 0x12f810468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f8103b0 'char *'
|   `-BuiltinType 0x13104f6b0 'char'
|-RecordDecl 0x12f8104c0 <dataset_diviso_filec/func17251_vuln.c:1:8, col:15> col:15 struct mm_struct
|-FunctionDecl 0x12f8291b8 <col:1, line:51:1> line:1:26 mm_init 'struct mm_struct *(struct mm_struct *, struct task_struct *, struct user_namespace *)' static
| |-ParmVarDecl 0x12f810618 <col:34, col:52> col:52 used mm 'struct mm_struct *'
| |-ParmVarDecl 0x12f828e28 <col:56, col:76> col:76 used p 'struct task_struct *'
| |-ParmVarDecl 0x12f828ff8 <line:2:2, col:25> col:25 used user_ns 'struct user_namespace *'
| `-CompoundStmt 0x12800aab0 <line:3:1, line:51:1>
|   |-BinaryOperator 0x12f829390 <line:4:2, col:13> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12f8292f8 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12f8292c0 <col:2> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-RecoveryExpr 0x12f829370 <col:13> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12f829468 <line:5:2, col:14> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12f8293e8 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12f8293b0 <col:2> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-RecoveryExpr 0x12f829448 <col:14> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12f829508 <line:6:2, col:24> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12f8294c0 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12f829488 <col:2> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x12f8294e8 <col:24> 'int' 0
|   |-CallExpr 0x12f8296f8 <line:7:2, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12f829640 <col:2> 'int ()' Function 0x12f829588 'atomic_set' 'int ()'
|   | |-UnaryOperator 0x12f8296c0 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x12f829698 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12f829660 <col:14> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x12f8296d8 <col:28> 'int' 1
|   |-CallExpr 0x12f8297e0 <line:8:2, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12f829728 <col:2> 'int ()' Function 0x12f829588 'atomic_set' 'int ()'
|   | |-UnaryOperator 0x12f8297a8 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x12f829780 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12f829748 <col:14> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x12f8297c0 <col:28> 'int' 1
|   |-CallExpr 0x12f829988 <line:9:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12f8298f0 <col:2> 'int ()' Function 0x12f829838 'init_rwsem' 'int ()'
|   | `-UnaryOperator 0x12f829970 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x12f829948 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12f829910 <col:14> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |-CallExpr 0x12f829b28 <line:10:2, col:28> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12f829a90 <col:2> 'int ()' Function 0x12f8299d8 'INIT_LIST_HEAD' 'int ()'
|   | `-UnaryOperator 0x12f829b10 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x12f829ae8 <col:18, col:22> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12f829ab0 <col:18> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |-BinaryOperator 0x12f829c08 <line:11:2, col:19> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12f829b88 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12f829b50 <col:2> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-RecoveryExpr 0x12f829be8 <col:19> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12f829dc0 <line:12:2, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12f829d08 <col:2> 'int ()' Function 0x12f829c50 'atomic_long_set' 'int ()'
|   | |-UnaryOperator 0x12f829d88 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x12f829d60 <col:19, col:23> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12f829d28 <col:19> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x12f829da0 <col:32> 'int' 0
|   |-CallExpr 0x128008d68 <line:13:2, col:20> 'int'
|   | |-ImplicitCastExpr 0x128008d50 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128008ce0 <col:2> 'int ()' Function 0x128008c28 'mm_nr_pmds_init' 'int ()'
|   | `-ImplicitCastExpr 0x128008d90 <col:18> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x128008d00 <col:18> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |-BinaryOperator 0x128008e28 <line:14:2, col:18> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x128008de0 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x128008da8 <col:2> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x128008e08 <col:18> 'int' 0
|   |-BinaryOperator 0x128008ec8 <line:15:2, col:18> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x128008e80 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x128008e48 <col:2> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x128008ea8 <col:18> 'int' 0
|   |-BinaryOperator 0x128008f68 <line:16:2, col:18> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x128008f20 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x128008ee8 <col:2> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-IntegerLiteral 0x128008f48 <col:18> 'int' 0
|   |-CallExpr 0x128009380 <line:17:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128009228 <col:2> 'void *(void *, int, unsigned long)' Function 0x128008fd8 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x1280092a8 <col:9, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x128009280 <col:10, col:14> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x128009248 <col:10> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | |-IntegerLiteral 0x1280092c0 <col:24> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x128009360 <col:27, col:46> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x128009340 <col:33, col:46> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x128009318 <col:34, col:38> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x1280092e0 <col:34> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *' non_odr_use_unevaluated
|   |-CallExpr 0x128009530 <line:18:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128009498 <col:2> 'int ()' Function 0x1280093e0 'spin_lock_init' 'int ()'
|   | `-UnaryOperator 0x128009518 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x1280094f0 <col:18, col:22> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1280094b8 <col:18> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |-CallExpr 0x128009690 <line:19:2, col:20> 'int'
|   | |-ImplicitCastExpr 0x128009678 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128009638 <col:2> 'int ()' Function 0x128009580 'mm_init_cpumask' 'int ()'
|   | `-ImplicitCastExpr 0x1280096b8 <col:18> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x128009658 <col:18> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |-CallExpr 0x128009808 <line:20:2, col:16> 'int'
|   | |-ImplicitCastExpr 0x1280097f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1280097b0 <col:2> 'int ()' Function 0x1280096f8 'mm_init_aio' 'int ()'
|   | `-ImplicitCastExpr 0x128009830 <col:14> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1280097d0 <col:14> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |-CallExpr 0x1280099a0 <line:21:2, col:21> 'int'
|   | |-ImplicitCastExpr 0x128009988 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128009928 <col:2> 'int ()' Function 0x128009870 'mm_init_owner' 'int ()'
|   | |-ImplicitCastExpr 0x1280099d0 <col:16> 'struct mm_struct *' <LValueToRValue>
|   | | `-DeclRefExpr 0x128009948 <col:16> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-ImplicitCastExpr 0x1280099e8 <col:20> 'struct task_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x128009968 <col:20> 'struct task_struct *' lvalue ParmVar 0x12f828e28 'p' 'struct task_struct *'
|   |-CallExpr 0x128009d10 <line:23:2, col:25> 'int'
|   | |-ImplicitCastExpr 0x128009cf8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128009cb8 <col:2> 'int ()' Function 0x128009c00 'mmu_notifier_mm_init' 'int ()'
|   | `-ImplicitCastExpr 0x128009d38 <col:23> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x128009cd8 <col:23> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |-CallExpr 0x128009e88 <line:24:2, col:27> 'int'
|   | |-ImplicitCastExpr 0x128009e70 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128009e30 <col:2> 'int ()' Function 0x128009d78 'init_tlb_flush_pending' 'int ()'
|   | `-ImplicitCastExpr 0x128009eb0 <col:25> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x128009e50 <col:25> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |-IfStmt 0x12800a0d0 <line:29:2, line:35:2> has_else
|   | |-RecoveryExpr 0x128009ec8 <line:29:6, col:15> '_Bool' contains-errors
|   | |-CompoundStmt 0x128009fa8 <col:19, line:32:2>
|   | `-CompoundStmt 0x12800a0b8 <col:9, line:35:2>
|   |   `-BinaryOperator 0x12800a098 <line:34:3, col:19> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x12800a050 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x12800a018 <col:3> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |     `-IntegerLiteral 0x12800a078 <col:19> 'int' 0
|   |-IfStmt 0x12800a2e0 <line:37:2, line:38:8>
|   | |-CallExpr 0x12800a238 <line:37:6, col:21> 'int'
|   | | |-ImplicitCastExpr 0x12800a220 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x12800a1e0 <col:6> 'int ()' Function 0x12800a128 'mm_alloc_pgd' 'int ()'
|   | | `-ImplicitCastExpr 0x12800a260 <col:19> 'struct mm_struct *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12800a200 <col:19> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-GotoStmt 0x12800a2c8 <line:38:3, col:8> 'fail_nopgd' 0x12800a278
|   |-IfStmt 0x12800a520 <line:40:2, line:41:8>
|   | |-CallExpr 0x12800a458 <line:40:6, col:28> 'int'
|   | | |-ImplicitCastExpr 0x12800a440 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x12800a3e0 <col:6> 'int ()' Function 0x12800a328 'init_new_context' 'int ()'
|   | | |-ImplicitCastExpr 0x12800a488 <col:23> 'struct task_struct *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12800a400 <col:23> 'struct task_struct *' lvalue ParmVar 0x12f828e28 'p' 'struct task_struct *'
|   | | `-ImplicitCastExpr 0x12800a4a0 <col:26> 'struct mm_struct *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12800a420 <col:26> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-GotoStmt 0x12800a508 <line:41:3, col:8> 'fail_nocontext' 0x12800a4b8
|   |-BinaryOperator 0x12800a718 <line:43:2, col:35> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12800a578 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12800a540 <col:2> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   | `-CallExpr 0x12800a6d8 <col:16, col:35> 'int'
|   |   |-ImplicitCastExpr 0x12800a6c0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12800a680 <col:16> 'int ()' Function 0x12800a5c8 'get_user_ns' 'int ()'
|   |   `-ImplicitCastExpr 0x12800a700 <col:28> 'struct user_namespace *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12800a6a0 <col:28> 'struct user_namespace *' lvalue ParmVar 0x12f828ff8 'user_ns' 'struct user_namespace *'
|   |-ReturnStmt 0x12800a770 <line:44:2, col:9>
|   | `-ImplicitCastExpr 0x12800a758 <col:9> 'struct mm_struct *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12800a738 <col:9> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   |-LabelStmt 0x12800a8f8 <line:46:1, line:47:16> 'fail_nocontext'
|   | `-CallExpr 0x12800a8b8 <col:2, col:16> 'int'
|   |   |-ImplicitCastExpr 0x12800a8a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12800a860 <col:2> 'int ()' Function 0x12800a7a8 'mm_free_pgd' 'int ()'
|   |   `-ImplicitCastExpr 0x12800a8e0 <col:14> 'struct mm_struct *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12800a880 <col:14> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
|   `-LabelStmt 0x12800aa90 <line:48:1, line:49:12> 'fail_nopgd'
|     `-CallExpr 0x12800aa50 <col:2, col:12> 'int'
|       |-ImplicitCastExpr 0x12800aa38 <col:2> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12800a9f8 <col:2> 'int ()' Function 0x12800a940 'free_mm' 'int ()'
|       `-ImplicitCastExpr 0x12800aa78 <col:10> 'struct mm_struct *' <LValueToRValue>
|         `-DeclRefExpr 0x12800aa18 <col:10> 'struct mm_struct *' lvalue ParmVar 0x12f810618 'mm' 'struct mm_struct *'
`-FunctionDecl 0x128008fd8 <line:17:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x1280090d8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x128009140 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1280091a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x128009080 <<invalid sloc>> Implicit 900
