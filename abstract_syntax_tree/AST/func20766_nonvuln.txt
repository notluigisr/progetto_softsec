TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10500bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x10500dda8 <dataset_diviso_filec/func20766_nonvuln.c:1:1, line:67:1> line:1:1 referenced goto_tabpage 'int (int)'
  |-ParmVarDecl 0x10500dcd8 <col:14, col:18> col:18 used n 'int'
  `-CompoundStmt 0x105028f00 <line:2:1, line:67:1>
    |-DeclStmt 0x10500df80 <line:5:5, col:11>
    | `-VarDecl 0x10500df18 <col:5, col:10> col:10 used i 'int'
    |-IfStmt 0x10500e2a0 <line:7:5, line:12:5>
    | |-CallExpr 0x10500e118 <line:7:9, col:21> 'int'
    | | `-ImplicitCastExpr 0x10500e100 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | |   `-DeclRefExpr 0x10500e0b0 <col:9> 'int ()' Function 0x10500dff8 'text_locked' 'int ()'
    | `-CompoundStmt 0x10500e280 <line:8:5, line:12:5>
    |   |-CallExpr 0x10500e250 <line:10:2, col:18> 'int'
    |   | `-ImplicitCastExpr 0x10500e238 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x10500e218 <col:2> 'int ()' Function 0x10500e160 'text_locked_msg' 'int ()'
    |   `-ReturnStmt 0x10500e270 <line:11:2>
    |-IfStmt 0x105028600 <line:16:5, line:21:5>
    | |-BinaryOperator 0x10500e3e0 <line:16:9, col:35> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x10500e378 <col:9, col:24> '<dependent type>' contains-errors lvalue ->tp_next
    | | | `-RecoveryExpr 0x10500e358 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x10500e3c0 <col:35> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1050285e0 <line:17:5, line:21:5>
    |   |-IfStmt 0x1050285b0 <line:18:2, line:19:17>
    |   | |-BinaryOperator 0x105028458 <line:18:6, col:10> 'int' '>'
    |   | | |-ImplicitCastExpr 0x105028440 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x105028400 <col:6> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
    |   | | `-IntegerLiteral 0x105028420 <col:10> 'int' 1
    |   | `-CallExpr 0x105028590 <line:19:6, col:17> 'int'
    |   |   `-ImplicitCastExpr 0x105028578 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x105028558 <col:6> 'int ()' Function 0x1050284a0 'beep_flush' 'int ()'
    |   `-ReturnStmt 0x1050285d0 <line:20:2>
    `-IfStmt 0x105028dd0 <line:23:5, line:59:5> has_else
      |-BinaryOperator 0x105028678 <line:23:9, col:14> 'int' '=='
      | |-ImplicitCastExpr 0x105028660 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x105028620 <col:9> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
      | `-IntegerLiteral 0x105028640 <col:14> 'int' 0
      |-CompoundStmt 0x105028870 <line:24:5, line:30:5>
      `-IfStmt 0x105028da0 <line:31:10, line:59:5> has_else
        |-BinaryOperator 0x1050288d8 <line:31:14, col:18> 'int' '<'
        | |-ImplicitCastExpr 0x1050288c0 <col:14> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x105028880 <col:14> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
        | `-IntegerLiteral 0x1050288a0 <col:18> 'int' 0
        |-CompoundStmt 0x105028a70 <line:32:5, line:43:5>
        | `-ForStmt 0x105028a38 <line:36:2, line:42:2>
        |   |-BinaryOperator 0x105028950 <line:36:7, col:11> 'int' '='
        |   | |-DeclRefExpr 0x1050288f8 <col:7> 'int' lvalue Var 0x10500df18 'i' 'int'
        |   | `-ImplicitCastExpr 0x105028938 <col:11> 'int' <LValueToRValue>
        |   |   `-DeclRefExpr 0x105028918 <col:11> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
        |   |-<<<NULL>>>
        |   |-BinaryOperator 0x1050289c8 <col:14, col:18> 'int' '<'
        |   | |-ImplicitCastExpr 0x1050289b0 <col:14> 'int' <LValueToRValue>
        |   | | `-DeclRefExpr 0x105028970 <col:14> 'int' lvalue Var 0x10500df18 'i' 'int'
        |   | `-IntegerLiteral 0x105028990 <col:18> 'int' 0
        |   |-UnaryOperator 0x105028a08 <col:21, col:23> 'int' prefix '++'
        |   | `-DeclRefExpr 0x1050289e8 <col:23> 'int' lvalue Var 0x10500df18 'i' 'int'
        |   `-CompoundStmt 0x105028a28 <line:37:2, line:42:2>
        `-IfStmt 0x105028d70 <line:44:10, line:59:5> has_else
          |-BinaryOperator 0x105028ae0 <line:44:14, col:19> 'int' '=='
          | |-ImplicitCastExpr 0x105028ac8 <col:14> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x105028a88 <col:14> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
          | `-IntegerLiteral 0x105028aa8 <col:19> 'int' 9999
          |-CompoundStmt 0x105028b08 <line:45:5, line:49:5>
          `-CompoundStmt 0x105028d58 <line:51:5, line:59:5>
            `-IfStmt 0x105028d38 <line:54:2, line:58:2>
              |-RecoveryExpr 0x105028c90 <line:54:6, col:12> '_Bool' contains-errors
              `-CompoundStmt 0x105028d18 <line:55:2, line:58:2>
                |-CallExpr 0x105028ce8 <line:56:6, col:17> 'int'
                | `-ImplicitCastExpr 0x105028cd0 <col:6> 'int (*)()' <FunctionToPointerDecay>
                |   `-DeclRefExpr 0x105028cb0 <col:6> 'int ()' Function 0x1050284a0 'beep_flush' 'int ()'
                `-ReturnStmt 0x105028d08 <line:57:6>
