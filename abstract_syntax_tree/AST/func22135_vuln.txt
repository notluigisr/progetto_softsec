TranslationUnitDecl 0x15004e608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15004f4b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15004ebd0 '__int128'
|-TypedefDecl 0x15004f528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15004ebf0 'unsigned __int128'
|-TypedefDecl 0x15011fc30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15011fa00 'struct __NSConstantString_tag'
|   `-Record 0x15004f580 '__NSConstantString_tag'
|-TypedefDecl 0x15011fc98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15004ed90 '__SVInt8_t'
|-TypedefDecl 0x15011fd00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15004edb0 '__SVInt16_t'
|-TypedefDecl 0x15011fd68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15004edd0 '__SVInt32_t'
|-TypedefDecl 0x15011fdd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15004edf0 '__SVInt64_t'
|-TypedefDecl 0x15011fe38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15004ee10 '__SVUint8_t'
|-TypedefDecl 0x15011fea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15004ee30 '__SVUint16_t'
|-TypedefDecl 0x15011ff08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15004ee50 '__SVUint32_t'
|-TypedefDecl 0x15011ff70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15004ee70 '__SVUint64_t'
|-TypedefDecl 0x15011ffd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15004ee90 '__SVFloat16_t'
|-TypedefDecl 0x150120040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15004eeb0 '__SVFloat32_t'
|-TypedefDecl 0x1501200a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15004eed0 '__SVFloat64_t'
|-TypedefDecl 0x150120110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15004eef0 '__SVBfloat16_t'
|-TypedefDecl 0x150120178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15004ef10 '__clang_svint8x2_t'
|-TypedefDecl 0x1501201e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15004ef30 '__clang_svint16x2_t'
|-TypedefDecl 0x150120248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15004ef50 '__clang_svint32x2_t'
|-TypedefDecl 0x1501202b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15004ef70 '__clang_svint64x2_t'
|-TypedefDecl 0x150120318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15004ef90 '__clang_svuint8x2_t'
|-TypedefDecl 0x150120380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15004efb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1501203e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15004efd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x150120450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15004eff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1501204b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15004f010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150120520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15004f030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150120588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15004f050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1501205f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15004f070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150120658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15004f090 '__clang_svint8x3_t'
|-TypedefDecl 0x1501206c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15004f0b0 '__clang_svint16x3_t'
|-TypedefDecl 0x150120728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15004f0d0 '__clang_svint32x3_t'
|-TypedefDecl 0x150120790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15004f0f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1501207f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15004f110 '__clang_svuint8x3_t'
|-TypedefDecl 0x150120860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15004f130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1501208c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15004f150 '__clang_svuint32x3_t'
|-TypedefDecl 0x150120930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15004f170 '__clang_svuint64x3_t'
|-TypedefDecl 0x150120998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15004f190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150121200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15004f1b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150121268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15004f1d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1501212d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15004f1f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150121338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15004f210 '__clang_svint8x4_t'
|-TypedefDecl 0x1501213a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15004f230 '__clang_svint16x4_t'
|-TypedefDecl 0x150121408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15004f250 '__clang_svint32x4_t'
|-TypedefDecl 0x150121470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15004f270 '__clang_svint64x4_t'
|-TypedefDecl 0x1501214d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15004f290 '__clang_svuint8x4_t'
|-TypedefDecl 0x150121540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15004f2b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1501215a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15004f2d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x150121610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15004f2f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x150121678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15004f310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1501216e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15004f330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150121748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15004f350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1501217b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15004f370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150121818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15004f390 '__SVBool_t'
|-TypedefDecl 0x150121880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15004f3b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1501218e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15004f3d0 '__clang_svboolx4_t'
|-TypedefDecl 0x150121950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15004f3f0 '__SVCount_t'
|-TypedefDecl 0x1501219f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1501219b0 'char *'
|   `-BuiltinType 0x15004e6b0 'char'
|-TypedefDecl 0x150121a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1501219b0 'char *'
|   `-BuiltinType 0x15004e6b0 'char'
|-FunctionDecl 0x150121bc8 <dataset_diviso_filec/func22135_vuln.c:1:1, line:85:1> line:1:5 invalid ssh_scp_pull_request 'int (int)'
| |-ParmVarDecl 0x150121af0 <col:26, col:34> col:34 referenced invalid scp 'int'
| `-CompoundStmt 0x150813528 <col:38, line:85:1>
|   |-DeclStmt 0x150121d70 <line:2:3, col:34>
|   | `-VarDecl 0x150121ca0 <col:3, col:8> col:8 invalid buffer 'char'
|   |-DeclStmt 0x150121e40 <line:3:3, col:18>
|   | `-VarDecl 0x150121da0 <col:3, col:14> col:9 used mode 'char *' cinit
|   |   `-RecoveryExpr 0x150121e20 <col:14> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x150121f70 <line:4:3, col:15>
|   | |-VarDecl 0x150121e70 <col:3, col:9> col:9 used p 'char *'
|   | `-VarDecl 0x150121ef0 <col:3, col:12> col:12 used tmp 'char *'
|   |-DeclStmt 0x150122040 <line:6:3, col:18>
|   | `-VarDecl 0x150121fa0 <col:3, col:14> col:9 used name 'char *' cinit
|   |   `-RecoveryExpr 0x150122020 <col:14> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1501220d8 <line:7:3, col:10>
|   | `-VarDecl 0x150122070 <col:3, col:7> col:7 used err 'int'
|   |-IfStmt 0x1501221d0 <line:8:3, line:9:14>
|   | |-BinaryOperator 0x150122168 <line:8:6, col:11> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x1501220f0 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x150122148 <col:11> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1501221c0 <line:9:7, col:14>
|   |   `-RecoveryExpr 0x1501221a0 <col:14> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15013b638 <line:10:3, line:13:3>
|   | |-BinaryOperator 0x15013b2c0 <line:10:6, col:20> 'int' contains-errors '!='
|   | | |-CXXDependentScopeMemberExpr 0x15013b220 <col:6, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | | `-RecoveryExpr 0x15013b200 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x15013b2a0 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15013b618 <col:40, line:13:3>
|   |   |-CallExpr 0x15013b598 <line:11:5, col:47> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15013b440 <col:5> 'int ()' Function 0x15013b388 'ssh_set_error' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x15013b480 <col:19, col:24> '<dependent type>' contains-errors lvalue ->session
|   |   | | `-RecoveryExpr 0x15013b460 <col:19> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x15013b578 <col:32> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x15013b520 <col:42> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x15013b608 <line:12:5, col:12>
|   |     `-RecoveryExpr 0x15013b5e8 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15013b850 <line:14:3, col:52> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15013b658 <col:3> 'int' lvalue Var 0x150122070 'err' 'int'
|   | `-CallExpr 0x15013b818 <col:7, col:52> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15013b758 <col:7> 'int ()' Function 0x15013b6a0 'ssh_scp_read_string' 'int ()'
|   |   |-RecoveryExpr 0x15013b778 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x15013b798 <col:31> '<dependent type>' contains-errors lvalue
|   |   `-UnaryExprOrTypeTraitExpr 0x15013b7f8 <col:38, col:51> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x15013b7d8 <col:44, col:51> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x15013b7b8 <col:45> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15013bc90 <line:15:3, line:21:3>
|   | |-BinaryOperator 0x15013b8e8 <line:15:6, col:11> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x15013b870 <col:6> 'int' lvalue Var 0x150122070 'err' 'int'
|   | | `-RecoveryExpr 0x15013b8c8 <col:11> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15013bc70 <col:21, line:21:3>
|   |   |-IfStmt 0x15013bc08 <line:16:2, line:19:2>
|   |   | |-CallExpr 0x15013ba70 <line:16:5, col:36> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x15013b9e8 <col:5> 'int ()' Function 0x15013b930 'ssh_channel_is_eof' 'int ()'
|   |   | | `-CXXDependentScopeMemberExpr 0x15013ba28 <col:24, col:29> '<dependent type>' contains-errors lvalue ->channel
|   |   | |   `-RecoveryExpr 0x15013ba08 <col:24> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x15013bbe8 <col:38, line:19:2>
|   |   |   |-BinaryOperator 0x15013bb80 <line:17:3, col:14> '<dependent type>' contains-errors '='
|   |   |   | |-CXXDependentScopeMemberExpr 0x15013bae0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->state
|   |   |   | | `-RecoveryExpr 0x15013bab8 <col:3> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x15013ba98 <col:3> 'int' lvalue ParmVar 0x150121af0 'scp' 'int'
|   |   |   | `-RecoveryExpr 0x15013bb60 <col:14> '<dependent type>' contains-errors lvalue
|   |   |   `-ReturnStmt 0x15013bbd8 <line:18:3, col:10>
|   |   |     `-RecoveryExpr 0x15013bbb8 <col:10> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x15013bc60 <line:20:5, col:12>
|   |     `-ImplicitCastExpr 0x15013bc48 <col:12> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x15013bc28 <col:12> 'int' lvalue Var 0x150122070 'err' 'int'
|   |-BinaryOperator 0x1508105b0 <line:22:3, col:23> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x15013bcb0 <col:3> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   | `-CallExpr 0x150810580 <col:5, col:23> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x150810510 <col:5> 'char *(const char *, int)' Function 0x15013c130 'strchr' 'char *(const char *, int)'
|   |   |-RecoveryExpr 0x150810530 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-CharacterLiteral 0x150810550 <col:19> 'int' 10
|   |-IfStmt 0x150810708 <line:23:3, line:24:7>
|   | |-BinaryOperator 0x150810648 <line:23:6, col:9> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x1508105d0 <col:6> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   | | `-RecoveryExpr 0x150810628 <col:9> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x1508106e8 <line:24:4, col:7> 'char' '='
|   |   |-UnaryOperator 0x1508106a0 <col:4, col:5> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x150810688 <col:5> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x150810668 <col:5> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   `-ImplicitCastExpr 0x1508106d0 <col:7> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x1508106b8 <col:7> 'int' 0
|   |-CallExpr 0x1508108d8 <line:25:3, col:40> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x150810808 <col:3> 'int ()' Function 0x150810750 'SSH_LOG' 'int ()'
|   | |-RecoveryExpr 0x1508108b8 <col:11> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x150810840 <col:28> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x150810860 <col:34> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x1508109a0 <line:26:3, line:77:3>
|   | |-ImplicitCastExpr 0x150810988 <line:26:10, col:18> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-ArraySubscriptExpr 0x150810968 <col:10, col:18> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x150810950 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x150810910 <col:10> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x150810930 <col:17> 'int' 0
|   | `-CompoundStmt 0x1508131f8 <col:20, line:77:3>
|   |   |-CaseStmt 0x1508109e0 <line:27:5, line:31:26>
|   |   | |-CharacterLiteral 0x1508109c8 <line:27:10> 'int' 67
|   |   | `-CaseStmt 0x150810a20 <line:29:5, line:31:26>
|   |   |   |-CharacterLiteral 0x150810a08 <line:29:10> 'int' 68
|   |   |   `-BinaryOperator 0x150810b08 <line:31:7, col:26> 'char *' contains-errors '='
|   |   |     |-DeclRefExpr 0x150810a48 <col:7> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   |     `-CallExpr 0x150810ad8 <col:9, col:26> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x150810a68 <col:9> 'char *(const char *, int)' Function 0x15013c130 'strchr' 'char *(const char *, int)'
|   |   |       |-RecoveryExpr 0x150810a88 <col:16> '<dependent type>' contains-errors lvalue
|   |   |       `-CharacterLiteral 0x150810aa8 <col:23> 'int' 32
|   |   |-IfStmt 0x150810bd0 <line:32:7, line:33:14>
|   |   | |-RecoveryExpr 0x150810b48 <line:32:10, col:13> '_Bool' contains-errors
|   |   | `-GotoStmt 0x150810bb8 <line:33:9, col:14> 'error' 0x150810b68
|   |   |-BinaryOperator 0x150810c70 <line:34:7, col:10> 'char' '='
|   |   | |-UnaryOperator 0x150810c28 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x150810c10 <col:8> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x150810bf0 <col:8> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x150810c58 <col:10> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x150810c40 <col:10> 'int' 0
|   |   |-UnaryOperator 0x150810cb0 <line:35:7, col:8> 'char *' postfix '++'
|   |   | `-DeclRefExpr 0x150810c90 <col:7> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   |-BinaryOperator 0x150810f10 <line:37:7, col:56> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x150810d10 <col:7, col:12> '<dependent type>' contains-errors lvalue ->request_mode
|   |   | | `-RecoveryExpr 0x150810ce8 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x150810cc8 <col:7> 'int' lvalue ParmVar 0x150121af0 'scp' 'int'
|   |   | `-CallExpr 0x150810ee8 <col:25, col:56> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x150810e38 <col:25> 'int ()' Function 0x150810d80 'ssh_scp_integer_mode' 'int ()'
|   |   |   `-UnaryOperator 0x150810ed0 <col:46, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-ArraySubscriptExpr 0x150810eb0 <col:47, col:55> '<dependent type>' contains-errors lvalue
|   |   |       |-ImplicitCastExpr 0x150810e98 <col:47> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | `-RecoveryExpr 0x150810e58 <col:47> '<dependent type>' contains-errors lvalue
|   |   |       `-IntegerLiteral 0x150810e78 <col:54> 'int' 1
|   |   |-BinaryOperator 0x150810f88 <line:38:7, col:11> 'char *' '='
|   |   | |-DeclRefExpr 0x150810f30 <col:7> 'char *' lvalue Var 0x150121ef0 'tmp' 'char *'
|   |   | `-ImplicitCastExpr 0x150810f70 <col:11> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x150810f50 <col:11> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   |-BinaryOperator 0x1508110e8 <line:39:7, col:21> 'char *' '='
|   |   | |-DeclRefExpr 0x150810fa8 <col:7> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   | `-CallExpr 0x150811088 <col:9, col:21> 'char *'
|   |   |   |-ImplicitCastExpr 0x150811070 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x150810fc8 <col:9> 'char *(const char *, int)' Function 0x15013c130 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x1508110d0 <col:16> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x1508110b8 <col:16> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x150810fe8 <col:16> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   |   `-CharacterLiteral 0x150811008 <col:18> 'int' 32
|   |   |-IfStmt 0x150811160 <line:40:7, line:41:14>
|   |   | |-RecoveryExpr 0x150811128 <line:40:10, col:13> '_Bool' contains-errors
|   |   | `-GotoStmt 0x150811148 <line:41:9, col:14> 'error' 0x150810b68
|   |   |-BinaryOperator 0x150811208 <line:42:7, col:10> 'char' '='
|   |   | |-UnaryOperator 0x1508111b8 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1508111a0 <col:8> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x150811180 <col:8> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x1508111f0 <col:10> 'char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1508111d0 <col:10> 'int' 0
|   |   |-UnaryOperator 0x150811bd0 <line:44:7, col:8> 'char *' postfix '++'
|   |   | `-DeclRefExpr 0x150811bb0 <col:7> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   |-BinaryOperator 0x150811eb0 <line:45:7, col:20> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x150811be8 <col:7> 'char *' contains-errors lvalue Var 0x150121fa0 'name' 'char *'
|   |   | `-CallExpr 0x150811e58 <col:12, col:20> 'char *'
|   |   |   |-ImplicitCastExpr 0x150811e40 <col:12> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x150811db8 <col:12> 'char *(const char *)' Function 0x150811c48 'strdup' 'char *(const char *)'
|   |   |   `-ImplicitCastExpr 0x150811e98 <col:19> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x150811e80 <col:19> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x150811dd8 <col:19> 'char *' lvalue Var 0x150121e70 'p' 'char *'
|   |   |-CallExpr 0x150812038 <line:46:7, col:34> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x150811fb0 <col:7> 'int ()' Function 0x150811ef8 'SAFE_FREE' 'int ()'
|   |   | `-CXXDependentScopeMemberExpr 0x150811ff0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->request_name
|   |   |   `-RecoveryExpr 0x150811fd0 <col:17> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x150812110 <line:47:7, col:25> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x1508120a8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->request_name
|   |   | | `-RecoveryExpr 0x150812080 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x150812060 <col:7> 'int' lvalue ParmVar 0x150121af0 'scp' 'int'
|   |   | `-DeclRefExpr 0x1508120f0 <col:25> 'char *' contains-errors lvalue Var 0x150121fa0 'name' 'char *'
|   |   |-IfStmt 0x150812480 <line:48:7, line:54:7> has_else
|   |   | |-BinaryOperator 0x1508121c0 <line:48:10, col:21> 'int' contains-errors '=='
|   |   | | |-ArraySubscriptExpr 0x150812188 <col:10, col:18> '<dependent type>' contains-errors lvalue
|   |   | | | |-ImplicitCastExpr 0x150812170 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | | `-RecoveryExpr 0x150812130 <col:10> '<dependent type>' contains-errors lvalue
|   |   | | | `-IntegerLiteral 0x150812150 <col:17> 'int' 0
|   |   | | `-CharacterLiteral 0x1508121a8 <col:21> 'int' 67
|   |   | |-CompoundStmt 0x150812300 <col:25, line:51:7>
|   |   | `-CompoundStmt 0x150812468 <col:14, line:54:7>
|   |   |   `-BinaryOperator 0x1508123b8 <line:52:9, col:22> '<dependent type>' contains-errors '='
|   |   |     |-CXXDependentScopeMemberExpr 0x150812358 <col:9, col:14> '<dependent type>' contains-errors lvalue ->filelen
|   |   |     | `-RecoveryExpr 0x150812330 <col:9> '<dependent type>' contains-errors lvalue
|   |   |     |   `-DeclRefExpr 0x150812310 <col:9> 'int' lvalue ParmVar 0x150121af0 'scp' 'int'
|   |   |     `-CharacterLiteral 0x1508123a0 <col:22> 'int' 48
|   |   |-BinaryOperator 0x1508125f0 <line:56:7, col:24> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x150812588 <col:7, col:12> '<dependent type>' contains-errors lvalue ->processed
|   |   | | `-RecoveryExpr 0x150812560 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x150812540 <col:7> 'int' lvalue ParmVar 0x150121af0 'scp' 'int'
|   |   | `-IntegerLiteral 0x1508125d0 <col:24> 'int' 0
|   |   |-ReturnStmt 0x150812678 <line:57:7, col:19>
|   |   | `-CXXDependentScopeMemberExpr 0x150812630 <col:14, col:19> '<dependent type>' contains-errors lvalue ->request_type
|   |   |   `-RecoveryExpr 0x150812610 <col:14> '<dependent type>' contains-errors lvalue
|   |   |-BreakStmt 0x150812688 <line:58:7>
|   |   |-CaseStmt 0x1508126a8 <line:59:5, <invalid sloc>>
|   |   | |-CharacterLiteral 0x150812690 <col:10> 'int' 69
|   |   | `-NullStmt 0x150812760 <<invalid sloc>>
|   |   |-CallExpr 0x150812948 <line:61:6, col:41> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x150812848 <col:6> 'int ()' Function 0x150812790 'ssh_channel_write' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x150812888 <col:24, col:29> '<dependent type>' contains-errors lvalue ->channel
|   |   | | `-RecoveryExpr 0x150812868 <col:24> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x150812910 <col:37> 'char[1]' lvalue ""
|   |   | `-IntegerLiteral 0x150812928 <col:40> 'int' 1
|   |   |-ReturnStmt 0x1508129e8 <line:62:6, col:18>
|   |   | `-CXXDependentScopeMemberExpr 0x1508129a0 <col:13, col:18> '<dependent type>' contains-errors lvalue ->request_type
|   |   |   `-RecoveryExpr 0x150812980 <col:13> '<dependent type>' contains-errors lvalue
|   |   |-CaseStmt 0x150812a20 <line:63:5, <invalid sloc>>
|   |   | |-IntegerLiteral 0x150812a00 <col:10> 'int' 1
|   |   | `-NullStmt 0x150812b80 <<invalid sloc>>
|   |   |-CallExpr 0x150812ca0 <line:66:6, col:28> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x150812c18 <col:6> 'int ()' Function 0x150811ef8 'SAFE_FREE' 'int ()'
|   |   | `-CXXDependentScopeMemberExpr 0x150812c58 <col:16, col:21> '<dependent type>' contains-errors lvalue ->warning
|   |   |   `-RecoveryExpr 0x150812c38 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x150812e30 <line:67:6, col:36> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x150812d10 <col:6, col:11> '<dependent type>' contains-errors lvalue ->warning
|   |   | | `-RecoveryExpr 0x150812ce8 <col:6> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x150812cc8 <col:6> 'int' lvalue ParmVar 0x150121af0 'scp' 'int'
|   |   | `-CallExpr 0x150812e08 <col:19, col:36> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x150812d58 <col:19> 'char *(const char *)' Function 0x150811c48 'strdup' 'char *(const char *)'
|   |   |   `-UnaryOperator 0x150812df0 <col:26, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-ArraySubscriptExpr 0x150812dd0 <col:27, col:35> '<dependent type>' contains-errors lvalue
|   |   |       |-ImplicitCastExpr 0x150812db8 <col:27> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | `-RecoveryExpr 0x150812d78 <col:27> '<dependent type>' contains-errors lvalue
|   |   |       `-IntegerLiteral 0x150812d98 <col:34> 'int' 1
|   |   |-ReturnStmt 0x150812eb8 <line:68:6, col:18>
|   |   | `-CXXDependentScopeMemberExpr 0x150812e70 <col:13, col:18> '<dependent type>' contains-errors lvalue ->request_type
|   |   |   `-RecoveryExpr 0x150812e50 <col:13> '<dependent type>' contains-errors lvalue
|   |   |-CaseStmt 0x150812ee8 <line:69:5, <invalid sloc>>
|   |   | |-IntegerLiteral 0x150812ec8 <col:10> 'int' 2
|   |   | `-NullStmt 0x150813048 <<invalid sloc>>
|   |   `-CaseStmt 0x150813068 <line:72:5, line:74:12>
|   |     |-CharacterLiteral 0x150813050 <line:72:10> 'int' 84
|   |     `-DefaultStmt 0x1508131d8 <line:74:5, col:12>
|   |       `-NullStmt 0x1508131d0 <col:12>
|   |-LabelStmt 0x1508133a8 <line:80:3, line:81:17> 'error'
|   | `-CallExpr 0x150813368 <col:3, col:17> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x150813350 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1508132d8 <col:3> 'int ()' Function 0x150811ef8 'SAFE_FREE' 'int ()'
|   |   `-ImplicitCastExpr 0x150813390 <col:13> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x1508132f8 <col:13> 'char *' contains-errors lvalue Var 0x150121fa0 'name' 'char *'
|   `-CallExpr 0x150813420 <line:82:3, col:17> 'int' contains-errors
|     |-ImplicitCastExpr 0x150813408 <col:3> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1508133c8 <col:3> 'int ()' Function 0x150811ef8 'SAFE_FREE' 'int ()'
|     `-ImplicitCastExpr 0x150813448 <col:13> 'char *' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x1508133e8 <col:13> 'char *' contains-errors lvalue Var 0x150121da0 'mode' 'char *'
|-FunctionDecl 0x15013c130 <line:22:5> col:5 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x150810430 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x150810498 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x15013c1d8 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x1508112a8 <line:43:14> col:14 implicit used strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x150811a00 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x150811a68 <<invalid sloc>> <invalid sloc> 'char **'
| |-ParmVarDecl 0x150811ad0 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x150811350 <<invalid sloc>> Implicit 880
`-FunctionDecl 0x150811c48 <line:45:12> col:12 implicit used strdup 'char *(const char *)' extern
  |-ParmVarDecl 0x150811d48 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x150811cf0 <<invalid sloc>> Implicit 950
