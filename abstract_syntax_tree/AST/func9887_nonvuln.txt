TranslationUnitDecl 0x153055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1530564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x153055bd0 '__int128'
|-TypedefDecl 0x153056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x153055bf0 'unsigned __int128'
|-TypedefDecl 0x15380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15380bc00 'struct __NSConstantString_tag'
|   `-Record 0x153056580 '__NSConstantString_tag'
|-TypedefDecl 0x15380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x153055d90 '__SVInt8_t'
|-TypedefDecl 0x15380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x153055db0 '__SVInt16_t'
|-TypedefDecl 0x15380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x153055dd0 '__SVInt32_t'
|-TypedefDecl 0x15380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x153055df0 '__SVInt64_t'
|-TypedefDecl 0x15380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x153055e10 '__SVUint8_t'
|-TypedefDecl 0x15380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x153055e30 '__SVUint16_t'
|-TypedefDecl 0x15380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x153055e50 '__SVUint32_t'
|-TypedefDecl 0x15380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x153055e70 '__SVUint64_t'
|-TypedefDecl 0x15380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x153055e90 '__SVFloat16_t'
|-TypedefDecl 0x15380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x153055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x153055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x153055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x153055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x153055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x153055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x153055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x153055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x153055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x153055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x153055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x153056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x153056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x153056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x153056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x153056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1530560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1530560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1530560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x153056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x153056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x153056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x153056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x153056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1530561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1530561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1530561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x153056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x153056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x153056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x153056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x153056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1530562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1530562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1530562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x153056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x153056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x153056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x153056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x153056390 '__SVBool_t'
|-TypedefDecl 0x15380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1530563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1530563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1530563f0 '__SVCount_t'
|-TypedefDecl 0x15380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-TypedefDecl 0x15380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
`-FunctionDecl 0x153826748 <dataset_diviso_filec/func9887_nonvuln.c:1:1, line:40:1> line:1:1 resolve_applies_when 'int (const struct lys_node *, int, const struct lys_node *)'
  |-ParmVarDecl 0x15380e248 <col:22, col:45> col:45 used schema 'const struct lys_node *'
  |-ParmVarDecl 0x15380e2c8 <col:53, col:57> col:57 used mode 'int'
  |-ParmVarDecl 0x153826600 <col:63, col:86> col:86 used stop 'const struct lys_node *'
  `-CompoundStmt 0x153829b60 <line:2:1, line:40:1>
    |-DeclStmt 0x1538268e0 <line:3:5, col:34>
    | `-VarDecl 0x153826878 <col:5, col:28> col:28 used parent 'const struct lys_node *'
    |-CallExpr 0x153826aa8 <line:5:5, col:18> 'int'
    | |-ImplicitCastExpr 0x153826a90 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x153826a20 <col:5> 'int ()' Function 0x153826968 'assert' 'int ()'
    | `-ImplicitCastExpr 0x153826ad0 <col:12> 'const struct lys_node *' <LValueToRValue>
    |   `-DeclRefExpr 0x153826a40 <col:12> 'const struct lys_node *' lvalue ParmVar 0x15380e248 'schema' 'const struct lys_node *'
    |-IfStmt 0x153826d78 <line:7:5, line:9:5>
    | |-RecoveryExpr 0x153826d10 <line:7:9, col:77> '_Bool' contains-errors
    | `-CompoundStmt 0x153826d60 <col:80, line:9:5>
    |   `-ReturnStmt 0x153826d50 <line:8:9, col:16>
    |     `-IntegerLiteral 0x153826d30 <col:16> 'int' 1
    |-BinaryOperator 0x153826df0 <line:11:5, col:14> 'const struct lys_node *' '='
    | |-DeclRefExpr 0x153826d98 <col:5> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    | `-ImplicitCastExpr 0x153826dd8 <col:14> 'const struct lys_node *' <LValueToRValue>
    |   `-DeclRefExpr 0x153826db8 <col:14> 'const struct lys_node *' lvalue ParmVar 0x15380e248 'schema' 'const struct lys_node *'
    |-GotoStmt 0x153826e60 <line:12:5, col:10> 'check_augment' 0x153826e10
    |-WhileStmt 0x153829b10 <line:14:5, line:37:5>
    | |-ImplicitCastExpr 0x153826e98 <line:14:12> 'const struct lys_node *' <LValueToRValue>
    | | `-DeclRefExpr 0x153826e78 <col:12> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    | `-CompoundStmt 0x153829ae0 <col:20, line:37:5>
    |   |-IfStmt 0x153827148 <line:16:9, line:26:9> has_else
    |   | |-UnaryOperator 0x153826ee8 <line:16:13, col:14> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x153826ed0 <col:14> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x153826eb0 <col:14> 'int' lvalue ParmVar 0x15380e2c8 'mode' 'int'
    |   | |-CompoundStmt 0x153827048 <col:20, line:21:9>
    |   | | `-IfStmt 0x153827028 <line:18:13, line:20:13>
    |   | |   |-RecoveryExpr 0x153826fe8 <line:18:17, col:72> '_Bool' contains-errors
    |   | |   `-CompoundStmt 0x153827010 <col:75, line:20:13>
    |   | |     `-BreakStmt 0x153827008 <line:19:17>
    |   | `-CompoundStmt 0x153827130 <line:21:16, line:26:9>
    |   |   `-IfStmt 0x153827110 <line:23:13, line:25:13>
    |   |     |-BinaryOperator 0x1538270d0 <line:23:17, col:27> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x1538270a0 <col:17> 'const struct lys_node *' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x153827060 <col:17> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    |   |     | `-ImplicitCastExpr 0x1538270b8 <col:27> 'const struct lys_node *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x153827080 <col:27> 'const struct lys_node *' lvalue ParmVar 0x153826600 'stop' 'const struct lys_node *'
    |   |     `-CompoundStmt 0x1538270f8 <col:33, line:25:13>
    |   |       `-BreakStmt 0x1538270f0 <line:24:17>
    |   |-IfStmt 0x153827258 <line:28:9, line:30:9>
    |   | |-CallExpr 0x1538271d0 <line:28:13, col:34> 'int'
    |   | | |-ImplicitCastExpr 0x1538271b8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x153827178 <col:13> 'int ()' Function 0x153826bc0 'snode_get_when' 'int ()'
    |   | | `-ImplicitCastExpr 0x1538271f8 <col:28> 'const struct lys_node *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x153827198 <col:28> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    |   | `-CompoundStmt 0x153827240 <col:37, line:30:9>
    |   |   `-ReturnStmt 0x153827230 <line:29:13, col:20>
    |   |     `-IntegerLiteral 0x153827210 <col:20> 'int' 1
    |   |-LabelStmt 0x1538274e8 <line:31:1, line:35:9> 'check_augment'
    |   | `-IfStmt 0x1538274c8 <line:33:9, line:35:9>
    |   |   |-RecoveryExpr 0x153827460 <line:33:13, col:105> '_Bool' contains-errors
    |   |   `-CompoundStmt 0x1538274b0 <col:108, line:35:9>
    |   |     `-ReturnStmt 0x1538274a0 <line:34:13, col:20>
    |   |       `-IntegerLiteral 0x153827480 <col:20> 'int' 1
    |   `-BinaryOperator 0x153829ac0 <line:36:9, col:35> 'const struct lys_node *' '='
    |     |-DeclRefExpr 0x153827508 <col:9> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    |     `-ImplicitCastExpr 0x153829aa8 <col:18, col:35> 'const struct lys_node *' <IntegralToPointer>
    |       `-CallExpr 0x153829a68 <col:18, col:35> 'int'
    |         |-ImplicitCastExpr 0x153829a50 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x153829a10 <col:18> 'int ()' Function 0x153827550 'lys_parent' 'int ()'
    |         `-ImplicitCastExpr 0x153829a90 <col:29> 'const struct lys_node *' <LValueToRValue>
    |           `-DeclRefExpr 0x153829a30 <col:29> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    `-ReturnStmt 0x153829b50 <line:39:5, col:12>
      `-IntegerLiteral 0x153829b30 <col:12> 'int' 0
