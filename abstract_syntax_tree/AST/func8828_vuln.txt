TranslationUnitDecl 0x148055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1480564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148055bd0 '__int128'
|-TypedefDecl 0x148056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148055bf0 'unsigned __int128'
|-TypedefDecl 0x14000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14000bc00 'struct __NSConstantString_tag'
|   `-Record 0x148056580 '__NSConstantString_tag'
|-TypedefDecl 0x14000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148055d90 '__SVInt8_t'
|-TypedefDecl 0x14000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148055db0 '__SVInt16_t'
|-TypedefDecl 0x14000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148055dd0 '__SVInt32_t'
|-TypedefDecl 0x14000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148055df0 '__SVInt64_t'
|-TypedefDecl 0x14000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148055e10 '__SVUint8_t'
|-TypedefDecl 0x14000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148055e30 '__SVUint16_t'
|-TypedefDecl 0x14000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148055e50 '__SVUint32_t'
|-TypedefDecl 0x14000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148055e70 '__SVUint64_t'
|-TypedefDecl 0x14000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148055e90 '__SVFloat16_t'
|-TypedefDecl 0x14000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1480560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1480560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1480560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1480561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1480561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1480561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1480562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1480562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1480562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148056390 '__SVBool_t'
|-TypedefDecl 0x14000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1480563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1480563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1480563f0 '__SVCount_t'
|-TypedefDecl 0x14000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14000dbb0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
|-TypedefDecl 0x14000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14000dbb0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
|-RecordDecl 0x14000dcc0 <dataset_diviso_filec/func8828_vuln.c:1:8, col:15> col:15 struct dentry
`-FunctionDecl 0x1400269b8 <col:1, line:32:1> line:1:23 __lookup_hash 'struct dentry *(struct qstr *, struct dentry *, struct nameidata *)' static
  |-ParmVarDecl 0x14000e2e8 <col:37, col:50> col:50 used name 'struct qstr *'
  |-ParmVarDecl 0x140026628 <line:2:3, col:18> col:18 used base 'struct dentry *'
  |-ParmVarDecl 0x1400267f8 <col:24, col:42> col:42 used nd 'struct nameidata *'
  `-CompoundStmt 0x148128c78 <line:3:1, line:32:1>
    |-DeclStmt 0x140026b50 <line:4:2, col:23>
    | `-VarDecl 0x140026ae8 <col:2, col:17> col:17 used dentry 'struct dentry *'
    |-DeclStmt 0x140026d58 <line:5:2, col:21>
    | |-RecordDecl 0x140026b68 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x140026cd8 <col:2, col:16> col:16 used inode 'struct inode *'
    |-DeclStmt 0x140026df0 <line:6:2, col:9>
    | `-VarDecl 0x140026d88 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x140026e88 <line:8:2, col:16> 'struct inode *' contains-errors '='
    | |-DeclRefExpr 0x140026e08 <col:2> 'struct inode *' lvalue Var 0x140026cd8 'inode' 'struct inode *'
    | `-RecoveryExpr 0x140026e60 <col:10, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x140026e28 <col:10> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |-IfStmt 0x140027498 <line:11:2, line:16:2>
    | |-BinaryOperator 0x140026fb0 <line:11:6, col:32> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x140026ee0 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x140026ea8 <col:6> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    | | `-CXXDependentScopeMemberExpr 0x140026f68 <col:20, col:32> '<dependent type>' contains-errors lvalue ->d_hash
    | |   `-RecoveryExpr 0x140026f40 <col:20, col:26> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x140026f08 <col:20> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    | `-CompoundStmt 0x140027470 <col:40, line:16:2>
    |   |-BinaryOperator 0x140027108 <line:12:3, col:38> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x140026fd0 <col:3> 'int' lvalue Var 0x140026d88 'err' 'int'
    |   | `-CallExpr 0x1400270d8 <col:9, col:38> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x140027050 <col:9, col:21> '<dependent type>' contains-errors lvalue ->d_hash
    |   |   | `-RecoveryExpr 0x140027028 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x140026ff0 <col:9> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |   |   |-DeclRefExpr 0x140027098 <col:28> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |   |   `-DeclRefExpr 0x1400270b8 <col:34> 'struct qstr *' lvalue ParmVar 0x14000e2e8 'name' 'struct qstr *'
    |   |-BinaryOperator 0x140027350 <line:13:3, col:23> 'struct dentry *' '='
    |   | |-DeclRefExpr 0x140027128 <col:3> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |   | `-ImplicitCastExpr 0x140027338 <col:12, col:23> 'struct dentry *' <IntegralToPointer>
    |   |   `-CallExpr 0x1400272f8 <col:12, col:23> 'int'
    |   |     |-ImplicitCastExpr 0x1400272e0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x140027270 <col:12> 'int ()' Function 0x1400271b8 'ERR_PTR' 'int ()'
    |   |     `-ImplicitCastExpr 0x140027320 <col:20> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x140027290 <col:20> 'int' lvalue Var 0x140026d88 'err' 'int'
    |   `-IfStmt 0x140027450 <line:14:3, line:15:9>
    |     |-BinaryOperator 0x1400273c8 <line:14:7, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x1400273b0 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x140027370 <col:7> 'int' lvalue Var 0x140026d88 'err' 'int'
    |     | `-IntegerLiteral 0x140027390 <col:13> 'int' 0
    |     `-GotoStmt 0x140027438 <line:15:4, col:9> 'out' 0x1400273e8
    |-BinaryOperator 0x1481282f0 <line:18:2, col:39> 'struct dentry *' '='
    | |-DeclRefExpr 0x1400274b8 <col:2> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    | `-ImplicitCastExpr 0x1481282d8 <col:11, col:39> 'struct dentry *' <IntegralToPointer>
    |   `-CallExpr 0x148128258 <col:11, col:39> 'int'
    |     |-ImplicitCastExpr 0x148128240 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1400275b8 <col:11> 'int ()' Function 0x140027500 'cached_lookup' 'int ()'
    |     |-ImplicitCastExpr 0x148128290 <col:25> 'struct dentry *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1400275d8 <col:25> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |     |-ImplicitCastExpr 0x1481282a8 <col:31> 'struct qstr *' <LValueToRValue>
    |     | `-DeclRefExpr 0x148128200 <col:31> 'struct qstr *' lvalue ParmVar 0x14000e2e8 'name' 'struct qstr *'
    |     `-ImplicitCastExpr 0x1481282c0 <col:37> 'struct nameidata *' <LValueToRValue>
    |       `-DeclRefExpr 0x148128220 <col:37> 'struct nameidata *' lvalue ParmVar 0x1400267f8 'nd' 'struct nameidata *'
    |-IfStmt 0x148128bf0 <line:19:2, line:29:2>
    | |-UnaryOperator 0x148128348 <line:19:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x148128330 <col:7> 'struct dentry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x148128310 <col:7> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    | `-CompoundStmt 0x148128bb8 <col:15, line:29:2>
    |   |-DeclStmt 0x1481285c0 <line:20:3, col:43>
    |   | `-VarDecl 0x148128388 <col:3, col:42> col:18 used new 'struct dentry *' cinit
    |   |   `-ImplicitCastExpr 0x1481285a8 <col:24, col:42> 'struct dentry *' <IntegralToPointer>
    |   |     `-CallExpr 0x148128548 <col:24, col:42> 'int'
    |   |       |-ImplicitCastExpr 0x148128530 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x1481284d0 <col:24> 'int ()' Function 0x148128418 'd_alloc' 'int ()'
    |   |       |-ImplicitCastExpr 0x148128578 <col:32> 'struct dentry *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x1481284f0 <col:32> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |   |       `-ImplicitCastExpr 0x148128590 <col:38> 'struct qstr *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x148128510 <col:38> 'struct qstr *' lvalue ParmVar 0x14000e2e8 'name' 'struct qstr *'
    |   |-BinaryOperator 0x148128720 <line:21:3, col:27> 'struct dentry *' contains-errors '='
    |   | |-DeclRefExpr 0x1481285d8 <col:3> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |   | `-CallExpr 0x1481286f8 <col:12, col:27> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1481285f8 <col:12> 'int ()' Function 0x1400271b8 'ERR_PTR' 'int ()'
    |   |   `-UnaryOperator 0x1481286e0 <col:20, col:21> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x1481286c8 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x1481286a8 <col:21> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1481287a8 <line:22:3, line:23:9>
    |   | |-UnaryOperator 0x148128778 <line:22:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x148128760 <col:8> 'struct dentry *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x148128740 <col:8> 'struct dentry *' lvalue Var 0x148128388 'new' 'struct dentry *'
    |   | `-GotoStmt 0x148128790 <line:23:4, col:9> 'out' 0x1400273e8
    |   |-BinaryOperator 0x148128928 <line:24:3, col:46> 'struct dentry *' contains-errors '='
    |   | |-DeclRefExpr 0x1481287c8 <col:3> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |   | `-CallExpr 0x1481288f0 <col:12, col:46> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x148128848 <col:12, col:25> '<dependent type>' contains-errors lvalue ->lookup
    |   |   | `-RecoveryExpr 0x148128820 <col:12, col:19> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x1481287e8 <col:12> 'struct inode *' lvalue Var 0x140026cd8 'inode' 'struct inode *'
    |   |   |-DeclRefExpr 0x148128890 <col:32> 'struct inode *' lvalue Var 0x140026cd8 'inode' 'struct inode *'
    |   |   |-DeclRefExpr 0x1481288b0 <col:39> 'struct dentry *' lvalue Var 0x148128388 'new' 'struct dentry *'
    |   |   `-DeclRefExpr 0x1481288d0 <col:44> 'struct nameidata *' lvalue ParmVar 0x1400267f8 'nd' 'struct nameidata *'
    |   `-IfStmt 0x148128b88 <line:25:3, line:28:12> has_else
    |     |-UnaryOperator 0x148128980 <line:25:7, col:8> 'int' prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x148128968 <col:8> 'struct dentry *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x148128948 <col:8> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |     |-BinaryOperator 0x1481289f0 <line:26:4, col:13> 'struct dentry *' '='
    |     | |-DeclRefExpr 0x148128998 <col:4> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |     | `-ImplicitCastExpr 0x1481289d8 <col:13> 'struct dentry *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1481289b8 <col:13> 'struct dentry *' lvalue Var 0x148128388 'new' 'struct dentry *'
    |     `-CallExpr 0x148128b48 <line:28:4, col:12> 'int'
    |       |-ImplicitCastExpr 0x148128b30 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x148128af0 <col:4> 'int ()' Function 0x148128a38 'dput' 'int ()'
    |       `-ImplicitCastExpr 0x148128b70 <col:9> 'struct dentry *' <LValueToRValue>
    |         `-DeclRefExpr 0x148128b10 <col:9> 'struct dentry *' lvalue Var 0x148128388 'new' 'struct dentry *'
    `-LabelStmt 0x148128c58 <line:30:1, line:31:9> 'out'
      `-ReturnStmt 0x148128c48 <col:2, col:9>
        `-ImplicitCastExpr 0x148128c30 <col:9> 'struct dentry *' <LValueToRValue>
          `-DeclRefExpr 0x148128c10 <col:9> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
