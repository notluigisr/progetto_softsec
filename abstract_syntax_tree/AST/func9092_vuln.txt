TranslationUnitDecl 0x13d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d855bd0 '__int128'
|-TypedefDecl 0x13d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d855bf0 'unsigned __int128'
|-TypedefDecl 0x13e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x13d856580 '__NSConstantString_tag'
|-TypedefDecl 0x13e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d855d90 '__SVInt8_t'
|-TypedefDecl 0x13e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d855db0 '__SVInt16_t'
|-TypedefDecl 0x13e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d855dd0 '__SVInt32_t'
|-TypedefDecl 0x13e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d855df0 '__SVInt64_t'
|-TypedefDecl 0x13e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d855e10 '__SVUint8_t'
|-TypedefDecl 0x13e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d855e30 '__SVUint16_t'
|-TypedefDecl 0x13e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d855e50 '__SVUint32_t'
|-TypedefDecl 0x13e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d855e70 '__SVUint64_t'
|-TypedefDecl 0x13e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d855e90 '__SVFloat16_t'
|-TypedefDecl 0x13e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d856390 '__SVBool_t'
|-TypedefDecl 0x13e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d8563f0 '__SVCount_t'
|-TypedefDecl 0x13e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e00dbb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-TypedefDecl 0x13e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e00dbb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-FunctionDecl 0x13e00df70 <dataset_diviso_filec/func9092_vuln.c:1:1, line:32:1> line:1:6 invalid imap_quote_string 'void (char *, int, const char *, int)'
| |-ParmVarDecl 0x13e00dcd8 <col:24, col:30> col:30 used dest 'char *'
| |-ParmVarDecl 0x13e00dd70 <col:36, col:43> col:43 referenced invalid dlen 'int'
| |-ParmVarDecl 0x13e00ddf0 <col:49, col:61> col:61 used src 'const char *'
| |-ParmVarDecl 0x13e00de70 <col:66, col:71> col:71 invalid quote_backtick 'int'
| `-CompoundStmt 0x13e028350 <line:2:1, line:32:1>
|   |-DeclStmt 0x13e00e150 <line:3:3, col:28>
|   | `-VarDecl 0x13e00e050 <col:3, col:23> col:15 used quote 'const char *' cinit
|   |   `-ImplicitCastExpr 0x13e00e138 <col:23> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x13e00e120 <col:23> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x13e00e100 <col:23> 'char[4]' lvalue "STR"
|   |-IfStmt 0x13e00e1f0 <line:4:3, line:5:10>
|   | |-UnaryOperator 0x13e00e1a0 <line:4:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13e00e188 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13e00e168 <col:8> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x13e00e1d8 <line:5:5, col:10> 'const char *' postfix '++'
|   |   `-DeclRefExpr 0x13e00e1b8 <col:5> 'const char *' lvalue Var 0x13e00e050 'quote' 'const char *'
|   |-DeclStmt 0x13e00e2c8 <line:7:3, col:18>
|   | `-VarDecl 0x13e00e228 <col:3, col:14> col:9 used pt 'char *' cinit
|   |   `-ImplicitCastExpr 0x13e00e2b0 <col:14> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13e00e290 <col:14> 'char *' lvalue ParmVar 0x13e00dcd8 'dest' 'char *'
|   |-DeclStmt 0x13e00e398 <line:8:3, col:22>
|   | `-VarDecl 0x13e00e2f8 <col:3, col:19> col:15 used s 'const char *' cinit
|   |   `-ImplicitCastExpr 0x13e00e380 <col:19> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13e00e360 <col:19> 'const char *' lvalue ParmVar 0x13e00ddf0 'src' 'const char *'
|   |-BinaryOperator 0x13e027430 <line:10:3, col:11> 'char' '='
|   | |-UnaryOperator 0x13e00e3e8 <col:3, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x13e00e3d0 <col:4, col:6> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x13e00e3b0 <col:4> 'char *' lvalue Var 0x13e00e228 'pt' 'char *'
|   | `-ImplicitCastExpr 0x13e027418 <col:11> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x13e027400 <col:11> 'int' 34
|   |-CompoundAssignOperator 0x13e0274b8 <line:12:3, col:11> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-RecoveryExpr 0x13e027470 <col:3> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13e027450 <col:3> 'int' lvalue ParmVar 0x13e00dd70 'dlen' 'int'
|   | `-IntegerLiteral 0x13e027498 <col:11> 'int' 2
|   |-ForStmt 0x13e0281d8 <line:14:3, line:29:3>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13e027558 <line:14:10, col:16> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x13e027520 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x13e027508 <col:11> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13e0274e8 <col:11> 'const char *' lvalue Var 0x13e00e2f8 's' 'const char *'
|   | | `-RecoveryExpr 0x13e027538 <col:16> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x13e027598 <col:22, col:23> 'const char *' postfix '++'
|   | | `-DeclRefExpr 0x13e027578 <col:22> 'const char *' lvalue Var 0x13e00e2f8 's' 'const char *'
|   | `-CompoundStmt 0x13e0281c0 <line:15:3, line:29:3>
|   |   `-IfStmt 0x13e028190 <line:16:5, line:28:5> has_else
|   |     |-CallExpr 0x13e027cf8 <line:16:9, col:25> 'char *'
|   |     | |-ImplicitCastExpr 0x13e027ce0 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x13e027bf0 <col:9> 'char *(const char *, int)' Function 0x13e027a10 'strchr' 'char *(const char *, int)'
|   |     | |-ImplicitCastExpr 0x13e027d28 <col:16> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13e027c10 <col:16> 'const char *' lvalue Var 0x13e00e050 'quote' 'const char *'
|   |     | `-ImplicitCastExpr 0x13e027d58 <col:23, col:24> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x13e027d40 <col:23, col:24> 'char' <LValueToRValue>
|   |     |     `-UnaryOperator 0x13e027c68 <col:23, col:24> 'const char' lvalue prefix '*' cannot overflow
|   |     |       `-ImplicitCastExpr 0x13e027c50 <col:24> 'const char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x13e027c30 <col:24> 'const char *' lvalue Var 0x13e00e2f8 's' 'const char *'
|   |     |-CompoundStmt 0x13e028008 <line:17:5, line:23:5>
|   |     | |-IfStmt 0x13e027dd8 <line:18:7, line:19:9>
|   |     | | |-BinaryOperator 0x13e027db0 <line:18:11, col:18> 'int' contains-errors '<'
|   |     | | | |-RecoveryExpr 0x13e027d70 <col:11> '<dependent type>' contains-errors lvalue
|   |     | | | `-IntegerLiteral 0x13e027d90 <col:18> 'int' 2
|   |     | | `-BreakStmt 0x13e027dd0 <line:19:9>
|   |     | |-CompoundAssignOperator 0x13e027e60 <line:20:7, col:15> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     | | |-RecoveryExpr 0x13e027e18 <col:7> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x13e027df8 <col:7> 'int' lvalue ParmVar 0x13e00dd70 'dlen' 'int'
|   |     | | `-IntegerLiteral 0x13e027e40 <col:15> 'int' 2
|   |     | |-BinaryOperator 0x13e027f10 <line:21:7, col:15> 'char' '='
|   |     | | |-UnaryOperator 0x13e027ec8 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x13e027eb0 <col:8, col:10> 'char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x13e027e90 <col:8> 'char *' lvalue Var 0x13e00e228 'pt' 'char *'
|   |     | | `-ImplicitCastExpr 0x13e027ef8 <col:15> 'char' <IntegralCast>
|   |     | |   `-CharacterLiteral 0x13e027ee0 <col:15> 'int' 92
|   |     | `-BinaryOperator 0x13e027fe8 <line:22:7, col:16> 'char' '='
|   |     |   |-UnaryOperator 0x13e027f68 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |     |   | `-UnaryOperator 0x13e027f50 <col:8, col:10> 'char *' postfix '++'
|   |     |   |   `-DeclRefExpr 0x13e027f30 <col:8> 'char *' lvalue Var 0x13e00e228 'pt' 'char *'
|   |     |   `-ImplicitCastExpr 0x13e027fd0 <col:15, col:16> 'char' <LValueToRValue>
|   |     |     `-UnaryOperator 0x13e027fb8 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |     |       `-ImplicitCastExpr 0x13e027fa0 <col:16> 'const char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x13e027f80 <col:16> 'const char *' lvalue Var 0x13e00e2f8 's' 'const char *'
|   |     `-CompoundStmt 0x13e028170 <line:25:5, line:28:5>
|   |       |-BinaryOperator 0x13e0280f0 <line:26:7, col:16> 'char' '='
|   |       | |-UnaryOperator 0x13e028070 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |       | | `-UnaryOperator 0x13e028058 <col:8, col:10> 'char *' postfix '++'
|   |       | |   `-DeclRefExpr 0x13e028038 <col:8> 'char *' lvalue Var 0x13e00e228 'pt' 'char *'
|   |       | `-ImplicitCastExpr 0x13e0280d8 <col:15, col:16> 'char' <LValueToRValue>
|   |       |   `-UnaryOperator 0x13e0280c0 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |       |     `-ImplicitCastExpr 0x13e0280a8 <col:16> 'const char *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x13e028088 <col:16> 'const char *' lvalue Var 0x13e00e2f8 's' 'const char *'
|   |       `-UnaryOperator 0x13e028158 <line:27:7, col:11> '<dependent type>' contains-errors postfix '--' cannot overflow
|   |         `-RecoveryExpr 0x13e028130 <col:7> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x13e028110 <col:7> 'int' lvalue ParmVar 0x13e00dd70 'dlen' 'int'
|   |-BinaryOperator 0x13e028290 <line:30:3, col:11> 'char' '='
|   | |-UnaryOperator 0x13e028248 <col:3, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x13e028230 <col:4, col:6> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x13e028210 <col:4> 'char *' lvalue Var 0x13e00e228 'pt' 'char *'
|   | `-ImplicitCastExpr 0x13e028278 <col:11> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x13e028260 <col:11> 'int' 34
|   `-BinaryOperator 0x13e028330 <line:31:3, col:9> 'char' '='
|     |-UnaryOperator 0x13e0282e8 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x13e0282d0 <col:4> 'char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x13e0282b0 <col:4> 'char *' lvalue Var 0x13e00e228 'pt' 'char *'
|     `-ImplicitCastExpr 0x13e028318 <col:9> 'char' <IntegralCast>
|       `-CharacterLiteral 0x13e028300 <col:9> 'int' 0
`-FunctionDecl 0x13e027a10 <line:16:9> col:9 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x13e027b10 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13e027b78 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x13e027ab8 <<invalid sloc>> Implicit 893
