TranslationUnitDecl 0x14d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d055bd0 '__int128'
|-TypedefDecl 0x14d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d055bf0 'unsigned __int128'
|-TypedefDecl 0x14d126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d126800 'struct __NSConstantString_tag'
|   `-Record 0x14d056580 '__NSConstantString_tag'
|-TypedefDecl 0x14d126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d055d90 '__SVInt8_t'
|-TypedefDecl 0x14d126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d055db0 '__SVInt16_t'
|-TypedefDecl 0x14d126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d055dd0 '__SVInt32_t'
|-TypedefDecl 0x14d126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d055df0 '__SVInt64_t'
|-TypedefDecl 0x14d126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d055e10 '__SVUint8_t'
|-TypedefDecl 0x14d126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d055e30 '__SVUint16_t'
|-TypedefDecl 0x14d126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d055e50 '__SVUint32_t'
|-TypedefDecl 0x14d126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d055e70 '__SVUint64_t'
|-TypedefDecl 0x14d126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d055e90 '__SVFloat16_t'
|-TypedefDecl 0x14d126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d1270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d1271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d1272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d1273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d1274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d1275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d1276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d1280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d1281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d1282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d1283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d1284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d1285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d056390 '__SVBool_t'
|-TypedefDecl 0x14d128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d1286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d0563f0 '__SVCount_t'
|-TypedefDecl 0x14d1287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d1287b0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
|-TypedefDecl 0x14d128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d1287b0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
`-FunctionDecl 0x14d128ba8 <dataset_diviso_filec/func24506_vuln.c:1:1, line:72:1> line:1:1 invalid eval_expr_typval 'int (int *, int *, int, int *)'
  |-ParmVarDecl 0x14d128928 <col:18, col:28> col:28 invalid expr 'int *'
  |-ParmVarDecl 0x14d1289a8 <col:34, col:44> col:44 invalid argv 'int *'
  |-ParmVarDecl 0x14d128a28 <col:50, col:54> col:54 used argc 'int'
  |-ParmVarDecl 0x14d128aa8 <col:60, col:70> col:70 invalid rettv 'int *'
  `-CompoundStmt 0x14d80a170 <line:2:1, line:72:1>
    |-DeclStmt 0x14d128cf0 <line:3:5, col:14>
    | `-VarDecl 0x14d128c88 <col:5, col:13> col:13 used s 'char *'
    |-DeclStmt 0x14d128d98 <line:4:5, col:26>
    | `-VarDecl 0x14d128d30 <col:5, col:12> col:12 invalid buf 'char'
    `-IfStmt 0x14d80a140 <line:7:5, line:70:5> has_else
      |-BinaryOperator 0x14d128e70 <line:7:9, col:25> 'int' contains-errors '=='
      | |-CXXDependentScopeMemberExpr 0x14d128dd0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->v_type
      | | `-RecoveryExpr 0x14d128db0 <col:9> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x14d128e50 <col:25> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x14d142780 <line:8:5, line:16:5>
      | |-BinaryOperator 0x14d128f60 <line:9:2, col:17> 'char *' contains-errors '='
      | | |-DeclRefExpr 0x14d128e90 <col:2> 'char *' lvalue Var 0x14d128c88 's' 'char *'
      | | `-CXXDependentScopeMemberExpr 0x14d128f18 <col:6, col:17> '<dependent type>' contains-errors lvalue .v_string
      | |   `-CXXDependentScopeMemberExpr 0x14d128ed0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->vval
      | |     `-RecoveryExpr 0x14d128eb0 <col:6> '<dependent type>' contains-errors lvalue
      | |-IfStmt 0x14d1421a0 <line:10:2, line:11:13>
      | | |-BinaryOperator 0x14d142138 <line:10:6, col:25> 'int' contains-errors '||'
      | | | |-BinaryOperator 0x14d1420a8 <col:6, col:11> 'int' contains-errors '=='
      | | | | |-DeclRefExpr 0x14d128f80 <col:6> 'char *' lvalue Var 0x14d128c88 's' 'char *'
      | | | | `-RecoveryExpr 0x14d142088 <col:11> '<dependent type>' contains-errors lvalue
      | | | `-BinaryOperator 0x14d142118 <col:19, col:25> 'int' contains-errors '=='
      | | |   |-UnaryOperator 0x14d1420e0 <col:19, col:20> 'char' lvalue prefix '*' cannot overflow
      | | |   | `-ImplicitCastExpr 0x14d1420c8 <col:20> 'char *' <LValueToRValue>
      | | |   |   `-DeclRefExpr 0x14d128fd8 <col:20> 'char *' lvalue Var 0x14d128c88 's' 'char *'
      | | |   `-RecoveryExpr 0x14d1420f8 <col:25> '<dependent type>' contains-errors lvalue
      | | `-ReturnStmt 0x14d142190 <line:11:6, col:13>
      | |   `-RecoveryExpr 0x14d142170 <col:13> '<dependent type>' contains-errors lvalue
      | |-CallExpr 0x14d1423a0 <line:12:2, col:21> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x14d142320 <col:2> 'int ()' Function 0x14d142268 'CLEAR_FIELD' 'int ()'
      | | `-RecoveryExpr 0x14d142380 <col:14> '<dependent type>' contains-errors lvalue
      | `-IfStmt 0x14d142760 <line:14:2, line:15:13>
      |   |-BinaryOperator 0x14d1426f8 <line:14:6, col:55> 'int' contains-errors '=='
      |   | |-CallExpr 0x14d142688 <col:6, col:50> '<dependent type>' contains-errors
      |   | | |-DeclRefExpr 0x14d1424c0 <col:6> 'int ()' Function 0x14d142408 'call_func' 'int ()'
      |   | | |-DeclRefExpr 0x14d1424e0 <col:16> 'char *' lvalue Var 0x14d128c88 's' 'char *'
      |   | | |-UnaryOperator 0x14d142520 <col:19, col:20> 'int' prefix '-'
      |   | | | `-IntegerLiteral 0x14d142500 <col:20> 'int' 1
      |   | | |-RecoveryExpr 0x14d142538 <col:23> '<dependent type>' contains-errors lvalue
      |   | | |-DeclRefExpr 0x14d142558 <col:30> 'int' lvalue ParmVar 0x14d128a28 'argc' 'int'
      |   | | |-RecoveryExpr 0x14d142578 <col:36> '<dependent type>' contains-errors lvalue
      |   | | `-UnaryOperator 0x14d142670 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   | |   `-RecoveryExpr 0x14d142650 <col:43> '<dependent type>' contains-errors lvalue
      |   | `-RecoveryExpr 0x14d1426d8 <col:55> '<dependent type>' contains-errors lvalue
      |   `-ReturnStmt 0x14d142750 <line:15:6, col:13>
      |     `-RecoveryExpr 0x14d142730 <col:13> '<dependent type>' contains-errors lvalue
      `-IfStmt 0x14d80a110 <line:17:10, line:70:5> has_else
        |-RecoveryExpr 0x14d142818 <line:17:14, col:30> '_Bool' contains-errors
        |-CompoundStmt 0x14d809358 <line:18:5, line:51:5>
        | `-IfStmt 0x14d809328 <line:24:2, line:50:2> has_else
        |   |-RecoveryExpr 0x14d142908 <line:24:6, line:25:44> '_Bool' contains-errors
        |   |-CompoundStmt 0x14d142e28 <line:26:2, line:39:2>
        |   | |-DeclStmt 0x14d142ac8 <line:28:6, col:12>
        |   | | `-VarDecl 0x14d142a60 <col:6, col:11> col:11 used r 'int'
        |   | `-CallExpr 0x14d142dc8 <line:36:6, col:21> 'int'
        |   |   `-ImplicitCastExpr 0x14d142db0 <col:6> 'int (*)()' <FunctionToPointerDecay>
        |   |     `-DeclRefExpr 0x14d142d60 <col:6> 'int ()' Function 0x14d142ca8 'remove_funccal' 'int ()'
        |   `-CompoundStmt 0x14d809318 <line:41:2, line:50:2>
        `-IfStmt 0x14d80a0e0 <line:52:10, line:70:5> has_else
          |-RecoveryExpr 0x14d8093d8 <line:52:14, col:30> '_Bool' contains-errors
          |-CompoundStmt 0x14d809578 <line:53:5, line:55:5>
          | `-ReturnStmt 0x14d809568 <line:54:2, col:37>
          |   `-CallExpr 0x14d809538 <col:9, col:37> '<dependent type>' contains-errors
          |     |-DeclRefExpr 0x14d8094d8 <col:9> 'int ()' Function 0x14d809420 'exe_typval_instr' 'int ()'
          |     |-RecoveryExpr 0x14d8094f8 <col:26> '<dependent type>' contains-errors lvalue
          |     `-RecoveryExpr 0x14d809518 <col:32> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x14d80a0b8 <line:57:5, line:70:5>
            |-BinaryOperator 0x14d809860 <line:58:2, col:61> 'char *' contains-errors '='
            | |-DeclRefExpr 0x14d809590 <col:2> 'char *' lvalue Var 0x14d128c88 's' 'char *'
            | `-CallExpr 0x14d809828 <col:6, col:61> '<dependent type>' contains-errors
            |   |-DeclRefExpr 0x14d809690 <col:6> 'int ()' Function 0x14d8095d8 'tv_get_string_buf_chk_strict' 'int ()'
            |   |-RecoveryExpr 0x14d8096b0 <col:35> '<dependent type>' contains-errors lvalue
            |   |-RecoveryExpr 0x14d8096d0 <col:41> '<dependent type>' contains-errors lvalue
            |   `-CallExpr 0x14d809808 <col:46, col:60> 'int'
            |     `-ImplicitCastExpr 0x14d8097f0 <col:46> 'int (*)()' <FunctionToPointerDecay>
            |       `-DeclRefExpr 0x14d8097d0 <col:46> 'int ()' Function 0x14d809718 'in_vim9script' 'int ()'
            |-BinaryOperator 0x14d809a70 <line:61:2, col:17> 'char *' '='
            | |-DeclRefExpr 0x14d8098c0 <col:2> 'char *' lvalue Var 0x14d128c88 's' 'char *'
            | `-ImplicitCastExpr 0x14d809a58 <col:6, col:17> 'char *' <IntegralToPointer>
            |   `-CallExpr 0x14d809a18 <col:6, col:17> 'int'
            |     |-ImplicitCastExpr 0x14d809a00 <col:6> 'int (*)()' <FunctionToPointerDecay>
            |     | `-DeclRefExpr 0x14d8099c0 <col:6> 'int ()' Function 0x14d809908 'skipwhite' 'int ()'
            |     `-ImplicitCastExpr 0x14d809a40 <col:16> 'char *' <LValueToRValue>
            |       `-DeclRefExpr 0x14d8099e0 <col:16> 'char *' lvalue Var 0x14d128c88 's' 'char *'
            `-IfStmt 0x14d80a098 <line:64:2, line:69:2>
              |-RecoveryExpr 0x14d809cf8 <line:64:6, col:23> '_Bool' contains-errors
              `-CompoundStmt 0x14d80a080 <line:65:2, line:69:2>
                `-CallExpr 0x14d809e38 <line:66:6, col:20> '<dependent type>' contains-errors
                  |-DeclRefExpr 0x14d809df8 <col:6> 'int ()' Function 0x14d809d40 'clear_tv' 'int ()'
                  `-RecoveryExpr 0x14d809e18 <col:15> '<dependent type>' contains-errors lvalue
