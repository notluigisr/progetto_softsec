TranslationUnitDecl 0x11f813e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f814cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f8143d0 '__int128'
|-TypedefDecl 0x11f814d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f8143f0 'unsigned __int128'
|-TypedefDecl 0x11f8e7630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f8e7400 'struct __NSConstantString_tag'
|   `-Record 0x11f814d80 '__NSConstantString_tag'
|-TypedefDecl 0x11f8e7698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f814590 '__SVInt8_t'
|-TypedefDecl 0x11f8e7700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f8145b0 '__SVInt16_t'
|-TypedefDecl 0x11f8e7768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f8145d0 '__SVInt32_t'
|-TypedefDecl 0x11f8e77d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f8145f0 '__SVInt64_t'
|-TypedefDecl 0x11f8e7838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f814610 '__SVUint8_t'
|-TypedefDecl 0x11f8e78a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f814630 '__SVUint16_t'
|-TypedefDecl 0x11f8e7908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f814650 '__SVUint32_t'
|-TypedefDecl 0x11f8e7970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f814670 '__SVUint64_t'
|-TypedefDecl 0x11f8e79d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f814690 '__SVFloat16_t'
|-TypedefDecl 0x11f8e7a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f8146b0 '__SVFloat32_t'
|-TypedefDecl 0x11f8e7aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f8146d0 '__SVFloat64_t'
|-TypedefDecl 0x11f8e7b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f8146f0 '__SVBfloat16_t'
|-TypedefDecl 0x11f8e7b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f814710 '__clang_svint8x2_t'
|-TypedefDecl 0x11f8e7be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f814730 '__clang_svint16x2_t'
|-TypedefDecl 0x11f8e7c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f814750 '__clang_svint32x2_t'
|-TypedefDecl 0x11f8e7cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f814770 '__clang_svint64x2_t'
|-TypedefDecl 0x11f8e7d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f814790 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f8e7d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f8147b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f8e7de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f8147d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f8e7e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f8147f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f8e7eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f814810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f8e7f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f814830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f8e7f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f814850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f8e7ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f814870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f8e8058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f814890 '__clang_svint8x3_t'
|-TypedefDecl 0x11f8e80c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8148b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f8e8128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8148d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f8e8190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8148f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f8e81f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f814910 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f8e8260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f814930 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f8e82c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f814950 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f8e8330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f814970 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f8e8398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f814990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f8e8c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8149b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f8e8c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8149d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f8e8cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8149f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f8e8d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f814a10 '__clang_svint8x4_t'
|-TypedefDecl 0x11f8e8da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f814a30 '__clang_svint16x4_t'
|-TypedefDecl 0x11f8e8e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f814a50 '__clang_svint32x4_t'
|-TypedefDecl 0x11f8e8e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f814a70 '__clang_svint64x4_t'
|-TypedefDecl 0x11f8e8ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f814a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f8e8f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f814ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f8e8fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f814ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f8e9010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f814af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f8e9078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f814b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f8e90e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f814b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f8e9148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f814b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f8e91b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f814b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f8e9218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f814b90 '__SVBool_t'
|-TypedefDecl 0x11f8e9280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f814bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f8e92e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f814bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f8e9350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f814bf0 '__SVCount_t'
|-TypedefDecl 0x11f8e93f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f8e93b0 'char *'
|   `-BuiltinType 0x11f813eb0 'char'
|-TypedefDecl 0x11f8e9468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f8e93b0 'char *'
|   `-BuiltinType 0x11f813eb0 'char'
`-FunctionDecl 0x11f8e9688 <dataset_diviso_filec/func24450_vuln.c:1:1, line:74:1> line:1:19 invalid spl_filesystem_object_get_debug_info 'int *(int *, int *)' static
  |-ParmVarDecl 0x11f8e9528 <col:56, col:62> col:62 invalid obj 'int *'
  |-ParmVarDecl 0x11f8e95a8 <col:67, col:72> col:72 used is_temp 'int *'
  `-CompoundStmt 0x12800a460 <line:2:1, line:74:1>
    |-DeclStmt 0x11f8e98d0 <line:6:2, col:20>
    | |-VarDecl 0x11f8e97d0 <col:2, col:8> col:8 used pnstr 'char *'
    | `-VarDecl 0x11f8e9850 <col:2, col:16> col:16 used path 'char *'
    |-DeclStmt 0x11f8e9a00 <line:7:2, col:22>
    | |-VarDecl 0x11f8e9900 <col:2, col:7> col:7 used pnlen 'int'
    | `-VarDecl 0x11f8e9980 <col:2, col:14> col:14 used path_len 'int'
    |-DeclStmt 0x11f8e9b28 <line:8:2, col:14>
    | `-VarDecl 0x11f8e9ac0 <col:2, col:13> col:7 used stmp 'char[2]'
    |-BinaryOperator 0x11f8e9bb0 <line:10:2, col:13> 'int' '='
    | |-UnaryOperator 0x11f8e9b78 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x11f8e9b60 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x11f8e9b40 <col:3> 'int *' lvalue ParmVar 0x11f8e95a8 'is_temp' 'int *'
    | `-IntegerLiteral 0x11f8e9b90 <col:13> 'int' 1
    |-IfStmt 0x11e040e80 <line:12:2, line:14:2>
    | |-UnaryOperator 0x11e040b88 <line:12:6, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11e040b70 <col:7, col:19> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x11e040b28 <col:7, col:19> '<dependent type>' contains-errors lvalue .properties
    | |     `-CXXDependentScopeMemberExpr 0x11e040ae0 <col:7, col:15> '<dependent type>' contains-errors lvalue ->std
    | |       `-RecoveryExpr 0x11e040ac0 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e040e68 <col:31, line:14:2>
    |   `-CallExpr 0x11e040e40 <line:13:3, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11e040d00 <col:3> 'int ()' Function 0x11e040c48 'rebuild_object_properties' 'int ()'
    |     `-UnaryOperator 0x11e040e28 <col:29, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-CXXDependentScopeMemberExpr 0x11e040de0 <col:30, col:38> '<dependent type>' contains-errors lvalue ->std
    |         `-RecoveryExpr 0x11e040dc0 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11e041000 <line:16:2, col:20> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e040f80 <col:2> 'int ()' Function 0x11e040ec8 'ALLOC_HASHTABLE' 'int ()'
    | `-RecoveryExpr 0x11e040fe0 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11e0414c0 <line:17:2, col:81> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e041108 <col:2> 'int ()' Function 0x11e041050 'ZEND_INIT_SYMTABLE_EX' 'int ()'
    | |-RecoveryExpr 0x11e0413a8 <col:24> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x11e0414a0 <col:28, col:77> '<dependent type>' contains-errors '+'
    | | |-CallExpr 0x11e041478 <col:28, col:73> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x11e041220 <col:28> 'int ()' Function 0x11e041168 'zend_hash_num_elements' 'int ()'
    | | | `-CXXDependentScopeMemberExpr 0x11e041430 <col:51, col:63> '<dependent type>' contains-errors lvalue .properties
    | | |   `-CXXDependentScopeMemberExpr 0x11e0413e8 <col:51, col:59> '<dependent type>' contains-errors lvalue ->std
    | | |     `-RecoveryExpr 0x11e0413c8 <col:51> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11e041310 <col:77> 'int' 3
    | `-IntegerLiteral 0x11e041350 <col:80> 'int' 0
    |-CallExpr 0x128008c98 <line:27:2, col:13> 'int'
    | |-ImplicitCastExpr 0x128008c80 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x128008c10 <col:2> 'int ()' Function 0x128008b58 'efree' 'int ()'
    | `-ImplicitCastExpr 0x128008cc0 <col:8> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x128008c30 <col:8> 'char *' lvalue Var 0x11f8e97d0 'pnstr' 'char *'
    |-IfStmt 0x1280092d8 <line:29:2, line:39:2>
    | |-RecoveryExpr 0x128008cd8 <line:29:6, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x1280092b8 <col:25, line:39:2>
    |   |-IfStmt 0x1280091f0 <line:33:3, line:37:3> has_else
    |   | |-RecoveryExpr 0x128008f28 <line:33:7, col:38> '_Bool' contains-errors
    |   | |-CompoundStmt 0x1280090f8 <col:53, line:35:3>
    |   | `-CompoundStmt 0x1280091e0 <col:10, line:37:3>
    |   `-CallExpr 0x128009278 <line:38:3, col:14> 'int'
    |     |-ImplicitCastExpr 0x128009260 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x128009220 <col:3> 'int ()' Function 0x128008b58 'efree' 'int ()'
    |     `-ImplicitCastExpr 0x1280092a0 <col:9> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x128009240 <col:9> 'char *' lvalue Var 0x11f8e97d0 'pnstr' 'char *'
    |-IfStmt 0x128009720 <line:40:2, line:57:2>
    | |-RecoveryExpr 0x1280092f8 <line:40:6, col:22> '_Bool' contains-errors
    | `-CompoundStmt 0x128009700 <col:34, line:57:2>
    |   |-IfStmt 0x128009638 <line:51:3, line:55:3> has_else
    |   | |-RecoveryExpr 0x1280093d0 <line:51:7, col:21> '_Bool' contains-errors
    |   | |-CompoundStmt 0x1280094c8 <col:31, line:53:3>
    |   | `-CompoundStmt 0x128009628 <col:10, line:55:3>
    |   `-CallExpr 0x1280096c0 <line:56:3, col:14> 'int'
    |     |-ImplicitCastExpr 0x1280096a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x128009668 <col:3> 'int ()' Function 0x128008b58 'efree' 'int ()'
    |     `-ImplicitCastExpr 0x1280096e8 <col:9> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x128009688 <col:9> 'char *' lvalue Var 0x11f8e97d0 'pnstr' 'char *'
    `-IfStmt 0x12800a440 <line:58:2, line:71:2>
      |-RecoveryExpr 0x128009740 <line:58:6, col:22> '_Bool' contains-errors
      `-CompoundStmt 0x12800a410 <col:35, line:71:2>
        |-CallExpr 0x128009d48 <line:61:3, col:14> 'int'
        | |-ImplicitCastExpr 0x128009d30 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x128009cf0 <col:3> 'int ()' Function 0x128008b58 'efree' 'int ()'
        | `-ImplicitCastExpr 0x128009d70 <col:9> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x128009d10 <col:9> 'char *' lvalue Var 0x11f8e97d0 'pnstr' 'char *'
        |-BinaryOperator 0x128009e30 <line:62:3, col:13> 'char' '='
        | |-ArraySubscriptExpr 0x128009de0 <col:3, col:9> 'char' lvalue
        | | |-ImplicitCastExpr 0x128009dc8 <col:3> 'char *' <ArrayToPointerDecay>
        | | | `-DeclRefExpr 0x128009d88 <col:3> 'char[2]' lvalue Var 0x11f8e9ac0 'stmp' 'char[2]'
        | | `-IntegerLiteral 0x128009da8 <col:8> 'int' 1
        | `-ImplicitCastExpr 0x128009e18 <col:13> 'char' <IntegralCast>
        |   `-CharacterLiteral 0x128009e00 <col:13> 'int' 0
        |-CallExpr 0x12800a0f0 <line:66:3, col:14> 'int'
        | |-ImplicitCastExpr 0x12800a0d8 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x12800a098 <col:3> 'int ()' Function 0x128008b58 'efree' 'int ()'
        | `-ImplicitCastExpr 0x12800a118 <col:9> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x12800a0b8 <col:9> 'char *' lvalue Var 0x11f8e97d0 'pnstr' 'char *'
        `-CallExpr 0x12800a3d0 <line:70:3, col:14> 'int'
          |-ImplicitCastExpr 0x12800a3b8 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x12800a378 <col:3> 'int ()' Function 0x128008b58 'efree' 'int ()'
          `-ImplicitCastExpr 0x12800a3f8 <col:9> 'char *' <LValueToRValue>
            `-DeclRefExpr 0x12800a398 <col:9> 'char *' lvalue Var 0x11f8e97d0 'pnstr' 'char *'
