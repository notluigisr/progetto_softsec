TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x132126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132126000 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x132126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x132126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x132126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x1321263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x132126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x1321264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x132126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x132126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x1321265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x132126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1321266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x132126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1321267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1321268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1321269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x132126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x132126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x132126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1321278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1321279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x132127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x132127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x132127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x132127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x132127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x132127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x132127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x132127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x132127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x132127fb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x132128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x132127fb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-FunctionDecl 0x132128288 <dataset_diviso_filec/func12317_nonvuln.c:1:1, line:31:1> line:1:1 invalid spa_build_auth_challenge 'int (int *, int *)'
| |-ParmVarDecl 0x132128128 <col:27, col:44> col:44 referenced invalid request 'int *'
| |-ParmVarDecl 0x1321281a8 <col:53, col:72> col:72 referenced invalid challenge 'int *'
| `-CompoundStmt 0x132144dc8 <line:2:1, line:31:1>
|   |-DeclStmt 0x132128448 <line:3:1, col:16>
|   | `-VarDecl 0x1321283e0 <col:1, col:15> col:6 used chalstr 'char[8]'
|   |-DeclStmt 0x1321284e0 <line:4:1, col:6>
|   | `-VarDecl 0x132128478 <col:1, col:5> col:5 used i 'int'
|   |-DeclStmt 0x132128798 <line:5:1, col:22>
|   | `-VarDecl 0x132128510 <col:1, col:21> col:5 used p 'int' cinit
|   |   `-CStyleCastExpr 0x132128770 <col:9, col:21> 'int' <NoOp>
|   |     `-CallExpr 0x132128738 <col:14, col:21> 'int'
|   |       `-ImplicitCastExpr 0x132128720 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x1321286d0 <col:14> 'int ()' Function 0x132128618 'getpid' 'int ()'
|   |-DeclStmt 0x132142ad0 <line:6:1, col:52>
|   | `-VarDecl 0x132142800 <col:1, col:5> col:5 used random_seed 'int'
|   |-BinaryOperator 0x132142b50 <line:8:1, col:11> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x132142b08 <col:1> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x132142ae8 <col:1> 'int *' lvalue ParmVar 0x132128128 'request' 'int *'
|   | `-RecoveryExpr 0x132142b30 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x132143358 <line:14:1, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1321432f0 <col:1, col:12> '<dependent type>' contains-errors lvalue ->bufIndex
|   | | `-RecoveryExpr 0x1321432c8 <col:1> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1321432a8 <col:1> 'int *' lvalue ParmVar 0x1321281a8 'challenge' 'int *'
|   | `-IntegerLiteral 0x132143338 <col:23> 'int' 0
|   |-CallExpr 0x132143780 <line:15:1, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x132143648 <col:1> 'void *(void *, const void *, unsigned long)' Function 0x1321433f8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-CXXDependentScopeMemberExpr 0x132143688 <col:9, col:20> '<dependent type>' contains-errors lvalue ->ident
|   | | `-RecoveryExpr 0x132143668 <col:9> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x132143710 <col:27> 'char[4]' lvalue "STR"
|   | `-IntegerLiteral 0x132143730 <col:34> 'int' 8
|   |-CallExpr 0x132144198 <line:16:1, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1321440b8 <col:1> 'int ()' Function 0x132144000 'SIVAL' 'int ()'
|   | |-UnaryOperator 0x132144140 <col:8, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x1321440f8 <col:9, col:20> '<dependent type>' contains-errors lvalue ->msgType
|   | |   `-RecoveryExpr 0x1321440d8 <col:9> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x132144158 <col:29> 'int' 0
|   | `-IntegerLiteral 0x132144178 <col:32> 'int' 2
|   |-CallExpr 0x1321442b0 <line:17:1, col:40> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1321441d0 <col:1> 'int ()' Function 0x132144000 'SIVAL' 'int ()'
|   | |-UnaryOperator 0x132144258 <col:8, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x132144210 <col:9, col:20> '<dependent type>' contains-errors lvalue ->flags
|   | |   `-RecoveryExpr 0x1321441f0 <col:9> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x132144270 <col:27> 'int' 0
|   | `-IntegerLiteral 0x132144290 <col:30> 'int' 33281
|   |-CallExpr 0x132144410 <line:18:1, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1321442e8 <col:1> 'int ()' Function 0x132144000 'SIVAL' 'int ()'
|   | |-UnaryOperator 0x1321443b8 <col:8, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x132144370 <col:9, col:28> '<dependent type>' contains-errors lvalue .len
|   | |   `-CXXDependentScopeMemberExpr 0x132144328 <col:9, col:20> '<dependent type>' contains-errors lvalue ->uDomain
|   | |     `-RecoveryExpr 0x132144308 <col:9> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x1321443d0 <col:33> 'int' 0
|   | `-IntegerLiteral 0x1321443f0 <col:36> 'int' 0
|   |-CallExpr 0x132144570 <line:19:1, col:45> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x132144448 <col:1> 'int ()' Function 0x132144000 'SIVAL' 'int ()'
|   | |-UnaryOperator 0x132144518 <col:8, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x1321444d0 <col:9, col:28> '<dependent type>' contains-errors lvalue .maxlen
|   | |   `-CXXDependentScopeMemberExpr 0x132144488 <col:9, col:20> '<dependent type>' contains-errors lvalue ->uDomain
|   | |     `-RecoveryExpr 0x132144468 <col:9> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x132144530 <col:36> 'int' 0
|   | `-IntegerLiteral 0x132144550 <col:39> 'int' 0
|   |-CallExpr 0x1321446d0 <line:20:1, col:49> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1321445a8 <col:1> 'int ()' Function 0x132144000 'SIVAL' 'int ()'
|   | |-UnaryOperator 0x132144678 <col:8, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x132144630 <col:9, col:28> '<dependent type>' contains-errors lvalue .offset
|   | |   `-CXXDependentScopeMemberExpr 0x1321445e8 <col:9, col:20> '<dependent type>' contains-errors lvalue ->uDomain
|   | |     `-RecoveryExpr 0x1321445c8 <col:9> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x132144690 <col:36> 'int' 0
|   | `-IntegerLiteral 0x1321446b0 <col:39> 'int' 10240
|   |-ForStmt 0x132144c60 <line:24:1, line:28:3>
|   | |-BinaryOperator 0x132144748 <line:24:5, col:7> 'int' '='
|   | | |-DeclRefExpr 0x132144708 <col:5> 'int' lvalue Var 0x132128478 'i' 'int'
|   | | `-IntegerLiteral 0x132144728 <col:7> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1321447c0 <col:9, col:11> 'int' '<'
|   | | |-ImplicitCastExpr 0x1321447a8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x132144768 <col:9> 'int' lvalue Var 0x132128478 'i' 'int'
|   | | `-IntegerLiteral 0x132144788 <col:11> 'int' 8
|   | |-UnaryOperator 0x132144800 <col:13, col:14> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1321447e0 <col:13> 'int' lvalue Var 0x132128478 'i' 'int'
|   | `-CompoundStmt 0x132144c40 <line:25:3, line:28:3>
|   |   |-BinaryOperator 0x132144a08 <line:26:3, col:46> 'char' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x132144888 <col:3, col:12> 'char' lvalue
|   |   | | |-ImplicitCastExpr 0x132144858 <col:3> 'char *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x132144818 <col:3> 'char[8]' lvalue Var 0x1321283e0 'chalstr' 'char[8]'
|   |   | | `-ImplicitCastExpr 0x132144870 <col:11> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x132144838 <col:11> 'int' lvalue Var 0x132128478 'i' 'int'
|   |   | `-BinaryOperator 0x1321449e8 <col:16, col:46> '<dependent type>' contains-errors '%'
|   |   |   |-RecoveryExpr 0x132144998 <col:16, col:42> '<dependent type>' contains-errors lvalue
|   |   |   | |-ParenExpr 0x132144900 <col:16, col:23> '<overloaded function type>' lvalue
|   |   |   | | `-UnresolvedLookupExpr 0x1321448c0 <col:17> '<overloaded function type>' lvalue (no ADL) = 'uschar' empty
|   |   |   | `-BinaryOperator 0x132144978 <col:25, col:40> 'int' '>>'
|   |   |   |   |-ImplicitCastExpr 0x132144960 <col:25> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x132144920 <col:25> 'int' lvalue Var 0x132142800 'random_seed' 'int'
|   |   |   |   `-IntegerLiteral 0x132144940 <col:40> 'int' 16
|   |   |   `-IntegerLiteral 0x1321449c8 <col:46> 'int' 256
|   |   `-BinaryOperator 0x132144c20 <line:27:3, col:61> 'int' '='
|   |     |-DeclRefExpr 0x132144a28 <col:3> 'int' lvalue Var 0x132142800 'random_seed' 'int'
|   |     `-BinaryOperator 0x132144c00 <col:17, col:61> 'int' '+'
|   |       |-BinaryOperator 0x132144bc0 <col:17, col:47> 'int' '*'
|   |       | |-ParenExpr 0x132144b68 <col:17, col:43> 'int'
|   |       | | `-BinaryOperator 0x132144b48 <col:18, col:42> 'int' '-'
|   |       | |   |-IntegerLiteral 0x132144a48 <col:18> 'int' 1103515245
|   |       | |   `-ImplicitCastExpr 0x132144b30 <col:31, col:42> 'int' <IntegralCast>
|   |       | |     `-ImplicitCastExpr 0x132144b18 <col:31, col:42> 'char' <LValueToRValue>
|   |       | |       `-ParenExpr 0x132144af8 <col:31, col:42> 'char' lvalue
|   |       | |         `-ArraySubscriptExpr 0x132144ad8 <col:32, col:41> 'char' lvalue
|   |       | |           |-ImplicitCastExpr 0x132144aa8 <col:32> 'char *' <ArrayToPointerDecay>
|   |       | |           | `-DeclRefExpr 0x132144a68 <col:32> 'char[8]' lvalue Var 0x1321283e0 'chalstr' 'char[8]'
|   |       | |           `-ImplicitCastExpr 0x132144ac0 <col:40> 'int' <LValueToRValue>
|   |       | |             `-DeclRefExpr 0x132144a88 <col:40> 'int' lvalue Var 0x132128478 'i' 'int'
|   |       | `-ImplicitCastExpr 0x132144ba8 <col:47> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x132144b88 <col:47> 'int' lvalue Var 0x132142800 'random_seed' 'int'
|   |       `-IntegerLiteral 0x132144be0 <col:61> 'int' 12345
|   `-CallExpr 0x132144d90 <line:30:1, col:42> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x132144c98 <col:1> 'void *(void *, const void *, unsigned long)' Function 0x1321433f8 'memcpy' 'void *(void *, const void *, unsigned long)'
|     |-CXXDependentScopeMemberExpr 0x132144cd8 <col:8, col:19> '<dependent type>' contains-errors lvalue ->challengeData
|     | `-RecoveryExpr 0x132144cb8 <col:8> '<dependent type>' contains-errors lvalue
|     |-DeclRefExpr 0x132144d20 <col:33> 'char[8]' lvalue Var 0x1321283e0 'chalstr' 'char[8]'
|     `-IntegerLiteral 0x132144d40 <col:41> 'int' 8
|-FunctionDecl 0x132142fe0 <line:12:1> col:1 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x1321430e0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x132143148 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x1321431b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x132143088 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x1321433f8 <line:15:1> col:1 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1321434f8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x132143560 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x1321435c8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1321434a0 <<invalid sloc>> Implicit 882
