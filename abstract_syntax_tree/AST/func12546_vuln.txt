TranslationUnitDecl 0x125055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1250564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125055bd0 '__int128'
|-TypedefDecl 0x125056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125055bf0 'unsigned __int128'
|-TypedefDecl 0x12580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12580bc00 'struct __NSConstantString_tag'
|   `-Record 0x125056580 '__NSConstantString_tag'
|-TypedefDecl 0x12580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125055d90 '__SVInt8_t'
|-TypedefDecl 0x12580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125055db0 '__SVInt16_t'
|-TypedefDecl 0x12580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125055dd0 '__SVInt32_t'
|-TypedefDecl 0x12580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125055df0 '__SVInt64_t'
|-TypedefDecl 0x12580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125055e10 '__SVUint8_t'
|-TypedefDecl 0x12580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125055e30 '__SVUint16_t'
|-TypedefDecl 0x12580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125055e50 '__SVUint32_t'
|-TypedefDecl 0x12580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125055e70 '__SVUint64_t'
|-TypedefDecl 0x12580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125055e90 '__SVFloat16_t'
|-TypedefDecl 0x12580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1250560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1250560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1250560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1250561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1250561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1250561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1250562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1250562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1250562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125056390 '__SVBool_t'
|-TypedefDecl 0x12580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1250563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1250563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1250563f0 '__SVCount_t'
|-TypedefDecl 0x12580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12580dbb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-TypedefDecl 0x12580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12580dbb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
`-FunctionDecl 0x12580de88 <dataset_diviso_filec/func12546_vuln.c:1:1, line:29:1> line:1:12 invalid php_snmp_write_max_oids 'int (int *, int *)' static
  |-ParmVarDecl 0x12580dd28 <col:36, col:53> col:53 referenced invalid snmp_object 'int *'
  |-ParmVarDecl 0x12580dda8 <col:66, col:72> col:72 referenced invalid newval 'int *'
  `-CompoundStmt 0x125828438 <line:2:1, line:29:1>
    |-DeclStmt 0x12580dff8 <line:4:2, col:19>
    | `-VarDecl 0x12580df58 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-RecoveryExpr 0x12580dfd8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12580e388 <line:6:2, line:9:2>
    | |-BinaryOperator 0x12580e230 <line:6:6, col:26> 'int' contains-errors '=='
    | | |-CallExpr 0x12580e1b0 <col:6, col:21> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12580e170 <col:6> 'int ()' Function 0x12580e0b8 'Z_TYPE_P' 'int ()'
    | | | `-RecoveryExpr 0x12580e190 <col:15> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12580e210 <col:26> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12580e368 <col:35, line:9:2>
    |   |-BinaryOperator 0x12580e300 <line:7:3, col:27> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12580e298 <col:3, col:16> '<dependent type>' contains-errors lvalue ->max_oids
    |   | | `-RecoveryExpr 0x12580e270 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12580e250 <col:3> 'int *' lvalue ParmVar 0x12580dd28 'snmp_object' 'int *'
    |   | `-IntegerLiteral 0x12580e2e0 <col:27> 'int' 0
    |   `-ReturnStmt 0x12580e358 <line:8:3, col:10>
    |     `-ImplicitCastExpr 0x12580e340 <col:10> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x12580e320 <col:10> 'int' contains-errors lvalue Var 0x12580df58 'ret' 'int'
    |-IfStmt 0x125827d78 <line:11:2, line:16:2>
    | |-BinaryOperator 0x125827880 <line:11:6, col:26> 'int' contains-errors '!='
    | | |-CallExpr 0x125827800 <col:6, col:21> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12580e3a8 <col:6> 'int ()' Function 0x12580e0b8 'Z_TYPE_P' 'int ()'
    | | | `-RecoveryExpr 0x12580e3c8 <col:15> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x125827860 <col:26> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125827d50 <col:35, line:16:2>
    |   |-CallExpr 0x125827a80 <line:13:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1258279d0 <col:3> 'int ()' Function 0x125827918 'zval_copy_ctor' 'int ()'
    |   | `-UnaryOperator 0x125827a68 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x125827a48 <col:19> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x125827c38 <line:14:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x125827b88 <col:3> 'int ()' Function 0x125827ad0 'convert_to_long' 'int ()'
    |   | `-UnaryOperator 0x125827c20 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x125827c00 <col:20> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x125827d30 <line:15:3, col:13> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x125827c80 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x125827c60 <col:3> 'int *' lvalue ParmVar 0x12580dda8 'newval' 'int *'
    |     `-UnaryOperator 0x125827d18 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x125827cf8 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125828178 <line:18:2, line:22:2> has_else
    | |-BinaryOperator 0x125827f00 <line:18:6, col:25> 'int' contains-errors '>'
    | | |-CallExpr 0x125827eb8 <col:6, col:21> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x125827e78 <col:6> 'int ()' Function 0x125827dc0 'Z_LVAL_P' 'int ()'
    | | | `-RecoveryExpr 0x125827e98 <col:15> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x125827ee0 <col:25> 'int' 0
    | |-CompoundStmt 0x125828038 <col:28, line:20:2>
    | | `-BinaryOperator 0x125828018 <line:19:3, col:42> '<dependent type>' contains-errors '='
    | |   |-CXXDependentScopeMemberExpr 0x125827f68 <col:3, col:16> '<dependent type>' contains-errors lvalue ->max_oids
    | |   | `-RecoveryExpr 0x125827f40 <col:3> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x125827f20 <col:3> 'int *' lvalue ParmVar 0x12580dd28 'snmp_object' 'int *'
    | |   `-CallExpr 0x125827ff0 <col:27, col:42> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x125827fb0 <col:27> 'int ()' Function 0x125827dc0 'Z_LVAL_P' 'int ()'
    | |     `-RecoveryExpr 0x125827fd0 <col:36> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125828168 <line:20:9, line:22:2>
    |-IfStmt 0x1258283d0 <line:24:2, line:26:2>
    | |-BinaryOperator 0x125828250 <line:24:6, col:17> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1258281a8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x125828238 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x125828218 <col:17> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1258283b8 <col:23, line:26:2>
    |   `-CallExpr 0x125828390 <line:25:3, col:19> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x125828350 <col:3> 'int ()' Function 0x125828298 'zval_dtor' 'int ()'
    |     `-RecoveryExpr 0x125828370 <col:13> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x125828428 <line:28:2, col:9>
      `-ImplicitCastExpr 0x125828410 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x1258283f0 <col:9> 'int' contains-errors lvalue Var 0x12580df58 'ret' 'int'
