TranslationUnitDecl 0x148055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1480564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148055bd0 '__int128'
|-TypedefDecl 0x148056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148055bf0 'unsigned __int128'
|-TypedefDecl 0x14000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14000bc00 'struct __NSConstantString_tag'
|   `-Record 0x148056580 '__NSConstantString_tag'
|-TypedefDecl 0x14000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148055d90 '__SVInt8_t'
|-TypedefDecl 0x14000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148055db0 '__SVInt16_t'
|-TypedefDecl 0x14000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148055dd0 '__SVInt32_t'
|-TypedefDecl 0x14000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148055df0 '__SVInt64_t'
|-TypedefDecl 0x14000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148055e10 '__SVUint8_t'
|-TypedefDecl 0x14000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148055e30 '__SVUint16_t'
|-TypedefDecl 0x14000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148055e50 '__SVUint32_t'
|-TypedefDecl 0x14000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148055e70 '__SVUint64_t'
|-TypedefDecl 0x14000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148055e90 '__SVFloat16_t'
|-TypedefDecl 0x14000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1480560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1480560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1480560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1480561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1480561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1480561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1480562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1480562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1480562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148056390 '__SVBool_t'
|-TypedefDecl 0x14000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1480563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1480563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1480563f0 '__SVCount_t'
|-TypedefDecl 0x14000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14000dbb0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
|-TypedefDecl 0x14000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14000dbb0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
`-FunctionDecl 0x14000de88 <dataset_diviso_filec/func20296_nonvuln.c:1:1, line:70:1> line:1:1 invalid flatpak_run_add_x11_args 'int (int *, int)'
  |-ParmVarDecl 0x14000dd28 <col:27, col:41> col:41 invalid bwrap 'int *'
  |-ParmVarDecl 0x14000dda8 <line:2:27, col:41> col:41 invalid allowed 'int'
  `-CompoundStmt 0x148123438 <line:3:1, line:70:1>
    |-DeclStmt 0x14000dfc0 <line:5:3, col:22>
    | `-VarDecl 0x14000df58 <col:3, col:15> col:15 used display 'const char *'
    |-CallExpr 0x14000e240 <line:8:3, line:10:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14000e130 <line:8:3> 'int ()' Function 0x14000e078 'flatpak_bwrap_add_args' 'int ()'
    | |-RecoveryExpr 0x14000e150 <col:27> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x14000e1b0 <line:9:27> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x14000e220 <line:10:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140027480 <line:12:3, line:16:5>
    | |-UnaryOperator 0x14000e2b0 <line:12:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14000e298 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14000e278 <col:8> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x140027460 <line:13:5, line:16:5>
    |   |-CallExpr 0x140027420 <line:14:7, col:44> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14000e3a8 <col:7> 'int ()' Function 0x14000e2f0 'flatpak_bwrap_unset_env' 'int ()'
    |   | |-RecoveryExpr 0x14000e3c8 <col:32> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x140027400 <col:39> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x140027450 <line:15:7>
    |-CallExpr 0x140027608 <line:18:3, col:17> 'int'
    | |-ImplicitCastExpr 0x1400275f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x140027580 <col:3> 'int ()' Function 0x1400274c8 'g_debug' 'int ()'
    | `-ImplicitCastExpr 0x140027630 <col:12> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x1400275a0 <col:12> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x140027c20 <line:20:3, col:28> 'const char *' '='
    | |-DeclRefExpr 0x140027648 <col:3> 'const char *' lvalue Var 0x14000df58 'display' 'const char *'
    | `-ImplicitCastExpr 0x1400277e0 <col:13, col:28> 'const char *' <IntegralToPointer>
    |   `-CallExpr 0x1400277a0 <col:13, col:28> 'int'
    |     |-ImplicitCastExpr 0x140027788 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x140027748 <col:13> 'int ()' Function 0x140027690 'g_getenv' 'int ()'
    |     `-ImplicitCastExpr 0x1400277c8 <col:23> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x140027768 <col:23> 'char[4]' lvalue "STR"
    `-IfStmt 0x148123408 <line:21:3, line:69:5> has_else
      |-BinaryOperator 0x140027f60 <line:21:7, col:66> 'int' '&&'
      | |-BinaryOperator 0x140027d58 <col:7, col:32> 'int' '&&'
      | | |-ImplicitCastExpr 0x140027d40 <col:7> 'const char *' <LValueToRValue>
      | | | `-DeclRefExpr 0x140027c40 <col:7> 'const char *' lvalue Var 0x14000df58 'display' 'const char *'
      | | `-BinaryOperator 0x140027d20 <col:18, col:32> 'int' '=='
      | |   |-ImplicitCastExpr 0x140027d08 <col:18, col:27> 'int' <IntegralCast>
      | |   | `-ImplicitCastExpr 0x140027cf0 <col:18, col:27> 'char' <LValueToRValue>
      | |   |   `-ArraySubscriptExpr 0x140027cb8 <col:18, col:27> 'const char' lvalue
      | |   |     |-ImplicitCastExpr 0x140027ca0 <col:18> 'const char *' <LValueToRValue>
      | |   |     | `-DeclRefExpr 0x140027c60 <col:18> 'const char *' lvalue Var 0x14000df58 'display' 'const char *'
      | |   |     `-IntegerLiteral 0x140027c80 <col:26> 'int' 0
      | |   `-CharacterLiteral 0x140027cd8 <col:32> 'int' 58
      | `-CallExpr 0x140027f08 <col:39, col:66> 'int'
      |   |-ImplicitCastExpr 0x140027ef0 <col:39> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x140027e58 <col:39> 'int ()' Function 0x140027da0 'g_ascii_isdigit' 'int ()'
      |   `-ImplicitCastExpr 0x140027f48 <col:56, col:65> 'int' <IntegralCast>
      |     `-ImplicitCastExpr 0x140027f30 <col:56, col:65> 'char' <LValueToRValue>
      |       `-ArraySubscriptExpr 0x140027ed0 <col:56, col:65> 'const char' lvalue
      |         |-ImplicitCastExpr 0x140027eb8 <col:56> 'const char *' <LValueToRValue>
      |         | `-DeclRefExpr 0x140027e78 <col:56> 'const char *' lvalue Var 0x14000df58 'display' 'const char *'
      |         `-IntegerLiteral 0x140027e98 <col:64> 'int' 1
      |-CompoundStmt 0x148123328 <line:22:5, line:65:5>
      | |-DeclStmt 0x140028090 <line:23:7, col:43>
      | | `-VarDecl 0x140027f98 <col:7, col:42> col:19 used display_nr 'const char *' cinit
      | |   `-UnaryOperator 0x140028078 <col:32, col:42> 'const char *' prefix '&' cannot overflow
      | |     `-ArraySubscriptExpr 0x140028058 <col:33, col:42> 'const char' lvalue
      | |       |-ImplicitCastExpr 0x140028040 <col:33> 'const char *' <LValueToRValue>
      | |       | `-DeclRefExpr 0x140028000 <col:33> 'const char *' lvalue Var 0x14000df58 'display' 'const char *'
      | |       `-IntegerLiteral 0x140028020 <col:41> 'int' 1
      | |-DeclStmt 0x140028160 <line:24:7, col:46>
      | | `-VarDecl 0x1400280c0 <col:7, col:36> col:19 used display_nr_end 'const char *' cinit
      | |   `-ImplicitCastExpr 0x140028148 <col:36> 'const char *' <LValueToRValue>
      | |     `-DeclRefExpr 0x140028128 <col:36> 'const char *' lvalue Var 0x140027f98 'display_nr' 'const char *'
      | |-WhileStmt 0x140028290 <line:27:7, line:28:23>
      | | |-CallExpr 0x140028200 <line:27:14, col:46> 'int'
      | | | |-ImplicitCastExpr 0x1400281e8 <col:14> 'int (*)()' <FunctionToPointerDecay>
      | | | | `-DeclRefExpr 0x140028178 <col:14> 'int ()' Function 0x140027da0 'g_ascii_isdigit' 'int ()'
      | | | `-ImplicitCastExpr 0x140028240 <col:31, col:32> 'int' <IntegralCast>
      | | |   `-ImplicitCastExpr 0x140028228 <col:31, col:32> 'char' <LValueToRValue>
      | | |     `-UnaryOperator 0x1400281d0 <col:31, col:32> 'const char' lvalue prefix '*' cannot overflow
      | | |       `-ImplicitCastExpr 0x1400281b8 <col:32> 'const char *' <LValueToRValue>
      | | |         `-DeclRefExpr 0x140028198 <col:32> 'const char *' lvalue Var 0x1400280c0 'display_nr_end' 'const char *'
      | | `-UnaryOperator 0x140028278 <line:28:9, col:23> 'const char *' postfix '++'
      | |   `-DeclRefExpr 0x140028258 <col:9> 'const char *' lvalue Var 0x1400280c0 'display_nr_end' 'const char *'
      | |-CallExpr 0x148123108 <line:33:7, line:35:35> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x148123038 <line:33:7> 'int ()' Function 0x14000e078 'flatpak_bwrap_add_args' 'int ()'
      | | |-RecoveryExpr 0x148123058 <col:31> '<dependent type>' contains-errors lvalue
      | | |-StringLiteral 0x148123078 <line:34:31> 'char[4]' lvalue "STR"
      | | `-RecoveryExpr 0x1481230e8 <line:35:31> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x1481232f0 <line:36:7, col:48> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x148123220 <col:7> 'int ()' Function 0x148123168 'flatpak_bwrap_set_env' 'int ()'
      |   |-RecoveryExpr 0x148123240 <col:30> '<dependent type>' contains-errors lvalue
      |   |-StringLiteral 0x148123260 <col:37> 'char[4]' lvalue "STR"
      |   `-RecoveryExpr 0x1481232d0 <col:44> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1481233f0 <line:67:5, line:69:5>
        `-CallExpr 0x1481233c0 <line:68:7, col:44> '<dependent type>' contains-errors
          |-DeclRefExpr 0x148123360 <col:7> 'int ()' Function 0x14000e2f0 'flatpak_bwrap_unset_env' 'int ()'
          |-RecoveryExpr 0x148123380 <col:32> '<dependent type>' contains-errors lvalue
          `-StringLiteral 0x1481233a0 <col:39> 'char[4]' lvalue "STR"
