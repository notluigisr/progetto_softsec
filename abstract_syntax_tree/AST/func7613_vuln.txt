TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x13000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13000bc00 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x13000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x13000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x13000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x13000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x13000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x13000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x13000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x13000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x13000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x13000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x13000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x13000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x13000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-FunctionDecl 0x130026688 <dataset_diviso_filec/func7613_vuln.c:1:1, line:54:1> line:1:5 credential_from_url_gently 'int (struct credential *, const char *, int)'
| |-ParmVarDecl 0x13000e248 <col:32, col:51> col:51 used c 'struct credential *'
| |-ParmVarDecl 0x13000e2c8 <col:54, col:66> col:66 used url 'const char *'
| |-ParmVarDecl 0x13000e348 <line:2:11, col:15> col:15 used quiet 'int'
| `-CompoundStmt 0x1279242b8 <line:3:1, line:54:1>
|   |-DeclStmt 0x130026ac8 <line:4:2, col:56>
|   | |-VarDecl 0x1300267a8 <col:2, col:14> col:14 used at 'const char *'
|   | |-VarDecl 0x130026828 <col:2, col:19> col:19 used colon 'const char *'
|   | |-VarDecl 0x1300268a8 <col:2, col:27> col:27 used cp 'const char *'
|   | |-VarDecl 0x130026928 <col:2, col:32> col:32 used slash 'const char *'
|   | |-VarDecl 0x1300269a8 <col:2, col:40> col:40 used host 'const char *'
|   | `-VarDecl 0x130026a28 <col:2, col:47> col:47 used proto_end 'const char *'
|   |-CallExpr 0x130026c98 <line:6:2, col:20> 'int'
|   | |-ImplicitCastExpr 0x130026c80 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x130026c10 <col:2> 'int ()' Function 0x130026b58 'credential_clear' 'int ()'
|   | `-ImplicitCastExpr 0x130026cc0 <col:19> 'struct credential *' <LValueToRValue>
|   |   `-DeclRefExpr 0x130026c30 <col:19> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   |-BinaryOperator 0x1300270c8 <line:9:2, col:31> 'const char *' '='
|   | |-DeclRefExpr 0x130026cd8 <col:2> 'const char *' lvalue Var 0x130026a28 'proto_end' 'const char *'
|   | `-ImplicitCastExpr 0x1300270b0 <col:14, col:31> 'const char *' <NoOp>
|   |   `-CallExpr 0x130027038 <col:14, col:31> 'char *'
|   |     |-ImplicitCastExpr 0x130027020 <col:14> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x130026f20 <col:14> 'char *(const char *, const char *)' Function 0x130026d40 'strstr' 'char *(const char *, const char *)'
|   |     |-ImplicitCastExpr 0x130027068 <col:21> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x130026f40 <col:21> 'const char *' lvalue ParmVar 0x13000e2c8 'url' 'const char *'
|   |     `-ImplicitCastExpr 0x130027098 <col:26> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x130027080 <col:26> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x130026fa0 <col:26> 'char[4]' lvalue "STR"
|   |-IfStmt 0x130027168 <line:10:2, line:11:10>
|   | |-UnaryOperator 0x130027120 <line:10:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x130027108 <col:7> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1300270e8 <col:7> 'const char *' lvalue Var 0x130026a28 'proto_end' 'const char *'
|   | `-ReturnStmt 0x130027158 <line:11:3, col:10>
|   |   `-IntegerLiteral 0x130027138 <col:10> 'int' 0
|   |-BinaryOperator 0x130027220 <line:12:2, col:19> 'const char *' '='
|   | |-DeclRefExpr 0x130027188 <col:2> 'const char *' lvalue Var 0x1300268a8 'cp' 'const char *'
|   | `-BinaryOperator 0x130027200 <col:7, col:19> 'const char *' '+'
|   |   |-ImplicitCastExpr 0x1300271e8 <col:7> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1300271a8 <col:7> 'const char *' lvalue Var 0x130026a28 'proto_end' 'const char *'
|   |   `-IntegerLiteral 0x1300271c8 <col:19> 'int' 3
|   |-BinaryOperator 0x130027598 <line:13:2, col:21> 'const char *' '='
|   | |-DeclRefExpr 0x130027240 <col:2> 'const char *' lvalue Var 0x1300267a8 'at' 'const char *'
|   | `-ImplicitCastExpr 0x130027580 <col:7, col:21> 'const char *' <NoOp>
|   |   `-CallExpr 0x130027538 <col:7, col:21> 'char *'
|   |     |-ImplicitCastExpr 0x130027520 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x130027480 <col:7> 'char *(const char *, int)' Function 0x1300272a0 'strchr' 'char *(const char *, int)'
|   |     |-ImplicitCastExpr 0x130027568 <col:14> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1300274a0 <col:14> 'const char *' lvalue Var 0x1300268a8 'cp' 'const char *'
|   |     `-CharacterLiteral 0x1300274c0 <col:18> 'int' 64
|   |-BinaryOperator 0x130028ac8 <line:14:2, col:24> 'const char *' '='
|   | |-DeclRefExpr 0x1300275b8 <col:2> 'const char *' lvalue Var 0x130026828 'colon' 'const char *'
|   | `-ImplicitCastExpr 0x130028ab0 <col:10, col:24> 'const char *' <NoOp>
|   |   `-CallExpr 0x130028a68 <col:10, col:24> 'char *'
|   |     |-ImplicitCastExpr 0x130028a50 <col:10> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1300275d8 <col:10> 'char *(const char *, int)' Function 0x1300272a0 'strchr' 'char *(const char *, int)'
|   |     |-ImplicitCastExpr 0x130028a98 <col:17> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x130028a00 <col:17> 'const char *' lvalue Var 0x1300268a8 'cp' 'const char *'
|   |     `-CharacterLiteral 0x130028a20 <col:21> 'int' 58
|   |-BinaryOperator 0x130028cb8 <line:15:2, col:27> 'const char *' '='
|   | |-DeclRefExpr 0x130028ae8 <col:2> 'const char *' lvalue Var 0x130026928 'slash' 'const char *'
|   | `-ImplicitCastExpr 0x130028ca0 <col:10, col:27> 'const char *' <IntegralToPointer>
|   |   `-CallExpr 0x130028c58 <col:10, col:27> 'int'
|   |     |-ImplicitCastExpr 0x130028c40 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x130028be8 <col:10> 'int ()' Function 0x130028b30 'strchrnul' 'int ()'
|   |     |-ImplicitCastExpr 0x130028c88 <col:20> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x130028c08 <col:20> 'const char *' lvalue Var 0x1300268a8 'cp' 'const char *'
|   |     `-CharacterLiteral 0x130028c28 <col:24> 'int' 47
|   |-IfStmt 0x1300297e0 <line:17:2, line:30:2> has_else
|   | |-BinaryOperator 0x130028db8 <line:17:6, col:22> 'int' '||'
|   | | |-UnaryOperator 0x130028d10 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x130028cf8 <col:7> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x130028cd8 <col:7> 'const char *' lvalue Var 0x1300267a8 'at' 'const char *'
|   | | `-BinaryOperator 0x130028d98 <col:13, col:22> 'int' '<='
|   | |   |-ImplicitCastExpr 0x130028d68 <col:13> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x130028d28 <col:13> 'const char *' lvalue Var 0x130026928 'slash' 'const char *'
|   | |   `-ImplicitCastExpr 0x130028d80 <col:22> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x130028d48 <col:22> 'const char *' lvalue Var 0x1300267a8 'at' 'const char *'
|   | |-CompoundStmt 0x130028e50 <col:26, line:20:2>
|   | | `-BinaryOperator 0x130028e30 <line:19:3, col:10> 'const char *' '='
|   | |   |-DeclRefExpr 0x130028dd8 <col:3> 'const char *' lvalue Var 0x1300269a8 'host' 'const char *'
|   | |   `-ImplicitCastExpr 0x130028e18 <col:10> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x130028df8 <col:10> 'const char *' lvalue Var 0x1300268a8 'cp' 'const char *'
|   | `-IfStmt 0x1300297b0 <line:21:7, line:30:2> has_else
|   |   |-BinaryOperator 0x130028f48 <line:21:11, col:27> 'int' '||'
|   |   | |-UnaryOperator 0x130028ea0 <col:11, col:12> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x130028e88 <col:12> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x130028e68 <col:12> 'const char *' lvalue Var 0x130026828 'colon' 'const char *'
|   |   | `-BinaryOperator 0x130028f28 <col:21, col:27> 'int' '<='
|   |   |   |-ImplicitCastExpr 0x130028ef8 <col:21> 'const char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x130028eb8 <col:21> 'const char *' lvalue Var 0x1300267a8 'at' 'const char *'
|   |   |   `-ImplicitCastExpr 0x130028f10 <col:27> 'const char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x130028ed8 <col:27> 'const char *' lvalue Var 0x130026828 'colon' 'const char *'
|   |   |-CompoundStmt 0x1300292b0 <col:34, line:25:2>
|   |   | |-BinaryOperator 0x1300291d8 <line:23:3, col:43> '<dependent type>' contains-errors '='
|   |   | | |-RecoveryExpr 0x130028fa0 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x130028f68 <col:3> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   |   | | `-CallExpr 0x130029190 <col:17, col:43> 'int'
|   |   | |   |-ImplicitCastExpr 0x130029178 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x1300290a8 <col:17> 'int ()' Function 0x130028ff0 'url_decode_mem' 'int ()'
|   |   | |   |-ImplicitCastExpr 0x1300291c0 <col:32> 'const char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1300290c8 <col:32> 'const char *' lvalue Var 0x1300268a8 'cp' 'const char *'
|   |   | |   `-BinaryOperator 0x130029158 <col:36, col:41> 'long' '-'
|   |   | |     |-ImplicitCastExpr 0x130029128 <col:36> 'const char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1300290e8 <col:36> 'const char *' lvalue Var 0x1300267a8 'at' 'const char *'
|   |   | |     `-ImplicitCastExpr 0x130029140 <col:41> 'const char *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x130029108 <col:41> 'const char *' lvalue Var 0x1300268a8 'cp' 'const char *'
|   |   | `-BinaryOperator 0x130029290 <line:24:3, col:15> 'const char *' '='
|   |   |   |-DeclRefExpr 0x1300291f8 <col:3> 'const char *' lvalue Var 0x1300269a8 'host' 'const char *'
|   |   |   `-BinaryOperator 0x130029270 <col:10, col:15> 'const char *' '+'
|   |   |     |-ImplicitCastExpr 0x130029258 <col:10> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x130029218 <col:10> 'const char *' lvalue Var 0x1300267a8 'at' 'const char *'
|   |   |     `-IntegerLiteral 0x130029238 <col:15> 'int' 1
|   |   `-CompoundStmt 0x130029788 <line:25:9, line:30:2>
|   |     |-BinaryOperator 0x130029460 <line:27:3, col:46> '<dependent type>' contains-errors '='
|   |     | |-RecoveryExpr 0x130029308 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   |     | | `-DeclRefExpr 0x1300292d0 <col:3> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   |     | `-CallExpr 0x130029418 <col:17, col:46> 'int'
|   |     |   |-ImplicitCastExpr 0x130029400 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x130029330 <col:17> 'int ()' Function 0x130028ff0 'url_decode_mem' 'int ()'
|   |     |   |-ImplicitCastExpr 0x130029448 <col:32> 'const char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x130029350 <col:32> 'const char *' lvalue Var 0x1300268a8 'cp' 'const char *'
|   |     |   `-BinaryOperator 0x1300293e0 <col:36, col:44> 'long' '-'
|   |     |     |-ImplicitCastExpr 0x1300293b0 <col:36> 'const char *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x130029370 <col:36> 'const char *' lvalue Var 0x130026828 'colon' 'const char *'
|   |     |     `-ImplicitCastExpr 0x1300293c8 <col:44> 'const char *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x130029390 <col:44> 'const char *' lvalue Var 0x1300268a8 'cp' 'const char *'
|   |     |-BinaryOperator 0x1300296b0 <line:28:3, col:59> '<dependent type>' contains-errors '='
|   |     | |-RecoveryExpr 0x1300294b8 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   |     | | `-DeclRefExpr 0x130029480 <col:3> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   |     | `-CallExpr 0x130029680 <col:17, col:59> 'int'
|   |     |   |-ImplicitCastExpr 0x130029668 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x1300294e0 <col:17> 'int ()' Function 0x130028ff0 'url_decode_mem' 'int ()'
|   |     |   |-BinaryOperator 0x130029558 <col:32, col:40> 'const char *' '+'
|   |     |   | |-ImplicitCastExpr 0x130029540 <col:32> 'const char *' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x130029500 <col:32> 'const char *' lvalue Var 0x130026828 'colon' 'const char *'
|   |     |   | `-IntegerLiteral 0x130029520 <col:40> 'int' 1
|   |     |   `-BinaryOperator 0x130029648 <col:43, col:58> 'long' '-'
|   |     |     |-ImplicitCastExpr 0x130029630 <col:43> 'const char *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x130029578 <col:43> 'const char *' lvalue Var 0x1300267a8 'at' 'const char *'
|   |     |     `-ParenExpr 0x130029610 <col:48, col:58> 'const char *'
|   |     |       `-BinaryOperator 0x1300295f0 <col:49, col:57> 'const char *' '+'
|   |     |         |-ImplicitCastExpr 0x1300295d8 <col:49> 'const char *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x130029598 <col:49> 'const char *' lvalue Var 0x130026828 'colon' 'const char *'
|   |     |         `-IntegerLiteral 0x1300295b8 <col:57> 'int' 1
|   |     `-BinaryOperator 0x130029768 <line:29:3, col:15> 'const char *' '='
|   |       |-DeclRefExpr 0x1300296d0 <col:3> 'const char *' lvalue Var 0x1300269a8 'host' 'const char *'
|   |       `-BinaryOperator 0x130029748 <col:10, col:15> 'const char *' '+'
|   |         |-ImplicitCastExpr 0x130029730 <col:10> 'const char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1300296f0 <col:10> 'const char *' lvalue Var 0x1300267a8 'at' 'const char *'
|   |         `-IntegerLiteral 0x130029710 <col:15> 'int' 1
|   |-IfStmt 0x127922e08 <line:32:2, line:33:46>
|   | |-BinaryOperator 0x1300298d8 <line:32:6, col:24> 'int' '>'
|   | | |-BinaryOperator 0x130029880 <col:6, col:18> 'long' '-'
|   | | | |-ImplicitCastExpr 0x130029850 <col:6> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x130029810 <col:6> 'const char *' lvalue Var 0x130026a28 'proto_end' 'const char *'
|   | | | `-ImplicitCastExpr 0x130029868 <col:18> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x130029830 <col:18> 'const char *' lvalue ParmVar 0x13000e2c8 'url' 'const char *'
|   | | `-ImplicitCastExpr 0x1300298c0 <col:24> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1300298a0 <col:24> 'int' 0
|   | `-BinaryOperator 0x127922de8 <line:33:3, col:46> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x130029930 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x1300298f8 <col:3> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   |   `-CallExpr 0x127922da0 <col:17, col:46> 'int'
|   |     |-ImplicitCastExpr 0x127922d88 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x127922cb8 <col:17> 'int ()' Function 0x127922c00 'xmemdupz' 'int ()'
|   |     |-ImplicitCastExpr 0x127922dd0 <col:26> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x127922cd8 <col:26> 'const char *' lvalue ParmVar 0x13000e2c8 'url' 'const char *'
|   |     `-BinaryOperator 0x127922d68 <col:31, col:43> 'long' '-'
|   |       |-ImplicitCastExpr 0x127922d38 <col:31> 'const char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x127922cf8 <col:31> 'const char *' lvalue Var 0x130026a28 'proto_end' 'const char *'
|   |       `-ImplicitCastExpr 0x127922d50 <col:43> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x127922d18 <col:43> 'const char *' lvalue ParmVar 0x13000e2c8 'url' 'const char *'
|   |-BinaryOperator 0x127922fb8 <line:34:2, col:45> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x127922e60 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x127922e28 <col:2> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   | `-CallExpr 0x127922f70 <col:12, col:45> 'int'
|   |   |-ImplicitCastExpr 0x127922f58 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x127922e88 <col:12> 'int ()' Function 0x130028ff0 'url_decode_mem' 'int ()'
|   |   |-ImplicitCastExpr 0x127922fa0 <col:27> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x127922ea8 <col:27> 'const char *' lvalue Var 0x1300269a8 'host' 'const char *'
|   |   `-BinaryOperator 0x127922f38 <col:33, col:41> 'long' '-'
|   |     |-ImplicitCastExpr 0x127922f08 <col:33> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x127922ec8 <col:33> 'const char *' lvalue Var 0x130026928 'slash' 'const char *'
|   |     `-ImplicitCastExpr 0x127922f20 <col:41> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x127922ee8 <col:41> 'const char *' lvalue Var 0x1300269a8 'host' 'const char *'
|   |-WhileStmt 0x1279230c8 <line:36:2, line:37:8>
|   | |-BinaryOperator 0x127923070 <line:36:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x127923058 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x127923040 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x127923010 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x127922ff8 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x127922fd8 <col:10> 'const char *' lvalue Var 0x130026928 'slash' 'const char *'
|   | | `-CharacterLiteral 0x127923028 <col:19> 'int' 47
|   | `-UnaryOperator 0x1279230b0 <line:37:3, col:8> 'const char *' postfix '++'
|   |   `-DeclRefExpr 0x127923090 <col:3> 'const char *' lvalue Var 0x130026928 'slash' 'const char *'
|   |-IfStmt 0x1279239b0 <line:38:2, line:44:2>
|   | |-ImplicitCastExpr 0x127923138 <line:38:6, col:7> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x127923120 <col:6, col:7> 'const char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x127923108 <col:7> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1279230e8 <col:7> 'const char *' lvalue Var 0x130026928 'slash' 'const char *'
|   | `-CompoundStmt 0x127923980 <col:14, line:44:2>
|   |   |-DeclStmt 0x1279231d0 <line:39:3, col:10>
|   |   | `-VarDecl 0x127923168 <col:3, col:9> col:9 used p 'char *'
|   |   |-BinaryOperator 0x1279233c0 <line:40:3, col:29> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x127923220 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x1279231e8 <col:3> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   |   | `-CallExpr 0x127923380 <col:13, col:29> 'int'
|   |   |   |-ImplicitCastExpr 0x127923368 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x127923328 <col:13> 'int ()' Function 0x127923270 'url_decode' 'int ()'
|   |   |   `-ImplicitCastExpr 0x1279233a8 <col:24> 'const char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x127923348 <col:24> 'const char *' lvalue Var 0x130026928 'slash' 'const char *'
|   |   |-BinaryOperator 0x127923728 <line:41:3, col:35> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x1279233e0 <col:3> 'char *' lvalue Var 0x127923168 'p' 'char *'
|   |   | `-BinaryOperator 0x127923708 <col:7, col:35> '<dependent type>' contains-errors '-'
|   |   |   |-BinaryOperator 0x1279236c8 <col:7, col:31> '<dependent type>' contains-errors '+'
|   |   |   | |-RecoveryExpr 0x127923438 <col:7, col:10> '<dependent type>' contains-errors lvalue
|   |   |   | | `-DeclRefExpr 0x127923400 <col:7> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   |   |   | `-CallExpr 0x1279236a0 <col:17, col:31> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x127923608 <col:17> 'unsigned long (const char *)' Function 0x127923498 'strlen' 'unsigned long (const char *)'
|   |   |   |   `-RecoveryExpr 0x127923660 <col:24, col:27> '<dependent type>' contains-errors lvalue
|   |   |   |     `-DeclRefExpr 0x127923628 <col:24> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   |   |   `-IntegerLiteral 0x1279236e8 <col:35> 'int' 1
|   |   `-WhileStmt 0x127923960 <line:42:3, line:43:11>
|   |     |-BinaryOperator 0x1279238a0 <line:42:10, col:31> 'int' contains-errors '&&'
|   |     | |-BinaryOperator 0x1279237c8 <col:10, col:17> 'int' contains-errors '>'
|   |     | | |-DeclRefExpr 0x127923748 <col:10> 'char *' lvalue Var 0x127923168 'p' 'char *'
|   |     | | `-RecoveryExpr 0x1279237a0 <col:14, col:17> '<dependent type>' contains-errors lvalue
|   |     | |   `-DeclRefExpr 0x127923768 <col:14> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   |     | `-BinaryOperator 0x127923880 <col:25, col:31> 'int' '=='
|   |     |   |-ImplicitCastExpr 0x127923868 <col:25, col:26> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x127923850 <col:25, col:26> 'char' <LValueToRValue>
|   |     |   |   `-UnaryOperator 0x127923820 <col:25, col:26> 'char' lvalue prefix '*' cannot overflow
|   |     |   |     `-ImplicitCastExpr 0x127923808 <col:26> 'char *' <LValueToRValue>
|   |     |   |       `-DeclRefExpr 0x1279237e8 <col:26> 'char *' lvalue Var 0x127923168 'p' 'char *'
|   |     |   `-CharacterLiteral 0x127923838 <col:31> 'int' 47
|   |     `-BinaryOperator 0x127923940 <line:43:4, col:11> 'char' '='
|   |       |-UnaryOperator 0x1279238f8 <col:4, col:6> 'char' lvalue prefix '*' cannot overflow
|   |       | `-UnaryOperator 0x1279238e0 <col:5, col:6> 'char *' postfix '--'
|   |       |   `-DeclRefExpr 0x1279238c0 <col:5> 'char *' lvalue Var 0x127923168 'p' 'char *'
|   |       `-ImplicitCastExpr 0x127923928 <col:11> 'char' <IntegralCast>
|   |         `-CharacterLiteral 0x127923910 <col:11> 'int' 0
|   |-IfStmt 0x127924268 <line:46:2, line:51:11>
|   | |-BinaryOperator 0x127924200 <line:46:6, line:50:56> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x127924080 <line:46:6, line:49:56> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x127923f00 <line:46:6, line:48:60> 'int' contains-errors '||'
|   | | | | |-BinaryOperator 0x127923d80 <line:46:6, line:47:60> 'int' contains-errors '||'
|   | | | | | |-BinaryOperator 0x127923c00 <line:46:6, col:60> 'int' contains-errors '<'
|   | | | | | | |-CallExpr 0x127923b90 <col:6, col:56> '<dependent type>' contains-errors
|   | | | | | | | |-DeclRefExpr 0x127923ab0 <col:6> 'int ()' Function 0x1279239f8 'check_url_component' 'int ()'
|   | | | | | | | |-DeclRefExpr 0x127923ad0 <col:26> 'const char *' lvalue ParmVar 0x13000e2c8 'url' 'const char *'
|   | | | | | | | |-DeclRefExpr 0x127923af0 <col:31> 'int' lvalue ParmVar 0x13000e348 'quiet' 'int'
|   | | | | | | | |-StringLiteral 0x127923b10 <col:38> 'char[4]' lvalue "STR"
|   | | | | | | | `-RecoveryExpr 0x127923b68 <col:45, col:48> '<dependent type>' contains-errors lvalue
|   | | | | | | |   `-DeclRefExpr 0x127923b30 <col:45> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   | | | | | | `-IntegerLiteral 0x127923bd0 <col:60> 'int' 0
|   | | | | | `-BinaryOperator 0x127923d60 <line:47:6, col:60> 'int' contains-errors '<'
|   | | | | |   |-CallExpr 0x127923d00 <col:6, col:56> '<dependent type>' contains-errors
|   | | | | |   | |-DeclRefExpr 0x127923c20 <col:6> 'int ()' Function 0x1279239f8 'check_url_component' 'int ()'
|   | | | | |   | |-DeclRefExpr 0x127923c40 <col:26> 'const char *' lvalue ParmVar 0x13000e2c8 'url' 'const char *'
|   | | | | |   | |-DeclRefExpr 0x127923c60 <col:31> 'int' lvalue ParmVar 0x13000e348 'quiet' 'int'
|   | | | | |   | |-StringLiteral 0x127923c80 <col:38> 'char[4]' lvalue "STR"
|   | | | | |   | `-RecoveryExpr 0x127923cd8 <col:45, col:48> '<dependent type>' contains-errors lvalue
|   | | | | |   |   `-DeclRefExpr 0x127923ca0 <col:45> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   | | | | |   `-IntegerLiteral 0x127923d40 <col:60> 'int' 0
|   | | | | `-BinaryOperator 0x127923ee0 <line:48:6, col:60> 'int' contains-errors '<'
|   | | | |   |-CallExpr 0x127923e80 <col:6, col:56> '<dependent type>' contains-errors
|   | | | |   | |-DeclRefExpr 0x127923da0 <col:6> 'int ()' Function 0x1279239f8 'check_url_component' 'int ()'
|   | | | |   | |-DeclRefExpr 0x127923dc0 <col:26> 'const char *' lvalue ParmVar 0x13000e2c8 'url' 'const char *'
|   | | | |   | |-DeclRefExpr 0x127923de0 <col:31> 'int' lvalue ParmVar 0x13000e348 'quiet' 'int'
|   | | | |   | |-StringLiteral 0x127923e00 <col:38> 'char[4]' lvalue "STR"
|   | | | |   | `-RecoveryExpr 0x127923e58 <col:45, col:48> '<dependent type>' contains-errors lvalue
|   | | | |   |   `-DeclRefExpr 0x127923e20 <col:45> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   | | | |   `-IntegerLiteral 0x127923ec0 <col:60> 'int' 0
|   | | | `-BinaryOperator 0x127924060 <line:49:6, col:56> 'int' contains-errors '<'
|   | | |   |-CallExpr 0x127924000 <col:6, col:52> '<dependent type>' contains-errors
|   | | |   | |-DeclRefExpr 0x127923f20 <col:6> 'int ()' Function 0x1279239f8 'check_url_component' 'int ()'
|   | | |   | |-DeclRefExpr 0x127923f40 <col:26> 'const char *' lvalue ParmVar 0x13000e2c8 'url' 'const char *'
|   | | |   | |-DeclRefExpr 0x127923f60 <col:31> 'int' lvalue ParmVar 0x13000e348 'quiet' 'int'
|   | | |   | |-StringLiteral 0x127923f80 <col:38> 'char[4]' lvalue "STR"
|   | | |   | `-RecoveryExpr 0x127923fd8 <col:45, col:48> '<dependent type>' contains-errors lvalue
|   | | |   |   `-DeclRefExpr 0x127923fa0 <col:45> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   | | |   `-IntegerLiteral 0x127924040 <col:56> 'int' 0
|   | | `-BinaryOperator 0x1279241e0 <line:50:6, col:56> 'int' contains-errors '<'
|   | |   |-CallExpr 0x127924180 <col:6, col:52> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x1279240a0 <col:6> 'int ()' Function 0x1279239f8 'check_url_component' 'int ()'
|   | |   | |-DeclRefExpr 0x1279240c0 <col:26> 'const char *' lvalue ParmVar 0x13000e2c8 'url' 'const char *'
|   | |   | |-DeclRefExpr 0x1279240e0 <col:31> 'int' lvalue ParmVar 0x13000e348 'quiet' 'int'
|   | |   | |-StringLiteral 0x127924100 <col:38> 'char[4]' lvalue "STR"
|   | |   | `-RecoveryExpr 0x127924158 <col:45, col:48> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x127924120 <col:45> 'struct credential *' lvalue ParmVar 0x13000e248 'c' 'struct credential *'
|   | |   `-IntegerLiteral 0x1279241c0 <col:56> 'int' 0
|   | `-ReturnStmt 0x127924258 <line:51:3, col:11>
|   |   `-UnaryOperator 0x127924240 <col:10, col:11> 'int' prefix '-'
|   |     `-IntegerLiteral 0x127924220 <col:11> 'int' 1
|   `-ReturnStmt 0x1279242a8 <line:53:2, col:9>
|     `-IntegerLiteral 0x127924288 <col:9> 'int' 0
|-FunctionDecl 0x130026d40 <line:9:14> col:14 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x130026e40 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x130026ea8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x130026de8 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x1300272a0 <line:13:7> col:7 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1300273a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x130027408 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x130027348 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x127923498 <line:41:17> col:17 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x127923598 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x127923540 <<invalid sloc>> Implicit 902
