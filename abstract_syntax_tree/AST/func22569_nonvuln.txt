TranslationUnitDecl 0x14b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b855bd0 '__int128'
|-TypedefDecl 0x14b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b855bf0 'unsigned __int128'
|-TypedefDecl 0x14c00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14b856580 '__NSConstantString_tag'
|-TypedefDecl 0x14c00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b855d90 '__SVInt8_t'
|-TypedefDecl 0x14c00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b855db0 '__SVInt16_t'
|-TypedefDecl 0x14c00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b855dd0 '__SVInt32_t'
|-TypedefDecl 0x14c00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b855df0 '__SVInt64_t'
|-TypedefDecl 0x14c00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b855e10 '__SVUint8_t'
|-TypedefDecl 0x14c00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b855e30 '__SVUint16_t'
|-TypedefDecl 0x14c00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b855e50 '__SVUint32_t'
|-TypedefDecl 0x14c00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b855e70 '__SVUint64_t'
|-TypedefDecl 0x14c00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b855e90 '__SVFloat16_t'
|-TypedefDecl 0x14c00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b856390 '__SVBool_t'
|-TypedefDecl 0x14c00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b8563f0 '__SVCount_t'
|-TypedefDecl 0x14c00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c00dbb0 'char *'
|   `-BuiltinType 0x14b8556b0 'char'
|-TypedefDecl 0x14c00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c00dbb0 'char *'
|   `-BuiltinType 0x14b8556b0 'char'
|-FunctionDecl 0x14c00dd98 <dataset_diviso_filec/func22569_nonvuln.c:1:1, line:82:1> line:1:14 read_line 'char *(void)' static
| `-CompoundStmt 0x14c029f98 <line:2:1, line:82:1>
|   |-DeclStmt 0x14c00e028 <line:3:5, col:31>
|   | |-VarDecl 0x14c00dea0 <col:5, col:18> col:18 used size 'unsigned int'
|   | |-VarDecl 0x14c00df20 <col:5, col:24> col:24 used c 'unsigned int'
|   | `-VarDecl 0x14c00dfa0 <col:5, col:27> col:27 used next 'unsigned int'
|   |-DeclStmt 0x14c00e0f8 <line:4:5, col:35>
|   | `-VarDecl 0x14c00e058 <col:5, col:32> col:24 used delta 'const unsigned int' cinit
|   |   `-ImplicitCastExpr 0x14c00e0e0 <col:32> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x14c00e0c0 <col:32> 'int' 512
|   |-DeclStmt 0x14c00e1c8 <line:5:5, col:31>
|   | `-VarDecl 0x14c00e128 <col:5, col:30> col:24 used pad 'const unsigned int' cinit
|   |   `-ImplicitCastExpr 0x14c00e1b0 <col:30> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x14c00e190 <col:30> 'int' 8
|   |-DeclStmt 0x14c00e298 <line:6:5, col:29>
|   | `-VarDecl 0x14c00e1f8 <col:5, col:28> col:18 used nr_cont 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x14c00e280 <col:28> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x14c00e260 <col:28> 'int' 0
|   |-DeclStmt 0x14c00e3e0 <line:8:5, col:21>
|   | |-VarDecl 0x14c00e2e0 <col:5, col:11> col:11 used buffer 'char *'
|   | `-VarDecl 0x14c00e360 <col:5, col:20> col:20 used p 'char *'
|   |-BinaryOperator 0x14c027ff0 <line:11:5, col:26> 'char *' '='
|   | |-DeclRefExpr 0x14c027a00 <col:5> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   | `-ImplicitCastExpr 0x14c027bb8 <col:9, col:26> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x14c027b98 <col:9, col:26> 'int'
|   |     `-ImplicitCastExpr 0x14c027b80 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x14c027b30 <col:9> 'int ()' Function 0x14c027a78 'line_from_stdmac' 'int ()'
|   |-IfStmt 0x14c028090 <line:12:5, line:13:16>
|   | |-ImplicitCastExpr 0x14c028030 <line:12:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14c028010 <col:9> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   | `-ReturnStmt 0x14c028080 <line:13:9, col:16>
|   |   `-ImplicitCastExpr 0x14c028068 <col:16> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14c028048 <col:16> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   |-BinaryOperator 0x14c028108 <line:15:5, col:12> 'unsigned int' '='
|   | |-DeclRefExpr 0x14c0280b0 <col:5> 'unsigned int' lvalue Var 0x14c00dea0 'size' 'unsigned int'
|   | `-ImplicitCastExpr 0x14c0280f0 <col:12> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x14c0280d0 <col:12> 'const unsigned int' lvalue Var 0x14c00e058 'delta' 'const unsigned int'
|   |-BinaryOperator 0x14c028370 <line:16:5, col:34> 'char *' '='
|   | |-DeclRefExpr 0x14c028180 <col:5> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   | `-BinaryOperator 0x14c028350 <col:9, col:34> 'char *' '='
|   |   |-DeclRefExpr 0x14c0281a0 <col:9> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
|   |   `-ImplicitCastExpr 0x14c028338 <col:18, col:34> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x14c0282f8 <col:18, col:34> 'int'
|   |       |-ImplicitCastExpr 0x14c0282e0 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14c0282a0 <col:18> 'int ()' Function 0x14c0281e8 'nasm_malloc' 'int ()'
|   |       `-ImplicitCastExpr 0x14c028320 <col:30> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x14c0282c0 <col:30> 'unsigned int' lvalue Var 0x14c00dea0 'size' 'unsigned int'
|   |-ForStmt 0x14c0295f0 <line:18:5, line:66:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x14c0295b0 <line:18:14, line:66:5>
|   |   |-BinaryOperator 0x14c0285e8 <line:19:9, col:27> 'unsigned int' contains-errors '='
|   |   | |-DeclRefExpr 0x14c028390 <col:9> 'unsigned int' lvalue Var 0x14c00df20 'c' 'unsigned int'
|   |   | `-CallExpr 0x14c0285c0 <col:13, col:27> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x14c028490 <col:13> 'int ()' Function 0x14c0283d8 'fgetc' 'int ()'
|   |   |   `-CXXDependentScopeMemberExpr 0x14c028578 <col:19, col:25> '<dependent type>' contains-errors lvalue ->fp
|   |   |     `-RecoveryExpr 0x14c028558 <col:19> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x14c0288e0 <line:20:9, line:23:9>
|   |   | |-BinaryOperator 0x14c0287c8 <line:20:13, col:25> 'int' contains-errors '=='
|   |   | | |-CStyleCastExpr 0x14c028780 <col:13, col:20> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x14c028768 <col:18, col:20> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   | | |   `-ParenExpr 0x14c028660 <col:18, col:20> 'unsigned int' lvalue
|   |   | | |     `-DeclRefExpr 0x14c028608 <col:19> 'unsigned int' lvalue Var 0x14c00df20 'c' 'unsigned int'
|   |   | | `-RecoveryExpr 0x14c0287a8 <col:25> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x14c0288c0 <col:30, line:23:9>
|   |   |   |-BinaryOperator 0x14c028898 <line:21:13, col:20> 'char' '='
|   |   |   | |-ArraySubscriptExpr 0x14c028840 <col:13, col:16> 'char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x14c028828 <col:13> 'char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x14c0287e8 <col:13> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   |   |   | | `-IntegerLiteral 0x14c028808 <col:15> 'int' 0
|   |   |   | `-ImplicitCastExpr 0x14c028880 <col:20> 'char' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x14c028860 <col:20> 'int' 0
|   |   |   `-BreakStmt 0x14c0288b8 <line:22:13>
|   |   |-SwitchStmt 0x14c028938 <line:25:9, line:52:9>
|   |   | |-ImplicitCastExpr 0x14c028920 <line:25:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14c028900 <col:17> 'unsigned int' lvalue Var 0x14c00df20 'c' 'unsigned int'
|   |   | `-CompoundStmt 0x14b924808 <col:20, line:52:9>
|   |   |   |-CaseStmt 0x14c0289a8 <line:26:9, line:27:34>
|   |   |   | |-ImplicitCastExpr 0x14c028990 <line:26:14> 'unsigned int' <IntegralCast>
|   |   |   | | `-ConstantExpr 0x14c028978 <col:14> 'int'
|   |   |   | |   `-CharacterLiteral 0x14c028960 <col:14> 'int' 13
|   |   |   | `-BinaryOperator 0x14b923f58 <line:27:13, col:34> 'unsigned int' contains-errors '='
|   |   |   |   |-DeclRefExpr 0x14c0289d0 <col:13> 'unsigned int' lvalue Var 0x14c00dfa0 'next' 'unsigned int'
|   |   |   |   `-CallExpr 0x14b923f30 <col:20, col:34> '<dependent type>' contains-errors
|   |   |   |     |-DeclRefExpr 0x14b923e00 <col:20> 'int ()' Function 0x14c0283d8 'fgetc' 'int ()'
|   |   |   |     `-CXXDependentScopeMemberExpr 0x14b923ee8 <col:26, col:32> '<dependent type>' contains-errors lvalue ->fp
|   |   |   |       `-RecoveryExpr 0x14b923ec8 <col:26> '<dependent type>' contains-errors lvalue
|   |   |   |-IfStmt 0x14b924248 <line:28:13, line:29:38>
|   |   |   | |-BinaryOperator 0x14b923fe0 <line:28:17, col:25> 'int' '!='
|   |   |   | | |-ImplicitCastExpr 0x14b923fb0 <col:17> 'unsigned int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x14b923f78 <col:17> 'unsigned int' lvalue Var 0x14c00dfa0 'next' 'unsigned int'
|   |   |   | | `-ImplicitCastExpr 0x14b923fc8 <col:25> 'unsigned int' <IntegralCast>
|   |   |   | |   `-CharacterLiteral 0x14b923f98 <col:25> 'int' 10
|   |   |   | `-CallExpr 0x14b924218 <line:29:17, col:38> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x14b9240e0 <col:17> 'int ()' Function 0x14b924028 'ungetc' 'int ()'
|   |   |   |   |-DeclRefExpr 0x14b924100 <col:24> 'unsigned int' lvalue Var 0x14c00dfa0 'next' 'unsigned int'
|   |   |   |   `-CXXDependentScopeMemberExpr 0x14b9241d0 <col:30, col:36> '<dependent type>' contains-errors lvalue ->fp
|   |   |   |     `-RecoveryExpr 0x14b9241b0 <col:30> '<dependent type>' contains-errors lvalue
|   |   |   |-IfStmt 0x14b9242d8 <line:30:13, line:33:13>
|   |   |   | |-RecoveryExpr 0x14b924280 <line:30:17> '<dependent type>' contains-errors lvalue
|   |   |   | `-CompoundStmt 0x14b9242c0 <col:23, line:33:13>
|   |   |   |   `-ContinueStmt 0x14b9242b8 <line:32:17>
|   |   |   |-BreakStmt 0x14b9242f8 <line:34:13>
|   |   |   |-CaseStmt 0x14b924348 <line:36:9, line:40:13>
|   |   |   | |-ImplicitCastExpr 0x14b924330 <line:36:14> 'unsigned int' <IntegralCast>
|   |   |   | | `-ConstantExpr 0x14b924318 <col:14> 'int'
|   |   |   | |   `-CharacterLiteral 0x14b924300 <col:14> 'int' 10
|   |   |   | `-IfStmt 0x14b9243e0 <line:37:13, line:40:13>
|   |   |   |   |-RecoveryExpr 0x14b924388 <line:37:17> '<dependent type>' contains-errors lvalue
|   |   |   |   `-CompoundStmt 0x14b9243c8 <col:23, line:40:13>
|   |   |   |     `-ContinueStmt 0x14b9243c0 <line:39:17>
|   |   |   |-BreakStmt 0x14b924400 <line:41:13>
|   |   |   |-CaseStmt 0x14b924450 <line:43:9, line:44:34>
|   |   |   | |-ImplicitCastExpr 0x14b924438 <line:43:14> 'unsigned int' <IntegralCast>
|   |   |   | | `-ConstantExpr 0x14b924420 <col:14> 'int'
|   |   |   | |   `-CharacterLiteral 0x14b924408 <col:14> 'int' 92
|   |   |   | `-BinaryOperator 0x14b9245f0 <line:44:13, col:34> 'unsigned int' contains-errors '='
|   |   |   |   |-DeclRefExpr 0x14b924478 <col:13> 'unsigned int' lvalue Var 0x14c00dfa0 'next' 'unsigned int'
|   |   |   |   `-CallExpr 0x14b9245c8 <col:20, col:34> '<dependent type>' contains-errors
|   |   |   |     |-DeclRefExpr 0x14b924498 <col:20> 'int ()' Function 0x14c0283d8 'fgetc' 'int ()'
|   |   |   |     `-CXXDependentScopeMemberExpr 0x14b924580 <col:26, col:32> '<dependent type>' contains-errors lvalue ->fp
|   |   |   |       `-RecoveryExpr 0x14b924560 <col:26> '<dependent type>' contains-errors lvalue
|   |   |   |-IfStmt 0x14b9247e0 <line:46:13, line:50:13>
|   |   |   | |-BinaryOperator 0x14b924760 <line:46:17, col:41> 'int' '||'
|   |   |   | | |-BinaryOperator 0x14b9246b8 <col:17, col:25> 'int' '=='
|   |   |   | | | |-ImplicitCastExpr 0x14b924688 <col:17> 'unsigned int' <LValueToRValue>
|   |   |   | | | | `-DeclRefExpr 0x14b924650 <col:17> 'unsigned int' lvalue Var 0x14c00dfa0 'next' 'unsigned int'
|   |   |   | | | `-ImplicitCastExpr 0x14b9246a0 <col:25> 'unsigned int' <IntegralCast>
|   |   |   | | |   `-CharacterLiteral 0x14b924670 <col:25> 'int' 13
|   |   |   | | `-BinaryOperator 0x14b924740 <col:33, col:41> 'int' '=='
|   |   |   | |   |-ImplicitCastExpr 0x14b924710 <col:33> 'unsigned int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x14b9246d8 <col:33> 'unsigned int' lvalue Var 0x14c00dfa0 'next' 'unsigned int'
|   |   |   | |   `-ImplicitCastExpr 0x14b924728 <col:41> 'unsigned int' <IntegralCast>
|   |   |   | |     `-CharacterLiteral 0x14b9246f8 <col:41> 'int' 10
|   |   |   | `-CompoundStmt 0x14b9247c0 <col:47, line:50:13>
|   |   |   |   |-UnaryOperator 0x14b9247a0 <line:48:17, col:24> 'unsigned int' postfix '++'
|   |   |   |   | `-DeclRefExpr 0x14b924780 <col:17> 'unsigned int' lvalue Var 0x14c00e1f8 'nr_cont' 'unsigned int'
|   |   |   |   `-ContinueStmt 0x14b9247b8 <line:49:17>
|   |   |   `-BreakStmt 0x14b924800 <line:51:13>
|   |   |-IfStmt 0x14b924a60 <line:54:9, line:57:9>
|   |   | |-BinaryOperator 0x14b924970 <line:54:13, col:31> 'int' '||'
|   |   | | |-BinaryOperator 0x14b9248c8 <col:13, col:18> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x14b924898 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x14b924860 <col:13> 'unsigned int' lvalue Var 0x14c00df20 'c' 'unsigned int'
|   |   | | | `-ImplicitCastExpr 0x14b9248b0 <col:18> 'unsigned int' <IntegralCast>
|   |   | | |   `-CharacterLiteral 0x14b924880 <col:18> 'int' 13
|   |   | | `-BinaryOperator 0x14b924950 <col:26, col:31> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x14b924920 <col:26> 'unsigned int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x14b9248e8 <col:26> 'unsigned int' lvalue Var 0x14c00df20 'c' 'unsigned int'
|   |   | |   `-ImplicitCastExpr 0x14b924938 <col:31> 'unsigned int' <IntegralCast>
|   |   | |     `-CharacterLiteral 0x14b924908 <col:31> 'int' 10
|   |   | `-CompoundStmt 0x14b924a40 <col:37, line:57:9>
|   |   |   |-BinaryOperator 0x14b924a18 <line:55:13, col:20> 'char' '='
|   |   |   | |-UnaryOperator 0x14b9249c8 <col:13, col:15> 'char' lvalue prefix '*' cannot overflow
|   |   |   | | `-UnaryOperator 0x14b9249b0 <col:14, col:15> 'char *' postfix '++'
|   |   |   | |   `-DeclRefExpr 0x14b924990 <col:14> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   |   |   | `-ImplicitCastExpr 0x14b924a00 <col:20> 'char' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x14b9249e0 <col:20> 'int' 0
|   |   |   `-BreakStmt 0x14b924a38 <line:56:13>
|   |   |-IfStmt 0x14c029490 <line:59:9, line:63:9>
|   |   | |-BinaryOperator 0x14b924c18 <line:59:13, col:38> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x14b924c00 <col:13> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x14b924a80 <col:13> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   |   | | `-ParenExpr 0x14b924be0 <col:18, col:38> 'char *'
|   |   | |   `-BinaryOperator 0x14b924bc0 <col:19, col:35> 'char *' '-'
|   |   | |     |-BinaryOperator 0x14b924b10 <col:19, col:28> 'char *' '+'
|   |   | |     | |-ImplicitCastExpr 0x14b924ae0 <col:19> 'char *' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x14b924aa0 <col:19> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
|   |   | |     | `-ImplicitCastExpr 0x14b924af8 <col:28> 'unsigned int' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x14b924ac0 <col:28> 'unsigned int' lvalue Var 0x14c00dea0 'size' 'unsigned int'
|   |   | |     `-ImplicitCastExpr 0x14b924b50 <col:35> 'unsigned int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x14b924b30 <col:35> 'const unsigned int' lvalue Var 0x14c00e128 'pad' 'const unsigned int'
|   |   | `-CompoundStmt 0x14c029468 <col:41, line:63:9>
|   |   |   |-BinaryOperator 0x14c029298 <line:60:13, col:55> 'char *' '='
|   |   |   | |-DeclRefExpr 0x14b924c38 <col:13> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
|   |   |   | `-ImplicitCastExpr 0x14c029280 <col:22, col:55> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x14c029238 <col:22, col:55> 'int'
|   |   |   |     |-ImplicitCastExpr 0x14c029220 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x14b924d38 <col:22> 'int ()' Function 0x14b924c80 'nasm_realloc' 'int ()'
|   |   |   |     |-ImplicitCastExpr 0x14c029268 <col:35> 'char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x14b924d58 <col:35> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
|   |   |   |     `-BinaryOperator 0x14c029200 <col:43, col:50> 'unsigned int' '+'
|   |   |   |       |-ImplicitCastExpr 0x14b924db8 <col:43> 'unsigned int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x14b924d78 <col:43> 'unsigned int' lvalue Var 0x14c00dea0 'size' 'unsigned int'
|   |   |   |       `-ImplicitCastExpr 0x14b924dd0 <col:50> 'unsigned int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x14b924d98 <col:50> 'const unsigned int' lvalue Var 0x14c00e058 'delta' 'const unsigned int'
|   |   |   |-BinaryOperator 0x14c0293c0 <line:61:13, col:33> 'char *' '='
|   |   |   | |-DeclRefExpr 0x14c0292b8 <col:13> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   |   |   | `-BinaryOperator 0x14c0293a0 <col:17, col:33> 'char *' '-'
|   |   |   |   |-BinaryOperator 0x14c029348 <col:17, col:26> 'char *' '+'
|   |   |   |   | |-ImplicitCastExpr 0x14c029318 <col:17> 'char *' <LValueToRValue>
|   |   |   |   | | `-DeclRefExpr 0x14c0292d8 <col:17> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
|   |   |   |   | `-ImplicitCastExpr 0x14c029330 <col:26> 'unsigned int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x14c0292f8 <col:26> 'unsigned int' lvalue Var 0x14c00dea0 'size' 'unsigned int'
|   |   |   |   `-ImplicitCastExpr 0x14c029388 <col:33> 'unsigned int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x14c029368 <col:33> 'const unsigned int' lvalue Var 0x14c00e128 'pad' 'const unsigned int'
|   |   |   `-CompoundAssignOperator 0x14c029438 <line:62:13, col:21> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |     |-DeclRefExpr 0x14c0293e0 <col:13> 'unsigned int' lvalue Var 0x14c00dea0 'size' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x14c029420 <col:21> 'unsigned int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14c029400 <col:21> 'const unsigned int' lvalue Var 0x14c00e058 'delta' 'const unsigned int'
|   |   `-BinaryOperator 0x14c029590 <line:65:9, col:31> 'char' '='
|   |     |-UnaryOperator 0x14c0294e8 <col:9, col:11> 'char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x14c0294d0 <col:10, col:11> 'char *' postfix '++'
|   |     |   `-DeclRefExpr 0x14c0294b0 <col:10> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   |     `-ImplicitCastExpr 0x14c029578 <col:16, col:31> 'char' <IntegralCast>
|   |       `-CStyleCastExpr 0x14c029550 <col:16, col:31> 'unsigned char' <IntegralCast>
|   |         `-ImplicitCastExpr 0x14c029538 <col:31> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x14c029500 <col:31> 'unsigned int' lvalue Var 0x14c00df20 'c' 'unsigned int'
|   |-IfStmt 0x14c029848 <line:68:5, line:71:5>
|   | |-BinaryOperator 0x14c029698 <line:68:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x14c029668 <col:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14c029628 <col:9> 'char *' lvalue Var 0x14c00e360 'p' 'char *'
|   | | `-ImplicitCastExpr 0x14c029680 <col:14> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c029648 <col:14> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
|   | `-CompoundStmt 0x14c029830 <col:22, line:71:5>
|   |   `-CallExpr 0x14c0297f0 <line:69:9, col:25> 'int'
|   |     |-ImplicitCastExpr 0x14c0297d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14c029798 <col:9> 'int ()' Function 0x14c0296e0 'nasm_free' 'int ()'
|   |     `-ImplicitCastExpr 0x14c029818 <col:19> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14c0297b8 <col:19> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
|   |-BinaryOperator 0x14c029f10 <line:77:5, col:38> 'char' '='
|   | |-ArraySubscriptExpr 0x14c029ec0 <col:5, col:34> 'char' lvalue
|   | | |-ImplicitCastExpr 0x14c029ea8 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14c029ac0 <col:5> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
|   | | `-CallExpr 0x14c029e18 <col:12, col:33> 'unsigned long'
|   | |   |-ImplicitCastExpr 0x14c029e00 <col:12> 'unsigned long (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x14c029d00 <col:12> 'unsigned long (const char *, const char *)' Function 0x14c029b20 'strcspn' 'unsigned long (const char *, const char *)'
|   | |   |-ImplicitCastExpr 0x14c029e60 <col:20> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x14c029e48 <col:20> 'char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x14c029d20 <col:20> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
|   | |   `-ImplicitCastExpr 0x14c029e90 <col:28> 'const char *' <NoOp>
|   | |     `-ImplicitCastExpr 0x14c029e78 <col:28> 'char *' <ArrayToPointerDecay>
|   | |       `-StringLiteral 0x14c029d80 <col:28> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x14c029ef8 <col:38> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x14c029ee0 <col:38> 'int' 0
|   `-ReturnStmt 0x14c029f88 <line:81:5, col:12>
|     `-ImplicitCastExpr 0x14c029f70 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x14c029f50 <col:12> 'char *' lvalue Var 0x14c00e2e0 'buffer' 'char *'
`-FunctionDecl 0x14c029b20 <line:77:12> col:12 implicit used strcspn 'unsigned long (const char *, const char *)' extern
  |-ParmVarDecl 0x14c029c20 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14c029c88 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14c029bc8 <<invalid sloc>> Implicit 894
