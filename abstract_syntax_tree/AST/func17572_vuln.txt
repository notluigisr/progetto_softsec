TranslationUnitDecl 0x135028008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x135028eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1350285d0 '__int128'
|-TypedefDecl 0x135028f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1350285f0 'unsigned __int128'
|-TypedefDecl 0x1350f8c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1350f8a00 'struct __NSConstantString_tag'
|   `-Record 0x135028f80 '__NSConstantString_tag'
|-TypedefDecl 0x1350f8c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135028790 '__SVInt8_t'
|-TypedefDecl 0x1350f8d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1350287b0 '__SVInt16_t'
|-TypedefDecl 0x1350f8d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1350287d0 '__SVInt32_t'
|-TypedefDecl 0x1350f8dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1350287f0 '__SVInt64_t'
|-TypedefDecl 0x1350f8e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135028810 '__SVUint8_t'
|-TypedefDecl 0x1350f8ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135028830 '__SVUint16_t'
|-TypedefDecl 0x1350f8f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135028850 '__SVUint32_t'
|-TypedefDecl 0x1350f8f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135028870 '__SVUint64_t'
|-TypedefDecl 0x1350f8fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135028890 '__SVFloat16_t'
|-TypedefDecl 0x1350f9040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1350288b0 '__SVFloat32_t'
|-TypedefDecl 0x1350f90a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1350288d0 '__SVFloat64_t'
|-TypedefDecl 0x1350f9110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1350288f0 '__SVBfloat16_t'
|-TypedefDecl 0x1350f9178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135028910 '__clang_svint8x2_t'
|-TypedefDecl 0x1350f91e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135028930 '__clang_svint16x2_t'
|-TypedefDecl 0x1350f9248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135028950 '__clang_svint32x2_t'
|-TypedefDecl 0x1350f92b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135028970 '__clang_svint64x2_t'
|-TypedefDecl 0x1350f9318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135028990 '__clang_svuint8x2_t'
|-TypedefDecl 0x1350f9380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1350289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1350f93e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1350289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1350f9450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1350289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1350f94b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135028a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1350f9520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135028a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1350f9588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135028a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1350f95f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135028a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1350f9658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135028a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1350f96c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x135028ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x1350f9728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x135028ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x1350f9790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x135028af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1350f97f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135028b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1350f9860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135028b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1350f98c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135028b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1350f9930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135028b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1350f9998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135028b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1350fa200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x135028bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1350fa268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x135028bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1350fa2d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x135028bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1350fa338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135028c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1350fa3a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135028c30 '__clang_svint16x4_t'
|-TypedefDecl 0x1350fa408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135028c50 '__clang_svint32x4_t'
|-TypedefDecl 0x1350fa470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135028c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1350fa4d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135028c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1350fa540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x135028cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1350fa5a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x135028cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1350fa610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x135028cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1350fa678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135028d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1350fa6e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135028d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1350fa748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135028d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1350fa7b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135028d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1350fa818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135028d90 '__SVBool_t'
|-TypedefDecl 0x1350fa880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x135028db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1350fa8e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x135028dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1350fa950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x135028df0 '__SVCount_t'
|-TypedefDecl 0x1350fa9f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1350fa9b0 'char *'
|   `-BuiltinType 0x1350280b0 'char'
|-TypedefDecl 0x1350faa68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1350fa9b0 'char *'
|   `-BuiltinType 0x1350280b0 'char'
`-FunctionDecl 0x135113888 <dataset_diviso_filec/func17572_vuln.c:1:1, line:45:1> line:1:5 invalid vcc_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)'
  |-ParmVarDecl 0x1350fb048 <col:17, col:31> col:31 iocb 'struct kiocb *'
  |-ParmVarDecl 0x135113428 <col:37, col:52> col:52 used sock 'struct socket *'
  |-ParmVarDecl 0x1351135f8 <col:58, col:73> col:73 used msg 'struct msghdr *'
  |-ParmVarDecl 0x135113690 <line:2:3, col:10> col:10 invalid size 'int'
  |-ParmVarDecl 0x135113710 <col:16, col:20> col:20 used flags 'int'
  `-CompoundStmt 0x136808d08 <line:3:1, line:45:1>
    |-DeclStmt 0x135113ba8 <line:4:2, col:28>
    | |-RecordDecl 0x135113958 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x135113ac8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x135113b68 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x135113b30 <col:20> 'struct socket *' lvalue ParmVar 0x135113428 'sock' 'struct socket *'
    |-DeclStmt 0x135113da8 <line:5:2, col:21>
    | |-RecordDecl 0x135113bc0 <col:2, col:9> col:9 struct atm_vcc
    | `-VarDecl 0x135113d28 <col:2, col:18> col:18 used vcc 'struct atm_vcc *'
    |-DeclStmt 0x135113fa8 <line:6:2, col:21>
    | |-RecordDecl 0x135113dc0 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x135113f28 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-DeclStmt 0x135114170 <line:7:2, col:29>
    | |-VarDecl 0x135113fd8 <col:2, col:6> col:6 used copied 'int'
    | `-VarDecl 0x135114058 <col:2, col:23> col:14 used error 'int' cinit
    |   `-UnaryOperator 0x135114140 <col:22, col:23> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x135114128 <col:23> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x135114108 <col:23> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x135114308 <line:9:2, line:10:11>
    | |-BinaryOperator 0x135114240 <line:9:6, col:21> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x1351141c0 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x135114188 <col:6> 'struct socket *' lvalue ParmVar 0x135113428 'sock' 'struct socket *'
    | | `-RecoveryExpr 0x135114220 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1351142f8 <line:10:3, col:11>
    |   `-UnaryOperator 0x1351142e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1351142c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1351142a8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x134830060 <line:13:2, line:14:11>
    | |-RecoveryExpr 0x135114398 <line:13:6, col:39> '_Bool' contains-errors
    | `-ReturnStmt 0x134830050 <line:14:3, col:11>
    |   `-UnaryOperator 0x134830038 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x134830020 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x134830000 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1348302e0 <line:16:2, col:19> 'struct atm_vcc *' '='
    | |-DeclRefExpr 0x134830080 <col:2> 'struct atm_vcc *' lvalue Var 0x135113d28 'vcc' 'struct atm_vcc *'
    | `-ImplicitCastExpr 0x1348302c8 <col:8, col:19> 'struct atm_vcc *' <IntegralToPointer>
    |   `-CallExpr 0x134830288 <col:8, col:19> 'int'
    |     |-ImplicitCastExpr 0x134830270 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x134830200 <col:8> 'int ()' Function 0x134830148 'ATM_SD' 'int ()'
    |     `-ImplicitCastExpr 0x1348302b0 <col:15> 'struct socket *' <LValueToRValue>
    |       `-DeclRefExpr 0x134830220 <col:15> 'struct socket *' lvalue ParmVar 0x135113428 'sock' 'struct socket *'
    |-IfStmt 0x134830850 <line:17:2, line:20:10>
    | |-BinaryOperator 0x134830800 <line:17:6, line:19:41> 'int' contains-errors '||'
    | | |-BinaryOperator 0x134830778 <line:17:6, line:18:40> 'int' contains-errors '||'
    | | | |-CallExpr 0x1348306f8 <line:17:6, col:43> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x1348303e0 <col:6> 'int ()' Function 0x134830328 'test_bit' 'int ()'
    | | | | |-RecoveryExpr 0x1348306d8 <col:15> '<dependent type>' contains-errors lvalue
    | | | | `-UnaryOperator 0x134830478 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | |   `-RecoveryExpr 0x134830450 <col:33, col:38> '<dependent type>' contains-errors lvalue
    | | | |     `-DeclRefExpr 0x134830418 <col:33> 'struct atm_vcc *' lvalue Var 0x135113d28 'vcc' 'struct atm_vcc *'
    | | | `-CallExpr 0x134830748 <line:18:6, col:40> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x1348304c0 <col:6> 'int ()' Function 0x134830328 'test_bit' 'int ()'
    | | |   |-RecoveryExpr 0x134830728 <col:15> '<dependent type>' contains-errors lvalue
    | | |   `-UnaryOperator 0x134830558 <col:29, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-RecoveryExpr 0x134830530 <col:30, col:35> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x1348304f8 <col:30> 'struct atm_vcc *' lvalue Var 0x135113d28 'vcc' 'struct atm_vcc *'
    | | `-UnaryOperator 0x1348307e8 <line:19:6, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x1348307b8 <col:7, col:41> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x1348305c0 <col:7> 'int ()' Function 0x134830328 'test_bit' 'int ()'
    | |     |-RecoveryExpr 0x134830798 <col:16> '<dependent type>' contains-errors lvalue
    | |     `-UnaryOperator 0x134830658 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |       `-RecoveryExpr 0x134830630 <col:31, col:36> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x1348305f8 <col:31> 'struct atm_vcc *' lvalue Var 0x135113d28 'vcc' 'struct atm_vcc *'
    | `-ReturnStmt 0x134830840 <line:20:3, col:10>
    |   `-IntegerLiteral 0x134830820 <col:10> 'int' 0
    |-BinaryOperator 0x134830b78 <line:22:2, col:65> 'struct sk_buff *' contains-errors '='
    | |-DeclRefExpr 0x134830870 <col:2> 'struct sk_buff *' lvalue Var 0x135113f28 'skb' 'struct sk_buff *'
    | `-CallExpr 0x134830b38 <col:8, col:65> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x134830970 <col:8> 'int ()' Function 0x1348308b8 'skb_recv_datagram' 'int ()'
    |   |-DeclRefExpr 0x134830990 <col:26> 'struct sock *' contains-errors lvalue Var 0x135113ac8 'sk' 'struct sock *'
    |   |-DeclRefExpr 0x1348309b0 <col:30> 'int' lvalue ParmVar 0x135113710 'flags' 'int'
    |   |-BinaryOperator 0x134830b18 <col:37, col:45> '<dependent type>' contains-errors '&'
    |   | |-DeclRefExpr 0x1348309d0 <col:37> 'int' lvalue ParmVar 0x135113710 'flags' 'int'
    |   | `-RecoveryExpr 0x134830af8 <col:45> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x134830a80 <col:59, col:60> 'int *' contains-errors prefix '&' cannot overflow
    |     `-DeclRefExpr 0x134830a28 <col:60> 'int' contains-errors lvalue Var 0x135114058 'error' 'int'
    |-IfStmt 0x134830c30 <line:23:2, line:24:10>
    | |-UnaryOperator 0x134830bd0 <line:23:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x134830bb8 <col:7> 'struct sk_buff *' <LValueToRValue>
    | |   `-DeclRefExpr 0x134830b98 <col:7> 'struct sk_buff *' lvalue Var 0x135113f28 'skb' 'struct sk_buff *'
    | `-ReturnStmt 0x134830c20 <line:24:3, col:10>
    |   `-ImplicitCastExpr 0x134830c08 <col:10> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x134830be8 <col:10> 'int' contains-errors lvalue Var 0x135114058 'error' 'int'
    |-BinaryOperator 0x134830cd0 <line:26:2, col:16> 'int' contains-errors '='
    | |-DeclRefExpr 0x134830c50 <col:2> 'int' lvalue Var 0x135113fd8 'copied' 'int'
    | `-RecoveryExpr 0x134830ca8 <col:11, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x134830c70 <col:11> 'struct sk_buff *' lvalue Var 0x135113f28 'skb' 'struct sk_buff *'
    |-IfStmt 0x134830e28 <line:27:2, line:30:2>
    | |-BinaryOperator 0x134830d30 <line:27:6, col:15> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x134830cf0 <col:6> 'int' lvalue Var 0x135113fd8 'copied' 'int'
    | | `-RecoveryExpr 0x134830d10 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x134830e10 <col:21, line:30:2>
    |   `-BinaryOperator 0x134830d90 <line:28:3, col:12> 'int' contains-errors '='
    |     |-DeclRefExpr 0x134830d50 <col:3> 'int' lvalue Var 0x135113fd8 'copied' 'int'
    |     `-RecoveryExpr 0x134830d70 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x136808288 <line:32:2, col:62> 'int' contains-errors '='
    | |-DeclRefExpr 0x134830e48 <col:2> 'int' contains-errors lvalue Var 0x135114058 'error' 'int'
    | `-CallExpr 0x136808248 <col:10, col:62> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x134830f48 <col:10> 'int ()' Function 0x134830e90 'skb_copy_datagram_iovec' 'int ()'
    |   |-DeclRefExpr 0x134830f68 <col:34> 'struct sk_buff *' lvalue Var 0x135113f28 'skb' 'struct sk_buff *'
    |   |-IntegerLiteral 0x134830f88 <col:39> 'int' 0
    |   |-RecoveryExpr 0x136808200 <col:42, col:47> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x134830fa8 <col:42> 'struct msghdr *' lvalue ParmVar 0x1351135f8 'msg' 'struct msghdr *'
    |   `-DeclRefExpr 0x136808228 <col:56> 'int' lvalue Var 0x135113fd8 'copied' 'int'
    |-IfStmt 0x136808328 <line:33:2, line:34:10>
    | |-ImplicitCastExpr 0x1368082c8 <line:33:6> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x1368082a8 <col:6> 'int' contains-errors lvalue Var 0x135114058 'error' 'int'
    | `-ReturnStmt 0x136808318 <line:34:3, col:10>
    |   `-ImplicitCastExpr 0x136808300 <col:10> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x1368082e0 <col:10> 'int' contains-errors lvalue Var 0x135114058 'error' 'int'
    |-CallExpr 0x1368084c0 <line:35:2, col:37> 'int' contains-errors
    | |-ImplicitCastExpr 0x1368084a8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x136808428 <col:2> 'int ()' Function 0x136808370 'sock_recv_ts_and_drops' 'int ()'
    | |-ImplicitCastExpr 0x1368084f8 <col:25> 'struct msghdr *' <LValueToRValue>
    | | `-DeclRefExpr 0x136808448 <col:25> 'struct msghdr *' lvalue ParmVar 0x1351135f8 'msg' 'struct msghdr *'
    | |-ImplicitCastExpr 0x136808510 <col:30> 'struct sock *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x136808468 <col:30> 'struct sock *' contains-errors lvalue Var 0x135113ac8 'sk' 'struct sock *'
    | `-ImplicitCastExpr 0x136808528 <col:34> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x136808488 <col:34> 'struct sk_buff *' lvalue Var 0x135113f28 'skb' 'struct sk_buff *'
    |-IfStmt 0x136808ae8 <line:37:2, line:41:2>
    | |-RecoveryExpr 0x136808560 <line:37:6, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x136808ac8 <col:27, line:41:2>
    |   |-CallExpr 0x1368088e0 <line:38:3, line:39:18> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x136808660 <line:38:3> 'int ()' Function 0x1368085a8 'pr_debug' 'int ()'
    |   | |-StringLiteral 0x1368086c0 <col:12> 'char[4]' lvalue "STR"
    |   | |-CallExpr 0x136808858 <col:19, col:49> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x1368087c0 <col:19> 'int ()' Function 0x136808708 'atomic_read' 'int ()'
    |   | | `-UnaryOperator 0x136808840 <col:31, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |   `-RecoveryExpr 0x136808818 <col:32, col:36> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x1368087e0 <col:32> 'struct sock *' contains-errors lvalue Var 0x135113ac8 'sk' 'struct sock *'
    |   | `-RecoveryExpr 0x1368088b8 <line:39:5, col:10> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x136808880 <col:5> 'struct sk_buff *' lvalue Var 0x135113f28 'skb' 'struct sk_buff *'
    |   `-CallExpr 0x136808a98 <line:40:3, col:32> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1368089f8 <col:3> 'int ()' Function 0x136808940 'atm_return' 'int ()'
    |     |-DeclRefExpr 0x136808a18 <col:14> 'struct atm_vcc *' lvalue Var 0x135113d28 'vcc' 'struct atm_vcc *'
    |     `-RecoveryExpr 0x136808a70 <col:19, col:24> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x136808a38 <col:19> 'struct sk_buff *' lvalue Var 0x135113f28 'skb' 'struct sk_buff *'
    |-CallExpr 0x136808c60 <line:43:2, col:27> 'int' contains-errors
    | |-ImplicitCastExpr 0x136808c48 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x136808be8 <col:2> 'int ()' Function 0x136808b30 'skb_free_datagram' 'int ()'
    | |-ImplicitCastExpr 0x136808c90 <col:20> 'struct sock *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x136808c08 <col:20> 'struct sock *' contains-errors lvalue Var 0x135113ac8 'sk' 'struct sock *'
    | `-ImplicitCastExpr 0x136808ca8 <col:24> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x136808c28 <col:24> 'struct sk_buff *' lvalue Var 0x135113f28 'skb' 'struct sk_buff *'
    `-ReturnStmt 0x136808cf8 <line:44:2, col:9>
      `-ImplicitCastExpr 0x136808ce0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x136808cc0 <col:9> 'int' lvalue Var 0x135113fd8 'copied' 'int'
