TranslationUnitDecl 0x14c83b208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c83c0b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c83b7d0 '__int128'
|-TypedefDecl 0x14c83c128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c83b7f0 'unsigned __int128'
|-TypedefDecl 0x14c014e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c014c00 'struct __NSConstantString_tag'
|   `-Record 0x14c83c180 '__NSConstantString_tag'
|-TypedefDecl 0x14c014e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c83b990 '__SVInt8_t'
|-TypedefDecl 0x14c014f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c83b9b0 '__SVInt16_t'
|-TypedefDecl 0x14c014f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c83b9d0 '__SVInt32_t'
|-TypedefDecl 0x14c014fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c83b9f0 '__SVInt64_t'
|-TypedefDecl 0x14c015038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c83ba10 '__SVUint8_t'
|-TypedefDecl 0x14c0150a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c83ba30 '__SVUint16_t'
|-TypedefDecl 0x14c015108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c83ba50 '__SVUint32_t'
|-TypedefDecl 0x14c015170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c83ba70 '__SVUint64_t'
|-TypedefDecl 0x14c0151d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c83ba90 '__SVFloat16_t'
|-TypedefDecl 0x14c015240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c83bab0 '__SVFloat32_t'
|-TypedefDecl 0x14c0152a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c83bad0 '__SVFloat64_t'
|-TypedefDecl 0x14c015310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c83baf0 '__SVBfloat16_t'
|-TypedefDecl 0x14c015378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c83bb10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c0153e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c83bb30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c015448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c83bb50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c0154b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c83bb70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c015518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c83bb90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c015580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c83bbb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c0155e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c83bbd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c015650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c83bbf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c0156b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c83bc10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c015720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c83bc30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c015788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c83bc50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c0157f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c83bc70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c015858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c83bc90 '__clang_svint8x3_t'
|-TypedefDecl 0x14c0158c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c83bcb0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c015928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c83bcd0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c015990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c83bcf0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c0159f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c83bd10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c015a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c83bd30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c015ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c83bd50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c015b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c83bd70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c015b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c83bd90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c01d600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c83bdb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c01d668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c83bdd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c01d6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c83bdf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c01d738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c83be10 '__clang_svint8x4_t'
|-TypedefDecl 0x14c01d7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c83be30 '__clang_svint16x4_t'
|-TypedefDecl 0x14c01d808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c83be50 '__clang_svint32x4_t'
|-TypedefDecl 0x14c01d870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c83be70 '__clang_svint64x4_t'
|-TypedefDecl 0x14c01d8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c83be90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c01d940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c83beb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c01d9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c83bed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c01da10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c83bef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c01da78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c83bf10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c01dae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c83bf30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c01db48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c83bf50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c01dbb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c83bf70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c01dc18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c83bf90 '__SVBool_t'
|-TypedefDecl 0x14c01dc80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c83bfb0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c01dce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c83bfd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c01dd50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c83bff0 '__SVCount_t'
|-TypedefDecl 0x14c01ddf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c01ddb0 'char *'
|   `-BuiltinType 0x14c83b2b0 'char'
|-TypedefDecl 0x14c01de68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c01ddb0 'char *'
|   `-BuiltinType 0x14c83b2b0 'char'
`-FunctionDecl 0x14c01e558 <dataset_diviso_filec/func7731_nonvuln.c:1:1, line:36:1> line:1:12 cn_print_exe_file 'int (struct core_name *)' static
  |-ParmVarDecl 0x14c01e448 <col:30, col:48> col:48 used cn 'struct core_name *'
  `-CompoundStmt 0x14c045420 <line:2:1, line:36:1>
    |-DeclStmt 0x14c040238 <line:3:2, col:23>
    | |-RecordDecl 0x14c040050 <col:2, col:9> col:9 struct file
    | `-VarDecl 0x14c0401b8 <col:2, col:15> col:15 used exe_file 'struct file *'
    |-DeclStmt 0x14c040368 <line:4:2, col:22>
    | |-VarDecl 0x14c040268 <col:2, col:8> col:8 used pathbuf 'char *'
    | `-VarDecl 0x14c0402e8 <col:2, col:18> col:18 used path 'char *'
    |-DeclStmt 0x14c040400 <line:5:2, col:9>
    | `-VarDecl 0x14c040398 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x14c0406b8 <line:7:2, col:40> 'struct file *' contains-errors '='
    | |-DeclRefExpr 0x14c040418 <col:2> 'struct file *' lvalue Var 0x14c0401b8 'exe_file' 'struct file *'
    | `-CallExpr 0x14c040690 <col:13, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c040560 <col:13> 'int ()' Function 0x14c0404a8 'get_mm_exe_file' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x14c040648 <col:29, col:38> '<dependent type>' contains-errors lvalue ->mm
    |     `-RecoveryExpr 0x14c040628 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c040de0 <line:8:2, line:13:2>
    | |-UnaryOperator 0x14c040710 <line:8:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14c0406f8 <col:7> 'struct file *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c0406d8 <col:7> 'struct file *' lvalue Var 0x14c0401b8 'exe_file' 'struct file *'
    | `-CompoundStmt 0x14c040db0 <col:17, line:13:2>
    |   |-DeclStmt 0x14c040888 <line:9:3, col:44>
    |   | `-VarDecl 0x14c040740 <col:3, col:40> col:9 used commstart 'char *' cinit
    |   |   `-BinaryOperator 0x14c040868 <col:21, col:40> '<dependent type>' contains-errors '+'
    |   |     |-RecoveryExpr 0x14c0407e0 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |   |     | `-DeclRefExpr 0x14c0407a8 <col:21> 'struct core_name *' lvalue ParmVar 0x14c01e448 'cn' 'struct core_name *'
    |   |     `-RecoveryExpr 0x14c040840 <col:36, col:40> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x14c040808 <col:36> 'struct core_name *' lvalue ParmVar 0x14c01e448 'cn' 'struct core_name *'
    |   |-BinaryOperator 0x14c040b98 <line:10:3, col:43> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14c0408a0 <col:3> 'int' lvalue Var 0x14c040398 'ret' 'int'
    |   | `-CallExpr 0x14c040b60 <col:9, col:43> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14c0409a0 <col:9> 'int ()' Function 0x14c0408e8 'cn_printf' 'int ()'
    |   |   |-DeclRefExpr 0x14c0409c0 <col:19> 'struct core_name *' lvalue ParmVar 0x14c01e448 'cn' 'struct core_name *'
    |   |   |-StringLiteral 0x14c040a20 <col:23> 'char[4]' lvalue "STR"
    |   |   `-CXXDependentScopeMemberExpr 0x14c040b18 <col:30, col:39> '<dependent type>' contains-errors lvalue ->comm
    |   |     `-RecoveryExpr 0x14c040af8 <col:30> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x14c040d28 <line:11:3, col:22> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x14c040d10 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14c040c98 <col:3> 'int ()' Function 0x14c040be0 'cn_escape' 'int ()'
    |   | `-ImplicitCastExpr 0x14c040d50 <col:13> 'char *' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x14c040cb8 <col:13> 'char *' contains-errors lvalue Var 0x14c040740 'commstart' 'char *'
    |   `-ReturnStmt 0x14c040da0 <line:12:3, col:10>
    |     `-ImplicitCastExpr 0x14c040d88 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14c040d68 <col:10> 'int' lvalue Var 0x14c040398 'ret' 'int'
    |-BinaryOperator 0x14c044630 <line:15:2, col:43> 'char *' contains-errors '='
    | |-DeclRefExpr 0x14c040e00 <col:2> 'char *' lvalue Var 0x14c040268 'pathbuf' 'char *'
    | `-CallExpr 0x14c044600 <col:12, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c040f00 <col:12> 'int ()' Function 0x14c040e48 'kmalloc' 'int ()'
    |   |-RecoveryExpr 0x14c040fa0 <col:20> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14c040fc0 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c044820 <line:16:2, line:19:2>
    | |-UnaryOperator 0x14c044688 <line:16:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14c044670 <col:7> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c044650 <col:7> 'char *' lvalue Var 0x14c040268 'pathbuf' 'char *'
    | `-CompoundStmt 0x14c044800 <col:16, line:19:2>
    |   |-BinaryOperator 0x14c044778 <line:17:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14c0446a0 <col:3> 'int' lvalue Var 0x14c040398 'ret' 'int'
    |   | `-UnaryOperator 0x14c044760 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x14c044748 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x14c044728 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x14c0447e8 <line:18:3, col:8> 'put_exe_file' 0x14c044798
    |-BinaryOperator 0x14c044ac0 <line:21:2, col:52> 'char *' contains-errors '='
    | |-DeclRefExpr 0x14c044840 <col:2> 'char *' lvalue Var 0x14c0402e8 'path' 'char *'
    | `-CallExpr 0x14c044a88 <col:9, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c044940 <col:9> 'int ()' Function 0x14c044888 'd_path' 'int ()'
    |   |-UnaryOperator 0x14c0449c0 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c044998 <col:17, col:27> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14c044960 <col:17> 'struct file *' lvalue Var 0x14c0401b8 'exe_file' 'struct file *'
    |   |-DeclRefExpr 0x14c0449d8 <col:35> 'char *' lvalue Var 0x14c040268 'pathbuf' 'char *'
    |   `-RecoveryExpr 0x14c044a68 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c044e98 <line:22:2, line:25:2>
    | |-CallExpr 0x14c044c18 <line:22:6, col:17> 'int'
    | | |-ImplicitCastExpr 0x14c044c00 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x14c044bc0 <col:6> 'int ()' Function 0x14c044b08 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x14c044c40 <col:13> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c044be0 <col:13> 'char *' lvalue Var 0x14c0402e8 'path' 'char *'
    | `-CompoundStmt 0x14c044e78 <col:20, line:25:2>
    |   |-BinaryOperator 0x14c044df0 <line:23:3, col:21> 'int' '='
    |   | |-DeclRefExpr 0x14c044c58 <col:3> 'int' lvalue Var 0x14c040398 'ret' 'int'
    |   | `-CallExpr 0x14c044db0 <col:9, col:21> 'int'
    |   |   |-ImplicitCastExpr 0x14c044d98 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x14c044d58 <col:9> 'int ()' Function 0x14c044ca0 'PTR_ERR' 'int ()'
    |   |   `-ImplicitCastExpr 0x14c044dd8 <col:17> 'char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14c044d78 <col:17> 'char *' lvalue Var 0x14c0402e8 'path' 'char *'
    |   `-GotoStmt 0x14c044e60 <line:24:3, col:8> 'free_buf' 0x14c044e10
    |-CallExpr 0x14c044f10 <line:27:2, col:16> 'int'
    | |-ImplicitCastExpr 0x14c044ef8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14c044eb8 <col:2> 'int ()' Function 0x14c040be0 'cn_escape' 'int ()'
    | `-ImplicitCastExpr 0x14c044f38 <col:12> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x14c044ed8 <col:12> 'char *' lvalue Var 0x14c0402e8 'path' 'char *'
    |-BinaryOperator 0x14c045088 <line:29:2, col:33> 'int' '='
    | |-DeclRefExpr 0x14c044f50 <col:2> 'int' lvalue Var 0x14c040398 'ret' 'int'
    | `-CallExpr 0x14c045008 <col:8, col:33> 'int'
    |   |-ImplicitCastExpr 0x14c044ff0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c044f70 <col:8> 'int ()' Function 0x14c0408e8 'cn_printf' 'int ()'
    |   |-ImplicitCastExpr 0x14c045040 <col:18> 'struct core_name *' <LValueToRValue>
    |   | `-DeclRefExpr 0x14c044f90 <col:18> 'struct core_name *' lvalue ParmVar 0x14c01e448 'cn' 'struct core_name *'
    |   |-ImplicitCastExpr 0x14c045058 <col:22> 'char *' <ArrayToPointerDecay>
    |   | `-StringLiteral 0x14c044fb0 <col:22> 'char[4]' lvalue "STR"
    |   `-ImplicitCastExpr 0x14c045070 <col:29> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x14c044fd0 <col:29> 'char *' lvalue Var 0x14c0402e8 'path' 'char *'
    |-LabelStmt 0x14c045220 <line:31:1, line:32:15> 'free_buf'
    | `-CallExpr 0x14c0451e0 <col:2, col:15> 'int'
    |   |-ImplicitCastExpr 0x14c0451c8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c045188 <col:2> 'int ()' Function 0x14c0450d0 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x14c045208 <col:8> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x14c0451a8 <col:8> 'char *' lvalue Var 0x14c040268 'pathbuf' 'char *'
    |-LabelStmt 0x14c0453b8 <line:33:1, line:34:15> 'put_exe_file'
    | `-CallExpr 0x14c045378 <col:2, col:15> 'int'
    |   |-ImplicitCastExpr 0x14c045360 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c045320 <col:2> 'int ()' Function 0x14c045268 'fput' 'int ()'
    |   `-ImplicitCastExpr 0x14c0453a0 <col:7> 'struct file *' <LValueToRValue>
    |     `-DeclRefExpr 0x14c045340 <col:7> 'struct file *' lvalue Var 0x14c0401b8 'exe_file' 'struct file *'
    `-ReturnStmt 0x14c045410 <line:35:2, col:9>
      `-ImplicitCastExpr 0x14c0453f8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14c0453d8 <col:9> 'int' lvalue Var 0x14c040398 'ret' 'int'
