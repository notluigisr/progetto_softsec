TranslationUnitDecl 0x13a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a055bd0 '__int128'
|-TypedefDecl 0x13a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a055bf0 'unsigned __int128'
|-TypedefDecl 0x13a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13a056580 '__NSConstantString_tag'
|-TypedefDecl 0x13a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a055d90 '__SVInt8_t'
|-TypedefDecl 0x13a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a055db0 '__SVInt16_t'
|-TypedefDecl 0x13a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a055dd0 '__SVInt32_t'
|-TypedefDecl 0x13a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a055df0 '__SVInt64_t'
|-TypedefDecl 0x13a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a055e10 '__SVUint8_t'
|-TypedefDecl 0x13a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a055e30 '__SVUint16_t'
|-TypedefDecl 0x13a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a055e50 '__SVUint32_t'
|-TypedefDecl 0x13a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a055e70 '__SVUint64_t'
|-TypedefDecl 0x13a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a055e90 '__SVFloat16_t'
|-TypedefDecl 0x13a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a056390 '__SVBool_t'
|-TypedefDecl 0x13a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a0563f0 '__SVCount_t'
|-TypedefDecl 0x13a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a80dbb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
|-TypedefDecl 0x13a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a80dbb0 'char *'
|   `-BuiltinType 0x13a0556b0 'char'
`-FunctionDecl 0x13a80de88 <dataset_diviso_filec/func16179_vuln.c:1:1, line:33:1> line:1:12 invalid fts3DoIncrmerge 'int (int *, const char *)' static
  |-ParmVarDecl 0x13a80dd28 <line:2:3, col:14> col:14 invalid p 'int *'
  |-ParmVarDecl 0x13a80dda8 <line:3:3, col:15> col:15 used zParam 'const char *'
  `-CompoundStmt 0x13a829200 <line:4:2, line:33:1>
    |-DeclStmt 0x13a80dfc0 <line:5:3, col:9>
    | `-VarDecl 0x13a80df58 <col:3, col:7> col:7 used rc 'int'
    |-DeclStmt 0x13a80e0b0 <line:6:3, col:36>
    | `-VarDecl 0x13a80dff0 <col:3, col:7> col:7 used nMin 'int'
    |-DeclStmt 0x13a80e168 <line:7:3, col:17>
    | `-VarDecl 0x13a80e0e0 <col:3, col:16> col:7 used nMerge 'int' cinit
    |   `-IntegerLiteral 0x13a80e148 <col:16> 'int' 0
    |-DeclStmt 0x13a80e238 <line:8:3, col:25>
    | `-VarDecl 0x13a80e198 <col:3, col:19> col:15 used z 'const char *' cinit
    |   `-ImplicitCastExpr 0x13a80e220 <col:19> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x13a80e200 <col:19> 'const char *' lvalue ParmVar 0x13a80dda8 'zParam' 'const char *'
    |-BinaryOperator 0x13a8278e0 <line:11:3, col:25> 'int' '='
    | |-DeclRefExpr 0x13a80e250 <col:3> 'int' lvalue Var 0x13a80e0e0 'nMerge' 'int'
    | `-CallExpr 0x13a8278b8 <col:12, col:25> 'int'
    |   |-ImplicitCastExpr 0x13a8278a0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13a80e3d0 <col:12> 'int ()' Function 0x13a80e318 'fts3Getint' 'int ()'
    |   `-UnaryOperator 0x13a827850 <col:23, col:24> 'const char **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x13a827800 <col:24> 'const char *' lvalue Var 0x13a80e198 'z' 'const char *'
    |-IfStmt 0x13a827c10 <line:14:3, line:17:3>
    | |-BinaryOperator 0x13a827ac0 <line:14:7, col:26> 'int' '&&'
    | | |-BinaryOperator 0x13a8279c0 <col:7, col:13> 'int' '=='
    | | | |-ImplicitCastExpr 0x13a8279a8 <col:7, col:10> 'int' <IntegralCast>
    | | | | `-ImplicitCastExpr 0x13a827990 <col:7, col:10> 'char' <LValueToRValue>
    | | | |   `-ArraySubscriptExpr 0x13a827958 <col:7, col:10> 'const char' lvalue
    | | | |     |-ImplicitCastExpr 0x13a827940 <col:7> 'const char *' <LValueToRValue>
    | | | |     | `-DeclRefExpr 0x13a827900 <col:7> 'const char *' lvalue Var 0x13a80e198 'z' 'const char *'
    | | | |     `-IntegerLiteral 0x13a827920 <col:9> 'int' 0
    | | | `-CharacterLiteral 0x13a827978 <col:13> 'int' 44
    | | `-BinaryOperator 0x13a827aa0 <col:20, col:26> 'int' '!='
    | |   |-ImplicitCastExpr 0x13a827a88 <col:20, col:23> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x13a827a70 <col:20, col:23> 'char' <LValueToRValue>
    | |   |   `-ArraySubscriptExpr 0x13a827a38 <col:20, col:23> 'const char' lvalue
    | |   |     |-ImplicitCastExpr 0x13a827a20 <col:20> 'const char *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x13a8279e0 <col:20> 'const char *' lvalue Var 0x13a80e198 'z' 'const char *'
    | |   |     `-IntegerLiteral 0x13a827a00 <col:22> 'int' 1
    | |   `-CharacterLiteral 0x13a827a58 <col:26> 'int' 0
    | `-CompoundStmt 0x13a827bf0 <col:32, line:17:3>
    |   |-UnaryOperator 0x13a827b00 <line:15:5, col:6> 'const char *' postfix '++'
    |   | `-DeclRefExpr 0x13a827ae0 <col:5> 'const char *' lvalue Var 0x13a80e198 'z' 'const char *'
    |   `-BinaryOperator 0x13a827bd0 <line:16:5, col:25> 'int' '='
    |     |-DeclRefExpr 0x13a827b18 <col:5> 'int' lvalue Var 0x13a80dff0 'nMin' 'int'
    |     `-CallExpr 0x13a827ba8 <col:12, col:25> 'int'
    |       |-ImplicitCastExpr 0x13a827b90 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13a827b38 <col:12> 'int ()' Function 0x13a80e318 'fts3Getint' 'int ()'
    |       `-UnaryOperator 0x13a827b78 <col:23, col:24> 'const char **' prefix '&' cannot overflow
    |         `-DeclRefExpr 0x13a827b58 <col:24> 'const char *' lvalue Var 0x13a80e198 'z' 'const char *'
    |-IfStmt 0x13a828740 <line:19:3, line:31:3> has_else
    | |-BinaryOperator 0x13a827d88 <line:19:7, col:26> 'int' '||'
    | | |-BinaryOperator 0x13a827cf0 <col:7, col:13> 'int' '!='
    | | | |-ImplicitCastExpr 0x13a827cd8 <col:7, col:10> 'int' <IntegralCast>
    | | | | `-ImplicitCastExpr 0x13a827cc0 <col:7, col:10> 'char' <LValueToRValue>
    | | | |   `-ArraySubscriptExpr 0x13a827c88 <col:7, col:10> 'const char' lvalue
    | | | |     |-ImplicitCastExpr 0x13a827c70 <col:7> 'const char *' <LValueToRValue>
    | | | |     | `-DeclRefExpr 0x13a827c30 <col:7> 'const char *' lvalue Var 0x13a80e198 'z' 'const char *'
    | | | |     `-IntegerLiteral 0x13a827c50 <col:9> 'int' 0
    | | | `-CharacterLiteral 0x13a827ca8 <col:13> 'int' 0
    | | `-BinaryOperator 0x13a827d68 <col:21, col:26> 'int' '<'
    | |   |-ImplicitCastExpr 0x13a827d50 <col:21> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13a827d10 <col:21> 'int' lvalue Var 0x13a80dff0 'nMin' 'int'
    | |   `-IntegerLiteral 0x13a827d30 <col:26> 'int' 2
    | |-CompoundStmt 0x13a827e40 <col:29, line:21:3>
    | | `-BinaryOperator 0x13a827e20 <line:20:5, col:10> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x13a827da8 <col:5> 'int' lvalue Var 0x13a80df58 'rc' 'int'
    | |   `-RecoveryExpr 0x13a827e00 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13a828710 <line:21:8, line:31:3>
    |   |-BinaryOperator 0x13a827ed0 <line:22:5, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13a827e58 <col:5> 'int' lvalue Var 0x13a80df58 'rc' 'int'
    |   | `-RecoveryExpr 0x13a827eb0 <col:10> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13a828300 <line:23:5, line:26:5>
    |   | |-UnaryOperator 0x13a827f70 <line:23:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x13a827f58 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-CXXDependentScopeMemberExpr 0x13a827f10 <col:10, col:13> '<dependent type>' contains-errors lvalue ->bHasStat
    |   | |     `-RecoveryExpr 0x13a827ef0 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13a8282e0 <col:23, line:26:5>
    |   |   |-CallExpr 0x13a828130 <line:24:7, col:27> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13a828068 <col:7> 'int ()' Function 0x13a827fb0 'assert' 'int ()'
    |   |   | `-BinaryOperator 0x13a828110 <col:15, col:25> 'int' contains-errors '=='
    |   |   |   |-CXXDependentScopeMemberExpr 0x13a8280a8 <col:15, col:18> '<dependent type>' contains-errors lvalue ->bFts4
    |   |   |   | `-RecoveryExpr 0x13a828088 <col:15> '<dependent type>' contains-errors lvalue
    |   |   |   `-IntegerLiteral 0x13a8280f0 <col:25> 'int' 0
    |   |   `-CallExpr 0x13a8282b0 <line:25:7, col:40> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x13a828238 <col:7> 'int ()' Function 0x13a828180 'sqlite3Fts3CreateStatTable' 'int ()'
    |   |     |-UnaryOperator 0x13a828278 <col:34, col:35> 'int *' prefix '&' cannot overflow
    |   |     | `-DeclRefExpr 0x13a828258 <col:35> 'int' lvalue Var 0x13a80df58 'rc' 'int'
    |   |     `-RecoveryExpr 0x13a828290 <col:39> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13a8285a8 <line:27:5, line:29:5>
    |   | |-BinaryOperator 0x13a828398 <line:27:9, col:13> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x13a828320 <col:9> 'int' lvalue Var 0x13a80df58 'rc' 'int'
    |   | | `-RecoveryExpr 0x13a828378 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13a828590 <col:24, line:29:5>
    |   |   `-BinaryOperator 0x13a828570 <line:28:7, col:48> 'int' contains-errors '='
    |   |     |-DeclRefExpr 0x13a8283b8 <col:7> 'int' lvalue Var 0x13a80df58 'rc' 'int'
    |   |     `-CallExpr 0x13a828538 <col:12, col:48> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x13a8284b8 <col:12> 'int ()' Function 0x13a828400 'sqlite3Fts3Incrmerge' 'int ()'
    |   |       |-RecoveryExpr 0x13a8284d8 <col:33> '<dependent type>' contains-errors lvalue
    |   |       |-DeclRefExpr 0x13a8284f8 <col:36> 'int' lvalue Var 0x13a80e0e0 'nMerge' 'int'
    |   |       `-DeclRefExpr 0x13a828518 <col:44> 'int' lvalue Var 0x13a80dff0 'nMin' 'int'
    |   `-CallExpr 0x13a8286e8 <line:30:5, col:31> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13a8286a8 <col:5> 'int ()' Function 0x13a8285f0 'sqlite3Fts3SegmentsClose' 'int ()'
    |     `-RecoveryExpr 0x13a8286c8 <col:30> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13a8287a8 <line:32:3, col:10>
      `-ImplicitCastExpr 0x13a828790 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13a828770 <col:10> 'int' lvalue Var 0x13a80df58 'rc' 'int'
