TranslationUnitDecl 0x11f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f055bd0 '__int128'
|-TypedefDecl 0x11f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f055bf0 'unsigned __int128'
|-TypedefDecl 0x11f126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f126000 'struct __NSConstantString_tag'
|   `-Record 0x11f056580 '__NSConstantString_tag'
|-TypedefDecl 0x11f126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f055d90 '__SVInt8_t'
|-TypedefDecl 0x11f126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f055db0 '__SVInt16_t'
|-TypedefDecl 0x11f126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f055dd0 '__SVInt32_t'
|-TypedefDecl 0x11f1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f055df0 '__SVInt64_t'
|-TypedefDecl 0x11f126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f055e10 '__SVUint8_t'
|-TypedefDecl 0x11f1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f055e30 '__SVUint16_t'
|-TypedefDecl 0x11f126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f055e50 '__SVUint32_t'
|-TypedefDecl 0x11f126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f055e70 '__SVUint64_t'
|-TypedefDecl 0x11f1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f055e90 '__SVFloat16_t'
|-TypedefDecl 0x11f126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f056390 '__SVBool_t'
|-TypedefDecl 0x11f127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f0563f0 '__SVCount_t'
|-TypedefDecl 0x11f127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
|-TypedefDecl 0x11f128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
`-FunctionDecl 0x11f1284c8 <dataset_diviso_filec/func9336_vuln.c:1:1, line:29:1> line:1:12 invalid send_rect_simple 'int (int *, int, int, int, int, int)' static
  |-ParmVarDecl 0x11f128128 <col:29, col:39> col:39 invalid vs 'int *'
  |-ParmVarDecl 0x11f1281a8 <col:43, col:47> col:47 used x 'int'
  |-ParmVarDecl 0x11f128228 <col:50, col:54> col:54 used y 'int'
  |-ParmVarDecl 0x11f1282a8 <col:57, col:61> col:61 used w 'int'
  |-ParmVarDecl 0x11f128328 <col:64, col:68> col:68 used h 'int'
  |-ParmVarDecl 0x11f1283a8 <line:2:29, col:34> col:34 invalid split 'int'
  `-CompoundStmt 0x11f142e78 <line:3:1, line:29:1>
    |-DeclStmt 0x11f1286b8 <line:4:5, col:28>
    | |-VarDecl 0x11f1285b8 <col:5, col:9> col:9 used max_size 'int'
    | `-VarDecl 0x11f128638 <col:5, col:19> col:19 used max_width 'int'
    |-DeclStmt 0x11f1287e8 <line:5:5, col:38>
    | |-VarDecl 0x11f1286e8 <col:5, col:9> col:9 used max_sub_width 'int'
    | `-VarDecl 0x11f128768 <col:5, col:24> col:24 used max_sub_height 'int'
    |-DeclStmt 0x11f141918 <line:6:5, col:15>
    | |-VarDecl 0x11f141818 <col:5, col:9> col:9 used dx 'int'
    | `-VarDecl 0x11f141898 <col:5, col:13> col:13 used dy 'int'
    |-DeclStmt 0x11f141a48 <line:7:5, col:15>
    | |-VarDecl 0x11f141948 <col:5, col:9> col:9 used rw 'int'
    | `-VarDecl 0x11f1419c8 <col:5, col:13> col:13 used rh 'int'
    |-DeclStmt 0x11f141b00 <line:8:5, col:14>
    | `-VarDecl 0x11f141a78 <col:5, col:13> col:9 used n 'int' cinit
    |   `-IntegerLiteral 0x11f141ae0 <col:13> 'int' 0
    |-IfStmt 0x11f142e00 <line:13:5, line:26:5> has_else
    | |-BinaryOperator 0x11f141ec0 <line:13:9, col:52> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x11f141ce8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x11f141ea0 <col:18, col:52> 'int'
    | |   `-BinaryOperator 0x11f141e80 <col:19, col:44> 'int' '||'
    | |     |-BinaryOperator 0x11f141d78 <col:19, col:23> 'int' '>'
    | |     | |-ImplicitCastExpr 0x11f141d48 <col:19> 'int' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x11f141d08 <col:19> 'int' lvalue ParmVar 0x11f1282a8 'w' 'int'
    | |     | `-ImplicitCastExpr 0x11f141d60 <col:23> 'int' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x11f141d28 <col:23> 'int' lvalue Var 0x11f128638 'max_width' 'int'
    | |     `-BinaryOperator 0x11f141e60 <col:36, col:44> 'int' '>'
    | |       |-BinaryOperator 0x11f141e08 <col:36, col:40> 'int' '*'
    | |       | |-ImplicitCastExpr 0x11f141dd8 <col:36> 'int' <LValueToRValue>
    | |       | | `-DeclRefExpr 0x11f141d98 <col:36> 'int' lvalue ParmVar 0x11f1282a8 'w' 'int'
    | |       | `-ImplicitCastExpr 0x11f141df0 <col:40> 'int' <LValueToRValue>
    | |       |   `-DeclRefExpr 0x11f141db8 <col:40> 'int' lvalue ParmVar 0x11f128328 'h' 'int'
    | |       `-ImplicitCastExpr 0x11f141e48 <col:44> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x11f141e28 <col:44> 'int' lvalue Var 0x11f1285b8 'max_size' 'int'
    | |-CompoundStmt 0x11f142c68 <col:55, line:24:5>
    | | |-BinaryOperator 0x11f142050 <line:14:9, col:55> 'int' '='
    | | | |-DeclRefExpr 0x11f141ee0 <col:9> 'int' lvalue Var 0x11f1286e8 'max_sub_width' 'int'
    | | | `-ConditionalOperator 0x11f142020 <col:25, col:55> 'int'
    | | |   |-ParenExpr 0x11f141f90 <col:25, col:39> 'int'
    | | |   | `-BinaryOperator 0x11f141f70 <col:26, col:30> 'int' '>'
    | | |   |   |-ImplicitCastExpr 0x11f141f40 <col:26> 'int' <LValueToRValue>
    | | |   |   | `-DeclRefExpr 0x11f141f00 <col:26> 'int' lvalue ParmVar 0x11f1282a8 'w' 'int'
    | | |   |   `-ImplicitCastExpr 0x11f141f58 <col:30> 'int' <LValueToRValue>
    | | |   |     `-DeclRefExpr 0x11f141f20 <col:30> 'int' lvalue Var 0x11f128638 'max_width' 'int'
    | | |   |-ImplicitCastExpr 0x11f141ff0 <col:43> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x11f141fb0 <col:43> 'int' lvalue Var 0x11f128638 'max_width' 'int'
    | | |   `-ImplicitCastExpr 0x11f142008 <col:55> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x11f141fd0 <col:55> 'int' lvalue ParmVar 0x11f1282a8 'w' 'int'
    | | |-BinaryOperator 0x11f142120 <line:15:9, col:37> 'int' '='
    | | | |-DeclRefExpr 0x11f142070 <col:9> 'int' lvalue Var 0x11f128768 'max_sub_height' 'int'
    | | | `-BinaryOperator 0x11f142100 <col:26, col:37> 'int' '/'
    | | |   |-ImplicitCastExpr 0x11f1420d0 <col:26> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x11f142090 <col:26> 'int' lvalue Var 0x11f1285b8 'max_size' 'int'
    | | |   `-ImplicitCastExpr 0x11f1420e8 <col:37> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x11f1420b0 <col:37> 'int' lvalue Var 0x11f1286e8 'max_sub_width' 'int'
    | | `-ForStmt 0x11f142c30 <line:17:9, line:23:9>
    | |   |-BinaryOperator 0x11f142180 <line:17:14, col:19> 'int' '='
    | |   | |-DeclRefExpr 0x11f142140 <col:14> 'int' lvalue Var 0x11f141898 'dy' 'int'
    | |   | `-IntegerLiteral 0x11f142160 <col:19> 'int' 0
    | |   |-<<<NULL>>>
    | |   |-BinaryOperator 0x11f142210 <col:22, col:27> 'int' '<'
    | |   | |-ImplicitCastExpr 0x11f1421e0 <col:22> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x11f1421a0 <col:22> 'int' lvalue Var 0x11f141898 'dy' 'int'
    | |   | `-ImplicitCastExpr 0x11f1421f8 <col:27> 'int' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x11f1421c0 <col:27> 'int' lvalue ParmVar 0x11f128328 'h' 'int'
    | |   |-CompoundAssignOperator 0x11f142288 <col:30, col:36> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |   | |-DeclRefExpr 0x11f142230 <col:30> 'int' lvalue Var 0x11f141898 'dy' 'int'
    | |   | `-ImplicitCastExpr 0x11f142270 <col:36> 'int' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x11f142250 <col:36> 'int' lvalue Var 0x11f128768 'max_sub_height' 'int'
    | |   `-CompoundStmt 0x11f142c18 <col:52, line:23:9>
    | |     `-ForStmt 0x11f142be0 <line:18:13, line:22:13>
    | |       |-BinaryOperator 0x11f1422f8 <line:18:18, col:23> 'int' '='
    | |       | |-DeclRefExpr 0x11f1422b8 <col:18> 'int' lvalue Var 0x11f141818 'dx' 'int'
    | |       | `-IntegerLiteral 0x11f1422d8 <col:23> 'int' 0
    | |       |-<<<NULL>>>
    | |       |-BinaryOperator 0x11f142388 <col:26, col:31> 'int' '<'
    | |       | |-ImplicitCastExpr 0x11f142358 <col:26> 'int' <LValueToRValue>
    | |       | | `-DeclRefExpr 0x11f142318 <col:26> 'int' lvalue Var 0x11f141818 'dx' 'int'
    | |       | `-ImplicitCastExpr 0x11f142370 <col:31> 'int' <LValueToRValue>
    | |       |   `-DeclRefExpr 0x11f142338 <col:31> 'int' lvalue ParmVar 0x11f1282a8 'w' 'int'
    | |       |-CompoundAssignOperator 0x11f142400 <col:34, col:40> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |       | |-DeclRefExpr 0x11f1423a8 <col:34> 'int' lvalue Var 0x11f141818 'dx' 'int'
    | |       | `-ImplicitCastExpr 0x11f1423e8 <col:40> 'int' <LValueToRValue>
    | |       |   `-DeclRefExpr 0x11f1423c8 <col:40> 'int' lvalue Var 0x11f128638 'max_width' 'int'
    | |       `-CompoundStmt 0x11f142bb8 <col:51, line:22:13>
    | |         |-BinaryOperator 0x11f142710 <line:19:17, col:47> 'int' '='
    | |         | |-DeclRefExpr 0x11f142430 <col:17> 'int' lvalue Var 0x11f141948 'rw' 'int'
    | |         | `-CallExpr 0x11f1426c8 <col:22, col:47> 'int'
    | |         |   |-ImplicitCastExpr 0x11f1426b0 <col:22> 'int (*)()' <FunctionToPointerDecay>
    | |         |   | `-DeclRefExpr 0x11f1425b0 <col:22> 'int ()' Function 0x11f1424f8 'MIN' 'int ()'
    | |         |   |-ImplicitCastExpr 0x11f1426f8 <col:26> 'int' <LValueToRValue>
    | |         |   | `-DeclRefExpr 0x11f1425d0 <col:26> 'int' lvalue Var 0x11f1286e8 'max_sub_width' 'int'
    | |         |   `-BinaryOperator 0x11f142660 <col:41, col:45> 'int' '-'
    | |         |     |-ImplicitCastExpr 0x11f142630 <col:41> 'int' <LValueToRValue>
    | |         |     | `-DeclRefExpr 0x11f1425f0 <col:41> 'int' lvalue ParmVar 0x11f1282a8 'w' 'int'
    | |         |     `-ImplicitCastExpr 0x11f142648 <col:45> 'int' <LValueToRValue>
    | |         |       `-DeclRefExpr 0x11f142610 <col:45> 'int' lvalue Var 0x11f141818 'dx' 'int'
    | |         |-BinaryOperator 0x11f142880 <line:20:17, col:48> 'int' '='
    | |         | |-DeclRefExpr 0x11f142730 <col:17> 'int' lvalue Var 0x11f1419c8 'rh' 'int'
    | |         | `-CallExpr 0x11f142838 <col:22, col:48> 'int'
    | |         |   |-ImplicitCastExpr 0x11f142820 <col:22> 'int (*)()' <FunctionToPointerDecay>
    | |         |   | `-DeclRefExpr 0x11f142750 <col:22> 'int ()' Function 0x11f1424f8 'MIN' 'int ()'
    | |         |   |-ImplicitCastExpr 0x11f142868 <col:26> 'int' <LValueToRValue>
    | |         |   | `-DeclRefExpr 0x11f142770 <col:26> 'int' lvalue Var 0x11f128768 'max_sub_height' 'int'
    | |         |   `-BinaryOperator 0x11f142800 <col:42, col:46> 'int' '-'
    | |         |     |-ImplicitCastExpr 0x11f1427d0 <col:42> 'int' <LValueToRValue>
    | |         |     | `-DeclRefExpr 0x11f142790 <col:42> 'int' lvalue ParmVar 0x11f128328 'h' 'int'
    | |         |     `-ImplicitCastExpr 0x11f1427e8 <col:46> 'int' <LValueToRValue>
    | |         |       `-DeclRefExpr 0x11f1427b0 <col:46> 'int' lvalue Var 0x11f141898 'dy' 'int'
    | |         `-CompoundAssignOperator 0x11f142b88 <line:21:17, col:58> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |           |-DeclRefExpr 0x11f1428a0 <col:17> 'int' lvalue Var 0x11f141a78 'n' 'int'
    | |           `-CallExpr 0x11f142b40 <col:22, col:58> '<dependent type>' contains-errors
    | |             |-DeclRefExpr 0x11f1429a0 <col:22> 'int ()' Function 0x11f1428e8 'send_sub_rect' 'int ()'
    | |             |-RecoveryExpr 0x11f1429c0 <col:36> '<dependent type>' contains-errors lvalue
    | |             |-BinaryOperator 0x11f142a50 <col:40, col:42> 'int' '+'
    | |             | |-ImplicitCastExpr 0x11f142a20 <col:40> 'int' <LValueToRValue>
    | |             | | `-DeclRefExpr 0x11f1429e0 <col:40> 'int' lvalue ParmVar 0x11f1281a8 'x' 'int'
    | |             | `-ImplicitCastExpr 0x11f142a38 <col:42> 'int' <LValueToRValue>
    | |             |   `-DeclRefExpr 0x11f142a00 <col:42> 'int' lvalue Var 0x11f141818 'dx' 'int'
    | |             |-BinaryOperator 0x11f142ae0 <col:46, col:48> 'int' '+'
    | |             | |-ImplicitCastExpr 0x11f142ab0 <col:46> 'int' <LValueToRValue>
    | |             | | `-DeclRefExpr 0x11f142a70 <col:46> 'int' lvalue ParmVar 0x11f128228 'y' 'int'
    | |             | `-ImplicitCastExpr 0x11f142ac8 <col:48> 'int' <LValueToRValue>
    | |             |   `-DeclRefExpr 0x11f142a90 <col:48> 'int' lvalue Var 0x11f141898 'dy' 'int'
    | |             |-DeclRefExpr 0x11f142b00 <col:52> 'int' lvalue Var 0x11f141948 'rw' 'int'
    | |             `-DeclRefExpr 0x11f142b20 <col:56> 'int' lvalue Var 0x11f1419c8 'rh' 'int'
    | `-CompoundStmt 0x11f142de8 <line:24:12, line:26:5>
    |   `-CompoundAssignOperator 0x11f142db8 <line:25:9, col:42> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x11f142c90 <col:9> 'int' lvalue Var 0x11f141a78 'n' 'int'
    |     `-CallExpr 0x11f142d70 <col:14, col:42> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x11f142cb0 <col:14> 'int ()' Function 0x11f1428e8 'send_sub_rect' 'int ()'
    |       |-RecoveryExpr 0x11f142cd0 <col:28> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x11f142cf0 <col:32> 'int' lvalue ParmVar 0x11f1281a8 'x' 'int'
    |       |-DeclRefExpr 0x11f142d10 <col:35> 'int' lvalue ParmVar 0x11f128228 'y' 'int'
    |       |-DeclRefExpr 0x11f142d30 <col:38> 'int' lvalue ParmVar 0x11f1282a8 'w' 'int'
    |       `-DeclRefExpr 0x11f142d50 <col:41> 'int' lvalue ParmVar 0x11f128328 'h' 'int'
    `-ReturnStmt 0x11f142e68 <line:28:5, col:12>
      `-ImplicitCastExpr 0x11f142e50 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11f142e30 <col:12> 'int' lvalue Var 0x11f141a78 'n' 'int'
