TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x126926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x126926000 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x126926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x126926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x126926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x1269263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x126926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x1269264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x126926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x126926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x1269265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x126926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1269266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x126926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x126926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1269267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x126926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1269268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x126926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x126926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1269269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x126926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x126926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x126926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x126926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x126926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x126926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x126926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x126926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x126926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x126926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x126926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x126926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x126926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x126926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x126927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x126927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1269278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x126927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1269279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x126927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x126927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x126927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x126927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x126927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x126927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x126927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x126927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x126927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x126927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x126927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x126927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x126927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x126927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x126927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x126927fb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x126928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x126927fb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
`-FunctionDecl 0x126940b58 <dataset_diviso_filec/func18465_vuln.c:1:1, line:58:1> line:1:12 semctl_setval 'int (struct ipc_namespace *, int, int, unsigned long)' static
  |-ParmVarDecl 0x126928648 <col:26, col:48> col:48 used ns 'struct ipc_namespace *'
  |-ParmVarDecl 0x1269286c8 <col:52, col:56> col:56 used semid 'int'
  |-ParmVarDecl 0x126928748 <col:63, col:67> col:67 used semnum 'int'
  |-ParmVarDecl 0x126940a00 <line:2:3, col:17> col:17 used arg 'unsigned long'
  `-CompoundStmt 0x130009500 <line:3:1, line:58:1>
    |-DeclStmt 0x126940e58 <line:4:2, col:21>
    | |-RecordDecl 0x126940c68 <col:2, col:9> col:9 struct sem_undo
    | `-VarDecl 0x126940dd8 <col:2, col:19> col:19 used un 'struct sem_undo *'
    |-DeclStmt 0x126941058 <line:5:2, col:23>
    | |-RecordDecl 0x126940e70 <col:2, col:9> col:9 struct sem_array
    | `-VarDecl 0x126940fd8 <col:2, col:20> col:20 used sma 'struct sem_array *'
    |-DeclStmt 0x126941258 <line:6:2, col:18>
    | |-RecordDecl 0x126941070 <col:2, col:9> col:9 struct sem
    | `-VarDecl 0x1269411d8 <col:2, col:14> col:14 used curr 'struct sem *'
    |-DeclStmt 0x1269412f0 <line:7:2, col:9>
    | `-VarDecl 0x126941288 <col:2, col:6> col:6 used err 'int'
    |-DeclStmt 0x126941388 <line:8:2, col:11>
    | `-VarDecl 0x126941320 <col:2, col:6> col:6 used nsems 'int'
    |-DeclStmt 0x126941518 <line:9:2, col:24>
    | |-RecordDecl 0x1269413a0 <col:2, col:9> col:9 struct list_head
    | `-VarDecl 0x126941498 <col:2, col:19> col:19 invalid tasks 'struct list_head'
    |-DeclStmt 0x1269415b0 <line:10:2, col:9>
    | `-VarDecl 0x126941548 <col:2, col:6> col:6 used val 'int'
    |-BinaryOperator 0x126941638 <line:16:2, col:8> 'int' '='
    | |-DeclRefExpr 0x1269415c8 <col:2> 'int' lvalue Var 0x126941548 'val' 'int'
    | `-ImplicitCastExpr 0x126941620 <col:8> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x126941608 <col:8> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x1269415e8 <col:8> 'unsigned long' lvalue ParmVar 0x126940a00 'arg' 'unsigned long'
    |-BinaryOperator 0x1269418c0 <line:19:2, col:32> 'struct sem_array *' '='
    | |-DeclRefExpr 0x126941658 <col:2> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    | `-ImplicitCastExpr 0x1269418a8 <col:8, col:32> 'struct sem_array *' <IntegralToPointer>
    |   `-CallExpr 0x126941848 <col:8, col:32> 'int'
    |     |-ImplicitCastExpr 0x126941830 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1269417a0 <col:8> 'int ()' Function 0x1269416e8 'sem_lock_check' 'int ()'
    |     |-ImplicitCastExpr 0x126941878 <col:23> 'struct ipc_namespace *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1269417c0 <col:23> 'struct ipc_namespace *' lvalue ParmVar 0x126928648 'ns' 'struct ipc_namespace *'
    |     `-ImplicitCastExpr 0x126941890 <col:27> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1269417e0 <col:27> 'int' lvalue ParmVar 0x1269286c8 'semid' 'int'
    |-IfStmt 0x1269435e0 <line:20:2, line:21:21>
    | |-CallExpr 0x126943418 <line:20:6, col:16> 'int'
    | | |-ImplicitCastExpr 0x126943400 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1269419c0 <col:6> 'int ()' Function 0x126941908 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x126943440 <col:13> 'struct sem_array *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1269419e0 <col:13> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    | `-ReturnStmt 0x1269435d0 <line:21:3, col:21>
    |   `-CallExpr 0x126943590 <col:10, col:21> 'int'
    |     |-ImplicitCastExpr 0x126943578 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x126943538 <col:10> 'int ()' Function 0x126943480 'PTR_ERR' 'int ()'
    |     `-ImplicitCastExpr 0x1269435b8 <col:18> 'struct sem_array *' <LValueToRValue>
    |       `-DeclRefExpr 0x126943558 <col:18> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    |-CallExpr 0x126943738 <line:23:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1269436e0 <col:2> 'int ()' Function 0x126943628 'INIT_LIST_HEAD' 'int ()'
    | `-UnaryOperator 0x126943720 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x126943700 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1269437e0 <line:24:2, col:15> 'int' contains-errors '='
    | |-DeclRefExpr 0x126943760 <col:2> 'int' lvalue Var 0x126941320 'nsems' 'int'
    | `-RecoveryExpr 0x1269437b8 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x126943780 <col:10> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    |-BinaryOperator 0x1269438d8 <line:26:2, col:9> 'int' contains-errors '='
    | |-DeclRefExpr 0x126943800 <col:2> 'int' lvalue Var 0x126941288 'err' 'int'
    | `-UnaryOperator 0x1269438c0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x1269438a8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x126943888 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126943ba0 <line:27:2, line:28:8>
    | |-CallExpr 0x126943b00 <line:27:6, col:42> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1269439d8 <col:6> 'int ()' Function 0x126943920 'ipcperms' 'int ()'
    | | |-DeclRefExpr 0x1269439f8 <col:15> 'struct ipc_namespace *' lvalue ParmVar 0x126928648 'ns' 'struct ipc_namespace *'
    | | |-UnaryOperator 0x126943a78 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | `-RecoveryExpr 0x126943a50 <col:20, col:25> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x126943a18 <col:20> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    | | `-RecoveryExpr 0x126943ae0 <col:35> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x126943b88 <line:28:3, col:8> 'out_unlock' 0x126943b38
    |-BinaryOperator 0x126943db8 <line:30:2, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x126943bc0 <col:2> 'int' lvalue Var 0x126941288 'err' 'int'
    | `-CallExpr 0x126943d88 <col:8, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126943cc0 <col:8> 'int ()' Function 0x126943c08 'security_sem_semctl' 'int ()'
    |   |-DeclRefExpr 0x126943ce0 <col:28> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    |   `-RecoveryExpr 0x126943d68 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126943e28 <line:31:2, line:32:8>
    | |-ImplicitCastExpr 0x126943df8 <line:31:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x126943dd8 <col:6> 'int' lvalue Var 0x126941288 'err' 'int'
    | `-GotoStmt 0x126943e10 <line:32:3, col:8> 'out_unlock' 0x126943b38
    |-BinaryOperator 0x126943f20 <line:34:2, col:9> 'int' contains-errors '='
    | |-DeclRefExpr 0x126943e48 <col:2> 'int' lvalue Var 0x126941288 'err' 'int'
    | `-UnaryOperator 0x126943f08 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x126943ef0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x126943ed0 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126944080 <line:35:2, line:36:8>
    | |-BinaryOperator 0x126944048 <line:35:5, col:29> 'int' '||'
    | | |-BinaryOperator 0x126943f98 <col:5, col:14> 'int' '<'
    | | | |-ImplicitCastExpr 0x126943f80 <col:5> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x126943f40 <col:5> 'int' lvalue ParmVar 0x126928748 'semnum' 'int'
    | | | `-IntegerLiteral 0x126943f60 <col:14> 'int' 0
    | | `-BinaryOperator 0x126944028 <col:19, col:29> 'int' '>='
    | |   |-ImplicitCastExpr 0x126943ff8 <col:19> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x126943fb8 <col:19> 'int' lvalue ParmVar 0x126928748 'semnum' 'int'
    | |   `-ImplicitCastExpr 0x126944010 <col:29> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x126943fd8 <col:29> 'int' lvalue Var 0x126941320 'nsems' 'int'
    | `-GotoStmt 0x126944068 <line:36:3, col:8> 'out_unlock' 0x126943b38
    |-BinaryOperator 0x1269441a8 <line:38:2, col:30> 'struct sem *' contains-errors '='
    | |-DeclRefExpr 0x1269440a0 <col:2> 'struct sem *' lvalue Var 0x1269411d8 'curr' 'struct sem *'
    | `-UnaryOperator 0x126944190 <col:9, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-ArraySubscriptExpr 0x126944170 <col:10, col:30> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x126944140 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x1269440f8 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x1269440c0 <col:10> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    |     `-ImplicitCastExpr 0x126944158 <col:24> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x126944120 <col:24> 'int' lvalue ParmVar 0x126928748 'semnum' 'int'
    |-BinaryOperator 0x1269442a0 <line:40:2, col:9> 'int' contains-errors '='
    | |-DeclRefExpr 0x1269441c8 <col:2> 'int' lvalue Var 0x126941288 'err' 'int'
    | `-UnaryOperator 0x126944288 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x126944270 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x126944250 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x130008870 <line:41:2, line:42:8>
    | |-BinaryOperator 0x130008838 <line:41:6, col:28> 'int' contains-errors '||'
    | | |-BinaryOperator 0x1269443d0 <col:6, col:12> 'int' contains-errors '>'
    | | | |-DeclRefExpr 0x1269442c0 <col:6> 'int' lvalue Var 0x126941548 'val' 'int'
    | | | `-RecoveryExpr 0x1269443b0 <col:12> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x130008818 <col:22, col:28> 'int' '<'
    | |   |-ImplicitCastExpr 0x130008800 <col:22> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x126944318 <col:22> 'int' lvalue Var 0x126941548 'val' 'int'
    | |   `-IntegerLiteral 0x126944338 <col:28> 'int' 0
    | `-GotoStmt 0x130008858 <line:42:3, col:8> 'out_unlock' 0x126943b38
    |-CallExpr 0x130008a50 <line:44:2, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x130008970 <col:2> 'int ()' Function 0x1300088b8 'assert_spin_locked' 'int ()'
    | `-UnaryOperator 0x130008a38 <col:21, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x1300089f0 <col:22, col:36> '<dependent type>' contains-errors lvalue .lock
    |     `-RecoveryExpr 0x1300089c8 <col:22, col:27> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x130008990 <col:22> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    |-BinaryOperator 0x130008c90 <line:48:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x130008c48 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x130008c10 <col:2> 'struct sem *' lvalue Var 0x1269411d8 'curr' 'struct sem *'
    | `-DeclRefExpr 0x130008c70 <col:17> 'int' lvalue Var 0x126941548 'val' 'int'
    |-BinaryOperator 0x130008fa8 <line:50:2, col:31> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x130008e48 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x130008e10 <col:2> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    | `-CallExpr 0x130008f88 <col:19, col:31> 'int'
    |   `-ImplicitCastExpr 0x130008f70 <col:19> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x130008f50 <col:19> 'int ()' Function 0x130008e98 'get_seconds' 'int ()'
    |-BinaryOperator 0x1300091a0 <line:53:2, col:8> 'int' '='
    | |-DeclRefExpr 0x130009160 <col:2> 'int' lvalue Var 0x126941288 'err' 'int'
    | `-IntegerLiteral 0x130009180 <col:8> 'int' 0
    |-LabelStmt 0x130009338 <line:54:1, line:55:16> 'out_unlock'
    | `-CallExpr 0x1300092f8 <col:2, col:16> 'int'
    |   |-ImplicitCastExpr 0x1300092e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1300092a0 <col:2> 'int ()' Function 0x1300091e8 'sem_unlock' 'int ()'
    |   `-ImplicitCastExpr 0x130009320 <col:13> 'struct sem_array *' <LValueToRValue>
    |     `-DeclRefExpr 0x1300092c0 <col:13> 'struct sem_array *' lvalue Var 0x126940fd8 'sma' 'struct sem_array *'
    |-CallExpr 0x130009490 <line:56:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x130009438 <col:2> 'int ()' Function 0x130009380 'wake_up_sem_queue_do' 'int ()'
    | `-UnaryOperator 0x130009478 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x130009458 <col:24> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1300094f0 <line:57:2, col:9>
      `-ImplicitCastExpr 0x1300094d8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1300094b8 <col:9> 'int' lvalue Var 0x126941288 'err' 'int'
