TranslationUnitDecl 0x14b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b055bd0 '__int128'
|-TypedefDecl 0x14b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b055bf0 'unsigned __int128'
|-TypedefDecl 0x14b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b126000 'struct __NSConstantString_tag'
|   `-Record 0x14b056580 '__NSConstantString_tag'
|-TypedefDecl 0x14b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b055d90 '__SVInt8_t'
|-TypedefDecl 0x14b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b055db0 '__SVInt16_t'
|-TypedefDecl 0x14b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b055dd0 '__SVInt32_t'
|-TypedefDecl 0x14b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b055df0 '__SVInt64_t'
|-TypedefDecl 0x14b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b055e10 '__SVUint8_t'
|-TypedefDecl 0x14b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b055e30 '__SVUint16_t'
|-TypedefDecl 0x14b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b055e50 '__SVUint32_t'
|-TypedefDecl 0x14b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b055e70 '__SVUint64_t'
|-TypedefDecl 0x14b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b055e90 '__SVFloat16_t'
|-TypedefDecl 0x14b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b056390 '__SVBool_t'
|-TypedefDecl 0x14b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b0563f0 '__SVCount_t'
|-TypedefDecl 0x14b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b127fb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-TypedefDecl 0x14b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b127fb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-FunctionDecl 0x14b128558 <dataset_diviso_filec/func2376_vuln.c:1:1, line:36:1> line:1:12 invalid fsmMkfile 'int (int, const char *, int, int, int, int *, int *)' static
| |-ParmVarDecl 0x14b1280f0 <col:22, col:28> col:28 invalid fi 'int'
| |-ParmVarDecl 0x14b128170 <col:32, col:44> col:44 used dest 'const char *'
| |-ParmVarDecl 0x14b1281f0 <col:50, col:59> col:59 invalid files 'int'
| |-ParmVarDecl 0x14b128270 <line:2:8, col:15> col:15 invalid psm 'int'
| |-ParmVarDecl 0x14b1282f0 <col:20, col:24> col:24 used nodigest 'int'
| |-ParmVarDecl 0x14b1283a8 <col:34, col:39> col:39 used setmeta 'int *'
| |-ParmVarDecl 0x14b128428 <line:3:8, col:14> col:14 used firsthardlink 'int *'
| `-CompoundStmt 0x14b143ef8 <line:4:1, line:36:1>
|   |-DeclStmt 0x14b1286d8 <line:5:5, col:15>
|   | `-VarDecl 0x14b128650 <col:5, col:14> col:9 used rc 'int' cinit
|   |   `-IntegerLiteral 0x14b1286b8 <col:14> 'int' 0
|   |-DeclStmt 0x14b141948 <line:6:5, col:39>
|   | `-VarDecl 0x14b128708 <col:5, col:38> col:9 used numHardlinks 'int' cinit
|   |   `-CallExpr 0x14b141920 <col:24, col:38> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14b1418e0 <col:24> 'int ()' Function 0x14b141828 'rpmfiFNlink' 'int ()'
|   |     `-RecoveryExpr 0x14b141900 <col:36> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14b143778 <line:8:5, line:22:5>
|   | |-BinaryOperator 0x14b1419b8 <line:8:9, col:24> 'int' contains-errors '>'
|   | | |-ImplicitCastExpr 0x14b1419a0 <col:9> 'int' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x14b141960 <col:9> 'int' contains-errors lvalue Var 0x14b128708 'numHardlinks' 'int'
|   | | `-IntegerLiteral 0x14b141980 <col:24> 'int' 1
|   | `-CompoundStmt 0x14b143760 <col:27, line:22:5>
|   |   `-IfStmt 0x14b143730 <line:10:2, line:21:2> has_else
|   |     |-BinaryOperator 0x14b141a60 <line:10:6, col:23> 'int' '<'
|   |     | |-ImplicitCastExpr 0x14b141a48 <col:6, col:7> 'int' <LValueToRValue>
|   |     | | `-UnaryOperator 0x14b141a10 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
|   |     | |   `-ImplicitCastExpr 0x14b1419f8 <col:7> 'int *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x14b1419d8 <col:7> 'int *' lvalue ParmVar 0x14b128428 'firsthardlink' 'int *'
|   |     | `-IntegerLiteral 0x14b141a28 <col:23> 'int' 0
|   |     |-CompoundStmt 0x14b141e60 <col:26, line:13:2>
|   |     | |-BinaryOperator 0x14b141c18 <line:11:6, col:33> 'int' contains-errors '='
|   |     | | |-UnaryOperator 0x14b141ab8 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x14b141aa0 <col:7> 'int *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x14b141a80 <col:7> 'int *' lvalue ParmVar 0x14b128428 'firsthardlink' 'int *'
|   |     | | `-CallExpr 0x14b141bf0 <col:23, col:33> '<dependent type>' contains-errors
|   |     | |   |-DeclRefExpr 0x14b141bb0 <col:23> 'int ()' Function 0x14b141af8 'rpmfiFX' 'int ()'
|   |     | |   `-RecoveryExpr 0x14b141bd0 <col:31> '<dependent type>' contains-errors lvalue
|   |     | `-BinaryOperator 0x14b141e40 <line:12:6, col:51> 'int' contains-errors '='
|   |     |   |-DeclRefExpr 0x14b141c38 <col:6> 'int' lvalue Var 0x14b128650 'rc' 'int'
|   |     |   `-CallExpr 0x14b141df8 <col:11, col:51> '<dependent type>' contains-errors
|   |     |     |-DeclRefExpr 0x14b141d38 <col:11> 'int ()' Function 0x14b141c80 'expandRegular' 'int ()'
|   |     |     |-RecoveryExpr 0x14b141d58 <col:25> '<dependent type>' contains-errors lvalue
|   |     |     |-DeclRefExpr 0x14b141d78 <col:29> 'const char *' lvalue ParmVar 0x14b128170 'dest' 'const char *'
|   |     |     |-RecoveryExpr 0x14b141d98 <col:35> '<dependent type>' contains-errors lvalue
|   |     |     |-DeclRefExpr 0x14b141db8 <col:40> 'int' lvalue ParmVar 0x14b1282f0 'nodigest' 'int'
|   |     |     `-IntegerLiteral 0x14b141dd8 <col:50> 'int' 1
|   |     `-CompoundStmt 0x14b143700 <line:13:9, line:21:2>
|   |       |-DeclStmt 0x14b1420a0 <line:15:6, col:50>
|   |       | `-VarDecl 0x14b141e98 <col:6, col:49> col:12 used fn 'char *' cinit
|   |       |   `-CallExpr 0x14b142070 <col:17, col:49> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x14b141fe0 <col:17> 'int ()' Function 0x14b141f28 'rpmfilesFN' 'int ()'
|   |       |     |-RecoveryExpr 0x14b142000 <col:28> '<dependent type>' contains-errors lvalue
|   |       |     `-UnaryOperator 0x14b142058 <col:35, col:36> 'int' lvalue prefix '*' cannot overflow
|   |       |       `-ImplicitCastExpr 0x14b142040 <col:36> 'int *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x14b142020 <col:36> 'int *' lvalue ParmVar 0x14b128428 'firsthardlink' 'int *'
|   |       |-BinaryOperator 0x14b1422c8 <line:16:6, col:24> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x14b1420b8 <col:6> 'int' lvalue Var 0x14b128650 'rc' 'int'
|   |       | `-CallExpr 0x14b142268 <col:11, col:24> 'int' contains-errors
|   |       |   |-ImplicitCastExpr 0x14b142250 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x14b1421b8 <col:11> 'int ()' Function 0x14b142100 'link' 'int ()'
|   |       |   |-ImplicitCastExpr 0x14b142298 <col:16> 'char *' contains-errors <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x14b1421d8 <col:16> 'char *' contains-errors lvalue Var 0x14b141e98 'fn' 'char *'
|   |       |   `-ImplicitCastExpr 0x14b1422b0 <col:20> 'const char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x14b1421f8 <col:20> 'const char *' lvalue ParmVar 0x14b128170 'dest' 'const char *'
|   |       |-IfStmt 0x14b142410 <line:17:6, line:19:6>
|   |       | |-BinaryOperator 0x14b142340 <line:17:10, col:15> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x14b142328 <col:10> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x14b1422e8 <col:10> 'int' lvalue Var 0x14b128650 'rc' 'int'
|   |       | | `-IntegerLiteral 0x14b142308 <col:15> 'int' 0
|   |       | `-CompoundStmt 0x14b1423f8 <col:18, line:19:6>
|   |       |   `-BinaryOperator 0x14b1423d8 <line:18:3, col:8> 'int' contains-errors '='
|   |       |     |-DeclRefExpr 0x14b142360 <col:3> 'int' lvalue Var 0x14b128650 'rc' 'int'
|   |       |     `-RecoveryExpr 0x14b1423b8 <col:8> '<dependent type>' contains-errors lvalue
|   |       `-CallExpr 0x14b1436a8 <line:20:6, col:13> 'void' contains-errors
|   |         |-ImplicitCastExpr 0x14b143690 <col:6> 'void (*)(void *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x14b143600 <col:6> 'void (void *)' Function 0x14b143490 'free' 'void (void *)'
|   |         `-ImplicitCastExpr 0x14b1436e8 <col:11> 'void *' contains-errors <BitCast>
|   |           `-ImplicitCastExpr 0x14b1436d0 <col:11> 'char *' contains-errors <LValueToRValue>
|   |             `-DeclRefExpr 0x14b143620 <col:11> 'char *' contains-errors lvalue Var 0x14b141e98 'fn' 'char *'
|   |-IfStmt 0x14b143e80 <line:24:5, line:33:5> has_else
|   | |-BinaryOperator 0x14b1437f0 <line:24:9, col:23> 'int' contains-errors '<='
|   | | |-ImplicitCastExpr 0x14b1437d8 <col:9> 'int' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x14b143798 <col:9> 'int' contains-errors lvalue Var 0x14b128708 'numHardlinks' 'int'
|   | | `-IntegerLiteral 0x14b1437b8 <col:23> 'int' 1
|   | |-CompoundStmt 0x14b1439c8 <col:26, line:27:5>
|   | | `-IfStmt 0x14b1439a8 <line:25:2, line:26:51>
|   | |   |-UnaryOperator 0x14b143848 <line:25:6, col:7> 'int' prefix '!' cannot overflow
|   | |   | `-ImplicitCastExpr 0x14b143830 <col:7> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x14b143810 <col:7> 'int' lvalue Var 0x14b128650 'rc' 'int'
|   | |   `-BinaryOperator 0x14b143988 <line:26:6, col:51> 'int' contains-errors '='
|   | |     |-DeclRefExpr 0x14b143860 <col:6> 'int' lvalue Var 0x14b128650 'rc' 'int'
|   | |     `-CallExpr 0x14b143940 <col:11, col:51> '<dependent type>' contains-errors
|   | |       |-DeclRefExpr 0x14b143880 <col:11> 'int ()' Function 0x14b141c80 'expandRegular' 'int ()'
|   | |       |-RecoveryExpr 0x14b1438a0 <col:25> '<dependent type>' contains-errors lvalue
|   | |       |-DeclRefExpr 0x14b1438c0 <col:29> 'const char *' lvalue ParmVar 0x14b128170 'dest' 'const char *'
|   | |       |-RecoveryExpr 0x14b1438e0 <col:35> '<dependent type>' contains-errors lvalue
|   | |       |-DeclRefExpr 0x14b143900 <col:40> 'int' lvalue ParmVar 0x14b1282f0 'nodigest' 'int'
|   | |       `-IntegerLiteral 0x14b143920 <col:50> 'int' 0
|   | `-IfStmt 0x14b143e50 <line:27:12, line:33:5> has_else
|   |   |-CallExpr 0x14b143b00 <line:27:16, col:41> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14b143ac0 <col:16> 'int ()' Function 0x14b143a08 'rpmfiArchiveHasContent' 'int ()'
|   |   | `-RecoveryExpr 0x14b143ae0 <col:39> '<dependent type>' contains-errors lvalue
|   |   |-CompoundStmt 0x14b143d88 <col:44, line:31:5>
|   |   | |-IfStmt 0x14b143cc0 <line:28:2, line:29:51>
|   |   | | |-UnaryOperator 0x14b143b60 <line:28:6, col:7> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x14b143b48 <col:7> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x14b143b28 <col:7> 'int' lvalue Var 0x14b128650 'rc' 'int'
|   |   | | `-BinaryOperator 0x14b143ca0 <line:29:6, col:51> 'int' contains-errors '='
|   |   | |   |-DeclRefExpr 0x14b143b78 <col:6> 'int' lvalue Var 0x14b128650 'rc' 'int'
|   |   | |   `-CallExpr 0x14b143c58 <col:11, col:51> '<dependent type>' contains-errors
|   |   | |     |-DeclRefExpr 0x14b143b98 <col:11> 'int ()' Function 0x14b141c80 'expandRegular' 'int ()'
|   |   | |     |-RecoveryExpr 0x14b143bb8 <col:25> '<dependent type>' contains-errors lvalue
|   |   | |     |-DeclRefExpr 0x14b143bd8 <col:29> 'const char *' lvalue ParmVar 0x14b128170 'dest' 'const char *'
|   |   | |     |-RecoveryExpr 0x14b143bf8 <col:35> '<dependent type>' contains-errors lvalue
|   |   | |     |-DeclRefExpr 0x14b143c18 <col:40> 'int' lvalue ParmVar 0x14b1282f0 'nodigest' 'int'
|   |   | |     `-IntegerLiteral 0x14b143c38 <col:50> 'int' 0
|   |   | `-BinaryOperator 0x14b143d68 <line:30:2, col:20> 'int' '='
|   |   |   |-UnaryOperator 0x14b143d18 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x14b143d00 <col:3> 'int *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x14b143ce0 <col:3> 'int *' lvalue ParmVar 0x14b128428 'firsthardlink' 'int *'
|   |   |   `-UnaryOperator 0x14b143d50 <col:19, col:20> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x14b143d30 <col:20> 'int' 1
|   |   `-CompoundStmt 0x14b143e38 <line:31:12, line:33:5>
|   |     `-BinaryOperator 0x14b143e18 <line:32:2, col:13> 'int' '='
|   |       |-UnaryOperator 0x14b143de0 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   |       | `-ImplicitCastExpr 0x14b143dc8 <col:3> 'int *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x14b143da8 <col:3> 'int *' lvalue ParmVar 0x14b1283a8 'setmeta' 'int *'
|   |       `-IntegerLiteral 0x14b143df8 <col:13> 'int' 0
|   `-ReturnStmt 0x14b143ee8 <line:35:5, col:12>
|     `-ImplicitCastExpr 0x14b143ed0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14b143eb0 <col:12> 'int' lvalue Var 0x14b128650 'rc' 'int'
`-FunctionDecl 0x14b143490 <line:20:6> col:6 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14b143590 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14b143538 <<invalid sloc>> Implicit 873
