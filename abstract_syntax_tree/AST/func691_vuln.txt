TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x120140ea8 <dataset_diviso_filec/func691_vuln.c:1:1, line:51:1> line:1:19 check_entry_size_and_hooks 'int (struct arpt_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)' static inline
  |-ParmVarDecl 0x120128648 <col:46, col:65> col:65 used e 'struct arpt_entry *'
  |-ParmVarDecl 0x120140a28 <line:2:11, col:33> col:33 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x120140ad8 <line:3:11, col:32> col:32 used base 'const unsigned char *'
  |-ParmVarDecl 0x120140b58 <line:4:11, col:32> col:32 used limit 'const unsigned char *'
  |-ParmVarDecl 0x120140c08 <line:5:11, col:31> col:31 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x120140c88 <line:6:11, col:31> col:31 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x120140d08 <line:7:11, col:24> col:24 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x120145858 <line:8:1, line:51:1>
    |-DeclStmt 0x120141050 <line:9:2, col:16>
    | `-VarDecl 0x120140fe8 <col:2, col:15> col:15 used h 'unsigned int'
    |-DeclStmt 0x1201410e8 <line:10:2, col:9>
    | `-VarDecl 0x120141080 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x120141770 <line:12:2, line:17:2>
    | |-RecoveryExpr 0x120141410 <line:12:6, line:14:44> '_Bool' contains-errors
    | `-CompoundStmt 0x120141750 <col:51, line:17:2>
    |   |-CallExpr 0x120141648 <line:15:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x120141630 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x120141560 <col:3> 'int ()' Function 0x1201414a8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x120141678 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x1201415c0 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x120141690 <col:19> 'struct arpt_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1201415e0 <col:19> 'struct arpt_entry *' lvalue ParmVar 0x120128648 'e' 'struct arpt_entry *'
    |   `-ReturnStmt 0x120141740 <line:16:3, col:11>
    |     `-UnaryOperator 0x120141728 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x120141710 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1201416f0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x120144500 <line:19:2, line:24:2>
    | |-RecoveryExpr 0x120141908 <line:19:6, line:20:65> '_Bool' contains-errors
    | `-CompoundStmt 0x1201444e0 <col:68, line:24:2>
    |   |-CallExpr 0x120144400 <line:21:3, line:22:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x120141928 <line:21:3> 'int ()' Function 0x1201414a8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x120141948 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x120141968 <line:22:5> 'struct arpt_entry *' lvalue ParmVar 0x120128648 'e' 'struct arpt_entry *'
    |   | `-RecoveryExpr 0x1201419c0 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x120141988 <col:8> 'struct arpt_entry *' lvalue ParmVar 0x120128648 'e' 'struct arpt_entry *'
    |   `-ReturnStmt 0x1201444d0 <line:23:3, col:11>
    |     `-UnaryOperator 0x1201444b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1201444a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x120144480 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1201446b8 <line:26:2, col:21> 'int' '='
    | |-DeclRefExpr 0x120144520 <col:2> 'int' lvalue Var 0x120141080 'err' 'int'
    | `-CallExpr 0x120144678 <col:8, col:21> 'int'
    |   |-ImplicitCastExpr 0x120144660 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x120144620 <col:8> 'int ()' Function 0x120144568 'check_entry' 'int ()'
    |   `-ImplicitCastExpr 0x1201446a0 <col:20> 'struct arpt_entry *' <LValueToRValue>
    |     `-DeclRefExpr 0x120144640 <col:20> 'struct arpt_entry *' lvalue ParmVar 0x120128648 'e' 'struct arpt_entry *'
    |-IfStmt 0x120144758 <line:27:2, line:28:10>
    | |-ImplicitCastExpr 0x1201446f8 <line:27:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1201446d8 <col:6> 'int' lvalue Var 0x120141080 'err' 'int'
    | `-ReturnStmt 0x120144748 <line:28:3, col:10>
    |   `-ImplicitCastExpr 0x120144730 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x120144710 <col:10> 'int' lvalue Var 0x120141080 'err' 'int'
    |-ForStmt 0x120145568 <line:31:2, line:45:2>
    | |-BinaryOperator 0x1201447d0 <line:31:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x120144778 <col:7> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x1201447b8 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x120144798 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x120144868 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1201447f0 <col:14> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x120144848 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1201448a8 <col:35, col:36> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x120144888 <col:35> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    | `-CompoundStmt 0x120145540 <col:40, line:45:2>
    |   |-IfStmt 0x120144a08 <line:32:3, line:33:4>
    |   | |-UnaryOperator 0x1201449e8 <line:32:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x1201449c8 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x1201449a8 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x120144978 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x1201448c0 <col:9> 'unsigned int' lvalue ParmVar 0x120140d08 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x120144990 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x120144958 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x120144938 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x1201448e0 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x120144920 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x120144900 <col:29> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x120144a00 <line:33:4>
    |   |-IfStmt 0x120144d58 <line:34:3, line:35:43>
    |   | |-BinaryOperator 0x120144bb8 <line:34:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x120144ad8 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x120144a78 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x120144a60 <col:24> 'struct arpt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x120144a28 <col:24> 'struct arpt_entry *' lvalue ParmVar 0x120128648 'e' 'struct arpt_entry *'
    |   | | | `-ImplicitCastExpr 0x120144ac0 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x120144aa0 <col:28> 'const unsigned char *' lvalue ParmVar 0x120140ad8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x120144ba0 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x120144b88 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x120144b68 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x120144b38 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x120144af8 <col:36> 'const unsigned int *' lvalue ParmVar 0x120140c08 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x120144b50 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x120144b18 <col:49> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x120144d38 <line:35:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x120144c88 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x120144c58 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x120144c10 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x120144bd8 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x120140a28 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x120144c70 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x120144c38 <col:24> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x120144d18 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x120144ce8 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x120144ca8 <col:29> 'const unsigned int *' lvalue ParmVar 0x120140c08 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x120144d00 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x120144cc8 <col:42> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    |   `-IfStmt 0x120145520 <line:36:3, line:44:3>
    |     |-BinaryOperator 0x120144f08 <line:36:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x120144e28 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x120144dc8 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x120144db0 <col:24> 'struct arpt_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x120144d78 <col:24> 'struct arpt_entry *' lvalue ParmVar 0x120128648 'e' 'struct arpt_entry *'
    |     | | `-ImplicitCastExpr 0x120144e10 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x120144df0 <col:28> 'const unsigned char *' lvalue ParmVar 0x120140ad8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x120144ef0 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x120144ed8 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x120144eb8 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x120144e88 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x120144e48 <col:36> 'const unsigned int *' lvalue ParmVar 0x120140c88 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x120144ea0 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x120144e68 <col:47> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    |     `-CompoundStmt 0x120145500 <col:51, line:44:3>
    |       |-IfStmt 0x120145350 <line:37:4, line:42:4>
    |       | |-UnaryOperator 0x1201450a0 <line:37:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x120145060 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x120145048 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x120145008 <col:9> 'int ()' Function 0x120144f50 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x120145088 <col:25> 'struct arpt_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x120145028 <col:25> 'struct arpt_entry *' lvalue ParmVar 0x120128648 'e' 'struct arpt_entry *'
    |       | `-CompoundStmt 0x120145330 <col:29, line:42:4>
    |       |   |-CallExpr 0x120145248 <line:38:5, line:40:17> 'int'
    |       |   | |-ImplicitCastExpr 0x120145230 <line:38:5> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x120145198 <col:5> 'int ()' Function 0x1201450e0 'pr_err' 'int ()'
    |       |   | `-ImplicitCastExpr 0x120145270 <col:12, line:40:12> 'char *' <ArrayToPointerDecay>
    |       |   |   `-StringLiteral 0x120145200 <line:38:12, line:40:12> 'char[10]' lvalue "STRSTRSTR"
    |       |   `-ReturnStmt 0x120145320 <line:41:5, col:13>
    |       |     `-UnaryOperator 0x120145308 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |       `-ImplicitCastExpr 0x1201452f0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |         `-RecoveryExpr 0x1201452d0 <col:13> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x1201454e0 <line:43:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x120145430 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x120145400 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x1201453a8 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x120145370 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x120140a28 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x120145418 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x1201453d0 <col:23> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x1201454c0 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x120145490 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x120145450 <col:28> 'const unsigned int *' lvalue ParmVar 0x120140c88 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x1201454a8 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x120145470 <col:39> 'unsigned int' lvalue Var 0x120140fe8 'h' 'unsigned int'
    |-BinaryOperator 0x120145808 <line:49:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1201457c0 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x120145788 <col:2> 'struct arpt_entry *' lvalue ParmVar 0x120128648 'e' 'struct arpt_entry *'
    | `-IntegerLiteral 0x1201457e8 <col:16> 'int' 0
    `-ReturnStmt 0x120145848 <line:50:2, col:9>
      `-IntegerLiteral 0x120145828 <col:9> 'int' 0
