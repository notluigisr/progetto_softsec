TranslationUnitDecl 0x157055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1570564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157055bd0 '__int128'
|-TypedefDecl 0x157056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157055bf0 'unsigned __int128'
|-TypedefDecl 0x160017e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x160017c00 'struct __NSConstantString_tag'
|   `-Record 0x157056580 '__NSConstantString_tag'
|-TypedefDecl 0x160017e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157055d90 '__SVInt8_t'
|-TypedefDecl 0x160017f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157055db0 '__SVInt16_t'
|-TypedefDecl 0x160017f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157055dd0 '__SVInt32_t'
|-TypedefDecl 0x160017fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157055df0 '__SVInt64_t'
|-TypedefDecl 0x160018038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157055e10 '__SVUint8_t'
|-TypedefDecl 0x1600180a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157055e30 '__SVUint16_t'
|-TypedefDecl 0x160018108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157055e50 '__SVUint32_t'
|-TypedefDecl 0x160018170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157055e70 '__SVUint64_t'
|-TypedefDecl 0x1600181d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157055e90 '__SVFloat16_t'
|-TypedefDecl 0x160018240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1600182a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157055ed0 '__SVFloat64_t'
|-TypedefDecl 0x160018310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x160018378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1600183e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x160018448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1600184b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x160018518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x160018580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1600185e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x160018650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1600186b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x160018720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x160018788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1600187f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x160018858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1600188c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1570560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x160018928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1570560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x160018990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1570560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1600189f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x160018a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x160018ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x160018b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x160018b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x160019400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1570561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x160019468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1570561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1600194d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1570561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x160019538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1600195a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157056230 '__clang_svint16x4_t'
|-TypedefDecl 0x160019608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157056250 '__clang_svint32x4_t'
|-TypedefDecl 0x160019670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1600196d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x160019740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1570562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1600197a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1570562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x160019810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1570562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x160019878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1600198e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x160019948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1600199b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x160019a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157056390 '__SVBool_t'
|-TypedefDecl 0x160019a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1570563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x160019ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1570563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x160019b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1570563f0 '__SVCount_t'
|-TypedefDecl 0x160019bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x160019bb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
|-TypedefDecl 0x160019c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x160019bb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
|-FunctionDecl 0x160019e88 <dataset_diviso_filec/func18868_vuln.c:1:1, line:34:1> line:1:1 invalid gs_add_outputfile_control_path 'int (int *, const char *)'
| |-ParmVarDecl 0x160019d28 <col:32, col:45> col:45 invalid mem 'int *'
| |-ParmVarDecl 0x160019da8 <col:50, col:62> col:62 used fname 'const char *'
| `-CompoundStmt 0x157042e98 <line:2:1, line:34:1>
|   |-DeclStmt 0x160019fd8 <line:3:5, col:37>
|   | `-VarDecl 0x160019f58 <col:5, col:11> col:11 used fp 'char *'
|   |-DeclStmt 0x16001a090 <line:4:5, col:25>
|   | `-VarDecl 0x16001a008 <col:5, col:22> col:15 used pipe 'const int' cinit
|   |   `-IntegerLiteral 0x16001a070 <col:22> 'int' 124
|   |-DeclStmt 0x160033810 <line:5:5, col:34>
|   | `-VarDecl 0x16001a0c0 <col:5, col:33> col:15 used len 'const int' cinit
|   |   `-ImplicitCastExpr 0x1600337f8 <col:21, col:33> 'int' <IntegralCast>
|   |     `-CallExpr 0x1600337b8 <col:21, col:33> 'unsigned long'
|   |       |-ImplicitCastExpr 0x1600337a0 <col:21> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x160033710 <col:21> 'unsigned long (const char *)' Function 0x1600335a0 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x1600337e0 <col:28> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x160033730 <col:28> 'const char *' lvalue ParmVar 0x160019da8 'fname' 'const char *'
|   |-DeclStmt 0x160033940 <line:6:5, col:16>
|   | |-VarDecl 0x160033840 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1600338c0 <col:5, col:12> col:12 used code 'int'
|   |-IfStmt 0x160033a38 <line:9:5, line:10:16>
|   | |-BinaryOperator 0x1600339d0 <line:9:9, col:16> 'int' contains-errors '>='
|   | | |-DeclRefExpr 0x160033958 <col:9> 'const int' lvalue Var 0x16001a0c0 'len' 'const int'
|   | | `-RecoveryExpr 0x1600339b0 <col:16> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x160033a28 <line:10:9, col:16>
|   |   `-RecoveryExpr 0x160033a08 <col:16> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x160033d88 <line:11:5, col:20> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x160033c80 <col:5> 'char *(char *, const char *)' Function 0x160033aa0 'strcpy' 'char *(char *, const char *)'
|   | |-RecoveryExpr 0x160033d38 <col:12> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x160033cb8 <col:15> 'const char *' lvalue ParmVar 0x160019da8 'fname' 'const char *'
|   |-BinaryOperator 0x160033e30 <line:12:5, col:10> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x160033db8 <col:5> 'char *' lvalue Var 0x160019f58 'fp' 'char *'
|   | `-RecoveryExpr 0x160033e10 <col:10> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x160034030 <line:14:5, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x160033fb0 <col:5> 'int ()' Function 0x160033ef8 'rewrite_percent_specifiers' 'int ()'
|   | `-RecoveryExpr 0x160034010 <col:32> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x157042ca0 <line:15:5, line:29:5>
|   | |-BinaryOperator 0x160034098 <line:15:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x160034058 <col:10> 'int' lvalue Var 0x160033840 'i' 'int'
|   | | `-IntegerLiteral 0x160034078 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x160034128 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1600340f8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1600340b8 <col:17> 'int' lvalue Var 0x160033840 'i' 'int'
|   | | `-ImplicitCastExpr 0x160034110 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1600340d8 <col:21> 'const int' lvalue Var 0x16001a0c0 'len' 'const int'
|   | |-UnaryOperator 0x1600341c0 <col:26, col:27> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1600341a0 <col:26> 'int' lvalue Var 0x160033840 'i' 'int'
|   | `-CompoundStmt 0x157042c80 <col:31, line:29:5>
|   |   |-IfStmt 0x157042ae0 <line:16:9, line:26:9>
|   |   | |-RecoveryExpr 0x160034230 <line:16:13, col:21> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x157042aa8 <col:27, line:26:9>
|   |   |   |-BinaryOperator 0x157042740 <line:19:12, col:69> 'int' contains-errors '='
|   |   |   | |-DeclRefExpr 0x160034300 <col:12> 'int' lvalue Var 0x1600338c0 'code' 'int'
|   |   |   | `-CallExpr 0x157042708 <col:19, col:69> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x157042600 <col:19> 'int ()' Function 0x160034348 'gs_add_control_path' 'int ()'
|   |   |   |   |-RecoveryExpr 0x157042620 <col:39> '<dependent type>' contains-errors lvalue
|   |   |   |   |-RecoveryExpr 0x1570426c8 <col:44> '<dependent type>' contains-errors lvalue
|   |   |   |   `-RecoveryExpr 0x1570426e8 <col:68> '<dependent type>' contains-errors lvalue
|   |   |   |-IfStmt 0x157042820 <line:20:12, line:21:23>
|   |   |   | |-BinaryOperator 0x1570427b8 <line:20:16, col:23> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x1570427a0 <col:16> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x157042760 <col:16> 'int' lvalue Var 0x1600338c0 'code' 'int'
|   |   |   | | `-IntegerLiteral 0x157042780 <col:23> 'int' 0
|   |   |   | `-ReturnStmt 0x157042810 <line:21:16, col:23>
|   |   |   |   `-ImplicitCastExpr 0x1570427f8 <col:23> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1570427d8 <col:23> 'int' lvalue Var 0x1600338c0 'code' 'int'
|   |   |   |-BinaryOperator 0x1570429a0 <line:22:12, col:69> 'int' contains-errors '='
|   |   |   | |-DeclRefExpr 0x157042840 <col:12> 'int' lvalue Var 0x1600338c0 'code' 'int'
|   |   |   | `-CallExpr 0x157042968 <col:19, col:69> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x157042860 <col:19> 'int ()' Function 0x160034348 'gs_add_control_path' 'int ()'
|   |   |   |   |-RecoveryExpr 0x157042880 <col:39> '<dependent type>' contains-errors lvalue
|   |   |   |   |-RecoveryExpr 0x157042928 <col:44> '<dependent type>' contains-errors lvalue
|   |   |   |   `-RecoveryExpr 0x157042948 <col:68> '<dependent type>' contains-errors lvalue
|   |   |   |-IfStmt 0x157042a80 <line:23:12, line:24:23>
|   |   |   | |-BinaryOperator 0x157042a18 <line:23:16, col:23> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x157042a00 <col:16> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1570429c0 <col:16> 'int' lvalue Var 0x1600338c0 'code' 'int'
|   |   |   | | `-IntegerLiteral 0x1570429e0 <col:23> 'int' 0
|   |   |   | `-ReturnStmt 0x157042a70 <line:24:16, col:23>
|   |   |   |   `-ImplicitCastExpr 0x157042a58 <col:23> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x157042a38 <col:23> 'int' lvalue Var 0x1600338c0 'code' 'int'
|   |   |   `-BreakStmt 0x157042aa0 <line:25:12>
|   |   `-IfStmt 0x157042c60 <line:27:9, line:28:13>
|   |     |-RecoveryExpr 0x157042c38 <line:27:13, col:32> '_Bool' contains-errors
|   |     `-BreakStmt 0x157042c58 <line:28:13>
|   `-IfStmt 0x157042e18 <line:31:5, line:32:16>
|     |-BinaryOperator 0x157042db0 <line:31:9, col:16> 'int' '<'
|     | |-ImplicitCastExpr 0x157042d98 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x157042d58 <col:9> 'int' lvalue Var 0x1600338c0 'code' 'int'
|     | `-IntegerLiteral 0x157042d78 <col:16> 'int' 0
|     `-ReturnStmt 0x157042e08 <line:32:9, col:16>
|       `-ImplicitCastExpr 0x157042df0 <col:16> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x157042dd0 <col:16> 'int' lvalue Var 0x1600338c0 'code' 'int'
|-FunctionDecl 0x1600335a0 <line:5:21> col:21 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1600336a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x160033648 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x160033aa0 <line:11:5> col:5 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x160033ba0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x160033c08 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x160033b48 <<invalid sloc>> Implicit 885
