TranslationUnitDecl 0x138055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1380564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x138055bd0 '__int128'
|-TypedefDecl 0x138056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x138055bf0 'unsigned __int128'
|-TypedefDecl 0x138126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x138126000 'struct __NSConstantString_tag'
|   `-Record 0x138056580 '__NSConstantString_tag'
|-TypedefDecl 0x138126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x138055d90 '__SVInt8_t'
|-TypedefDecl 0x138126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x138055db0 '__SVInt16_t'
|-TypedefDecl 0x138126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x138055dd0 '__SVInt32_t'
|-TypedefDecl 0x1381263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x138055df0 '__SVInt64_t'
|-TypedefDecl 0x138126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x138055e10 '__SVUint8_t'
|-TypedefDecl 0x1381264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x138055e30 '__SVUint16_t'
|-TypedefDecl 0x138126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x138055e50 '__SVUint32_t'
|-TypedefDecl 0x138126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x138055e70 '__SVUint64_t'
|-TypedefDecl 0x1381265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x138055e90 '__SVFloat16_t'
|-TypedefDecl 0x138126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x138055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1381266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x138055ed0 '__SVFloat64_t'
|-TypedefDecl 0x138126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x138055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x138126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x138055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1381267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x138055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x138126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x138055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1381268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x138055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x138126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x138055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x138126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x138055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1381269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x138055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x138126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x138055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x138126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x138056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x138126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x138056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x138126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x138056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x138126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x138056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x138126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x138056090 '__clang_svint8x3_t'
|-TypedefDecl 0x138126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1380560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x138126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1380560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x138126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1380560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x138126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x138056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x138126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x138056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x138126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x138056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x138126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x138056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x138126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x138056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x138127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1380561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x138127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1380561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1381278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1380561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x138127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x138056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1381279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x138056230 '__clang_svint16x4_t'
|-TypedefDecl 0x138127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x138056250 '__clang_svint32x4_t'
|-TypedefDecl 0x138127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x138056270 '__clang_svint64x4_t'
|-TypedefDecl 0x138127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x138056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x138127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1380562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x138127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1380562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x138127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1380562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x138127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x138056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x138127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x138056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x138127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x138056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x138127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x138056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x138127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x138056390 '__SVBool_t'
|-TypedefDecl 0x138127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1380563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x138127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1380563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x138127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1380563f0 '__SVCount_t'
|-TypedefDecl 0x138127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x138127fb0 'char *'
|   `-BuiltinType 0x1380556b0 'char'
|-TypedefDecl 0x138128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x138127fb0 'char *'
|   `-BuiltinType 0x1380556b0 'char'
|-FunctionDecl 0x1381281f8 <dataset_diviso_filec/func23931_vuln.c:1:1, line:57:1> line:1:18 invalid find_command 'int *(char *)' static
| |-ParmVarDecl 0x1381280f0 <col:31, col:37> col:37 used name 'char *'
| `-CompoundStmt 0x138144628 <line:2:1, line:57:1>
|   |-DeclStmt 0x138128328 <line:3:3, col:11>
|   | `-VarDecl 0x1381282c0 <col:3, col:8> col:8 used len 'int'
|   |-DeclStmt 0x1381283c0 <line:4:3, col:12>
|   | `-VarDecl 0x138128358 <col:3, col:9> col:9 used end 'char *'
|   |-CallExpr 0x1381285f8 <line:5:3, col:19> 'int'
|   | |-ImplicitCastExpr 0x1381285e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x138128530 <col:3> 'int ()' Function 0x138128478 'DBUG_ENTER' 'int ()'
|   | `-ImplicitCastExpr 0x138128620 <col:14> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x138128590 <col:14> 'char[4]' lvalue "STR"
|   |-CallExpr 0x138141800 <line:7:3, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x138128718 <col:3> 'int ()' Function 0x138128660 'DBUG_ASSERT' 'int ()'
|   | `-BinaryOperator 0x1381287d8 <col:15, col:23> 'int' contains-errors '!='
|   |   |-DeclRefExpr 0x138128738 <col:15> 'char *' lvalue ParmVar 0x1381280f0 'name' 'char *'
|   |   `-RecoveryExpr 0x1381287b8 <col:23> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x138141980 <line:8:3, col:25> 'int'
|   | |-ImplicitCastExpr 0x138141968 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x138141908 <col:3> 'int ()' Function 0x138141850 'DBUG_PRINT' 'int ()'
|   | |-ImplicitCastExpr 0x1381419b0 <col:14> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x138141928 <col:14> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x1381419c8 <col:21> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x138141948 <col:21> 'char *' lvalue ParmVar 0x1381280f0 'name' 'char *'
|   |-WhileStmt 0x138141c30 <line:10:3, line:11:9>
|   | |-CallExpr 0x138141bc8 <line:10:10, col:40> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x138141ac0 <col:10> 'int ()' Function 0x138141a08 'my_isspace' 'int ()'
|   | | |-RecoveryExpr 0x138141b78 <col:21> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x138141bb0 <col:35, col:36> 'char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x138141b98 <col:36> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x138141af8 <col:36> 'char *' lvalue ParmVar 0x1381280f0 'name' 'char *'
|   | `-UnaryOperator 0x138141c18 <line:11:5, col:9> 'char *' postfix '++'
|   |   `-DeclRefExpr 0x138141bf8 <col:5> 'char *' lvalue ParmVar 0x1381280f0 'name' 'char *'
|   |-IfStmt 0x138143ff8 <line:18:3, line:27:5> has_else
|   | |-ParenExpr 0x138143c10 <line:18:7, col:32> 'char *'
|   | | `-BinaryOperator 0x138143bf0 <col:8, col:31> 'char *' '='
|   | |   |-DeclRefExpr 0x138143a00 <col:8> 'char *' lvalue Var 0x138128358 'end' 'char *'
|   | |   `-ImplicitCastExpr 0x138143bd8 <col:12, col:31> 'char *' <IntegralToPointer>
|   | |     `-CallExpr 0x138143b78 <col:12, col:31> 'int'
|   | |       |-ImplicitCastExpr 0x138143b60 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x138143b00 <col:12> 'int ()' Function 0x138143a48 'strcont' 'int ()'
|   | |       |-ImplicitCastExpr 0x138143ba8 <col:20> 'char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x138143b20 <col:20> 'char *' lvalue ParmVar 0x1381280f0 'name' 'char *'
|   | |       `-ImplicitCastExpr 0x138143bc0 <col:26> 'char *' <ArrayToPointerDecay>
|   | |         `-StringLiteral 0x138143b40 <col:26> 'char[4]' lvalue "STR"
|   | |-CompoundStmt 0x138143fa8 <line:19:3, line:25:3>
|   | | |-BinaryOperator 0x138143d88 <line:20:5, col:27> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x138143c30 <col:5> 'int' lvalue Var 0x1381282c0 'len' 'int'
|   | | | `-RecoveryExpr 0x138143d58 <col:9, col:27> '<dependent type>' contains-errors lvalue
|   | | |   |-ParenExpr 0x138143ca8 <col:9, col:14> '<overloaded function type>' lvalue
|   | | |   | `-UnresolvedLookupExpr 0x138143c68 <col:10> '<overloaded function type>' lvalue (no ADL) = 'uint' empty
|   | | |   `-BinaryOperator 0x138143d38 <col:17, col:23> 'long' '-'
|   | | |     |-ImplicitCastExpr 0x138143d08 <col:17> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x138143cc8 <col:17> 'char *' lvalue Var 0x138128358 'end' 'char *'
|   | | |     `-ImplicitCastExpr 0x138143d20 <col:23> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x138143ce8 <col:23> 'char *' lvalue ParmVar 0x1381280f0 'name' 'char *'
|   | | |-WhileStmt 0x138143e70 <line:21:5, line:22:10>
|   | | | |-RecoveryExpr 0x138143e18 <line:21:12, col:41> '_Bool' contains-errors
|   | | | `-UnaryOperator 0x138143e58 <line:22:7, col:10> 'char *' postfix '++'
|   | | |   `-DeclRefExpr 0x138143e38 <col:7> 'char *' lvalue Var 0x138128358 'end' 'char *'
|   | | `-IfStmt 0x138143f88 <line:23:5, line:24:12>
|   | |   |-UnaryOperator 0x138143ef8 <line:23:9, col:11> 'int' prefix '!' cannot overflow
|   | |   | `-ImplicitCastExpr 0x138143ee0 <col:10, col:11> 'char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x138143ec8 <col:10, col:11> 'char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x138143eb0 <col:11> 'char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x138143e90 <col:11> 'char *' lvalue Var 0x138128358 'end' 'char *'
|   | |   `-BinaryOperator 0x138143f68 <line:24:7, col:12> 'char *' '='
|   | |     |-DeclRefExpr 0x138143f10 <col:7> 'char *' lvalue Var 0x138128358 'end' 'char *'
|   | |     `-ImplicitCastExpr 0x138143f50 <col:12> 'char *' <NullToPointer>
|   | |       `-IntegerLiteral 0x138143f30 <col:12> 'int' 0
|   | `-NullStmt 0x138143ff0 <line:27:5>
|   |-DeclStmt 0x1381440e0 <line:29:3, col:16>
|   | `-VarDecl 0x138144040 <col:3, col:15> col:7 used index 'int' cinit
|   |   `-UnaryOperator 0x1381440c8 <col:14, col:15> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1381440a8 <col:15> 'int' 1
|   |-IfStmt 0x138144490 <line:30:3, line:49:3> has_else
|   | |-RecoveryExpr 0x1381440f8 <line:30:7> '_Bool' contains-errors
|   | |-CompoundStmt 0x138144210 <line:31:3, line:34:3>
|   | `-CompoundStmt 0x138144480 <line:36:3, line:49:3>
|   `-IfStmt 0x1381445e8 <line:51:3, line:55:3>
|     |-BinaryOperator 0x138144518 <line:51:7, col:16> 'int' '>='
|     | |-ImplicitCastExpr 0x138144500 <col:7> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1381444c0 <col:7> 'int' lvalue Var 0x138144040 'index' 'int'
|     | `-IntegerLiteral 0x1381444e0 <col:16> 'int' 0
|     `-CompoundStmt 0x1381445d8 <line:52:3, line:55:3>
`-FunctionDecl 0x138142100 <line:13:29> col:29 implicit used strstr 'char *(const char *, const char *)' extern
  |-ParmVarDecl 0x138142200 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x138142268 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1381421a8 <<invalid sloc>> Implicit 898
