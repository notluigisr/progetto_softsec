TranslationUnitDecl 0x14c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c055bd0 '__int128'
|-TypedefDecl 0x14c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c055bf0 'unsigned __int128'
|-TypedefDecl 0x14c126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c126800 'struct __NSConstantString_tag'
|   `-Record 0x14c056580 '__NSConstantString_tag'
|-TypedefDecl 0x14c126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c055d90 '__SVInt8_t'
|-TypedefDecl 0x14c126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c055db0 '__SVInt16_t'
|-TypedefDecl 0x14c126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c055dd0 '__SVInt32_t'
|-TypedefDecl 0x14c126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c055df0 '__SVInt64_t'
|-TypedefDecl 0x14c126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c055e10 '__SVUint8_t'
|-TypedefDecl 0x14c126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c055e30 '__SVUint16_t'
|-TypedefDecl 0x14c126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c055e50 '__SVUint32_t'
|-TypedefDecl 0x14c126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c055e70 '__SVUint64_t'
|-TypedefDecl 0x14c126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c055e90 '__SVFloat16_t'
|-TypedefDecl 0x14c126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c1270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c1271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c1272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c1273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c1274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c1275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c1276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c1280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c1281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c1282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c1283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c1284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c1285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c056390 '__SVBool_t'
|-TypedefDecl 0x14c128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c1286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c0563f0 '__SVCount_t'
|-TypedefDecl 0x14c1287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c1287b0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-TypedefDecl 0x14c128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c1287b0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-FunctionDecl 0x14c128c38 <dataset_diviso_filec/func74_vuln.c:1:1, line:81:1> line:1:14 invalid get_object 'char *(int *, int, const int *, int *, int *)' static
| |-ParmVarDecl 0x14c128928 <line:2:5, col:19> col:19 invalid fp 'int *'
| |-ParmVarDecl 0x14c1289a8 <line:3:5, col:19> col:19 used obj_id 'int'
| |-ParmVarDecl 0x14c128a28 <line:4:5, col:19> col:19 invalid xref 'const int *'
| |-ParmVarDecl 0x14c128aa8 <line:5:5, col:19> col:19 invalid size 'int *'
| |-ParmVarDecl 0x14c128b28 <line:6:5, col:19> col:19 used is_stream 'int *'
| `-CompoundStmt 0x14c1481e8 <line:7:1, line:81:1>
|   |-DeclStmt 0x14c128da8 <line:8:5, col:37>
|   | `-VarDecl 0x14c128d20 <col:5, col:34> col:25 used blk_sz 'const int' static cinit
|   |   `-IntegerLiteral 0x14c128d88 <col:34> 'int' 256
|   |-DeclStmt 0x14c142120 <line:9:5, col:69>
|   | |-VarDecl 0x14c128dd8 <col:5, col:25> col:25 used i 'int'
|   | |-VarDecl 0x14c128e58 <col:5, col:28> col:28 used total_sz 'int'
|   | |-VarDecl 0x14c128ed8 <col:5, col:38> col:38 used read_sz 'int'
|   | |-VarDecl 0x14c128f58 <col:5, col:47> col:47 used n_blks 'int'
|   | |-VarDecl 0x14c142000 <col:5, col:55> col:55 used search 'int'
|   | `-VarDecl 0x14c142080 <col:5, col:63> col:63 used stream 'int'
|   |-UnaryExprOrTypeTraitExpr 0x14c1421a8 <line:10:5, col:25> 'unsigned long' sizeof
|   | `-DeclRefExpr 0x14c142188 <col:25> 'int' lvalue ParmVar 0x14c1289a8 'obj_id' 'int' non_odr_use_unevaluated
|   |-DeclStmt 0x14c1422e0 <line:11:5, col:33>
|   | |-VarDecl 0x14c1421e0 <col:5, col:25> col:25 used c 'char *'
|   | `-VarDecl 0x14c142260 <col:5, col:29> col:29 used data 'char *'
|   |-DeclStmt 0x14c142378 <line:12:5, col:30>
|   | `-VarDecl 0x14c142310 <col:5, col:25> col:25 used start 'long'
|   |-DeclStmt 0x14c142410 <line:13:5, col:30>
|   | `-VarDecl 0x14c1423a8 <col:5, col:25> col:25 referenced invalid entry 'const int *'
|   |-IfStmt 0x14c142528 <line:15:5, line:16:15>
|   | |-RecoveryExpr 0x14c142428 <line:15:9> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x14c142508 <line:16:7, col:15> '<dependent type>' contains-errors '='
|   |   |-UnaryOperator 0x14c1424f0 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x14c1424d8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   `-RecoveryExpr 0x14c142448 <col:8> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x14c142498 <col:15> 'int' 0
|   |-IfStmt 0x14c142610 <line:18:5, line:19:20>
|   | |-ImplicitCastExpr 0x14c142568 <line:18:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14c142548 <col:9> 'int *' lvalue ParmVar 0x14c128b28 'is_stream' 'int *'
|   | `-BinaryOperator 0x14c1425f0 <line:19:7, col:20> 'int' '='
|   |   |-UnaryOperator 0x14c1425b8 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x14c1425a0 <col:8> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14c142580 <col:8> 'int *' lvalue ParmVar 0x14c128b28 'is_stream' 'int *'
|   |   `-IntegerLiteral 0x14c1425d0 <col:20> 'int' 0
|   |-BinaryOperator 0x14c142818 <line:21:5, col:21> 'long' contains-errors '='
|   | |-DeclRefExpr 0x14c142630 <col:5> 'long' lvalue Var 0x14c142310 'start' 'long'
|   | `-CallExpr 0x14c1427f0 <col:13, col:21> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14c1427b0 <col:13> 'int ()' Function 0x14c1426f8 'ftell' 'int ()'
|   |   `-RecoveryExpr 0x14c1427d0 <col:19> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14c1428d8 <line:24:5, col:13> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14c142858 <col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14c142838 <col:5> 'const int *' lvalue Var 0x14c1423a8 'entry' 'const int *'
|   | `-RecoveryExpr 0x14c1428b8 <col:13> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x14c142e78 <line:25:5, line:30:7>
|   | |-BinaryOperator 0x14c142938 <line:25:10, col:12> 'int' '='
|   | | |-DeclRefExpr 0x14c1428f8 <col:10> 'int' lvalue Var 0x14c128dd8 'i' 'int'
|   | | `-IntegerLiteral 0x14c142918 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14c1429e0 <col:15, col:23> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x14c142958 <col:15> 'int' lvalue Var 0x14c128dd8 'i' 'int'
|   | | `-CXXDependentScopeMemberExpr 0x14c142998 <col:17, col:23> '<dependent type>' contains-errors lvalue ->n_entries
|   | |   `-RecoveryExpr 0x14c142978 <col:17> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x14c142a20 <col:34, col:35> 'int' postfix '++'
|   | | `-DeclRefExpr 0x14c142a00 <col:34> 'int' lvalue Var 0x14c128dd8 'i' 'int'
|   | `-IfStmt 0x14c142e58 <line:26:7, line:30:7>
|   |   |-BinaryOperator 0x14c142c30 <line:26:11, col:38> 'int' contains-errors '=='
|   |   | |-CXXDependentScopeMemberExpr 0x14c142be8 <col:11, col:28> '<dependent type>' contains-errors lvalue .obj_id
|   |   | | `-ArraySubscriptExpr 0x14c142bc8 <col:11, col:26> '<dependent type>' contains-errors lvalue
|   |   | |   |-ImplicitCastExpr 0x14c142b98 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   | `-CXXDependentScopeMemberExpr 0x14c142a58 <col:11, col:17> '<dependent type>' contains-errors lvalue ->entries
|   |   | |   |   `-RecoveryExpr 0x14c142a38 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |   `-ImplicitCastExpr 0x14c142bb0 <col:25> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x14c142aa0 <col:25> 'int' lvalue Var 0x14c128dd8 'i' 'int'
|   |   | `-DeclRefExpr 0x14c142b58 <col:38> 'int' lvalue ParmVar 0x14c1289a8 'obj_id' 'int'
|   |   `-CompoundStmt 0x14c142e38 <line:27:7, line:30:7>
|   |     |-BinaryOperator 0x14c142e10 <line:28:11, col:35> '<dependent type>' contains-errors '='
|   |     | |-RecoveryExpr 0x14c142c70 <col:11> '<dependent type>' contains-errors lvalue
|   |     | | `-DeclRefExpr 0x14c142c50 <col:11> 'const int *' lvalue Var 0x14c1423a8 'entry' 'const int *'
|   |     | `-UnaryOperator 0x14c142df8 <col:19, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     |   `-ArraySubscriptExpr 0x14c142dd8 <col:20, col:35> '<dependent type>' contains-errors lvalue
|   |     |     |-ImplicitCastExpr 0x14c142da8 <col:20, col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |     |     | `-CXXDependentScopeMemberExpr 0x14c142cb8 <col:20, col:26> '<dependent type>' contains-errors lvalue ->entries
|   |     |     |   `-RecoveryExpr 0x14c142c98 <col:20> '<dependent type>' contains-errors lvalue
|   |     |     `-ImplicitCastExpr 0x14c142dc0 <col:34> 'int' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x14c142d00 <col:34> 'int' lvalue Var 0x14c128dd8 'i' 'int'
|   |     `-BreakStmt 0x14c142e30 <line:29:11>
|   |-IfStmt 0x14c142f78 <line:32:5, line:33:14>
|   | |-UnaryOperator 0x14c142f18 <line:32:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14c142f00 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x14c142eb0 <col:10> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x14c142f68 <line:33:7, col:14>
|   |   `-RecoveryExpr 0x14c142f48 <col:14> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14c1431d0 <line:36:5, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14c1430b8 <col:5> 'int ()' Function 0x14c143000 'fseek' 'int ()'
|   | |-RecoveryExpr 0x14c1430d8 <col:11> '<dependent type>' contains-errors lvalue
|   | |-CXXDependentScopeMemberExpr 0x14c143118 <col:15, col:22> '<dependent type>' contains-errors lvalue ->offset
|   | | `-RecoveryExpr 0x14c1430f8 <col:15> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x14c1431b0 <col:30> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14c143248 <line:39:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x14c143208 <col:5> 'int' lvalue ParmVar 0x14c1289a8 'obj_id' 'int'
|   | `-IntegerLiteral 0x14c143228 <col:14> 'int' 0
|   |-BinaryOperator 0x14c1432a8 <line:40:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x14c143268 <col:5> 'int' lvalue Var 0x14c128e58 'total_sz' 'int'
|   | `-IntegerLiteral 0x14c143288 <col:16> 'int' 0
|   |-BinaryOperator 0x14c143308 <line:41:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x14c1432c8 <col:5> 'int' lvalue Var 0x14c128f58 'n_blks' 'int'
|   | `-IntegerLiteral 0x14c1432e8 <col:14> 'int' 1
|   |-BinaryOperator 0x14c143aa0 <line:42:5, col:34> 'char *' '='
|   | |-DeclRefExpr 0x14c143328 <col:5> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   | `-ImplicitCastExpr 0x14c143a88 <col:12, col:34> 'char *' <BitCast>
|   |   `-CallExpr 0x14c143a48 <col:12, col:34> 'void *'
|   |     |-ImplicitCastExpr 0x14c143a30 <col:12> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14c143950 <col:12> 'void *(unsigned long)' Function 0x14c1437b0 'malloc' 'void *(unsigned long)'
|   |     `-ImplicitCastExpr 0x14c143a70 <col:19, col:28> 'unsigned long' <IntegralCast>
|   |       `-BinaryOperator 0x14c1439e0 <col:19, col:28> 'int' '*'
|   |         |-ImplicitCastExpr 0x14c1439b0 <col:19> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x14c143970 <col:19> 'const int' lvalue Var 0x14c128d20 'blk_sz' 'const int'
|   |         `-ImplicitCastExpr 0x14c1439c8 <col:28> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x14c143990 <col:28> 'int' lvalue Var 0x14c128f58 'n_blks' 'int'
|   |-CallExpr 0x14c143f08 <line:43:5, col:36> 'void *'
|   | |-ImplicitCastExpr 0x14c143ef0 <col:5> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14c143db8 <col:5> 'void *(void *, int, unsigned long)' Function 0x14c143b68 'memset' 'void *(void *, int, unsigned long)'
|   | |-ImplicitCastExpr 0x14c143f58 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x14c143f40 <col:12> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c143dd8 <col:12> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   | |-IntegerLiteral 0x14c143df8 <col:18> 'int' 0
|   | `-ImplicitCastExpr 0x14c143f70 <col:21, col:30> 'unsigned long' <IntegralCast>
|   |   `-BinaryOperator 0x14c143e88 <col:21, col:30> 'int' '*'
|   |     |-ImplicitCastExpr 0x14c143e58 <col:21> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14c143e18 <col:21> 'const int' lvalue Var 0x14c128d20 'blk_sz' 'const int'
|   |     `-ImplicitCastExpr 0x14c143e70 <col:30> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x14c143e38 <col:30> 'int' lvalue Var 0x14c128f58 'n_blks' 'int'
|   |-BinaryOperator 0x14c143fc8 <line:46:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x14c143f88 <col:5> 'int' lvalue Var 0x14c142080 'stream' 'int'
|   | `-IntegerLiteral 0x14c143fa8 <col:14> 'int' 0
|   |-WhileStmt 0x14c146430 <line:47:5, line:69:5>
|   | |-BinaryOperator 0x14c144658 <line:47:12, col:75> 'int' contains-errors '&&'
|   | | |-ParenExpr 0x14c144638 <col:12, col:60> 'int' contains-errors
|   | | | `-BinaryOperator 0x14c144618 <col:13, col:59> 'int' contains-errors '='
|   | | |   |-DeclRefExpr 0x14c144000 <col:13> 'int' lvalue Var 0x14c128ed8 'read_sz' 'int'
|   | | |   `-CallExpr 0x14c1445d8 <col:23, col:59> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x14c144100 <col:23> 'int ()' Function 0x14c144048 'fread' 'int ()'
|   | | |     |-BinaryOperator 0x14c144580 <col:29, col:34> 'char *' '+'
|   | | |     | |-ImplicitCastExpr 0x14c144550 <col:29> 'char *' <LValueToRValue>
|   | | |     | | `-DeclRefExpr 0x14c144120 <col:29> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   | | |     | `-ImplicitCastExpr 0x14c144568 <col:34> 'int' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x14c144140 <col:34> 'int' lvalue Var 0x14c128e58 'total_sz' 'int'
|   | | |     |-IntegerLiteral 0x14c1441b0 <col:44> 'int' 1
|   | | |     |-BinaryOperator 0x14c1445b8 <col:47, col:54> 'int' '-'
|   | | |     | |-ImplicitCastExpr 0x14c1445a0 <col:47> 'int' <LValueToRValue>
|   | | |     | | `-DeclRefExpr 0x14c1441d0 <col:47> 'const int' lvalue Var 0x14c128d20 'blk_sz' 'const int'
|   | | |     | `-IntegerLiteral 0x14c1441f0 <col:54> 'int' 1
|   | | |     `-RecoveryExpr 0x14c144248 <col:57> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x14c144518 <col:65, col:75> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-CallExpr 0x14c1444f0 <col:66, col:75> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x14c1444b0 <col:66> 'int ()' Function 0x14c1443f8 'ferror' 'int ()'
|   | |     `-RecoveryExpr 0x14c1444d0 <col:73> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14c1463f0 <line:48:5, line:69:5>
|   |   |-CompoundAssignOperator 0x14c1446d0 <line:49:9, col:21> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x14c144678 <col:9> 'int' lvalue Var 0x14c128e58 'total_sz' 'int'
|   |   | `-ImplicitCastExpr 0x14c1446b8 <col:21> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14c144698 <col:21> 'int' lvalue Var 0x14c128ed8 'read_sz' 'int'
|   |   |-BinaryOperator 0x14c1447f8 <line:51:9, col:30> 'char' '='
|   |   | |-UnaryOperator 0x14c1447b0 <col:9, col:26> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x14c144790 <col:10, col:26> 'char *'
|   |   | |   `-BinaryOperator 0x14c144770 <col:11, col:18> 'char *' '+'
|   |   | |     |-ImplicitCastExpr 0x14c144740 <col:11> 'char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x14c144700 <col:11> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   |   | |     `-ImplicitCastExpr 0x14c144758 <col:18> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x14c144720 <col:18> 'int' lvalue Var 0x14c128e58 'total_sz' 'int'
|   |   | `-ImplicitCastExpr 0x14c1447e0 <col:30> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x14c1447c8 <col:30> 'int' 0
|   |   |-IfStmt 0x14c144df8 <line:53:9, line:54:51>
|   |   | |-BinaryOperator 0x14c144958 <line:53:13, col:50> 'int' '>='
|   |   | | |-BinaryOperator 0x14c144888 <col:13, col:24> 'int' '+'
|   |   | | | |-ImplicitCastExpr 0x14c144858 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x14c144818 <col:13> 'int' lvalue Var 0x14c128e58 'total_sz' 'int'
|   |   | | | `-ImplicitCastExpr 0x14c144870 <col:24> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x14c144838 <col:24> 'const int' lvalue Var 0x14c128d20 'blk_sz' 'const int'
|   |   | | `-ParenExpr 0x14c144938 <col:34, col:50> 'int'
|   |   | |   `-BinaryOperator 0x14c144918 <col:35, col:44> 'int' '*'
|   |   | |     |-ImplicitCastExpr 0x14c1448e8 <col:35> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x14c1448a8 <col:35> 'const int' lvalue Var 0x14c128d20 'blk_sz' 'const int'
|   |   | |     `-ImplicitCastExpr 0x14c144900 <col:44> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x14c1448c8 <col:44> 'int' lvalue Var 0x14c128f58 'n_blks' 'int'
|   |   | `-BinaryOperator 0x14c144dd8 <line:54:11, col:51> 'char *' '='
|   |   |   |-DeclRefExpr 0x14c144978 <col:11> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   |   |   `-ImplicitCastExpr 0x14c144dc0 <col:18, col:51> 'char *' <BitCast>
|   |   |     `-CallExpr 0x14c144d48 <col:18, col:51> 'void *'
|   |   |       |-ImplicitCastExpr 0x14c144d30 <col:18> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x14c144bf0 <col:18> 'void *(void *, unsigned long)' Function 0x14c1449e0 'realloc' 'void *(void *, unsigned long)'
|   |   |       |-ImplicitCastExpr 0x14c144d90 <col:26> 'void *' <BitCast>
|   |   |       | `-ImplicitCastExpr 0x14c144d78 <col:26> 'char *' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x14c144c10 <col:26> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   |   |       `-ImplicitCastExpr 0x14c144da8 <col:32, col:50> 'unsigned long' <IntegralCast>
|   |   |         `-BinaryOperator 0x14c144cc0 <col:32, col:50> 'int' '*'
|   |   |           |-ImplicitCastExpr 0x14c144ca8 <col:32> 'int' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x14c144c30 <col:32> 'const int' lvalue Var 0x14c128d20 'blk_sz' 'const int'
|   |   |           `-ParenExpr 0x14c144c88 <col:41, col:50> 'int'
|   |   |             `-UnaryOperator 0x14c144c70 <col:42, col:44> 'int' prefix '++'
|   |   |               `-DeclRefExpr 0x14c144c50 <col:44> 'int' lvalue Var 0x14c128f58 'n_blks' 'int'
|   |   |-BinaryOperator 0x14c144ec8 <line:56:9, col:29> 'int' '='
|   |   | |-DeclRefExpr 0x14c144e18 <col:9> 'int' lvalue Var 0x14c142000 'search' 'int'
|   |   | `-BinaryOperator 0x14c144ea8 <col:18, col:29> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x14c144e78 <col:18> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x14c144e38 <col:18> 'int' lvalue Var 0x14c128e58 'total_sz' 'int'
|   |   |   `-ImplicitCastExpr 0x14c144e90 <col:29> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14c144e58 <col:29> 'int' lvalue Var 0x14c128ed8 'read_sz' 'int'
|   |   |-IfStmt 0x14c144fc0 <line:57:9, line:58:20>
|   |   | |-BinaryOperator 0x14c144f40 <line:57:13, col:22> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x14c144f28 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x14c144ee8 <col:13> 'int' lvalue Var 0x14c142000 'search' 'int'
|   |   | | `-IntegerLiteral 0x14c144f08 <col:22> 'int' 0
|   |   | `-BinaryOperator 0x14c144fa0 <line:58:11, col:20> 'int' '='
|   |   |   |-DeclRefExpr 0x14c144f60 <col:11> 'int' lvalue Var 0x14c142000 'search' 'int'
|   |   |   `-IntegerLiteral 0x14c144f80 <col:20> 'int' 0
|   |   `-IfStmt 0x14c1463c0 <line:60:9, line:68:20> has_else
|   |     |-ParenExpr 0x14c145a30 <line:60:13, col:46> 'char *'
|   |     | `-BinaryOperator 0x14c145a10 <col:14, col:45> 'char *' '='
|   |     |   |-DeclRefExpr 0x14c144fe0 <col:14> 'char *' lvalue Var 0x14c1421e0 'c' 'char *'
|   |     |   `-CallExpr 0x14c145998 <col:18, col:45> 'char *'
|   |     |     |-ImplicitCastExpr 0x14c145980 <col:18> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |     | `-DeclRefExpr 0x14c145820 <col:18> 'char *(const char *, const char *)' Function 0x14c145640 'strstr' 'char *(const char *, const char *)'
|   |     |     |-ImplicitCastExpr 0x14c1459c8 <col:25, col:32> 'const char *' <NoOp>
|   |     |     | `-BinaryOperator 0x14c1458b0 <col:25, col:32> 'char *' '+'
|   |     |     |   |-ImplicitCastExpr 0x14c145880 <col:25> 'char *' <LValueToRValue>
|   |     |     |   | `-DeclRefExpr 0x14c145840 <col:25> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   |     |     |   `-ImplicitCastExpr 0x14c145898 <col:32> 'int' <LValueToRValue>
|   |     |     |     `-DeclRefExpr 0x14c145860 <col:32> 'int' lvalue Var 0x14c142000 'search' 'int'
|   |     |     `-ImplicitCastExpr 0x14c1459f8 <col:40> 'const char *' <NoOp>
|   |     |       `-ImplicitCastExpr 0x14c1459e0 <col:40> 'char *' <ArrayToPointerDecay>
|   |     |         `-StringLiteral 0x14c145910 <col:40> 'char[4]' lvalue "STR"
|   |     |-CompoundStmt 0x14c1461e0 <line:61:9, line:66:9>
|   |     | |-BinaryOperator 0x14c145df0 <line:62:13, col:40> 'char' '='
|   |     | | |-UnaryOperator 0x14c145da8 <col:13, col:36> 'char' lvalue prefix '*' cannot overflow
|   |     | | | `-ParenExpr 0x14c145d88 <col:14, col:36> 'char *'
|   |     | | |   `-BinaryOperator 0x14c145d68 <col:15, col:35> 'char *' '+'
|   |     | | |     |-BinaryOperator 0x14c145d28 <col:15, col:31> 'char *' '+'
|   |     | | |     | |-ImplicitCastExpr 0x14c145d10 <col:15> 'char *' <LValueToRValue>
|   |     | | |     | | `-DeclRefExpr 0x14c145a50 <col:15> 'char *' lvalue Var 0x14c1421e0 'c' 'char *'
|   |     | | |     | `-CallExpr 0x14c145cb8 <col:19, col:31> 'unsigned long'
|   |     | | |     |   |-ImplicitCastExpr 0x14c145ca0 <col:19> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | | |     |   | `-DeclRefExpr 0x14c145c18 <col:19> 'unsigned long (const char *)' Function 0x14c145aa8 'strlen' 'unsigned long (const char *)'
|   |     | | |     |   `-ImplicitCastExpr 0x14c145cf8 <col:26> 'const char *' <NoOp>
|   |     | | |     |     `-ImplicitCastExpr 0x14c145ce0 <col:26> 'char *' <ArrayToPointerDecay>
|   |     | | |     |       `-StringLiteral 0x14c145c38 <col:26> 'char[4]' lvalue "STR"
|   |     | | |     `-IntegerLiteral 0x14c145d48 <col:35> 'int' 1
|   |     | | `-ImplicitCastExpr 0x14c145dd8 <col:40> 'char' <IntegralCast>
|   |     | |   `-CharacterLiteral 0x14c145dc0 <col:40> 'int' 0
|   |     | |-BinaryOperator 0x14c146098 <line:63:13, col:69> 'int' '='
|   |     | | |-DeclRefExpr 0x14c145e10 <col:13> 'int' lvalue ParmVar 0x14c1289a8 'obj_id' 'int'
|   |     | | `-ImplicitCastExpr 0x14c146080 <col:22, col:69> 'int' <IntegralCast>
|   |     | |   `-BinaryOperator 0x14c146060 <col:22, col:69> 'long' '-'
|   |     | |     |-CStyleCastExpr 0x14c145fc0 <col:22, col:57> 'void *' <BitCast>
|   |     | |     | `-CallExpr 0x14c145f30 <col:30, col:57> 'char *'
|   |     | |     |   |-ImplicitCastExpr 0x14c145f18 <col:30> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | |     |   | `-DeclRefExpr 0x14c145e30 <col:30> 'char *(const char *, const char *)' Function 0x14c145640 'strstr' 'char *(const char *, const char *)'
|   |     | |     |   |-ImplicitCastExpr 0x14c145f60 <col:37, col:44> 'const char *' <NoOp>
|   |     | |     |   | `-BinaryOperator 0x14c145ec0 <col:37, col:44> 'char *' '+'
|   |     | |     |   |   |-ImplicitCastExpr 0x14c145e90 <col:37> 'char *' <LValueToRValue>
|   |     | |     |   |   | `-DeclRefExpr 0x14c145e50 <col:37> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   |     | |     |   |   `-ImplicitCastExpr 0x14c145ea8 <col:44> 'int' <LValueToRValue>
|   |     | |     |   |     `-DeclRefExpr 0x14c145e70 <col:44> 'int' lvalue Var 0x14c142000 'search' 'int'
|   |     | |     |   `-ImplicitCastExpr 0x14c145f90 <col:52> 'const char *' <NoOp>
|   |     | |     |     `-ImplicitCastExpr 0x14c145f78 <col:52> 'char *' <ArrayToPointerDecay>
|   |     | |     |       `-StringLiteral 0x14c145ee0 <col:52> 'char[4]' lvalue "STR"
|   |     | |     `-CStyleCastExpr 0x14c146038 <col:61, col:69> 'void *' <BitCast>
|   |     | |       `-ImplicitCastExpr 0x14c146020 <col:69> 'char *' <LValueToRValue> part_of_explicit_cast
|   |     | |         `-DeclRefExpr 0x14c145fe8 <col:69> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   |     | `-BreakStmt 0x14c1461d8 <line:65:13>
|   |     `-IfStmt 0x14c1463a0 <line:67:14, line:68:20>
|   |       |-CallExpr 0x14c1462b0 <line:67:18, col:36> 'char *'
|   |       | |-ImplicitCastExpr 0x14c146298 <col:18> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14c146208 <col:18> 'char *(const char *, const char *)' Function 0x14c145640 'strstr' 'char *(const char *, const char *)'
|   |       | |-ImplicitCastExpr 0x14c1462f8 <col:25> 'const char *' <NoOp>
|   |       | | `-ImplicitCastExpr 0x14c1462e0 <col:25> 'char *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x14c146228 <col:25> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|   |       | `-ImplicitCastExpr 0x14c146328 <col:31> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x14c146310 <col:31> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x14c146248 <col:31> 'char[4]' lvalue "STR"
|   |       `-BinaryOperator 0x14c146380 <line:68:11, col:20> 'int' '='
|   |         |-DeclRefExpr 0x14c146340 <col:11> 'int' lvalue Var 0x14c142080 'stream' 'int'
|   |         `-IntegerLiteral 0x14c146360 <col:20> 'int' 1
|   |-CallExpr 0x14c146570 <line:71:5, col:16> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14c146530 <col:5> 'int ()' Function 0x14c146478 'clearerr' 'int ()'
|   | `-RecoveryExpr 0x14c146550 <col:14> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14c148180 <line:77:5, line:78:20>
|   | |-ImplicitCastExpr 0x14c1480c0 <line:77:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14c1480a0 <col:9> 'int *' lvalue ParmVar 0x14c128b28 'is_stream' 'int *'
|   | `-BinaryOperator 0x14c148160 <line:78:7, col:20> 'int' '='
|   |   |-UnaryOperator 0x14c148110 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x14c1480f8 <col:8> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14c1480d8 <col:8> 'int *' lvalue ParmVar 0x14c128b28 'is_stream' 'int *'
|   |   `-ImplicitCastExpr 0x14c148148 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14c148128 <col:20> 'int' lvalue Var 0x14c142080 'stream' 'int'
|   `-ReturnStmt 0x14c1481d8 <line:80:5, col:12>
|     `-ImplicitCastExpr 0x14c1481c0 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x14c1481a0 <col:12> 'char *' lvalue Var 0x14c142260 'data' 'char *'
|-FunctionDecl 0x14c1437b0 <line:42:12> col:12 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x14c1438b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x14c143858 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x14c143920 <col:12> Implicit 1
|-FunctionDecl 0x14c143b68 <line:43:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x14c143c68 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x14c143cd0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x14c143d38 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14c143c10 <<invalid sloc>> Implicit 900
|-FunctionDecl 0x14c1449e0 <line:54:18> col:18 implicit used realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x14c144ae0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x14c144b48 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x14c144a88 <<invalid sloc>> Implicit 872
| `-AllocSizeAttr 0x14c144bc0 <col:18> Implicit 2
|-FunctionDecl 0x14c145640 <line:60:18> col:18 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x14c145740 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14c1457a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14c1456e8 <<invalid sloc>> Implicit 898
`-FunctionDecl 0x14c145aa8 <line:62:19> col:19 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x14c145ba8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14c145b50 <<invalid sloc>> Implicit 902
