TranslationUnitDecl 0x129855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1298564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129855bd0 '__int128'
|-TypedefDecl 0x129856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129855bf0 'unsigned __int128'
|-TypedefDecl 0x129926c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x129926a00 'struct __NSConstantString_tag'
|   `-Record 0x129856580 '__NSConstantString_tag'
|-TypedefDecl 0x129926c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129855d90 '__SVInt8_t'
|-TypedefDecl 0x129926d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129855db0 '__SVInt16_t'
|-TypedefDecl 0x129926d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129855dd0 '__SVInt32_t'
|-TypedefDecl 0x129926dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129855df0 '__SVInt64_t'
|-TypedefDecl 0x129926e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129855e10 '__SVUint8_t'
|-TypedefDecl 0x129926ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129855e30 '__SVUint16_t'
|-TypedefDecl 0x129926f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129855e50 '__SVUint32_t'
|-TypedefDecl 0x129926f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129855e70 '__SVUint64_t'
|-TypedefDecl 0x129926fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129855e90 '__SVFloat16_t'
|-TypedefDecl 0x129927040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1299270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129855ed0 '__SVFloat64_t'
|-TypedefDecl 0x129927110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x129927178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1299271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x129927248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1299272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x129927318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x129927380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1299273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x129927450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1299274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x129927520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x129927588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1299275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x129927658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1299276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1298560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x129927728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1298560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x129927790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1298560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1299277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x129927860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1299278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x129927930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x129927998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x129928200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1298561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x129928268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1298561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1299282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1298561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x129928338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1299283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129856230 '__clang_svint16x4_t'
|-TypedefDecl 0x129928408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129856250 '__clang_svint32x4_t'
|-TypedefDecl 0x129928470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1299284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x129928540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1298562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1299285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1298562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x129928610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1298562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x129928678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1299286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x129928748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1299287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x129928818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129856390 '__SVBool_t'
|-TypedefDecl 0x129928880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1298563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1299288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1298563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x129928950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1298563f0 '__SVCount_t'
|-TypedefDecl 0x1299289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1299289b0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-TypedefDecl 0x129928a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1299289b0 'char *'
|   `-BuiltinType 0x1298556b0 'char'
|-FunctionDecl 0x129928d20 <dataset_diviso_filec/func20745_vuln.c:1:1, line:86:1> line:1:6 invalid _xml_startElementHandler 'void (void *, const int *, const int **)'
| |-ParmVarDecl 0x129928ad8 <col:31, col:37> col:37 userData 'void *'
| |-ParmVarDecl 0x129928b70 <col:47, col:63> col:63 invalid name 'const int *'
| |-ParmVarDecl 0x129928c30 <col:69, col:86> col:86 referenced invalid attributes 'const int **'
| `-CompoundStmt 0x129945f90 <line:2:1, line:86:1>
|   |-DeclStmt 0x129928f20 <line:4:2, col:49>
|   | `-VarDecl 0x129928e58 <col:2, col:39> col:15 attrs 'const char **' cinit
|   |   `-CStyleCastExpr 0x129928ef8 <col:23, col:39> 'const char **' contains-errors <Dependent>
|   |     `-RecoveryExpr 0x129928ec0 <col:39> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x129928fb8 <line:5:2, col:16>
|   | `-VarDecl 0x129928f50 <col:2, col:8> col:8 used tag_name 'char *'
|   |-DeclStmt 0x1299290e8 <line:6:2, col:17>
|   | |-VarDecl 0x129928fe8 <col:2, col:8> col:8 used att 'char *'
|   | `-VarDecl 0x129929068 <col:2, col:14> col:14 used val 'char *'
|   |-DeclStmt 0x129929180 <line:7:2, col:13>
|   | `-VarDecl 0x129929118 <col:2, col:6> col:6 used val_len 'int'
|   `-IfStmt 0x129945f70 <line:10:2, line:85:2>
|     |-RecoveryExpr 0x129943250 <line:10:6> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x129945f40 <col:14, line:85:2>
|       |-BinaryOperator 0x1299434e8 <line:13:3, col:42> 'char *' contains-errors '='
|       | |-DeclRefExpr 0x129943270 <col:3> 'char *' lvalue Var 0x129928f50 'tag_name' 'char *'
|       | `-CallExpr 0x1299434b8 <col:14, col:42> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x1299433f0 <col:14> 'int ()' Function 0x129943338 '_xml_decode_tag' 'int ()'
|       |   |-RecoveryExpr 0x129943498 <col:30> '<dependent type>' contains-errors lvalue
|       |   `-RecoveryExpr 0x129943428 <col:38> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x129944918 <line:15:3, line:35:3>
|       | |-CXXDependentScopeMemberExpr 0x129943588 <line:15:7, col:15> '<dependent type>' contains-errors lvalue ->startElementHandler
|       | | `-RecoveryExpr 0x129943568 <col:7> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x1299448f8 <col:36, line:35:3>
|       |   |-WhileStmt 0x129944668 <line:21:4, line:30:4>
|       |   | |-BinaryOperator 0x129943d00 <line:21:11, col:26> 'int' contains-errors '&&'
|       |   | | |-RecoveryExpr 0x129943c90 <col:11> '<dependent type>' contains-errors lvalue
|       |   | | `-UnaryOperator 0x129943ce8 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
|       |   | |   `-ImplicitCastExpr 0x129943cd0 <col:26> '<dependent type>' contains-errors <LValueToRValue>
|       |   | |     `-RecoveryExpr 0x129943cb0 <col:26> '<dependent type>' contains-errors lvalue
|       |   | `-CompoundStmt 0x129944648 <col:38, line:30:4>
|       |   |   |-CompoundAssignOperator 0x129944470 <line:27:5, col:19> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|       |   |   | |-RecoveryExpr 0x129944428 <col:5> '<dependent type>' contains-errors lvalue
|       |   |   | | `-DeclRefExpr 0x129944408 <col:5> 'const int **' lvalue ParmVar 0x129928c30 'attributes' 'const int **'
|       |   |   | `-IntegerLiteral 0x129944450 <col:19> 'int' 2
|       |   |   `-CallExpr 0x129944608 <line:29:5, col:14> 'int'
|       |   |     |-ImplicitCastExpr 0x1299445f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       |   |     | `-DeclRefExpr 0x129944580 <col:5> 'int ()' Function 0x1299444c8 'efree' 'int ()'
|       |   |     `-ImplicitCastExpr 0x129944630 <col:11> 'char *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x1299445a0 <col:11> 'char *' lvalue Var 0x129928fe8 'att' 'char *'
|       |   `-IfStmt 0x1299448d8 <line:32:4, line:34:4>
|       |     |-RecoveryExpr 0x1299447a8 <line:32:8, col:105> '_Bool' contains-errors
|       |     `-CompoundStmt 0x1299448c8 <col:108, line:34:4>
|       |-IfStmt 0x129945e88 <line:37:3, line:82:3>
|       | |-RecoveryExpr 0x129944938 <line:37:7, col:15> '_Bool' contains-errors
|       | `-CompoundStmt 0x129945e70 <col:21, line:82:3>
|       |   `-IfStmt 0x129945e40 <line:38:4, line:81:4> has_else
|       |     |-RecoveryExpr 0x129944958 <line:38:8, col:25> '_Bool' contains-errors
|       |     |-CompoundStmt 0x129945b48 <col:40, line:78:4>
|       |     | |-DeclStmt 0x129944a18 <line:40:5, col:18>
|       |     | | `-VarDecl 0x129944990 <col:5, col:17> col:9 used atcnt 'int' cinit
|       |     | |   `-IntegerLiteral 0x1299449f8 <col:17> 'int' 0
|       |     | |-WhileStmt 0x129945740 <line:59:5, line:69:5>
|       |     | | |-BinaryOperator 0x129945270 <line:59:12, col:27> 'int' contains-errors '&&'
|       |     | | | |-RecoveryExpr 0x129945200 <col:12> '<dependent type>' contains-errors lvalue
|       |     | | | `-UnaryOperator 0x129945258 <col:26, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow
|       |     | | |   `-ImplicitCastExpr 0x129945240 <col:27> '<dependent type>' contains-errors <LValueToRValue>
|       |     | | |     `-RecoveryExpr 0x129945220 <col:27> '<dependent type>' contains-errors lvalue
|       |     | | `-CompoundStmt 0x129945718 <col:39, line:69:5>
|       |     | |   |-UnaryOperator 0x1299455d0 <line:65:6, col:11> 'int' postfix '++'
|       |     | |   | `-DeclRefExpr 0x1299455b0 <col:6> 'int' lvalue Var 0x129944990 'atcnt' 'int'
|       |     | |   |-CompoundAssignOperator 0x129945650 <line:66:6, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|       |     | |   | |-RecoveryExpr 0x129945608 <col:6> '<dependent type>' contains-errors lvalue
|       |     | |   | | `-DeclRefExpr 0x1299455e8 <col:6> 'const int **' lvalue ParmVar 0x129928c30 'attributes' 'const int **'
|       |     | |   | `-IntegerLiteral 0x129945630 <col:20> 'int' 2
|       |     | |   `-CallExpr 0x1299456d8 <line:68:6, col:15> 'int'
|       |     | |     |-ImplicitCastExpr 0x1299456c0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|       |     | |     | `-DeclRefExpr 0x129945680 <col:6> 'int ()' Function 0x1299444c8 'efree' 'int ()'
|       |     | |     `-ImplicitCastExpr 0x129945700 <col:12> 'char *' <LValueToRValue>
|       |     | |       `-DeclRefExpr 0x1299456a0 <col:12> 'char *' lvalue Var 0x129928fe8 'att' 'char *'
|       |     | `-IfStmt 0x1299459f8 <line:71:5, line:75:5> has_else
|       |     |   |-ImplicitCastExpr 0x129945780 <line:71:9> 'int' <LValueToRValue>
|       |     |   | `-DeclRefExpr 0x129945760 <col:9> 'int' lvalue Var 0x129944990 'atcnt' 'int'
|       |     |   |-CompoundStmt 0x1299459b8 <col:16, line:73:5>
|       |     |   `-CompoundStmt 0x1299459e8 <col:12, line:75:5>
|       |     `-IfStmt 0x129945e20 <line:78:11, line:81:4>
|       |       |-RecoveryExpr 0x129945b90 <line:78:15, col:49> '_Bool' contains-errors
|       |       `-CompoundStmt 0x129945e08 <col:52, line:81:4>
|       |         `-CallExpr 0x129945cc8 <line:79:5, col:18> 'int'
|       |           `-ImplicitCastExpr 0x129945cb0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       |             `-DeclRefExpr 0x129945c90 <col:5> 'int ()' Function 0x129945bd8 'TSRMLS_FETCH' 'int ()'
|       `-CallExpr 0x129945f00 <line:84:3, col:17> 'int'
|         |-ImplicitCastExpr 0x129945ee8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x129945ea8 <col:3> 'int ()' Function 0x1299444c8 'efree' 'int ()'
|         `-ImplicitCastExpr 0x129945f28 <col:9> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x129945ec8 <col:9> 'char *' lvalue Var 0x129928f50 'tag_name' 'char *'
`-FunctionDecl 0x129943fa8 <line:23:42> col:42 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x1299440a8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x129944050 <<invalid sloc>> Implicit 902
