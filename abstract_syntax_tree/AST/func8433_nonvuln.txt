TranslationUnitDecl 0x142055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1420564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x142055bd0 '__int128'
|-TypedefDecl 0x142056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x142055bf0 'unsigned __int128'
|-TypedefDecl 0x14280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14280bc00 'struct __NSConstantString_tag'
|   `-Record 0x142056580 '__NSConstantString_tag'
|-TypedefDecl 0x14280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x142055d90 '__SVInt8_t'
|-TypedefDecl 0x14280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x142055db0 '__SVInt16_t'
|-TypedefDecl 0x14280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x142055dd0 '__SVInt32_t'
|-TypedefDecl 0x14280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x142055df0 '__SVInt64_t'
|-TypedefDecl 0x14280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x142055e10 '__SVUint8_t'
|-TypedefDecl 0x14280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x142055e30 '__SVUint16_t'
|-TypedefDecl 0x14280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x142055e50 '__SVUint32_t'
|-TypedefDecl 0x14280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x142055e70 '__SVUint64_t'
|-TypedefDecl 0x14280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x142055e90 '__SVFloat16_t'
|-TypedefDecl 0x14280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x142055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x142055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x142055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x142055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x142055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x142055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x142055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x142055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x142055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x142055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x142055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x142056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x142056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x142056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x142056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x142056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1420560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1420560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1420560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x142056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x142056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x142056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x142056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x142056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1420561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1420561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1420561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x142056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x142056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x142056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x142056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x142056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1420562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1420562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1420562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x142056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x142056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x142056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x142056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x142056390 '__SVBool_t'
|-TypedefDecl 0x14280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1420563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1420563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1420563f0 '__SVCount_t'
|-TypedefDecl 0x14280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14280dbb0 'char *'
|   `-BuiltinType 0x1420556b0 'char'
|-TypedefDecl 0x14280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14280dbb0 'char *'
|   `-BuiltinType 0x1420556b0 'char'
`-FunctionDecl 0x14280deb8 <dataset_diviso_filec/func8433_nonvuln.c:1:1, line:40:1> line:1:1 invalid utf_safe_read_char_adv 'int (char **, int *)'
  |-ParmVarDecl 0x14280dd28 <col:24, col:33> col:33 used s 'char **'
  |-ParmVarDecl 0x14280ddd8 <col:36, col:44> col:44 invalid n 'int *'
  `-CompoundStmt 0x142826f88 <line:2:1, line:40:1>
    |-DeclStmt 0x14280e088 <line:3:5, col:14>
    | |-VarDecl 0x14280df88 <col:5, col:10> col:10 used c 'int'
    | `-VarDecl 0x14280e008 <col:5, col:13> col:13 used k 'int'
    |-IfStmt 0x14280e160 <line:5:5, line:6:9>
    | |-BinaryOperator 0x14280e110 <line:5:9, col:15> 'int' contains-errors '=='
    | | |-UnaryOperator 0x14280e0d8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x14280e0c0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x14280e0a0 <col:10> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14280e0f0 <col:15> 'int' 0
    | `-ReturnStmt 0x14280e150 <line:6:2, col:9>
    |   `-IntegerLiteral 0x14280e130 <col:9> 'int' 0
    |-IfStmt 0x142826648 <line:10:5, line:15:5>
    | |-BinaryOperator 0x14280e290 <line:10:9, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x14280e278 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14280e238 <col:9> 'int' lvalue Var 0x14280e008 'k' 'int'
    | | `-IntegerLiteral 0x14280e258 <col:14> 'int' 1
    | `-CompoundStmt 0x142826628 <line:11:5, line:15:5>
    |   |-UnaryOperator 0x14280e320 <line:13:2, col:6> '<dependent type>' contains-errors postfix '--' cannot overflow
    |   | `-ParenExpr 0x14280e300 <col:2, col:5> '<dependent type>' contains-errors
    |   |   `-UnaryOperator 0x14280e2e8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x14280e2d0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x14280e2b0 <col:4> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x142826618 <line:14:2, col:14>
    |     `-ImplicitCastExpr 0x142826600 <col:9, col:14> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x14280e3d8 <col:9, col:14> 'char' <LValueToRValue>
    |         `-UnaryOperator 0x14280e3c0 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
    |           `-UnaryOperator 0x14280e3a8 <col:10, col:14> 'char *' postfix '++'
    |             `-ParenExpr 0x14280e388 <col:10, col:13> 'char *' lvalue
    |               `-UnaryOperator 0x14280e370 <col:11, col:12> 'char *' lvalue prefix '*' cannot overflow
    |                 `-ImplicitCastExpr 0x14280e358 <col:12> 'char **' <LValueToRValue>
    |                   `-DeclRefExpr 0x14280e338 <col:12> 'char **' lvalue ParmVar 0x14280dd28 's' 'char **'
    |-IfStmt 0x142826f20 <line:17:5, line:36:5>
    | |-RecoveryExpr 0x1428266e0 <line:17:9, col:16> '_Bool' contains-errors
    | | `-ParenExpr 0x1428266c0 <col:9, col:16> '<overloaded function type>' lvalue
    | |   `-UnresolvedLookupExpr 0x142826680 <col:10> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    | `-CompoundStmt 0x142826f00 <line:18:5, line:36:5>
    |   |-BinaryOperator 0x142826978 <line:22:2, col:21> 'int' '='
    |   | |-DeclRefExpr 0x142826708 <col:2> 'int' lvalue Var 0x14280df88 'c' 'int'
    |   | `-CallExpr 0x142826938 <col:6, col:21> 'int'
    |   |   |-ImplicitCastExpr 0x142826920 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x142826880 <col:6> 'int ()' Function 0x1428267c8 'utf_ptr2char' 'int ()'
    |   |   `-ImplicitCastExpr 0x142826960 <col:19, col:20> 'char *' <LValueToRValue>
    |   |     `-UnaryOperator 0x1428268d8 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow
    |   |       `-ImplicitCastExpr 0x1428268c0 <col:20> 'char **' <LValueToRValue>
    |   |         `-DeclRefExpr 0x1428268a0 <col:20> 'char **' lvalue ParmVar 0x14280dd28 's' 'char **'
    |   `-IfStmt 0x142826ee0 <line:29:2, line:35:2>
    |     |-BinaryOperator 0x142826cf8 <line:29:6, col:54> 'int' '||'
    |     | |-BinaryOperator 0x142826ae8 <col:6, col:20> 'int' '!='
    |     | | |-ImplicitCastExpr 0x142826ad0 <col:6> 'int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x142826998 <col:6> 'int' lvalue Var 0x14280df88 'c' 'int'
    |     | | `-CStyleCastExpr 0x142826aa8 <col:11, col:20> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x142826a90 <col:16, col:20> 'char' <LValueToRValue> part_of_explicit_cast
    |     | |     `-ParenExpr 0x142826a70 <col:16, col:20> 'char' lvalue
    |     | |       `-UnaryOperator 0x142826a20 <col:17, col:19> 'char' lvalue prefix '*' cannot overflow
    |     | |         `-ImplicitCastExpr 0x142826a08 <col:18, col:19> 'char *' <LValueToRValue>
    |     | |           `-UnaryOperator 0x1428269f0 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
    |     | |             `-ImplicitCastExpr 0x1428269d8 <col:19> 'char **' <LValueToRValue>
    |     | |               `-DeclRefExpr 0x1428269b8 <col:19> 'char **' lvalue ParmVar 0x14280dd28 's' 'char **'
    |     | `-ParenExpr 0x142826cd8 <col:25, col:54> 'int'
    |     |   `-BinaryOperator 0x142826cb8 <col:26, col:50> 'int' '&&'
    |     |     |-BinaryOperator 0x142826b60 <col:26, col:31> 'int' '=='
    |     |     | |-ImplicitCastExpr 0x142826b48 <col:26> 'int' <LValueToRValue>
    |     |     | | `-DeclRefExpr 0x142826b08 <col:26> 'int' lvalue Var 0x14280df88 'c' 'int'
    |     |     | `-IntegerLiteral 0x142826b28 <col:31> 'int' 195
    |     |     `-BinaryOperator 0x142826c98 <col:39, col:50> 'int' '=='
    |     |       |-ImplicitCastExpr 0x142826c80 <col:39, col:45> 'int' <IntegralCast>
    |     |       | `-ImplicitCastExpr 0x142826c68 <col:39, col:45> 'char' <LValueToRValue>
    |     |       |   `-ArraySubscriptExpr 0x142826c28 <col:39, col:45> 'char' lvalue
    |     |       |     |-ImplicitCastExpr 0x142826c10 <col:39, col:42> 'char *' <LValueToRValue>
    |     |       |     | `-ParenExpr 0x142826bd0 <col:39, col:42> 'char *' lvalue
    |     |       |     |   `-UnaryOperator 0x142826bb8 <col:40, col:41> 'char *' lvalue prefix '*' cannot overflow
    |     |       |     |     `-ImplicitCastExpr 0x142826ba0 <col:41> 'char **' <LValueToRValue>
    |     |       |     |       `-DeclRefExpr 0x142826b80 <col:41> 'char **' lvalue ParmVar 0x14280dd28 's' 'char **'
    |     |       |     `-IntegerLiteral 0x142826bf0 <col:44> 'int' 1
    |     |       `-IntegerLiteral 0x142826c48 <col:50> 'int' 131
    |     `-CompoundStmt 0x142826eb8 <line:30:2, line:35:2>
    |       |-CompoundAssignOperator 0x142826da0 <line:32:6, col:12> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    |       | |-UnaryOperator 0x142826d50 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x142826d38 <col:7> 'char **' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x142826d18 <col:7> 'char **' lvalue ParmVar 0x14280dd28 's' 'char **'
    |       | `-ImplicitCastExpr 0x142826d88 <col:12> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x142826d68 <col:12> 'int' lvalue Var 0x14280e008 'k' 'int'
    |       |-CompoundAssignOperator 0x142826e40 <line:33:6, col:12> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       | |-UnaryOperator 0x142826e08 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x142826df0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    |       | |   `-RecoveryExpr 0x142826dd0 <col:7> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x142826e20 <col:12> 'int' lvalue Var 0x14280e008 'k' 'int'
    |       `-ReturnStmt 0x142826ea8 <line:34:6, col:13>
    |         `-ImplicitCastExpr 0x142826e90 <col:13> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x142826e70 <col:13> 'int' lvalue Var 0x14280df88 'c' 'int'
    `-ReturnStmt 0x142826f78 <line:39:5, col:13>
      `-UnaryOperator 0x142826f60 <col:12, col:13> 'int' prefix '-'
        `-IntegerLiteral 0x142826f40 <col:13> 'int' 1
