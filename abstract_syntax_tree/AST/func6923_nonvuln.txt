TranslationUnitDecl 0x15c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15c055bd0 '__int128'
|-TypedefDecl 0x15c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15c055bf0 'unsigned __int128'
|-TypedefDecl 0x15c126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15c126000 'struct __NSConstantString_tag'
|   `-Record 0x15c056580 '__NSConstantString_tag'
|-TypedefDecl 0x15c126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15c055d90 '__SVInt8_t'
|-TypedefDecl 0x15c126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15c055db0 '__SVInt16_t'
|-TypedefDecl 0x15c126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15c055dd0 '__SVInt32_t'
|-TypedefDecl 0x15c1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15c055df0 '__SVInt64_t'
|-TypedefDecl 0x15c126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15c055e10 '__SVUint8_t'
|-TypedefDecl 0x15c1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15c055e30 '__SVUint16_t'
|-TypedefDecl 0x15c126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15c055e50 '__SVUint32_t'
|-TypedefDecl 0x15c126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15c055e70 '__SVUint64_t'
|-TypedefDecl 0x15c1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15c055e90 '__SVFloat16_t'
|-TypedefDecl 0x15c126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15c1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15c126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15c126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15c1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15c126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15c1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15c126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15c126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15c1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15c126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15c126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15c126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15c126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15c126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15c126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15c126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15c126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15c126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15c126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15c126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15c126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15c126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15c126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15c127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15c127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15c1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15c127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15c1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15c127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15c127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15c127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15c127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15c127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15c127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15c127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15c127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15c127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15c127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15c127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15c056390 '__SVBool_t'
|-TypedefDecl 0x15c127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15c127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15c127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15c0563f0 '__SVCount_t'
|-TypedefDecl 0x15c127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15c127fb0 'char *'
|   `-BuiltinType 0x15c0556b0 'char'
|-TypedefDecl 0x15c128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15c127fb0 'char *'
|   `-BuiltinType 0x15c0556b0 'char'
|-FunctionDecl 0x15c128318 <dataset_diviso_filec/func6923_nonvuln.c:1:1, line:38:1> line:1:1 invalid url_encode_attr 'int (int *, char *, int)'
| |-ParmVarDecl 0x15c128128 <col:17, col:34> col:34 invalid attr 'int *'
| |-ParmVarDecl 0x15c1281a8 <line:2:17, col:34> col:34 used buffer 'char *'
| |-ParmVarDecl 0x15c128228 <line:3:3, col:19> col:19 invalid bufsize 'int'
| `-CompoundStmt 0x15c141ec0 <line:4:1, line:38:1>
|   |-DeclStmt 0x15c128458 <line:5:3, col:8>
|   | `-VarDecl 0x15c1283f0 <col:3, col:7> col:7 used i 'int'
|   |-DeclStmt 0x15c128588 <line:6:3, line:7:9>
|   | |-VarDecl 0x15c128488 <line:6:3, col:9> col:9 used bufptr 'char *'
|   | `-VarDecl 0x15c128508 <col:3, line:7:3> col:3 used bufend 'char *'
|   |-CallExpr 0x15c808770 <line:10:3, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15c808660 <col:3> 'unsigned long (char *, const char *, unsigned long)' Function 0x15c808410 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|   | |-DeclRefExpr 0x15c808680 <col:11> 'char *' lvalue ParmVar 0x15c1281a8 'buffer' 'char *'
|   | |-CXXDependentScopeMemberExpr 0x15c8086c0 <col:19, col:25> '<dependent type>' contains-errors lvalue ->name
|   | | `-RecoveryExpr 0x15c8086a0 <col:19> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x15c808708 <col:31> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15c808ac8 <line:11:3, col:34> 'char *' '='
|   | |-DeclRefExpr 0x15c8087a8 <col:3> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   | `-BinaryOperator 0x15c808aa8 <col:12, col:34> 'char *' '+'
|   |   |-ImplicitCastExpr 0x15c808a90 <col:12> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15c8087c8 <col:12> 'char *' lvalue ParmVar 0x15c1281a8 'buffer' 'char *'
|   |   `-CallExpr 0x15c808a38 <col:21, col:34> 'unsigned long'
|   |     |-ImplicitCastExpr 0x15c808a20 <col:21> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x15c808998 <col:21> 'unsigned long (const char *)' Function 0x15c808828 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x15c808a78 <col:28> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x15c808a60 <col:28> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x15c8089b8 <col:28> 'char *' lvalue ParmVar 0x15c1281a8 'buffer' 'char *'
|   |-BinaryOperator 0x15c808ba8 <line:12:3, col:31> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x15c808ae8 <col:3> 'char *' lvalue Var 0x15c128508 'bufend' 'char *'
|   | `-BinaryOperator 0x15c808b88 <col:12, col:31> '<dependent type>' contains-errors '-'
|   |   |-BinaryOperator 0x15c808b48 <col:12, col:21> '<dependent type>' contains-errors '+'
|   |   | |-DeclRefExpr 0x15c808b08 <col:12> 'char *' lvalue ParmVar 0x15c1281a8 'buffer' 'char *'
|   |   | `-RecoveryExpr 0x15c808b28 <col:21> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x15c808b68 <col:31> 'int' 1
|   |-ForStmt 0x15c141de8 <line:14:3, line:35:3>
|   | |-BinaryOperator 0x15c808c08 <line:14:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x15c808bc8 <col:8> 'int' lvalue Var 0x15c1283f0 'i' 'int'
|   | | `-IntegerLiteral 0x15c808be8 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15c808cb0 <col:15, col:25> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x15c808c28 <col:15> 'int' lvalue Var 0x15c1283f0 'i' 'int'
|   | | `-CXXDependentScopeMemberExpr 0x15c808c68 <col:19, col:25> '<dependent type>' contains-errors lvalue ->num_values
|   | |   `-RecoveryExpr 0x15c808c48 <col:19> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x15c808cf0 <col:37, col:39> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15c808cd0 <col:37> 'int' lvalue Var 0x15c1283f0 'i' 'int'
|   | `-CompoundStmt 0x15c141da0 <line:15:3, line:35:3>
|   |   |-IfStmt 0x15c808da0 <line:16:5, line:17:7>
|   |   | |-BinaryOperator 0x15c808d78 <line:16:9, col:19> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x15c808d48 <col:9> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x15c808d08 <col:9> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |   | | `-ImplicitCastExpr 0x15c808d60 <col:19> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15c808d28 <col:19> 'char *' lvalue Var 0x15c128508 'bufend' 'char *'
|   |   | `-BreakStmt 0x15c808d98 <line:17:7>
|   |   |-IfStmt 0x15c808f38 <line:19:5, line:22:19> has_else
|   |   | |-ImplicitCastExpr 0x15c808de0 <line:19:9> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15c808dc0 <col:9> 'int' lvalue Var 0x15c1283f0 'i' 'int'
|   |   | |-BinaryOperator 0x15c808e78 <line:20:7, col:19> 'char' '='
|   |   | | |-UnaryOperator 0x15c808e30 <col:7, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | | | `-UnaryOperator 0x15c808e18 <col:8, col:14> 'char *' postfix '++'
|   |   | | |   `-DeclRefExpr 0x15c808df8 <col:8> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |   | | `-ImplicitCastExpr 0x15c808e60 <col:19> 'char' <IntegralCast>
|   |   | |   `-CharacterLiteral 0x15c808e48 <col:19> 'int' 44
|   |   | `-BinaryOperator 0x15c808f18 <line:22:7, col:19> 'char' '='
|   |   |   |-UnaryOperator 0x15c808ed0 <col:7, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-UnaryOperator 0x15c808eb8 <col:8, col:14> 'char *' postfix '++'
|   |   |   |   `-DeclRefExpr 0x15c808e98 <col:8> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |   |   `-ImplicitCastExpr 0x15c808f00 <col:19> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x15c808ee8 <col:19> 'int' 61
|   |   |-IfStmt 0x15c809000 <line:24:5, line:25:7>
|   |   | |-BinaryOperator 0x15c808fd8 <line:24:9, col:19> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x15c808fa8 <col:9> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x15c808f68 <col:9> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |   | | `-ImplicitCastExpr 0x15c808fc0 <col:19> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15c808f88 <col:19> 'char *' lvalue Var 0x15c128508 'bufend' 'char *'
|   |   | `-BreakStmt 0x15c808ff8 <line:25:7>
|   |   |-BinaryOperator 0x15c8090a0 <line:27:5, col:17> 'char' '='
|   |   | |-UnaryOperator 0x15c809058 <col:5, col:12> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x15c809040 <col:6, col:12> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x15c809020 <col:6> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |   | `-ImplicitCastExpr 0x15c809088 <col:17> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x15c809070 <col:17> 'int' 39
|   |   |-BinaryOperator 0x15c141c28 <line:29:5, col:98> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x15c8090c0 <col:5> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |   | `-CallExpr 0x15c141bf0 <col:14, col:98> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x15c1418b8 <col:14> 'int ()' Function 0x15c141800 'url_encode_string' 'int ()'
|   |   |   |-CXXDependentScopeMemberExpr 0x15c1419f8 <col:32, col:55> '<dependent type>' contains-errors lvalue .text
|   |   |   | `-CXXDependentScopeMemberExpr 0x15c1419b0 <col:32, col:48> '<dependent type>' contains-errors lvalue .string
|   |   |   |   `-ArraySubscriptExpr 0x15c141990 <col:32, col:46> '<dependent type>' contains-errors lvalue
|   |   |   |     |-ImplicitCastExpr 0x15c141960 <col:32, col:38> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     | `-CXXDependentScopeMemberExpr 0x15c1418f8 <col:32, col:38> '<dependent type>' contains-errors lvalue ->values
|   |   |   |     |   `-RecoveryExpr 0x15c1418d8 <col:32> '<dependent type>' contains-errors lvalue
|   |   |   |     `-ImplicitCastExpr 0x15c141978 <col:45> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x15c141940 <col:45> 'int' lvalue Var 0x15c1283f0 'i' 'int'
|   |   |   |-DeclRefExpr 0x15c141a40 <col:61> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |   |   `-RecoveryExpr 0x15c141bc0 <col:69, col:97> '<dependent type>' contains-errors lvalue
|   |   |     |-ParenExpr 0x15c141ab8 <col:69, col:76> '<overloaded function type>' lvalue
|   |   |     | `-UnresolvedLookupExpr 0x15c141a78 <col:70> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
|   |   |     `-BinaryOperator 0x15c141ba0 <col:78, col:96> 'long' '+'
|   |   |       |-BinaryOperator 0x15c141b48 <col:78, col:87> 'long' '-'
|   |   |       | |-ImplicitCastExpr 0x15c141b18 <col:78> 'char *' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x15c141ad8 <col:78> 'char *' lvalue Var 0x15c128508 'bufend' 'char *'
|   |   |       | `-ImplicitCastExpr 0x15c141b30 <col:87> 'char *' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x15c141af8 <col:87> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |   |       `-ImplicitCastExpr 0x15c141b88 <col:96> 'long' <IntegralCast>
|   |   |         `-IntegerLiteral 0x15c141b68 <col:96> 'int' 1
|   |   |-IfStmt 0x15c141ce0 <line:31:5, line:32:7>
|   |   | |-BinaryOperator 0x15c141cb8 <line:31:9, col:19> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x15c141c88 <col:9> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x15c141c48 <col:9> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |   | | `-ImplicitCastExpr 0x15c141ca0 <col:19> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15c141c68 <col:19> 'char *' lvalue Var 0x15c128508 'bufend' 'char *'
|   |   | `-BreakStmt 0x15c141cd8 <line:32:7>
|   |   `-BinaryOperator 0x15c141d80 <line:34:5, col:17> 'char' '='
|   |     |-UnaryOperator 0x15c141d38 <col:5, col:12> 'char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x15c141d20 <col:6, col:12> 'char *' postfix '++'
|   |     |   `-DeclRefExpr 0x15c141d00 <col:6> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|   |     `-ImplicitCastExpr 0x15c141d68 <col:17> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x15c141d50 <col:17> 'int' 39
|   `-BinaryOperator 0x15c141ea0 <line:37:3, col:13> 'char' '='
|     |-UnaryOperator 0x15c141e58 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x15c141e40 <col:4> 'char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x15c141e20 <col:4> 'char *' lvalue Var 0x15c128488 'bufptr' 'char *'
|     `-ImplicitCastExpr 0x15c141e88 <col:13> 'char' <IntegralCast>
|       `-CharacterLiteral 0x15c141e70 <col:13> 'int' 0
|-FunctionDecl 0x15c808410 <line:10:3> col:3 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x15c808510 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x15c808578 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15c8085e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x15c8084b8 <<invalid sloc>> Implicit 969
`-FunctionDecl 0x15c808828 <line:11:21> col:21 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x15c808928 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15c8088d0 <<invalid sloc>> Implicit 902
