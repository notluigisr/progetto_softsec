TranslationUnitDecl 0x132855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1328564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132855bd0 '__int128'
|-TypedefDecl 0x132856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132855bf0 'unsigned __int128'
|-TypedefDecl 0x132926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132926000 'struct __NSConstantString_tag'
|   `-Record 0x132856580 '__NSConstantString_tag'
|-TypedefDecl 0x132926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132855d90 '__SVInt8_t'
|-TypedefDecl 0x132926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132855db0 '__SVInt16_t'
|-TypedefDecl 0x132926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132855dd0 '__SVInt32_t'
|-TypedefDecl 0x1329263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132855df0 '__SVInt64_t'
|-TypedefDecl 0x132926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132855e10 '__SVUint8_t'
|-TypedefDecl 0x1329264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132855e30 '__SVUint16_t'
|-TypedefDecl 0x132926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132855e50 '__SVUint32_t'
|-TypedefDecl 0x132926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132855e70 '__SVUint64_t'
|-TypedefDecl 0x1329265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132855e90 '__SVFloat16_t'
|-TypedefDecl 0x132926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1329266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132855ed0 '__SVFloat64_t'
|-TypedefDecl 0x132926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1329267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1329268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1329269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132856090 '__clang_svint8x3_t'
|-TypedefDecl 0x132926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1328560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1328560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1328560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x132926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x132926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1328561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1328561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1329278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1328561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1329279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132856230 '__clang_svint16x4_t'
|-TypedefDecl 0x132927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132856250 '__clang_svint32x4_t'
|-TypedefDecl 0x132927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132856270 '__clang_svint64x4_t'
|-TypedefDecl 0x132927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1328562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x132927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1328562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1328562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x132927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x132927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132856390 '__SVBool_t'
|-TypedefDecl 0x132927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1328563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x132927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1328563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1328563f0 '__SVCount_t'
|-TypedefDecl 0x132927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-TypedefDecl 0x132928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-FunctionDecl 0x132940b50 <dataset_diviso_filec/func6636_vuln.c:1:1, line:23:1> line:1:13 port_show_vhci 'void (char **, int, int, struct vhci_device *)' static
| |-ParmVarDecl 0x132928108 <col:28, col:35> col:35 used out 'char **'
| |-ParmVarDecl 0x132928188 <col:40, col:44> col:44 used hub 'int'
| |-ParmVarDecl 0x132928208 <col:49, col:53> col:53 used port 'int'
| |-ParmVarDecl 0x132940a00 <col:59, col:79> col:79 used vdev 'struct vhci_device *'
| `-CompoundStmt 0x132943070 <line:2:1, line:23:1>
|   |-IfStmt 0x132941440 <line:3:2, line:8:32> has_else
|   | |-BinaryOperator 0x132940cf0 <line:3:6, col:13> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x132940c60 <col:6> 'int' lvalue ParmVar 0x132928188 'hub' 'int'
|   | | `-RecoveryExpr 0x132940cd0 <col:13> '<dependent type>' contains-errors lvalue
|   | |-CompoundAssignOperator 0x1329411c8 <line:4:3, line:5:32> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | | |-UnaryOperator 0x132940d48 <line:4:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x132940d30 <col:4> 'char **' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x132940d10 <col:4> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   | | `-CallExpr 0x132941188 <col:11, line:5:32> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x132940fc0 <line:4:11> 'int (char *, const char *, ...)' Function 0x132940da8 'sprintf' 'int (char *, const char *, ...)'
|   | |   |-UnaryOperator 0x132941018 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x132941000 <col:20> 'char **' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x132940fe0 <col:20> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   | |   |-StringLiteral 0x132941070 <col:25> 'char[4]' lvalue "STR"
|   | |   |-DeclRefExpr 0x132941090 <line:5:11> 'int' lvalue ParmVar 0x132928208 'port' 'int'
|   | |   `-CXXDependentScopeMemberExpr 0x132941110 <col:17, col:26> '<dependent type>' contains-errors lvalue .status
|   | |     `-RecoveryExpr 0x1329410e8 <col:17, col:23> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x1329410b0 <col:17> 'struct vhci_device *' lvalue ParmVar 0x132940a00 'vdev' 'struct vhci_device *'
|   | `-CompoundAssignOperator 0x132941410 <line:7:3, line:8:32> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |-UnaryOperator 0x132941230 <line:7:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x132941218 <col:4> 'char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1329411f8 <col:4> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   |   `-CallExpr 0x1329413d0 <col:11, line:8:32> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x132941248 <line:7:11> 'int (char *, const char *, ...)' Function 0x132940da8 'sprintf' 'int (char *, const char *, ...)'
|   |     |-UnaryOperator 0x1329412a0 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x132941288 <col:20> 'char **' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x132941268 <col:20> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   |     |-StringLiteral 0x1329412b8 <col:25> 'char[4]' lvalue "STR"
|   |     |-DeclRefExpr 0x1329412d8 <line:8:11> 'int' lvalue ParmVar 0x132928208 'port' 'int'
|   |     `-CXXDependentScopeMemberExpr 0x132941358 <col:17, col:26> '<dependent type>' contains-errors lvalue .status
|   |       `-RecoveryExpr 0x132941330 <col:17, col:23> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x1329412f8 <col:17> 'struct vhci_device *' lvalue ParmVar 0x132940a00 'vdev' 'struct vhci_device *'
|   |-IfStmt 0x132942e70 <line:10:2, line:20:2> has_else
|   | |-BinaryOperator 0x132941570 <line:10:6, col:25> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x1329414d0 <col:6, col:15> '<dependent type>' contains-errors lvalue .status
|   | | | `-RecoveryExpr 0x1329414a8 <col:6, col:12> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x132941470 <col:6> 'struct vhci_device *' lvalue ParmVar 0x132940a00 'vdev' 'struct vhci_device *'
|   | | `-RecoveryExpr 0x132941550 <col:25> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x132942a60 <col:39, line:17:2>
|   | | |-CompoundAssignOperator 0x1329417a0 <line:11:3, line:12:35> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | | | |-UnaryOperator 0x1329415c8 <line:11:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x1329415b0 <col:4> 'char **' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x132941590 <col:4> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   | | | `-CallExpr 0x132941760 <col:11, line:12:35> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x1329415e0 <line:11:11> 'int (char *, const char *, ...)' Function 0x132940da8 'sprintf' 'int (char *, const char *, ...)'
|   | | |   |-UnaryOperator 0x132941638 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x132941620 <col:20> 'char **' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x132941600 <col:20> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   | | |   |-StringLiteral 0x132941650 <col:25> 'char[4]' lvalue "STR"
|   | | |   |-RecoveryExpr 0x1329416a8 <line:12:11, col:17> '<dependent type>' contains-errors lvalue
|   | | |   | `-DeclRefExpr 0x132941670 <col:11> 'struct vhci_device *' lvalue ParmVar 0x132940a00 'vdev' 'struct vhci_device *'
|   | | |   `-RecoveryExpr 0x132941708 <col:24, col:30> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x1329416d0 <col:24> 'struct vhci_device *' lvalue ParmVar 0x132940a00 'vdev' 'struct vhci_device *'
|   | | `-CompoundAssignOperator 0x132942a30 <line:13:3, line:15:37> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |   |-UnaryOperator 0x132941808 <line:13:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x1329417f0 <col:4> 'char **' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1329417d0 <col:4> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   | |   `-CallExpr 0x1329429f0 <col:11, line:15:37> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x132941820 <line:13:11> 'int (char *, const char *, ...)' Function 0x132940da8 'sprintf' 'int (char *, const char *, ...)'
|   | |     |-UnaryOperator 0x132941878 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow
|   | |     | `-ImplicitCastExpr 0x132941860 <col:20> 'char **' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x132941840 <col:20> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   | |     |-StringLiteral 0x132941890 <col:25> 'char[4]' lvalue "STR"
|   | |     |-CXXDependentScopeMemberExpr 0x132941910 <line:14:11, col:20> '<dependent type>' contains-errors lvalue .tcp_socket
|   | |     | `-RecoveryExpr 0x1329418e8 <col:11, col:17> '<dependent type>' contains-errors lvalue
|   | |     |   `-DeclRefExpr 0x1329418b0 <col:11> 'struct vhci_device *' lvalue ParmVar 0x132940a00 'vdev' 'struct vhci_device *'
|   | |     `-CallExpr 0x132942998 <line:15:11, col:36> '<dependent type>' contains-errors
|   | |       |-DeclRefExpr 0x1329428b8 <col:11> 'int ()' Function 0x132942800 'dev_name' 'int ()'
|   | |       `-UnaryOperator 0x132942980 <col:20, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |         `-CXXDependentScopeMemberExpr 0x132942938 <col:21, col:33> '<dependent type>' contains-errors lvalue ->dev
|   | |           `-RecoveryExpr 0x132942910 <col:21, col:27> '<dependent type>' contains-errors lvalue
|   | |             `-DeclRefExpr 0x1329428d8 <col:21> 'struct vhci_device *' lvalue ParmVar 0x132940a00 'vdev' 'struct vhci_device *'
|   | `-CompoundStmt 0x132942e50 <line:17:9, line:20:2>
|   |   |-CompoundAssignOperator 0x132942c50 <line:18:3, col:30> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-UnaryOperator 0x132942ab8 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x132942aa0 <col:4> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x132942a80 <col:4> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   |   | `-CallExpr 0x132942bd8 <col:11, col:30> 'int'
|   |   |   |-ImplicitCastExpr 0x132942bc0 <col:11> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x132942ad0 <col:11> 'int (char *, const char *, ...)' Function 0x132940da8 'sprintf' 'int (char *, const char *, ...)'
|   |   |   |-ImplicitCastExpr 0x132942c08 <col:19, col:20> 'char *' <LValueToRValue>
|   |   |   | `-UnaryOperator 0x132942b28 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x132942b10 <col:20> 'char **' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x132942af0 <col:20> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   |   |   `-ImplicitCastExpr 0x132942c38 <col:25> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x132942c20 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x132942b40 <col:25> 'char[4]' lvalue "STR"
|   |   `-CompoundAssignOperator 0x132942e20 <line:19:3, col:30> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-UnaryOperator 0x132942cb8 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x132942ca0 <col:4> 'char **' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x132942c80 <col:4> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   |     `-CallExpr 0x132942da8 <col:11, col:30> 'int'
|   |       |-ImplicitCastExpr 0x132942d90 <col:11> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x132942cd0 <col:11> 'int (char *, const char *, ...)' Function 0x132940da8 'sprintf' 'int (char *, const char *, ...)'
|   |       |-ImplicitCastExpr 0x132942dd8 <col:19, col:20> 'char *' <LValueToRValue>
|   |       | `-UnaryOperator 0x132942d28 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow
|   |       |   `-ImplicitCastExpr 0x132942d10 <col:20> 'char **' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x132942cf0 <col:20> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|   |       `-ImplicitCastExpr 0x132942e08 <col:25> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x132942df0 <col:25> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x132942d40 <col:25> 'char[4]' lvalue "STR"
|   `-CompoundAssignOperator 0x132943040 <line:22:2, col:29> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|     |-UnaryOperator 0x132942ed8 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x132942ec0 <col:3> 'char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x132942ea0 <col:3> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|     `-CallExpr 0x132942fc8 <col:10, col:29> 'int'
|       |-ImplicitCastExpr 0x132942fb0 <col:10> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x132942ef0 <col:10> 'int (char *, const char *, ...)' Function 0x132940da8 'sprintf' 'int (char *, const char *, ...)'
|       |-ImplicitCastExpr 0x132942ff8 <col:18, col:19> 'char *' <LValueToRValue>
|       | `-UnaryOperator 0x132942f48 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
|       |   `-ImplicitCastExpr 0x132942f30 <col:19> 'char **' <LValueToRValue>
|       |     `-DeclRefExpr 0x132942f10 <col:19> 'char **' lvalue ParmVar 0x132928108 'out' 'char **'
|       `-ImplicitCastExpr 0x132943028 <col:24> 'const char *' <NoOp>
|         `-ImplicitCastExpr 0x132943010 <col:24> 'char *' <ArrayToPointerDecay>
|           `-StringLiteral 0x132942f60 <col:24> 'char[4]' lvalue "STR"
`-FunctionDecl 0x132940da8 <line:4:11> col:11 implicit used sprintf 'int (char *, const char *, ...)' extern
  |-ParmVarDecl 0x132940ea8 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x132940f10 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x132940e50 <<invalid sloc>> Implicit 906
  `-FormatAttr 0x132940f88 <col:11> Implicit printf 2 3
