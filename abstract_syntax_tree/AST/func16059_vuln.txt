TranslationUnitDecl 0x15b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b055bd0 '__int128'
|-TypedefDecl 0x15b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b055bf0 'unsigned __int128'
|-TypedefDecl 0x15b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b126000 'struct __NSConstantString_tag'
|   `-Record 0x15b056580 '__NSConstantString_tag'
|-TypedefDecl 0x15b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b055d90 '__SVInt8_t'
|-TypedefDecl 0x15b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b055db0 '__SVInt16_t'
|-TypedefDecl 0x15b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b055dd0 '__SVInt32_t'
|-TypedefDecl 0x15b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b055df0 '__SVInt64_t'
|-TypedefDecl 0x15b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b055e10 '__SVUint8_t'
|-TypedefDecl 0x15b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b055e30 '__SVUint16_t'
|-TypedefDecl 0x15b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b055e50 '__SVUint32_t'
|-TypedefDecl 0x15b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b055e70 '__SVUint64_t'
|-TypedefDecl 0x15b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b055e90 '__SVFloat16_t'
|-TypedefDecl 0x15b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b056390 '__SVBool_t'
|-TypedefDecl 0x15b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b0563f0 '__SVCount_t'
|-TypedefDecl 0x15b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b127fb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-TypedefDecl 0x15b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b127fb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
`-FunctionDecl 0x15b1283a8 <dataset_diviso_filec/func16059_vuln.c:1:1, line:57:1> line:1:1 invalid _gnutls_x509_dn_to_string 'int (const char *, void *, int, int *)'
  |-ParmVarDecl 0x15b1280d8 <col:27, col:39> col:39 used oid 'const char *'
  |-ParmVarDecl 0x15b128158 <col:44, col:50> col:50 used value 'void *'
  |-ParmVarDecl 0x15b1281d8 <line:2:6, col:10> col:10 used value_size 'int'
  |-ParmVarDecl 0x15b1282a8 <col:22, col:39> col:39 referenced invalid str 'int *'
  `-CompoundStmt 0x15c80aba0 <line:3:1, line:57:1>
    |-DeclStmt 0x15b128658 <line:4:2, col:36>
    | |-RecordDecl 0x15b128470 <col:8, col:15> col:15 struct oid_to_string
    | `-VarDecl 0x15b1285d8 <col:2, col:30> col:30 used oentry 'const struct oid_to_string *'
    |-DeclStmt 0x15b1286f0 <line:5:2, col:9>
    | `-VarDecl 0x15b128688 <col:2, col:6> col:6 used ret 'int'
    |-UnaryExprOrTypeTraitExpr 0x15b128760 <line:7:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x15b128740 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15b80a560 <line:9:2, line:12:2>
    | |-BinaryOperator 0x15b80a2f0 <line:9:6, col:37> 'int' contains-errors '||'
    | | |-BinaryOperator 0x15b80a298 <col:6, col:15> 'int' contains-errors '=='
    | | | |-DeclRefExpr 0x15b128780 <col:6> 'void *' lvalue ParmVar 0x15b128158 'value' 'void *'
    | | | `-RecoveryExpr 0x15b80a278 <col:15> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x15b80a2d0 <col:23, col:37> 'int' '<='
    | |   |-ImplicitCastExpr 0x15b80a2b8 <col:23> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15b1287d8 <col:23> 'int' lvalue ParmVar 0x15b1281d8 'value_size' 'int'
    | |   `-IntegerLiteral 0x15b80a200 <col:37> 'int' 0
    | `-CompoundStmt 0x15b80a540 <col:40, line:12:2>
    |   |-CallExpr 0x15b80a4d8 <line:10:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x15b80a4c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x15b80a470 <col:3> 'int ()' Function 0x15b80a3b8 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x15b80a530 <line:11:3, col:10>
    |     `-RecoveryExpr 0x15b80a510 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15b80ab50 <line:14:2, col:28> 'const struct oid_to_string *' '='
    | |-DeclRefExpr 0x15b80a580 <col:2> 'const struct oid_to_string *' lvalue Var 0x15b1285d8 'oentry' 'const struct oid_to_string *'
    | `-ImplicitCastExpr 0x15b80a718 <col:11, col:28> 'const struct oid_to_string *' <IntegralToPointer>
    |   `-CallExpr 0x15b80a6d8 <col:11, col:28> 'int'
    |     |-ImplicitCastExpr 0x15b80a6c0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b80a680 <col:11> 'int ()' Function 0x15b80a5c8 'get_oid_entry' 'int ()'
    |     `-ImplicitCastExpr 0x15b80a700 <col:25> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x15b80a6a0 <col:25> 'const char *' lvalue ParmVar 0x15b1280d8 'oid' 'const char *'
    |-IfStmt 0x15c809c00 <line:15:2, line:31:2>
    | |-BinaryOperator 0x15b80abe8 <line:15:6, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x15b80ab70 <col:6> 'const struct oid_to_string *' lvalue Var 0x15b1285d8 'oentry' 'const struct oid_to_string *'
    | | `-RecoveryExpr 0x15b80abc8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15c809bc0 <col:22, line:31:2>
    |   |-LabelStmt 0x15b80adc0 <line:16:2, line:17:32> 'unknown_oid'
    |   | `-BinaryOperator 0x15b80ad50 <col:3, col:32> '<dependent type>' contains-errors '='
    |   |   |-CXXDependentScopeMemberExpr 0x15b80ac50 <col:3, col:8> '<dependent type>' contains-errors lvalue ->size
    |   |   | `-RecoveryExpr 0x15b80ac28 <col:3> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x15b80ac08 <col:3> 'int *' lvalue ParmVar 0x15b1282a8 'str' 'int *'
    |   |   `-BinaryOperator 0x15b80ad30 <col:15, col:32> 'int' '+'
    |   |     |-BinaryOperator 0x15b80acf0 <col:15, col:28> 'int' '*'
    |   |     | |-ImplicitCastExpr 0x15b80acd8 <col:15> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x15b80ac98 <col:15> 'int' lvalue ParmVar 0x15b1281d8 'value_size' 'int'
    |   |     | `-IntegerLiteral 0x15b80acb8 <col:28> 'int' 2
    |   |     `-IntegerLiteral 0x15b80ad10 <col:32> 'int' 2
    |   |-BinaryOperator 0x15b80b000 <line:18:3, col:38> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x15b80ae28 <col:3, col:8> '<dependent type>' contains-errors lvalue ->data
    |   | | `-RecoveryExpr 0x15b80ae00 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x15b80ade0 <col:3> 'int *' lvalue ParmVar 0x15b1282a8 'str' 'int *'
    |   | `-CallExpr 0x15b80afd8 <col:15, col:38> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15b80af50 <col:15> 'int ()' Function 0x15b80ae98 'gnutls_malloc' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x15b80af90 <col:29, col:34> '<dependent type>' contains-errors lvalue ->size
    |   |     `-RecoveryExpr 0x15b80af70 <col:29> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x15c809498 <line:19:3, line:20:50>
    |   | |-BinaryOperator 0x15b80b0e0 <line:19:7, col:20> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x15b80b040 <col:7, col:12> '<dependent type>' contains-errors lvalue ->data
    |   | | | `-RecoveryExpr 0x15b80b020 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x15b80b0c0 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x15c809488 <line:20:4, col:50>
    |   |   `-CallExpr 0x15c809460 <col:11, col:50> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x15b80b1e0 <col:11> 'int ()' Function 0x15b80b128 'gnutls_assert_val' 'int ()'
    |   |     `-RecoveryExpr 0x15c809440 <col:29> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x15c8097f0 <line:23:3, col:53> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x15c809520 <col:3> 'int' lvalue Var 0x15b128688 'ret' 'int'
    |   | `-CallExpr 0x15c8097b0 <col:9, col:53> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15c809620 <col:9> 'int ()' Function 0x15c809568 'data2hex' 'int ()'
    |   |   |-DeclRefExpr 0x15c809640 <col:18> 'void *' lvalue ParmVar 0x15b128158 'value' 'void *'
    |   |   |-DeclRefExpr 0x15c809660 <col:25> 'int' lvalue ParmVar 0x15b1281d8 'value_size' 'int'
    |   |   |-CXXDependentScopeMemberExpr 0x15c8096a0 <col:37, col:42> '<dependent type>' contains-errors lvalue ->data
    |   |   | `-RecoveryExpr 0x15c809680 <col:37> '<dependent type>' contains-errors lvalue
    |   |   `-UnaryOperator 0x15c809798 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x15c809778 <col:49> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x15c809ae0 <line:24:3, line:28:3>
    |   | |-BinaryOperator 0x15c809868 <line:24:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x15c809850 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x15c809810 <col:7> 'int' lvalue Var 0x15b128688 'ret' 'int'
    |   | | `-IntegerLiteral 0x15c809830 <col:13> 'int' 0
    |   | `-CompoundStmt 0x15c809ab8 <col:16, line:28:3>
    |   |   |-CallExpr 0x15c8098c0 <line:25:4, col:18> 'int'
    |   |   | `-ImplicitCastExpr 0x15c8098a8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   `-DeclRefExpr 0x15c809888 <col:4> 'int ()' Function 0x15b80a3b8 'gnutls_assert' 'int ()'
    |   |   |-CallExpr 0x15c809a48 <line:26:4, col:25> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x15c8099c0 <col:4> 'int ()' Function 0x15c809908 'gnutls_free' 'int ()'
    |   |   | `-CXXDependentScopeMemberExpr 0x15c809a00 <col:16, col:21> '<dependent type>' contains-errors lvalue ->data
    |   |   |   `-RecoveryExpr 0x15c8099e0 <col:16> '<dependent type>' contains-errors lvalue
    |   |   `-ReturnStmt 0x15c809aa8 <line:27:4, col:11>
    |   |     `-ImplicitCastExpr 0x15c809a90 <col:11> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x15c809a70 <col:11> 'int' lvalue Var 0x15b128688 'ret' 'int'
    |   `-ReturnStmt 0x15c809bb0 <line:30:3, col:10>
    |     `-IntegerLiteral 0x15c809b90 <col:10> 'int' 0
    |-IfStmt 0x15c80a1c0 <line:33:2, line:48:2> has_else
    | |-RecoveryExpr 0x15c809c80 <line:33:6, col:26> '_Bool' contains-errors
    | |-CompoundStmt 0x15c809ee8 <col:32, line:40:2>
    | | `-IfStmt 0x15c809ec8 <line:36:3, line:39:3>
    | |   |-BinaryOperator 0x15c809e78 <line:36:7, col:13> 'int' '<'
    | |   | |-ImplicitCastExpr 0x15c809e60 <col:7> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x15c809e20 <col:7> 'int' lvalue Var 0x15b128688 'ret' 'int'
    | |   | `-IntegerLiteral 0x15c809e40 <col:13> 'int' 0
    | |   `-CompoundStmt 0x15c809eb0 <col:16, line:39:3>
    | |     `-GotoStmt 0x15c809e98 <line:38:4, col:9> 'unknown_oid' 0x15b80ad70
    | `-CompoundStmt 0x15c80a1a8 <line:40:9, line:48:2>
    |   `-IfStmt 0x15c80a188 <line:44:3, line:47:3>
    |     |-BinaryOperator 0x15c80a138 <line:44:7, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x15c80a120 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x15c80a0e0 <col:7> 'int' lvalue Var 0x15b128688 'ret' 'int'
    |     | `-IntegerLiteral 0x15c80a100 <col:13> 'int' 0
    |     `-CompoundStmt 0x15c80a170 <col:16, line:47:3>
    |       `-GotoStmt 0x15c80a158 <line:46:4, col:9> 'unknown_oid' 0x15b80ad70
    |-IfStmt 0x15c80ab50 <line:53:2, line:54:31>
    | |-BinaryOperator 0x15c80aa88 <line:53:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x15c80aa70 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15c80aa30 <col:6> 'int' lvalue Var 0x15b128688 'ret' 'int'
    | | `-IntegerLiteral 0x15c80aa50 <col:12> 'int' 0
    | `-ReturnStmt 0x15c80ab40 <line:54:3, col:31>
    |   `-CallExpr 0x15c80ab00 <col:10, col:31> 'int'
    |     |-ImplicitCastExpr 0x15c80aae8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15c80aaa8 <col:10> 'int ()' Function 0x15b80b128 'gnutls_assert_val' 'int ()'
    |     `-ImplicitCastExpr 0x15c80ab28 <col:28> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x15c80aac8 <col:28> 'int' lvalue Var 0x15b128688 'ret' 'int'
    `-ReturnStmt 0x15c80ab90 <line:56:2, col:9>
      `-IntegerLiteral 0x15c80ab70 <col:9> 'int' 0
