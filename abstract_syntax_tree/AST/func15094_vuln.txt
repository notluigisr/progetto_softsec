TranslationUnitDecl 0x12c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c855bd0 '__int128'
|-TypedefDecl 0x12c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c855bf0 'unsigned __int128'
|-TypedefDecl 0x12c926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c926000 'struct __NSConstantString_tag'
|   `-Record 0x12c856580 '__NSConstantString_tag'
|-TypedefDecl 0x12c926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c855d90 '__SVInt8_t'
|-TypedefDecl 0x12c926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c855db0 '__SVInt16_t'
|-TypedefDecl 0x12c926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c855dd0 '__SVInt32_t'
|-TypedefDecl 0x12c9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c855df0 '__SVInt64_t'
|-TypedefDecl 0x12c926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c855e10 '__SVUint8_t'
|-TypedefDecl 0x12c9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c855e30 '__SVUint16_t'
|-TypedefDecl 0x12c926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c855e50 '__SVUint32_t'
|-TypedefDecl 0x12c926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c855e70 '__SVUint64_t'
|-TypedefDecl 0x12c9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c855e90 '__SVFloat16_t'
|-TypedefDecl 0x12c926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c856390 '__SVBool_t'
|-TypedefDecl 0x12c927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c8563f0 '__SVCount_t'
|-TypedefDecl 0x12c927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c927fb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-TypedefDecl 0x12c928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c927fb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-FunctionDecl 0x12c928250 <dataset_diviso_filec/func15094_vuln.c:1:1, line:11:1> line:1:6 invalid jslGetTokenString 'void (char *, int)'
| |-ParmVarDecl 0x12c9280d8 <col:24, col:30> col:30 used str 'char *'
| |-ParmVarDecl 0x12c928170 <col:35, col:42> col:42 referenced invalid len 'int'
| `-CompoundStmt 0x12c942978 <col:47, line:11:1>
|   `-IfStmt 0x12c942948 <line:2:3, line:10:39> has_else
|     |-BinaryOperator 0x12c928448 <line:2:7, col:18> 'int' contains-errors '=='
|     | |-CXXDependentScopeMemberExpr 0x12c9283e0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->tk
|     | | `-RecoveryExpr 0x12c9283c0 <col:7> '<dependent type>' contains-errors lvalue
|     | `-RecoveryExpr 0x12c928428 <col:18> '<dependent type>' contains-errors lvalue
|     |-CompoundStmt 0x12c9421a0 <col:26, line:5:3>
|     | |-CallExpr 0x12c941c68 <line:3:5, col:28> '<dependent type>' contains-errors
|     | | |-DeclRefExpr 0x12c941b60 <col:5> 'char *(char *, const char *, unsigned long)' Function 0x12c941910 'strncpy' 'char *(char *, const char *, unsigned long)'
|     | | |-DeclRefExpr 0x12c941b80 <col:13> 'char *' lvalue ParmVar 0x12c9280d8 'str' 'char *'
|     | | |-StringLiteral 0x12c941be0 <col:18> 'char[4]' lvalue "STR"
|     | | `-RecoveryExpr 0x12c941c00 <col:25> '<dependent type>' contains-errors lvalue
|     | `-CallExpr 0x12c942168 <line:4:5, col:49> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x12c941ef0 <col:5> 'char *(char *, const char *, unsigned long)' Function 0x12c941ca0 'strncat' 'char *(char *, const char *, unsigned long)'
|     |   |-DeclRefExpr 0x12c941f10 <col:13> 'char *' lvalue ParmVar 0x12c9280d8 'str' 'char *'
|     |   |-CallExpr 0x12c9420f8 <col:18, col:43> 'int'
|     |   | `-ImplicitCastExpr 0x12c9420e0 <col:18> 'int (*)()' <FunctionToPointerDecay>
|     |   |   `-DeclRefExpr 0x12c942090 <col:18> 'int ()' Function 0x12c941fd8 'jslGetTokenValueAsString' 'int ()'
|     |   `-RecoveryExpr 0x12c942118 <col:46> '<dependent type>' contains-errors lvalue
|     `-IfStmt 0x12c942918 <line:5:10, line:10:39> has_else
|       |-BinaryOperator 0x12c942300 <line:5:14, col:25> 'int' contains-errors '=='
|       | |-CXXDependentScopeMemberExpr 0x12c942298 <col:14, col:19> '<dependent type>' contains-errors lvalue ->tk
|       | | `-RecoveryExpr 0x12c942278 <col:14> '<dependent type>' contains-errors lvalue
|       | `-RecoveryExpr 0x12c9422e0 <col:25> '<dependent type>' contains-errors lvalue
|       |-CompoundStmt 0x12c942640 <col:34, line:9:3>
|       | |-CallExpr 0x12c9423e8 <line:6:5, col:28> '<dependent type>' contains-errors
|       | | |-DeclRefExpr 0x12c942320 <col:5> 'char *(char *, const char *, unsigned long)' Function 0x12c941910 'strncpy' 'char *(char *, const char *, unsigned long)'
|       | | |-DeclRefExpr 0x12c942340 <col:13> 'char *' lvalue ParmVar 0x12c9280d8 'str' 'char *'
|       | | |-StringLiteral 0x12c942360 <col:18> 'char[4]' lvalue "STR"
|       | | `-RecoveryExpr 0x12c942380 <col:25> '<dependent type>' contains-errors lvalue
|       | |-CallExpr 0x12c942508 <line:7:5, col:49> '<dependent type>' contains-errors
|       | | |-DeclRefExpr 0x12c942420 <col:5> 'char *(char *, const char *, unsigned long)' Function 0x12c941ca0 'strncat' 'char *(char *, const char *, unsigned long)'
|       | | |-DeclRefExpr 0x12c942440 <col:13> 'char *' lvalue ParmVar 0x12c9280d8 'str' 'char *'
|       | | |-CallExpr 0x12c942498 <col:18, col:43> 'int'
|       | | | `-ImplicitCastExpr 0x12c942480 <col:18> 'int (*)()' <FunctionToPointerDecay>
|       | | |   `-DeclRefExpr 0x12c942460 <col:18> 'int ()' Function 0x12c941fd8 'jslGetTokenValueAsString' 'int ()'
|       | | `-RecoveryExpr 0x12c9424b8 <col:46> '<dependent type>' contains-errors lvalue
|       | `-CallExpr 0x12c942608 <line:8:5, col:28> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x12c942540 <col:5> 'char *(char *, const char *, unsigned long)' Function 0x12c941ca0 'strncat' 'char *(char *, const char *, unsigned long)'
|       |   |-DeclRefExpr 0x12c942560 <col:13> 'char *' lvalue ParmVar 0x12c9280d8 'str' 'char *'
|       |   |-StringLiteral 0x12c942580 <col:18> 'char[4]' lvalue "STR"
|       |   `-RecoveryExpr 0x12c9425a0 <col:25> '<dependent type>' contains-errors lvalue
|       `-CallExpr 0x12c9428e0 <line:10:5, col:39> '<dependent type>' contains-errors
|         |-DeclRefExpr 0x12c942748 <col:5> 'int ()' Function 0x12c942690 'jslTokenAsString' 'int ()'
|         |-CXXDependentScopeMemberExpr 0x12c942898 <col:22, col:27> '<dependent type>' contains-errors lvalue ->tk
|         | `-RecoveryExpr 0x12c942878 <col:22> '<dependent type>' contains-errors lvalue
|         |-DeclRefExpr 0x12c9427c8 <col:31> 'char *' lvalue ParmVar 0x12c9280d8 'str' 'char *'
|         `-RecoveryExpr 0x12c942800 <col:36> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x12c941910 <line:3:5> col:5 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x12c941a10 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12c941a78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12c941ae0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12c9419b8 <<invalid sloc>> Implicit 886
`-FunctionDecl 0x12c941ca0 <line:4:5> col:5 implicit used strncat 'char *(char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x12c941da0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x12c941e08 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12c941e70 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12c941d48 <<invalid sloc>> Implicit 890
