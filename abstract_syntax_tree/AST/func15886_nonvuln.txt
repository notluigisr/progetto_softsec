TranslationUnitDecl 0x152055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1520564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152055bd0 '__int128'
|-TypedefDecl 0x152056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152055bf0 'unsigned __int128'
|-TypedefDecl 0x152126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x152126800 'struct __NSConstantString_tag'
|   `-Record 0x152056580 '__NSConstantString_tag'
|-TypedefDecl 0x152126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152055d90 '__SVInt8_t'
|-TypedefDecl 0x152126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152055db0 '__SVInt16_t'
|-TypedefDecl 0x152126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152055dd0 '__SVInt32_t'
|-TypedefDecl 0x152126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152055df0 '__SVInt64_t'
|-TypedefDecl 0x152126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152055e10 '__SVUint8_t'
|-TypedefDecl 0x152126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152055e30 '__SVUint16_t'
|-TypedefDecl 0x152126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152055e50 '__SVUint32_t'
|-TypedefDecl 0x152126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152055e70 '__SVUint64_t'
|-TypedefDecl 0x152126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152055e90 '__SVFloat16_t'
|-TypedefDecl 0x152126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152055eb0 '__SVFloat32_t'
|-TypedefDecl 0x152126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152055ed0 '__SVFloat64_t'
|-TypedefDecl 0x152126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x152126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x152126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x152127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1521270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x152127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x152127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1521271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x152127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1521272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x152127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x152127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1521273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x152127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1521274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1520560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x152127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1520560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x152127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1520560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1521275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x152127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1521276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x152127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x152127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x152128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1520561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x152128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1520561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1521280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1520561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x152128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1521281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152056230 '__clang_svint16x4_t'
|-TypedefDecl 0x152128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152056250 '__clang_svint32x4_t'
|-TypedefDecl 0x152128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1521282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x152128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1520562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1521283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1520562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x152128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1520562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x152128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1521284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x152128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1521285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x152128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152056390 '__SVBool_t'
|-TypedefDecl 0x152128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1520563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1521286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1520563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x152128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1520563f0 '__SVCount_t'
|-TypedefDecl 0x1521287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1521287b0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-TypedefDecl 0x152128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1521287b0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
`-FunctionDecl 0x152128c30 <dataset_diviso_filec/func15886_nonvuln.c:1:1, line:58:1> line:1:13 invalid put_cursor 'void (int *, int, int *, int, int)' static
  |-ParmVarDecl 0x152128928 <col:24, col:33> col:33 referenced invalid dst 'int *'
  |-ParmVarDecl 0x1521289a8 <col:38, col:42> col:42 used stride 'int'
  |-ParmVarDecl 0x152128a28 <col:50, col:63> col:63 invalid c 'int *'
  |-ParmVarDecl 0x152128aa8 <col:66, col:70> col:70 dx 'int'
  |-ParmVarDecl 0x152128b28 <col:74, col:78> col:78 dy 'int'
  `-CompoundStmt 0x152808bf8 <line:2:1, line:58:1>
    |-DeclStmt 0x152128e18 <line:3:5, col:13>
    | |-VarDecl 0x152128d18 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x152128d98 <col:5, col:12> col:12 used j 'int'
    |-DeclStmt 0x152142090 <line:4:5, col:19>
    | |-VarDecl 0x152128e48 <col:5, col:9> col:9 used w 'int'
    | |-VarDecl 0x152128ec8 <col:5, col:12> col:12 used h 'int'
    | |-VarDecl 0x152128f48 <col:5, col:15> col:15 used x 'int'
    | `-VarDecl 0x152142000 <col:5, col:18> col:18 used y 'int'
    |-BinaryOperator 0x152142130 <line:5:5, col:12> 'int' contains-errors '='
    | |-DeclRefExpr 0x1521420a8 <col:5> 'int' lvalue Var 0x152128e48 'w' 'int'
    | `-CXXDependentScopeMemberExpr 0x1521420e8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->cur_w
    |   `-RecoveryExpr 0x1521420c8 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1521423f8 <line:6:5, line:7:27>
    | |-BinaryOperator 0x1521422a8 <line:6:9, col:34> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x152142170 <col:9, col:12> '<dependent type>' contains-errors lvalue ->width
    | | | `-RecoveryExpr 0x152142150 <col:9> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x152142288 <col:20, col:34> '<dependent type>' contains-errors '+'
    | |   |-CXXDependentScopeMemberExpr 0x1521421d8 <col:20, col:23> '<dependent type>' contains-errors lvalue ->cur_x
    | |   | `-RecoveryExpr 0x1521421b8 <col:20> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x152142240 <col:31, col:34> '<dependent type>' contains-errors lvalue ->cur_w
    | |     `-RecoveryExpr 0x152142220 <col:31> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x1521423d8 <line:7:9, col:27> 'int' contains-errors '='
    |   |-DeclRefExpr 0x1521422c8 <col:9> 'int' lvalue Var 0x152128e48 'w' 'int'
    |   `-BinaryOperator 0x1521423b8 <col:13, col:27> '<dependent type>' contains-errors '-'
    |     |-CXXDependentScopeMemberExpr 0x152142308 <col:13, col:16> '<dependent type>' contains-errors lvalue ->width
    |     | `-RecoveryExpr 0x1521422e8 <col:13> '<dependent type>' contains-errors lvalue
    |     `-CXXDependentScopeMemberExpr 0x152142370 <col:24, col:27> '<dependent type>' contains-errors lvalue ->cur_x
    |       `-RecoveryExpr 0x152142350 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1521424a0 <line:8:5, col:12> 'int' contains-errors '='
    | |-DeclRefExpr 0x152142418 <col:5> 'int' lvalue Var 0x152128ec8 'h' 'int'
    | `-CXXDependentScopeMemberExpr 0x152142458 <col:9, col:12> '<dependent type>' contains-errors lvalue ->cur_h
    |   `-RecoveryExpr 0x152142438 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x152142768 <line:9:5, line:10:28>
    | |-BinaryOperator 0x152142618 <line:9:9, col:35> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x1521424e0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->height
    | | | `-RecoveryExpr 0x1521424c0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1521425f8 <col:21, col:35> '<dependent type>' contains-errors '+'
    | |   |-CXXDependentScopeMemberExpr 0x152142548 <col:21, col:24> '<dependent type>' contains-errors lvalue ->cur_y
    | |   | `-RecoveryExpr 0x152142528 <col:21> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x1521425b0 <col:32, col:35> '<dependent type>' contains-errors lvalue ->cur_h
    | |     `-RecoveryExpr 0x152142590 <col:32> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x152142748 <line:10:9, col:28> 'int' contains-errors '='
    |   |-DeclRefExpr 0x152142638 <col:9> 'int' lvalue Var 0x152128ec8 'h' 'int'
    |   `-BinaryOperator 0x152142728 <col:13, col:28> '<dependent type>' contains-errors '-'
    |     |-CXXDependentScopeMemberExpr 0x152142678 <col:13, col:16> '<dependent type>' contains-errors lvalue ->height
    |     | `-RecoveryExpr 0x152142658 <col:13> '<dependent type>' contains-errors lvalue
    |     `-CXXDependentScopeMemberExpr 0x1521426e0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->cur_y
    |       `-RecoveryExpr 0x1521426c0 <col:25> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x152142810 <line:11:5, col:12> 'int' contains-errors '='
    | |-DeclRefExpr 0x152142788 <col:5> 'int' lvalue Var 0x152128f48 'x' 'int'
    | `-CXXDependentScopeMemberExpr 0x1521427c8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->cur_x
    |   `-RecoveryExpr 0x1521427a8 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1521428b8 <line:12:5, col:12> 'int' contains-errors '='
    | |-DeclRefExpr 0x152142830 <col:5> 'int' lvalue Var 0x152142000 'y' 'int'
    | `-CXXDependentScopeMemberExpr 0x152142870 <col:9, col:12> '<dependent type>' contains-errors lvalue ->cur_y
    |   `-RecoveryExpr 0x152142850 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x152142a58 <line:13:5, line:16:5>
    | |-BinaryOperator 0x152142930 <line:13:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x152142918 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1521428d8 <col:9> 'int' lvalue Var 0x152128f48 'x' 'int'
    | | `-IntegerLiteral 0x1521428f8 <col:13> 'int' 0
    | `-CompoundStmt 0x152142a38 <col:16, line:16:5>
    |   |-CompoundAssignOperator 0x1521429a8 <line:14:9, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x152142950 <col:9> 'int' lvalue Var 0x152128e48 'w' 'int'
    |   | `-ImplicitCastExpr 0x152142990 <col:14> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x152142970 <col:14> 'int' lvalue Var 0x152128f48 'x' 'int'
    |   `-BinaryOperator 0x152142a18 <line:15:9, col:14> 'int' '='
    |     |-DeclRefExpr 0x1521429d8 <col:9> 'int' lvalue Var 0x152128f48 'x' 'int'
    |     `-IntegerLiteral 0x1521429f8 <col:14> 'int' 0
    |-IfStmt 0x152142bf8 <line:17:5, line:20:5>
    | |-BinaryOperator 0x152142ad0 <line:17:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x152142ab8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x152142a78 <col:9> 'int' lvalue Var 0x152142000 'y' 'int'
    | | `-IntegerLiteral 0x152142a98 <col:13> 'int' 0
    | `-CompoundStmt 0x152142bd8 <col:16, line:20:5>
    |   |-CompoundAssignOperator 0x152142b48 <line:18:9, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x152142af0 <col:9> 'int' lvalue Var 0x152128ec8 'h' 'int'
    |   | `-ImplicitCastExpr 0x152142b30 <col:14> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x152142b10 <col:14> 'int' lvalue Var 0x152142000 'y' 'int'
    |   `-BinaryOperator 0x152142bb8 <line:19:9, col:14> 'int' '='
    |     |-DeclRefExpr 0x152142b78 <col:9> 'int' lvalue Var 0x152142000 'y' 'int'
    |     `-IntegerLiteral 0x152142b98 <col:14> 'int' 0
    |-IfStmt 0x152142d78 <line:22:5, line:23:9>
    | |-BinaryOperator 0x152142d48 <line:22:9, col:26> 'int' '||'
    | | |-ParenExpr 0x152142c90 <col:9, col:15> 'int'
    | | | `-BinaryOperator 0x152142c70 <col:10, col:14> 'int' '<'
    | | |   |-ImplicitCastExpr 0x152142c58 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x152142c18 <col:10> 'int' lvalue Var 0x152128e48 'w' 'int'
    | | |   `-IntegerLiteral 0x152142c38 <col:14> 'int' 1
    | | `-ParenExpr 0x152142d28 <col:20, col:26> 'int'
    | |   `-BinaryOperator 0x152142d08 <col:21, col:25> 'int' '<'
    | |     |-ImplicitCastExpr 0x152142cf0 <col:21> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x152142cb0 <col:21> 'int' lvalue Var 0x152128ec8 'h' 'int'
    | |     `-IntegerLiteral 0x152142cd0 <col:25> 'int' 1
    | `-ReturnStmt 0x152142d68 <line:23:9>
    |-CompoundAssignOperator 0x152142f38 <line:24:5, col:30> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x152142db8 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x152142d98 <col:5> 'int *' lvalue ParmVar 0x152128928 'dst' 'int *'
    | `-BinaryOperator 0x152142f18 <col:12, col:30> '<dependent type>' contains-errors '+'
    |   |-BinaryOperator 0x152142e68 <col:12, col:19> '<dependent type>' contains-errors '*'
    |   | |-DeclRefExpr 0x152142de0 <col:12> 'int' lvalue Var 0x152128f48 'x' 'int'
    |   | `-CXXDependentScopeMemberExpr 0x152142e20 <col:16, col:19> '<dependent type>' contains-errors lvalue ->bpp2
    |   |   `-RecoveryExpr 0x152142e00 <col:16> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x152142ef8 <col:26, col:30> 'int' '*'
    |     |-ImplicitCastExpr 0x152142ec8 <col:26> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x152142e88 <col:26> 'int' lvalue Var 0x152142000 'y' 'int'
    |     `-ImplicitCastExpr 0x152142ee0 <col:30> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x152142ea8 <col:30> 'int' lvalue ParmVar 0x1521289a8 'stride' 'int'
    `-IfStmt 0x152808bc8 <line:26:5, line:57:5> has_else
      |-BinaryOperator 0x152143000 <line:26:9, col:20> 'int' contains-errors '=='
      | |-CXXDependentScopeMemberExpr 0x152142f88 <col:9, col:12> '<dependent type>' contains-errors lvalue ->bpp2
      | | `-RecoveryExpr 0x152142f68 <col:9> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x152142fd0 <col:20> 'int' 1
      |-CompoundStmt 0x152143730 <col:23, line:35:5>
      | `-ForStmt 0x1521436f8 <line:28:9, line:34:9>
      |   |-BinaryOperator 0x1521431b0 <line:28:14, col:18> 'int' '='
      |   | |-DeclRefExpr 0x152143170 <col:14> 'int' lvalue Var 0x152128d98 'j' 'int'
      |   | `-IntegerLiteral 0x152143190 <col:18> 'int' 0
      |   |-<<<NULL>>>
      |   |-BinaryOperator 0x152143240 <col:21, col:25> 'int' '<'
      |   | |-ImplicitCastExpr 0x152143210 <col:21> 'int' <LValueToRValue>
      |   | | `-DeclRefExpr 0x1521431d0 <col:21> 'int' lvalue Var 0x152128d98 'j' 'int'
      |   | `-ImplicitCastExpr 0x152143228 <col:25> 'int' <LValueToRValue>
      |   |   `-DeclRefExpr 0x1521431f0 <col:25> 'int' lvalue Var 0x152128ec8 'h' 'int'
      |   |-UnaryOperator 0x152143280 <col:28, col:29> 'int' postfix '++'
      |   | `-DeclRefExpr 0x152143260 <col:28> 'int' lvalue Var 0x152128d98 'j' 'int'
      |   `-CompoundStmt 0x1521436e0 <col:33, line:34:9>
      |     `-CompoundAssignOperator 0x1521436b0 <line:33:13, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      |       |-RecoveryExpr 0x152143668 <col:13> '<dependent type>' contains-errors lvalue
      |       | `-DeclRefExpr 0x152143648 <col:13> 'int *' lvalue ParmVar 0x152128928 'dst' 'int *'
      |       `-DeclRefExpr 0x152143690 <col:20> 'int' lvalue ParmVar 0x1521289a8 'stride' 'int'
      `-IfStmt 0x152808b98 <line:35:12, line:57:5> has_else
        |-BinaryOperator 0x1521437d0 <line:35:16, col:27> 'int' contains-errors '=='
        | |-CXXDependentScopeMemberExpr 0x152143768 <col:16, col:19> '<dependent type>' contains-errors lvalue ->bpp2
        | | `-RecoveryExpr 0x152143748 <col:16> '<dependent type>' contains-errors lvalue
        | `-IntegerLiteral 0x1521437b0 <col:27> 'int' 2
        |-CompoundStmt 0x152143e10 <col:30, line:46:5>
        | `-ForStmt 0x152143dd8 <line:38:9, line:45:9>
        |   |-BinaryOperator 0x152143898 <line:38:14, col:18> 'int' '='
        |   | |-DeclRefExpr 0x152143858 <col:14> 'int' lvalue Var 0x152128d98 'j' 'int'
        |   | `-IntegerLiteral 0x152143878 <col:18> 'int' 0
        |   |-<<<NULL>>>
        |   |-BinaryOperator 0x152143928 <col:21, col:25> 'int' '<'
        |   | |-ImplicitCastExpr 0x1521438f8 <col:21> 'int' <LValueToRValue>
        |   | | `-DeclRefExpr 0x1521438b8 <col:21> 'int' lvalue Var 0x152128d98 'j' 'int'
        |   | `-ImplicitCastExpr 0x152143910 <col:25> 'int' <LValueToRValue>
        |   |   `-DeclRefExpr 0x1521438d8 <col:25> 'int' lvalue Var 0x152128ec8 'h' 'int'
        |   |-UnaryOperator 0x152143968 <col:28, col:29> 'int' postfix '++'
        |   | `-DeclRefExpr 0x152143948 <col:28> 'int' lvalue Var 0x152128d98 'j' 'int'
        |   `-CompoundStmt 0x152143dc0 <col:33, line:45:9>
        |     `-CompoundAssignOperator 0x152143d90 <line:44:13, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |       |-RecoveryExpr 0x152143d48 <col:13> '<dependent type>' contains-errors lvalue
        |       | `-DeclRefExpr 0x152143d28 <col:13> 'int *' lvalue ParmVar 0x152128928 'dst' 'int *'
        |       `-DeclRefExpr 0x152143d70 <col:20> 'int' lvalue ParmVar 0x1521289a8 'stride' 'int'
        `-IfStmt 0x152808b78 <line:46:12, line:57:5>
          |-BinaryOperator 0x152143eb0 <line:46:16, col:27> 'int' contains-errors '=='
          | |-CXXDependentScopeMemberExpr 0x152143e48 <col:16, col:19> '<dependent type>' contains-errors lvalue ->bpp2
          | | `-RecoveryExpr 0x152143e28 <col:16> '<dependent type>' contains-errors lvalue
          | `-IntegerLiteral 0x152143e90 <col:27> 'int' 4
          `-CompoundStmt 0x152808b60 <col:30, line:57:5>
            `-ForStmt 0x152808b28 <line:49:9, line:56:9>
              |-BinaryOperator 0x152143f10 <line:49:14, col:18> 'int' '='
              | |-DeclRefExpr 0x152143ed0 <col:14> 'int' lvalue Var 0x152128d98 'j' 'int'
              | `-IntegerLiteral 0x152143ef0 <col:18> 'int' 0
              |-<<<NULL>>>
              |-BinaryOperator 0x152143fa0 <col:21, col:25> 'int' '<'
              | |-ImplicitCastExpr 0x152143f70 <col:21> 'int' <LValueToRValue>
              | | `-DeclRefExpr 0x152143f30 <col:21> 'int' lvalue Var 0x152128d98 'j' 'int'
              | `-ImplicitCastExpr 0x152143f88 <col:25> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x152143f50 <col:25> 'int' lvalue Var 0x152128ec8 'h' 'int'
              |-UnaryOperator 0x152143fe0 <col:28, col:29> 'int' postfix '++'
              | `-DeclRefExpr 0x152143fc0 <col:28> 'int' lvalue Var 0x152128d98 'j' 'int'
              `-CompoundStmt 0x152808b10 <col:33, line:56:9>
                `-CompoundAssignOperator 0x152808ae0 <line:55:13, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
                  |-RecoveryExpr 0x152808a98 <col:13> '<dependent type>' contains-errors lvalue
                  | `-DeclRefExpr 0x152808a78 <col:13> 'int *' lvalue ParmVar 0x152128928 'dst' 'int *'
                  `-DeclRefExpr 0x152808ac0 <col:20> 'int' lvalue ParmVar 0x1521289a8 'stride' 'int'
