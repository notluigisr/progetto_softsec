TranslationUnitDecl 0x128855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128855bd0 '__int128'
|-TypedefDecl 0x128856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128855bf0 'unsigned __int128'
|-TypedefDecl 0x128926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128926800 'struct __NSConstantString_tag'
|   `-Record 0x128856580 '__NSConstantString_tag'
|-TypedefDecl 0x128926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128855d90 '__SVInt8_t'
|-TypedefDecl 0x128926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128855db0 '__SVInt16_t'
|-TypedefDecl 0x128926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128855dd0 '__SVInt32_t'
|-TypedefDecl 0x128926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128855df0 '__SVInt64_t'
|-TypedefDecl 0x128926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128855e10 '__SVUint8_t'
|-TypedefDecl 0x128926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128855e30 '__SVUint16_t'
|-TypedefDecl 0x128926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128855e50 '__SVUint32_t'
|-TypedefDecl 0x128926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128855e70 '__SVUint64_t'
|-TypedefDecl 0x128926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128855e90 '__SVFloat16_t'
|-TypedefDecl 0x128926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128855eb0 '__SVFloat32_t'
|-TypedefDecl 0x128926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128855ed0 '__SVFloat64_t'
|-TypedefDecl 0x128926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x128926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1289270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1289271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1289272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1289273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1289274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1288560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1288560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1288560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1289275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1289276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1288561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1288561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1289280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1288561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1289281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128856230 '__clang_svint16x4_t'
|-TypedefDecl 0x128928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128856250 '__clang_svint32x4_t'
|-TypedefDecl 0x128928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1289282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1288562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1289283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1288562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1288562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1289284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1289285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128856390 '__SVBool_t'
|-TypedefDecl 0x128928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1288563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1289286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1288563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1288563f0 '__SVCount_t'
|-TypedefDecl 0x1289287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1289287b0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-TypedefDecl 0x128928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1289287b0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-FunctionDecl 0x128928ba0 <dataset_diviso_filec/func23344_nonvuln.c:1:1, line:74:1> line:1:13 invalid add_assoc_name_entry 'void (int *, char *, int *, int)' static
| |-ParmVarDecl 0x128928928 <col:34, col:41> col:41 referenced invalid val 'int *'
| |-ParmVarDecl 0x1289289a8 <col:46, col:53> col:53 used key 'char *'
| |-ParmVarDecl 0x128928a28 <col:58, col:70> col:70 invalid name 'int *'
| |-ParmVarDecl 0x128928aa8 <col:76, col:80> col:80 used shortname 'int'
| `-CompoundStmt 0x1289460f8 <line:2:1, line:74:1>
|   |-BinaryOperator 0x128928de0 <line:3:2, col:18> '<dependent type>' contains-errors ','
|   | |-BinaryOperator 0x128928d70 <col:2, col:8> '<dependent type>' contains-errors '*'
|   | | |-RecoveryExpr 0x128928c88 <col:2> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x128928c68 <col:2> 'int *' lvalue ParmVar 0x128928928 'val' 'int *'
|   | | `-RecoveryExpr 0x128928d50 <col:8> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x128928dc8 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   `-ImplicitCastExpr 0x128928db0 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x128928d90 <col:18> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1289420c8 <line:4:2, col:39>
|   | |-VarDecl 0x128928e18 <col:2, col:6> col:6 used i 'int'
|   | |-VarDecl 0x128928e98 <col:2, col:14> col:9 used j 'int' cinit
|   | | `-UnaryOperator 0x128928f20 <col:13, col:14> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x128928f00 <col:14> 'int' 1
|   | |-VarDecl 0x128928f50 <col:2, col:25> col:17 used last 'int' cinit
|   | | `-UnaryOperator 0x128928fd8 <col:24, col:25> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x128928fb8 <col:25> 'int' 1
|   | `-VarDecl 0x128942018 <col:2, col:38> col:28 used obj_cnt 'int' cinit
|   |   `-IntegerLiteral 0x128942080 <col:38> 'int' 0
|   |-DeclStmt 0x128942160 <line:5:2, col:13>
|   | `-VarDecl 0x1289420f8 <col:2, col:8> col:8 used sname 'char *'
|   |-DeclStmt 0x1289421f8 <line:6:2, col:9>
|   | `-VarDecl 0x128942190 <col:2, col:6> col:6 used nid 'int'
|   |-IfStmt 0x1289426e0 <line:11:2, line:16:2> has_else
|   | |-BinaryOperator 0x1289422e8 <line:11:6, col:13> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x128942270 <col:6> 'char *' lvalue ParmVar 0x1289289a8 'key' 'char *'
|   | | `-RecoveryExpr 0x1289422c8 <col:13> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x128942690 <col:19, line:14:2>
|   | | |-CallExpr 0x1289424e0 <line:12:3, col:24> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x128942460 <col:3> 'int ()' Function 0x1289423a8 'MAKE_STD_ZVAL' 'int ()'
|   | | | `-RecoveryExpr 0x1289424c0 <col:17> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x128942668 <line:13:3, col:21> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x1289425e8 <col:3> 'int ()' Function 0x128942530 'array_init' 'int ()'
|   | |   `-RecoveryExpr 0x128942648 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1289426d0 <line:14:9, line:16:2>
|   |-ForStmt 0x128945cc8 <line:18:2, line:70:2>
|   | |-BinaryOperator 0x128942750 <line:18:7, col:11> 'int' '='
|   | | |-DeclRefExpr 0x128942710 <col:7> 'int' lvalue Var 0x128928e18 'i' 'int'
|   | | `-IntegerLiteral 0x128942730 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1289428d8 <col:14, col:44> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x128942770 <col:14> 'int' lvalue Var 0x128928e18 'i' 'int'
|   | | `-CallExpr 0x1289428b0 <col:18, col:44> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x128942870 <col:18> 'int ()' Function 0x1289427b8 'X509_NAME_entry_count' 'int ()'
|   | |   `-RecoveryExpr 0x128942890 <col:40> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x128942918 <col:47, col:48> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1289428f8 <col:47> 'int' lvalue Var 0x128928e18 'i' 'int'
|   | `-CompoundStmt 0x128945c78 <col:52, line:70:2>
|   |   |-DeclStmt 0x1289429e0 <line:19:3, col:24>
|   |   | `-VarDecl 0x128942978 <col:3, col:18> col:18 used to_add 'unsigned char *'
|   |   |-DeclStmt 0x128942a78 <line:20:3, col:17>
|   |   | `-VarDecl 0x128942a10 <col:3, col:7> col:7 used to_add_len 'int'
|   |   |-BinaryOperator 0x128942e60 <line:26:3, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x128942e20 <col:3> 'int' lvalue Var 0x128942018 'obj_cnt' 'int'
|   |   | `-IntegerLiteral 0x128942e40 <col:13> 'int' 0
|   |   |-IfStmt 0x128943310 <line:28:3, line:32:3> has_else
|   |   | |-ImplicitCastExpr 0x128942ea0 <line:28:7> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x128942e80 <col:7> 'int' lvalue ParmVar 0x128928aa8 'shortname' 'int'
|   |   | |-CompoundStmt 0x1289430e8 <col:18, line:30:3>
|   |   | | `-BinaryOperator 0x1289430c8 <line:29:4, col:35> 'char *' '='
|   |   | |   |-DeclRefExpr 0x128942eb8 <col:4> 'char *' lvalue Var 0x1289420f8 'sname' 'char *'
|   |   | |   `-CStyleCastExpr 0x1289430a0 <col:12, col:35> 'char *' <IntegralToPointer>
|   |   | |     `-CallExpr 0x128943048 <col:21, col:35> 'int'
|   |   | |       |-ImplicitCastExpr 0x128943030 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x128942fb8 <col:21> 'int ()' Function 0x128942f00 'OBJ_nid2sn' 'int ()'
|   |   | |       `-ImplicitCastExpr 0x128943070 <col:32> 'int' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x128942fd8 <col:32> 'int' lvalue Var 0x128942190 'nid' 'int'
|   |   | `-CompoundStmt 0x1289432f8 <line:30:10, line:32:3>
|   |   |   `-BinaryOperator 0x1289432d8 <line:31:4, col:35> 'char *' '='
|   |   |     |-DeclRefExpr 0x128943100 <col:4> 'char *' lvalue Var 0x1289420f8 'sname' 'char *'
|   |   |     `-CStyleCastExpr 0x1289432b0 <col:12, col:35> 'char *' <IntegralToPointer>
|   |   |       `-CallExpr 0x128943258 <col:21, col:35> 'int'
|   |   |         |-ImplicitCastExpr 0x128943240 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |         | `-DeclRefExpr 0x128943200 <col:21> 'int ()' Function 0x128943148 'OBJ_nid2ln' 'int ()'
|   |   |         `-ImplicitCastExpr 0x128943280 <col:32> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x128943220 <col:32> 'int' lvalue Var 0x128942190 'nid' 'int'
|   |   |-BinaryOperator 0x1289433d8 <line:37:3, col:11> 'int' '='
|   |   | |-DeclRefExpr 0x128943380 <col:3> 'int' lvalue Var 0x128928f50 'last' 'int'
|   |   | `-UnaryOperator 0x1289433c0 <col:10, col:11> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x1289433a0 <col:11> 'int' 1
|   |   |-ForStmt 0x128945200 <line:38:3, line:58:3>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x1289451e0 <line:38:12, line:58:3>
|   |   |   |-IfStmt 0x128945138 <line:40:4, line:56:4> has_else
|   |   |   | |-BinaryOperator 0x1289435b0 <line:40:8, col:12> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x128943598 <col:8> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x128943558 <col:8> 'int' lvalue Var 0x128928e98 'j' 'int'
|   |   |   | | `-IntegerLiteral 0x128943578 <col:12> 'int' 0
|   |   |   | |-CompoundStmt 0x128943688 <col:15, line:42:4>
|   |   |   | | `-IfStmt 0x128943668 <line:41:5, col:21>
|   |   |   | |   |-BinaryOperator 0x128943640 <col:9, col:18> 'int' '!='
|   |   |   | |   | |-ImplicitCastExpr 0x128943628 <col:9> 'int' <LValueToRValue>
|   |   |   | |   | | `-DeclRefExpr 0x1289435d0 <col:9> 'int' lvalue Var 0x128928f50 'last' 'int'
|   |   |   | |   | `-UnaryOperator 0x128943610 <col:17, col:18> 'int' prefix '-'
|   |   |   | |   |   `-IntegerLiteral 0x1289435f0 <col:18> 'int' 1
|   |   |   | |   `-BreakStmt 0x128943660 <col:21>
|   |   |   | `-CompoundStmt 0x128945118 <line:42:11, line:56:4>
|   |   |   |   |-UnaryOperator 0x1289436c0 <line:43:5, col:12> 'int' postfix '++'
|   |   |   |   | `-DeclRefExpr 0x1289436a0 <col:5> 'int' lvalue Var 0x128942018 'obj_cnt' 'int'
|   |   |   |   `-IfStmt 0x1289450e8 <line:46:5, line:55:5> has_else
|   |   |   |     |-RecoveryExpr 0x128943968 <line:46:9, col:34> '_Bool' contains-errors
|   |   |   |     |-CompoundStmt 0x128943d90 <col:53, line:51:5>
|   |   |   |     | `-IfStmt 0x128943d70 <line:48:6, line:50:6>
|   |   |   |     |   |-BinaryOperator 0x128943b88 <line:48:10, col:25> 'int' '!='
|   |   |   |     |   | |-ImplicitCastExpr 0x128943b70 <col:10> 'int' <LValueToRValue>
|   |   |   |     |   | | `-DeclRefExpr 0x128943b18 <col:10> 'int' lvalue Var 0x128942a10 'to_add_len' 'int'
|   |   |   |     |   | `-UnaryOperator 0x128943b58 <col:24, col:25> 'int' prefix '-'
|   |   |   |     |   |   `-IntegerLiteral 0x128943b38 <col:25> 'int' 1
|   |   |   |     |   `-CompoundStmt 0x128943d60 <col:28, line:50:6>
|   |   |   |     `-CompoundStmt 0x1289450d8 <line:51:12, line:55:5>
|   |   |   `-BinaryOperator 0x1289451c0 <line:57:4, col:11> 'int' '='
|   |   |     |-DeclRefExpr 0x128945168 <col:4> 'int' lvalue Var 0x128928f50 'last' 'int'
|   |   |     `-ImplicitCastExpr 0x1289451a8 <col:11> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x128945188 <col:11> 'int' lvalue Var 0x128928e98 'j' 'int'
|   |   |-BinaryOperator 0x128945290 <line:59:3, col:7> 'int' '='
|   |   | |-DeclRefExpr 0x128945238 <col:3> 'int' lvalue Var 0x128928e18 'i' 'int'
|   |   | `-ImplicitCastExpr 0x128945278 <col:7> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x128945258 <col:7> 'int' lvalue Var 0x128928f50 'last' 'int'
|   |   `-IfStmt 0x128945c48 <line:61:3, line:69:3> has_else
|   |     |-BinaryOperator 0x128945308 <line:61:7, col:17> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1289452f0 <col:7> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1289452b0 <col:7> 'int' lvalue Var 0x128942018 'obj_cnt' 'int'
|   |     | `-IntegerLiteral 0x1289452d0 <col:17> 'int' 1
|   |     |-CompoundStmt 0x128945748 <col:20, line:63:3>
|   |     `-CompoundStmt 0x128945c30 <col:10, line:69:3>
|   |       `-IfStmt 0x128945c10 <line:66:4, line:68:4>
|   |         |-RecoveryExpr 0x128945a08 <line:66:8, col:40> '_Bool' contains-errors
|   |         `-CompoundStmt 0x128945c00 <col:43, line:68:4>
|   `-IfStmt 0x1289460d8 <line:71:2, line:73:2>
|     |-RecoveryExpr 0x128945d20 <line:71:6, col:13> '_Bool' contains-errors
|     `-CompoundStmt 0x1289460c8 <col:19, line:73:2>
`-FunctionDecl 0x128945488 <line:62:38> col:38 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x128945588 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x128945530 <<invalid sloc>> Implicit 902
