TranslationUnitDecl 0x153055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1530564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x153055bd0 '__int128'
|-TypedefDecl 0x153056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x153055bf0 'unsigned __int128'
|-TypedefDecl 0x15380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15380bc00 'struct __NSConstantString_tag'
|   `-Record 0x153056580 '__NSConstantString_tag'
|-TypedefDecl 0x15380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x153055d90 '__SVInt8_t'
|-TypedefDecl 0x15380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x153055db0 '__SVInt16_t'
|-TypedefDecl 0x15380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x153055dd0 '__SVInt32_t'
|-TypedefDecl 0x15380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x153055df0 '__SVInt64_t'
|-TypedefDecl 0x15380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x153055e10 '__SVUint8_t'
|-TypedefDecl 0x15380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x153055e30 '__SVUint16_t'
|-TypedefDecl 0x15380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x153055e50 '__SVUint32_t'
|-TypedefDecl 0x15380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x153055e70 '__SVUint64_t'
|-TypedefDecl 0x15380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x153055e90 '__SVFloat16_t'
|-TypedefDecl 0x15380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x153055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x153055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x153055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x153055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x153055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x153055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x153055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x153055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x153055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x153055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x153055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x153056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x153056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x153056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x153056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x153056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1530560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1530560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1530560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x153056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x153056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x153056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x153056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x153056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1530561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1530561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1530561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x153056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x153056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x153056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x153056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x153056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1530562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1530562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1530562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x153056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x153056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x153056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x153056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x153056390 '__SVBool_t'
|-TypedefDecl 0x15380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1530563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1530563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1530563f0 '__SVCount_t'
|-TypedefDecl 0x15380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-TypedefDecl 0x15380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-FunctionDecl 0x15380de88 <dataset_diviso_filec/func6468_vuln.c:1:1, line:82:1> line:1:12 invalid date_from_ISO8601 'int (const char *, int *)' static
| |-ParmVarDecl 0x15380dcd8 <col:31, col:43> col:43 used text 'const char *'
| |-ParmVarDecl 0x15380dda8 <col:49, col:58> col:58 invalid value 'int *'
| `-CompoundStmt 0x1538313c0 <col:65, line:82:1>
|   |-DeclStmt 0x15382b728 <line:2:4, col:16>
|   | |-RecordDecl 0x15380df40 <col:4, col:11> col:11 struct tm
|   | `-VarDecl 0x15380e038 <col:4, col:14> col:14 referenced invalid tm 'struct tm'
|   |-DeclStmt 0x15382b7c0 <line:3:4, col:9>
|   | `-VarDecl 0x15382b758 <col:4, col:8> col:8 used n 'int'
|   |-DeclStmt 0x15382b858 <line:4:4, col:9>
|   | `-VarDecl 0x15382b7f0 <col:4, col:8> col:8 used i 'int'
|   |-DeclStmt 0x15382b978 <line:5:2, col:14>
|   | `-VarDecl 0x15382b910 <col:2, col:13> col:7 used buf 'char[18]'
|   |-IfStmt 0x15382c2a0 <line:7:2, line:17:2>
|   | |-CallExpr 0x15382bc68 <line:7:6, col:23> 'char *'
|   | | |-ImplicitCastExpr 0x15382bc50 <col:6> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x15382bbb0 <col:6> 'char *(const char *, int)' Function 0x15382b9d0 'strchr' 'char *(const char *, int)'
|   | | |-ImplicitCastExpr 0x15382bc98 <col:14> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15382bbd0 <col:14> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   | | `-CharacterLiteral 0x15382bbf0 <col:20> 'int' 45
|   | `-CompoundStmt 0x15382c278 <col:26, line:17:2>
|   |   |-DeclStmt 0x15382be78 <line:8:3, col:37>
|   |   | |-VarDecl 0x15382bcc8 <col:3, col:22> col:9 used p 'char *' cinit
|   |   | | `-CStyleCastExpr 0x15382bd80 <col:13, col:22> 'char *' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x15382bd68 <col:22> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   | |     `-DeclRefExpr 0x15382bd30 <col:22> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   | `-VarDecl 0x15382bdc0 <col:3, col:34> col:29 used p2 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x15382be48 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x15382be28 <col:34> 'char[18]' lvalue Var 0x15382b910 'buf' 'char[18]'
|   |   |-WhileStmt 0x15382c1c8 <line:9:3, line:15:3>
|   |   | |-BinaryOperator 0x15382bf48 <line:9:10, col:16> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x15382bf00 <col:10> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x15382be90 <col:10> 'char *' lvalue Var 0x15382bcc8 'p' 'char *'
|   |   | | `-ImplicitCastExpr 0x15382bf30 <col:15, col:16> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x15382bf18 <col:15, col:16> 'char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x15382bee8 <col:15, col:16> 'char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x15382bed0 <col:16> 'char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x15382beb0 <col:16> 'char *' lvalue Var 0x15382bcc8 'p' 'char *'
|   |   | `-CompoundStmt 0x15382c1a8 <col:19, line:15:3>
|   |   |   |-IfStmt 0x15382c150 <line:10:4, line:13:4>
|   |   |   | |-BinaryOperator 0x15382c000 <line:10:8, col:14> 'int' '!='
|   |   |   | | |-ImplicitCastExpr 0x15382bfe8 <col:8, col:9> 'int' <IntegralCast>
|   |   |   | | | `-ImplicitCastExpr 0x15382bfd0 <col:8, col:9> 'char' <LValueToRValue>
|   |   |   | | |   `-UnaryOperator 0x15382bfa0 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|   |   |   | | |     `-ImplicitCastExpr 0x15382bf88 <col:9> 'char *' <LValueToRValue>
|   |   |   | | |       `-DeclRefExpr 0x15382bf68 <col:9> 'char *' lvalue Var 0x15382bcc8 'p' 'char *'
|   |   |   | | `-CharacterLiteral 0x15382bfb8 <col:14> 'int' 45
|   |   |   | `-CompoundStmt 0x15382c130 <col:19, line:13:4>
|   |   |   |   |-BinaryOperator 0x15382c0d8 <line:11:5, col:12> 'char' '='
|   |   |   |   | |-UnaryOperator 0x15382c058 <col:5, col:6> 'char' lvalue prefix '*' cannot overflow
|   |   |   |   | | `-ImplicitCastExpr 0x15382c040 <col:6> 'char *' <LValueToRValue>
|   |   |   |   | |   `-DeclRefExpr 0x15382c020 <col:6> 'char *' lvalue Var 0x15382bdc0 'p2' 'char *'
|   |   |   |   | `-ImplicitCastExpr 0x15382c0c0 <col:11, col:12> 'char' <LValueToRValue>
|   |   |   |   |   `-UnaryOperator 0x15382c0a8 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
|   |   |   |   |     `-ImplicitCastExpr 0x15382c090 <col:12> 'char *' <LValueToRValue>
|   |   |   |   |       `-DeclRefExpr 0x15382c070 <col:12> 'char *' lvalue Var 0x15382bcc8 'p' 'char *'
|   |   |   |   `-UnaryOperator 0x15382c118 <line:12:5, col:7> 'char *' postfix '++'
|   |   |   |     `-DeclRefExpr 0x15382c0f8 <col:5> 'char *' lvalue Var 0x15382bdc0 'p2' 'char *'
|   |   |   `-UnaryOperator 0x15382c190 <line:14:4, col:5> 'char *' postfix '++'
|   |   |     `-DeclRefExpr 0x15382c170 <col:4> 'char *' lvalue Var 0x15382bcc8 'p' 'char *'
|   |   `-BinaryOperator 0x15382c258 <line:16:4, col:11> 'const char *' '='
|   |     |-DeclRefExpr 0x15382c1e8 <col:4> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |     `-ImplicitCastExpr 0x15382c240 <col:11> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x15382c228 <col:11> 'char *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x15382c208 <col:11> 'char[18]' lvalue Var 0x15382b910 'buf' 'char[18]'
|   |-BinaryOperator 0x15382c388 <line:20:4, col:19> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15382c308 <col:4, col:7> '<dependent type>' contains-errors lvalue .tm_isdst
|   | | `-RecoveryExpr 0x15382c2e0 <col:4> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15382c2c0 <col:4> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   | `-UnaryOperator 0x15382c370 <col:18, col:19> 'int' prefix '-'
|   |   `-IntegerLiteral 0x15382c350 <col:19> 'int' 1
|   |-IfStmt 0x15382e0f8 <line:22:4, line:24:4>
|   | |-BinaryOperator 0x15382e078 <line:22:7, col:22> 'int' '<'
|   | | |-CallExpr 0x15382e000 <col:7, col:18> 'unsigned long'
|   | | | |-ImplicitCastExpr 0x15382c5e0 <col:7> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x15382c558 <col:7> 'unsigned long (const char *)' Function 0x15382c3e8 'strlen' 'unsigned long (const char *)'
|   | | | `-ImplicitCastExpr 0x15382e028 <col:14> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x15382c578 <col:14> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   | | `-ImplicitCastExpr 0x15382e060 <col:22> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x15382e040 <col:22> 'int' 17
|   | `-CompoundStmt 0x15382e0e0 <col:26, line:24:4>
|   |   `-ReturnStmt 0x15382e0d0 <line:23:7, col:15>
|   |     `-UnaryOperator 0x15382e0b8 <col:14, col:15> 'int' prefix '-'
|   |       `-IntegerLiteral 0x15382e098 <col:15> 'int' 1
|   |-BinaryOperator 0x15382e158 <line:28:4, col:8> 'int' '='
|   | |-DeclRefExpr 0x15382e118 <col:4> 'int' lvalue Var 0x15382b758 'n' 'int'
|   | `-IntegerLiteral 0x15382e138 <col:8> 'int' 1000
|   |-BinaryOperator 0x15382e228 <line:29:4, col:17> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15382e1c0 <col:4, col:7> '<dependent type>' contains-errors lvalue .tm_year
|   | | `-RecoveryExpr 0x15382e198 <col:4> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15382e178 <col:4> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   | `-IntegerLiteral 0x15382e208 <col:17> 'int' 0
|   |-ForStmt 0x15382e8c8 <line:30:4, line:34:4>
|   | |-BinaryOperator 0x15382e288 <line:30:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x15382e248 <col:8> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x15382e268 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15382e300 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x15382e2e8 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15382e2a8 <col:15> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x15382e2c8 <col:19> 'int' 4
|   | |-UnaryOperator 0x15382e340 <col:22, col:23> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15382e320 <col:22> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | `-CompoundStmt 0x15382e8a0 <col:27, line:34:4>
|   |   |-CallExpr 0x15382e5a8 <line:31:7, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x15382e590 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15382e4b0 <col:7> 'int ()' Function 0x15382e3f8 'XMLRPC_IS_NUMBER' 'int ()'
|   |   | `-ImplicitCastExpr 0x15382e5e8 <col:24, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x15382e5d0 <col:24, col:30> 'char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x15382e540 <col:24, col:30> 'const char' lvalue
|   |   |       |-ImplicitCastExpr 0x15382e510 <col:24> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x15382e4d0 <col:24> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |       `-ImplicitCastExpr 0x15382e528 <col:29> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x15382e4f0 <col:29> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |-CompoundAssignOperator 0x15382e800 <line:32:7, col:35> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x15382e648 <col:7, col:10> '<dependent type>' contains-errors lvalue .tm_year
|   |   | | `-RecoveryExpr 0x15382e620 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x15382e600 <col:7> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   |   | `-BinaryOperator 0x15382e7e0 <col:21, col:35> 'int' '*'
|   |   |   |-ParenExpr 0x15382e788 <col:21, col:33> 'int'
|   |   |   | `-BinaryOperator 0x15382e768 <col:22, col:30> 'int' '-'
|   |   |   |   |-ImplicitCastExpr 0x15382e750 <col:22, col:28> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x15382e738 <col:22, col:28> 'char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x15382e700 <col:22, col:28> 'const char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x15382e6d0 <col:22> 'const char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x15382e690 <col:22> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |   |   |     `-ImplicitCastExpr 0x15382e6e8 <col:27> 'int' <LValueToRValue>
|   |   |   |   |       `-DeclRefExpr 0x15382e6b0 <col:27> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |   |   `-CharacterLiteral 0x15382e720 <col:30> 'int' 48
|   |   |   `-ImplicitCastExpr 0x15382e7c8 <col:35> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15382e7a8 <col:35> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |   `-CompoundAssignOperator 0x15382e870 <line:33:7, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x15382e830 <col:7> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |     `-IntegerLiteral 0x15382e850 <col:12> 'int' 10
|   |-BinaryOperator 0x15382e940 <line:35:4, col:8> 'int' '='
|   | |-DeclRefExpr 0x15382e900 <col:4> 'int' lvalue Var 0x15382b758 'n' 'int'
|   | `-IntegerLiteral 0x15382e920 <col:8> 'int' 10
|   |-BinaryOperator 0x15382ea10 <line:36:4, col:16> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15382e9a8 <col:4, col:7> '<dependent type>' contains-errors lvalue .tm_mon
|   | | `-RecoveryExpr 0x15382e980 <col:4> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15382e960 <col:4> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   | `-IntegerLiteral 0x15382e9f0 <col:16> 'int' 0
|   |-ForStmt 0x15382ef68 <line:37:4, line:41:4>
|   | |-BinaryOperator 0x15382ea70 <line:37:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x15382ea30 <col:8> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x15382ea50 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15382eae8 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x15382ead0 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15382ea90 <col:15> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x15382eab0 <col:19> 'int' 2
|   | |-UnaryOperator 0x15382eb28 <col:22, col:23> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15382eb08 <col:22> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | `-CompoundStmt 0x15382ef40 <col:27, line:41:4>
|   |   |-CallExpr 0x15382ec08 <line:38:7, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x15382ebf0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15382eb40 <col:7> 'int ()' Function 0x15382e3f8 'XMLRPC_IS_NUMBER' 'int ()'
|   |   | `-ImplicitCastExpr 0x15382ec48 <col:24, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x15382ec30 <col:24, col:30> 'char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x15382ebd0 <col:24, col:30> 'const char' lvalue
|   |   |       |-ImplicitCastExpr 0x15382eba0 <col:24> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x15382eb60 <col:24> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |       `-ImplicitCastExpr 0x15382ebb8 <col:29> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x15382eb80 <col:29> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |-CompoundAssignOperator 0x15382eea0 <line:39:7, col:36> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x15382eca8 <col:7, col:10> '<dependent type>' contains-errors lvalue .tm_mon
|   |   | | `-RecoveryExpr 0x15382ec80 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x15382ec60 <col:7> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   |   | `-BinaryOperator 0x15382ee80 <col:20, col:36> 'int' '*'
|   |   |   |-ParenExpr 0x15382ee28 <col:20, col:34> 'int'
|   |   |   | `-BinaryOperator 0x15382ee08 <col:21, col:31> 'int' '-'
|   |   |   |   |-ImplicitCastExpr 0x15382edf0 <col:21, col:29> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x15382edd8 <col:21, col:29> 'char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x15382eda0 <col:21, col:29> 'const char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x15382ed88 <col:21> 'const char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x15382ecf0 <col:21> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |   |   |     `-BinaryOperator 0x15382ed68 <col:26, col:28> 'int' '+'
|   |   |   |   |       |-ImplicitCastExpr 0x15382ed50 <col:26> 'int' <LValueToRValue>
|   |   |   |   |       | `-DeclRefExpr 0x15382ed10 <col:26> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |   |   |       `-IntegerLiteral 0x15382ed30 <col:28> 'int' 4
|   |   |   |   `-CharacterLiteral 0x15382edc0 <col:31> 'int' 48
|   |   |   `-ImplicitCastExpr 0x15382ee68 <col:36> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15382ee48 <col:36> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |   `-CompoundAssignOperator 0x15382ef10 <line:40:7, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x15382eed0 <col:7> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |     `-IntegerLiteral 0x15382eef0 <col:12> 'int' 10
|   |-UnaryOperator 0x15382f648 <line:42:4, col:14> '<dependent type>' contains-errors postfix '--' cannot overflow
|   | `-CXXDependentScopeMemberExpr 0x15382f600 <col:4, col:7> '<dependent type>' contains-errors lvalue .tm_mon
|   |   `-RecoveryExpr 0x15382efc0 <col:4> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15382efa0 <col:4> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   |-BinaryOperator 0x15382f6a0 <line:44:4, col:8> 'int' '='
|   | |-DeclRefExpr 0x15382f660 <col:4> 'int' lvalue Var 0x15382b758 'n' 'int'
|   | `-IntegerLiteral 0x15382f680 <col:8> 'int' 10
|   |-BinaryOperator 0x15382f770 <line:45:4, col:17> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15382f708 <col:4, col:7> '<dependent type>' contains-errors lvalue .tm_mday
|   | | `-RecoveryExpr 0x15382f6e0 <col:4> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15382f6c0 <col:4> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   | `-IntegerLiteral 0x15382f750 <col:17> 'int' 0
|   |-ForStmt 0x15382fcc8 <line:46:4, line:50:4>
|   | |-BinaryOperator 0x15382f7d0 <line:46:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x15382f790 <col:8> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x15382f7b0 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15382f848 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x15382f830 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15382f7f0 <col:15> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x15382f810 <col:19> 'int' 2
|   | |-UnaryOperator 0x15382f888 <col:22, col:23> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15382f868 <col:22> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | `-CompoundStmt 0x15382fca0 <col:27, line:50:4>
|   |   |-CallExpr 0x15382f968 <line:47:7, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x15382f950 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15382f8a0 <col:7> 'int ()' Function 0x15382e3f8 'XMLRPC_IS_NUMBER' 'int ()'
|   |   | `-ImplicitCastExpr 0x15382f9a8 <col:24, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x15382f990 <col:24, col:30> 'char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x15382f930 <col:24, col:30> 'const char' lvalue
|   |   |       |-ImplicitCastExpr 0x15382f900 <col:24> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x15382f8c0 <col:24> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |       `-ImplicitCastExpr 0x15382f918 <col:29> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x15382f8e0 <col:29> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |-CompoundAssignOperator 0x15382fc00 <line:48:7, col:37> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x15382fa08 <col:7, col:10> '<dependent type>' contains-errors lvalue .tm_mday
|   |   | | `-RecoveryExpr 0x15382f9e0 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x15382f9c0 <col:7> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   |   | `-BinaryOperator 0x15382fbe0 <col:21, col:37> 'int' '*'
|   |   |   |-ParenExpr 0x15382fb88 <col:21, col:35> 'int'
|   |   |   | `-BinaryOperator 0x15382fb68 <col:22, col:32> 'int' '-'
|   |   |   |   |-ImplicitCastExpr 0x15382fb50 <col:22, col:30> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x15382fb38 <col:22, col:30> 'char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x15382fb00 <col:22, col:30> 'const char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x15382fae8 <col:22> 'const char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x15382fa50 <col:22> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |   |   |     `-BinaryOperator 0x15382fac8 <col:27, col:29> 'int' '+'
|   |   |   |   |       |-ImplicitCastExpr 0x15382fab0 <col:27> 'int' <LValueToRValue>
|   |   |   |   |       | `-DeclRefExpr 0x15382fa70 <col:27> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |   |   |       `-IntegerLiteral 0x15382fa90 <col:29> 'int' 6
|   |   |   |   `-CharacterLiteral 0x15382fb20 <col:32> 'int' 48
|   |   |   `-ImplicitCastExpr 0x15382fbc8 <col:37> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15382fba8 <col:37> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |   `-CompoundAssignOperator 0x15382fc70 <line:49:7, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x15382fc30 <col:7> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |     `-IntegerLiteral 0x15382fc50 <col:12> 'int' 10
|   |-BinaryOperator 0x15382fd40 <line:52:4, col:8> 'int' '='
|   | |-DeclRefExpr 0x15382fd00 <col:4> 'int' lvalue Var 0x15382b758 'n' 'int'
|   | `-IntegerLiteral 0x15382fd20 <col:8> 'int' 10
|   |-BinaryOperator 0x15382fe10 <line:53:4, col:17> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15382fda8 <col:4, col:7> '<dependent type>' contains-errors lvalue .tm_hour
|   | | `-RecoveryExpr 0x15382fd80 <col:4> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15382fd60 <col:4> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   | `-IntegerLiteral 0x15382fdf0 <col:17> 'int' 0
|   |-ForStmt 0x153830368 <line:54:4, line:58:4>
|   | |-BinaryOperator 0x15382fe70 <line:54:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x15382fe30 <col:8> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x15382fe50 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15382fee8 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x15382fed0 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15382fe90 <col:15> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x15382feb0 <col:19> 'int' 2
|   | |-UnaryOperator 0x15382ff28 <col:22, col:23> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15382ff08 <col:22> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | `-CompoundStmt 0x153830340 <col:27, line:58:4>
|   |   |-CallExpr 0x153830008 <line:55:7, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x15382fff0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15382ff40 <col:7> 'int ()' Function 0x15382e3f8 'XMLRPC_IS_NUMBER' 'int ()'
|   |   | `-ImplicitCastExpr 0x153830048 <col:24, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x153830030 <col:24, col:30> 'char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x15382ffd0 <col:24, col:30> 'const char' lvalue
|   |   |       |-ImplicitCastExpr 0x15382ffa0 <col:24> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x15382ff60 <col:24> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |       `-ImplicitCastExpr 0x15382ffb8 <col:29> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x15382ff80 <col:29> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |-CompoundAssignOperator 0x1538302a0 <line:56:7, col:37> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x1538300a8 <col:7, col:10> '<dependent type>' contains-errors lvalue .tm_hour
|   |   | | `-RecoveryExpr 0x153830080 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x153830060 <col:7> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   |   | `-BinaryOperator 0x153830280 <col:21, col:37> 'int' '*'
|   |   |   |-ParenExpr 0x153830228 <col:21, col:35> 'int'
|   |   |   | `-BinaryOperator 0x153830208 <col:22, col:32> 'int' '-'
|   |   |   |   |-ImplicitCastExpr 0x1538301f0 <col:22, col:30> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x1538301d8 <col:22, col:30> 'char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x1538301a0 <col:22, col:30> 'const char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x153830188 <col:22> 'const char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x1538300f0 <col:22> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |   |   |     `-BinaryOperator 0x153830168 <col:27, col:29> 'int' '+'
|   |   |   |   |       |-ImplicitCastExpr 0x153830150 <col:27> 'int' <LValueToRValue>
|   |   |   |   |       | `-DeclRefExpr 0x153830110 <col:27> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |   |   |       `-IntegerLiteral 0x153830130 <col:29> 'int' 9
|   |   |   |   `-CharacterLiteral 0x1538301c0 <col:32> 'int' 48
|   |   |   `-ImplicitCastExpr 0x153830268 <col:37> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x153830248 <col:37> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |   `-CompoundAssignOperator 0x153830310 <line:57:7, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1538302d0 <col:7> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |     `-IntegerLiteral 0x1538302f0 <col:12> 'int' 10
|   |-BinaryOperator 0x1538303e0 <line:60:4, col:8> 'int' '='
|   | |-DeclRefExpr 0x1538303a0 <col:4> 'int' lvalue Var 0x15382b758 'n' 'int'
|   | `-IntegerLiteral 0x1538303c0 <col:8> 'int' 10
|   |-BinaryOperator 0x1538304b0 <line:61:4, col:16> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x153830448 <col:4, col:7> '<dependent type>' contains-errors lvalue .tm_min
|   | | `-RecoveryExpr 0x153830420 <col:4> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x153830400 <col:4> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   | `-IntegerLiteral 0x153830490 <col:16> 'int' 0
|   |-ForStmt 0x153830a08 <line:62:4, line:66:4>
|   | |-BinaryOperator 0x153830510 <line:62:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x1538304d0 <col:8> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x1538304f0 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x153830588 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x153830570 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x153830530 <col:15> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x153830550 <col:19> 'int' 2
|   | |-UnaryOperator 0x1538305c8 <col:22, col:23> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1538305a8 <col:22> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | `-CompoundStmt 0x1538309e0 <col:27, line:66:4>
|   |   |-CallExpr 0x1538306a8 <line:63:7, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x153830690 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1538305e0 <col:7> 'int ()' Function 0x15382e3f8 'XMLRPC_IS_NUMBER' 'int ()'
|   |   | `-ImplicitCastExpr 0x1538306e8 <col:24, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1538306d0 <col:24, col:30> 'char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x153830670 <col:24, col:30> 'const char' lvalue
|   |   |       |-ImplicitCastExpr 0x153830640 <col:24> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x153830600 <col:24> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |       `-ImplicitCastExpr 0x153830658 <col:29> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x153830620 <col:29> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |-CompoundAssignOperator 0x153830940 <line:64:7, col:37> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x153830748 <col:7, col:10> '<dependent type>' contains-errors lvalue .tm_min
|   |   | | `-RecoveryExpr 0x153830720 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x153830700 <col:7> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   |   | `-BinaryOperator 0x153830920 <col:20, col:37> 'int' '*'
|   |   |   |-ParenExpr 0x1538308c8 <col:20, col:35> 'int'
|   |   |   | `-BinaryOperator 0x1538308a8 <col:21, col:32> 'int' '-'
|   |   |   |   |-ImplicitCastExpr 0x153830890 <col:21, col:30> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x153830878 <col:21, col:30> 'char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x153830840 <col:21, col:30> 'const char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x153830828 <col:21> 'const char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x153830790 <col:21> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |   |   |     `-BinaryOperator 0x153830808 <col:26, col:28> 'int' '+'
|   |   |   |   |       |-ImplicitCastExpr 0x1538307f0 <col:26> 'int' <LValueToRValue>
|   |   |   |   |       | `-DeclRefExpr 0x1538307b0 <col:26> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |   |   |       `-IntegerLiteral 0x1538307d0 <col:28> 'int' 12
|   |   |   |   `-CharacterLiteral 0x153830860 <col:32> 'int' 48
|   |   |   `-ImplicitCastExpr 0x153830908 <col:37> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1538308e8 <col:37> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |   `-CompoundAssignOperator 0x1538309b0 <line:65:7, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x153830970 <col:7> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |     `-IntegerLiteral 0x153830990 <col:12> 'int' 10
|   |-BinaryOperator 0x153830a80 <line:68:4, col:8> 'int' '='
|   | |-DeclRefExpr 0x153830a40 <col:4> 'int' lvalue Var 0x15382b758 'n' 'int'
|   | `-IntegerLiteral 0x153830a60 <col:8> 'int' 10
|   |-BinaryOperator 0x153830b50 <line:69:4, col:16> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x153830ae8 <col:4, col:7> '<dependent type>' contains-errors lvalue .tm_sec
|   | | `-RecoveryExpr 0x153830ac0 <col:4> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x153830aa0 <col:4> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   | `-IntegerLiteral 0x153830b30 <col:16> 'int' 0
|   |-ForStmt 0x1538310a8 <line:70:4, line:74:4>
|   | |-BinaryOperator 0x153830bb0 <line:70:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x153830b70 <col:8> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x153830b90 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x153830c28 <col:15, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x153830c10 <col:15> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x153830bd0 <col:15> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | | `-IntegerLiteral 0x153830bf0 <col:19> 'int' 2
|   | |-UnaryOperator 0x153830c68 <col:22, col:23> 'int' postfix '++'
|   | | `-DeclRefExpr 0x153830c48 <col:22> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   | `-CompoundStmt 0x153831080 <col:27, line:74:4>
|   |   |-CallExpr 0x153830d48 <line:71:7, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x153830d30 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x153830c80 <col:7> 'int ()' Function 0x15382e3f8 'XMLRPC_IS_NUMBER' 'int ()'
|   |   | `-ImplicitCastExpr 0x153830d88 <col:24, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x153830d70 <col:24, col:30> 'char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x153830d10 <col:24, col:30> 'const char' lvalue
|   |   |       |-ImplicitCastExpr 0x153830ce0 <col:24> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x153830ca0 <col:24> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |       `-ImplicitCastExpr 0x153830cf8 <col:29> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x153830cc0 <col:29> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |-CompoundAssignOperator 0x153830fe0 <line:72:7, col:37> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x153830de8 <col:7, col:10> '<dependent type>' contains-errors lvalue .tm_sec
|   |   | | `-RecoveryExpr 0x153830dc0 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x153830da0 <col:7> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   |   | `-BinaryOperator 0x153830fc0 <col:20, col:37> 'int' '*'
|   |   |   |-ParenExpr 0x153830f68 <col:20, col:35> 'int'
|   |   |   | `-BinaryOperator 0x153830f48 <col:21, col:32> 'int' '-'
|   |   |   |   |-ImplicitCastExpr 0x153830f30 <col:21, col:30> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x153830f18 <col:21, col:30> 'char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x153830ee0 <col:21, col:30> 'const char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x153830ec8 <col:21> 'const char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x153830e30 <col:21> 'const char *' lvalue ParmVar 0x15380dcd8 'text' 'const char *'
|   |   |   |   |     `-BinaryOperator 0x153830ea8 <col:26, col:28> 'int' '+'
|   |   |   |   |       |-ImplicitCastExpr 0x153830e90 <col:26> 'int' <LValueToRValue>
|   |   |   |   |       | `-DeclRefExpr 0x153830e50 <col:26> 'int' lvalue Var 0x15382b7f0 'i' 'int'
|   |   |   |   |       `-IntegerLiteral 0x153830e70 <col:28> 'int' 15
|   |   |   |   `-CharacterLiteral 0x153830f00 <col:32> 'int' 48
|   |   |   `-ImplicitCastExpr 0x153830fa8 <col:37> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x153830f88 <col:37> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |   `-CompoundAssignOperator 0x153831050 <line:73:7, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x153831010 <col:7> 'int' lvalue Var 0x15382b758 'n' 'int'
|   |     `-IntegerLiteral 0x153831030 <col:12> 'int' 10
|   |-CompoundAssignOperator 0x153831190 <line:76:4, col:18> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x153831128 <col:4, col:7> '<dependent type>' contains-errors lvalue .tm_year
|   | | `-RecoveryExpr 0x153831100 <col:4> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1538310e0 <col:4> 'struct tm' lvalue Var 0x15380e038 'tm' 'struct tm'
|   | `-IntegerLiteral 0x153831170 <col:18> 'int' 1900
|   |-BinaryOperator 0x153831370 <line:78:4, col:23> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x1538311f8 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1538311e0 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1538311c0 <col:5> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x153831348 <col:13, col:23> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1538312f0 <col:13> 'int ()' Function 0x153831238 'mktime' 'int ()'
|   |   `-UnaryOperator 0x153831330 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x153831310 <col:21> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x1538313b0 <line:80:4, col:11>
|     `-IntegerLiteral 0x153831390 <col:11> 'int' 0
|-FunctionDecl 0x15382b9d0 <line:7:6> col:6 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x15382bad0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15382bb38 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x15382ba78 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x15382c3e8 <line:22:7> col:7 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x15382c4e8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15382c490 <<invalid sloc>> Implicit 902
