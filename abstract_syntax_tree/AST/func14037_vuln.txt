TranslationUnitDecl 0x14c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c855bd0 '__int128'
|-TypedefDecl 0x14c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c855bf0 'unsigned __int128'
|-TypedefDecl 0x14d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c856580 '__NSConstantString_tag'
|-TypedefDecl 0x14d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c855d90 '__SVInt8_t'
|-TypedefDecl 0x14d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c855db0 '__SVInt16_t'
|-TypedefDecl 0x14d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c855dd0 '__SVInt32_t'
|-TypedefDecl 0x14d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c855df0 '__SVInt64_t'
|-TypedefDecl 0x14d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c855e10 '__SVUint8_t'
|-TypedefDecl 0x14d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c855e30 '__SVUint16_t'
|-TypedefDecl 0x14d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c855e50 '__SVUint32_t'
|-TypedefDecl 0x14d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c855e70 '__SVUint64_t'
|-TypedefDecl 0x14d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c855e90 '__SVFloat16_t'
|-TypedefDecl 0x14d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c856390 '__SVBool_t'
|-TypedefDecl 0x14d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c8563f0 '__SVCount_t'
|-TypedefDecl 0x14d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
|-TypedefDecl 0x14d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
`-FunctionDecl 0x14d02a948 <dataset_diviso_filec/func14037_vuln.c:1:1, line:51:1> line:1:14 __ns_get_path 'void *(struct path *, struct ns_common *)' static
  |-ParmVarDecl 0x14d00e248 <col:28, col:41> col:41 used path 'struct path *'
  |-ParmVarDecl 0x14d02a828 <col:47, col:65> col:65 used ns 'struct ns_common *'
  `-CompoundStmt 0x14d030c60 <line:2:1, line:51:1>
    |-DeclStmt 0x14d02ac88 <line:3:2, col:33>
    | |-RecordDecl 0x14d02aa48 <col:2, col:9> col:9 struct vfsmount
    | `-VarDecl 0x14d02abb8 <col:2, col:25> col:19 used mnt 'struct vfsmount *' cinit
    |   `-RecoveryExpr 0x14d02ac50 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14d02aef8 <line:4:2, col:37>
    | |-RecordDecl 0x14d02aca0 <col:2, col:9> col:9 struct qstr
    | `-VarDecl 0x14d02ad98 <col:2, col:14> col:14 invalid qname 'struct qstr'
    |-DeclStmt 0x14d02b0f8 <line:5:2, col:23>
    | |-RecordDecl 0x14d02af10 <col:2, col:9> col:9 struct dentry
    | `-VarDecl 0x14d02b078 <col:2, col:17> col:17 used dentry 'struct dentry *'
    |-DeclStmt 0x14d02b2f8 <line:6:2, col:21>
    | |-RecordDecl 0x14d02b110 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x14d02b278 <col:2, col:16> col:16 used inode 'struct inode *'
    |-DeclStmt 0x14d02b390 <line:7:2, col:17>
    | `-VarDecl 0x14d02b328 <col:2, col:16> col:16 used d 'unsigned long'
    |-CallExpr 0x14d02b528 <line:9:2, col:16> 'int'
    | `-ImplicitCastExpr 0x14d02b510 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x14d02b4c0 <col:2> 'int ()' Function 0x14d02b408 'rcu_read_lock' 'int ()'
    |-BinaryOperator 0x14d02b708 <line:10:2, col:35> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x14d02b548 <col:2> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'
    | `-CallExpr 0x14d02b6e0 <col:6, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d02b648 <col:6> 'int ()' Function 0x14d02b590 'atomic_long_read' 'int ()'
    |   `-UnaryOperator 0x14d02b6c8 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14d02b6a0 <col:24, col:28> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14d02b668 <col:24> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'
    |-IfStmt 0x14d02b7e0 <line:11:2, line:12:8>
    | |-UnaryOperator 0x14d02b760 <line:11:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14d02b748 <col:7> 'unsigned long' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d02b728 <col:7> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'
    | `-GotoStmt 0x14d02b7c8 <line:12:3, col:8> 'slow' 0x14d02b778
    |-BinaryOperator 0x14d02d108 <line:13:2, col:28> 'struct dentry *' '='
    | |-DeclRefExpr 0x14d02d000 <col:2> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    | `-CStyleCastExpr 0x14d02d0e0 <col:11, col:28> 'struct dentry *' <IntegralToPointer>
    |   `-ImplicitCastExpr 0x14d02d0c8 <col:28> 'unsigned long' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x14d02d020 <col:28> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'
    |-IfStmt 0x14d02d2f8 <line:14:2, line:15:8>
    | |-UnaryOperator 0x14d02d2c8 <line:14:6, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14d02d2a0 <col:7, col:46> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14d02d208 <col:7> 'int ()' Function 0x14d02d150 'lockref_get_not_dead' 'int ()'
    | |   `-UnaryOperator 0x14d02d288 <col:28, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x14d02d260 <col:29, col:37> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x14d02d228 <col:29> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    | `-GotoStmt 0x14d02d2e0 <line:15:3, col:8> 'slow' 0x14d02b778
    |-CallExpr 0x14d02d430 <line:16:2, col:18> 'int'
    | `-ImplicitCastExpr 0x14d02d418 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x14d02d3f8 <col:2> 'int ()' Function 0x14d02d340 'rcu_read_unlock' 'int ()'
    |-CallExpr 0x14d02d518 <line:17:2, col:17> '<dependent type>' contains-errors
    | |-CXXDependentScopeMemberExpr 0x14d02d4b0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->put
    | | `-RecoveryExpr 0x14d02d488 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14d02d450 <col:2> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'
    | `-DeclRefExpr 0x14d02d4f8 <col:15> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'
    |-LabelStmt 0x14d02d788 <line:18:1, line:19:24> 'got_it'
    | `-BinaryOperator 0x14d02d718 <col:2, col:24> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x14d02d578 <col:2, col:8> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14d02d540 <col:2> 'struct path *' lvalue ParmVar 0x14d00e248 'path' 'struct path *'
    |   `-CallExpr 0x14d02d6d8 <col:14, col:24> 'int' contains-errors
    |     |-ImplicitCastExpr 0x14d02d6c0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14d02d680 <col:14> 'int ()' Function 0x14d02d5c8 'mntget' 'int ()'
    |     `-ImplicitCastExpr 0x14d02d700 <col:21> 'struct vfsmount *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x14d02d6a0 <col:21> 'struct vfsmount *' contains-errors lvalue Var 0x14d02abb8 'mnt' 'struct vfsmount *'
    |-BinaryOperator 0x14d02d828 <line:20:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d02d7e0 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d02d7a8 <col:2> 'struct path *' lvalue ParmVar 0x14d00e248 'path' 'struct path *'
    | `-DeclRefExpr 0x14d02d808 <col:17> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    |-ReturnStmt 0x14d02d880 <line:21:2, col:9>
    | `-RecoveryExpr 0x14d02d860 <col:9> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x14d02d8e8 <line:22:1, line:23:18> 'slow'
    | `-CallExpr 0x14d02d8c8 <col:2, col:18> 'int'
    |   `-ImplicitCastExpr 0x14d02d8b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x14d02d890 <col:2> 'int ()' Function 0x14d02d340 'rcu_read_unlock' 'int ()'
    |-BinaryOperator 0x14d02dab0 <line:24:2, col:38> 'struct inode *' contains-errors '='
    | |-DeclRefExpr 0x14d02d908 <col:2> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    | `-CallExpr 0x14d02da88 <col:10, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d02da08 <col:10> 'int ()' Function 0x14d02d950 'new_inode_pseudo' 'int ()'
    |   `-RecoveryExpr 0x14d02da60 <col:27, col:32> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14d02da28 <col:27> 'struct vfsmount *' contains-errors lvalue Var 0x14d02abb8 'mnt' 'struct vfsmount *'
    |-IfStmt 0x14d02de28 <line:25:2, line:28:2>
    | |-UnaryOperator 0x14d02db08 <line:25:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14d02daf0 <col:7> 'struct inode *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d02dad0 <col:7> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    | `-CompoundStmt 0x14d02de08 <col:14, line:28:2>
    |   |-CallExpr 0x14d02dbe8 <line:26:3, col:18> '<dependent type>' contains-errors
    |   | |-CXXDependentScopeMemberExpr 0x14d02db80 <col:3, col:12> '<dependent type>' contains-errors lvalue ->put
    |   | | `-RecoveryExpr 0x14d02db58 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x14d02db20 <col:3> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'
    |   | `-DeclRefExpr 0x14d02dbc8 <col:16> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'
    |   `-ReturnStmt 0x14d02ddf8 <line:27:3, col:25>
    |     `-CallExpr 0x14d02ddd0 <col:10, col:25> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14d02dcf0 <col:10> 'int ()' Function 0x14d02dc38 'ERR_PTR' 'int ()'
    |       `-UnaryOperator 0x14d02ddb8 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x14d02dda0 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x14d02dd80 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d02df08 <line:29:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d02de80 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d02de48 <col:2> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    | `-RecoveryExpr 0x14d02dee0 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14d02dea8 <col:17> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'
    |-BinaryOperator 0x14d02fc18 <line:30:2, col:71> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d02df60 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d02df28 <col:2> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    | `-BinaryOperator 0x14d02fbf8 <col:19, col:71> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x14d02dfc0 <col:19, col:26> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14d02df88 <col:19> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    |   `-BinaryOperator 0x14d02fbd8 <col:36, col:71> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x14d02fa38 <col:36, col:43> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x14d02fa00 <col:36> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    |     `-CallExpr 0x14d02fb98 <col:53, col:71> 'int'
    |       |-ImplicitCastExpr 0x14d02fb80 <col:53> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14d02fb40 <col:53> 'int ()' Function 0x14d02fa88 'current_time' 'int ()'
    |       `-ImplicitCastExpr 0x14d02fbc0 <col:66> 'struct inode *' <LValueToRValue>
    |         `-DeclRefExpr 0x14d02fb60 <col:66> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    |-BinaryOperator 0x14d02fdd8 <line:34:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d02fd90 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d02fd58 <col:2> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    | `-DeclRefExpr 0x14d02fdb8 <col:21> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'
    |-BinaryOperator 0x14d02ffe0 <line:36:2, col:45> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x14d02fdf8 <col:2> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    | `-CallExpr 0x14d02ffb0 <col:11, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d02fef8 <col:11> 'int ()' Function 0x14d02fe40 'd_alloc_pseudo' 'int ()'
    |   |-RecoveryExpr 0x14d02ff50 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14d02ff18 <col:26> 'struct vfsmount *' contains-errors lvalue Var 0x14d02abb8 'mnt' 'struct vfsmount *'
    |   `-UnaryOperator 0x14d02ff98 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14d02ff78 <col:40> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d030200 <line:37:2, line:40:2>
    | |-UnaryOperator 0x14d030038 <line:37:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14d030020 <col:7> 'struct dentry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d030000 <col:7> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    | `-CompoundStmt 0x14d0301e8 <col:15, line:40:2>
    |   `-CallExpr 0x14d030188 <line:38:3, col:13> 'int'
    |     |-ImplicitCastExpr 0x14d030170 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14d030130 <col:3> 'int ()' Function 0x14d030078 'iput' 'int ()'
    |     `-ImplicitCastExpr 0x14d0301b0 <col:8> 'struct inode *' <LValueToRValue>
    |       `-DeclRefExpr 0x14d030150 <col:8> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    |-CallExpr 0x14d030378 <line:41:2, col:29> 'int'
    | |-ImplicitCastExpr 0x14d030360 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14d030300 <col:2> 'int ()' Function 0x14d030248 'd_instantiate' 'int ()'
    | |-ImplicitCastExpr 0x14d0303a8 <col:16> 'struct dentry *' <LValueToRValue>
    | | `-DeclRefExpr 0x14d030320 <col:16> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    | `-ImplicitCastExpr 0x14d0303c0 <col:24> 'struct inode *' <LValueToRValue>
    |   `-DeclRefExpr 0x14d030340 <col:24> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'
    |-BinaryOperator 0x14d0304d8 <line:42:2, col:33> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d030410 <col:2, col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d0303d8 <col:2> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    | `-CStyleCastExpr 0x14d0304b0 <col:21, col:33> 'void *' contains-errors <Dependent>
    |   `-RecoveryExpr 0x14d030470 <col:29, col:33> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14d030438 <col:29> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'
    |-BinaryOperator 0x14d030760 <line:43:2, col:64> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x14d0304f8 <col:2> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'
    | `-CallExpr 0x14d030728 <col:6, col:64> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d0305f8 <col:6> 'int ()' Function 0x14d030540 'atomic_long_cmpxchg' 'int ()'
    |   |-UnaryOperator 0x14d030678 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14d030650 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14d030618 <col:27> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'
    |   |-IntegerLiteral 0x14d030690 <col:40> 'int' 0
    |   `-CStyleCastExpr 0x14d030700 <col:43, col:58> 'unsigned long' <PointerToIntegral>
    |     `-ImplicitCastExpr 0x14d0306e8 <col:58> 'struct dentry *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x14d0306b0 <col:58> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    |-IfStmt 0x14d030c28 <line:44:2, line:49:2>
    | |-ImplicitCastExpr 0x14d0307a0 <line:44:6> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x14d030780 <col:6> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'
    | `-CompoundStmt 0x14d030c00 <col:9, line:49:2>
    |   |-CallExpr 0x14d0308f0 <line:45:3, col:18> 'int'
    |   | |-ImplicitCastExpr 0x14d0308d8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14d030898 <col:3> 'int ()' Function 0x14d0307e0 'd_delete' 'int ()'
    |   | `-ImplicitCastExpr 0x14d030918 <col:12> 'struct dentry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14d0308b8 <col:12> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    |   |-CallExpr 0x14d030a68 <line:46:3, col:14> 'int'
    |   | |-ImplicitCastExpr 0x14d030a50 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14d030a10 <col:3> 'int ()' Function 0x14d030958 'dput' 'int ()'
    |   | `-ImplicitCastExpr 0x14d030a90 <col:8> 'struct dentry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14d030a30 <col:8> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'
    |   `-CallExpr 0x14d030bc0 <line:47:3, col:13> 'int'
    |     `-ImplicitCastExpr 0x14d030ba8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x14d030b88 <col:3> 'int ()' Function 0x14d030ad0 'cpu_relax' 'int ()'
    `-GotoStmt 0x14d030c48 <line:50:2, col:7> 'got_it' 0x14d02d738
