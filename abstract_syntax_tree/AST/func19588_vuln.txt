TranslationUnitDecl 0x147813e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x147814cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1478143d0 '__int128'
|-TypedefDecl 0x147814d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1478143f0 'unsigned __int128'
|-TypedefDecl 0x1478e7430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1478e7200 'struct __NSConstantString_tag'
|   `-Record 0x147814d80 '__NSConstantString_tag'
|-TypedefDecl 0x1478e7498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147814590 '__SVInt8_t'
|-TypedefDecl 0x1478e7500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1478145b0 '__SVInt16_t'
|-TypedefDecl 0x1478e7568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1478145d0 '__SVInt32_t'
|-TypedefDecl 0x1478e75d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1478145f0 '__SVInt64_t'
|-TypedefDecl 0x1478e7638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147814610 '__SVUint8_t'
|-TypedefDecl 0x1478e76a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147814630 '__SVUint16_t'
|-TypedefDecl 0x1478e7708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147814650 '__SVUint32_t'
|-TypedefDecl 0x1478e7770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147814670 '__SVUint64_t'
|-TypedefDecl 0x1478e77d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147814690 '__SVFloat16_t'
|-TypedefDecl 0x1478e7840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1478146b0 '__SVFloat32_t'
|-TypedefDecl 0x1478e78a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1478146d0 '__SVFloat64_t'
|-TypedefDecl 0x1478e7910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1478146f0 '__SVBfloat16_t'
|-TypedefDecl 0x1478e7978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147814710 '__clang_svint8x2_t'
|-TypedefDecl 0x1478e79e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147814730 '__clang_svint16x2_t'
|-TypedefDecl 0x1478e7a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147814750 '__clang_svint32x2_t'
|-TypedefDecl 0x1478e7ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147814770 '__clang_svint64x2_t'
|-TypedefDecl 0x1478e7b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147814790 '__clang_svuint8x2_t'
|-TypedefDecl 0x1478e7b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1478147b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1478e7be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1478147d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1478e7c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1478147f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1478e7cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147814810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1478e7d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147814830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1478e7d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147814850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1478e7df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147814870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1478e7e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147814890 '__clang_svint8x3_t'
|-TypedefDecl 0x1478e7ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1478148b0 '__clang_svint16x3_t'
|-TypedefDecl 0x1478e7f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1478148d0 '__clang_svint32x3_t'
|-TypedefDecl 0x1478e7f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1478148f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1478e7ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147814910 '__clang_svuint8x3_t'
|-TypedefDecl 0x1478e8060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147814930 '__clang_svuint16x3_t'
|-TypedefDecl 0x1478e80c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147814950 '__clang_svuint32x3_t'
|-TypedefDecl 0x1478e8130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147814970 '__clang_svuint64x3_t'
|-TypedefDecl 0x1478e8198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147814990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1478e8a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1478149b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1478e8a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1478149d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1478e8ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1478149f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1478e8b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147814a10 '__clang_svint8x4_t'
|-TypedefDecl 0x1478e8ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147814a30 '__clang_svint16x4_t'
|-TypedefDecl 0x1478e8c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147814a50 '__clang_svint32x4_t'
|-TypedefDecl 0x1478e8c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147814a70 '__clang_svint64x4_t'
|-TypedefDecl 0x1478e8cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147814a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1478e8d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x147814ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1478e8da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x147814ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1478e8e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x147814af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1478e8e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147814b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1478e8ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147814b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1478e8f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147814b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1478e8fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147814b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1478e9018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147814b90 '__SVBool_t'
|-TypedefDecl 0x1478e9080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x147814bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x1478e90e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x147814bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1478e9150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x147814bf0 '__SVCount_t'
|-TypedefDecl 0x1478e91f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1478e91b0 'char *'
|   `-BuiltinType 0x147813eb0 'char'
|-TypedefDecl 0x1478e9268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1478e91b0 'char *'
|   `-BuiltinType 0x147813eb0 'char'
|-EnumDecl 0x1478e92c0 <dataset_diviso_filec/func19588_vuln.c:1:1, col:6> col:6 nss_status
|-FunctionDecl 0x147901f20 <col:1, line:83:1> line:1:17 invalid _nss_mymachines_getgrnam_r 'enum nss_status (const char *, struct group *, char *, int, int *)'
| |-ParmVarDecl 0x1478e9398 <line:2:17, col:29> col:29 used name 'const char *'
| |-ParmVarDecl 0x1478e9988 <line:3:17, col:31> col:31 used gr 'struct group *'
| |-ParmVarDecl 0x147901c18 <line:4:17, col:23> col:23 used buffer 'char *'
| |-ParmVarDecl 0x147901cb0 <col:31, col:38> col:38 invalid buflen 'int'
| |-ParmVarDecl 0x147901d68 <line:5:17, col:22> col:22 used errnop 'int *'
| `-CompoundStmt 0x14704ab90 <col:30, line:83:1>
|   |-DeclStmt 0x147902190 <line:10:9, col:36>
|   | |-VarDecl 0x147902008 <col:9, col:21> col:21 used p 'const char *'
|   | |-VarDecl 0x147902088 <col:9, col:25> col:25 used e 'const char *'
|   | `-VarDecl 0x147902108 <col:9, col:29> col:29 used machine 'const char *'
|   |-UnaryExprOrTypeTraitExpr 0x147902200 <line:13:9, col:16> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x1479021e0 <col:16> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1479022a0 <line:14:9, col:14>
|   | `-VarDecl 0x147902238 <col:9, col:13> col:13 used r 'int'
|   |-CallExpr 0x147902498 <line:16:9, col:20> 'int'
|   | |-ImplicitCastExpr 0x147902480 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x147902410 <col:9> 'int ()' Function 0x147902358 'assert' 'int ()'
|   | `-ImplicitCastExpr 0x1479024c0 <col:16> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x147902430 <col:16> 'const char *' lvalue ParmVar 0x1478e9398 'name' 'const char *'
|   |-CallExpr 0x147902530 <line:17:9, col:18> 'int'
|   | |-ImplicitCastExpr 0x147902518 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1479024d8 <col:9> 'int ()' Function 0x147902358 'assert' 'int ()'
|   | `-ImplicitCastExpr 0x147902558 <col:16> 'struct group *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1479024f8 <col:16> 'struct group *' lvalue ParmVar 0x1478e9988 'gr' 'struct group *'
|   |-BinaryOperator 0x1479027a0 <line:19:9, col:35> 'const char *' '='
|   | |-DeclRefExpr 0x147902570 <col:9> 'const char *' lvalue Var 0x147902008 'p' 'const char *'
|   | `-ImplicitCastExpr 0x147902788 <col:13, col:35> 'const char *' <IntegralToPointer>
|   |   `-CallExpr 0x147902728 <col:13, col:35> 'int'
|   |     |-ImplicitCastExpr 0x147902710 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x147902670 <col:13> 'int ()' Function 0x1479025b8 'startswith' 'int ()'
|   |     |-ImplicitCastExpr 0x147902758 <col:24> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x147902690 <col:24> 'const char *' lvalue ParmVar 0x1478e9398 'name' 'const char *'
|   |     `-ImplicitCastExpr 0x147902770 <col:30> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1479026f0 <col:30> 'char[4]' lvalue "STR"
|   |-IfStmt 0x147902878 <line:20:9, line:21:22>
|   | |-UnaryOperator 0x1479027f8 <line:20:13, col:14> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1479027e0 <col:14> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1479027c0 <col:14> 'const char *' lvalue Var 0x147902008 'p' 'const char *'
|   | `-GotoStmt 0x147902860 <line:21:17, col:22> 'not_found' 0x147902810
|   |-BinaryOperator 0x150809c00 <line:23:9, col:27> 'const char *' '='
|   | |-DeclRefExpr 0x147902898 <col:9> 'const char *' lvalue Var 0x147902088 'e' 'const char *'
|   | `-ImplicitCastExpr 0x147902be0 <col:13, col:27> 'const char *' <NoOp>
|   |   `-CallExpr 0x147902b98 <col:13, col:27> 'char *'
|   |     |-ImplicitCastExpr 0x147902b80 <col:13> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x147902ae0 <col:13> 'char *(const char *, int)' Function 0x147902900 'strrchr' 'char *(const char *, int)'
|   |     |-ImplicitCastExpr 0x147902bc8 <col:21> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x147902b00 <col:21> 'const char *' lvalue Var 0x147902008 'p' 'const char *'
|   |     `-CharacterLiteral 0x147902b20 <col:24> 'int' 45
|   |-IfStmt 0x150809d38 <line:24:9, line:25:22>
|   | |-BinaryOperator 0x150809d00 <line:24:13, col:24> 'int' '||'
|   | | |-UnaryOperator 0x150809c58 <col:13, col:14> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x150809c40 <col:14> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x150809c20 <col:14> 'const char *' lvalue Var 0x147902088 'e' 'const char *'
|   | | `-BinaryOperator 0x150809ce0 <col:19, col:24> 'int' '=='
|   | |   |-ImplicitCastExpr 0x150809cb0 <col:19> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x150809c70 <col:19> 'const char *' lvalue Var 0x147902088 'e' 'const char *'
|   | |   `-ImplicitCastExpr 0x150809cc8 <col:24> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x150809c90 <col:24> 'const char *' lvalue Var 0x147902008 'p' 'const char *'
|   | `-GotoStmt 0x150809d20 <line:25:17, col:22> 'not_found' 0x147902810
|   |-BinaryOperator 0x15080a048 <line:27:9, col:34> 'int' contains-errors '='
|   | |-DeclRefExpr 0x150809d58 <col:9> 'int' lvalue Var 0x147902238 'r' 'int'
|   | `-CallExpr 0x15080a018 <col:13, col:34> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x150809e58 <col:13> 'int ()' Function 0x150809da0 'parse_gid' 'int ()'
|   |   |-BinaryOperator 0x150809fc0 <col:23, col:27> 'const char *' '+'
|   |   | |-ImplicitCastExpr 0x150809fa8 <col:23> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x150809e78 <col:23> 'const char *' lvalue Var 0x147902088 'e' 'const char *'
|   |   | `-IntegerLiteral 0x150809e98 <col:27> 'int' 1
|   |   `-UnaryOperator 0x15080a000 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x150809fe0 <col:31> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15080a0f8 <line:28:9, line:29:22>
|   | |-BinaryOperator 0x15080a0c0 <line:28:13, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x15080a0a8 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15080a068 <col:13> 'int' lvalue Var 0x147902238 'r' 'int'
|   | | `-IntegerLiteral 0x15080a088 <col:17> 'int' 0
|   | `-GotoStmt 0x15080a0e0 <line:29:17, col:22> 'not_found' 0x147902810
|   |-BinaryOperator 0x15080a360 <line:31:9, col:36> 'const char *' '='
|   | |-DeclRefExpr 0x15080a118 <col:9> 'const char *' lvalue Var 0x147902108 'machine' 'const char *'
|   | `-ImplicitCastExpr 0x15080a348 <col:19, col:36> 'const char *' <IntegralToPointer>
|   |   `-CallExpr 0x15080a300 <col:19, col:36> 'int'
|   |     |-ImplicitCastExpr 0x15080a2e8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x15080a218 <col:19> 'int ()' Function 0x15080a160 'strndupa' 'int ()'
|   |     |-ImplicitCastExpr 0x15080a330 <col:28> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x15080a238 <col:28> 'const char *' lvalue Var 0x147902008 'p' 'const char *'
|   |     `-BinaryOperator 0x15080a2c8 <col:31, col:35> 'long' '-'
|   |       |-ImplicitCastExpr 0x15080a298 <col:31> 'const char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x15080a258 <col:31> 'const char *' lvalue Var 0x147902088 'e' 'const char *'
|   |       `-ImplicitCastExpr 0x15080a2b0 <col:35> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x15080a278 <col:35> 'const char *' lvalue Var 0x147902008 'p' 'const char *'
|   |-IfStmt 0x15080a528 <line:32:9, line:33:22>
|   | |-UnaryOperator 0x15080a4f8 <line:32:13, col:43> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x15080a4b8 <col:14, col:43> 'int'
|   | |   |-ImplicitCastExpr 0x15080a4a0 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x15080a460 <col:14> 'int ()' Function 0x15080a3a8 'machine_name_is_valid' 'int ()'
|   | |   `-ImplicitCastExpr 0x15080a4e0 <col:36> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x15080a480 <col:36> 'const char *' lvalue Var 0x147902108 'machine' 'const char *'
|   | `-GotoStmt 0x15080a510 <line:33:17, col:22> 'not_found' 0x147902810
|   |-BinaryOperator 0x15080a740 <line:35:9, col:36> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15080a548 <col:9> 'int' lvalue Var 0x147902238 'r' 'int'
|   | `-CallExpr 0x15080a718 <col:13, col:36> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15080a648 <col:13> 'int ()' Function 0x15080a590 'sd_bus_open_system' 'int ()'
|   |   `-UnaryOperator 0x15080a700 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x15080a6e0 <col:33> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15080a840 <line:36:9, line:37:22>
|   | |-BinaryOperator 0x15080a7b8 <line:36:13, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x15080a7a0 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15080a760 <col:13> 'int' lvalue Var 0x147902238 'r' 'int'
|   | | `-IntegerLiteral 0x15080a780 <col:17> 'int' 0
|   | `-GotoStmt 0x15080a828 <line:37:17, col:22> 'fail' 0x15080a7d8
|   |-IfStmt 0x147042658 <line:48:9, line:53:9>
|   | |-BinaryOperator 0x15080aa98 <line:48:13, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x15080aa80 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15080aa40 <col:13> 'int' lvalue Var 0x147902238 'r' 'int'
|   | | `-IntegerLiteral 0x15080aa60 <col:17> 'int' 0
|   | `-CompoundStmt 0x147042638 <col:20, line:53:9>
|   |   |-IfStmt 0x147042600 <line:49:17, line:50:30>
|   |   | |-RecoveryExpr 0x15080abb8 <line:49:21, col:82> '_Bool' contains-errors
|   |   | `-GotoStmt 0x15080abd8 <line:50:25, col:30> 'not_found' 0x147902810
|   |   `-GotoStmt 0x147042620 <line:52:17, col:22> 'fail' 0x15080a7d8
|   |-IfStmt 0x147042848 <line:56:9, line:57:22>
|   | |-BinaryOperator 0x147042810 <line:56:13, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x1470427f8 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1470427b8 <col:13> 'int' lvalue Var 0x147902238 'r' 'int'
|   | | `-IntegerLiteral 0x1470427d8 <col:17> 'int' 0
|   | `-GotoStmt 0x147042830 <line:57:17, col:22> 'fail' 0x15080a7d8
|   |-IfStmt 0x147042c40 <line:60:9, line:63:9>
|   | |-RecoveryExpr 0x147042bc0 <line:60:13, col:22> '_Bool' contains-errors
|   | `-CompoundStmt 0x147042c30 <col:25, line:63:9>
|   |-CallExpr 0x147042dd0 <line:65:9, col:38> 'int'
|   | |-ImplicitCastExpr 0x147042db8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x147042d40 <col:9> 'int ()' Function 0x147042c88 'memzero' 'int ()'
|   | |-ImplicitCastExpr 0x147042e00 <col:17> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x147042d60 <col:17> 'char *' lvalue ParmVar 0x147901c18 'buffer' 'char *'
|   | `-UnaryExprOrTypeTraitExpr 0x147042d98 <col:25, col:37> 'unsigned long' sizeof 'char *'
|   |-CallExpr 0x147043178 <line:66:9, col:44> 'char *'
|   | |-ImplicitCastExpr 0x147043160 <col:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x147043040 <col:9> 'char *(char *, const char *)' Function 0x147042e60 'strcpy' 'char *(char *, const char *)'
|   | |-BinaryOperator 0x1470430d0 <col:16, col:37> 'char *' '+'
|   | | |-ImplicitCastExpr 0x1470430b8 <col:16> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x147043060 <col:16> 'char *' lvalue ParmVar 0x147901c18 'buffer' 'char *'
|   | | `-UnaryExprOrTypeTraitExpr 0x147043098 <col:25, col:37> 'unsigned long' sizeof 'char *'
|   | `-ImplicitCastExpr 0x1470431a8 <col:40> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1470430f0 <col:40> 'const char *' lvalue ParmVar 0x1478e9398 'name' 'const char *'
|   |-BinaryOperator 0x1470432b0 <line:68:9, col:44> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x1470431f8 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1470431c0 <col:9> 'struct group *' lvalue ParmVar 0x1478e9988 'gr' 'struct group *'
|   | `-BinaryOperator 0x147043290 <col:23, col:44> 'char *' '+'
|   |   |-ImplicitCastExpr 0x147043278 <col:23> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x147043220 <col:23> 'char *' lvalue ParmVar 0x147901c18 'buffer' 'char *'
|   |   `-UnaryExprOrTypeTraitExpr 0x147043258 <col:32, col:44> 'unsigned long' sizeof 'char *'
|   |-BinaryOperator 0x147043408 <line:70:9, col:33> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x147043368 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x147043330 <col:9> 'struct group *' lvalue ParmVar 0x1478e9988 'gr' 'struct group *'
|   | `-CStyleCastExpr 0x1470433e0 <col:25, col:33> 'char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1470433c8 <col:33> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-StringLiteral 0x147043390 <col:33> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x147043538 <line:71:9, col:31> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x147043460 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x147043428 <col:9> 'struct group *' lvalue ParmVar 0x1478e9988 'gr' 'struct group *'
|   | `-CStyleCastExpr 0x147043510 <col:22, col:31> 'char **' <BitCast>
|   |   `-ImplicitCastExpr 0x1470434f8 <col:31> 'char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x147043488 <col:31> 'char *' lvalue ParmVar 0x147901c18 'buffer' 'char *'
|   |-BinaryOperator 0x1470435c8 <line:73:9, col:19> 'int' '='
|   | |-UnaryOperator 0x147043590 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x147043578 <col:10> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x147043558 <col:10> 'int *' lvalue ParmVar 0x147901d68 'errnop' 'int *'
|   | `-IntegerLiteral 0x1470435a8 <col:19> 'int' 0
|   |-LabelStmt 0x14704aa90 <line:76:1, line:77:19> 'not_found'
|   | `-BinaryOperator 0x14704aa70 <col:9, col:19> 'int' '='
|   |   |-UnaryOperator 0x14704aa38 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x14704aa20 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14704aa00 <col:10> 'int *' lvalue ParmVar 0x147901d68 'errnop' 'int *'
|   |   `-IntegerLiteral 0x14704aa50 <col:19> 'int' 0
|   `-LabelStmt 0x14704ab70 <line:80:1, line:81:20> 'fail'
|     `-BinaryOperator 0x14704ab50 <col:9, col:20> 'int' '='
|       |-UnaryOperator 0x14704aae8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|       | `-ImplicitCastExpr 0x14704aad0 <col:10> 'int *' <LValueToRValue>
|       |   `-DeclRefExpr 0x14704aab0 <col:10> 'int *' lvalue ParmVar 0x147901d68 'errnop' 'int *'
|       `-UnaryOperator 0x14704ab38 <col:19, col:20> 'int' prefix '-'
|         `-ImplicitCastExpr 0x14704ab20 <col:20> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x14704ab00 <col:20> 'int' lvalue Var 0x147902238 'r' 'int'
|-FunctionDecl 0x147902900 <line:23:13> col:13 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x147902a00 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x147902a68 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1479029a8 <<invalid sloc>> Implicit 896
|-FunctionDecl 0x1470428d8 <line:59:29> col:29 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1470429d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x147042980 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x147042e60 <line:66:9> col:9 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x147042f60 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x147042fc8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x147042f08 <<invalid sloc>> Implicit 885
