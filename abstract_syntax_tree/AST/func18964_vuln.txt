TranslationUnitDecl 0x142028008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x142028eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1420285d0 '__int128'
|-TypedefDecl 0x142028f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1420285f0 'unsigned __int128'
|-TypedefDecl 0x1420f9630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1420f9400 'struct __NSConstantString_tag'
|   `-Record 0x142028f80 '__NSConstantString_tag'
|-TypedefDecl 0x1420f9698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x142028790 '__SVInt8_t'
|-TypedefDecl 0x1420f9700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1420287b0 '__SVInt16_t'
|-TypedefDecl 0x1420f9768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1420287d0 '__SVInt32_t'
|-TypedefDecl 0x1420f97d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1420287f0 '__SVInt64_t'
|-TypedefDecl 0x1420f9838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x142028810 '__SVUint8_t'
|-TypedefDecl 0x1420f98a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x142028830 '__SVUint16_t'
|-TypedefDecl 0x1420f9908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x142028850 '__SVUint32_t'
|-TypedefDecl 0x1420f9970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x142028870 '__SVUint64_t'
|-TypedefDecl 0x1420f99d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x142028890 '__SVFloat16_t'
|-TypedefDecl 0x1420f9a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1420288b0 '__SVFloat32_t'
|-TypedefDecl 0x1420f9aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1420288d0 '__SVFloat64_t'
|-TypedefDecl 0x1420f9b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1420288f0 '__SVBfloat16_t'
|-TypedefDecl 0x1420f9b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x142028910 '__clang_svint8x2_t'
|-TypedefDecl 0x1420f9be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x142028930 '__clang_svint16x2_t'
|-TypedefDecl 0x1420f9c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x142028950 '__clang_svint32x2_t'
|-TypedefDecl 0x1420f9cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x142028970 '__clang_svint64x2_t'
|-TypedefDecl 0x1420f9d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x142028990 '__clang_svuint8x2_t'
|-TypedefDecl 0x1420f9d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1420289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1420f9de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1420289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1420f9e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1420289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1420f9eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x142028a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1420f9f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x142028a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1420f9f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x142028a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1420f9ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x142028a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1420fa058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x142028a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1420fa0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x142028ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x1420fa128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x142028ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x1420fa190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x142028af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1420fa1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x142028b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1420fa260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x142028b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1420fa2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x142028b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1420fa330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x142028b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1420fa398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x142028b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1420fac00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x142028bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1420fac68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x142028bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1420facd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x142028bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1420fad38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x142028c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1420fada0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x142028c30 '__clang_svint16x4_t'
|-TypedefDecl 0x1420fae08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x142028c50 '__clang_svint32x4_t'
|-TypedefDecl 0x1420fae70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x142028c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1420faed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x142028c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1420faf40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x142028cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1420fafa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x142028cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1420fb010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x142028cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1420fb078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x142028d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1420fb0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x142028d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1420fb148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x142028d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1420fb1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x142028d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1420fb218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x142028d90 '__SVBool_t'
|-TypedefDecl 0x1420fb280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x142028db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1420fb2e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x142028dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1420fb350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x142028df0 '__SVCount_t'
|-TypedefDecl 0x1420fb3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1420fb3b0 'char *'
|   `-BuiltinType 0x1420280b0 'char'
|-TypedefDecl 0x1420fb468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1420fb3b0 'char *'
|   `-BuiltinType 0x1420280b0 'char'
|-FunctionDecl 0x142114070 <dataset_diviso_filec/func18964_vuln.c:1:1, line:56:1> line:1:13 urlParsePostBody 'void (struct URL *, const struct HttpConnection *, const char *, int)' static
| |-ParmVarDecl 0x1420fba48 <col:30, col:42> col:42 used url 'struct URL *'
| |-ParmVarDecl 0x142113e28 <line:2:30, col:59> col:59 used http 'const struct HttpConnection *'
| |-ParmVarDecl 0x142113ea8 <line:3:30, col:42> col:42 used buf 'const char *'
| |-ParmVarDecl 0x142113f28 <col:47, col:51> col:51 used len 'int'
| `-CompoundStmt 0x142118d48 <col:56, line:56:1>
|   |-DeclStmt 0x1421142f8 <line:4:3, col:29>
|   | |-RecordDecl 0x142114180 <col:3, col:10> col:10 struct HashMap
|   | `-VarDecl 0x142114278 <col:3, col:18> col:18 invalid contentType 'struct HashMap'
|   |-CallExpr 0x142114540 <line:5:3, col:57> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x142114440 <col:3> 'int ()' Function 0x142114388 'initHashMap' 'int ()'
|   | |-UnaryOperator 0x142114480 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x142114460 <col:16> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x142114500 <col:29> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x142114520 <col:53> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x142114800 <line:6:3, col:66>
|   | `-VarDecl 0x142114590 <col:3, col:65> col:15 used ctHeader 'const char *' cinit
|   |   `-CallExpr 0x1421147d0 <col:30, col:65> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1421146d8 <col:30> 'int ()' Function 0x142114620 'getFromHashMap' 'int ()'
|   |     |-UnaryOperator 0x142114758 <col:45, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x142114730 <col:46, col:52> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x1421146f8 <col:46> 'const struct HttpConnection *' lvalue ParmVar 0x142113e28 'http' 'const struct HttpConnection *'
|   |     `-StringLiteral 0x1421147b0 <col:60> 'char[4]' lvalue "STR"
|   |-CallExpr 0x142114c98 <line:7:3, col:77> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1421148f8 <col:3> 'int ()' Function 0x142114840 'urlParseHeaderLine' 'int ()'
|   | |-UnaryOperator 0x142114938 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x142114918 <col:23> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x142114950 <col:36> 'const char *' contains-errors lvalue Var 0x142114590 'ctHeader' 'const char *'
|   | `-ConditionalOperator 0x142114c68 <col:46, col:76> 'unsigned long' contains-errors
|   |   |-ImplicitCastExpr 0x142114c38 <col:46> 'const char *' contains-errors <LValueToRValue>
|   |   | `-DeclRefExpr 0x142114970 <col:46> 'const char *' contains-errors lvalue Var 0x142114590 'ctHeader' 'const char *'
|   |   |-CallExpr 0x142114bd8 <col:57, col:72> 'unsigned long' contains-errors
|   |   | |-ImplicitCastExpr 0x142114bc0 <col:57> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x142114b38 <col:57> 'unsigned long (const char *)' Function 0x1421149c8 'strlen' 'unsigned long (const char *)'
|   |   | `-ImplicitCastExpr 0x142114c00 <col:64> 'const char *' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x142114b58 <col:64> 'const char *' contains-errors lvalue Var 0x142114590 'ctHeader' 'const char *'
|   |   `-ImplicitCastExpr 0x142114c50 <col:76> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x142114c18 <col:76> 'int' 0
|   |-IfStmt 0x142118bb8 <line:8:3, line:54:3> has_else
|   | |-CallExpr 0x142116238 <line:8:7, col:44> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x142114db0 <col:7> 'int ()' Function 0x142114cf8 'getRefFromHashMap' 'int ()'
|   | | |-UnaryOperator 0x142116200 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | `-RecoveryExpr 0x142114dd0 <col:26> '<dependent type>' contains-errors lvalue
|   | | `-StringLiteral 0x142116218 <col:39> 'char[4]' lvalue "STR"
|   | |-CompoundStmt 0x142116458 <col:47, line:10:3>
|   | | `-CallExpr 0x142116420 <line:9:5, col:45> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x142116348 <col:5> 'int ()' Function 0x142116290 'urlParseQueryString' 'int ()'
|   | |   |-UnaryOperator 0x1421163c8 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x1421163a0 <col:26, col:31> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x142116368 <col:26> 'struct URL *' lvalue ParmVar 0x1420fba48 'url' 'struct URL *'
|   | |   |-DeclRefExpr 0x1421163e0 <col:37> 'const char *' lvalue ParmVar 0x142113ea8 'buf' 'const char *'
|   | |   `-DeclRefExpr 0x142116400 <col:42> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   | `-IfStmt 0x142118b98 <line:10:10, line:54:3>
|   |   |-CallExpr 0x1421164e8 <line:10:14, col:51> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x142116470 <col:14> 'int ()' Function 0x142114cf8 'getRefFromHashMap' 'int ()'
|   |   | |-UnaryOperator 0x1421164b0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x142116490 <col:33> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x1421164c8 <col:46> 'char[4]' lvalue "STR"
|   |   `-CompoundStmt 0x142118b78 <col:54, line:54:3>
|   |     |-DeclStmt 0x142116640 <line:11:5, col:65>
|   |     | `-VarDecl 0x142116530 <col:5, col:64> col:17 used boundary 'const char *' cinit
|   |     |   `-CallExpr 0x142116610 <col:30, col:64> '<dependent type>' contains-errors
|   |     |     |-DeclRefExpr 0x142116598 <col:30> 'int ()' Function 0x142114620 'getFromHashMap' 'int ()'
|   |     |     |-UnaryOperator 0x1421165d8 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     |     | `-RecoveryExpr 0x1421165b8 <col:46> '<dependent type>' contains-errors lvalue
|   |     |     `-StringLiteral 0x1421165f0 <col:59> 'char[4]' lvalue "STR"
|   |     `-IfStmt 0x142118b48 <line:12:5, line:53:5> has_else
|   |       |-BinaryOperator 0x142116710 <line:12:9, col:22> 'int' contains-errors '&&'
|   |       | |-ImplicitCastExpr 0x1421166c8 <col:9> 'const char *' contains-errors <LValueToRValue>
|   |       | | `-DeclRefExpr 0x142116658 <col:9> 'const char *' contains-errors lvalue Var 0x142116530 'boundary' 'const char *'
|   |       | `-ImplicitCastExpr 0x1421166f8 <col:21, col:22> 'int' contains-errors <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x1421166e0 <col:21, col:22> 'char' contains-errors <LValueToRValue>
|   |       |     `-UnaryOperator 0x1421166b0 <col:21, col:22> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |       |       `-ImplicitCastExpr 0x142116698 <col:22> 'const char *' contains-errors <LValueToRValue>
|   |       |         `-DeclRefExpr 0x142116678 <col:22> 'const char *' contains-errors lvalue Var 0x142116530 'boundary' 'const char *'
|   |       |-CompoundStmt 0x142118a70 <col:32, line:51:5>
|   |       | |-DeclStmt 0x1421167e8 <line:13:7, col:34>
|   |       | | `-VarDecl 0x142116748 <col:7, col:30> col:19 used lastPart 'const char *' cinit
|   |       | |   `-RecoveryExpr 0x1421167c8 <col:30> '<dependent type>' contains-errors lvalue
|   |       | |-ForStmt 0x142118850 <line:14:7, line:47:7>
|   |       | | |-DeclStmt 0x1421168b8 <line:14:12, col:34>
|   |       | | | `-VarDecl 0x142116818 <col:12, col:31> col:24 used part 'const char *' cinit
|   |       | | |   `-ImplicitCastExpr 0x1421168a0 <col:31> 'const char *' <LValueToRValue>
|   |       | | |     `-DeclRefExpr 0x142116880 <col:31> 'const char *' lvalue ParmVar 0x142113ea8 'buf' 'const char *'
|   |       | | |-<<<NULL>>>
|   |       | | |-BinaryOperator 0x142116928 <col:36, col:42> 'int' '>'
|   |       | | | |-ImplicitCastExpr 0x142116910 <col:36> 'int' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1421168d0 <col:36> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   |       | | | `-IntegerLiteral 0x1421168f0 <col:42> 'int' 0
|   |       | | |-<<<NULL>>>
|   |       | | `-CompoundStmt 0x142118830 <col:47, line:47:7>
|   |       | |   |-DeclStmt 0x1421169c8 <line:15:9, col:24>
|   |       | |   | `-VarDecl 0x142116960 <col:9, col:21> col:21 used ptr 'const char *'
|   |       | |   `-IfStmt 0x142118810 <line:16:9, line:46:9>
|   |       | |     |-RecoveryExpr 0x142117160 <line:16:13, line:17:52> '_Bool' contains-errors
|   |       | |     `-CompoundStmt 0x1421187e8 <col:58, line:46:9>
|   |       | |       |-CompoundAssignOperator 0x142117390 <line:18:11, col:63> 'int' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |       | |       | |-DeclRefExpr 0x142117180 <col:11> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   |       | |       | `-BinaryOperator 0x142117370 <col:30, col:63> 'long' '+'
|   |       | |       |   |-BinaryOperator 0x142117218 <col:30, col:36> 'long' '-'
|   |       | |       |   | |-ImplicitCastExpr 0x1421171e0 <col:30> 'const char *' <LValueToRValue>
|   |       | |       |   | | `-DeclRefExpr 0x1421171a0 <col:30> 'const char *' lvalue Var 0x142116960 'ptr' 'const char *'
|   |       | |       |   | `-ImplicitCastExpr 0x142117200 <col:36> 'const char *' <LValueToRValue>
|   |       | |       |   |   `-DeclRefExpr 0x1421171c0 <col:36> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |       |   `-ImplicitCastExpr 0x142117358 <col:43, col:63> 'long' <IntegralCast>
|   |       | |       |     `-ParenExpr 0x142117338 <col:43, col:63> 'int'
|   |       | |       |       `-ConditionalOperator 0x142117308 <col:44, col:62> 'int'
|   |       | |       |         |-BinaryOperator 0x1421172a8 <col:44, col:52> 'int' '=='
|   |       | |       |         | |-ImplicitCastExpr 0x142117278 <col:44> 'const char *' <LValueToRValue>
|   |       | |       |         | | `-DeclRefExpr 0x142117238 <col:44> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |       |         | `-ImplicitCastExpr 0x142117290 <col:52> 'const char *' <LValueToRValue>
|   |       | |       |         |   `-DeclRefExpr 0x142117258 <col:52> 'const char *' lvalue ParmVar 0x142113ea8 'buf' 'const char *'
|   |       | |       |         |-IntegerLiteral 0x1421172c8 <col:58> 'int' 2
|   |       | |       |         `-IntegerLiteral 0x1421172e8 <col:62> 'int' 4
|   |       | |       |-BinaryOperator 0x142117558 <line:19:11, col:56> 'const char *' '='
|   |       | |       | |-DeclRefExpr 0x1421173c0 <col:11> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |       | `-BinaryOperator 0x142117538 <col:30, col:56> 'const char *' '+'
|   |       | |       |   |-ImplicitCastExpr 0x142117520 <col:30> 'const char *' <LValueToRValue>
|   |       | |       |   | `-DeclRefExpr 0x1421173e0 <col:30> 'const char *' lvalue Var 0x142116960 'ptr' 'const char *'
|   |       | |       |   `-ParenExpr 0x142117500 <col:36, col:56> 'int'
|   |       | |       |     `-ConditionalOperator 0x1421174d0 <col:37, col:55> 'int'
|   |       | |       |       |-BinaryOperator 0x142117470 <col:37, col:45> 'int' '=='
|   |       | |       |       | |-ImplicitCastExpr 0x142117440 <col:37> 'const char *' <LValueToRValue>
|   |       | |       |       | | `-DeclRefExpr 0x142117400 <col:37> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |       |       | `-ImplicitCastExpr 0x142117458 <col:45> 'const char *' <LValueToRValue>
|   |       | |       |       |   `-DeclRefExpr 0x142117420 <col:45> 'const char *' lvalue ParmVar 0x142113ea8 'buf' 'const char *'
|   |       | |       |       |-IntegerLiteral 0x142117490 <col:51> 'int' 2
|   |       | |       |       `-IntegerLiteral 0x1421174b0 <col:55> 'int' 4
|   |       | |       `-IfStmt 0x1421187c8 <line:20:11, line:45:11>
|   |       | |         |-UnaryOperator 0x142117770 <line:20:15, col:45> 'int' contains-errors prefix '!' cannot overflow
|   |       | |         | `-CallExpr 0x1421176f0 <col:16, col:45> 'int' contains-errors
|   |       | |         |   |-ImplicitCastExpr 0x1421176d8 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | |         |   | `-DeclRefExpr 0x142117658 <col:16> 'int ()' Function 0x1421175a0 'urlMemcmp' 'int ()'
|   |       | |         |   |-ImplicitCastExpr 0x142117728 <col:26> 'const char *' <LValueToRValue>
|   |       | |         |   | `-DeclRefExpr 0x142117678 <col:26> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |         |   |-ImplicitCastExpr 0x142117740 <col:32> 'int' <LValueToRValue>
|   |       | |         |   | `-DeclRefExpr 0x142117698 <col:32> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   |       | |         |   `-ImplicitCastExpr 0x142117758 <col:37> 'const char *' contains-errors <LValueToRValue>
|   |       | |         |     `-DeclRefExpr 0x1421176b8 <col:37> 'const char *' contains-errors lvalue Var 0x142116530 'boundary' 'const char *'
|   |       | |         `-CompoundStmt 0x142118798 <col:48, line:45:11>
|   |       | |           |-DeclStmt 0x1421178d0 <line:21:13, col:46>
|   |       | |           | `-VarDecl 0x1421177a0 <col:13, col:45> col:17 used i 'int' cinit
|   |       | |           |   `-ImplicitCastExpr 0x1421178b8 <col:30, col:45> 'int' contains-errors <IntegralCast>
|   |       | |           |     `-CallExpr 0x142117878 <col:30, col:45> 'unsigned long' contains-errors
|   |       | |           |       |-ImplicitCastExpr 0x142117860 <col:30> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | |           |       | `-DeclRefExpr 0x142117808 <col:30> 'unsigned long (const char *)' Function 0x1421149c8 'strlen' 'unsigned long (const char *)'
|   |       | |           |       `-ImplicitCastExpr 0x1421178a0 <col:37> 'const char *' contains-errors <LValueToRValue>
|   |       | |           |         `-DeclRefExpr 0x142117828 <col:37> 'const char *' contains-errors lvalue Var 0x142116530 'boundary' 'const char *'
|   |       | |           |-CompoundAssignOperator 0x142117940 <line:22:13, col:30> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |           | |-DeclRefExpr 0x1421178e8 <col:13> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   |       | |           | `-ImplicitCastExpr 0x142117928 <col:30> 'int' contains-errors <LValueToRValue>
|   |       | |           |   `-DeclRefExpr 0x142117908 <col:30> 'int' contains-errors lvalue Var 0x1421177a0 'i' 'int'
|   |       | |           |-CompoundAssignOperator 0x1421179c8 <line:23:13, col:30> 'const char *' contains-errors '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |       | |           | |-DeclRefExpr 0x142117970 <col:13> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |           | `-ImplicitCastExpr 0x1421179b0 <col:30> 'int' contains-errors <LValueToRValue>
|   |       | |           |   `-DeclRefExpr 0x142117990 <col:30> 'int' contains-errors lvalue Var 0x1421177a0 'i' 'int'
|   |       | |           `-IfStmt 0x142118768 <line:24:13, line:44:13> has_else
|   |       | |             |-UnaryOperator 0x142117b10 <line:24:17, col:44> 'int' prefix '!' cannot overflow
|   |       | |             | `-CallExpr 0x142117a90 <col:18, col:44> 'int'
|   |       | |             |   |-ImplicitCastExpr 0x142117a78 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |       | |             |   | `-DeclRefExpr 0x1421179f8 <col:18> 'int ()' Function 0x1421175a0 'urlMemcmp' 'int ()'
|   |       | |             |   |-ImplicitCastExpr 0x142117ac8 <col:28> 'const char *' <LValueToRValue>
|   |       | |             |   | `-DeclRefExpr 0x142117a18 <col:28> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |             |   |-ImplicitCastExpr 0x142117ae0 <col:34> 'int' <LValueToRValue>
|   |       | |             |   | `-DeclRefExpr 0x142117a38 <col:34> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   |       | |             |   `-ImplicitCastExpr 0x142117af8 <col:39> 'char *' <ArrayToPointerDecay>
|   |       | |             |     `-StringLiteral 0x142117a58 <col:39> 'char[4]' lvalue "STR"
|   |       | |             |-CompoundStmt 0x1421181a8 <col:47, line:35:13>
|   |       | |             | |-CompoundAssignOperator 0x142117b68 <line:25:15, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |             | | |-DeclRefExpr 0x142117b28 <col:15> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   |       | |             | | `-IntegerLiteral 0x142117b48 <col:30> 'int' 2
|   |       | |             | |-CompoundAssignOperator 0x142117bd8 <line:26:15, col:30> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |       | |             | | |-DeclRefExpr 0x142117b98 <col:15> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |             | | `-IntegerLiteral 0x142117bb8 <col:30> 'int' 2
|   |       | |             | |-IfStmt 0x142118100 <line:27:15, line:33:15> has_else
|   |       | |             | | |-ImplicitCastExpr 0x142117c28 <line:27:19> 'const char *' contains-errors <LValueToRValue>
|   |       | |             | | | `-DeclRefExpr 0x142117c08 <col:19> 'const char *' contains-errors lvalue Var 0x142116748 'lastPart' 'const char *'
|   |       | |             | | |-CompoundStmt 0x142117e90 <col:29, line:29:15>
|   |       | |             | | | `-CallExpr 0x142117e28 <line:28:17, col:59> 'int' contains-errors
|   |       | |             | | |   |-ImplicitCastExpr 0x142117e10 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       | |             | | |   | `-DeclRefExpr 0x142117d20 <col:17> 'int ()' Function 0x142117c68 'urlParsePart' 'int ()'
|   |       | |             | | |   |-ImplicitCastExpr 0x142117e60 <col:30> 'struct URL *' <LValueToRValue>
|   |       | |             | | |   | `-DeclRefExpr 0x142117d40 <col:30> 'struct URL *' lvalue ParmVar 0x1420fba48 'url' 'struct URL *'
|   |       | |             | | |   |-ImplicitCastExpr 0x142117e78 <col:35> 'const char *' contains-errors <LValueToRValue>
|   |       | |             | | |   | `-DeclRefExpr 0x142117d60 <col:35> 'const char *' contains-errors lvalue Var 0x142116748 'lastPart' 'const char *'
|   |       | |             | | |   `-BinaryOperator 0x142117df0 <col:45, col:51> 'long' contains-errors '-'
|   |       | |             | | |     |-ImplicitCastExpr 0x142117dc0 <col:45> 'const char *' <LValueToRValue>
|   |       | |             | | |     | `-DeclRefExpr 0x142117d80 <col:45> 'const char *' lvalue Var 0x142116960 'ptr' 'const char *'
|   |       | |             | | |     `-ImplicitCastExpr 0x142117dd8 <col:51> 'const char *' contains-errors <LValueToRValue>
|   |       | |             | | |       `-DeclRefExpr 0x142117da0 <col:51> 'const char *' contains-errors lvalue Var 0x142116748 'lastPart' 'const char *'
|   |       | |             | | `-CompoundStmt 0x1421180e8 <line:29:22, line:33:15>
|   |       | |             | |   `-IfStmt 0x1421180c8 <line:30:17, line:32:17>
|   |       | |             | |     |-BinaryOperator 0x142117f18 <line:30:21, col:28> 'int' '!='
|   |       | |             | |     | |-ImplicitCastExpr 0x142117ee8 <col:21> 'const char *' <LValueToRValue>
|   |       | |             | |     | | `-DeclRefExpr 0x142117ea8 <col:21> 'const char *' lvalue Var 0x142116960 'ptr' 'const char *'
|   |       | |             | |     | `-ImplicitCastExpr 0x142117f00 <col:28> 'const char *' <LValueToRValue>
|   |       | |             | |     |   `-DeclRefExpr 0x142117ec8 <col:28> 'const char *' lvalue ParmVar 0x142113ea8 'buf' 'const char *'
|   |       | |             | |     `-CompoundStmt 0x1421180b0 <col:33, line:32:17>
|   |       | |             | |       `-CallExpr 0x142118070 <line:31:19, col:29> 'int'
|   |       | |             | |         |-ImplicitCastExpr 0x142118058 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |       | |             | |         | `-DeclRefExpr 0x142118018 <col:19> 'int ()' Function 0x142117f60 'info' 'int ()'
|   |       | |             | |         `-ImplicitCastExpr 0x142118098 <col:24> 'char *' <ArrayToPointerDecay>
|   |       | |             | |           `-StringLiteral 0x142118038 <col:24> 'char[4]' lvalue "STR"
|   |       | |             | `-BinaryOperator 0x142118188 <line:34:15, col:30> 'const char *' contains-errors '='
|   |       | |             |   |-DeclRefExpr 0x142118130 <col:15> 'const char *' contains-errors lvalue Var 0x142116748 'lastPart' 'const char *'
|   |       | |             |   `-ImplicitCastExpr 0x142118170 <col:30> 'const char *' <LValueToRValue>
|   |       | |             |     `-DeclRefExpr 0x142118150 <col:30> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |             `-IfStmt 0x142118748 <line:35:20, line:44:13>
|   |       | |               |-UnaryOperator 0x1421182f8 <line:35:24, col:51> 'int' prefix '!' cannot overflow
|   |       | |               | `-CallExpr 0x142118278 <col:25, col:51> 'int'
|   |       | |               |   |-ImplicitCastExpr 0x142118260 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |       | |               |   | `-DeclRefExpr 0x1421181d8 <col:25> 'int ()' Function 0x1421175a0 'urlMemcmp' 'int ()'
|   |       | |               |   |-ImplicitCastExpr 0x1421182b0 <col:35> 'const char *' <LValueToRValue>
|   |       | |               |   | `-DeclRefExpr 0x142118200 <col:35> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |               |   |-ImplicitCastExpr 0x1421182c8 <col:41> 'int' <LValueToRValue>
|   |       | |               |   | `-DeclRefExpr 0x142118220 <col:41> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   |       | |               |   `-ImplicitCastExpr 0x1421182e0 <col:46> 'char *' <ArrayToPointerDecay>
|   |       | |               |     `-StringLiteral 0x142118240 <col:46> 'char[4]' lvalue "STR"
|   |       | |               `-CompoundStmt 0x142118718 <col:54, line:44:13>
|   |       | |                 |-CompoundAssignOperator 0x142118350 <line:36:15, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |                 | |-DeclRefExpr 0x142118310 <col:15> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   |       | |                 | `-IntegerLiteral 0x142118330 <col:30> 'int' 4
|   |       | |                 |-CompoundAssignOperator 0x1421183c0 <line:37:15, col:30> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |       | |                 | |-DeclRefExpr 0x142118380 <col:15> 'const char *' lvalue Var 0x142116818 'part' 'const char *'
|   |       | |                 | `-IntegerLiteral 0x1421183a0 <col:30> 'int' 4
|   |       | |                 |-CallExpr 0x1421184f8 <line:38:15, col:57> 'int' contains-errors
|   |       | |                 | |-ImplicitCastExpr 0x1421184e0 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |       | |                 | | `-DeclRefExpr 0x1421183f0 <col:15> 'int ()' Function 0x142117c68 'urlParsePart' 'int ()'
|   |       | |                 | |-ImplicitCastExpr 0x142118530 <col:28> 'struct URL *' <LValueToRValue>
|   |       | |                 | | `-DeclRefExpr 0x142118410 <col:28> 'struct URL *' lvalue ParmVar 0x1420fba48 'url' 'struct URL *'
|   |       | |                 | |-ImplicitCastExpr 0x142118548 <col:33> 'const char *' contains-errors <LValueToRValue>
|   |       | |                 | | `-DeclRefExpr 0x142118430 <col:33> 'const char *' contains-errors lvalue Var 0x142116748 'lastPart' 'const char *'
|   |       | |                 | `-BinaryOperator 0x1421184c0 <col:43, col:49> 'long' contains-errors '-'
|   |       | |                 |   |-ImplicitCastExpr 0x142118490 <col:43> 'const char *' <LValueToRValue>
|   |       | |                 |   | `-DeclRefExpr 0x142118450 <col:43> 'const char *' lvalue Var 0x142116960 'ptr' 'const char *'
|   |       | |                 |   `-ImplicitCastExpr 0x1421184a8 <col:49> 'const char *' contains-errors <LValueToRValue>
|   |       | |                 |     `-DeclRefExpr 0x142118470 <col:49> 'const char *' contains-errors lvalue Var 0x142116748 'lastPart' 'const char *'
|   |       | |                 `-IfStmt 0x1421186f8 <line:40:15, line:43:15>
|   |       | |                   |-BinaryOperator 0x1421185d8 <line:40:19, col:25> 'int' '>'
|   |       | |                   | |-ImplicitCastExpr 0x1421185c0 <col:19> 'int' <LValueToRValue>
|   |       | |                   | | `-DeclRefExpr 0x142118580 <col:19> 'int' lvalue ParmVar 0x142113f28 'len' 'int'
|   |       | |                   | `-IntegerLiteral 0x1421185a0 <col:25> 'int' 0
|   |       | |                   `-CompoundStmt 0x1421186e0 <col:28, line:43:15>
|   |       | |                     `-CallExpr 0x1421186a0 <line:41:17, line:42:15> 'int'
|   |       | |                       |-ImplicitCastExpr 0x142118688 <line:41:17> 'int (*)()' <FunctionToPointerDecay>
|   |       | |                       | `-DeclRefExpr 0x1421185f8 <col:17> 'int ()' Function 0x142117f60 'info' 'int ()'
|   |       | |                       `-ImplicitCastExpr 0x1421186c8 <col:22, line:42:10> 'char *' <ArrayToPointerDecay>
|   |       | |                         `-StringLiteral 0x142118660 <line:41:22, line:42:10> 'char[7]' lvalue "STRSTR"
|   |       | `-IfStmt 0x142118a50 <line:48:7, line:50:7>
|   |       |   |-ImplicitCastExpr 0x1421188a8 <line:48:11> 'const char *' contains-errors <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x142118888 <col:11> 'const char *' contains-errors lvalue Var 0x142116748 'lastPart' 'const char *'
|   |       |   `-CompoundStmt 0x142118a38 <col:21, line:50:7>
|   |       |     `-CallExpr 0x1421189f8 <line:49:9, col:19> 'int'
|   |       |       |-ImplicitCastExpr 0x1421189e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x1421189a0 <col:9> 'int ()' Function 0x1421188e8 'warn' 'int ()'
|   |       |       `-ImplicitCastExpr 0x142118a20 <col:14> 'char *' <ArrayToPointerDecay>
|   |       |         `-StringLiteral 0x1421189c0 <col:14> 'char[4]' lvalue "STR"
|   |       `-CompoundStmt 0x142118b30 <line:51:12, line:53:5>
|   |         `-CallExpr 0x142118af0 <line:52:7, col:17> 'int'
|   |           |-ImplicitCastExpr 0x142118ad8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x142118a98 <col:7> 'int ()' Function 0x1421188e8 'warn' 'int ()'
|   |           `-ImplicitCastExpr 0x142118b18 <col:12> 'char *' <ArrayToPointerDecay>
|   |             `-StringLiteral 0x142118ab8 <col:12> 'char[4]' lvalue "STR"
|   `-CallExpr 0x142118d20 <line:55:3, col:30> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x142118cc8 <col:3> 'int ()' Function 0x142118c10 'destroyHashMap' 'int ()'
|     `-UnaryOperator 0x142118d08 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|       `-RecoveryExpr 0x142118ce8 <col:19> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x1421149c8 <line:7:57> col:57 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x142114ac8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x142114a70 <<invalid sloc>> Implicit 902
