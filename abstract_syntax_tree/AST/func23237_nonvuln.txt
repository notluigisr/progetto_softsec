TranslationUnitDecl 0x12a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a055bd0 '__int128'
|-TypedefDecl 0x12a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a055bf0 'unsigned __int128'
|-TypedefDecl 0x12a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12a056580 '__NSConstantString_tag'
|-TypedefDecl 0x12a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a055d90 '__SVInt8_t'
|-TypedefDecl 0x12a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a055db0 '__SVInt16_t'
|-TypedefDecl 0x12a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a055dd0 '__SVInt32_t'
|-TypedefDecl 0x12a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a055df0 '__SVInt64_t'
|-TypedefDecl 0x12a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a055e10 '__SVUint8_t'
|-TypedefDecl 0x12a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a055e30 '__SVUint16_t'
|-TypedefDecl 0x12a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a055e50 '__SVUint32_t'
|-TypedefDecl 0x12a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a055e70 '__SVUint64_t'
|-TypedefDecl 0x12a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a055e90 '__SVFloat16_t'
|-TypedefDecl 0x12a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a056390 '__SVBool_t'
|-TypedefDecl 0x12a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a0563f0 '__SVCount_t'
|-TypedefDecl 0x12a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a80dbb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-TypedefDecl 0x12a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a80dbb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-FunctionDecl 0x12a80df48 <dataset_diviso_filec/func23237_nonvuln.c:1:1, line:55:1> line:1:12 invalid vdbeRecordCompareString 'int (int, const void *, int *)' static
| |-ParmVarDecl 0x12a80dcd8 <line:2:3, col:7> col:7 used nKey1 'int'
| |-ParmVarDecl 0x12a80dd88 <col:14, col:26> col:26 used pKey1 'const void *'
| |-ParmVarDecl 0x12a80de58 <line:3:3, col:19> col:19 referenced invalid pPKey2 'int *'
| `-CompoundStmt 0x12a82b560 <line:4:2, line:55:1>
|   |-DeclStmt 0x12a80e088 <line:5:3, col:37>
|   | `-VarDecl 0x12a80e020 <col:3, col:13> col:13 invalid aKey1 'const int *'
|   |-DeclStmt 0x12a80e120 <line:6:3, col:18>
|   | `-VarDecl 0x12a80e0b8 <col:3, col:7> col:7 used serial_type 'int'
|   |-DeclStmt 0x12a80e1b8 <line:7:3, col:10>
|   | `-VarDecl 0x12a80e150 <col:3, col:7> col:7 used res 'int'
|   |-CallExpr 0x12a827608 <line:9:3, col:43> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12a80e330 <col:3> 'int ()' Function 0x12a80e278 'assert' 'int ()'
|   | `-BinaryOperator 0x12a8275e8 <col:11, col:35> '<dependent type>' contains-errors '&'
|   |   |-CXXDependentScopeMemberExpr 0x12a827580 <col:11, col:27> '<dependent type>' contains-errors lvalue .flags
|   |   | `-ArraySubscriptExpr 0x12a827560 <col:11, col:25> '<dependent type>' contains-errors lvalue
|   |   |   |-ImplicitCastExpr 0x12a827548 <col:11, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | `-CXXDependentScopeMemberExpr 0x12a80e370 <col:11, col:19> '<dependent type>' contains-errors lvalue ->aMem
|   |   |   |   `-RecoveryExpr 0x12a80e350 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x12a80e3b8 <col:24> 'int' 0
|   |   `-RecoveryExpr 0x12a8275c8 <col:35> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12a8277d8 <line:10:3, col:66> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12a827710 <col:3> 'int ()' Function 0x12a827658 'vdbeAssertFieldCountWithinLimits' 'int ()'
|   | |-DeclRefExpr 0x12a827730 <col:36> 'int' lvalue ParmVar 0x12a80dcd8 'nKey1' 'int'
|   | |-DeclRefExpr 0x12a827750 <col:43> 'const void *' lvalue ParmVar 0x12a80dd88 'pKey1' 'const void *'
|   | `-CXXDependentScopeMemberExpr 0x12a827790 <col:50, col:58> '<dependent type>' contains-errors lvalue ->pKeyInfo
|   |   `-RecoveryExpr 0x12a827770 <col:50> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12a8279c0 <line:11:3, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12a8278f0 <col:3> 'int ()' Function 0x12a827838 'getVarint32' 'int ()'
|   | |-UnaryOperator 0x12a827988 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-ArraySubscriptExpr 0x12a827968 <col:16, col:23> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x12a827950 <col:16> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x12a827910 <col:16> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x12a827930 <col:22> 'int' 1
|   | `-DeclRefExpr 0x12a8279a0 <col:26> 'int' lvalue Var 0x12a80e0b8 'serial_type' 'int'
|   |-IfStmt 0x12a82b108 <line:12:3, line:48:3> has_else
|   | |-BinaryOperator 0x12a827a48 <line:12:7, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x12a827a30 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12a8279f0 <col:7> 'int' lvalue Var 0x12a80e0b8 'serial_type' 'int'
|   | | `-IntegerLiteral 0x12a827a10 <col:19> 'int' 12
|   | |-CompoundStmt 0x12a827b10 <col:23, line:14:3>
|   | | `-BinaryOperator 0x12a827af0 <line:13:5, col:19> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x12a827a68 <col:5> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   | |   `-CXXDependentScopeMemberExpr 0x12a827aa8 <col:11, col:19> '<dependent type>' contains-errors lvalue ->r1
|   | |     `-RecoveryExpr 0x12a827a88 <col:11> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x12a82b0d8 <line:14:9, line:48:3> has_else
|   |   |-UnaryOperator 0x12a827bc0 <line:14:13, col:33> 'int' prefix '!' cannot overflow
|   |   | `-ParenExpr 0x12a827ba0 <col:14, col:33> 'int'
|   |   |   `-BinaryOperator 0x12a827b80 <col:15, col:29> 'int' '&'
|   |   |     |-ImplicitCastExpr 0x12a827b68 <col:15> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12a827b28 <col:15> 'int' lvalue Var 0x12a80e0b8 'serial_type' 'int'
|   |   |     `-IntegerLiteral 0x12a827b48 <col:29> 'int' 1
|   |   |-CompoundStmt 0x12a827c80 <col:36, line:16:3>
|   |   | `-BinaryOperator 0x12a827c60 <line:15:5, col:19> 'int' contains-errors '='
|   |   |   |-DeclRefExpr 0x12a827bd8 <col:5> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |   |   `-CXXDependentScopeMemberExpr 0x12a827c18 <col:11, col:19> '<dependent type>' contains-errors lvalue ->r2
|   |   |     `-RecoveryExpr 0x12a827bf8 <col:11> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x12a82b088 <line:16:8, line:48:3>
|   |     |-DeclStmt 0x12a827d18 <line:17:5, col:13>
|   |     | `-VarDecl 0x12a827cb0 <col:5, col:9> col:9 used nCmp 'int'
|   |     |-DeclStmt 0x12a827db0 <line:18:5, col:13>
|   |     | `-VarDecl 0x12a827d48 <col:5, col:9> col:9 used nStr 'int'
|   |     |-DeclStmt 0x12a827ec0 <line:19:5, col:25>
|   |     | `-VarDecl 0x12a827de0 <col:5, col:24> col:9 used szHdr 'int' cinit
|   |     |   `-ArraySubscriptExpr 0x12a827ea0 <col:17, col:24> '<dependent type>' contains-errors lvalue
|   |     |     |-ImplicitCastExpr 0x12a827e88 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |     |     | `-RecoveryExpr 0x12a827e48 <col:17> '<dependent type>' contains-errors lvalue
|   |     |     `-IntegerLiteral 0x12a827e68 <col:23> 'int' 0
|   |     |-BinaryOperator 0x12a827fd0 <line:21:5, col:31> 'int' '='
|   |     | |-DeclRefExpr 0x12a827ed8 <col:5> 'int' lvalue Var 0x12a827d48 'nStr' 'int'
|   |     | `-BinaryOperator 0x12a827fb0 <col:12, col:31> 'int' '/'
|   |     |   |-ParenExpr 0x12a827f70 <col:12, col:27> 'int'
|   |     |   | `-BinaryOperator 0x12a827f50 <col:13, col:25> 'int' '-'
|   |     |   |   |-ImplicitCastExpr 0x12a827f38 <col:13> 'int' <LValueToRValue>
|   |     |   |   | `-DeclRefExpr 0x12a827ef8 <col:13> 'int' lvalue Var 0x12a80e0b8 'serial_type' 'int'
|   |     |   |   `-IntegerLiteral 0x12a827f18 <col:25> 'int' 12
|   |     |   `-IntegerLiteral 0x12a827f90 <col:31> 'int' 2
|   |     |-IfStmt 0x12a8281e8 <line:22:5, line:25:5>
|   |     | |-BinaryOperator 0x12a8280d8 <line:22:9, col:26> 'int' contains-errors '>'
|   |     | | |-ParenExpr 0x12a828080 <col:9, col:22> 'int' contains-errors
|   |     | | | `-BinaryOperator 0x12a828060 <col:10, col:18> 'int' contains-errors '+'
|   |     | | |   |-ImplicitCastExpr 0x12a828030 <col:10> 'int' contains-errors <LValueToRValue>
|   |     | | |   | `-DeclRefExpr 0x12a827ff0 <col:10> 'int' contains-errors lvalue Var 0x12a827de0 'szHdr' 'int'
|   |     | | |   `-ImplicitCastExpr 0x12a828048 <col:18> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x12a828010 <col:18> 'int' lvalue Var 0x12a827d48 'nStr' 'int'
|   |     | | `-ImplicitCastExpr 0x12a8280c0 <col:26> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x12a8280a0 <col:26> 'int' lvalue ParmVar 0x12a80dcd8 'nKey1' 'int'
|   |     | `-CompoundStmt 0x12a8281d0 <col:33, line:25:5>
|   |     |   `-ReturnStmt 0x12a8281c0 <line:24:7, col:14>
|   |     |     `-IntegerLiteral 0x12a8281a0 <col:14> 'int' 0
|   |     |-BinaryOperator 0x12a829298 <line:26:5, col:41> 'int' contains-errors '='
|   |     | |-DeclRefExpr 0x12a828208 <col:5> 'int' lvalue Var 0x12a827cb0 'nCmp' 'int'
|   |     | `-CallExpr 0x12a829268 <col:12, col:41> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x12a828308 <col:12> 'int ()' Function 0x12a828250 'MIN' 'int ()'
|   |     |   |-CXXDependentScopeMemberExpr 0x12a829200 <col:17, col:33> '<dependent type>' contains-errors lvalue .n
|   |     |   | `-ArraySubscriptExpr 0x12a8283c8 <col:17, col:31> '<dependent type>' contains-errors lvalue
|   |     |   |   |-ImplicitCastExpr 0x12a8283b0 <col:17, col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   |   | `-CXXDependentScopeMemberExpr 0x12a828348 <col:17, col:25> '<dependent type>' contains-errors lvalue ->aMem
|   |     |   |   |   `-RecoveryExpr 0x12a828328 <col:17> '<dependent type>' contains-errors lvalue
|   |     |   |   `-IntegerLiteral 0x12a828390 <col:30> 'int' 0
|   |     |   `-DeclRefExpr 0x12a829248 <col:36> 'int' lvalue Var 0x12a827d48 'nStr' 'int'
|   |     |-BinaryOperator 0x12a829bf8 <line:27:5, col:56> 'int' contains-errors '='
|   |     | |-DeclRefExpr 0x12a8292b8 <col:5> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |     | `-CallExpr 0x12a829bc0 <col:11, col:56> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x12a8299a0 <col:11> 'int (const void *, const void *, unsigned long)' Function 0x12a829750 'memcmp' 'int (const void *, const void *, unsigned long)'
|   |     |   |-UnaryOperator 0x12a829a50 <col:18, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     |   | `-ArraySubscriptExpr 0x12a829a30 <col:19, col:30> '<dependent type>' contains-errors lvalue
|   |     |   |   |-ImplicitCastExpr 0x12a829a00 <col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   |   | `-RecoveryExpr 0x12a8299c0 <col:19> '<dependent type>' contains-errors lvalue
|   |     |   |   `-ImplicitCastExpr 0x12a829a18 <col:25> 'int' contains-errors <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x12a8299e0 <col:25> 'int' contains-errors lvalue Var 0x12a827de0 'szHdr' 'int'
|   |     |   |-CXXDependentScopeMemberExpr 0x12a829b28 <col:33, col:49> '<dependent type>' contains-errors lvalue .z
|   |     |   | `-ArraySubscriptExpr 0x12a829b08 <col:33, col:47> '<dependent type>' contains-errors lvalue
|   |     |   |   |-ImplicitCastExpr 0x12a829af0 <col:33, col:41> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   |   | `-CXXDependentScopeMemberExpr 0x12a829a88 <col:33, col:41> '<dependent type>' contains-errors lvalue ->aMem
|   |     |   |   |   `-RecoveryExpr 0x12a829a68 <col:33> '<dependent type>' contains-errors lvalue
|   |     |   |   `-IntegerLiteral 0x12a829ad0 <col:46> 'int' 0
|   |     |   `-DeclRefExpr 0x12a829b70 <col:52> 'int' lvalue Var 0x12a827cb0 'nCmp' 'int'
|   |     `-IfStmt 0x12a82b058 <line:29:5, line:47:5> has_else
|   |       |-BinaryOperator 0x12a829c70 <line:29:9, col:13> 'int' '>'
|   |       | |-ImplicitCastExpr 0x12a829c58 <col:9> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x12a829c18 <col:9> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |       | `-IntegerLiteral 0x12a829c38 <col:13> 'int' 0
|   |       |-CompoundStmt 0x12a829d38 <col:16, line:31:5>
|   |       | `-BinaryOperator 0x12a829d18 <line:30:7, col:21> 'int' contains-errors '='
|   |       |   |-DeclRefExpr 0x12a829c90 <col:7> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |       |   `-CXXDependentScopeMemberExpr 0x12a829cd0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->r2
|   |       |     `-RecoveryExpr 0x12a829cb0 <col:13> '<dependent type>' contains-errors lvalue
|   |       `-IfStmt 0x12a82b028 <line:31:11, line:47:5> has_else
|   |         |-BinaryOperator 0x12a829da8 <line:31:15, col:19> 'int' '<'
|   |         | |-ImplicitCastExpr 0x12a829d90 <col:15> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x12a829d50 <col:15> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |         | `-IntegerLiteral 0x12a829d70 <col:19> 'int' 0
|   |         |-CompoundStmt 0x12a829e70 <col:22, line:33:5>
|   |         | `-BinaryOperator 0x12a829e50 <line:32:7, col:21> 'int' contains-errors '='
|   |         |   |-DeclRefExpr 0x12a829dc8 <col:7> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |         |   `-CXXDependentScopeMemberExpr 0x12a829e08 <col:13, col:21> '<dependent type>' contains-errors lvalue ->r1
|   |         |     `-RecoveryExpr 0x12a829de8 <col:13> '<dependent type>' contains-errors lvalue
|   |         `-CompoundStmt 0x12a82b008 <line:33:10, line:47:5>
|   |           |-BinaryOperator 0x12a829ff0 <line:34:7, col:36> 'int' contains-errors '='
|   |           | |-DeclRefExpr 0x12a829e88 <col:7> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |           | `-BinaryOperator 0x12a829fd0 <col:13, col:36> '<dependent type>' contains-errors '-'
|   |           |   |-DeclRefExpr 0x12a829ea8 <col:13> 'int' lvalue Var 0x12a827d48 'nStr' 'int'
|   |           |   `-CXXDependentScopeMemberExpr 0x12a829f88 <col:20, col:36> '<dependent type>' contains-errors lvalue .n
|   |           |     `-ArraySubscriptExpr 0x12a829f68 <col:20, col:34> '<dependent type>' contains-errors lvalue
|   |           |       |-ImplicitCastExpr 0x12a829f50 <col:20, col:28> '<dependent type>' contains-errors <LValueToRValue>
|   |           |       | `-CXXDependentScopeMemberExpr 0x12a829ee8 <col:20, col:28> '<dependent type>' contains-errors lvalue ->aMem
|   |           |       |   `-RecoveryExpr 0x12a829ec8 <col:20> '<dependent type>' contains-errors lvalue
|   |           |       `-IntegerLiteral 0x12a829f30 <col:33> 'int' 0
|   |           `-IfStmt 0x12a82afd8 <line:35:7, line:46:7> has_else
|   |             |-BinaryOperator 0x12a82a068 <line:35:11, col:16> 'int' '=='
|   |             | |-ImplicitCastExpr 0x12a82a050 <col:11> 'int' <LValueToRValue>
|   |             | | `-DeclRefExpr 0x12a82a010 <col:11> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |             | `-IntegerLiteral 0x12a82a030 <col:16> 'int' 0
|   |             |-CompoundStmt 0x12a82ad98 <col:19, line:42:7>
|   |             | `-IfStmt 0x12a82ad68 <line:36:9, line:41:9> has_else
|   |             |   |-BinaryOperator 0x12a82a110 <line:36:13, col:28> 'int' contains-errors '>'
|   |             |   | |-CXXDependentScopeMemberExpr 0x12a82a0a8 <col:13, col:21> '<dependent type>' contains-errors lvalue ->nField
|   |             |   | | `-RecoveryExpr 0x12a82a088 <col:13> '<dependent type>' contains-errors lvalue
|   |             |   | `-IntegerLiteral 0x12a82a0f0 <col:28> 'int' 1
|   |             |   |-CompoundStmt 0x12a82abb8 <col:31, line:38:9>
|   |             |   | `-BinaryOperator 0x12a82ab98 <line:37:11, col:73> 'int' contains-errors '='
|   |             |   |   |-DeclRefExpr 0x12a82a130 <col:11> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |             |   |   `-CallExpr 0x12a82ab58 <col:17, col:73> '<dependent type>' contains-errors
|   |             |   |     |-DeclRefExpr 0x12a82aab8 <col:17> 'int ()' Function 0x12a82aa00 'sqlite3VdbeRecordCompareWithSkip' 'int ()'
|   |             |   |     |-DeclRefExpr 0x12a82aad8 <col:50> 'int' lvalue ParmVar 0x12a80dcd8 'nKey1' 'int'
|   |             |   |     |-DeclRefExpr 0x12a82aaf8 <col:57> 'const void *' lvalue ParmVar 0x12a80dd88 'pKey1' 'const void *'
|   |             |   |     |-RecoveryExpr 0x12a82ab18 <col:64> '<dependent type>' contains-errors lvalue
|   |             |   |     `-IntegerLiteral 0x12a82ab38 <col:72> 'int' 1
|   |             |   `-CompoundStmt 0x12a82ad48 <line:38:14, line:41:9>
|   |             |     |-BinaryOperator 0x12a82ac58 <line:39:11, col:25> 'int' contains-errors '='
|   |             |     | |-DeclRefExpr 0x12a82abd0 <col:11> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |             |     | `-CXXDependentScopeMemberExpr 0x12a82ac10 <col:17, col:25> '<dependent type>' contains-errors lvalue ->default_rc
|   |             |     |   `-RecoveryExpr 0x12a82abf0 <col:17> '<dependent type>' contains-errors lvalue
|   |             |     `-BinaryOperator 0x12a82ad28 <line:40:11, col:28> '<dependent type>' contains-errors '='
|   |             |       |-CXXDependentScopeMemberExpr 0x12a82acc0 <col:11, col:19> '<dependent type>' contains-errors lvalue ->eqSeen
|   |             |       | `-RecoveryExpr 0x12a82ac98 <col:11> '<dependent type>' contains-errors lvalue
|   |             |       |   `-DeclRefExpr 0x12a82ac78 <col:11> 'int *' lvalue ParmVar 0x12a80de58 'pPKey2' 'int *'
|   |             |       `-IntegerLiteral 0x12a82ad08 <col:28> 'int' 1
|   |             `-IfStmt 0x12a82afa8 <line:42:13, line:46:7> has_else
|   |               |-BinaryOperator 0x12a82ae08 <line:42:17, col:21> 'int' '>'
|   |               | |-ImplicitCastExpr 0x12a82adf0 <col:17> 'int' <LValueToRValue>
|   |               | | `-DeclRefExpr 0x12a82adb0 <col:17> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |               | `-IntegerLiteral 0x12a82add0 <col:21> 'int' 0
|   |               |-CompoundStmt 0x12a82aed0 <col:24, line:44:7>
|   |               | `-BinaryOperator 0x12a82aeb0 <line:43:9, col:23> 'int' contains-errors '='
|   |               |   |-DeclRefExpr 0x12a82ae28 <col:9> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |               |   `-CXXDependentScopeMemberExpr 0x12a82ae68 <col:15, col:23> '<dependent type>' contains-errors lvalue ->r2
|   |               |     `-RecoveryExpr 0x12a82ae48 <col:15> '<dependent type>' contains-errors lvalue
|   |               `-CompoundStmt 0x12a82af90 <line:44:12, line:46:7>
|   |                 `-BinaryOperator 0x12a82af70 <line:45:9, col:23> 'int' contains-errors '='
|   |                   |-DeclRefExpr 0x12a82aee8 <col:9> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |                   `-CXXDependentScopeMemberExpr 0x12a82af28 <col:15, col:23> '<dependent type>' contains-errors lvalue ->r1
|   |                     `-RecoveryExpr 0x12a82af08 <col:15> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12a82b4f0 <line:50:3, line:53:3> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12a82b138 <line:50:3> 'int ()' Function 0x12a80e278 'assert' 'int ()'
|   | `-BinaryOperator 0x12a82b4d0 <col:11, line:52:33> 'int' contains-errors '||'
|   |   |-BinaryOperator 0x12a82b4b0 <line:50:11, line:51:11> 'int' contains-errors '||'
|   |   | |-CallExpr 0x12a82b2d8 <line:50:11, col:59> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x12a82b238 <col:11> 'int ()' Function 0x12a82b180 'vdbeRecordCompareDebug' 'int ()'
|   |   | | |-DeclRefExpr 0x12a82b258 <col:34> 'int' lvalue ParmVar 0x12a80dcd8 'nKey1' 'int'
|   |   | | |-DeclRefExpr 0x12a82b278 <col:41> 'const void *' lvalue ParmVar 0x12a80dd88 'pKey1' 'const void *'
|   |   | | |-RecoveryExpr 0x12a82b298 <col:48> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x12a82b2b8 <col:56> 'int' lvalue Var 0x12a80e150 'res' 'int'
|   |   | `-RecoveryExpr 0x12a82b490 <line:51:11> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x12a82b400 <line:52:11, col:33> '<dependent type>' contains-errors lvalue ->mallocFailed
|   |     `-CXXDependentScopeMemberExpr 0x12a82b3b8 <col:11, col:29> '<dependent type>' contains-errors lvalue ->db
|   |       `-CXXDependentScopeMemberExpr 0x12a82b370 <col:11, col:19> '<dependent type>' contains-errors lvalue ->pKeyInfo
|   |         `-RecoveryExpr 0x12a82b350 <col:11> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12a82b550 <line:54:3, col:10>
|     `-ImplicitCastExpr 0x12a82b538 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12a82b518 <col:10> 'int' lvalue Var 0x12a80e150 'res' 'int'
`-FunctionDecl 0x12a829750 <line:27:11> col:11 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12a829850 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12a8298b8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12a829920 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12a8297f8 <<invalid sloc>> Implicit 883
