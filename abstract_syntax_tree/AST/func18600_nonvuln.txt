TranslationUnitDecl 0x128053608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280544b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128053bd0 '__int128'
|-TypedefDecl 0x128054528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128053bf0 'unsigned __int128'
|-TypedefDecl 0x128124230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128124000 'struct __NSConstantString_tag'
|   `-Record 0x128054580 '__NSConstantString_tag'
|-TypedefDecl 0x128124298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128053d90 '__SVInt8_t'
|-TypedefDecl 0x128124300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128053db0 '__SVInt16_t'
|-TypedefDecl 0x128124368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128053dd0 '__SVInt32_t'
|-TypedefDecl 0x1281243d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128053df0 '__SVInt64_t'
|-TypedefDecl 0x128124438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128053e10 '__SVUint8_t'
|-TypedefDecl 0x1281244a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128053e30 '__SVUint16_t'
|-TypedefDecl 0x128124508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128053e50 '__SVUint32_t'
|-TypedefDecl 0x128124570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128053e70 '__SVUint64_t'
|-TypedefDecl 0x1281245d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128053e90 '__SVFloat16_t'
|-TypedefDecl 0x128124640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128053eb0 '__SVFloat32_t'
|-TypedefDecl 0x1281246a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128053ed0 '__SVFloat64_t'
|-TypedefDecl 0x128124710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128053ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128124778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128053f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1281247e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128053f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128124848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128053f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1281248b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128053f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128124918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128053f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128124980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128053fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1281249e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128053fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128124a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128053ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128124ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128054010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128124b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128054030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128124b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128054050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128124bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128054070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128124c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128054090 '__clang_svint8x3_t'
|-TypedefDecl 0x128124cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280540b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128124d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280540d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128124d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280540f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128124df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128054110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128124e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128054130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128124ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128054150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128124f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128054170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128124f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128054190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128125800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280541b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128125868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280541d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1281258d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280541f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128125938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128054210 '__clang_svint8x4_t'
|-TypedefDecl 0x1281259a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128054230 '__clang_svint16x4_t'
|-TypedefDecl 0x128125a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128054250 '__clang_svint32x4_t'
|-TypedefDecl 0x128125a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128054270 '__clang_svint64x4_t'
|-TypedefDecl 0x128125ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128054290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128125b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280542b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128125ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280542d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128125c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280542f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128125c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128054310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128125ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128054330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128125d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128054350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128125db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128054370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128125e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128054390 '__SVBool_t'
|-TypedefDecl 0x128125e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280543b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128125ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280543d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128125f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280543f0 '__SVCount_t'
|-TypedefDecl 0x128125ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128125fb0 'char *'
|   `-BuiltinType 0x1280536b0 'char'
|-TypedefDecl 0x128126068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128125fb0 'char *'
|   `-BuiltinType 0x1280536b0 'char'
`-FunctionDecl 0x101008238 <dataset_diviso_filec/func18600_nonvuln.c:1:1, line:52:1> line:1:14 invalid s_start 'void *(struct seq_file *, int *)' static
  |-ParmVarDecl 0x128126648 <col:22, col:39> col:39 used m 'struct seq_file *'
  |-ParmVarDecl 0x128126718 <col:42, col:50> col:50 invalid pos 'int *'
  `-CompoundStmt 0x128140b28 <line:2:1, line:52:1>
    |-DeclStmt 0x101008538 <line:3:2, col:42>
    | |-RecordDecl 0x1010082f0 <col:2, col:9> col:9 struct trace_iterator
    | `-VarDecl 0x101008458 <col:2, col:35> col:25 used iter 'struct trace_iterator *' cinit
    |   `-RecoveryExpr 0x1010084f8 <col:32, col:35> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1010084c0 <col:32> 'struct seq_file *' lvalue ParmVar 0x128126648 'm' 'struct seq_file *'
    |-DeclStmt 0x101008798 <line:4:2, col:35>
    | |-RecordDecl 0x101008550 <col:2, col:9> col:9 struct trace_array
    | `-VarDecl 0x1010086b8 <col:2, col:33> col:22 used tr 'struct trace_array *' cinit
    |   `-RecoveryExpr 0x101008758 <col:27, col:33> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x101008720 <col:27> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    |-DeclStmt 0x101008890 <line:5:2, col:31>
    | `-VarDecl 0x1010087c8 <col:2, col:23> col:6 used cpu_file 'int' cinit
    |   `-RecoveryExpr 0x101008868 <col:17, col:23> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x101008830 <col:17> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    |-DeclStmt 0x101008960 <line:6:2, col:16>
    | `-VarDecl 0x1010088c0 <col:2, col:12> col:8 used p 'void *' cinit
    |   `-RecoveryExpr 0x101008940 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1010089f8 <line:8:2, col:9>
    | `-VarDecl 0x101008990 <col:2, col:6> col:6 used cpu 'int'
    |-CallExpr 0x101008c20 <line:11:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x101008b70 <col:2> 'int ()' Function 0x101008ab8 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x101008c08 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x101008be8 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1010090a0 <line:12:2, line:13:23>
    | |-CallExpr 0x101008f38 <line:12:6, col:80> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x101008d28 <col:6> 'int ()' Function 0x101008c70 'unlikely' 'int ()'
    | | `-BinaryOperator 0x101008f18 <col:15, col:76> 'int' contains-errors '&&'
    | |   |-RecoveryExpr 0x101008d80 <col:15, col:19> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x101008d48 <col:15> 'struct trace_array *' contains-errors lvalue Var 0x1010086b8 'tr' 'struct trace_array *'
    | |   `-BinaryOperator 0x101008ef8 <col:36, col:76> 'int' contains-errors '!='
    | |     |-CXXDependentScopeMemberExpr 0x101008e08 <col:36, col:49> '<dependent type>' contains-errors lvalue ->name
    | |     | `-RecoveryExpr 0x101008de0 <col:36, col:42> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x101008da8 <col:36> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    | |     `-CXXDependentScopeMemberExpr 0x101008eb0 <col:57, col:76> '<dependent type>' contains-errors lvalue ->name
    | |       `-RecoveryExpr 0x101008e88 <col:57, col:61> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x101008e50 <col:57> 'struct trace_array *' contains-errors lvalue Var 0x1010086b8 'tr' 'struct trace_array *'
    | `-BinaryOperator 0x101009080 <line:13:3, col:23> '<dependent type>' contains-errors '='
    |   |-UnaryOperator 0x101008fd8 <col:3, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x101008fc0 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x101008f98 <col:4, col:10> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x101008f60 <col:4> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    |   `-UnaryOperator 0x101009068 <col:18, col:23> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x101009050 <col:19, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x101009028 <col:19, col:23> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x101008ff0 <col:19> 'struct trace_array *' contains-errors lvalue Var 0x1010086b8 'tr' 'struct trace_array *'
    |-CallExpr 0x12813f860 <line:14:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1010091a0 <col:2> 'int ()' Function 0x1010090e8 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x12813f848 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12813f828 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12813fad0 <line:21:2, line:22:45>
    | |-UnaryOperator 0x12813f900 <line:21:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12813f8e8 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12813f8c0 <col:7, col:13> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12813f888 <col:7> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    | `-CallExpr 0x12813faa8 <line:22:3, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12813f9f8 <col:3> 'int ()' Function 0x12813f940 'atomic_inc' 'int ()'
    |   `-UnaryOperator 0x12813fa90 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12813fa70 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128140800 <line:24:2, line:47:2> has_else
    | |-BinaryOperator 0x12813fba0 <line:24:6, col:20> 'int' contains-errors '!='
    | | |-UnaryOperator 0x12813fb28 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x12813fb10 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x12813faf0 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12813fb78 <col:14, col:20> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12813fb40 <col:14> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    | |-CompoundStmt 0x128140550 <col:25, line:39:2>
    | | |-BinaryOperator 0x12813fca0 <line:26:3, col:15> '<dependent type>' contains-errors '='
    | | | |-RecoveryExpr 0x12813fc58 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x12813fc20 <col:3> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    | | | `-IntegerLiteral 0x12813fc80 <col:15> 'int' 0
    | | |-BinaryOperator 0x12813fd58 <line:27:3, col:16> '<dependent type>' contains-errors '='
    | | | |-RecoveryExpr 0x12813fcf8 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x12813fcc0 <col:3> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    | | | `-UnaryOperator 0x12813fd40 <col:15, col:16> 'int' prefix '-'
    | | |   `-IntegerLiteral 0x12813fd20 <col:16> 'int' 1
    | | |-IfStmt 0x128140218 <line:29:3, line:33:37> has_else
    | | | |-RecoveryExpr 0x12813fd98 <line:29:7, col:19> '_Bool' contains-errors
    | | | |-CompoundStmt 0x128140120 <col:41, line:32:3>
    | | | | |-CallExpr 0x12813ff28 <line:30:4, col:28> 'int'
    | | | | | |-ImplicitCastExpr 0x12813ff10 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | | | | | | `-DeclRefExpr 0x12813fe98 <col:4> 'int ()' Function 0x12813fde0 'for_each_tracing_cpu' 'int ()'
    | | | | | `-ImplicitCastExpr 0x12813ff50 <col:25> 'int' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x12813feb8 <col:25> 'int' lvalue Var 0x101008990 'cpu' 'int'
    | | | | `-CallExpr 0x1281400c0 <line:31:5, col:33> 'int' contains-errors
    | | | |   |-ImplicitCastExpr 0x1281400a8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | | |   | `-DeclRefExpr 0x128140048 <col:5> 'int ()' Function 0x12813ff90 'tracing_iter_reset' 'int ()'
    | | | |   |-ImplicitCastExpr 0x1281400f0 <col:24> 'struct trace_iterator *' contains-errors <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x128140068 <col:24> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    | | | |   `-ImplicitCastExpr 0x128140108 <col:30> 'int' <LValueToRValue>
    | | | |     `-DeclRefExpr 0x128140088 <col:30> 'int' lvalue Var 0x101008990 'cpu' 'int'
    | | | `-CallExpr 0x1281401b8 <line:33:4, col:37> 'int' contains-errors
    | | |   |-ImplicitCastExpr 0x1281401a0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x128140140 <col:4> 'int ()' Function 0x12813ff90 'tracing_iter_reset' 'int ()'
    | | |   |-ImplicitCastExpr 0x1281401e8 <col:23> 'struct trace_iterator *' contains-errors <LValueToRValue>
    | | |   | `-DeclRefExpr 0x128140160 <col:23> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    | | |   `-ImplicitCastExpr 0x128140200 <col:29> 'int' contains-errors <LValueToRValue>
    | | |     `-DeclRefExpr 0x128140180 <col:29> 'int' contains-errors lvalue Var 0x1010087c8 'cpu_file' 'int'
    | | `-BinaryOperator 0x1281402c8 <line:35:3, col:20> '<dependent type>' contains-errors '='
    | |   |-RecoveryExpr 0x128140280 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x128140248 <col:3> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    | |   `-IntegerLiteral 0x1281402a8 <col:20> 'int' 0
    | `-CompoundStmt 0x1281407c0 <line:39:9, line:47:2>
    |   `-IfStmt 0x128140790 <line:41:3, line:46:3> has_else
    |     |-RecoveryExpr 0x1281405b8 <line:41:7, col:13> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x128140580 <col:7> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    |     |-BinaryOperator 0x128140650 <line:42:4, col:8> 'void *' contains-errors '='
    |     | |-DeclRefExpr 0x1281405e0 <col:4> 'void *' contains-errors lvalue Var 0x1010088c0 'p' 'void *'
    |     | `-ImplicitCastExpr 0x128140638 <col:8> 'void *' contains-errors <BitCast>
    |     |   `-ImplicitCastExpr 0x128140620 <col:8> 'struct trace_iterator *' contains-errors <LValueToRValue>
    |     |     `-DeclRefExpr 0x128140600 <col:8> 'struct trace_iterator *' contains-errors lvalue Var 0x101008458 'iter' 'struct trace_iterator *'
    |     `-CompoundStmt 0x128140780 <line:43:8, line:46:3>
    |-CallExpr 0x128140948 <line:49:2, col:24> 'int'
    | `-ImplicitCastExpr 0x128140930 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x128140910 <col:2> 'int ()' Function 0x128140858 'trace_event_read_lock' 'int ()'
    |-CallExpr 0x128140aa0 <line:50:2, col:28> 'int' contains-errors
    | |-ImplicitCastExpr 0x128140a88 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x128140a48 <col:2> 'int ()' Function 0x128140990 'trace_access_lock' 'int ()'
    | `-ImplicitCastExpr 0x128140ac8 <col:20> 'int' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x128140a68 <col:20> 'int' contains-errors lvalue Var 0x1010087c8 'cpu_file' 'int'
    `-ReturnStmt 0x128140b18 <line:51:2, col:9>
      `-ImplicitCastExpr 0x128140b00 <col:9> 'void *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x128140ae0 <col:9> 'void *' contains-errors lvalue Var 0x1010088c0 'p' 'void *'
