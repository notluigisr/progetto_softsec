TranslationUnitDecl 0x13c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c055bd0 '__int128'
|-TypedefDecl 0x13c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c055bf0 'unsigned __int128'
|-TypedefDecl 0x13c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13c056580 '__NSConstantString_tag'
|-TypedefDecl 0x13c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c055d90 '__SVInt8_t'
|-TypedefDecl 0x13c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c055db0 '__SVInt16_t'
|-TypedefDecl 0x13c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c055dd0 '__SVInt32_t'
|-TypedefDecl 0x13c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c055df0 '__SVInt64_t'
|-TypedefDecl 0x13c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c055e10 '__SVUint8_t'
|-TypedefDecl 0x13c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c055e30 '__SVUint16_t'
|-TypedefDecl 0x13c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c055e50 '__SVUint32_t'
|-TypedefDecl 0x13c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c055e70 '__SVUint64_t'
|-TypedefDecl 0x13c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c055e90 '__SVFloat16_t'
|-TypedefDecl 0x13c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c056390 '__SVBool_t'
|-TypedefDecl 0x13c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c0563f0 '__SVCount_t'
|-TypedefDecl 0x13c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c80dbb0 'char *'
|   `-BuiltinType 0x13c0556b0 'char'
|-TypedefDecl 0x13c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c80dbb0 'char *'
|   `-BuiltinType 0x13c0556b0 'char'
|-FunctionDecl 0x13d008948 <dataset_diviso_filec/func8664_nonvuln.c:1:1, line:34:1> line:1:12 test_fix 'int (struct libmnt_test *, int, char **)' static
| |-ParmVarDecl 0x13c80e248 <col:21, col:41> col:41 ts 'struct libmnt_test *'
| |-ParmVarDecl 0x13c80e2c8 <col:45, col:49> col:49 used argc 'int'
| |-ParmVarDecl 0x13d008800 <col:55, col:66> col:61 used argv 'char **'
| `-CompoundStmt 0x13d00ce18 <line:2:1, line:34:1>
|   |-DeclStmt 0x13d008ad0 <line:3:2, col:14>
|   | `-VarDecl 0x13d008a68 <col:2, col:8> col:8 used optstr 'char *'
|   |-DeclStmt 0x13d008b88 <line:4:2, col:12>
|   | `-VarDecl 0x13d008b00 <col:2, col:11> col:6 used rc 'int' cinit
|   |   `-IntegerLiteral 0x13d008b68 <col:11> 'int' 0
|   |-DeclStmt 0x13d008d40 <line:5:2, col:25>
|   | |-VarDecl 0x13d008bb8 <col:2, col:8> col:8 used name 'char *'
|   | |-VarDecl 0x13d008c38 <col:2, col:15> col:15 used val 'char *'
|   | `-VarDecl 0x13d008cb8 <col:2, col:21> col:21 used next 'char *'
|   |-BinaryOperator 0x13d008e40 <line:6:2, col:16> '<dependent type>' contains-errors ','
|   | |-UnaryExprOrTypeTraitExpr 0x13d008e00 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x13d008de0 <col:9> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x13d008e20 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13d008f80 <line:8:2, line:9:11>
|   | |-BinaryOperator 0x13d008eb8 <line:8:6, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x13d008ea0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13d008e60 <col:6> 'int' lvalue ParmVar 0x13c80e2c8 'argc' 'int'
|   | | `-IntegerLiteral 0x13d008e80 <col:13> 'int' 2
|   | `-ReturnStmt 0x13d008f70 <line:9:3, col:11>
|   |   `-UnaryOperator 0x13d008f58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x13d008f40 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x13d008f20 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13d009250 <line:11:2, col:33> 'char *' '='
|   | |-DeclRefExpr 0x13d008fa0 <col:2> 'char *' lvalue Var 0x13d008cb8 'next' 'char *'
|   | `-BinaryOperator 0x13d009230 <col:9, col:33> 'char *' '='
|   |   |-DeclRefExpr 0x13d008fc0 <col:9> 'char *' lvalue Var 0x13d008a68 'optstr' 'char *'
|   |   `-ImplicitCastExpr 0x13d009218 <col:18, col:33> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x13d0091d8 <col:18, col:33> 'int'
|   |       |-ImplicitCastExpr 0x13d0091c0 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13d0090f0 <col:18> 'int ()' Function 0x13d009038 'xstrdup' 'int ()'
|   |       `-ImplicitCastExpr 0x13d009200 <col:26, col:32> 'char *' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x13d009168 <col:26, col:32> 'char *' lvalue
|   |           |-ImplicitCastExpr 0x13d009150 <col:26> 'char **' <LValueToRValue>
|   |           | `-DeclRefExpr 0x13d009110 <col:26> 'char **' lvalue ParmVar 0x13d008800 'argv' 'char **'
|   |           `-IntegerLiteral 0x13d009130 <col:31> 'int' 1
|   |-CallExpr 0x13d009568 <line:13:2, col:22> 'int'
|   | |-ImplicitCastExpr 0x13d009550 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13d009458 <col:2> 'int (const char *, ...)' Function 0x13d0092b0 'printf' 'int (const char *, ...)'
|   | |-ImplicitCastExpr 0x13d0095b0 <col:9> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x13d009598 <col:9> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x13d0094c0 <col:9> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x13d0095c8 <col:16> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13d0094e0 <col:16> 'char *' lvalue Var 0x13d008a68 'optstr' 'char *'
|   |-WhileStmt 0x13d00c7f8 <line:15:2, line:25:2>
|   | |-UnaryOperator 0x13c826d50 <line:15:9, col:68> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x13c826d08 <col:10, col:68> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x13d0096c0 <col:10> 'int ()' Function 0x13d009608 'mnt_optstr_next_option' 'int ()'
|   | |   |-UnaryOperator 0x13d009700 <col:33, col:34> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x13d0096e0 <col:34> 'char *' lvalue Var 0x13d008cb8 'next' 'char *'
|   | |   |-UnaryOperator 0x13d009738 <col:40, col:41> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x13d009718 <col:41> 'char *' lvalue Var 0x13d008bb8 'name' 'char *'
|   | |   |-UnaryOperator 0x13c826cb8 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x13c826c98 <col:48> '<dependent type>' contains-errors lvalue
|   | |   |-UnaryOperator 0x13d0097a0 <col:56, col:57> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x13d009780 <col:57> 'char *' lvalue Var 0x13d008c38 'val' 'char *'
|   | |   `-UnaryOperator 0x13c826cf0 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     `-RecoveryExpr 0x13c826cd0 <col:63> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13d00c7d8 <col:71, line:25:2>
|   |   |-IfStmt 0x13d00c748 <line:17:3, line:22:60> has_else
|   |   | |-UnaryOperator 0x13c8271b8 <line:17:7, col:30> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x13c827108 <col:8, col:30> 'int'
|   |   | |   |-ImplicitCastExpr 0x13c8270f0 <col:8> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x13c827008 <col:8> 'int (const char *, const char *, unsigned long)' Function 0x13c826db8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   | |   |-ImplicitCastExpr 0x13c827158 <col:16> 'const char *' <NoOp>
|   |   | |   | `-ImplicitCastExpr 0x13c827140 <col:16> 'char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x13c827028 <col:16> 'char *' lvalue Var 0x13d008bb8 'name' 'char *'
|   |   | |   |-ImplicitCastExpr 0x13c827188 <col:22> 'const char *' <NoOp>
|   |   | |   | `-ImplicitCastExpr 0x13c827170 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | |   |   `-StringLiteral 0x13c827048 <col:22> 'char[4]' lvalue "STR"
|   |   | |   `-ImplicitCastExpr 0x13c8271a0 <col:29> 'unsigned long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x13c827068 <col:29> 'int' 3
|   |   | |-BinaryOperator 0x13c827458 <line:18:4, col:54> 'int' contains-errors '='
|   |   | | |-DeclRefExpr 0x13c8271d0 <col:4> 'int' lvalue Var 0x13d008b00 'rc' 'int'
|   |   | | `-CallExpr 0x13c827418 <col:9, col:54> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x13c8272d0 <col:9> 'int ()' Function 0x13c827218 'mnt_optstr_fix_uid' 'int ()'
|   |   | |   |-UnaryOperator 0x13c827310 <col:28, col:29> 'char **' prefix '&' cannot overflow
|   |   | |   | `-DeclRefExpr 0x13c8272f0 <col:29> 'char *' lvalue Var 0x13d008a68 'optstr' 'char *'
|   |   | |   |-DeclRefExpr 0x13c827328 <col:37> 'char *' lvalue Var 0x13d008c38 'val' 'char *'
|   |   | |   |-RecoveryExpr 0x13c8273f8 <col:42> '<dependent type>' contains-errors lvalue
|   |   | |   `-UnaryOperator 0x13c827380 <col:49, col:50> 'char **' prefix '&' cannot overflow
|   |   | |     `-DeclRefExpr 0x13c827360 <col:50> 'char *' lvalue Var 0x13d008cb8 'next' 'char *'
|   |   | `-IfStmt 0x13d00c718 <line:19:8, line:22:60> has_else
|   |   |   |-UnaryOperator 0x13c8275f0 <line:19:12, col:35> 'int' prefix '!' cannot overflow
|   |   |   | `-CallExpr 0x13c827540 <col:13, col:35> 'int'
|   |   |   |   |-ImplicitCastExpr 0x13c827528 <col:13> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x13c827478 <col:13> 'int (const char *, const char *, unsigned long)' Function 0x13c826db8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   |   |-ImplicitCastExpr 0x13c827590 <col:21> 'const char *' <NoOp>
|   |   |   |   | `-ImplicitCastExpr 0x13c827578 <col:21> 'char *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x13c827498 <col:21> 'char *' lvalue Var 0x13d008bb8 'name' 'char *'
|   |   |   |   |-ImplicitCastExpr 0x13c8275c0 <col:27> 'const char *' <NoOp>
|   |   |   |   | `-ImplicitCastExpr 0x13c8275a8 <col:27> 'char *' <ArrayToPointerDecay>
|   |   |   |   |   `-StringLiteral 0x13c8274b8 <col:27> 'char[4]' lvalue "STR"
|   |   |   |   `-ImplicitCastExpr 0x13c8275d8 <col:34> 'unsigned long' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x13c8274d8 <col:34> 'int' 3
|   |   |   |-BinaryOperator 0x13c827890 <line:20:4, col:54> 'int' contains-errors '='
|   |   |   | |-DeclRefExpr 0x13c827608 <col:4> 'int' lvalue Var 0x13d008b00 'rc' 'int'
|   |   |   | `-CallExpr 0x13c827850 <col:9, col:54> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x13c827708 <col:9> 'int ()' Function 0x13c827650 'mnt_optstr_fix_gid' 'int ()'
|   |   |   |   |-UnaryOperator 0x13c827748 <col:28, col:29> 'char **' prefix '&' cannot overflow
|   |   |   |   | `-DeclRefExpr 0x13c827728 <col:29> 'char *' lvalue Var 0x13d008a68 'optstr' 'char *'
|   |   |   |   |-DeclRefExpr 0x13c827760 <col:37> 'char *' lvalue Var 0x13d008c38 'val' 'char *'
|   |   |   |   |-RecoveryExpr 0x13c827830 <col:42> '<dependent type>' contains-errors lvalue
|   |   |   |   `-UnaryOperator 0x13c8277b8 <col:49, col:50> 'char **' prefix '&' cannot overflow
|   |   |   |     `-DeclRefExpr 0x13c827798 <col:50> 'char *' lvalue Var 0x13d008cb8 'next' 'char *'
|   |   |   `-IfStmt 0x13d00c6f8 <line:21:8, line:22:60>
|   |   |     |-UnaryOperator 0x13c827a28 <line:21:12, col:35> 'int' prefix '!' cannot overflow
|   |   |     | `-CallExpr 0x13c827978 <col:13, col:35> 'int'
|   |   |     |   |-ImplicitCastExpr 0x13c827960 <col:13> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x13c8278b0 <col:13> 'int (const char *, const char *, unsigned long)' Function 0x13c826db8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |     |   |-ImplicitCastExpr 0x13c8279c8 <col:21> 'const char *' <NoOp>
|   |   |     |   | `-ImplicitCastExpr 0x13c8279b0 <col:21> 'char *' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x13c8278d0 <col:21> 'char *' lvalue Var 0x13d008bb8 'name' 'char *'
|   |   |     |   |-ImplicitCastExpr 0x13c8279f8 <col:27> 'const char *' <NoOp>
|   |   |     |   | `-ImplicitCastExpr 0x13c8279e0 <col:27> 'char *' <ArrayToPointerDecay>
|   |   |     |   |   `-StringLiteral 0x13c8278f0 <col:27> 'char[4]' lvalue "STR"
|   |   |     |   `-ImplicitCastExpr 0x13c827a10 <col:34> 'unsigned long' <IntegralCast>
|   |   |     |     `-IntegerLiteral 0x13c827910 <col:34> 'int' 7
|   |   |     `-BinaryOperator 0x13d00c6d8 <line:22:4, col:60> 'int' contains-errors '='
|   |   |       |-DeclRefExpr 0x13c827a40 <col:4> 'int' lvalue Var 0x13d008b00 'rc' 'int'
|   |   |       `-CallExpr 0x13d00c698 <col:9, col:60> '<dependent type>' contains-errors
|   |   |         |-DeclRefExpr 0x13c827b40 <col:9> 'int ()' Function 0x13c827a88 'mnt_optstr_fix_secontext' 'int ()'
|   |   |         |-UnaryOperator 0x13c827b80 <col:34, col:35> 'char **' prefix '&' cannot overflow
|   |   |         | `-DeclRefExpr 0x13c827b60 <col:35> 'char *' lvalue Var 0x13d008a68 'optstr' 'char *'
|   |   |         |-DeclRefExpr 0x13c827b98 <col:43> 'char *' lvalue Var 0x13d008c38 'val' 'char *'
|   |   |         |-RecoveryExpr 0x13d00c678 <col:48> '<dependent type>' contains-errors lvalue
|   |   |         `-UnaryOperator 0x13d00c600 <col:55, col:56> 'char **' prefix '&' cannot overflow
|   |   |           `-DeclRefExpr 0x13c827bd0 <col:56> 'char *' lvalue Var 0x13d008cb8 'next' 'char *'
|   |   `-IfStmt 0x13d00c7b8 <line:23:3, line:24:4>
|   |     |-ImplicitCastExpr 0x13d00c798 <line:23:7> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13d00c778 <col:7> 'int' lvalue Var 0x13d008b00 'rc' 'int'
|   |     `-BreakStmt 0x13d00c7b0 <line:24:4>
|   |-IfStmt 0x13d00ca08 <line:26:2, line:27:35>
|   | |-ImplicitCastExpr 0x13d00c838 <line:26:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13d00c818 <col:6> 'int' lvalue Var 0x13d008b00 'rc' 'int'
|   | `-BinaryOperator 0x13d00c9e8 <line:27:3, col:35> 'int' '='
|   |   |-DeclRefExpr 0x13d00c850 <col:3> 'int' lvalue Var 0x13d008b00 'rc' 'int'
|   |   `-CallExpr 0x13d00c9c0 <col:8, col:35> 'int'
|   |     |-ImplicitCastExpr 0x13d00c9a8 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13d00c950 <col:8> 'int ()' Function 0x13d00c898 'mnt_optstr_fix_user' 'int ()'
|   |     `-UnaryOperator 0x13d00c990 <col:28, col:29> 'char **' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x13d00c970 <col:29> 'char *' lvalue Var 0x13d008a68 'optstr' 'char *'
|   |-CallExpr 0x13d00cab8 <line:29:2, col:22> 'int'
|   | |-ImplicitCastExpr 0x13d00caa0 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13d00ca28 <col:2> 'int (const char *, ...)' Function 0x13d0092b0 'printf' 'int (const char *, ...)'
|   | |-ImplicitCastExpr 0x13d00cb00 <col:9> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x13d00cae8 <col:9> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x13d00ca48 <col:9> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x13d00cb18 <col:16> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13d00ca68 <col:16> 'char *' lvalue Var 0x13d008a68 'optstr' 'char *'
|   |-CallExpr 0x13d00cd78 <line:31:2, col:13> 'void'
|   | |-ImplicitCastExpr 0x13d00cd60 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13d00ccd8 <col:2> 'void (void *)' Function 0x13d00cb68 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x13d00cdb8 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x13d00cda0 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13d00ccf8 <col:7> 'char *' lvalue Var 0x13d008a68 'optstr' 'char *'
|   `-ReturnStmt 0x13d00ce08 <line:32:2, col:9>
|     `-ImplicitCastExpr 0x13d00cdf0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13d00cdd0 <col:9> 'int' lvalue Var 0x13d008b00 'rc' 'int'
|-FunctionDecl 0x13d0092b0 <line:13:2> col:2 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x13d0093b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x13d009358 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x13d009420 <col:2> Implicit printf 1 2
|-FunctionDecl 0x13c826db8 <line:17:8> col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x13c826eb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13c826f20 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13c826f88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13c826e60 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x13d00cb68 <line:31:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13d00cc68 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13d00cc10 <<invalid sloc>> Implicit 873
