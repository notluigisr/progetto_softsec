TranslationUnitDecl 0x152855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1528564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152855bd0 '__int128'
|-TypedefDecl 0x152856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152855bf0 'unsigned __int128'
|-TypedefDecl 0x15300be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15300bc00 'struct __NSConstantString_tag'
|   `-Record 0x152856580 '__NSConstantString_tag'
|-TypedefDecl 0x15300be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152855d90 '__SVInt8_t'
|-TypedefDecl 0x15300bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152855db0 '__SVInt16_t'
|-TypedefDecl 0x15300bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152855dd0 '__SVInt32_t'
|-TypedefDecl 0x15300bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152855df0 '__SVInt64_t'
|-TypedefDecl 0x15300c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152855e10 '__SVUint8_t'
|-TypedefDecl 0x15300c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152855e30 '__SVUint16_t'
|-TypedefDecl 0x15300c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152855e50 '__SVUint32_t'
|-TypedefDecl 0x15300c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152855e70 '__SVUint64_t'
|-TypedefDecl 0x15300c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152855e90 '__SVFloat16_t'
|-TypedefDecl 0x15300c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15300c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15300c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15300c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15300c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15300c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15300c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15300c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15300c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15300c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15300c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15300c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15300c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15300c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15300c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15300c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15300c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1528560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15300c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1528560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15300c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1528560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15300c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15300ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15300cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15300cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15300cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15300d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1528561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15300d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1528561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15300d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1528561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15300d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15300d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15300d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15300d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15300d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15300d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1528562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15300d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1528562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15300d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1528562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15300d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15300d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15300d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15300d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15300da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152856390 '__SVBool_t'
|-TypedefDecl 0x15300da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1528563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15300dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1528563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15300db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1528563f0 '__SVCount_t'
|-TypedefDecl 0x15300dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15300dbb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
|-TypedefDecl 0x15300dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15300dbb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
|-FunctionDecl 0x15300de80 <dataset_diviso_filec/func20195_nonvuln.c:1:1, line:17:1> line:1:6 invalid pdf_get_version 'void (int *, int *)'
| |-ParmVarDecl 0x15300dd28 <col:22, col:28> col:28 invalid fp 'int *'
| |-ParmVarDecl 0x15300dda8 <col:32, col:39> col:39 referenced invalid pdf 'int *'
| `-CompoundStmt 0x1530293a0 <line:2:1, line:17:1>
|   |-DeclStmt 0x15300e178 <line:3:5, col:34>
|   | `-VarDecl 0x15300df50 <col:5, col:33> col:11 used header 'char *' cinit
|   |   `-CallExpr 0x15300e150 <col:20, col:33> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15300e110 <col:20> 'int ()' Function 0x15300e058 'get_header' 'int ()'
|   |     `-RecoveryExpr 0x15300e130 <col:31> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15300e210 <line:6:5, col:18>
|   | `-VarDecl 0x15300e1a8 <col:5, col:17> col:17 used c 'const char *'
|   |-IfStmt 0x1530290e0 <line:7:5, line:14:5>
|   | |-BinaryOperator 0x153028148 <line:7:9, line:10:27> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x153027fc0 <line:7:9, line:9:27> 'int' contains-errors '&&'
|   | | | |-BinaryOperator 0x153027c10 <line:7:9, line:8:27> 'int' contains-errors '&&'
|   | | | | |-ParenExpr 0x153027a90 <line:7:9, col:35> 'const char *' contains-errors
|   | | | | | `-BinaryOperator 0x153027a70 <col:10, col:34> 'const char *' contains-errors '='
|   | | | | |   |-DeclRefExpr 0x15300e228 <col:10> 'const char *' lvalue Var 0x15300e1a8 'c' 'const char *'
|   | | | | |   `-ImplicitCastExpr 0x153027a58 <col:14, col:34> 'const char *' contains-errors <NoOp>
|   | | | | |     `-CallExpr 0x1530279c8 <col:14, col:34> 'char *' contains-errors
|   | | | | |       |-ImplicitCastExpr 0x1530279b0 <col:14> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | |       | `-DeclRefExpr 0x1530278b0 <col:14> 'char *(const char *, const char *)' Function 0x1530276d0 'strstr' 'char *(const char *, const char *)'
|   | | | | |       |-ImplicitCastExpr 0x153027a10 <col:21> 'const char *' contains-errors <NoOp>
|   | | | | |       | `-ImplicitCastExpr 0x1530279f8 <col:21> 'char *' contains-errors <LValueToRValue>
|   | | | | |       |   `-DeclRefExpr 0x1530278d0 <col:21> 'char *' contains-errors lvalue Var 0x15300df50 'header' 'char *'
|   | | | | |       `-ImplicitCastExpr 0x153027a40 <col:29> 'const char *' <NoOp>
|   | | | | |         `-ImplicitCastExpr 0x153027a28 <col:29> 'char *' <ArrayToPointerDecay>
|   | | | | |           `-StringLiteral 0x153027930 <col:29> 'char[4]' lvalue "STR"
|   | | | | `-ParenExpr 0x153027bf0 <line:8:9, col:27> 'int'
|   | | | |   `-BinaryOperator 0x153027bd0 <col:10, col:24> 'int' '=='
|   | | | |     |-ImplicitCastExpr 0x153027bb8 <col:10, col:19> 'int' <IntegralCast>
|   | | | |     | `-ImplicitCastExpr 0x153027ba0 <col:10, col:19> 'char' <LValueToRValue>
|   | | | |     |   `-ArraySubscriptExpr 0x153027b68 <col:10, col:19> 'const char' lvalue
|   | | | |     |     |-ParenExpr 0x153027b28 <col:10, col:16> 'const char *'
|   | | | |     |     | `-BinaryOperator 0x153027b08 <col:11, col:15> 'const char *' '+'
|   | | | |     |     |   |-ImplicitCastExpr 0x153027af0 <col:11> 'const char *' <LValueToRValue>
|   | | | |     |     |   | `-DeclRefExpr 0x153027ab0 <col:11> 'const char *' lvalue Var 0x15300e1a8 'c' 'const char *'
|   | | | |     |     |   `-IntegerLiteral 0x153027ad0 <col:15> 'int' 6
|   | | | |     |     `-IntegerLiteral 0x153027b48 <col:18> 'int' 0
|   | | | |     `-CharacterLiteral 0x153027b88 <col:24> 'int' 46
|   | | | `-CallExpr 0x153027f68 <line:9:9, col:27> 'int'
|   | | |   |-ImplicitCastExpr 0x153027f50 <col:9> 'int (*)(int)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x153027e28 <col:9> 'int (int)' Function 0x153027c68 'isdigit' 'int (int)'
|   | | |   `-ImplicitCastExpr 0x153027fa8 <col:17, col:26> 'int' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x153027f90 <col:17, col:26> 'char' <LValueToRValue>
|   | | |       `-ArraySubscriptExpr 0x153027f00 <col:17, col:26> 'const char' lvalue
|   | | |         |-ParenExpr 0x153027ec0 <col:17, col:23> 'const char *'
|   | | |         | `-BinaryOperator 0x153027ea0 <col:18, col:22> 'const char *' '+'
|   | | |         |   |-ImplicitCastExpr 0x153027e88 <col:18> 'const char *' <LValueToRValue>
|   | | |         |   | `-DeclRefExpr 0x153027e48 <col:18> 'const char *' lvalue Var 0x15300e1a8 'c' 'const char *'
|   | | |         |   `-IntegerLiteral 0x153027e68 <col:22> 'int' 5
|   | | |         `-IntegerLiteral 0x153027ee0 <col:25> 'int' 0
|   | | `-CallExpr 0x1530280f0 <line:10:9, col:27> 'int'
|   | |   |-ImplicitCastExpr 0x1530280d8 <col:9> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x153027fe0 <col:9> 'int (int)' Function 0x153027c68 'isdigit' 'int (int)'
|   | |   `-ImplicitCastExpr 0x153028130 <col:17, col:26> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x153028118 <col:17, col:26> 'char' <LValueToRValue>
|   | |       `-ArraySubscriptExpr 0x1530280b8 <col:17, col:26> 'const char' lvalue
|   | |         |-ParenExpr 0x153028078 <col:17, col:23> 'const char *'
|   | |         | `-BinaryOperator 0x153028058 <col:18, col:22> 'const char *' '+'
|   | |         |   |-ImplicitCastExpr 0x153028040 <col:18> 'const char *' <LValueToRValue>
|   | |         |   | `-DeclRefExpr 0x153028000 <col:18> 'const char *' lvalue Var 0x15300e1a8 'c' 'const char *'
|   | |         |   `-IntegerLiteral 0x153028020 <col:22> 'int' 7
|   | |         `-IntegerLiteral 0x153028098 <col:25> 'int' 0
|   | `-CompoundStmt 0x1530290c0 <line:11:5, line:14:5>
|   |   |-BinaryOperator 0x153028e70 <line:12:9, col:56> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x1530281b0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->pdf_major_version
|   |   | | `-RecoveryExpr 0x153028188 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x153028168 <col:9> 'int *' lvalue ParmVar 0x15300dda8 'pdf' 'int *'
|   |   | `-CallExpr 0x153028e48 <col:34, col:56> 'int'
|   |   |   |-ImplicitCastExpr 0x153028e30 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1530282d8 <col:34> 'int ()' Function 0x153028220 'atoi' 'int ()'
|   |   |   `-BinaryOperator 0x153028dd8 <col:39, col:55> 'const char *' '+'
|   |   |     |-ImplicitCastExpr 0x153028dc0 <col:39> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1530282f8 <col:39> 'const char *' lvalue Var 0x15300e1a8 'c' 'const char *'
|   |   |     `-CallExpr 0x153028d68 <col:43, col:55> 'unsigned long'
|   |   |       |-ImplicitCastExpr 0x153028d50 <col:43> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x153028cc8 <col:43> 'unsigned long (const char *)' Function 0x153028358 'strlen' 'unsigned long (const char *)'
|   |   |       `-ImplicitCastExpr 0x153028da8 <col:50> 'const char *' <NoOp>
|   |   |         `-ImplicitCastExpr 0x153028d90 <col:50> 'char *' <ArrayToPointerDecay>
|   |   |           `-StringLiteral 0x153028ce8 <col:50> 'char[4]' lvalue "STR"
|   |   `-BinaryOperator 0x1530290a0 <line:13:9, col:56> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x153028ed8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->pdf_minor_version
|   |     | `-RecoveryExpr 0x153028eb0 <col:9> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x153028e90 <col:9> 'int *' lvalue ParmVar 0x15300dda8 'pdf' 'int *'
|   |     `-CallExpr 0x153029078 <col:34, col:56> 'int'
|   |       |-ImplicitCastExpr 0x153029060 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x153028f20 <col:34> 'int ()' Function 0x153028220 'atoi' 'int ()'
|   |       `-BinaryOperator 0x153029040 <col:39, col:55> 'const char *' '+'
|   |         |-ImplicitCastExpr 0x153029028 <col:39> 'const char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x153028f40 <col:39> 'const char *' lvalue Var 0x15300e1a8 'c' 'const char *'
|   |         `-CallExpr 0x153028fd0 <col:43, col:55> 'unsigned long'
|   |           |-ImplicitCastExpr 0x153028fb8 <col:43> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x153028f60 <col:43> 'unsigned long (const char *)' Function 0x153028358 'strlen' 'unsigned long (const char *)'
|   |           `-ImplicitCastExpr 0x153029010 <col:50> 'const char *' <NoOp>
|   |             `-ImplicitCastExpr 0x153028ff8 <col:50> 'char *' <ArrayToPointerDecay>
|   |               `-StringLiteral 0x153028f80 <col:50> 'char[4]' lvalue "STR"
|   `-CallExpr 0x153029348 <line:16:5, col:16> 'void' contains-errors
|     |-ImplicitCastExpr 0x153029330 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1530292a8 <col:5> 'void (void *)' Function 0x153029138 'free' 'void (void *)'
|     `-ImplicitCastExpr 0x153029388 <col:10> 'void *' contains-errors <BitCast>
|       `-ImplicitCastExpr 0x153029370 <col:10> 'char *' contains-errors <LValueToRValue>
|         `-DeclRefExpr 0x1530292c8 <col:10> 'char *' contains-errors lvalue Var 0x15300df50 'header' 'char *'
|-FunctionDecl 0x1530276d0 <line:7:14> col:14 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1530277d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x153027838 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x153027778 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x153027c68 <line:9:9> col:9 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x153027d68 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x153027d10 <<invalid sloc>> Implicit 924
| |-NoThrowAttr 0x153027dd8 <col:9> Implicit
| `-PureAttr 0x153027e00 <col:9> Implicit
|-FunctionDecl 0x153028358 <line:12:43> col:43 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x153028c58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x153028c00 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x153029138 <line:16:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x153029238 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1530291e0 <<invalid sloc>> Implicit 873
