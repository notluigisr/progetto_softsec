TranslationUnitDecl 0x13e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e055bd0 '__int128'
|-TypedefDecl 0x13e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e055bf0 'unsigned __int128'
|-TypedefDecl 0x13e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13e056580 '__NSConstantString_tag'
|-TypedefDecl 0x13e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e055d90 '__SVInt8_t'
|-TypedefDecl 0x13e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e055db0 '__SVInt16_t'
|-TypedefDecl 0x13e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e055dd0 '__SVInt32_t'
|-TypedefDecl 0x13e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e055df0 '__SVInt64_t'
|-TypedefDecl 0x13e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e055e10 '__SVUint8_t'
|-TypedefDecl 0x13e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e055e30 '__SVUint16_t'
|-TypedefDecl 0x13e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e055e50 '__SVUint32_t'
|-TypedefDecl 0x13e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e055e70 '__SVUint64_t'
|-TypedefDecl 0x13e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e055e90 '__SVFloat16_t'
|-TypedefDecl 0x13e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e056390 '__SVBool_t'
|-TypedefDecl 0x13e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e0563f0 '__SVCount_t'
|-TypedefDecl 0x13e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e80dbb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
|-TypedefDecl 0x13e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e80dbb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
`-FunctionDecl 0x13e122cc8 <dataset_diviso_filec/func18709_vuln.c:1:1, line:49:1> line:1:1 invalid find_add_addrs 'int (struct module_env *, int, struct regional *, struct delegpt *, int, struct dns_msg **)'
  |-ParmVarDecl 0x13e80e248 <col:16, col:35> col:35 used env 'struct module_env *'
  |-ParmVarDecl 0x13e80e2e0 <col:40, col:49> col:49 invalid qclass 'int'
  |-ParmVarDecl 0x13e1226c8 <line:2:2, col:19> col:19 used region 'struct regional *'
  |-ParmVarDecl 0x13e122898 <col:27, col:43> col:43 used dp 'struct delegpt *'
  |-ParmVarDecl 0x13e122918 <col:47, col:54> col:54 invalid now 'int'
  |-ParmVarDecl 0x13e122b48 <line:3:2, col:19> col:19 used msg 'struct dns_msg **'
  `-CompoundStmt 0x13f80a8c0 <line:4:1, line:49:1>
    |-DeclStmt 0x13e122f88 <line:5:2, col:23>
    | |-RecordDecl 0x13e122da0 <col:2, col:9> col:9 struct delegpt_ns
    | `-VarDecl 0x13e122f08 <col:2, col:21> col:21 used ns 'struct delegpt_ns *'
    |-DeclStmt 0x13e123188 <line:6:2, col:28>
    | |-RecordDecl 0x13e122fa0 <col:2, col:9> col:9 struct msgreply_entry
    | `-VarDecl 0x13e123108 <col:2, col:25> col:25 used neg 'struct msgreply_entry *'
    |-DeclStmt 0x13e123388 <line:7:2, col:34>
    | |-RecordDecl 0x13e1231a0 <col:2, col:9> col:9 struct ub_packed_rrset_key
    | `-VarDecl 0x13e123308 <col:2, col:30> col:30 used akey 'struct ub_packed_rrset_key *'
    |-ForStmt 0x13f80a858 <line:8:2, line:47:2>
    | |-BinaryOperator 0x13e123420 <line:8:6, col:15> 'struct delegpt_ns *' contains-errors '='
    | | |-DeclRefExpr 0x13e1233a0 <col:6> 'struct delegpt_ns *' lvalue Var 0x13e122f08 'ns' 'struct delegpt_ns *'
    | | `-RecoveryExpr 0x13e1233f8 <col:11, col:15> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13e1233c0 <col:11> 'struct delegpt *' lvalue ParmVar 0x13e122898 'dp' 'struct delegpt *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x13e123460 <col:23> 'struct delegpt_ns *' <LValueToRValue>
    | | `-DeclRefExpr 0x13e123440 <col:23> 'struct delegpt_ns *' lvalue Var 0x13e122f08 'ns' 'struct delegpt_ns *'
    | |-BinaryOperator 0x13e1234f8 <col:27, col:36> 'struct delegpt_ns *' contains-errors '='
    | | |-DeclRefExpr 0x13e123478 <col:27> 'struct delegpt_ns *' lvalue Var 0x13e122f08 'ns' 'struct delegpt_ns *'
    | | `-RecoveryExpr 0x13e1234d0 <col:32, col:36> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13e123498 <col:32> 'struct delegpt_ns *' lvalue Var 0x13e122f08 'ns' 'struct delegpt_ns *'
    | `-CompoundStmt 0x13f80a830 <col:42, line:47:2>
    |   |-BinaryOperator 0x13f808b90 <line:9:3, line:10:50> 'struct ub_packed_rrset_key *' contains-errors '='
    |   | |-DeclRefExpr 0x13e123518 <line:9:3> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |   | `-CallExpr 0x13f808b30 <col:10, line:10:50> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13f8088b8 <line:9:10> 'int ()' Function 0x13f808800 'rrset_cache_lookup' 'int ()'
    |   |   |-RecoveryExpr 0x13f808910 <col:29, col:34> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x13f8088d8 <col:29> 'struct module_env *' lvalue ParmVar 0x13e80e248 'env' 'struct module_env *'
    |   |   |-RecoveryExpr 0x13f808970 <col:47, col:51> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x13f808938 <col:47> 'struct delegpt_ns *' lvalue Var 0x13e122f08 'ns' 'struct delegpt_ns *'
    |   |   |-RecoveryExpr 0x13f8089d0 <line:10:4, col:8> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x13f808998 <col:4> 'struct delegpt_ns *' lvalue Var 0x13e122f08 'ns' 'struct delegpt_ns *'
    |   |   |-RecoveryExpr 0x13f808b10 <col:17> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x13f808a10 <col:33> '<dependent type>' contains-errors lvalue
    |   |   |-IntegerLiteral 0x13f808a30 <col:41> 'int' 0
    |   |   |-RecoveryExpr 0x13f808a50 <col:44> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x13f808a70 <col:49> 'int' 0
    |   |-IfStmt 0x13f809b38 <line:11:3, line:27:3> has_else
    |   | |-ImplicitCastExpr 0x13f808bd0 <line:11:6> 'struct ub_packed_rrset_key *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13f808bb0 <col:6> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |   | |-CompoundStmt 0x13f809400 <col:12, line:19:3>
    |   | | |-IfStmt 0x13f809090 <line:12:4, line:15:4>
    |   | | | |-UnaryOperator 0x13f808e40 <line:12:7, col:47> 'int' prefix '!' cannot overflow
    |   | | | | `-CallExpr 0x13f808db8 <col:8, col:47> 'int'
    |   | | | |   |-ImplicitCastExpr 0x13f808da0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | | | |   | `-DeclRefExpr 0x13f808cc8 <col:8> 'int ()' Function 0x13f808c10 'delegpt_add_rrset_A' 'int ()'
    |   | | | |   |-ImplicitCastExpr 0x13f808df8 <col:28> 'struct delegpt *' <LValueToRValue>
    |   | | | |   | `-DeclRefExpr 0x13f808ce8 <col:28> 'struct delegpt *' lvalue ParmVar 0x13e122898 'dp' 'struct delegpt *'
    |   | | | |   |-ImplicitCastExpr 0x13f808e10 <col:32> 'struct regional *' <LValueToRValue>
    |   | | | |   | `-DeclRefExpr 0x13f808d08 <col:32> 'struct regional *' lvalue ParmVar 0x13e1226c8 'region' 'struct regional *'
    |   | | | |   |-ImplicitCastExpr 0x13f808e28 <col:40> 'struct ub_packed_rrset_key *' <LValueToRValue>
    |   | | | |   | `-DeclRefExpr 0x13f808d28 <col:40> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |   | | | |   `-IntegerLiteral 0x13f808d48 <col:46> 'int' 0
    |   | | | `-CompoundStmt 0x13f809070 <col:50, line:15:4>
    |   | | |   |-CallExpr 0x13f809018 <line:13:5, col:37> '<dependent type>' contains-errors
    |   | | |   | |-DeclRefExpr 0x13f808f38 <col:5> 'int ()' Function 0x13f808e80 'lock_rw_unlock' 'int ()'
    |   | | |   | `-UnaryOperator 0x13f809000 <col:20, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | |   |   `-CXXDependentScopeMemberExpr 0x13f808fb8 <col:21, col:33> '<dependent type>' contains-errors lvalue .lock
    |   | | |   |     `-RecoveryExpr 0x13f808f90 <col:21, col:27> '<dependent type>' contains-errors lvalue
    |   | | |   |       `-DeclRefExpr 0x13f808f58 <col:21> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |   | | |   `-ReturnStmt 0x13f809060 <line:14:5, col:12>
    |   | | |     `-IntegerLiteral 0x13f809040 <col:12> 'int' 0
    |   | | |-IfStmt 0x13f8092d8 <line:16:4, line:17:47>
    |   | | | |-ImplicitCastExpr 0x13f8090d0 <line:16:7> 'struct dns_msg **' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x13f8090b0 <col:7> 'struct dns_msg **' lvalue ParmVar 0x13e122b48 'msg' 'struct dns_msg **'
    |   | | | `-CallExpr 0x13f809298 <line:17:5, col:47> '<dependent type>' contains-errors
    |   | | |   |-DeclRefExpr 0x13f8091c8 <col:5> 'int ()' Function 0x13f809110 'addr_to_additional' 'int ()'
    |   | | |   |-DeclRefExpr 0x13f8091e8 <col:24> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |   | | |   |-DeclRefExpr 0x13f809208 <col:30> 'struct regional *' lvalue ParmVar 0x13e1226c8 'region' 'struct regional *'
    |   | | |   |-UnaryOperator 0x13f809260 <col:38, col:39> 'struct dns_msg *' lvalue prefix '*' cannot overflow
    |   | | |   | `-ImplicitCastExpr 0x13f809248 <col:39> 'struct dns_msg **' <LValueToRValue>
    |   | | |   |   `-DeclRefExpr 0x13f809228 <col:39> 'struct dns_msg **' lvalue ParmVar 0x13e122b48 'msg' 'struct dns_msg **'
    |   | | |   `-RecoveryExpr 0x13f809278 <col:44> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x13f8093d8 <line:18:4, col:36> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x13f8092f8 <col:4> 'int ()' Function 0x13f808e80 'lock_rw_unlock' 'int ()'
    |   | |   `-UnaryOperator 0x13f8093c0 <col:19, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |     `-CXXDependentScopeMemberExpr 0x13f809378 <col:20, col:32> '<dependent type>' contains-errors lvalue .lock
    |   | |       `-RecoveryExpr 0x13f809350 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |   | |         `-DeclRefExpr 0x13f809318 <col:20> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |   | `-CompoundStmt 0x13f809b18 <line:19:10, line:27:3>
    |   |   |-BinaryOperator 0x13f8097c0 <line:21:4, line:22:38> 'struct msgreply_entry *' contains-errors '='
    |   |   | |-DeclRefExpr 0x13f809428 <line:21:4> 'struct msgreply_entry *' lvalue Var 0x13e123108 'neg' 'struct msgreply_entry *'
    |   |   | `-CallExpr 0x13f809760 <col:10, line:22:38> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x13f809528 <line:21:10> 'int ()' Function 0x13f809470 'msg_cache_lookup' 'int ()'
    |   |   |   |-DeclRefExpr 0x13f809548 <col:27> 'struct module_env *' lvalue ParmVar 0x13e80e248 'env' 'struct module_env *'
    |   |   |   |-RecoveryExpr 0x13f8095a0 <col:32, col:36> '<dependent type>' contains-errors lvalue
    |   |   |   | `-DeclRefExpr 0x13f809568 <col:32> 'struct delegpt_ns *' lvalue Var 0x13e122f08 'ns' 'struct delegpt_ns *'
    |   |   |   |-RecoveryExpr 0x13f809600 <col:42, col:46> '<dependent type>' contains-errors lvalue
    |   |   |   | `-DeclRefExpr 0x13f8095c8 <col:42> 'struct delegpt_ns *' lvalue Var 0x13e122f08 'ns' 'struct delegpt_ns *'
    |   |   |   |-RecoveryExpr 0x13f809740 <line:22:5> '<dependent type>' contains-errors lvalue
    |   |   |   |-RecoveryExpr 0x13f809640 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |   |-IntegerLiteral 0x13f809660 <col:29> 'int' 0
    |   |   |   |-RecoveryExpr 0x13f809680 <col:32> '<dependent type>' contains-errors lvalue
    |   |   |   `-IntegerLiteral 0x13f8096a0 <col:37> 'int' 0
    |   |   `-IfStmt 0x13f809af8 <line:23:4, line:26:4>
    |   |     |-ImplicitCastExpr 0x13f809800 <line:23:7> 'struct msgreply_entry *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x13f8097e0 <col:7> 'struct msgreply_entry *' lvalue Var 0x13e123108 'neg' 'struct msgreply_entry *'
    |   |     `-CompoundStmt 0x13f809ad8 <col:12, line:26:4>
    |   |       |-CallExpr 0x13f809970 <line:24:5, col:32> 'int'
    |   |       | |-ImplicitCastExpr 0x13f809958 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   |       | | `-DeclRefExpr 0x13f8098f8 <col:5> 'int ()' Function 0x13f809840 'delegpt_add_neg_msg' 'int ()'
    |   |       | |-ImplicitCastExpr 0x13f8099a0 <col:25> 'struct delegpt *' <LValueToRValue>
    |   |       | | `-DeclRefExpr 0x13f809918 <col:25> 'struct delegpt *' lvalue ParmVar 0x13e122898 'dp' 'struct delegpt *'
    |   |       | `-ImplicitCastExpr 0x13f8099b8 <col:29> 'struct msgreply_entry *' <LValueToRValue>
    |   |       |   `-DeclRefExpr 0x13f809938 <col:29> 'struct msgreply_entry *' lvalue Var 0x13e123108 'neg' 'struct msgreply_entry *'
    |   |       `-CallExpr 0x13f809ab0 <line:25:5, col:36> '<dependent type>' contains-errors
    |   |         |-DeclRefExpr 0x13f8099d0 <col:5> 'int ()' Function 0x13f808e80 'lock_rw_unlock' 'int ()'
    |   |         `-UnaryOperator 0x13f809a98 <col:20, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |           `-CXXDependentScopeMemberExpr 0x13f809a50 <col:21, col:32> '<dependent type>' contains-errors lvalue .lock
    |   |             `-RecoveryExpr 0x13f809a28 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |   |               `-DeclRefExpr 0x13f8099f0 <col:21> 'struct msgreply_entry *' lvalue Var 0x13e123108 'neg' 'struct msgreply_entry *'
    |   `-IfStmt 0x13f80a800 <line:30:3, line:46:3> has_else
    |     |-ImplicitCastExpr 0x13f809d68 <line:30:6> 'struct ub_packed_rrset_key *' <LValueToRValue>
    |     | `-DeclRefExpr 0x13f809d48 <col:6> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |     |-CompoundStmt 0x13f80a3a0 <col:12, line:38:3>
    |     | |-IfStmt 0x13f80a110 <line:31:4, line:34:4>
    |     | | |-UnaryOperator 0x13f809fa0 <line:31:7, col:50> 'int' prefix '!' cannot overflow
    |     | | | `-CallExpr 0x13f809f18 <col:8, col:50> 'int'
    |     | | |   |-ImplicitCastExpr 0x13f809f00 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | | |   | `-DeclRefExpr 0x13f809e60 <col:8> 'int ()' Function 0x13f809da8 'delegpt_add_rrset_AAAA' 'int ()'
    |     | | |   |-ImplicitCastExpr 0x13f809f58 <col:31> 'struct delegpt *' <LValueToRValue>
    |     | | |   | `-DeclRefExpr 0x13f809e80 <col:31> 'struct delegpt *' lvalue ParmVar 0x13e122898 'dp' 'struct delegpt *'
    |     | | |   |-ImplicitCastExpr 0x13f809f70 <col:35> 'struct regional *' <LValueToRValue>
    |     | | |   | `-DeclRefExpr 0x13f809ea0 <col:35> 'struct regional *' lvalue ParmVar 0x13e1226c8 'region' 'struct regional *'
    |     | | |   |-ImplicitCastExpr 0x13f809f88 <col:43> 'struct ub_packed_rrset_key *' <LValueToRValue>
    |     | | |   | `-DeclRefExpr 0x13f809ec0 <col:43> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |     | | |   `-IntegerLiteral 0x13f809ee0 <col:49> 'int' 0
    |     | | `-CompoundStmt 0x13f80a0f0 <col:53, line:34:4>
    |     | |   |-CallExpr 0x13f80a098 <line:32:5, col:37> '<dependent type>' contains-errors
    |     | |   | |-DeclRefExpr 0x13f809fb8 <col:5> 'int ()' Function 0x13f808e80 'lock_rw_unlock' 'int ()'
    |     | |   | `-UnaryOperator 0x13f80a080 <col:20, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |   |   `-CXXDependentScopeMemberExpr 0x13f80a038 <col:21, col:33> '<dependent type>' contains-errors lvalue .lock
    |     | |   |     `-RecoveryExpr 0x13f80a010 <col:21, col:27> '<dependent type>' contains-errors lvalue
    |     | |   |       `-DeclRefExpr 0x13f809fd8 <col:21> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |     | |   `-ReturnStmt 0x13f80a0e0 <line:33:5, col:12>
    |     | |     `-IntegerLiteral 0x13f80a0c0 <col:12> 'int' 0
    |     | |-IfStmt 0x13f80a278 <line:35:4, line:36:47>
    |     | | |-ImplicitCastExpr 0x13f80a150 <line:35:7> 'struct dns_msg **' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x13f80a130 <col:7> 'struct dns_msg **' lvalue ParmVar 0x13e122b48 'msg' 'struct dns_msg **'
    |     | | `-CallExpr 0x13f80a238 <line:36:5, col:47> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x13f80a168 <col:5> 'int ()' Function 0x13f809110 'addr_to_additional' 'int ()'
    |     | |   |-DeclRefExpr 0x13f80a188 <col:24> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |     | |   |-DeclRefExpr 0x13f80a1a8 <col:30> 'struct regional *' lvalue ParmVar 0x13e1226c8 'region' 'struct regional *'
    |     | |   |-UnaryOperator 0x13f80a200 <col:38, col:39> 'struct dns_msg *' lvalue prefix '*' cannot overflow
    |     | |   | `-ImplicitCastExpr 0x13f80a1e8 <col:39> 'struct dns_msg **' <LValueToRValue>
    |     | |   |   `-DeclRefExpr 0x13f80a1c8 <col:39> 'struct dns_msg **' lvalue ParmVar 0x13e122b48 'msg' 'struct dns_msg **'
    |     | |   `-RecoveryExpr 0x13f80a218 <col:44> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x13f80a378 <line:37:4, col:36> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x13f80a298 <col:4> 'int ()' Function 0x13f808e80 'lock_rw_unlock' 'int ()'
    |     |   `-UnaryOperator 0x13f80a360 <col:19, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |     `-CXXDependentScopeMemberExpr 0x13f80a318 <col:20, col:32> '<dependent type>' contains-errors lvalue .lock
    |     |       `-RecoveryExpr 0x13f80a2f0 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     |         `-DeclRefExpr 0x13f80a2b8 <col:20> 'struct ub_packed_rrset_key *' lvalue Var 0x13e123308 'akey' 'struct ub_packed_rrset_key *'
    |     `-CompoundStmt 0x13f80a7c0 <line:38:10, line:46:3>
    |       `-IfStmt 0x13f80a7a0 <line:42:4, line:45:4>
    |         |-ImplicitCastExpr 0x13f80a588 <line:42:7> 'struct msgreply_entry *' <LValueToRValue>
    |         | `-DeclRefExpr 0x13f80a568 <col:7> 'struct msgreply_entry *' lvalue Var 0x13e123108 'neg' 'struct msgreply_entry *'
    |         `-CompoundStmt 0x13f80a780 <col:12, line:45:4>
    |           |-CallExpr 0x13f80a618 <line:43:5, col:32> 'int'
    |           | |-ImplicitCastExpr 0x13f80a600 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |           | | `-DeclRefExpr 0x13f80a5a0 <col:5> 'int ()' Function 0x13f809840 'delegpt_add_neg_msg' 'int ()'
    |           | |-ImplicitCastExpr 0x13f80a648 <col:25> 'struct delegpt *' <LValueToRValue>
    |           | | `-DeclRefExpr 0x13f80a5c0 <col:25> 'struct delegpt *' lvalue ParmVar 0x13e122898 'dp' 'struct delegpt *'
    |           | `-ImplicitCastExpr 0x13f80a660 <col:29> 'struct msgreply_entry *' <LValueToRValue>
    |           |   `-DeclRefExpr 0x13f80a5e0 <col:29> 'struct msgreply_entry *' lvalue Var 0x13e123108 'neg' 'struct msgreply_entry *'
    |           `-CallExpr 0x13f80a758 <line:44:5, col:36> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x13f80a678 <col:5> 'int ()' Function 0x13f808e80 'lock_rw_unlock' 'int ()'
    |             `-UnaryOperator 0x13f80a740 <col:20, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |               `-CXXDependentScopeMemberExpr 0x13f80a6f8 <col:21, col:32> '<dependent type>' contains-errors lvalue .lock
    |                 `-RecoveryExpr 0x13f80a6d0 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |                   `-DeclRefExpr 0x13f80a698 <col:21> 'struct msgreply_entry *' lvalue Var 0x13e123108 'neg' 'struct msgreply_entry *'
    `-ReturnStmt 0x13f80a8b0 <line:48:2, col:9>
      `-IntegerLiteral 0x13f80a890 <col:9> 'int' 1
