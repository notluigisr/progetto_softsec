TranslationUnitDecl 0x12f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f855bd0 '__int128'
|-TypedefDecl 0x12f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f855bf0 'unsigned __int128'
|-TypedefDecl 0x12f926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f926800 'struct __NSConstantString_tag'
|   `-Record 0x12f856580 '__NSConstantString_tag'
|-TypedefDecl 0x12f926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f855d90 '__SVInt8_t'
|-TypedefDecl 0x12f926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f855db0 '__SVInt16_t'
|-TypedefDecl 0x12f926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f855dd0 '__SVInt32_t'
|-TypedefDecl 0x12f926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f855df0 '__SVInt64_t'
|-TypedefDecl 0x12f926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f855e10 '__SVUint8_t'
|-TypedefDecl 0x12f926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f855e30 '__SVUint16_t'
|-TypedefDecl 0x12f926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f855e50 '__SVUint32_t'
|-TypedefDecl 0x12f926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f855e70 '__SVUint64_t'
|-TypedefDecl 0x12f926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f855e90 '__SVFloat16_t'
|-TypedefDecl 0x12f926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12f926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12f926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f856390 '__SVBool_t'
|-TypedefDecl 0x12f928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f8563f0 '__SVCount_t'
|-TypedefDecl 0x12f9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f9287b0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-TypedefDecl 0x12f928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f9287b0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
`-FunctionDecl 0x12f941238 <dataset_diviso_filec/func7609_vuln.c:1:1, line:82:1> line:1:12 tmff_init 'int (struct hid_device *, const short *)' static
  |-ParmVarDecl 0x12f928e48 <col:22, col:41> col:41 used hid 'struct hid_device *'
  |-ParmVarDecl 0x12f928ef8 <col:46, col:66> col:66 used ff_bits 'const short *'
  `-CompoundStmt 0x12f94a750 <line:2:1, line:82:1>
    |-DeclStmt 0x12f941528 <line:3:2, col:26>
    | |-RecordDecl 0x12f941338 <col:2, col:9> col:9 struct tmff_device
    | `-VarDecl 0x12f9414a8 <col:2, col:22> col:22 used tmff 'struct tmff_device *'
    |-DeclStmt 0x12f941728 <line:4:2, col:27>
    | |-RecordDecl 0x12f941540 <col:2, col:9> col:9 struct hid_report
    | `-VarDecl 0x12f9416a8 <col:2, col:21> col:21 used report 'struct hid_report *'
    |-DeclStmt 0x12f941928 <line:5:2, col:31>
    | |-RecordDecl 0x12f941740 <col:2, col:9> col:9 struct list_head
    | `-VarDecl 0x12f9418a8 <col:2, col:20> col:20 used report_list 'struct list_head *'
    |-DeclStmt 0x12f941d38 <line:6:2, line:7:31>
    | |-RecordDecl 0x12f941940 <line:6:2, col:9> col:9 struct hid_input
    | `-VarDecl 0x12f941aa8 <col:2, col:20> col:20 used hidinput 'struct hid_input *'
    |-DeclStmt 0x12f941f98 <line:8:2, col:47>
    | |-RecordDecl 0x12f941d50 <col:2, col:9> col:9 struct input_dev
    | `-VarDecl 0x12f941eb8 <col:2, col:42> col:20 used input_dev 'struct input_dev *' cinit
    |   `-RecoveryExpr 0x12f941f58 <col:32, col:42> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12f941f20 <col:32> 'struct hid_input *' lvalue Var 0x12f941aa8 'hidinput' 'struct hid_input *'
    |-DeclStmt 0x12f942030 <line:9:2, col:11>
    | `-VarDecl 0x12f941fc8 <col:2, col:6> col:6 used error 'int'
    |-DeclStmt 0x12f9420c8 <line:10:2, col:7>
    | `-VarDecl 0x12f942060 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x12f947360 <line:13:2, line:14:11>
    | |-UnaryOperator 0x12f9472a0 <line:13:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12f947288 <col:7> 'struct tmff_device *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f947268 <col:7> 'struct tmff_device *' lvalue Var 0x12f9414a8 'tmff' 'struct tmff_device *'
    | `-ReturnStmt 0x12f947350 <line:14:3, col:11>
    |   `-UnaryOperator 0x12f947338 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12f947320 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12f947300 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f9475c8 <line:18:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f9474f8 <col:2> 'int ()' Function 0x12f947440 'list_for_each_entry' 'int ()'
    | |-DeclRefExpr 0x12f947518 <col:22> 'struct hid_report *' lvalue Var 0x12f9416a8 'report' 'struct hid_report *'
    | |-DeclRefExpr 0x12f947538 <col:30> 'struct list_head *' lvalue Var 0x12f9418a8 'report_list' 'struct list_head *'
    | `-RecoveryExpr 0x12f9475a8 <col:43> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x12f949e18 <col:49, line:64:2>
    | |-DeclStmt 0x12f947680 <line:19:3, col:15>
    | | `-VarDecl 0x12f947618 <col:3, col:7> col:7 used fieldnum 'int'
    | `-ForStmt 0x12f949de0 <line:21:3, line:63:3>
    |   |-BinaryOperator 0x12f9476d8 <line:21:8, col:19> 'int' '='
    |   | |-DeclRefExpr 0x12f947698 <col:8> 'int' lvalue Var 0x12f947618 'fieldnum' 'int'
    |   | `-IntegerLiteral 0x12f9476b8 <col:19> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x12f947778 <col:22, col:41> 'int' contains-errors '<'
    |   | |-DeclRefExpr 0x12f9476f8 <col:22> 'int' lvalue Var 0x12f947618 'fieldnum' 'int'
    |   | `-RecoveryExpr 0x12f947750 <col:33, col:41> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12f947718 <col:33> 'struct hid_report *' lvalue Var 0x12f9416a8 'report' 'struct hid_report *'
    |   |-UnaryOperator 0x12f9477b8 <col:51, col:53> 'int' prefix '++'
    |   | `-DeclRefExpr 0x12f947798 <col:53> 'int' lvalue Var 0x12f947618 'fieldnum' 'int'
    |   `-CompoundStmt 0x12f949db8 <col:63, line:63:3>
    |     |-DeclStmt 0x12f947a88 <line:22:4, col:53>
    |     | |-RecordDecl 0x12f9477d0 <col:4, col:11> col:11 struct hid_field
    |     | `-VarDecl 0x12f947938 <col:4, col:52> col:22 used field 'struct hid_field *' cinit
    |     |   `-ArraySubscriptExpr 0x12f947a50 <col:30, col:52> '<dependent type>' contains-errors lvalue
    |     |     |-ImplicitCastExpr 0x12f947a20 <col:30, col:38> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | `-RecoveryExpr 0x12f9479d8 <col:30, col:38> '<dependent type>' contains-errors lvalue
    |     |     |   `-DeclRefExpr 0x12f9479a0 <col:30> 'struct hid_report *' lvalue Var 0x12f9416a8 'report' 'struct hid_report *'
    |     |     `-ImplicitCastExpr 0x12f947a38 <col:44> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x12f947a00 <col:44> 'int' lvalue Var 0x12f947618 'fieldnum' 'int'
    |     |-IfStmt 0x12f947b48 <line:24:4, line:25:5>
    |     | |-BinaryOperator 0x12f947b20 <line:24:8, col:27> 'int' contains-errors '<='
    |     | | |-RecoveryExpr 0x12f947ad8 <col:8, col:15> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x12f947aa0 <col:8> 'struct hid_field *' contains-errors lvalue Var 0x12f947938 'field' 'struct hid_field *'
    |     | | `-IntegerLiteral 0x12f947b00 <col:27> 'int' 0
    |     | `-ContinueStmt 0x12f947b40 <line:25:5>
    |     `-SwitchStmt 0x12f947c80 <line:27:4, line:62:4>
    |       |-ImplicitCastExpr 0x12f947c68 <line:27:12, col:28> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-CXXDependentScopeMemberExpr 0x12f947c20 <col:12, col:28> '<dependent type>' contains-errors lvalue .hid
    |       |   `-ArraySubscriptExpr 0x12f947c00 <col:12, col:26> '<dependent type>' contains-errors lvalue
    |       |     |-ImplicitCastExpr 0x12f947be8 <col:12, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |       |     | `-RecoveryExpr 0x12f947ba0 <col:12, col:19> '<dependent type>' contains-errors lvalue
    |       |     |   `-DeclRefExpr 0x12f947b68 <col:12> 'struct hid_field *' contains-errors lvalue Var 0x12f947938 'field' 'struct hid_field *'
    |       |     `-IntegerLiteral 0x12f947bc8 <col:25> 'int' 0
    |       `-CompoundStmt 0x12f949d58 <col:33, line:62:4>
    |         |-IfStmt 0x12f947fb0 <line:29:5, line:32:5>
    |         | |-BinaryOperator 0x12f947d40 <line:29:9, col:31> 'int' contains-errors '<'
    |         | | |-RecoveryExpr 0x12f947cf8 <col:9, col:16> '<dependent type>' contains-errors lvalue
    |         | | | `-DeclRefExpr 0x12f947cc0 <col:9> 'struct hid_field *' contains-errors lvalue Var 0x12f947938 'field' 'struct hid_field *'
    |         | | `-IntegerLiteral 0x12f947d20 <col:31> 'int' 2
    |         | `-CompoundStmt 0x12f947f90 <col:34, line:32:5>
    |         |   |-CallExpr 0x12f947f28 <line:30:6, col:25> 'int'
    |         |   | |-ImplicitCastExpr 0x12f947f10 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |         |   | | `-DeclRefExpr 0x12f947e40 <col:6> 'int ()' Function 0x12f947d88 'hid_warn' 'int ()'
    |         |   | |-ImplicitCastExpr 0x12f947f58 <col:15> 'struct hid_device *' <LValueToRValue>
    |         |   | | `-DeclRefExpr 0x12f947e60 <col:15> 'struct hid_device *' lvalue ParmVar 0x12f928e48 'hid' 'struct hid_device *'
    |         |   | `-ImplicitCastExpr 0x12f947f70 <col:20> 'char *' <ArrayToPointerDecay>
    |         |   |   `-StringLiteral 0x12f947ec0 <col:20> 'char[4]' lvalue "STR"
    |         |   `-ContinueStmt 0x12f947f88 <line:31:6>
    |         |-IfStmt 0x12f9481b0 <line:34:5, line:38:5>
    |         | |-BinaryOperator 0x12f948090 <line:34:9, line:35:14> 'int' contains-errors '=='
    |         | | |-RecoveryExpr 0x12f948008 <line:34:9, col:16> '<dependent type>' contains-errors lvalue
    |         | | | `-DeclRefExpr 0x12f947fd0 <col:9> 'struct hid_field *' contains-errors lvalue Var 0x12f947938 'field' 'struct hid_field *'
    |         | | `-RecoveryExpr 0x12f948068 <line:35:7, col:14> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x12f948030 <col:7> 'struct hid_field *' contains-errors lvalue Var 0x12f947938 'field' 'struct hid_field *'
    |         | `-CompoundStmt 0x12f948190 <col:31, line:38:5>
    |         |   |-CallExpr 0x12f948128 <line:36:6, col:25> 'int'
    |         |   | |-ImplicitCastExpr 0x12f948110 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |         |   | | `-DeclRefExpr 0x12f9480b0 <col:6> 'int ()' Function 0x12f947d88 'hid_warn' 'int ()'
    |         |   | |-ImplicitCastExpr 0x12f948158 <col:15> 'struct hid_device *' <LValueToRValue>
    |         |   | | `-DeclRefExpr 0x12f9480d0 <col:15> 'struct hid_device *' lvalue ParmVar 0x12f928e48 'hid' 'struct hid_device *'
    |         |   | `-ImplicitCastExpr 0x12f948170 <col:20> 'char *' <ArrayToPointerDecay>
    |         |   |   `-StringLiteral 0x12f9480f0 <col:20> 'char[4]' lvalue "STR"
    |         |   `-ContinueStmt 0x12f948188 <line:37:6>
    |         |-IfStmt 0x12f949400 <line:40:5, line:43:5>
    |         | |-BinaryOperator 0x12f9492e0 <line:40:9, col:41> 'int' contains-errors '&&'
    |         | | |-RecoveryExpr 0x12f949218 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |         | | | `-DeclRefExpr 0x12f9481d0 <col:9> 'struct tmff_device *' lvalue Var 0x12f9414a8 'tmff' 'struct tmff_device *'
    |         | | `-BinaryOperator 0x12f9492c0 <col:25, col:41> 'int' contains-errors '!='
    |         | |   |-RecoveryExpr 0x12f949278 <col:25, col:31> '<dependent type>' contains-errors lvalue
    |         | |   | `-DeclRefExpr 0x12f949240 <col:25> 'struct tmff_device *' lvalue Var 0x12f9414a8 'tmff' 'struct tmff_device *'
    |         | |   `-DeclRefExpr 0x12f9492a0 <col:41> 'struct hid_report *' lvalue Var 0x12f9416a8 'report' 'struct hid_report *'
    |         | `-CompoundStmt 0x12f9493e0 <col:49, line:43:5>
    |         |   |-CallExpr 0x12f949378 <line:41:6, col:25> 'int'
    |         |   | |-ImplicitCastExpr 0x12f949360 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |         |   | | `-DeclRefExpr 0x12f949300 <col:6> 'int ()' Function 0x12f947d88 'hid_warn' 'int ()'
    |         |   | |-ImplicitCastExpr 0x12f9493a8 <col:15> 'struct hid_device *' <LValueToRValue>
    |         |   | | `-DeclRefExpr 0x12f949320 <col:15> 'struct hid_device *' lvalue ParmVar 0x12f928e48 'hid' 'struct hid_device *'
    |         |   | `-ImplicitCastExpr 0x12f9493c0 <col:20> 'char *' <ArrayToPointerDecay>
    |         |   |   `-StringLiteral 0x12f949340 <col:20> 'char[4]' lvalue "STR"
    |         |   `-ContinueStmt 0x12f9493d8 <line:42:6>
    |         |-IfStmt 0x12f949640 <line:45:5, line:48:5>
    |         | |-BinaryOperator 0x12f949520 <line:45:9, col:45> 'int' contains-errors '&&'
    |         | | |-RecoveryExpr 0x12f949458 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |         | | | `-DeclRefExpr 0x12f949420 <col:9> 'struct tmff_device *' lvalue Var 0x12f9414a8 'tmff' 'struct tmff_device *'
    |         | | `-BinaryOperator 0x12f949500 <col:27, col:45> 'int' contains-errors '!='
    |         | |   |-RecoveryExpr 0x12f9494b8 <col:27, col:33> '<dependent type>' contains-errors lvalue
    |         | |   | `-DeclRefExpr 0x12f949480 <col:27> 'struct tmff_device *' lvalue Var 0x12f9414a8 'tmff' 'struct tmff_device *'
    |         | |   `-DeclRefExpr 0x12f9494e0 <col:45> 'struct hid_field *' contains-errors lvalue Var 0x12f947938 'field' 'struct hid_field *'
    |         | `-CompoundStmt 0x12f949620 <col:52, line:48:5>
    |         |   |-CallExpr 0x12f9495b8 <line:46:6, col:25> 'int'
    |         |   | |-ImplicitCastExpr 0x12f9495a0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |         |   | | `-DeclRefExpr 0x12f949540 <col:6> 'int ()' Function 0x12f947d88 'hid_warn' 'int ()'
    |         |   | |-ImplicitCastExpr 0x12f9495e8 <col:15> 'struct hid_device *' <LValueToRValue>
    |         |   | | `-DeclRefExpr 0x12f949560 <col:15> 'struct hid_device *' lvalue ParmVar 0x12f928e48 'hid' 'struct hid_device *'
    |         |   | `-ImplicitCastExpr 0x12f949600 <col:20> 'char *' <ArrayToPointerDecay>
    |         |   |   `-StringLiteral 0x12f949580 <col:20> 'char[4]' lvalue "STR"
    |         |   `-ContinueStmt 0x12f949618 <line:47:6>
    |         |-BinaryOperator 0x12f9496e0 <line:50:5, col:20> '<dependent type>' contains-errors '='
    |         | |-RecoveryExpr 0x12f949698 <col:5, col:11> '<dependent type>' contains-errors lvalue
    |         | | `-DeclRefExpr 0x12f949660 <col:5> 'struct tmff_device *' lvalue Var 0x12f9414a8 'tmff' 'struct tmff_device *'
    |         | `-DeclRefExpr 0x12f9496c0 <col:20> 'struct hid_report *' lvalue Var 0x12f9416a8 'report' 'struct hid_report *'
    |         |-BinaryOperator 0x12f949780 <line:51:5, col:22> '<dependent type>' contains-errors '='
    |         | |-RecoveryExpr 0x12f949738 <col:5, col:11> '<dependent type>' contains-errors lvalue
    |         | | `-DeclRefExpr 0x12f949700 <col:5> 'struct tmff_device *' lvalue Var 0x12f9414a8 'tmff' 'struct tmff_device *'
    |         | `-DeclRefExpr 0x12f949760 <col:22> 'struct hid_field *' contains-errors lvalue Var 0x12f947938 'field' 'struct hid_field *'
    |         |-ForStmt 0x12f949b58 <line:53:5, line:54:42>
    |         | |-BinaryOperator 0x12f9497e0 <line:53:10, col:14> 'int' '='
    |         | | |-DeclRefExpr 0x12f9497a0 <col:10> 'int' lvalue Var 0x12f942060 'i' 'int'
    |         | | `-IntegerLiteral 0x12f9497c0 <col:14> 'int' 0
    |         | |-<<<NULL>>>
    |         | |-BinaryOperator 0x12f9498e0 <col:17, col:31> 'int' '>='
    |         | | |-ImplicitCastExpr 0x12f9498c8 <col:17, col:26> 'int' <IntegralCast>
    |         | | | `-ImplicitCastExpr 0x12f9498b0 <col:17, col:26> 'short' <LValueToRValue>
    |         | | |   `-ArraySubscriptExpr 0x12f949870 <col:17, col:26> 'const short' lvalue
    |         | | |     |-ImplicitCastExpr 0x12f949840 <col:17> 'const short *' <LValueToRValue>
    |         | | |     | `-DeclRefExpr 0x12f949800 <col:17> 'const short *' lvalue ParmVar 0x12f928ef8 'ff_bits' 'const short *'
    |         | | |     `-ImplicitCastExpr 0x12f949858 <col:25> 'int' <LValueToRValue>
    |         | | |       `-DeclRefExpr 0x12f949820 <col:25> 'int' lvalue Var 0x12f942060 'i' 'int'
    |         | | `-IntegerLiteral 0x12f949890 <col:31> 'int' 0
    |         | |-UnaryOperator 0x12f949920 <col:34, col:35> 'int' postfix '++'
    |         | | `-DeclRefExpr 0x12f949900 <col:34> 'int' lvalue Var 0x12f942060 'i' 'int'
    |         | `-CallExpr 0x12f949b28 <line:54:6, col:42> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x12f949a18 <col:6> 'int ()' Function 0x12f949960 'set_bit' 'int ()'
    |         |   |-ArraySubscriptExpr 0x12f949aa8 <col:14, col:23> 'const short' lvalue
    |         |   | |-ImplicitCastExpr 0x12f949a78 <col:14> 'const short *' <LValueToRValue>
    |         |   | | `-DeclRefExpr 0x12f949a38 <col:14> 'const short *' lvalue ParmVar 0x12f928ef8 'ff_bits' 'const short *'
    |         |   | `-ImplicitCastExpr 0x12f949a90 <col:22> 'int' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x12f949a58 <col:22> 'int' lvalue Var 0x12f942060 'i' 'int'
    |         |   `-RecoveryExpr 0x12f949b00 <col:26, col:37> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x12f949ac8 <col:26> 'struct input_dev *' contains-errors lvalue Var 0x12f941eb8 'input_dev' 'struct input_dev *'
    |         |-BreakStmt 0x12f949b90 <line:56:5>
    |         |-DefaultStmt 0x12f949d30 <line:58:4, line:60:26>
    |         | `-CallExpr 0x12f949cf8 <line:59:5, line:60:26> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x12f949b98 <line:59:5> 'int ()' Function 0x12f947d88 'hid_warn' 'int ()'
    |         |   |-DeclRefExpr 0x12f949bb8 <col:14> 'struct hid_device *' lvalue ParmVar 0x12f928e48 'hid' 'struct hid_device *'
    |         |   |-StringLiteral 0x12f949bd8 <col:19> 'char[4]' lvalue "STR"
    |         |   `-CXXDependentScopeMemberExpr 0x12f949cb0 <line:60:7, col:23> '<dependent type>' contains-errors lvalue .hid
    |         |     `-ArraySubscriptExpr 0x12f949c90 <col:7, col:21> '<dependent type>' contains-errors lvalue
    |         |       |-ImplicitCastExpr 0x12f949c78 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |         |       | `-RecoveryExpr 0x12f949c30 <col:7, col:14> '<dependent type>' contains-errors lvalue
    |         |       |   `-DeclRefExpr 0x12f949bf8 <col:7> 'struct hid_field *' contains-errors lvalue Var 0x12f947938 'field' 'struct hid_field *'
    |         |       `-IntegerLiteral 0x12f949c58 <col:20> 'int' 0
    |         `-ContinueStmt 0x12f949d50 <line:61:5>
    |-IfStmt 0x12f94a128 <line:66:2, line:70:2>
    | |-UnaryOperator 0x12f949eb0 <line:66:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12f949e98 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12f949e70 <col:7, col:13> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f949e38 <col:7> 'struct tmff_device *' lvalue Var 0x12f9414a8 'tmff' 'struct tmff_device *'
    | `-CompoundStmt 0x12f94a108 <col:21, line:70:2>
    |   |-CallExpr 0x12f94a020 <line:67:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x12f94a008 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12f949fa8 <col:3> 'int ()' Function 0x12f949ef0 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x12f94a050 <col:11> 'struct hid_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12f949fc8 <col:11> 'struct hid_device *' lvalue ParmVar 0x12f928e48 'hid' 'struct hid_device *'
    |   | `-ImplicitCastExpr 0x12f94a068 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x12f949fe8 <col:16> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x12f94a0f0 <line:69:3, col:8> 'fail' 0x12f94a0a0
    |-IfStmt 0x12f94a368 <line:73:2, line:74:8>
    | |-ImplicitCastExpr 0x12f94a338 <line:73:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f94a318 <col:6> 'int' lvalue Var 0x12f941fc8 'error' 'int'
    | `-GotoStmt 0x12f94a350 <line:74:3, col:8> 'fail' 0x12f94a0a0
    |-CallExpr 0x12f94a4e0 <line:76:2, col:21> 'int'
    | |-ImplicitCastExpr 0x12f94a4c8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12f94a468 <col:2> 'int ()' Function 0x12f94a3b0 'hid_info' 'int ()'
    | |-ImplicitCastExpr 0x12f94a510 <col:11> 'struct hid_device *' <LValueToRValue>
    | | `-DeclRefExpr 0x12f94a488 <col:11> 'struct hid_device *' lvalue ParmVar 0x12f928e48 'hid' 'struct hid_device *'
    | `-ImplicitCastExpr 0x12f94a528 <col:16> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12f94a4a8 <col:16> 'char[4]' lvalue "STR"
    |-ReturnStmt 0x12f94a560 <line:77:2, col:9>
    | `-IntegerLiteral 0x12f94a540 <col:9> 'int' 0
    |-LabelStmt 0x12f94a6e8 <line:79:1, line:80:12> 'fail'
    | `-CallExpr 0x12f94a6a8 <col:2, col:12> 'int'
    |   |-ImplicitCastExpr 0x12f94a690 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12f94a650 <col:2> 'int ()' Function 0x12f94a598 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x12f94a6d0 <col:8> 'struct tmff_device *' <LValueToRValue>
    |     `-DeclRefExpr 0x12f94a670 <col:8> 'struct tmff_device *' lvalue Var 0x12f9414a8 'tmff' 'struct tmff_device *'
    `-ReturnStmt 0x12f94a740 <line:81:2, col:9>
      `-ImplicitCastExpr 0x12f94a728 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12f94a708 <col:9> 'int' lvalue Var 0x12f941fc8 'error' 'int'
