TranslationUnitDecl 0x155855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1558564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x155855bd0 '__int128'
|-TypedefDecl 0x155856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x155855bf0 'unsigned __int128'
|-TypedefDecl 0x155926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x155926000 'struct __NSConstantString_tag'
|   `-Record 0x155856580 '__NSConstantString_tag'
|-TypedefDecl 0x155926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x155855d90 '__SVInt8_t'
|-TypedefDecl 0x155926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x155855db0 '__SVInt16_t'
|-TypedefDecl 0x155926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x155855dd0 '__SVInt32_t'
|-TypedefDecl 0x1559263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x155855df0 '__SVInt64_t'
|-TypedefDecl 0x155926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x155855e10 '__SVUint8_t'
|-TypedefDecl 0x1559264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x155855e30 '__SVUint16_t'
|-TypedefDecl 0x155926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x155855e50 '__SVUint32_t'
|-TypedefDecl 0x155926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x155855e70 '__SVUint64_t'
|-TypedefDecl 0x1559265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x155855e90 '__SVFloat16_t'
|-TypedefDecl 0x155926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x155855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1559266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x155855ed0 '__SVFloat64_t'
|-TypedefDecl 0x155926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x155855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x155926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x155855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1559267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x155855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x155926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x155855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1559268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x155855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x155926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x155855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x155926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x155855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1559269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x155855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x155926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x155855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x155926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x155856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x155926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x155856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x155926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x155856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x155926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x155856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x155926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x155856090 '__clang_svint8x3_t'
|-TypedefDecl 0x155926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1558560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x155926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1558560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x155926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1558560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x155926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x155856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x155926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x155856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x155926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x155856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x155926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x155856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x155926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x155856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x155927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1558561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x155927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1558561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1559278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1558561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x155927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x155856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1559279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x155856230 '__clang_svint16x4_t'
|-TypedefDecl 0x155927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x155856250 '__clang_svint32x4_t'
|-TypedefDecl 0x155927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x155856270 '__clang_svint64x4_t'
|-TypedefDecl 0x155927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x155856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x155927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1558562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x155927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1558562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x155927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1558562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x155927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x155856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x155927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x155856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x155927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x155856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x155927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x155856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x155927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x155856390 '__SVBool_t'
|-TypedefDecl 0x155927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1558563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x155927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1558563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x155927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1558563f0 '__SVCount_t'
|-TypedefDecl 0x155927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x155927fb0 'char *'
|   `-BuiltinType 0x1558556b0 'char'
|-TypedefDecl 0x155928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x155927fb0 'char *'
|   `-BuiltinType 0x1558556b0 'char'
|-FunctionDecl 0x1559281a8 <dataset_diviso_filec/func17131_vuln.c:1:1, line:40:1> line:1:12 read_pack_info_file 'int (const char *)' static
| |-ParmVarDecl 0x1559280d8 <col:32, col:44> col:44 used infofile 'const char *'
| `-CompoundStmt 0x15600b860 <line:2:1, line:40:1>
|   |-DeclStmt 0x1559283d8 <line:4:2, col:17>
|   | `-VarDecl 0x155928370 <col:2, col:16> col:7 used line 'char[1000]'
|   |-DeclStmt 0x155928490 <line:5:2, col:17>
|   | `-VarDecl 0x155928408 <col:2, col:16> col:6 used old_cnt 'int' cinit
|   |   `-IntegerLiteral 0x155928470 <col:16> 'int' 0
|   |-IfStmt 0x1559287d0 <line:8:2, line:9:10>
|   | |-UnaryOperator 0x155928788 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x155928770 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x155928750 <col:7> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1559287c0 <line:9:3, col:10>
|   |   `-IntegerLiteral 0x1559287a0 <col:10> 'int' 1
|   |-WhileStmt 0x15600b590 <line:11:2, line:34:2>
|   | |-CallExpr 0x1560097f0 <line:11:9, col:37> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x1560096e0 <col:9> 'int ()' Function 0x156009628 'fgets' 'int ()'
|   | | |-DeclRefExpr 0x156009700 <col:15> 'char[1000]' lvalue Var 0x155928370 'line' 'char[1000]'
|   | | |-UnaryExprOrTypeTraitExpr 0x156009760 <col:21, col:32> 'unsigned long' sizeof
|   | | | `-ParenExpr 0x156009740 <col:27, col:32> 'char[1000]' lvalue
|   | | |   `-DeclRefExpr 0x156009720 <col:28> 'char[1000]' lvalue Var 0x155928370 'line' 'char[1000]' non_odr_use_unevaluated
|   | | `-RecoveryExpr 0x1560097d0 <col:35> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15600b560 <col:40, line:34:2>
|   |   |-DeclStmt 0x156009f98 <line:12:3, col:25>
|   |   | `-VarDecl 0x156009840 <col:3, col:24> col:7 used len 'int' cinit
|   |   |   `-ImplicitCastExpr 0x156009f80 <col:13, col:24> 'int' <IntegralCast>
|   |   |     `-CallExpr 0x156009f28 <col:13, col:24> 'unsigned long'
|   |   |       |-ImplicitCastExpr 0x156009f10 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x156009e80 <col:13> 'unsigned long (const char *)' Function 0x156009d10 'strlen' 'unsigned long (const char *)'
|   |   |       `-ImplicitCastExpr 0x156009f68 <col:20> 'const char *' <NoOp>
|   |   |         `-ImplicitCastExpr 0x156009f50 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |           `-DeclRefExpr 0x156009ea0 <col:20> 'char[1000]' lvalue Var 0x155928370 'line' 'char[1000]'
|   |   |-IfStmt 0x15600a228 <line:13:3, line:14:18>
|   |   | |-BinaryOperator 0x15600a120 <line:13:7, col:29> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x15600a108 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x156009fb0 <col:7> 'int' lvalue Var 0x156009840 'len' 'int'
|   |   | | `-BinaryOperator 0x15600a0e8 <col:14, col:29> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x15600a0d0 <col:14, col:24> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x15600a0b8 <col:14, col:24> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x15600a080 <col:14, col:24> 'char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x15600a068 <col:14> 'char *' <ArrayToPointerDecay>
|   |   | |   |     | `-DeclRefExpr 0x156009fd0 <col:14> 'char[1000]' lvalue Var 0x155928370 'line' 'char[1000]'
|   |   | |   |     `-BinaryOperator 0x15600a048 <col:19, col:23> 'int' '-'
|   |   | |   |       |-ImplicitCastExpr 0x15600a030 <col:19> 'int' <LValueToRValue>
|   |   | |   |       | `-DeclRefExpr 0x156009ff0 <col:19> 'int' lvalue Var 0x156009840 'len' 'int'
|   |   | |   |       `-IntegerLiteral 0x15600a010 <col:23> 'int' 1
|   |   | |   `-CharacterLiteral 0x15600a0a0 <col:29> 'int' 10
|   |   | `-BinaryOperator 0x15600a208 <line:14:4, col:18> 'char' '='
|   |   |   |-ArraySubscriptExpr 0x15600a1b0 <col:4, col:14> 'char' lvalue
|   |   |   | |-ImplicitCastExpr 0x15600a198 <col:4> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x15600a140 <col:4> 'char[1000]' lvalue Var 0x155928370 'line' 'char[1000]'
|   |   |   | `-UnaryOperator 0x15600a180 <col:9, col:11> 'int' prefix '--'
|   |   |   |   `-DeclRefExpr 0x15600a160 <col:11> 'int' lvalue Var 0x156009840 'len' 'int'
|   |   |   `-ImplicitCastExpr 0x15600a1f0 <col:18> 'char' <IntegralCast>
|   |   |     `-IntegerLiteral 0x15600a1d0 <col:18> 'int' 0
|   |   |-IfStmt 0x15600a2a0 <line:16:3, line:17:4>
|   |   | |-UnaryOperator 0x15600a280 <line:16:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x15600a268 <col:8> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15600a248 <col:8> 'int' lvalue Var 0x156009840 'len' 'int'
|   |   | `-ContinueStmt 0x15600a298 <line:17:4>
|   |   `-SwitchStmt 0x15600a368 <line:19:3, line:33:3>
|   |     |-ImplicitCastExpr 0x15600a350 <line:19:11, col:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x15600a338 <col:11, col:17> 'char' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x15600a318 <col:11, col:17> 'char' lvalue
|   |     |     |-ImplicitCastExpr 0x15600a300 <col:11> 'char *' <ArrayToPointerDecay>
|   |     |     | `-DeclRefExpr 0x15600a2c0 <col:11> 'char[1000]' lvalue Var 0x155928370 'line' 'char[1000]'
|   |     |     `-IntegerLiteral 0x15600a2e0 <col:16> 'int' 0
|   |     `-CompoundStmt 0x15600b510 <col:20, line:33:3>
|   |       |-CaseStmt 0x15600a3c0 <line:20:3, line:22:10>
|   |       | |-ConstantExpr 0x15600a3a8 <line:20:8> 'int'
|   |       | | `-CharacterLiteral 0x15600a390 <col:8> 'int' 80
|   |       | `-IfStmt 0x15600b218 <line:21:4, line:22:10>
|   |       |   |-CallExpr 0x15600a558 <line:21:8, col:38> 'int'
|   |       |   | |-ImplicitCastExpr 0x15600a540 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x15600a4c8 <col:8> 'int ()' Function 0x15600a410 'parse_pack_def' 'int ()'
|   |       |   | |-ImplicitCastExpr 0x15600a588 <col:23> 'char *' <ArrayToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x15600a4e8 <col:23> 'char[1000]' lvalue Var 0x155928370 'line' 'char[1000]'
|   |       |   | `-UnaryOperator 0x15600a528 <col:29, col:36> 'int' postfix '++'
|   |       |   |   `-DeclRefExpr 0x15600a508 <col:29> 'int' lvalue Var 0x155928408 'old_cnt' 'int'
|   |       |   `-GotoStmt 0x15600b200 <line:22:5, col:10> 'out_stale' 0x15600a5a0
|   |       |-BreakStmt 0x15600b238 <line:23:4>
|   |       |-CaseStmt 0x15600b270 <line:24:3, line:25:9>
|   |       | |-ConstantExpr 0x15600b258 <line:24:8> 'int'
|   |       | | `-CharacterLiteral 0x15600b240 <col:8> 'int' 68
|   |       | `-GotoStmt 0x15600b298 <line:25:4, col:9> 'out_stale' 0x15600a5a0
|   |       |-BreakStmt 0x15600b2b0 <line:26:4>
|   |       |-CaseStmt 0x15600b2e8 <line:27:3, line:28:9>
|   |       | |-ConstantExpr 0x15600b2d0 <line:27:8> 'int'
|   |       | | `-CharacterLiteral 0x15600b2b8 <col:8> 'int' 84
|   |       | `-GotoStmt 0x15600b310 <line:28:4, col:9> 'out_stale' 0x15600a5a0
|   |       |-BreakStmt 0x15600b328 <line:29:4>
|   |       |-DefaultStmt 0x15600b4e8 <line:30:3, line:31:21>
|   |       | `-CallExpr 0x15600b488 <col:4, col:21> 'int'
|   |       |   |-ImplicitCastExpr 0x15600b470 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x15600b410 <col:4> 'int ()' Function 0x15600b358 'error' 'int ()'
|   |       |   |-ImplicitCastExpr 0x15600b4b8 <col:10> 'char *' <ArrayToPointerDecay>
|   |       |   | `-StringLiteral 0x15600b430 <col:10> 'char[4]' lvalue "STR"
|   |       |   `-ImplicitCastExpr 0x15600b4d0 <col:17> 'char *' <ArrayToPointerDecay>
|   |       |     `-DeclRefExpr 0x15600b450 <col:17> 'char[1000]' lvalue Var 0x155928370 'line' 'char[1000]'
|   |       `-BreakStmt 0x15600b508 <line:32:4>
|   |-CallExpr 0x15600b710 <line:35:2, col:11> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15600b690 <col:2> 'int ()' Function 0x15600b5d8 'fclose' 'int ()'
|   | `-RecoveryExpr 0x15600b6f0 <col:9> '<dependent type>' contains-errors lvalue
|   |-ReturnStmt 0x15600b758 <line:36:2, col:9>
|   | `-IntegerLiteral 0x15600b738 <col:9> 'int' 0
|   |-LabelStmt 0x15600b810 <line:37:2, line:38:11> 'out_stale'
|   | `-CallExpr 0x15600b7e8 <col:2, col:11> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15600b768 <col:2> 'int ()' Function 0x15600b5d8 'fclose' 'int ()'
|   |   `-RecoveryExpr 0x15600b7c8 <col:9> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x15600b850 <line:39:2, col:9>
|     `-IntegerLiteral 0x15600b830 <col:9> 'int' 1
`-FunctionDecl 0x156009d10 <line:12:13> col:13 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x156009e10 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x156009db8 <<invalid sloc>> Implicit 902
