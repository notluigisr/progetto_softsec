TranslationUnitDecl 0x14a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a055bd0 '__int128'
|-TypedefDecl 0x14a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a055bf0 'unsigned __int128'
|-TypedefDecl 0x14a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14a056580 '__NSConstantString_tag'
|-TypedefDecl 0x14a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a055d90 '__SVInt8_t'
|-TypedefDecl 0x14a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a055db0 '__SVInt16_t'
|-TypedefDecl 0x14a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a055dd0 '__SVInt32_t'
|-TypedefDecl 0x14a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a055df0 '__SVInt64_t'
|-TypedefDecl 0x14a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a055e10 '__SVUint8_t'
|-TypedefDecl 0x14a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a055e30 '__SVUint16_t'
|-TypedefDecl 0x14a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a055e50 '__SVUint32_t'
|-TypedefDecl 0x14a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a055e70 '__SVUint64_t'
|-TypedefDecl 0x14a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a055e90 '__SVFloat16_t'
|-TypedefDecl 0x14a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a056390 '__SVBool_t'
|-TypedefDecl 0x14a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a0563f0 '__SVCount_t'
|-TypedefDecl 0x14a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
|-TypedefDecl 0x14a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
`-FunctionDecl 0x14a80de58 <dataset_diviso_filec/func12605_nonvuln.c:1:1, line:19:1> line:1:1 referenced invalid ref_stack_index 'int (const int *, long)'
  |-ParmVarDecl 0x14a80dcf0 <col:17, col:36> col:36 invalid pstack 'const int *'
  |-ParmVarDecl 0x14a80dd70 <col:44, col:49> col:49 used idx 'long'
  `-CompoundStmt 0x14a827cf0 <line:2:1, line:19:1>
    |-BinaryOperator 0x14a80dfb0 <line:3:5, col:22> '<dependent type>' contains-errors '*'
    | |-RecoveryExpr 0x14a80df30 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14a80df10 <col:5> 'int (const int *, long)' Function 0x14a80de58 'ref_stack_index' 'int (const int *, long)'
    | `-RecoveryExpr 0x14a80df90 <col:22> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14a80e180 <line:4:5, col:44>
    | `-VarDecl 0x14a80dfe8 <col:5, col:41> col:10 used used 'int' cinit
    |   `-BinaryOperator 0x14a80e160 <col:17, col:41> '<dependent type>' contains-errors '-'
    |     |-BinaryOperator 0x14a80e0d8 <col:17, col:29> '<dependent type>' contains-errors '+'
    |     | |-CXXDependentScopeMemberExpr 0x14a80e070 <col:17, col:25> '<dependent type>' contains-errors lvalue ->p
    |     | | `-RecoveryExpr 0x14a80e050 <col:17> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x14a80e0b8 <col:29> 'int' 1
    |     `-CXXDependentScopeMemberExpr 0x14a80e118 <col:33, col:41> '<dependent type>' contains-errors lvalue ->bot
    |       `-RecoveryExpr 0x14a80e0f8 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a80e270 <line:6:5, line:7:16>
    | |-BinaryOperator 0x14a80e208 <line:6:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x14a80e1d8 <col:9> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x14a80e198 <col:9> 'long' lvalue ParmVar 0x14a80dd70 'idx' 'long'
    | | `-ImplicitCastExpr 0x14a80e1f0 <col:15> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x14a80e1b8 <col:15> 'int' 0
    | `-ReturnStmt 0x14a80e260 <line:7:9, col:16>
    |   `-RecoveryExpr 0x14a80e240 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a827460 <line:8:5, line:9:33>
    | |-BinaryOperator 0x14a80e318 <line:8:9, col:15> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x14a80e2d0 <col:9> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x14a80e290 <col:9> 'long' lvalue ParmVar 0x14a80dd70 'idx' 'long'
    | | `-ImplicitCastExpr 0x14a80e300 <col:15> 'long' contains-errors <IntegralCast>
    | |   `-ImplicitCastExpr 0x14a80e2e8 <col:15> 'int' contains-errors <LValueToRValue>
    | |     `-DeclRefExpr 0x14a80e2b0 <col:15> 'int' contains-errors lvalue Var 0x14a80dfe8 'used' 'int'
    | `-ReturnStmt 0x14a827450 <line:9:9, col:33>
    |   `-RecoveryExpr 0x14a827420 <col:16, col:33> '<dependent type>' contains-errors lvalue
    |     |-CXXDependentScopeMemberExpr 0x14a80e358 <col:16, col:24> '<dependent type>' contains-errors lvalue ->p
    |     | `-RecoveryExpr 0x14a80e338 <col:16> '<dependent type>' contains-errors lvalue
    |     `-ParenExpr 0x14a827400 <col:28, col:33> '<overloaded function type>' lvalue
    |       `-UnresolvedLookupExpr 0x14a80e3b8 <col:29> '<overloaded function type>' lvalue (no ADL) = 'uint' empty
    |-NullStmt 0x14a827480 <col:38>
    `-DoStmt 0x14a827a88 <line:11:5, line:17:25>
      |-CompoundStmt 0x14a8279b8 <line:11:8, line:17:5>
      | |-IfStmt 0x14a8275d8 <line:13:9, line:14:20>
      | | |-BinaryOperator 0x14a827570 <line:13:13, col:23> 'int' contains-errors '=='
      | | | |-RecoveryExpr 0x14a827550 <col:13> '<dependent type>' contains-errors lvalue
      | | | `-IntegerLiteral 0x14a827510 <col:23> 'int' 0
      | | `-ReturnStmt 0x14a8275c8 <line:14:13, col:20>
      | |   `-RecoveryExpr 0x14a8275a8 <col:20> '<dependent type>' contains-errors lvalue
      | |-CompoundAssignOperator 0x14a827668 <line:15:9, col:16> 'long' contains-errors '-=' ComputeLHSTy='long' ComputeResultTy='long'
      | | |-DeclRefExpr 0x14a8275f8 <col:9> 'long' lvalue ParmVar 0x14a80dd70 'idx' 'long'
      | | `-ImplicitCastExpr 0x14a827650 <col:16> 'long' contains-errors <IntegralCast>
      | |   `-ImplicitCastExpr 0x14a827638 <col:16> 'int' contains-errors <LValueToRValue>
      | |     `-DeclRefExpr 0x14a827618 <col:16> 'int' contains-errors lvalue Var 0x14a80dfe8 'used' 'int'
      | `-BinaryOperator 0x14a827998 <line:16:9, col:36> 'int' contains-errors '='
      |   |-DeclRefExpr 0x14a827698 <col:9> 'int' contains-errors lvalue Var 0x14a80dfe8 'used' 'int'
      |   `-CallExpr 0x14a827970 <col:16, col:36> '<dependent type>' contains-errors
      |     |-DeclRefExpr 0x14a827810 <col:16> 'int ()' Function 0x14a827758 'r_size' 'int ()'
      |     `-UnaryOperator 0x14a827958 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
      |       `-CXXDependentScopeMemberExpr 0x14a827910 <col:24, col:32> '<dependent type>' contains-errors lvalue ->used
      |         `-RecoveryExpr 0x14a8278f0 <col:24> '<dependent type>' contains-errors lvalue
      `-BinaryOperator 0x14a827a68 <line:17:14, col:21> 'int' contains-errors '>='
        |-ImplicitCastExpr 0x14a827a20 <col:14> 'long' <LValueToRValue>
        | `-DeclRefExpr 0x14a8279e0 <col:14> 'long' lvalue ParmVar 0x14a80dd70 'idx' 'long'
        `-ImplicitCastExpr 0x14a827a50 <col:21> 'long' contains-errors <IntegralCast>
          `-ImplicitCastExpr 0x14a827a38 <col:21> 'int' contains-errors <LValueToRValue>
            `-DeclRefExpr 0x14a827a00 <col:21> 'int' contains-errors lvalue Var 0x14a80dfe8 'used' 'int'
