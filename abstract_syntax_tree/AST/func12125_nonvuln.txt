TranslationUnitDecl 0x160029008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x160029eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1600295d0 '__int128'
|-TypedefDecl 0x160029f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1600295f0 'unsigned __int128'
|-TypedefDecl 0x16100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x16100bc00 'struct __NSConstantString_tag'
|   `-Record 0x160029f80 '__NSConstantString_tag'
|-TypedefDecl 0x16100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x160029790 '__SVInt8_t'
|-TypedefDecl 0x16100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1600297b0 '__SVInt16_t'
|-TypedefDecl 0x16100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1600297d0 '__SVInt32_t'
|-TypedefDecl 0x16100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1600297f0 '__SVInt64_t'
|-TypedefDecl 0x16100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x160029810 '__SVUint8_t'
|-TypedefDecl 0x16100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x160029830 '__SVUint16_t'
|-TypedefDecl 0x16100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x160029850 '__SVUint32_t'
|-TypedefDecl 0x16100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x160029870 '__SVUint64_t'
|-TypedefDecl 0x16100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x160029890 '__SVFloat16_t'
|-TypedefDecl 0x16100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1600298b0 '__SVFloat32_t'
|-TypedefDecl 0x16100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1600298d0 '__SVFloat64_t'
|-TypedefDecl 0x16100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1600298f0 '__SVBfloat16_t'
|-TypedefDecl 0x16100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x160029910 '__clang_svint8x2_t'
|-TypedefDecl 0x16100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x160029930 '__clang_svint16x2_t'
|-TypedefDecl 0x16100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x160029950 '__clang_svint32x2_t'
|-TypedefDecl 0x16100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x160029970 '__clang_svint64x2_t'
|-TypedefDecl 0x16100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x160029990 '__clang_svuint8x2_t'
|-TypedefDecl 0x16100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1600299b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x16100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1600299d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x16100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1600299f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x16100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x160029a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x16100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x160029a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x16100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x160029a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x16100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x160029a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x16100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x160029a90 '__clang_svint8x3_t'
|-TypedefDecl 0x16100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x160029ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x16100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x160029ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x16100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x160029af0 '__clang_svint64x3_t'
|-TypedefDecl 0x16100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x160029b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x16100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x160029b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x16100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x160029b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x16100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x160029b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x16100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x160029b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x16100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x160029bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x16100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x160029bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x16100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x160029bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x16100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x160029c10 '__clang_svint8x4_t'
|-TypedefDecl 0x16100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x160029c30 '__clang_svint16x4_t'
|-TypedefDecl 0x16100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x160029c50 '__clang_svint32x4_t'
|-TypedefDecl 0x16100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x160029c70 '__clang_svint64x4_t'
|-TypedefDecl 0x16100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x160029c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x16100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x160029cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x16100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x160029cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x16100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x160029cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x16100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x160029d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x16100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x160029d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x16100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x160029d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x16100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x160029d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x16100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x160029d90 '__SVBool_t'
|-TypedefDecl 0x16100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x160029db0 '__clang_svboolx2_t'
|-TypedefDecl 0x16100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x160029dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x16100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x160029df0 '__SVCount_t'
|-TypedefDecl 0x16100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x16100dbb0 'char *'
|   `-BuiltinType 0x1600290b0 'char'
|-TypedefDecl 0x16100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x16100dbb0 'char *'
|   `-BuiltinType 0x1600290b0 'char'
`-FunctionDecl 0x16100e128 <dataset_diviso_filec/func12125_nonvuln.c:1:1, line:37:1> line:1:1 invalid virDomainMigrateUnmanaged 'int (int, const char *, unsigned int, const char *, const char *, const char *, unsigned long long)'
  |-ParmVarDecl 0x16100dcf0 <col:27, col:40> col:40 invalid domain 'int'
  |-ParmVarDecl 0x16100dd70 <line:2:27, col:39> col:39 used xmlin 'const char *'
  |-ParmVarDecl 0x16100ddf0 <line:3:27, col:40> col:40 used flags 'unsigned int'
  |-ParmVarDecl 0x16100de70 <line:4:27, col:39> col:39 used dname 'const char *'
  |-ParmVarDecl 0x16100def0 <line:5:27, col:39> col:39 used dconnuri 'const char *'
  |-ParmVarDecl 0x16100df70 <line:6:27, col:39> col:39 used miguri 'const char *'
  |-ParmVarDecl 0x16100dff0 <line:7:27, col:46> col:46 used bandwidth 'unsigned long long'
  `-CompoundStmt 0x16180b500 <line:8:1, line:37:1>
    |-DeclStmt 0x16100e2c0 <line:9:5, col:17>
    | `-VarDecl 0x16100e220 <col:5, col:16> col:9 used ret 'int' cinit
    |   `-UnaryOperator 0x16100e2a8 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x16100e288 <col:16> 'int' 1
    |-DeclStmt 0x16100e378 <line:11:5, col:20>
    | `-VarDecl 0x16100e2f0 <col:5, col:19> col:9 used nparams 'int' cinit
    |   `-IntegerLiteral 0x16100e358 <col:19> 'int' 0
    |-DeclStmt 0x161808e88 <line:12:5, col:22>
    | `-VarDecl 0x161808e00 <col:5, col:21> col:9 used maxparams 'int' cinit
    |   `-IntegerLiteral 0x161808e68 <col:21> 'int' 0
    |-IfStmt 0x161809370 <line:14:5, line:17:14>
    | |-BinaryOperator 0x1618092e8 <line:14:9, line:16:66> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x161808ea0 <line:14:9> 'const char *' lvalue ParmVar 0x16100df70 'miguri' 'const char *'
    | | `-BinaryOperator 0x1618092c8 <line:15:9, line:16:66> 'int' contains-errors '<'
    | |   |-CallExpr 0x161809280 <line:15:9, line:16:62> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x161809020 <line:15:9> 'int ()' Function 0x161808f68 'virTypedParamsAddString' 'int ()'
    | |   | |-UnaryOperator 0x161809248 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | | `-RecoveryExpr 0x161809228 <col:34> '<dependent type>' contains-errors lvalue
    | |   | |-UnaryOperator 0x1618090c0 <col:42, col:43> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809070 <col:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    | |   | |-UnaryOperator 0x1618090f8 <col:52, col:53> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x1618090d8 <col:53> 'int' lvalue Var 0x161808e00 'maxparams' 'int'
    | |   | |-RecoveryExpr 0x161809260 <line:16:33> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x161809128 <col:56> 'const char *' lvalue ParmVar 0x16100df70 'miguri' 'const char *'
    | |   `-IntegerLiteral 0x161809190 <col:66> 'int' 0
    | `-GotoStmt 0x161809358 <line:17:9, col:14> 'cleanup' 0x161809308
    |-IfStmt 0x161809680 <line:18:5, line:21:14>
    | |-BinaryOperator 0x161809648 <line:18:9, line:20:71> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x161809390 <line:18:9> 'const char *' lvalue ParmVar 0x16100de70 'dname' 'const char *'
    | | `-BinaryOperator 0x161809628 <line:19:9, line:20:71> 'int' contains-errors '<'
    | |   |-CallExpr 0x1618095e0 <line:19:9, line:20:67> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x1618093b0 <line:19:9> 'int ()' Function 0x161808f68 'virTypedParamsAddString' 'int ()'
    | |   | |-UnaryOperator 0x1618095a8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | | `-RecoveryExpr 0x161809588 <col:34> '<dependent type>' contains-errors lvalue
    | |   | |-UnaryOperator 0x161809420 <col:42, col:43> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809400 <col:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    | |   | |-UnaryOperator 0x161809458 <col:52, col:53> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809438 <col:53> 'int' lvalue Var 0x161808e00 'maxparams' 'int'
    | |   | |-RecoveryExpr 0x1618095c0 <line:20:33> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x161809488 <col:62> 'const char *' lvalue ParmVar 0x16100de70 'dname' 'const char *'
    | |   `-IntegerLiteral 0x1618094f0 <col:71> 'int' 0
    | `-GotoStmt 0x161809668 <line:21:9, col:14> 'cleanup' 0x161809308
    |-IfStmt 0x161809990 <line:22:5, line:25:14>
    | |-BinaryOperator 0x161809958 <line:22:9, line:24:70> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x1618096a0 <line:22:9> 'const char *' lvalue ParmVar 0x16100dd70 'xmlin' 'const char *'
    | | `-BinaryOperator 0x161809938 <line:23:9, line:24:70> 'int' contains-errors '<'
    | |   |-CallExpr 0x1618098f0 <line:23:9, line:24:66> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x1618096c0 <line:23:9> 'int ()' Function 0x161808f68 'virTypedParamsAddString' 'int ()'
    | |   | |-UnaryOperator 0x1618098b8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | | `-RecoveryExpr 0x161809898 <col:34> '<dependent type>' contains-errors lvalue
    | |   | |-UnaryOperator 0x161809730 <col:42, col:43> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809710 <col:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    | |   | |-UnaryOperator 0x161809768 <col:52, col:53> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809748 <col:53> 'int' lvalue Var 0x161808e00 'maxparams' 'int'
    | |   | |-RecoveryExpr 0x1618098d0 <line:24:33> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x161809798 <col:61> 'const char *' lvalue ParmVar 0x16100dd70 'xmlin' 'const char *'
    | |   `-IntegerLiteral 0x161809800 <col:70> 'int' 0
    | `-GotoStmt 0x161809978 <line:25:9, col:14> 'cleanup' 0x161809308
    |-IfStmt 0x161809d20 <line:26:5, line:28:14>
    | |-BinaryOperator 0x161809ce8 <line:26:9, line:27:75> 'int' contains-errors '<'
    | | |-CallExpr 0x161809ca0 <line:26:9, line:27:71> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x161809a90 <line:26:9> 'int ()' Function 0x1618099d8 'virTypedParamsAddULLong' 'int ()'
    | | | |-UnaryOperator 0x161809c68 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x161809c48 <col:34> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x161809b00 <col:42, col:43> 'int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x161809ae0 <col:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    | | | |-UnaryOperator 0x161809b38 <col:52, col:53> 'int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x161809b18 <col:53> 'int' lvalue Var 0x161808e00 'maxparams' 'int'
    | | | |-RecoveryExpr 0x161809c80 <line:27:33> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x161809b68 <col:62> 'unsigned long long' lvalue ParmVar 0x16100dff0 'bandwidth' 'unsigned long long'
    | | `-IntegerLiteral 0x161809bd0 <col:75> 'int' 0
    | `-GotoStmt 0x161809d08 <line:28:9, col:14> 'cleanup' 0x161809308
    |-BinaryOperator 0x16180b240 <line:30:5, line:31:57> 'int' contains-errors '='
    | |-DeclRefExpr 0x161809d40 <line:30:5> 'int' lvalue Var 0x16100e220 'ret' 'int'
    | `-CallExpr 0x16180b1f8 <col:11, line:31:57> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x16180b0b8 <line:30:11> 'int ()' Function 0x16180b000 'virDomainMigrateUnmanagedParams' 'int ()'
    |   |-RecoveryExpr 0x16180b0d8 <col:43> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x16180b0f8 <col:51> 'const char *' lvalue ParmVar 0x16100def0 'dconnuri' 'const char *'
    |   |-DeclRefExpr 0x16180b1d8 <col:61> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    |   |-DeclRefExpr 0x16180b130 <line:31:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    |   `-DeclRefExpr 0x16180b150 <col:52> 'unsigned int' lvalue ParmVar 0x16100ddf0 'flags' 'unsigned int'
    |-LabelStmt 0x16180b498 <line:33:2, line:34:39> 'cleanup'
    | `-CallExpr 0x16180b438 <col:5, col:39> 'int'
    |   |-ImplicitCastExpr 0x16180b420 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x16180b340 <col:5> 'int ()' Function 0x16180b288 'virTypedParamsFree' 'int ()'
    |   |-ImplicitCastExpr 0x16180b468 <col:24> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x16180b3c8 <col:24> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    |   `-ImplicitCastExpr 0x16180b480 <col:32> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x16180b378 <col:32> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    `-ReturnStmt 0x16180b4f0 <line:36:5, col:12>
      `-ImplicitCastExpr 0x16180b4d8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x16180b4b8 <col:12> 'int' lvalue Var 0x16100e220 'ret' 'int'
