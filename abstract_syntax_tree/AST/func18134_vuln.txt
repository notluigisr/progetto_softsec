TranslationUnitDecl 0x125855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1258564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125855bd0 '__int128'
|-TypedefDecl 0x125856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125855bf0 'unsigned __int128'
|-TypedefDecl 0x12600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12600bc00 'struct __NSConstantString_tag'
|   `-Record 0x125856580 '__NSConstantString_tag'
|-TypedefDecl 0x12600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125855d90 '__SVInt8_t'
|-TypedefDecl 0x12600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125855db0 '__SVInt16_t'
|-TypedefDecl 0x12600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125855dd0 '__SVInt32_t'
|-TypedefDecl 0x12600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125855df0 '__SVInt64_t'
|-TypedefDecl 0x12600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125855e10 '__SVUint8_t'
|-TypedefDecl 0x12600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125855e30 '__SVUint16_t'
|-TypedefDecl 0x12600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125855e50 '__SVUint32_t'
|-TypedefDecl 0x12600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125855e70 '__SVUint64_t'
|-TypedefDecl 0x12600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125855e90 '__SVFloat16_t'
|-TypedefDecl 0x12600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1258560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1258560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1258560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1258561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1258561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1258561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1258562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1258562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1258562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125856390 '__SVBool_t'
|-TypedefDecl 0x12600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1258563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1258563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1258563f0 '__SVCount_t'
|-TypedefDecl 0x12600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-TypedefDecl 0x12600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-FunctionDecl 0x12600dd10 <dataset_diviso_filec/func18134_vuln.c:1:1, line:69:1> line:1:13 php_hash_do_hash_hmac 'void ()' static
| `-CompoundStmt 0x125927190 <line:2:1, line:69:1>
|   |-DeclStmt 0x12600e0b0 <line:3:2, col:38>
|   | |-VarDecl 0x12600de18 <col:2, col:8> col:8 used algo 'char *'
|   | |-VarDecl 0x12600de98 <col:2, col:15> col:15 used data 'char *'
|   | |-VarDecl 0x12600df18 <col:2, col:22> col:22 used digest 'char *'
|   | |-VarDecl 0x12600df98 <col:2, col:31> col:31 used key 'char *'
|   | `-VarDecl 0x12600e018 <col:2, col:37> col:37 used K 'char *'
|   |-DeclStmt 0x12600e268 <line:4:2, col:33>
|   | |-VarDecl 0x12600e0e0 <col:2, col:6> col:6 used algo_len 'int'
|   | |-VarDecl 0x12600e160 <col:2, col:16> col:16 used data_len 'int'
|   | `-VarDecl 0x12600e1e0 <col:2, col:26> col:26 used key_len 'int'
|   |-DeclStmt 0x12600e318 <line:6:2, col:25>
|   | `-VarDecl 0x12600e2b0 <col:2, col:22> col:22 referenced invalid ops 'const int *'
|   |-DeclStmt 0x12600e3b0 <line:7:2, col:15>
|   | `-VarDecl 0x12600e348 <col:2, col:8> col:8 used context 'void *'
|   |-IfStmt 0x126027af8 <line:10:2, line:13:2>
|   | |-RecoveryExpr 0x126027ab0 <line:10:6, line:11:51> '_Bool' contains-errors
|   | `-CompoundStmt 0x126027ae0 <col:60, line:13:2>
|   |   `-ReturnStmt 0x126027ad0 <line:12:3>
|   |-BinaryOperator 0x126027d18 <line:15:2, col:41> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x126027b38 <col:2> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x126027b18 <col:2> 'const int *' lvalue Var 0x12600e2b0 'ops' 'const int *'
|   | `-CallExpr 0x126027cb8 <col:8, col:41> 'int'
|   |   |-ImplicitCastExpr 0x126027ca0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x126027c40 <col:8> 'int ()' Function 0x126027b88 'php_hash_fetch_ops' 'int ()'
|   |   |-ImplicitCastExpr 0x126027ce8 <col:27> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x126027c60 <col:27> 'char *' lvalue Var 0x12600de18 'algo' 'char *'
|   |   `-ImplicitCastExpr 0x126027d00 <col:33> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x126027c80 <col:33> 'int' lvalue Var 0x12600e0e0 'algo_len' 'int'
|   |-IfStmt 0x126027eb0 <line:16:2, line:19:2>
|   | |-UnaryOperator 0x126027d70 <line:16:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x126027d58 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x126027d38 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x126027ea0 <col:12, line:19:2>
|   |-IfStmt 0x126028188 <line:20:2, line:26:2>
|   | |-RecoveryExpr 0x126027ee8 <line:20:6> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x126028170 <col:18, line:26:2>
|   |   `-IfStmt 0x126028150 <line:22:3, line:25:3>
|   |     |-RecoveryExpr 0x126028120 <line:22:7, col:8> '_Bool' contains-errors
|   |     `-CompoundStmt 0x126028140 <col:16, line:25:3>
|   |-BinaryOperator 0x126028358 <line:28:2, col:37> 'void *' contains-errors '='
|   | |-DeclRefExpr 0x1260281a8 <col:2> 'void *' lvalue Var 0x12600e348 'context' 'void *'
|   | `-CallExpr 0x126028330 <col:12, col:37> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1260282a8 <col:12> 'int ()' Function 0x1260281f0 'emalloc' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x1260282e8 <col:20, col:25> '<dependent type>' contains-errors lvalue ->context_size
|   |     `-RecoveryExpr 0x1260282c8 <col:20> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x126028448 <line:30:2, col:29> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x126028378 <col:2> 'char *' lvalue Var 0x12600e018 'K' 'char *'
|   | `-CallExpr 0x126028420 <col:6, col:29> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x126028398 <col:6> 'int ()' Function 0x1260281f0 'emalloc' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x1260283d8 <col:14, col:19> '<dependent type>' contains-errors lvalue ->block_size
|   |     `-RecoveryExpr 0x1260283b8 <col:14> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x126028578 <line:31:2, col:39> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x126028468 <col:2> 'char *' lvalue Var 0x12600df18 'digest' 'char *'
|   | `-CallExpr 0x126028550 <col:11, col:39> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x126028488 <col:11> 'int ()' Function 0x1260281f0 'emalloc' 'int ()'
|   |   `-BinaryOperator 0x126028530 <col:19, col:38> '<dependent type>' contains-errors '+'
|   |     |-CXXDependentScopeMemberExpr 0x1260284c8 <col:19, col:24> '<dependent type>' contains-errors lvalue ->digest_size
|   |     | `-RecoveryExpr 0x1260284a8 <col:19> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x126028510 <col:38> 'int' 1
|   |-CallExpr 0x125924c20 <line:33:2, col:90> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x126028678 <col:2> 'int ()' Function 0x1260285c0 'php_hash_hmac_prep_key' 'int ()'
|   | |-CStyleCastExpr 0x126028720 <col:25, col:43> 'unsigned char *' <BitCast>
|   | | `-ImplicitCastExpr 0x126028708 <col:43> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |   `-DeclRefExpr 0x126028698 <col:43> 'char *' lvalue Var 0x12600e018 'K' 'char *'
|   | |-RecoveryExpr 0x126028748 <col:46> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x126028768 <col:51> 'void *' lvalue Var 0x12600e348 'context' 'void *'
|   | |-CStyleCastExpr 0x1260287d8 <col:60, col:78> 'unsigned char *' <BitCast>
|   | | `-ImplicitCastExpr 0x1260287c0 <col:78> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |   `-DeclRefExpr 0x126028788 <col:78> 'char *' lvalue Var 0x12600df98 'key' 'char *'
|   | `-DeclRefExpr 0x125924c00 <col:83> 'int' lvalue Var 0x12600e1e0 'key_len' 'int'
|   |-IfStmt 0x125925a48 <line:35:2, line:47:2> has_else
|   | |-RecoveryExpr 0x125924c68 <line:35:6> '_Bool' contains-errors
|   | |-CompoundStmt 0x1259256d8 <col:18, line:45:2>
|   | | |-DeclStmt 0x125924d98 <line:36:3, col:17>
|   | | | `-VarDecl 0x125924d30 <col:3, col:16> col:8 used buf 'char[1024]'
|   | | |-DeclStmt 0x125924e30 <line:37:3, col:8>
|   | | | `-VarDecl 0x125924dc8 <col:3, col:7> col:7 used n 'int'
|   | | |-CallExpr 0x125924ef8 <line:38:3, col:25> '<dependent type>' contains-errors
|   | | | |-CXXDependentScopeMemberExpr 0x125924e90 <col:3, col:8> '<dependent type>' contains-errors lvalue ->hash_init
|   | | | | `-RecoveryExpr 0x125924e68 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x125924e48 <col:3> 'const int *' lvalue Var 0x12600e2b0 'ops' 'const int *'
|   | | | `-DeclRefExpr 0x125924ed8 <col:18> 'void *' lvalue Var 0x12600e348 'context' 'void *'
|   | | |-CallExpr 0x1259250b0 <line:39:3, col:65> '<dependent type>' contains-errors
|   | | | |-CXXDependentScopeMemberExpr 0x125924f68 <col:3, col:8> '<dependent type>' contains-errors lvalue ->hash_update
|   | | | | `-RecoveryExpr 0x125924f40 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x125924f20 <col:3> 'const int *' lvalue Var 0x12600e2b0 'ops' 'const int *'
|   | | | |-DeclRefExpr 0x125924fb0 <col:20> 'void *' lvalue Var 0x12600e348 'context' 'void *'
|   | | | |-CStyleCastExpr 0x125925020 <col:29, col:47> 'unsigned char *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x125925008 <col:47> 'char *' <LValueToRValue> part_of_explicit_cast
|   | | | |   `-DeclRefExpr 0x125924fd0 <col:47> 'char *' lvalue Var 0x12600e018 'K' 'char *'
|   | | | `-CXXDependentScopeMemberExpr 0x125925068 <col:50, col:55> '<dependent type>' contains-errors lvalue ->block_size
|   | | |   `-RecoveryExpr 0x125925048 <col:50> '<dependent type>' contains-errors lvalue
|   | | |-WhileStmt 0x125925460 <line:40:3, line:42:3>
|   | | | |-RecoveryExpr 0x1259252a8 <line:40:10, col:60> '_Bool' contains-errors
|   | | | `-CompoundStmt 0x125925448 <col:63, line:42:3>
|   | | |   `-CallExpr 0x125925410 <line:41:4, col:54> '<dependent type>' contains-errors
|   | | |     |-CXXDependentScopeMemberExpr 0x125925310 <col:4, col:9> '<dependent type>' contains-errors lvalue ->hash_update
|   | | |     | `-RecoveryExpr 0x1259252e8 <col:4> '<dependent type>' contains-errors lvalue
|   | | |     |   `-DeclRefExpr 0x1259252c8 <col:4> 'const int *' lvalue Var 0x12600e2b0 'ops' 'const int *'
|   | | |     |-DeclRefExpr 0x125925358 <col:21> 'void *' lvalue Var 0x12600e348 'context' 'void *'
|   | | |     |-CStyleCastExpr 0x1259253c8 <col:30, col:48> 'unsigned char *' <BitCast>
|   | | |     | `-ImplicitCastExpr 0x1259253b0 <col:48> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   | | |     |   `-DeclRefExpr 0x125925378 <col:48> 'char[1024]' lvalue Var 0x125924d30 'buf' 'char[1024]'
|   | | |     `-DeclRefExpr 0x1259253f0 <col:53> 'int' lvalue Var 0x125924dc8 'n' 'int'
|   | | `-CallExpr 0x1259256a8 <line:44:3, col:52> '<dependent type>' contains-errors
|   | |   |-CXXDependentScopeMemberExpr 0x1259255c8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->hash_final
|   | |   | `-RecoveryExpr 0x1259255a0 <col:3> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x125925580 <col:3> 'const int *' lvalue Var 0x12600e2b0 'ops' 'const int *'
|   | |   |-CStyleCastExpr 0x125925660 <col:19, col:37> 'unsigned char *' <BitCast>
|   | |   | `-ImplicitCastExpr 0x125925648 <col:37> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |   |   `-DeclRefExpr 0x125925610 <col:37> 'char *' lvalue Var 0x12600df18 'digest' 'char *'
|   | |   `-DeclRefExpr 0x125925688 <col:45> 'void *' lvalue Var 0x12600e348 'context' 'void *'
|   | `-CompoundStmt 0x125925a30 <line:45:9, line:47:2>
|   |   `-CallExpr 0x1259259e0 <line:46:3, col:116> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1259257f8 <col:3> 'int ()' Function 0x125925740 'php_hash_hmac_round' 'int ()'
|   |     |-CStyleCastExpr 0x125925868 <col:23, col:41> 'unsigned char *' <BitCast>
|   |     | `-ImplicitCastExpr 0x125925850 <col:41> 'char *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x125925818 <col:41> 'char *' lvalue Var 0x12600df18 'digest' 'char *'
|   |     |-RecoveryExpr 0x125925890 <col:49> '<dependent type>' contains-errors lvalue
|   |     |-DeclRefExpr 0x1259258b0 <col:54> 'void *' lvalue Var 0x12600e348 'context' 'void *'
|   |     |-CStyleCastExpr 0x125925920 <col:63, col:81> 'unsigned char *' <BitCast>
|   |     | `-ImplicitCastExpr 0x125925908 <col:81> 'char *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x1259258d0 <col:81> 'char *' lvalue Var 0x12600e018 'K' 'char *'
|   |     |-CStyleCastExpr 0x125925998 <col:84, col:102> 'unsigned char *' <BitCast>
|   |     | `-ImplicitCastExpr 0x125925980 <col:102> 'char *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x125925948 <col:102> 'char *' lvalue Var 0x12600de98 'data' 'char *'
|   |     `-DeclRefExpr 0x1259259c0 <col:108> 'int' lvalue Var 0x12600e160 'data_len' 'int'
|   |-CallExpr 0x125925d00 <line:49:2, col:90> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x125925b58 <col:2> 'int ()' Function 0x125925aa0 'php_hash_string_xor_char' 'int ()'
|   | |-CStyleCastExpr 0x125925bc8 <col:27, col:45> 'unsigned char *' <BitCast>
|   | | `-ImplicitCastExpr 0x125925bb0 <col:45> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |   `-DeclRefExpr 0x125925b78 <col:45> 'char *' lvalue Var 0x12600e018 'K' 'char *'
|   | |-CStyleCastExpr 0x125925c50 <col:48, col:66> 'unsigned char *' <BitCast>
|   | | `-ImplicitCastExpr 0x125925c38 <col:66> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |   `-DeclRefExpr 0x125925c00 <col:66> 'char *' lvalue Var 0x12600e018 'K' 'char *'
|   | |-IntegerLiteral 0x125925c78 <col:69> 'int' 106
|   | `-CXXDependentScopeMemberExpr 0x125925cb8 <col:75, col:80> '<dependent type>' contains-errors lvalue ->block_size
|   |   `-RecoveryExpr 0x125925c98 <col:75> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x125925f70 <line:51:2, col:125> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x125925d40 <col:2> 'int ()' Function 0x125925740 'php_hash_hmac_round' 'int ()'
|   | |-CStyleCastExpr 0x125925db0 <col:22, col:40> 'unsigned char *' <BitCast>
|   | | `-ImplicitCastExpr 0x125925d98 <col:40> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |   `-DeclRefExpr 0x125925d60 <col:40> 'char *' lvalue Var 0x12600df18 'digest' 'char *'
|   | |-RecoveryExpr 0x125925dd8 <col:48> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x125925df8 <col:53> 'void *' lvalue Var 0x12600e348 'context' 'void *'
|   | |-CStyleCastExpr 0x125925e68 <col:62, col:80> 'unsigned char *' <BitCast>
|   | | `-ImplicitCastExpr 0x125925e50 <col:80> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |   `-DeclRefExpr 0x125925e18 <col:80> 'char *' lvalue Var 0x12600e018 'K' 'char *'
|   | |-CStyleCastExpr 0x125925ee0 <col:83, col:101> 'unsigned char *' <BitCast>
|   | | `-ImplicitCastExpr 0x125925ec8 <col:101> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |   `-DeclRefExpr 0x125925e90 <col:101> 'char *' lvalue Var 0x12600df18 'digest' 'char *'
|   | `-CXXDependentScopeMemberExpr 0x125925f28 <col:109, col:114> '<dependent type>' contains-errors lvalue ->digest_size
|   |   `-RecoveryExpr 0x125925f08 <col:109> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x125926350 <line:54:2, col:30> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x125926258 <col:2> 'void *(void *, int, unsigned long)' Function 0x125926008 'memset' 'void *(void *, int, unsigned long)'
|   | |-DeclRefExpr 0x125926278 <col:9> 'char *' lvalue Var 0x12600e018 'K' 'char *'
|   | |-IntegerLiteral 0x125926298 <col:12> 'int' 0
|   | `-CXXDependentScopeMemberExpr 0x1259262d8 <col:15, col:20> '<dependent type>' contains-errors lvalue ->block_size
|   |   `-RecoveryExpr 0x1259262b8 <col:15> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1259264c0 <line:55:2, col:9> 'int'
|   | |-ImplicitCastExpr 0x1259264a8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x125926468 <col:2> 'int ()' Function 0x1259263b0 'efree' 'int ()'
|   | `-ImplicitCastExpr 0x1259264e8 <col:8> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x125926488 <col:8> 'char *' lvalue Var 0x12600e018 'K' 'char *'
|   |-CallExpr 0x125926558 <line:56:2, col:15> 'int'
|   | |-ImplicitCastExpr 0x125926540 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x125926500 <col:2> 'int ()' Function 0x1259263b0 'efree' 'int ()'
|   | `-ImplicitCastExpr 0x125926580 <col:8> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x125926520 <col:8> 'void *' lvalue Var 0x12600e348 'context' 'void *'
|   `-IfStmt 0x125927160 <line:58:2, line:68:2> has_else
|     |-RecoveryExpr 0x125926598 <line:58:6> '_Bool' contains-errors
|     |-CompoundStmt 0x1259268b0 <col:18, line:61:2>
|     | |-BinaryOperator 0x1259266b0 <line:59:3, col:30> '<dependent type>' contains-errors '='
|     | | |-ArraySubscriptExpr 0x125926670 <col:3, col:26> '<dependent type>' contains-errors lvalue
|     | | | |-ImplicitCastExpr 0x125926640 <col:3> 'char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1259265b8 <col:3> 'char *' lvalue Var 0x12600df18 'digest' 'char *'
|     | | | `-ImplicitCastExpr 0x125926658 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
|     | | |   `-CXXDependentScopeMemberExpr 0x1259265f8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->digest_size
|     | | |     `-RecoveryExpr 0x1259265d8 <col:10> '<dependent type>' contains-errors lvalue
|     | | `-IntegerLiteral 0x125926690 <col:30> 'int' 0
|     | `-CallExpr 0x125926878 <line:60:3, col:45> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x1259267b0 <col:3> 'int ()' Function 0x1259266f8 'RETURN_STRINGL' 'int ()'
|     |   |-DeclRefExpr 0x1259267d0 <col:18> 'char *' lvalue Var 0x12600df18 'digest' 'char *'
|     |   |-CXXDependentScopeMemberExpr 0x125926810 <col:26, col:31> '<dependent type>' contains-errors lvalue ->digest_size
|     |   | `-RecoveryExpr 0x1259267f0 <col:26> '<dependent type>' contains-errors lvalue
|     |   `-IntegerLiteral 0x125926858 <col:44> 'int' 0
|     `-CompoundStmt 0x125927128 <line:61:9, line:68:2>
|       |-DeclStmt 0x125926b30 <line:62:3, col:58>
|       | `-VarDecl 0x1259268e8 <col:3, col:57> col:9 used hex_digest 'char *' cinit
|       |   `-CallExpr 0x125926af8 <col:22, col:57> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x125926a30 <col:22> 'int ()' Function 0x125926978 'safe_emalloc' 'int ()'
|       |     |-CXXDependentScopeMemberExpr 0x125926a70 <col:35, col:40> '<dependent type>' contains-errors lvalue ->digest_size
|       |     | `-RecoveryExpr 0x125926a50 <col:35> '<dependent type>' contains-errors lvalue
|       |     |-IntegerLiteral 0x125926ab8 <col:53> 'int' 2
|       |     `-IntegerLiteral 0x125926ad8 <col:56> 'int' 1
|       |-CallExpr 0x125926dd8 <line:64:3, col:74> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x125926cb8 <col:3> 'int ()' Function 0x125926c00 'php_hash_bin2hex' 'int ()'
|       | |-DeclRefExpr 0x125926cd8 <col:20> 'char *' contains-errors lvalue Var 0x1259268e8 'hex_digest' 'char *'
|       | |-CStyleCastExpr 0x125926d48 <col:32, col:50> 'unsigned char *' <BitCast>
|       | | `-ImplicitCastExpr 0x125926d30 <col:50> 'char *' <LValueToRValue> part_of_explicit_cast
|       | |   `-DeclRefExpr 0x125926cf8 <col:50> 'char *' lvalue Var 0x12600df18 'digest' 'char *'
|       | `-CXXDependentScopeMemberExpr 0x125926d90 <col:58, col:63> '<dependent type>' contains-errors lvalue ->digest_size
|       |   `-RecoveryExpr 0x125926d70 <col:58> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x125926f30 <line:65:3, col:38> '<dependent type>' contains-errors '='
|       | |-ArraySubscriptExpr 0x125926ef0 <col:3, col:34> '<dependent type>' contains-errors lvalue
|       | | |-ImplicitCastExpr 0x125926ed8 <col:3> 'char *' contains-errors <LValueToRValue>
|       | | | `-DeclRefExpr 0x125926e10 <col:3> 'char *' contains-errors lvalue Var 0x1259268e8 'hex_digest' 'char *'
|       | | `-BinaryOperator 0x125926eb8 <col:14, col:23> '<dependent type>' contains-errors '*'
|       | |   |-IntegerLiteral 0x125926e30 <col:14> 'int' 2
|       | |   `-CXXDependentScopeMemberExpr 0x125926e70 <col:18, col:23> '<dependent type>' contains-errors lvalue ->digest_size
|       | |     `-RecoveryExpr 0x125926e50 <col:18> '<dependent type>' contains-errors lvalue
|       | `-IntegerLiteral 0x125926f10 <col:38> 'int' 0
|       |-CallExpr 0x125926fa8 <line:66:3, col:15> 'int'
|       | |-ImplicitCastExpr 0x125926f90 <col:3> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x125926f50 <col:3> 'int ()' Function 0x1259263b0 'efree' 'int ()'
|       | `-ImplicitCastExpr 0x125926fd0 <col:9> 'char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x125926f70 <col:9> 'char *' lvalue Var 0x12600df18 'digest' 'char *'
|       `-CallExpr 0x1259270f0 <line:67:3, col:53> '<dependent type>' contains-errors
|         |-DeclRefExpr 0x125926fe8 <col:3> 'int ()' Function 0x1259266f8 'RETURN_STRINGL' 'int ()'
|         |-DeclRefExpr 0x125927008 <col:18> 'char *' contains-errors lvalue Var 0x1259268e8 'hex_digest' 'char *'
|         |-BinaryOperator 0x1259270b0 <col:30, col:39> '<dependent type>' contains-errors '*'
|         | |-IntegerLiteral 0x125927028 <col:30> 'int' 2
|         | `-CXXDependentScopeMemberExpr 0x125927068 <col:34, col:39> '<dependent type>' contains-errors lvalue ->digest_size
|         |   `-RecoveryExpr 0x125927048 <col:34> '<dependent type>' contains-errors lvalue
|         `-IntegerLiteral 0x1259270d0 <col:52> 'int' 0
`-FunctionDecl 0x125926008 <line:54:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x125926108 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x125926170 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1259261d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1259260b0 <<invalid sloc>> Implicit 900
