TranslationUnitDecl 0x156055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1560564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156055bd0 '__int128'
|-TypedefDecl 0x156056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156055bf0 'unsigned __int128'
|-TypedefDecl 0x15680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15680bc00 'struct __NSConstantString_tag'
|   `-Record 0x156056580 '__NSConstantString_tag'
|-TypedefDecl 0x15680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156055d90 '__SVInt8_t'
|-TypedefDecl 0x15680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156055db0 '__SVInt16_t'
|-TypedefDecl 0x15680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156055dd0 '__SVInt32_t'
|-TypedefDecl 0x15680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156055df0 '__SVInt64_t'
|-TypedefDecl 0x15680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156055e10 '__SVUint8_t'
|-TypedefDecl 0x15680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156055e30 '__SVUint16_t'
|-TypedefDecl 0x15680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156055e50 '__SVUint32_t'
|-TypedefDecl 0x15680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156055e70 '__SVUint64_t'
|-TypedefDecl 0x15680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156055e90 '__SVFloat16_t'
|-TypedefDecl 0x15680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1560560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1560560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1560560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1560561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1560561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1560561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1560562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1560562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1560562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156056390 '__SVBool_t'
|-TypedefDecl 0x15680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1560563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1560563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1560563f0 '__SVCount_t'
|-TypedefDecl 0x15680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-TypedefDecl 0x15680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
`-FunctionDecl 0x15680ddf8 <dataset_diviso_filec/func8721_vuln.c:1:1, line:22:1> line:1:8 invalid QuantizeV2Shape 'int (int *)'
  |-ParmVarDecl 0x15680dd28 <col:24, col:42> col:42 referenced invalid c 'int *'
  `-CompoundStmt 0x156828148 <col:45, line:22:1>
    |-DeclStmt 0x15680df60 <line:2:3, col:16>
    | `-VarDecl 0x15680dec0 <col:3, col:15> col:7 used axis 'int' cinit
    |   `-UnaryOperator 0x15680df48 <col:14, col:15> 'int' prefix '-'
    |     `-IntegerLiteral 0x15680df28 <col:15> 'int' 1
    |-IfStmt 0x15680e2d0 <line:4:3, line:6:3>
    | |-BinaryOperator 0x15680e250 <line:4:7, col:30> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x15680e170 <col:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-CallExpr 0x15680e150 <col:8, col:13> '<dependent type>' contains-errors
    | | |   `-CXXDependentScopeMemberExpr 0x15680e108 <col:8, col:10> '<dependent type>' contains-errors lvalue .ok
    | | |     `-RecoveryExpr 0x15680e0e8 <col:8> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x15680e230 <col:18, col:30> 'int' contains-errors '!='
    | |   |-CallExpr 0x15680e1f0 <col:18, col:25> '<dependent type>' contains-errors
    | |   | `-CXXDependentScopeMemberExpr 0x15680e1a8 <col:18, col:20> '<dependent type>' contains-errors lvalue .code
    | |   |   `-RecoveryExpr 0x15680e188 <col:18> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x15680e210 <col:30> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15680e2b8 <col:48, line:6:3>
    |   `-ReturnStmt 0x15680e2a8 <line:5:5, col:12>
    |     `-RecoveryExpr 0x15680e288 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x157808690 <line:7:3, col:47>
    | `-VarDecl 0x15680e308 <col:3, col:46> col:13 used minmax_rank 'const int' cinit
    |   `-ConditionalOperator 0x157808660 <col:27, col:46> 'int'
    |     |-ParenExpr 0x157808600 <col:27, col:38> 'int'
    |     | `-BinaryOperator 0x15680e3e0 <col:28, col:37> 'int' '=='
    |     |   |-ImplicitCastExpr 0x15680e3c8 <col:28> 'int' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x15680e370 <col:28> 'int' lvalue Var 0x15680dec0 'axis' 'int'
    |     |   `-UnaryOperator 0x15680e3b0 <col:36, col:37> 'int' prefix '-'
    |     |     `-IntegerLiteral 0x15680e390 <col:37> 'int' 1
    |     |-IntegerLiteral 0x157808620 <col:42> 'int' 0
    |     `-IntegerLiteral 0x157808640 <col:46> 'int' 1
    |-CallExpr 0x157808a90 <line:10:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x157808838 <col:3> 'int ()' Function 0x157808748 'TF_RETURN_IF_ERROR' 'int ()'
    | `-CallExpr 0x157808a58 <col:22, col:67> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x157808878 <col:22, col:25> '<dependent type>' contains-errors lvalue ->WithRank
    |   | `-RecoveryExpr 0x157808858 <col:22> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x157808948 <col:34, col:44> '<dependent type>' contains-errors
    |   | |-CXXDependentScopeMemberExpr 0x1578088e0 <col:34, col:37> '<dependent type>' contains-errors lvalue ->input
    |   | | `-RecoveryExpr 0x1578088c0 <col:34> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x157808928 <col:43> 'int' 1
    |   |-DeclRefExpr 0x157808970 <col:47> 'const int' lvalue Var 0x15680e308 'minmax_rank' 'const int'
    |   `-UnaryOperator 0x157808a40 <col:60, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x157808a20 <col:61> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x157808d10 <line:11:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x157808ab8 <col:3> 'int ()' Function 0x157808748 'TF_RETURN_IF_ERROR' 'int ()'
    | `-CallExpr 0x157808cd8 <col:22, col:67> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x157808af8 <col:22, col:25> '<dependent type>' contains-errors lvalue ->WithRank
    |   | `-RecoveryExpr 0x157808ad8 <col:22> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x157808bc8 <col:34, col:44> '<dependent type>' contains-errors
    |   | |-CXXDependentScopeMemberExpr 0x157808b60 <col:34, col:37> '<dependent type>' contains-errors lvalue ->input
    |   | | `-RecoveryExpr 0x157808b40 <col:34> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x157808ba8 <col:43> 'int' 2
    |   |-DeclRefExpr 0x157808bf0 <col:47> 'const int' lvalue Var 0x15680e308 'minmax_rank' 'const int'
    |   `-UnaryOperator 0x157808cc0 <col:60, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x157808ca0 <col:61> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x157809520 <line:12:3, line:18:3>
    | |-BinaryOperator 0x157808da8 <line:12:7, col:16> 'int' '!='
    | | |-ImplicitCastExpr 0x157808d90 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x157808d38 <col:7> 'int' lvalue Var 0x15680dec0 'axis' 'int'
    | | `-UnaryOperator 0x157808d78 <col:15, col:16> 'int' prefix '-'
    | |   `-IntegerLiteral 0x157808d58 <col:16> 'int' 1
    | `-CompoundStmt 0x157809500 <col:19, line:18:3>
    |   |-CallExpr 0x1578090e8 <line:14:5, col:73> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x157808dc8 <col:5> 'int ()' Function 0x157808748 'TF_RETURN_IF_ERROR' 'int ()'
    |   | `-CallExpr 0x1578090b0 <col:24, col:72> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x157808e08 <col:24, col:27> '<dependent type>' contains-errors lvalue ->WithRankAtLeast
    |   |   | `-RecoveryExpr 0x157808de8 <col:24> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x157808ed8 <col:43, col:53> '<dependent type>' contains-errors
    |   |   | |-CXXDependentScopeMemberExpr 0x157808e70 <col:43, col:46> '<dependent type>' contains-errors lvalue ->input
    |   |   | | `-RecoveryExpr 0x157808e50 <col:43> '<dependent type>' contains-errors lvalue
    |   |   | `-IntegerLiteral 0x157808eb8 <col:52> 'int' 0
    |   |   |-BinaryOperator 0x157809058 <col:56, col:63> 'int' '+'
    |   |   | |-ImplicitCastExpr 0x157809040 <col:56> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x157808f00 <col:56> 'int' lvalue Var 0x15680dec0 'axis' 'int'
    |   |   | `-IntegerLiteral 0x157808f20 <col:63> 'int' 1
    |   |   `-UnaryOperator 0x157809098 <col:66, col:67> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x157809078 <col:67> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x1578094d8 <line:16:5, line:17:65> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x157809110 <line:16:5> 'int ()' Function 0x157808748 'TF_RETURN_IF_ERROR' 'int ()'
    |     `-CallExpr 0x1578094a0 <line:17:9, col:64> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x157809150 <col:9, col:12> '<dependent type>' contains-errors lvalue ->Merge
    |       | `-RecoveryExpr 0x157809130 <col:9> '<dependent type>' contains-errors lvalue
    |       |-CallExpr 0x1578093e8 <col:18, col:34> '<dependent type>' contains-errors
    |       | |-CXXDependentScopeMemberExpr 0x1578091b8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->Dim
    |       | | `-RecoveryExpr 0x157809198 <col:18> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x1578093c8 <col:25> '<dependent type>' contains-errors lvalue
    |       | `-IntegerLiteral 0x157809218 <col:33> 'int' 0
    |       |-CallExpr 0x157809438 <col:37, col:55> '<dependent type>' contains-errors
    |       | |-CXXDependentScopeMemberExpr 0x157809288 <col:37, col:40> '<dependent type>' contains-errors lvalue ->Dim
    |       | | `-RecoveryExpr 0x157809268 <col:37> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x157809418 <col:44> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x1578092e8 <col:51> 'int' lvalue Var 0x15680dec0 'axis' 'int'
    |       `-UnaryOperator 0x157809488 <col:58, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x157809468 <col:59> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x156828068 <line:19:3, col:26> '<dependent type>' contains-errors
      |-CXXDependentScopeMemberExpr 0x157809588 <col:3, col:6> '<dependent type>' contains-errors lvalue ->set_output
      | `-RecoveryExpr 0x157809560 <col:3> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x157809540 <col:3> 'int *' lvalue ParmVar 0x15680dd28 'c' 'int *'
      |-IntegerLiteral 0x1578095d0 <col:17> 'int' 1
      `-RecoveryExpr 0x156828048 <col:20> '<dependent type>' contains-errors lvalue
