TranslationUnitDecl 0x136055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x136055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1360555d0 '__int128'
|-TypedefDecl 0x136055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1360555f0 'unsigned __int128'
|-TypedefDecl 0x13580c430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13580c200 'struct __NSConstantString_tag'
|   `-Record 0x136055f80 '__NSConstantString_tag'
|-TypedefDecl 0x13580c498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136055790 '__SVInt8_t'
|-TypedefDecl 0x13580c500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1360557b0 '__SVInt16_t'
|-TypedefDecl 0x13580c568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1360557d0 '__SVInt32_t'
|-TypedefDecl 0x13580c5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1360557f0 '__SVInt64_t'
|-TypedefDecl 0x13580c638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136055810 '__SVUint8_t'
|-TypedefDecl 0x13580c6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136055830 '__SVUint16_t'
|-TypedefDecl 0x13580c708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136055850 '__SVUint32_t'
|-TypedefDecl 0x13580c770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136055870 '__SVUint64_t'
|-TypedefDecl 0x13580c7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136055890 '__SVFloat16_t'
|-TypedefDecl 0x13580c840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1360558b0 '__SVFloat32_t'
|-TypedefDecl 0x13580c8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1360558d0 '__SVFloat64_t'
|-TypedefDecl 0x13580c910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1360558f0 '__SVBfloat16_t'
|-TypedefDecl 0x13580c978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136055910 '__clang_svint8x2_t'
|-TypedefDecl 0x13580c9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136055930 '__clang_svint16x2_t'
|-TypedefDecl 0x13580ca48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136055950 '__clang_svint32x2_t'
|-TypedefDecl 0x13580cab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136055970 '__clang_svint64x2_t'
|-TypedefDecl 0x13580cb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13580cb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1360559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13580cbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1360559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13580cc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1360559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13580ccb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13580cd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13580cd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13580cdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13580ce58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x13580cec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x136055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13580cf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x136055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13580cf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x136055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x13580cff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13580d060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13580d0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13580d130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13580d198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13580da00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x136055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13580da68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x136055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13580dad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x136055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13580db38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x13580dba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x13580dc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x13580dc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x13580dcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13580dd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x136055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13580dda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x136055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13580de10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x136055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13580de78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13580dee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13580df48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13580dfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13580e018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136055d90 '__SVBool_t'
|-TypedefDecl 0x13580e080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x136055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x13580e0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x136055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13580e150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x136055df0 '__SVCount_t'
|-TypedefDecl 0x13580e1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13580e1b0 'char *'
|   `-BuiltinType 0x1360550b0 'char'
|-TypedefDecl 0x13580e268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13580e1b0 'char *'
|   `-BuiltinType 0x1360550b0 'char'
`-FunctionDecl 0x13582b048 <dataset_diviso_filec/func19156_nonvuln.c:1:1, line:41:1> line:1:5 open_related_ns 'int (struct ns_common *, struct ns_common *(*)(struct ns_common *))'
  |-ParmVarDecl 0x13580e848 <col:21, col:39> col:39 used ns 'struct ns_common *'
  |-ParmVarDecl 0x13582af20 <line:2:6, col:54> col:26 used get_ns 'struct ns_common *(*)(struct ns_common *)'
  `-CompoundStmt 0x13582f3a0 <line:3:1, line:41:1>
    |-DeclStmt 0x13582b308 <line:4:2, col:23>
    | |-RecordDecl 0x13582b148 <col:2, col:9> col:9 struct path
    | `-VarDecl 0x13582b248 <col:2, col:14> col:14 invalid path 'struct path'
    |-DeclStmt 0x13582b508 <line:5:2, col:16>
    | |-RecordDecl 0x13582b320 <col:2, col:9> col:9 struct file
    | `-VarDecl 0x13582b488 <col:2, col:15> col:15 used f 'struct file *'
    |-DeclStmt 0x13582b5a0 <line:6:2, col:11>
    | `-VarDecl 0x13582b538 <col:2, col:8> col:8 used err 'void *'
    |-DeclStmt 0x13582b638 <line:7:2, col:8>
    | `-VarDecl 0x13582b5d0 <col:2, col:6> col:6 used fd 'int'
    |-BinaryOperator 0x13582b868 <line:9:2, col:36> 'int' contains-errors '='
    | |-DeclRefExpr 0x13582b650 <col:2> 'int' lvalue Var 0x13582b5d0 'fd' 'int'
    | `-CallExpr 0x13582b840 <col:7, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13582b7a0 <col:7> 'int ()' Function 0x13582b6e8 'get_unused_fd_flags' 'int ()'
    |   `-RecoveryExpr 0x13582b820 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13582b948 <line:10:2, line:11:10>
    | |-BinaryOperator 0x13582b8e0 <line:10:6, col:11> 'int' '<'
    | | |-ImplicitCastExpr 0x13582b8c8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13582b888 <col:6> 'int' lvalue Var 0x13582b5d0 'fd' 'int'
    | | `-IntegerLiteral 0x13582b8a8 <col:11> 'int' 0
    | `-ReturnStmt 0x13582b938 <line:11:3, col:10>
    |   `-ImplicitCastExpr 0x13582b920 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13582b900 <col:10> 'int' lvalue Var 0x13582b5d0 'fd' 'int'
    |-WhileStmt 0x13582e7e8 <line:13:2, line:26:2>
    | |-IntegerLiteral 0x13582b968 <line:13:9> 'int' 1
    | `-CompoundStmt 0x13582e7a8 <col:12, line:26:2>
    |   |-DeclStmt 0x13582ba18 <line:14:3, col:29>
    |   | `-VarDecl 0x13582b9b0 <col:3, col:21> col:21 used relative 'struct ns_common *'
    |   |-BinaryOperator 0x13582bae8 <line:16:3, col:23> 'struct ns_common *' '='
    |   | |-DeclRefExpr 0x13582ba30 <col:3> 'struct ns_common *' lvalue Var 0x13582b9b0 'relative' 'struct ns_common *'
    |   | `-CallExpr 0x13582baa8 <col:14, col:23> 'struct ns_common *'
    |   |   |-ImplicitCastExpr 0x13582ba90 <col:14> 'struct ns_common *(*)(struct ns_common *)' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x13582ba50 <col:14> 'struct ns_common *(*)(struct ns_common *)' lvalue ParmVar 0x13582af20 'get_ns' 'struct ns_common *(*)(struct ns_common *)'
    |   |   `-ImplicitCastExpr 0x13582bad0 <col:21> 'struct ns_common *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13582ba70 <col:21> 'struct ns_common *' lvalue ParmVar 0x13580e848 'ns' 'struct ns_common *'
    |   |-IfStmt 0x13582e1e8 <line:17:3, line:20:3>
    |   | |-CallExpr 0x13582bc78 <line:17:7, col:22> 'int'
    |   | | |-ImplicitCastExpr 0x13582bc60 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x13582bbe8 <col:7> 'int ()' Function 0x13582bb30 'IS_ERR' 'int ()'
    |   | | `-ImplicitCastExpr 0x13582bca0 <col:14> 'struct ns_common *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13582bc08 <col:14> 'struct ns_common *' lvalue Var 0x13582b9b0 'relative' 'struct ns_common *'
    |   | `-CompoundStmt 0x13582e1c8 <col:25, line:20:3>
    |   |   |-CallExpr 0x13582e000 <line:18:4, col:20> 'int'
    |   |   | |-ImplicitCastExpr 0x13582bdd8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x13582bd98 <col:4> 'int ()' Function 0x13582bce0 'put_unused_fd' 'int ()'
    |   |   | `-ImplicitCastExpr 0x13582e028 <col:18> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x13582bdb8 <col:18> 'int' lvalue Var 0x13582b5d0 'fd' 'int'
    |   |   `-ReturnStmt 0x13582e1b8 <line:19:4, col:27>
    |   |     `-CallExpr 0x13582e178 <col:11, col:27> 'int'
    |   |       |-ImplicitCastExpr 0x13582e160 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x13582e120 <col:11> 'int ()' Function 0x13582e068 'PTR_ERR' 'int ()'
    |   |       `-ImplicitCastExpr 0x13582e1a0 <col:19> 'struct ns_common *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x13582e140 <col:19> 'struct ns_common *' lvalue Var 0x13582b9b0 'relative' 'struct ns_common *'
    |   |-BinaryOperator 0x13582e3b0 <line:22:3, col:38> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x13582e208 <col:3> 'void *' lvalue Var 0x13582b538 'err' 'void *'
    |   | `-CallExpr 0x13582e380 <col:9, col:38> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13582e308 <col:9> 'int ()' Function 0x13582e250 '__ns_get_path' 'int ()'
    |   |   |-UnaryOperator 0x13582e348 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x13582e328 <col:24> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13582e360 <col:30> 'struct ns_common *' lvalue Var 0x13582b9b0 'relative' 'struct ns_common *'
    |   |-IfStmt 0x13582e780 <line:23:3, line:24:4>
    |   | |-BinaryOperator 0x13582e758 <line:23:7, col:39> 'int' contains-errors '&&'
    |   | | |-CallExpr 0x13582e650 <col:7, col:17> 'int'
    |   | | | |-ImplicitCastExpr 0x13582e638 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | | `-DeclRefExpr 0x13582e3d0 <col:7> 'int ()' Function 0x13582bb30 'IS_ERR' 'int ()'
    |   | | | `-ImplicitCastExpr 0x13582e678 <col:14> 'void *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x13582e3f0 <col:14> 'void *' lvalue Var 0x13582b538 'err' 'void *'
    |   | | `-BinaryOperator 0x13582e738 <col:22, col:39> 'int' contains-errors '=='
    |   | |   |-CallExpr 0x13582e6a8 <col:22, col:33> 'int'
    |   | |   | |-ImplicitCastExpr 0x13582e690 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | | `-DeclRefExpr 0x13582e468 <col:22> 'int ()' Function 0x13582e068 'PTR_ERR' 'int ()'
    |   | |   | `-ImplicitCastExpr 0x13582e6d0 <col:30> 'void *' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x13582e488 <col:30> 'void *' lvalue Var 0x13582b538 'err' 'void *'
    |   | |   `-UnaryOperator 0x13582e720 <col:38, col:39> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |     `-ImplicitCastExpr 0x13582e708 <col:39> '<dependent type>' contains-errors <LValueToRValue>
    |   | |       `-RecoveryExpr 0x13582e6e8 <col:39> '<dependent type>' contains-errors lvalue
    |   | `-ContinueStmt 0x13582e778 <line:24:4>
    |   `-BreakStmt 0x13582e7a0 <line:25:3>
    |-IfStmt 0x13582ea00 <line:27:2, line:30:2>
    | |-CallExpr 0x13582e860 <line:27:6, col:16> 'int'
    | | |-ImplicitCastExpr 0x13582e848 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13582e808 <col:6> 'int ()' Function 0x13582bb30 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x13582e888 <col:13> 'void *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13582e828 <col:13> 'void *' lvalue Var 0x13582b538 'err' 'void *'
    | `-CompoundStmt 0x13582e9e0 <col:19, line:30:2>
    |   |-CallExpr 0x13582e8f8 <line:28:3, col:19> 'int'
    |   | |-ImplicitCastExpr 0x13582e8e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13582e8a0 <col:3> 'int ()' Function 0x13582bce0 'put_unused_fd' 'int ()'
    |   | `-ImplicitCastExpr 0x13582e920 <col:17> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13582e8c0 <col:17> 'int' lvalue Var 0x13582b5d0 'fd' 'int'
    |   `-ReturnStmt 0x13582e9d0 <line:29:3, col:21>
    |     `-CallExpr 0x13582e990 <col:10, col:21> 'int'
    |       |-ImplicitCastExpr 0x13582e978 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13582e938 <col:10> 'int ()' Function 0x13582e068 'PTR_ERR' 'int ()'
    |       `-ImplicitCastExpr 0x13582e9b8 <col:18> 'void *' <LValueToRValue>
    |         `-DeclRefExpr 0x13582e958 <col:18> 'void *' lvalue Var 0x13582b538 'err' 'void *'
    |-BinaryOperator 0x13582edb0 <line:32:2, col:49> 'struct file *' contains-errors '='
    | |-DeclRefExpr 0x13582ea20 <col:2> 'struct file *' lvalue Var 0x13582b488 'f' 'struct file *'
    | `-CallExpr 0x13582ed78 <col:6, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13582eb20 <col:6> 'int ()' Function 0x13582ea68 'dentry_open' 'int ()'
    |   |-UnaryOperator 0x13582eb60 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x13582eb40 <col:19> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13582ed20 <col:25> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x13582ed58 <col:35, col:48> 'int'
    |     `-ImplicitCastExpr 0x13582ed40 <col:35> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x13582ec70 <col:35> 'int ()' Function 0x13582ebb8 'current_cred' 'int ()'
    |-CallExpr 0x13582ef08 <line:33:2, col:16> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13582eeb0 <col:2> 'int ()' Function 0x13582edf8 'path_put' 'int ()'
    | `-UnaryOperator 0x13582eef0 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13582eed0 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13582f328 <line:34:2, line:38:19> has_else
    | |-CallExpr 0x13582ef88 <line:34:6, col:14> 'int'
    | | |-ImplicitCastExpr 0x13582ef70 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13582ef30 <col:6> 'int ()' Function 0x13582bb30 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x13582efb0 <col:13> 'struct file *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13582ef50 <col:13> 'struct file *' lvalue Var 0x13582b488 'f' 'struct file *'
    | |-CompoundStmt 0x13582f150 <col:17, line:37:2>
    | | |-CallExpr 0x13582f038 <line:35:3, col:19> 'int'
    | | | |-ImplicitCastExpr 0x13582f020 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x13582efc8 <col:3> 'int ()' Function 0x13582bce0 'put_unused_fd' 'int ()'
    | | | `-ImplicitCastExpr 0x13582f060 <col:17> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x13582f000 <col:17> 'int' lvalue Var 0x13582b5d0 'fd' 'int'
    | | `-BinaryOperator 0x13582f130 <line:36:3, col:17> 'int' '='
    | |   |-DeclRefExpr 0x13582f078 <col:3> 'int' lvalue Var 0x13582b5d0 'fd' 'int'
    | |   `-CallExpr 0x13582f0f0 <col:8, col:17> 'int'
    | |     |-ImplicitCastExpr 0x13582f0d8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x13582f098 <col:8> 'int ()' Function 0x13582e068 'PTR_ERR' 'int ()'
    | |     `-ImplicitCastExpr 0x13582f118 <col:16> 'struct file *' <LValueToRValue>
    | |       `-DeclRefExpr 0x13582f0b8 <col:16> 'struct file *' lvalue Var 0x13582b488 'f' 'struct file *'
    | `-CallExpr 0x13582f2c8 <line:38:3, col:19> 'int'
    |   |-ImplicitCastExpr 0x13582f2b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13582f250 <col:3> 'int ()' Function 0x13582f198 'fd_install' 'int ()'
    |   |-ImplicitCastExpr 0x13582f2f8 <col:14> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13582f270 <col:14> 'int' lvalue Var 0x13582b5d0 'fd' 'int'
    |   `-ImplicitCastExpr 0x13582f310 <col:18> 'struct file *' <LValueToRValue>
    |     `-DeclRefExpr 0x13582f290 <col:18> 'struct file *' lvalue Var 0x13582b488 'f' 'struct file *'
    `-ReturnStmt 0x13582f390 <line:40:2, col:9>
      `-ImplicitCastExpr 0x13582f378 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13582f358 <col:9> 'int' lvalue Var 0x13582b5d0 'fd' 'int'
