TranslationUnitDecl 0x11f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f855bd0 '__int128'
|-TypedefDecl 0x11f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f855bf0 'unsigned __int128'
|-TypedefDecl 0x11f926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f926000 'struct __NSConstantString_tag'
|   `-Record 0x11f856580 '__NSConstantString_tag'
|-TypedefDecl 0x11f926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f855d90 '__SVInt8_t'
|-TypedefDecl 0x11f926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f855db0 '__SVInt16_t'
|-TypedefDecl 0x11f926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f855dd0 '__SVInt32_t'
|-TypedefDecl 0x11f9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f855df0 '__SVInt64_t'
|-TypedefDecl 0x11f926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f855e10 '__SVUint8_t'
|-TypedefDecl 0x11f9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f855e30 '__SVUint16_t'
|-TypedefDecl 0x11f926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f855e50 '__SVUint32_t'
|-TypedefDecl 0x11f926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f855e70 '__SVUint64_t'
|-TypedefDecl 0x11f9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f855e90 '__SVFloat16_t'
|-TypedefDecl 0x11f926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f856390 '__SVBool_t'
|-TypedefDecl 0x11f927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8563f0 '__SVCount_t'
|-TypedefDecl 0x11f927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f927fb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-TypedefDecl 0x11f928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f927fb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-FunctionDecl 0x11f928268 <dataset_diviso_filec/func18200_vuln.c:1:1, line:69:1> line:1:5 main 'int (int, char **)'
| |-ParmVarDecl 0x11f9280d8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x11f928188 <col:20, col:27> col:27 used argv 'char **'
| `-CompoundStmt 0x11f9445d0 <line:2:1, line:69:1>
|   |-DeclStmt 0x11f9284d0 <line:5:3, col:15>
|   | `-VarDecl 0x11f928448 <col:3, col:14> col:7 used same 'int' cinit
|   |   `-IntegerLiteral 0x11f9284b0 <col:14> 'int' 0
|   |-DeclStmt 0x11f9285f8 <line:6:3, col:18>
|   | `-VarDecl 0x11f928590 <col:3, col:17> col:8 used lbase 'char[256]'
|   |-DeclStmt 0x11f9286d8 <line:7:3, col:20>
|   | `-VarDecl 0x11f928670 <col:3, col:19> col:8 used strbase 'char[256]'
|   |-DeclStmt 0x11f9287b8 <line:8:3, col:18>
|   | `-VarDecl 0x11f928750 <col:3, col:17> col:8 used ltest 'char[256]'
|   |-DeclStmt 0x11f941ea8 <line:9:3, col:20>
|   | `-VarDecl 0x11f941e40 <col:3, col:19> col:8 used strtest 'char[256]'
|   |-IfStmt 0x11f942360 <line:11:3, line:15:5>
|   | |-BinaryOperator 0x11f942148 <line:11:7, col:50> 'int' contains-errors '=='
|   | | |-CallExpr 0x11f942110 <col:7, col:45> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x11f941fd0 <col:7> 'int ()' Function 0x11f941f18 'parse_cmdline_cmp' 'int ()'
|   | | | |-DeclRefExpr 0x11f941ff0 <col:25> 'int' lvalue ParmVar 0x11f9280d8 'argc' 'int'
|   | | | |-DeclRefExpr 0x11f942010 <col:31> 'char **' lvalue ParmVar 0x11f928188 'argv' 'char **'
|   | | | `-UnaryOperator 0x11f9420f8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x11f9420d8 <col:38> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x11f942098 <col:50> 'int' 1
|   | `-CompoundStmt 0x11f942340 <line:12:5, line:15:5>
|   |   |-CallExpr 0x11f9422b8 <line:13:5, col:37> 'int'
|   |   | `-ImplicitCastExpr 0x11f9422a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x11f942248 <col:5> 'int ()' Function 0x11f942190 'compare_dump_files_help_display' 'int ()'
|   |   `-GotoStmt 0x11f942328 <line:14:5, col:10> 'cleanup' 0x11f9422d8
|   |-CallExpr 0x11f942a78 <line:18:3, col:15> 'int'
|   | |-ImplicitCastExpr 0x11f942a60 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11f942988 <col:3> 'int (const char *, ...)' Function 0x11f9427e0 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x11f942ab8 <col:10> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x11f942aa0 <col:10> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x11f9429f0 <col:10> 'char[4]' lvalue "STR"
|   |-CallExpr 0x11f942d50 <line:19:3, line:21:49> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x11f942ad0 <line:19:3> 'int (const char *, ...)' Function 0x11f9427e0 'printf' 'int (const char *, ...)'
|   | |-StringLiteral 0x11f942b30 <col:10, line:20:5> 'char[7]' lvalue "STRSTR"
|   | |-CXXDependentScopeMemberExpr 0x11f942c88 <line:21:5, col:13> '<dependent type>' contains-errors lvalue .base_filename
|   | | `-RecoveryExpr 0x11f942c68 <col:5> '<dependent type>' contains-errors lvalue
|   | `-CXXDependentScopeMemberExpr 0x11f942cf0 <col:28, col:36> '<dependent type>' contains-errors lvalue .test_filename
|   |   `-RecoveryExpr 0x11f942cd0 <col:28> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x128809a00 <line:22:3, col:15> 'int'
|   | |-ImplicitCastExpr 0x11f942de0 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11f942d88 <col:3> 'int (const char *, ...)' Function 0x11f9427e0 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x128809a40 <col:10> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x128809a28 <col:10> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x11f942da8 <col:10> 'char[4]' lvalue "STR"
|   |-CallExpr 0x128809bc0 <line:25:3, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128809a58 <col:3> 'int (const char *, ...)' Function 0x11f9427e0 'printf' 'int (const char *, ...)'
|   | |-StringLiteral 0x128809a78 <col:10> 'char[4]' lvalue "STR"
|   | `-CXXDependentScopeMemberExpr 0x128809b60 <col:17, col:25> '<dependent type>' contains-errors lvalue .base_filename
|   |   `-RecoveryExpr 0x128809b40 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x128809e60 <line:26:3, line:29:5>
|   | |-RecoveryExpr 0x128809e10 <line:26:6, col:53> '_Bool' contains-errors
|   | `-CompoundStmt 0x128809e48 <line:27:5, line:29:5>
|   |   `-GotoStmt 0x128809e30 <line:28:5, col:10> 'cleanup' 0x11f9422d8
|   |-CallExpr 0x128809ef0 <line:30:3, col:15> 'int'
|   | |-ImplicitCastExpr 0x128809ed8 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128809e80 <col:3> 'int (const char *, ...)' Function 0x11f9427e0 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x128809f30 <col:10> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x128809f18 <col:10> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x128809ea0 <col:10> 'char[4]' lvalue "STR"
|   |-CallExpr 0x12880a0b0 <line:33:3, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128809f48 <col:3> 'int (const char *, ...)' Function 0x11f9427e0 'printf' 'int (const char *, ...)'
|   | |-StringLiteral 0x128809f68 <col:10> 'char[4]' lvalue "STR"
|   | `-CXXDependentScopeMemberExpr 0x12880a050 <col:17, col:25> '<dependent type>' contains-errors lvalue .test_filename
|   |   `-RecoveryExpr 0x12880a030 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12880a258 <line:34:3, line:37:5>
|   | |-RecoveryExpr 0x12880a208 <line:34:6, col:53> '_Bool' contains-errors
|   | `-CompoundStmt 0x12880a240 <line:35:5, line:37:5>
|   |   `-GotoStmt 0x12880a228 <line:36:5, col:10> 'cleanup' 0x11f9422d8
|   |-CallExpr 0x12880a2e8 <line:38:3, col:15> 'int'
|   | |-ImplicitCastExpr 0x12880a2d0 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12880a278 <col:3> 'int (const char *, ...)' Function 0x11f9427e0 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x12880a328 <col:10> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x12880a310 <col:10> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x12880a298 <col:10> 'char[4]' lvalue "STR"
|   |-WhileStmt 0x11f944080 <line:40:3, line:55:5>
|   | |-RecoveryExpr 0x12880a560 <line:40:10, col:79> '_Bool' contains-errors
|   | `-CompoundStmt 0x11f944048 <line:41:5, line:55:5>
|   |   |-DeclStmt 0x11f9434b0 <line:42:5, col:46>
|   |   | `-VarDecl 0x12880a598 <col:5, col:45> col:9 used nbase 'int' cinit
|   |   |   `-CallExpr 0x11f943400 <col:17, col:45> 'int'
|   |   |     |-ImplicitCastExpr 0x12880a9c0 <col:17> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12880a8b0 <col:17> 'int (const char *restrict, const char *restrict, ...)' Function 0x12880a698 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |   |     |-ImplicitCastExpr 0x11f943450 <col:24> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x11f943438 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |     |   `-DeclRefExpr 0x12880a8d0 <col:24> 'char[256]' lvalue Var 0x11f928590 'lbase' 'char[256]'
|   |   |     |-ImplicitCastExpr 0x11f943480 <col:31> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x11f943468 <col:31> 'char *' <ArrayToPointerDecay>
|   |   |     |   `-StringLiteral 0x12880a8f0 <col:31> 'char[4]' lvalue "STR"
|   |   |     `-ImplicitCastExpr 0x11f943498 <col:38> 'char *' <ArrayToPointerDecay>
|   |   |       `-DeclRefExpr 0x12880a910 <col:38> 'char[256]' lvalue Var 0x11f928670 'strbase' 'char[256]'
|   |   |-DeclStmt 0x11f9436c0 <line:43:5, col:46>
|   |   | `-VarDecl 0x11f9434e0 <col:5, col:45> col:9 used ntest 'int' cinit
|   |   |   `-CallExpr 0x11f943610 <col:17, col:45> 'int'
|   |   |     |-ImplicitCastExpr 0x11f9435f8 <col:17> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x11f943548 <col:17> 'int (const char *restrict, const char *restrict, ...)' Function 0x12880a698 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |   |     |-ImplicitCastExpr 0x11f943660 <col:24> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x11f943648 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |     |   `-DeclRefExpr 0x11f943568 <col:24> 'char[256]' lvalue Var 0x11f928750 'ltest' 'char[256]'
|   |   |     |-ImplicitCastExpr 0x11f943690 <col:31> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x11f943678 <col:31> 'char *' <ArrayToPointerDecay>
|   |   |     |   `-StringLiteral 0x11f943588 <col:31> 'char[4]' lvalue "STR"
|   |   |     `-ImplicitCastExpr 0x11f9436a8 <col:38> 'char *' <ArrayToPointerDecay>
|   |   |       `-DeclRefExpr 0x11f9435a8 <col:38> 'char[256]' lvalue Var 0x11f941e40 'strtest' 'char[256]'
|   |   |-CallExpr 0x11f943900 <line:44:5, col:42> 'int'
|   |   | |-ImplicitCastExpr 0x11f9438e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x11f9437b8 <col:5> 'int ()' Function 0x11f943700 'assert' 'int ()'
|   |   | `-BinaryOperator 0x11f9438c8 <col:13, col:38> 'int' '&&'
|   |   |   |-BinaryOperator 0x11f943830 <col:13, col:22> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x11f943818 <col:13> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x11f9437d8 <col:13> 'int' lvalue Var 0x12880a598 'nbase' 'int'
|   |   |   | `-IntegerLiteral 0x11f9437f8 <col:22> 'int' 255
|   |   |   `-BinaryOperator 0x11f9438a8 <col:29, col:38> 'int' '!='
|   |   |     |-ImplicitCastExpr 0x11f943890 <col:29> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x11f943850 <col:29> 'int' lvalue Var 0x11f9434e0 'ntest' 'int'
|   |   |     `-IntegerLiteral 0x11f943870 <col:38> 'int' 255
|   |   |-IfStmt 0x11f943b88 <line:45:5, line:49:7>
|   |   | |-BinaryOperator 0x11f943a18 <line:45:9, col:32> 'int' '||'
|   |   | | |-BinaryOperator 0x11f943980 <col:9, col:18> 'int' '!='
|   |   | | | |-ImplicitCastExpr 0x11f943968 <col:9> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x11f943928 <col:9> 'int' lvalue Var 0x12880a598 'nbase' 'int'
|   |   | | | `-IntegerLiteral 0x11f943948 <col:18> 'int' 1
|   |   | | `-BinaryOperator 0x11f9439f8 <col:23, col:32> 'int' '!='
|   |   | |   |-ImplicitCastExpr 0x11f9439e0 <col:23> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x11f9439a0 <col:23> 'int' lvalue Var 0x11f9434e0 'ntest' 'int'
|   |   | |   `-IntegerLiteral 0x11f9439c0 <col:32> 'int' 1
|   |   | `-CompoundStmt 0x11f943b70 <line:46:7, line:49:7>
|   |   |   `-GotoStmt 0x11f943b58 <line:48:7, col:12> 'cleanup' 0x11f9422d8
|   |   `-IfStmt 0x11f944028 <line:50:5, line:54:7>
|   |     |-BinaryOperator 0x11f943f58 <line:50:9, col:39> 'int' '!='
|   |     | |-CallExpr 0x11f943ea8 <col:9, col:34> 'int'
|   |     | | |-ImplicitCastExpr 0x11f943e90 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x11f943dd0 <col:9> 'int (const char *, const char *)' Function 0x11f943bf0 'strcmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x11f943ef0 <col:17> 'const char *' <NoOp>
|   |     | | | `-ImplicitCastExpr 0x11f943ed8 <col:17> 'char *' <ArrayToPointerDecay>
|   |     | | |   `-DeclRefExpr 0x11f943df0 <col:17> 'char[256]' lvalue Var 0x11f928670 'strbase' 'char[256]'
|   |     | | `-ImplicitCastExpr 0x11f943f20 <col:26> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x11f943f08 <col:26> 'char *' <ArrayToPointerDecay>
|   |     | |     `-DeclRefExpr 0x11f943e10 <col:26> 'char[256]' lvalue Var 0x11f941e40 'strtest' 'char[256]'
|   |     | `-IntegerLiteral 0x11f943f38 <col:39> 'int' 0
|   |     `-CompoundStmt 0x11f944010 <line:51:7, line:54:7>
|   |       `-GotoStmt 0x11f943ff8 <line:53:7, col:12> 'cleanup' 0x11f9422d8
|   |-BinaryOperator 0x11f9440e0 <line:57:3, col:10> 'int' '='
|   | |-DeclRefExpr 0x11f9440a0 <col:3> 'int' lvalue Var 0x11f928448 'same' 'int'
|   | `-IntegerLiteral 0x11f9440c0 <col:10> 'int' 1
|   |-CallExpr 0x11f944170 <line:58:3, col:15> 'int'
|   | |-ImplicitCastExpr 0x11f944158 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11f944100 <col:3> 'int (const char *, ...)' Function 0x11f9427e0 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x11f9441b0 <col:10> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x11f944198 <col:10> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x11f944120 <col:10> 'char[4]' lvalue "STR"
|   `-LabelStmt 0x11f9442f0 <line:59:1, col:8> 'cleanup'
|     `-NullStmt 0x11f9442e8 <col:8>
|-FunctionDecl 0x11f9427e0 <line:18:3> col:3 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x11f9428e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x11f942888 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x11f942950 <col:3> Implicit printf 1 2
|-FunctionDecl 0x12880a698 <line:42:17> col:17 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x12880a798 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12880a800 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-BuiltinAttr 0x12880a740 <<invalid sloc>> Implicit 913
| `-FormatAttr 0x12880a878 <col:17> Implicit scanf 2 3
|-FunctionDecl 0x11f943bf0 <line:50:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x11f943cf0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x11f943d58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x11f943c98 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x11f944400 <line:65:3> col:3 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x11f944500 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x11f9444a8 <<invalid sloc>> Implicit 873
