TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x120140d38 <dataset_diviso_filec/func10385_nonvuln.c:1:1, line:35:1> line:1:12 invalid check_ptr_alignment 'int (struct bpf_verifier_env *, const struct bpf_reg_state *, int, int, int)' static
  |-ParmVarDecl 0x120128648 <col:32, col:57> col:57 used env 'struct bpf_verifier_env *'
  |-ParmVarDecl 0x120140a28 <line:2:11, col:39> col:39 used reg 'const struct bpf_reg_state *'
  |-ParmVarDecl 0x120140aa8 <col:44, col:48> col:48 used off 'int'
  |-ParmVarDecl 0x120140b28 <line:3:11, col:15> col:15 used size 'int'
  |-ParmVarDecl 0x120140bc0 <col:21, col:26> col:26 invalid strict_alignment_once 'int'
  `-CompoundStmt 0x1201419c0 <line:4:1, line:35:1>
    |-DeclStmt 0x120140f18 <line:6:2, col:31>
    | `-VarDecl 0x120140e20 <col:2, col:29> col:14 used pointer_desc 'const char *' cinit
    |   `-ImplicitCastExpr 0x120140f00 <col:29> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x120140ee8 <col:29> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x120140ed0 <col:29> 'char[1]' lvalue ""
    |-SwitchStmt 0x120140fa8 <line:8:2, line:32:2>
    | |-ImplicitCastExpr 0x120140f90 <line:8:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x120140f68 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x120140f30 <col:10> 'const struct bpf_reg_state *' lvalue ParmVar 0x120140a28 'reg' 'const struct bpf_reg_state *'
    | `-CompoundStmt 0x1201416c8 <col:21, line:32:2>
    |   |-ReturnStmt 0x1201412c8 <line:12:3, col:61>
    |   | `-CallExpr 0x120141280 <col:10, col:61> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x120141160 <col:10> 'int ()' Function 0x1201410a8 'check_pkt_ptr_alignment' 'int ()'
    |   |   |-DeclRefExpr 0x120141180 <col:34> 'struct bpf_verifier_env *' lvalue ParmVar 0x120128648 'env' 'struct bpf_verifier_env *'
    |   |   |-DeclRefExpr 0x1201411a0 <col:39> 'const struct bpf_reg_state *' lvalue ParmVar 0x120140a28 'reg' 'const struct bpf_reg_state *'
    |   |   |-DeclRefExpr 0x1201411c0 <col:44> 'int' lvalue ParmVar 0x120140aa8 'off' 'int'
    |   |   |-DeclRefExpr 0x1201411e0 <col:49> 'int' lvalue ParmVar 0x120140b28 'size' 'int'
    |   |   `-RecoveryExpr 0x120141260 <col:55> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x1201413a0 <line:14:3, col:18> 'const char *' '='
    |   | |-DeclRefExpr 0x1201412f0 <col:3> 'const char *' lvalue Var 0x120140e20 'pointer_desc' 'const char *'
    |   | `-ImplicitCastExpr 0x120141388 <col:18> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x120141370 <col:18> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x120141350 <col:18> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x1201413c0 <line:15:3>
    |   |-BinaryOperator 0x120141450 <line:17:3, col:18> 'const char *' '='
    |   | |-DeclRefExpr 0x1201413e0 <col:3> 'const char *' lvalue Var 0x120140e20 'pointer_desc' 'const char *'
    |   | `-ImplicitCastExpr 0x120141438 <col:18> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x120141420 <col:18> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x120141400 <col:18> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x120141470 <line:18:3>
    |   |-BinaryOperator 0x120141500 <line:20:3, col:18> 'const char *' '='
    |   | |-DeclRefExpr 0x120141490 <col:3> 'const char *' lvalue Var 0x120140e20 'pointer_desc' 'const char *'
    |   | `-ImplicitCastExpr 0x1201414e8 <col:18> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x1201414d0 <col:18> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x1201414b0 <col:18> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x120141520 <line:21:3>
    |   |-BinaryOperator 0x1201415b0 <line:23:3, col:18> 'const char *' '='
    |   | |-DeclRefExpr 0x120141540 <col:3> 'const char *' lvalue Var 0x120140e20 'pointer_desc' 'const char *'
    |   | `-ImplicitCastExpr 0x120141598 <col:18> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x120141580 <col:18> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x120141560 <col:18> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x1201415e8 <line:26:3>
    |   |-BinaryOperator 0x120141678 <line:28:3, col:18> 'const char *' '='
    |   | |-DeclRefExpr 0x120141608 <col:3> 'const char *' lvalue Var 0x120140e20 'pointer_desc' 'const char *'
    |   | `-ImplicitCastExpr 0x120141660 <col:18> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x120141648 <col:18> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x120141628 <col:18> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x120141698 <line:29:3>
    |   `-DefaultStmt 0x1201416a8 <line:30:2, line:31:3>
    |     `-BreakStmt 0x1201416a0 <col:3>
    `-ReturnStmt 0x1201419b0 <line:33:2, line:34:15>
      `-CallExpr 0x120141960 <line:33:9, line:34:15> '<dependent type>' contains-errors
        |-DeclRefExpr 0x120141818 <line:33:9> 'int ()' Function 0x120141760 'check_generic_ptr_alignment' 'int ()'
        |-DeclRefExpr 0x120141838 <col:37> 'struct bpf_verifier_env *' lvalue ParmVar 0x120128648 'env' 'struct bpf_verifier_env *'
        |-DeclRefExpr 0x120141858 <col:42> 'const struct bpf_reg_state *' lvalue ParmVar 0x120140a28 'reg' 'const struct bpf_reg_state *'
        |-DeclRefExpr 0x120141878 <col:47> 'const char *' lvalue Var 0x120140e20 'pointer_desc' 'const char *'
        |-DeclRefExpr 0x120141898 <col:61> 'int' lvalue ParmVar 0x120140aa8 'off' 'int'
        |-DeclRefExpr 0x1201418b8 <col:66> 'int' lvalue ParmVar 0x120140b28 'size' 'int'
        `-RecoveryExpr 0x120141940 <line:34:9> '<dependent type>' contains-errors lvalue
