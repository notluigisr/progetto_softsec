TranslationUnitDecl 0x11d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d055bd0 '__int128'
|-TypedefDecl 0x11d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d055bf0 'unsigned __int128'
|-TypedefDecl 0x11d126630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11d126400 'struct __NSConstantString_tag'
|   `-Record 0x11d056580 '__NSConstantString_tag'
|-TypedefDecl 0x11d126698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d055d90 '__SVInt8_t'
|-TypedefDecl 0x11d126700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d055db0 '__SVInt16_t'
|-TypedefDecl 0x11d126768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d055dd0 '__SVInt32_t'
|-TypedefDecl 0x11d1267d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d055df0 '__SVInt64_t'
|-TypedefDecl 0x11d126838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d055e10 '__SVUint8_t'
|-TypedefDecl 0x11d1268a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d055e30 '__SVUint16_t'
|-TypedefDecl 0x11d126908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d055e50 '__SVUint32_t'
|-TypedefDecl 0x11d126970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d055e70 '__SVUint64_t'
|-TypedefDecl 0x11d1269d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d055e90 '__SVFloat16_t'
|-TypedefDecl 0x11d126a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11d126aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11d126b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11d126b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11d126be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11d126c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11d126cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11d126d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11d126d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11d126de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11d126e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11d126eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11d126f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11d126f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11d126ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11d127058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11d1270c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11d127128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11d127190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11d1271f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11d127260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11d1272c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11d127330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11d127398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11d127c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11d127c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11d127cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11d127d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11d127da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11d127e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11d127e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11d127ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11d127f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11d127fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11d128010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11d128078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11d1280e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11d128148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11d1281b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11d128218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d056390 '__SVBool_t'
|-TypedefDecl 0x11d128280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11d1282e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11d128350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d0563f0 '__SVCount_t'
|-TypedefDecl 0x11d1283f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11d1283b0 'char *'
|   `-BuiltinType 0x11d0556b0 'char'
|-TypedefDecl 0x11d128468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11d1283b0 'char *'
|   `-BuiltinType 0x11d0556b0 'char'
`-FunctionDecl 0x11d128748 <dataset_diviso_filec/func18559_nonvuln.c:1:1, line:29:1> line:1:5 invalid tls1_check_curve 'int (int *, const unsigned char *, int)'
  |-ParmVarDecl 0x11d128528 <col:22, col:27> col:27 invalid s 'int *'
  |-ParmVarDecl 0x11d1285d8 <col:30, col:51> col:51 used p 'const unsigned char *'
  |-ParmVarDecl 0x11d128658 <col:54, col:61> col:61 invalid len 'int'
  `-CompoundStmt 0x11e808bf0 <line:2:1, line:29:1>
    |-DeclStmt 0x11d128888 <line:3:5, col:32>
    | `-VarDecl 0x11d128820 <col:5, col:26> col:26 used curves 'const unsigned char *'
    |-BinaryOperator 0x11d128970 <line:4:5, col:24> '<dependent type>' contains-errors ','
    | |-UnaryExprOrTypeTraitExpr 0x11d128930 <col:5, col:12> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x11d128910 <col:12> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x11d128950 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x11d128bd8 <line:5:5, col:47>
    | `-VarDecl 0x11d1289a8 <col:5, col:46> col:18 used suiteb_flags 'unsigned int' cinit
    |   `-CallExpr 0x11d128bb0 <col:33, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11d128b70 <col:33> 'int ()' Function 0x11d128ab8 'tls1_suiteb' 'int ()'
    |     `-RecoveryExpr 0x11d128b90 <col:45> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11d141e30 <line:6:5, line:7:16>
    | |-BinaryOperator 0x11d141de0 <line:6:9, col:29> 'int' contains-errors '||'
    | | |-BinaryOperator 0x11d141c40 <col:9, col:16> 'int' contains-errors '!='
    | | | |-RecoveryExpr 0x11d141c00 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x11d141c20 <col:16> 'int' 3
    | | `-BinaryOperator 0x11d141dc0 <col:21, col:29> 'int' contains-errors '!='
    | |   |-ArraySubscriptExpr 0x11d141d80 <col:21, col:24> 'const unsigned char' lvalue
    | |   | |-ImplicitCastExpr 0x11d141d68 <col:21> 'const unsigned char *' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x11d141c60 <col:21> 'const unsigned char *' lvalue ParmVar 0x11d1285d8 'p' 'const unsigned char *'
    | |   | `-IntegerLiteral 0x11d141c80 <col:23> 'int' 0
    | |   `-RecoveryExpr 0x11d141da0 <col:29> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x11d141e20 <line:7:9, col:16>
    |   `-IntegerLiteral 0x11d141e00 <col:16> 'int' 0
    |-IfStmt 0x11d1426b8 <line:9:5, line:21:5>
    | |-ImplicitCastExpr 0x11d141e70 <line:9:9> 'unsigned int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x11d141e50 <col:9> 'unsigned int' contains-errors lvalue Var 0x11d1289a8 'suiteb_flags' 'unsigned int'
    | `-CompoundStmt 0x11d142690 <col:23, line:21:5>
    |   |-DeclStmt 0x11d142048 <line:10:9, col:54>
    |   | `-VarDecl 0x11d141ea0 <col:9, col:52> col:23 used cid 'unsigned long' cinit
    |   |   `-CXXDependentScopeMemberExpr 0x11d142000 <col:29, col:52> '<dependent type>' contains-errors lvalue ->id
    |   |     `-CXXDependentScopeMemberExpr 0x11d141fb8 <col:29, col:40> '<dependent type>' contains-errors lvalue .new_cipher
    |   |       `-CXXDependentScopeMemberExpr 0x11d141f70 <col:29, col:36> '<dependent type>' contains-errors lvalue ->tmp
    |   |         `-CXXDependentScopeMemberExpr 0x11d141f28 <col:29, col:32> '<dependent type>' contains-errors lvalue ->s3
    |   |           `-RecoveryExpr 0x11d141f08 <col:29> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x11d142120 <line:11:9, line:12:20>
    |   | |-ImplicitCastExpr 0x11d1420d8 <line:11:13, col:16> 'unsigned char' <LValueToRValue>
    |   | | `-ArraySubscriptExpr 0x11d1420b8 <col:13, col:16> 'const unsigned char' lvalue
    |   | |   |-ImplicitCastExpr 0x11d1420a0 <col:13> 'const unsigned char *' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x11d142060 <col:13> 'const unsigned char *' lvalue ParmVar 0x11d1285d8 'p' 'const unsigned char *'
    |   | |   `-IntegerLiteral 0x11d142080 <col:15> 'int' 1
    |   | `-ReturnStmt 0x11d142110 <line:12:13, col:20>
    |   |   `-IntegerLiteral 0x11d1420f0 <col:20> 'int' 0
    |   `-IfStmt 0x11d142660 <line:13:9, line:20:20> has_else
    |     |-BinaryOperator 0x11d1421b8 <line:13:13, col:20> 'int' contains-errors '=='
    |     | |-DeclRefExpr 0x11d142140 <col:13> 'unsigned long' contains-errors lvalue Var 0x11d141ea0 'cid' 'unsigned long'
    |     | `-RecoveryExpr 0x11d142198 <col:20> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x11d142388 <col:65, line:16:9>
    |     | `-IfStmt 0x11d142368 <line:14:13, line:15:24>
    |     |   |-BinaryOperator 0x11d142318 <line:14:17, col:25> 'int' contains-errors '!='
    |     |   | |-ArraySubscriptExpr 0x11d1422d8 <col:17, col:20> 'const unsigned char' lvalue
    |     |   | | |-ImplicitCastExpr 0x11d1422c0 <col:17> 'const unsigned char *' <LValueToRValue>
    |     |   | | | `-DeclRefExpr 0x11d1421d8 <col:17> 'const unsigned char *' lvalue ParmVar 0x11d1285d8 'p' 'const unsigned char *'
    |     |   | | `-IntegerLiteral 0x11d1421f8 <col:19> 'int' 2
    |     |   | `-RecoveryExpr 0x11d1422f8 <col:25> '<dependent type>' contains-errors lvalue
    |     |   `-ReturnStmt 0x11d142358 <line:15:17, col:24>
    |     |     `-IntegerLiteral 0x11d142338 <col:24> 'int' 0
    |     `-IfStmt 0x11d142630 <line:16:16, line:20:20> has_else
    |       |-BinaryOperator 0x11d142418 <line:16:20, col:27> 'int' contains-errors '=='
    |       | |-DeclRefExpr 0x11d1423a0 <col:20> 'unsigned long' contains-errors lvalue Var 0x11d141ea0 'cid' 'unsigned long'
    |       | `-RecoveryExpr 0x11d1423f8 <col:27> '<dependent type>' contains-errors lvalue
    |       |-CompoundStmt 0x11d1425e8 <col:72, line:19:9>
    |       | `-IfStmt 0x11d1425c8 <line:17:13, line:18:24>
    |       |   |-BinaryOperator 0x11d142578 <line:17:17, col:25> 'int' contains-errors '!='
    |       |   | |-ArraySubscriptExpr 0x11d142538 <col:17, col:20> 'const unsigned char' lvalue
    |       |   | | |-ImplicitCastExpr 0x11d142520 <col:17> 'const unsigned char *' <LValueToRValue>
    |       |   | | | `-DeclRefExpr 0x11d142438 <col:17> 'const unsigned char *' lvalue ParmVar 0x11d1285d8 'p' 'const unsigned char *'
    |       |   | | `-IntegerLiteral 0x11d142458 <col:19> 'int' 2
    |       |   | `-RecoveryExpr 0x11d142558 <col:25> '<dependent type>' contains-errors lvalue
    |       |   `-ReturnStmt 0x11d1425b8 <line:18:17, col:24>
    |       |     `-IntegerLiteral 0x11d142598 <col:24> 'int' 0
    |       `-ReturnStmt 0x11d142620 <line:20:13, col:20>
    |         `-IntegerLiteral 0x11d142600 <col:20> 'int' 0
    |-IfStmt 0x11d1429d0 <line:22:5, line:23:16>
    | |-UnaryOperator 0x11d142988 <line:22:9, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x11d142948 <col:10, col:55> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x11d1427b8 <col:10> 'int ()' Function 0x11d142700 'tls1_get_curvelist' 'int ()'
    | |   |-RecoveryExpr 0x11d1427d8 <col:29> '<dependent type>' contains-errors lvalue
    | |   |-IntegerLiteral 0x11d1427f8 <col:32> 'int' 0
    | |   |-UnaryOperator 0x11d142870 <col:35, col:36> 'const unsigned char **' prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x11d142818 <col:36> 'const unsigned char *' lvalue Var 0x11d128820 'curves' 'const unsigned char *'
    | |   `-UnaryOperator 0x11d142930 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x11d142910 <col:45> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x11d1429c0 <line:23:9, col:16>
    |   `-IntegerLiteral 0x11d1429a0 <col:16> 'int' 0
    |-ForStmt 0x11e808b88 <line:24:5, line:27:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11d142ad8 <line:24:17, col:21> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x11d142a98 <col:17> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11d142ab8 <col:21> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x11e808800 <col:33, col:48> 'const unsigned char *' contains-errors ','
    | | |-UnaryOperator 0x11d142bd8 <col:33, col:34> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | | `-RecoveryExpr 0x11d142bb8 <col:33> '<dependent type>' contains-errors lvalue
    | | `-CompoundAssignOperator 0x11d142b68 <col:38, col:48> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    | |   |-DeclRefExpr 0x11d142b28 <col:38> 'const unsigned char *' lvalue Var 0x11d128820 'curves' 'const unsigned char *'
    | |   `-IntegerLiteral 0x11d142b48 <col:48> 'int' 2
    | `-CompoundStmt 0x11e808b70 <col:51, line:27:5>
    |   `-IfStmt 0x11e808b50 <line:25:9, line:26:20>
    |     |-BinaryOperator 0x11e808b00 <line:25:13, col:50> 'int' '&&'
    |     | |-BinaryOperator 0x11e808970 <col:13, col:29> 'int' '=='
    |     | | |-ImplicitCastExpr 0x11e808940 <col:13, col:16> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x11e808910 <col:13, col:16> 'unsigned char' <LValueToRValue>
    |     | | |   `-ArraySubscriptExpr 0x11e808878 <col:13, col:16> 'const unsigned char' lvalue
    |     | | |     |-ImplicitCastExpr 0x11e808860 <col:13> 'const unsigned char *' <LValueToRValue>
    |     | | |     | `-DeclRefExpr 0x11e808820 <col:13> 'const unsigned char *' lvalue ParmVar 0x11d1285d8 'p' 'const unsigned char *'
    |     | | |     `-IntegerLiteral 0x11e808840 <col:15> 'int' 1
    |     | | `-ImplicitCastExpr 0x11e808958 <col:21, col:29> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x11e808928 <col:21, col:29> 'unsigned char' <LValueToRValue>
    |     | |     `-ArraySubscriptExpr 0x11e8088f0 <col:21, col:29> 'const unsigned char' lvalue
    |     | |       |-ImplicitCastExpr 0x11e8088d8 <col:21> 'const unsigned char *' <LValueToRValue>
    |     | |       | `-DeclRefExpr 0x11e808898 <col:21> 'const unsigned char *' lvalue Var 0x11d128820 'curves' 'const unsigned char *'
    |     | |       `-IntegerLiteral 0x11e8088b8 <col:28> 'int' 0
    |     | `-BinaryOperator 0x11e808ae0 <col:34, col:50> 'int' '=='
    |     |   |-ImplicitCastExpr 0x11e808ab0 <col:34, col:37> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x11e808a80 <col:34, col:37> 'unsigned char' <LValueToRValue>
    |     |   |   `-ArraySubscriptExpr 0x11e8089e8 <col:34, col:37> 'const unsigned char' lvalue
    |     |   |     |-ImplicitCastExpr 0x11e8089d0 <col:34> 'const unsigned char *' <LValueToRValue>
    |     |   |     | `-DeclRefExpr 0x11e808990 <col:34> 'const unsigned char *' lvalue ParmVar 0x11d1285d8 'p' 'const unsigned char *'
    |     |   |     `-IntegerLiteral 0x11e8089b0 <col:36> 'int' 2
    |     |   `-ImplicitCastExpr 0x11e808ac8 <col:42, col:50> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x11e808a98 <col:42, col:50> 'unsigned char' <LValueToRValue>
    |     |       `-ArraySubscriptExpr 0x11e808a60 <col:42, col:50> 'const unsigned char' lvalue
    |     |         |-ImplicitCastExpr 0x11e808a48 <col:42> 'const unsigned char *' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x11e808a08 <col:42> 'const unsigned char *' lvalue Var 0x11d128820 'curves' 'const unsigned char *'
    |     |         `-IntegerLiteral 0x11e808a28 <col:49> 'int' 1
    |     `-ReturnStmt 0x11e808b40 <line:26:13, col:20>
    |       `-IntegerLiteral 0x11e808b20 <col:20> 'int' 1
    `-ReturnStmt 0x11e808be0 <line:28:5, col:12>
      `-IntegerLiteral 0x11e808bc0 <col:12> 'int' 0
