TranslationUnitDecl 0x12e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e855bd0 '__int128'
|-TypedefDecl 0x12e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e855bf0 'unsigned __int128'
|-TypedefDecl 0x12f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12e856580 '__NSConstantString_tag'
|-TypedefDecl 0x12f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e855d90 '__SVInt8_t'
|-TypedefDecl 0x12f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e855db0 '__SVInt16_t'
|-TypedefDecl 0x12f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e855dd0 '__SVInt32_t'
|-TypedefDecl 0x12f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e855df0 '__SVInt64_t'
|-TypedefDecl 0x12f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e855e10 '__SVUint8_t'
|-TypedefDecl 0x12f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e855e30 '__SVUint16_t'
|-TypedefDecl 0x12f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e855e50 '__SVUint32_t'
|-TypedefDecl 0x12f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e855e70 '__SVUint64_t'
|-TypedefDecl 0x12f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e855e90 '__SVFloat16_t'
|-TypedefDecl 0x12f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e856390 '__SVBool_t'
|-TypedefDecl 0x12f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e8563f0 '__SVCount_t'
|-TypedefDecl 0x12f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f00dbb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
|-TypedefDecl 0x12f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f00dbb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
`-FunctionDecl 0x12f00dfa8 <dataset_diviso_filec/func13748_nonvuln.c:1:1, line:40:1> line:1:1 invalid virDomainGetMemoryParameters 'int (int, int, int *, unsigned int)'
  |-ParmVarDecl 0x12f00dcf0 <col:30, col:43> col:43 invalid domain 'int'
  |-ParmVarDecl 0x12f00dd70 <line:2:30, col:51> col:51 invalid params 'int'
  |-ParmVarDecl 0x12f00de28 <line:3:30, col:35> col:35 used nparams 'int *'
  |-ParmVarDecl 0x12f00dea8 <col:44, col:57> col:57 used flags 'unsigned int'
  `-CompoundStmt 0x12f029720 <line:4:1, line:40:1>
    |-CallExpr 0x12f027400 <line:7:5, line:8:62> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f00e1d0 <line:7:5> 'int ()' Function 0x12f00e118 'VIR_DOMAIN_DEBUG' 'int ()'
    | |-RecoveryExpr 0x12f00e1f0 <col:22> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x12f00e250 <col:30> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x12f00e270 <line:8:22> '<dependent type>' contains-errors lvalue
    | |-ConditionalOperator 0x12f00e388 <col:30, col:54> 'int'
    | | |-ImplicitCastExpr 0x12f00e358 <col:30, col:38> 'int *' <LValueToRValue>
    | | | `-ParenExpr 0x12f00e2b0 <col:30, col:38> 'int *' lvalue
    | | |   `-DeclRefExpr 0x12f00e290 <col:31> 'int *' lvalue ParmVar 0x12f00de28 'nparams' 'int *'
    | | |-ImplicitCastExpr 0x12f00e370 <col:42, col:43> 'int' <LValueToRValue>
    | | | `-UnaryOperator 0x12f00e308 <col:42, col:43> 'int' lvalue prefix '*' cannot overflow
    | | |   `-ImplicitCastExpr 0x12f00e2f0 <col:43> 'int *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x12f00e2d0 <col:43> 'int *' lvalue ParmVar 0x12f00de28 'nparams' 'int *'
    | | `-UnaryOperator 0x12f00e340 <col:53, col:54> 'int' prefix '-'
    | |   `-IntegerLiteral 0x12f00e320 <col:54> 'int' 1
    | `-DeclRefExpr 0x12f00e3b8 <col:57> 'unsigned int' lvalue ParmVar 0x12f00dea8 'flags' 'unsigned int'
    |-CallExpr 0x12f027598 <line:10:5, col:23> 'int'
    | `-ImplicitCastExpr 0x12f027580 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12f027528 <col:5> 'int ()' Function 0x12f027470 'virResetLastError' 'int ()'
    |-CallExpr 0x12f027710 <line:12:5, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f027698 <col:5> 'int ()' Function 0x12f0275e0 'virCheckDomainReturn' 'int ()'
    | |-RecoveryExpr 0x12f0276b8 <col:26> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x12f0276f8 <col:34, col:35> 'int' prefix '-'
    |   `-IntegerLiteral 0x12f0276d8 <col:35> 'int' 1
    |-CallExpr 0x12f0278c8 <line:13:5, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f027820 <col:5> 'int ()' Function 0x12f027768 'virCheckNonNullArgGoto' 'int ()'
    | |-DeclRefExpr 0x12f027840 <col:28> 'int *' lvalue ParmVar 0x12f00de28 'nparams' 'int *'
    | `-RecoveryExpr 0x12f0278a8 <col:37> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f027b10 <line:14:5, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f0279d8 <col:5> 'int ()' Function 0x12f027920 'virCheckNonNegativeArgGoto' 'int ()'
    | |-UnaryOperator 0x12f027ad8 <col:32, col:33> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12f027ac0 <col:33> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f0279f8 <col:33> 'int *' lvalue ParmVar 0x12f00de28 'nparams' 'int *'
    | `-RecoveryExpr 0x12f027af0 <col:42> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f027cc0 <line:15:5, line:16:45>
    | |-BinaryOperator 0x12f027bc8 <line:15:9, col:21> 'int' '!='
    | | |-ImplicitCastExpr 0x12f027bb0 <col:9, col:10> 'int' <LValueToRValue>
    | | | `-UnaryOperator 0x12f027b78 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    | | |   `-ImplicitCastExpr 0x12f027b60 <col:10> 'int *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x12f027b40 <col:10> 'int *' lvalue ParmVar 0x12f00de28 'nparams' 'int *'
    | | `-IntegerLiteral 0x12f027b90 <col:21> 'int' 0
    | `-CallExpr 0x12f027c90 <line:16:9, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f027be8 <col:9> 'int ()' Function 0x12f027768 'virCheckNonNullArgGoto' 'int ()'
    |   |-RecoveryExpr 0x12f027c08 <col:32> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12f027c70 <col:40> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f028058 <line:18:5, line:20:18>
    | |-CallExpr 0x12f027f68 <line:18:9, line:19:68> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12f027dc0 <line:18:9> 'int ()' Function 0x12f027d08 'VIR_DRV_SUPPORTS_FEATURE' 'int ()'
    | | |-CXXDependentScopeMemberExpr 0x12f027e48 <col:34, col:48> '<dependent type>' contains-errors lvalue ->driver
    | | | `-CXXDependentScopeMemberExpr 0x12f027e00 <col:34, col:42> '<dependent type>' contains-errors lvalue ->conn
    | | |   `-RecoveryExpr 0x12f027de0 <col:34> '<dependent type>' contains-errors lvalue
    | | |-CXXDependentScopeMemberExpr 0x12f027eb0 <col:56, col:64> '<dependent type>' contains-errors lvalue ->conn
    | | | `-RecoveryExpr 0x12f027e90 <col:56> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12f027f48 <line:19:34> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x12f028028 <line:20:9, col:18> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x12f027fa0 <col:9> 'unsigned int' lvalue ParmVar 0x12f00dea8 'flags' 'unsigned int'
    |   `-RecoveryExpr 0x12f028008 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f028258 <line:22:5, line:24:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f028158 <line:22:5> 'int ()' Function 0x12f0280a0 'VIR_EXCLUSIVE_FLAGS_GOTO' 'int ()'
    | |-RecoveryExpr 0x12f0281f8 <col:30> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12f028218 <line:23:30> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12f028238 <line:24:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f0293d0 <line:28:5, line:34:5>
    | |-RecoveryExpr 0x12f0282f8 <line:28:9, col:23> '_Bool' contains-errors
    | `-CompoundStmt 0x12f0293a8 <col:50, line:34:5>
    |   |-DeclStmt 0x12f028398 <line:29:9, col:16>
    |   | `-VarDecl 0x12f028330 <col:9, col:13> col:13 used ret 'int'
    |   |-IfStmt 0x12f029340 <line:31:9, line:32:18>
    |   | |-BinaryOperator 0x12f0292b8 <line:31:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x12f0292a0 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12f029260 <col:13> 'int' lvalue Var 0x12f028330 'ret' 'int'
    |   | | `-IntegerLiteral 0x12f029280 <col:19> 'int' 0
    |   | `-GotoStmt 0x12f029328 <line:32:13, col:18> 'error' 0x12f0292d8
    |   `-ReturnStmt 0x12f029398 <line:33:9, col:16>
    |     `-ImplicitCastExpr 0x12f029380 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12f029360 <col:16> 'int' lvalue Var 0x12f028330 'ret' 'int'
    |-CallExpr 0x12f029508 <line:35:5, col:31> 'int'
    | `-ImplicitCastExpr 0x12f0294f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12f0294d0 <col:5> 'int ()' Function 0x12f029418 'virReportUnsupportedError' 'int ()'
    |-LabelStmt 0x12f0296b8 <line:37:2, line:38:34> 'error'
    | `-CallExpr 0x12f029690 <col:5, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f029608 <col:5> 'int ()' Function 0x12f029550 'virDispatchError' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x12f029648 <col:22, col:30> '<dependent type>' contains-errors lvalue ->conn
    |     `-RecoveryExpr 0x12f029628 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12f029710 <line:39:5, col:13>
      `-UnaryOperator 0x12f0296f8 <col:12, col:13> 'int' prefix '-'
        `-IntegerLiteral 0x12f0296d8 <col:13> 'int' 1
