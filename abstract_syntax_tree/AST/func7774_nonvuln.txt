TranslationUnitDecl 0x126055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1260564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126055bd0 '__int128'
|-TypedefDecl 0x126056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126055bf0 'unsigned __int128'
|-TypedefDecl 0x12680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12680bc00 'struct __NSConstantString_tag'
|   `-Record 0x126056580 '__NSConstantString_tag'
|-TypedefDecl 0x12680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126055d90 '__SVInt8_t'
|-TypedefDecl 0x12680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126055db0 '__SVInt16_t'
|-TypedefDecl 0x12680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126055dd0 '__SVInt32_t'
|-TypedefDecl 0x12680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126055df0 '__SVInt64_t'
|-TypedefDecl 0x12680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126055e10 '__SVUint8_t'
|-TypedefDecl 0x12680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126055e30 '__SVUint16_t'
|-TypedefDecl 0x12680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126055e50 '__SVUint32_t'
|-TypedefDecl 0x12680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126055e70 '__SVUint64_t'
|-TypedefDecl 0x12680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126055e90 '__SVFloat16_t'
|-TypedefDecl 0x12680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1260560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1260560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1260560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1260561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1260561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1260561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1260562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1260562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1260562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126056390 '__SVBool_t'
|-TypedefDecl 0x12680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1260563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1260563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1260563f0 '__SVCount_t'
|-TypedefDecl 0x12680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-TypedefDecl 0x12680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
`-FunctionDecl 0x126826758 <dataset_diviso_filec/func7774_nonvuln.c:1:1, line:68:1> line:1:21 tree_mod_log_insert_move 'int (struct extent_buffer *, int, int, int)' static inline
  |-ParmVarDecl 0x12680e268 <col:46, col:68> col:68 used eb 'struct extent_buffer *'
  |-ParmVarDecl 0x12680e2e8 <line:2:3, col:7> col:7 used dst_slot 'int'
  |-ParmVarDecl 0x12680e368 <col:17, col:21> col:21 used src_slot 'int'
  |-ParmVarDecl 0x126826600 <col:31, col:35> col:35 used nr_items 'int'
  `-CompoundStmt 0x1261242a8 <line:3:1, line:68:1>
    |-DeclStmt 0x126826a90 <line:4:2, col:33>
    | |-RecordDecl 0x126826868 <col:2, col:9> col:9 struct tree_mod_elem
    | `-VarDecl 0x1268269d8 <col:2, col:29> col:24 used tm 'struct tree_mod_elem *' cinit
    |   `-RecoveryExpr 0x126826a58 <col:29> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x126826c38 <line:5:2, col:39>
    | `-VarDecl 0x126826b98 <col:2, col:35> col:25 used tm_list 'struct tree_mod_elem **' cinit
    |   `-RecoveryExpr 0x126826c18 <col:35> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x126826cf0 <line:6:2, col:13>
    | `-VarDecl 0x126826c68 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x126826cd0 <col:12> 'int' 0
    |-DeclStmt 0x126826d88 <line:7:2, col:7>
    | `-VarDecl 0x126826d20 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x126826e40 <line:8:2, col:16>
    | `-VarDecl 0x126826db8 <col:2, col:15> col:6 used locked 'int' cinit
    |   `-IntegerLiteral 0x126826e20 <col:15> 'int' 0
    |-IfStmt 0x126827088 <line:10:2, line:11:10>
    | |-UnaryOperator 0x126827040 <line:10:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x126827010 <col:7, col:40> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x126826f70 <col:7> 'int ()' Function 0x126826eb8 'tree_mod_need_log' 'int ()'
    | |   |-RecoveryExpr 0x126826fc8 <col:25, col:29> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x126826f90 <col:25> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    | |   `-DeclRefExpr 0x126826ff0 <col:38> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    | `-ReturnStmt 0x126827078 <line:11:3, col:10>
    |   `-IntegerLiteral 0x126827058 <col:10> 'int' 0
    |-BinaryOperator 0x126827388 <line:13:2, col:70> 'struct tree_mod_elem **' contains-errors '='
    | |-DeclRefExpr 0x1268270a8 <col:2> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    | `-CallExpr 0x126827350 <col:12, col:70> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1268271a8 <col:12> 'int ()' Function 0x1268270f0 'kcalloc' 'int ()'
    |   |-DeclRefExpr 0x1268271c8 <col:20> 'int' lvalue ParmVar 0x126826600 'nr_items' 'int'
    |   |-UnaryExprOrTypeTraitExpr 0x126827310 <col:30, col:59> 'unsigned long' sizeof 'struct tree_mod_elem *'
    |   `-RecoveryExpr 0x126827330 <col:62> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1268274a0 <line:14:2, line:15:11>
    | |-UnaryOperator 0x1268273e0 <line:14:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1268273c8 <col:7> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x1268273a8 <col:7> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    | `-ReturnStmt 0x126827490 <line:15:3, col:11>
    |   `-UnaryOperator 0x126827478 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x126827460 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x126827440 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x127808838 <line:18:2, line:21:2>
    | |-UnaryOperator 0x1278086a0 <line:18:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x127808688 <col:7> 'struct tree_mod_elem *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x127808668 <col:7> 'struct tree_mod_elem *' contains-errors lvalue Var 0x1268269d8 'tm' 'struct tree_mod_elem *'
    | `-CompoundStmt 0x127808818 <col:11, line:21:2>
    |   |-BinaryOperator 0x127808790 <line:19:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1278086b8 <col:3> 'int' lvalue Var 0x126826c68 'ret' 'int'
    |   | `-UnaryOperator 0x127808778 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x127808760 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x127808740 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x127808800 <line:20:3, col:8> 'free_tms' 0x1278087b0
    |-BinaryOperator 0x127808918 <line:23:2, col:20> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x127808890 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x127808858 <col:2> 'struct tree_mod_elem *' contains-errors lvalue Var 0x1268269d8 'tm' 'struct tree_mod_elem *'
    | `-RecoveryExpr 0x1278088f0 <col:16, col:20> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1278088b8 <col:16> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    |-BinaryOperator 0x1278089b8 <line:24:2, col:13> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x127808970 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x127808938 <col:2> 'struct tree_mod_elem *' contains-errors lvalue Var 0x1268269d8 'tm' 'struct tree_mod_elem *'
    | `-DeclRefExpr 0x127808998 <col:13> 'int' lvalue ParmVar 0x12680e368 'src_slot' 'int'
    |-BinaryOperator 0x127808aa0 <line:25:2, col:22> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x127808a38 <col:2, col:11> '<dependent type>' contains-errors lvalue .dst_slot
    | | `-RecoveryExpr 0x127808a10 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1278089d8 <col:2> 'struct tree_mod_elem *' contains-errors lvalue Var 0x1268269d8 'tm' 'struct tree_mod_elem *'
    | `-DeclRefExpr 0x127808a80 <col:22> 'int' lvalue ParmVar 0x12680e2e8 'dst_slot' 'int'
    |-BinaryOperator 0x127808b88 <line:26:2, col:22> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x127808b20 <col:2, col:11> '<dependent type>' contains-errors lvalue .nr_items
    | | `-RecoveryExpr 0x127808af8 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x127808ac0 <col:2> 'struct tree_mod_elem *' contains-errors lvalue Var 0x1268269d8 'tm' 'struct tree_mod_elem *'
    | `-DeclRefExpr 0x127808b68 <col:22> 'int' lvalue ParmVar 0x126826600 'nr_items' 'int'
    |-BinaryOperator 0x127808c60 <line:27:2, col:11> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x127808be0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x127808ba8 <col:2> 'struct tree_mod_elem *' contains-errors lvalue Var 0x1268269d8 'tm' 'struct tree_mod_elem *'
    | `-RecoveryExpr 0x127808c40 <col:11> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x127809238 <line:29:2, line:36:2>
    | |-BinaryOperator 0x127808cc0 <line:29:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x127808c80 <col:7> 'int' lvalue Var 0x126826d20 'i' 'int'
    | | `-IntegerLiteral 0x127808ca0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x127808e58 <col:14, col:45> 'int' '&&'
    | | |-BinaryOperator 0x127808da8 <col:14, col:29> 'int' '<'
    | | | |-BinaryOperator 0x127808d50 <col:14, col:18> 'int' '+'
    | | | | |-ImplicitCastExpr 0x127808d20 <col:14> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x127808ce0 <col:14> 'int' lvalue Var 0x126826d20 'i' 'int'
    | | | | `-ImplicitCastExpr 0x127808d38 <col:18> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x127808d00 <col:18> 'int' lvalue ParmVar 0x12680e2e8 'dst_slot' 'int'
    | | | `-ImplicitCastExpr 0x127808d90 <col:29> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x127808d70 <col:29> 'int' lvalue ParmVar 0x12680e368 'src_slot' 'int'
    | | `-BinaryOperator 0x127808e38 <col:41, col:45> 'int' '<'
    | |   |-ImplicitCastExpr 0x127808e08 <col:41> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x127808dc8 <col:41> 'int' lvalue Var 0x126826d20 'i' 'int'
    | |   `-ImplicitCastExpr 0x127808e20 <col:45> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x127808de8 <col:45> 'int' lvalue ParmVar 0x126826600 'nr_items' 'int'
    | |-UnaryOperator 0x127808e98 <col:55, col:56> 'int' postfix '++'
    | | `-DeclRefExpr 0x127808e78 <col:55> 'int' lvalue Var 0x126826d20 'i' 'int'
    | `-CompoundStmt 0x127809220 <col:60, line:36:2>
    |   `-IfStmt 0x127809200 <line:32:3, line:35:3>
    |     |-UnaryOperator 0x127809198 <line:32:7, col:17> 'int' contains-errors prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x127809180 <col:8, col:17> 'struct tree_mod_elem *' contains-errors <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0x127809160 <col:8, col:17> 'struct tree_mod_elem *' contains-errors lvalue
    |     |     |-ImplicitCastExpr 0x127809130 <col:8> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |     |     | `-DeclRefExpr 0x1278090f0 <col:8> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    |     |     `-ImplicitCastExpr 0x127809148 <col:16> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x127809110 <col:16> 'int' lvalue Var 0x126826d20 'i' 'int'
    |     `-CompoundStmt 0x1278091e8 <col:20, line:35:3>
    |       `-GotoStmt 0x1278091d0 <line:34:4, col:9> 'free_tms' 0x1278087b0
    |-IfStmt 0x127809438 <line:38:2, line:39:8>
    | |-CallExpr 0x1278093f0 <line:38:6, col:39> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x127809350 <col:6> 'int ()' Function 0x127809298 'tree_mod_dont_log' 'int ()'
    | | |-RecoveryExpr 0x1278093a8 <col:24, col:28> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x127809370 <col:24> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    | | `-DeclRefExpr 0x1278093d0 <col:37> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    | `-GotoStmt 0x127809420 <line:39:3, col:8> 'free_tms' 0x1278087b0
    |-BinaryOperator 0x127809498 <line:40:2, col:11> 'int' '='
    | |-DeclRefExpr 0x127809458 <col:2> 'int' lvalue Var 0x126826db8 'locked' 'int'
    | `-IntegerLiteral 0x127809478 <col:11> 'int' 1
    |-ForStmt 0x1261231d8 <line:43:2, line:47:2>
    | |-BinaryOperator 0x1278094f8 <line:43:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x1278094b8 <col:7> 'int' lvalue Var 0x126826d20 'i' 'int'
    | | `-IntegerLiteral 0x1278094d8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x126122e90 <col:14, col:45> 'int' '&&'
    | | |-BinaryOperator 0x1278095e0 <col:14, col:29> 'int' '<'
    | | | |-BinaryOperator 0x127809588 <col:14, col:18> 'int' '+'
    | | | | |-ImplicitCastExpr 0x127809558 <col:14> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x127809518 <col:14> 'int' lvalue Var 0x126826d20 'i' 'int'
    | | | | `-ImplicitCastExpr 0x127809570 <col:18> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x127809538 <col:18> 'int' lvalue ParmVar 0x12680e2e8 'dst_slot' 'int'
    | | | `-ImplicitCastExpr 0x1278095c8 <col:29> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1278095a8 <col:29> 'int' lvalue ParmVar 0x12680e368 'src_slot' 'int'
    | | `-BinaryOperator 0x126122e70 <col:41, col:45> 'int' '<'
    | |   |-ImplicitCastExpr 0x126122e40 <col:41> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x126122e00 <col:41> 'int' lvalue Var 0x126826d20 'i' 'int'
    | |   `-ImplicitCastExpr 0x126122e58 <col:45> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x126122e20 <col:45> 'int' lvalue ParmVar 0x126826600 'nr_items' 'int'
    | |-UnaryOperator 0x126122ed0 <col:55, col:56> 'int' postfix '++'
    | | `-DeclRefExpr 0x126122eb0 <col:55> 'int' lvalue Var 0x126826d20 'i' 'int'
    | `-CompoundStmt 0x1261231b8 <col:60, line:47:2>
    |   |-BinaryOperator 0x126123128 <line:44:3, col:54> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x126122ee8 <col:3> 'int' lvalue Var 0x126826c68 'ret' 'int'
    |   | `-CallExpr 0x1261230f8 <col:9, col:54> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x126122fe8 <col:9> 'int ()' Function 0x126122f30 '__tree_mod_log_insert' 'int ()'
    |   |   |-RecoveryExpr 0x126123040 <col:31, col:35> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x126123008 <col:31> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    |   |   `-ArraySubscriptExpr 0x1261230d8 <col:44, col:53> 'struct tree_mod_elem *' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1261230a8 <col:44> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x126123068 <col:44> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    |   |     `-ImplicitCastExpr 0x1261230c0 <col:52> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x126123088 <col:52> 'int' lvalue Var 0x126826d20 'i' 'int'
    |   `-IfStmt 0x126123198 <line:45:3, line:46:9>
    |     |-ImplicitCastExpr 0x126123168 <line:45:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x126123148 <col:7> 'int' lvalue Var 0x126826c68 'ret' 'int'
    |     `-GotoStmt 0x126123180 <line:46:4, col:9> 'free_tms' 0x1278087b0
    |-BinaryOperator 0x126123300 <line:49:2, col:45> 'int' contains-errors '='
    | |-DeclRefExpr 0x126123210 <col:2> 'int' lvalue Var 0x126826c68 'ret' 'int'
    | `-CallExpr 0x1261232d0 <col:8, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126123230 <col:8> 'int ()' Function 0x126122f30 '__tree_mod_log_insert' 'int ()'
    |   |-RecoveryExpr 0x126123288 <col:30, col:34> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x126123250 <col:30> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    |   `-DeclRefExpr 0x1261232b0 <col:43> 'struct tree_mod_elem *' contains-errors lvalue Var 0x1268269d8 'tm' 'struct tree_mod_elem *'
    |-IfStmt 0x126123370 <line:50:2, line:51:8>
    | |-ImplicitCastExpr 0x126123340 <line:50:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x126123320 <col:6> 'int' lvalue Var 0x126826c68 'ret' 'int'
    | `-GotoStmt 0x126123358 <line:51:3, col:8> 'free_tms' 0x1278087b0
    |-CallExpr 0x126123550 <line:52:2, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x126123470 <col:2> 'int ()' Function 0x1261233b8 'write_unlock' 'int ()'
    | `-UnaryOperator 0x126123538 <col:15, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x1261234f0 <col:16, col:29> '<dependent type>' contains-errors lvalue ->tree_mod_log_lock
    |     `-RecoveryExpr 0x1261234c8 <col:16, col:20> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x126123490 <col:16> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    |-CallExpr 0x1261236e8 <line:53:2, col:15> 'int' contains-errors
    | |-ImplicitCastExpr 0x1261236d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x126123658 <col:2> 'int ()' Function 0x1261235a0 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x126123710 <col:8> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x126123678 <col:8> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    |-ReturnStmt 0x126123748 <line:55:2, col:9>
    | `-IntegerLiteral 0x126123728 <col:9> 'int' 0
    |-LabelStmt 0x126123fb0 <line:56:1, line:61:2> 'free_tms'
    | `-ForStmt 0x126123f78 <line:57:2, line:61:2>
    |   |-BinaryOperator 0x126123798 <line:57:7, col:11> 'int' '='
    |   | |-DeclRefExpr 0x126123758 <col:7> 'int' lvalue Var 0x126826d20 'i' 'int'
    |   | `-IntegerLiteral 0x126123778 <col:11> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x126123828 <col:14, col:18> 'int' '<'
    |   | |-ImplicitCastExpr 0x1261237f8 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1261237b8 <col:14> 'int' lvalue Var 0x126826d20 'i' 'int'
    |   | `-ImplicitCastExpr 0x126123810 <col:18> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1261237d8 <col:18> 'int' lvalue ParmVar 0x126826600 'nr_items' 'int'
    |   |-UnaryOperator 0x126123868 <col:28, col:29> 'int' postfix '++'
    |   | `-DeclRefExpr 0x126123848 <col:28> 'int' lvalue Var 0x126826d20 'i' 'int'
    |   `-CompoundStmt 0x126123f58 <col:33, line:61:2>
    |     |-IfStmt 0x126123e30 <line:58:3, line:59:58>
    |     | |-BinaryOperator 0x126123b38 <line:58:7, col:53> 'int' contains-errors '&&'
    |     | | |-ArraySubscriptExpr 0x1261238f0 <col:7, col:16> 'struct tree_mod_elem *' contains-errors lvalue
    |     | | | |-ImplicitCastExpr 0x1261238c0 <col:7> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x126123880 <col:7> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    |     | | | `-ImplicitCastExpr 0x1261238d8 <col:15> 'int' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x1261238a0 <col:15> 'int' lvalue Var 0x126826d20 'i' 'int'
    |     | | `-UnaryOperator 0x126123b20 <col:21, col:53> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | |   `-CallExpr 0x126123af8 <col:22, col:53> '<dependent type>' contains-errors
    |     | |     |-DeclRefExpr 0x1261239f0 <col:22> 'int ()' Function 0x126123938 'RB_EMPTY_NODE' 'int ()'
    |     | |     `-UnaryOperator 0x126123ae0 <col:36, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |       `-RecoveryExpr 0x126123ab8 <col:37, col:49> '<dependent type>' contains-errors lvalue
    |     | |         `-ArraySubscriptExpr 0x126123a80 <col:37, col:46> 'struct tree_mod_elem *' contains-errors lvalue
    |     | |           |-ImplicitCastExpr 0x126123a50 <col:37> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |     | |           | `-DeclRefExpr 0x126123a10 <col:37> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    |     | |           `-ImplicitCastExpr 0x126123a68 <col:45> 'int' <LValueToRValue>
    |     | |             `-DeclRefExpr 0x126123a30 <col:45> 'int' lvalue Var 0x126826d20 'i' 'int'
    |     | `-CallExpr 0x126123e00 <line:59:4, col:58> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x126123c38 <col:4> 'int ()' Function 0x126123b80 'rb_erase' 'int ()'
    |     |   |-UnaryOperator 0x126123d28 <col:13, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   | `-RecoveryExpr 0x126123d00 <col:14, col:26> '<dependent type>' contains-errors lvalue
    |     |   |   `-ArraySubscriptExpr 0x126123cc8 <col:14, col:23> 'struct tree_mod_elem *' contains-errors lvalue
    |     |   |     |-ImplicitCastExpr 0x126123c98 <col:14> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |     |   |     | `-DeclRefExpr 0x126123c58 <col:14> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    |     |   |     `-ImplicitCastExpr 0x126123cb0 <col:22> 'int' <LValueToRValue>
    |     |   |       `-DeclRefExpr 0x126123c78 <col:22> 'int' lvalue Var 0x126826d20 'i' 'int'
    |     |   `-UnaryOperator 0x126123de8 <col:32, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |     `-CXXDependentScopeMemberExpr 0x126123da0 <col:33, col:46> '<dependent type>' contains-errors lvalue ->tree_mod_log
    |     |       `-RecoveryExpr 0x126123d78 <col:33, col:37> '<dependent type>' contains-errors lvalue
    |     |         `-DeclRefExpr 0x126123d40 <col:33> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    |     `-CallExpr 0x126123f18 <line:60:3, col:19> 'int' contains-errors
    |       |-ImplicitCastExpr 0x126123f00 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x126123e50 <col:3> 'int ()' Function 0x1261235a0 'kfree' 'int ()'
    |       `-ImplicitCastExpr 0x126123f40 <col:9, col:18> 'struct tree_mod_elem *' contains-errors <LValueToRValue>
    |         `-ArraySubscriptExpr 0x126123ee0 <col:9, col:18> 'struct tree_mod_elem *' contains-errors lvalue
    |           |-ImplicitCastExpr 0x126123eb0 <col:9> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |           | `-DeclRefExpr 0x126123e70 <col:9> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    |           `-ImplicitCastExpr 0x126123ec8 <col:17> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x126123e90 <col:17> 'int' lvalue Var 0x126826d20 'i' 'int'
    |-IfStmt 0x126124110 <line:62:2, line:63:47>
    | |-ImplicitCastExpr 0x126123ff0 <line:62:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x126123fd0 <col:6> 'int' lvalue Var 0x126826db8 'locked' 'int'
    | `-CallExpr 0x1261240e8 <line:63:3, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126124008 <col:3> 'int ()' Function 0x1261233b8 'write_unlock' 'int ()'
    |   `-UnaryOperator 0x1261240d0 <col:16, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x126124088 <col:17, col:30> '<dependent type>' contains-errors lvalue ->tree_mod_log_lock
    |       `-RecoveryExpr 0x126124060 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x126124028 <col:17> 'struct extent_buffer *' lvalue ParmVar 0x12680e268 'eb' 'struct extent_buffer *'
    |-CallExpr 0x126124188 <line:64:2, col:15> 'int' contains-errors
    | |-ImplicitCastExpr 0x126124170 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x126124130 <col:2> 'int ()' Function 0x1261235a0 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x1261241b0 <col:8> 'struct tree_mod_elem **' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x126124150 <col:8> 'struct tree_mod_elem **' contains-errors lvalue Var 0x126826b98 'tm_list' 'struct tree_mod_elem **'
    |-CallExpr 0x126124220 <line:65:2, col:10> 'int' contains-errors
    | |-ImplicitCastExpr 0x126124208 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1261241c8 <col:2> 'int ()' Function 0x1261235a0 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x126124248 <col:8> 'struct tree_mod_elem *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x1261241e8 <col:8> 'struct tree_mod_elem *' contains-errors lvalue Var 0x1268269d8 'tm' 'struct tree_mod_elem *'
    `-ReturnStmt 0x126124298 <line:67:2, col:9>
      `-ImplicitCastExpr 0x126124280 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x126124260 <col:9> 'int' lvalue Var 0x126826c68 'ret' 'int'
