TranslationUnitDecl 0x121055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1210564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x121055bd0 '__int128'
|-TypedefDecl 0x121056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x121055bf0 'unsigned __int128'
|-TypedefDecl 0x121126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x121126000 'struct __NSConstantString_tag'
|   `-Record 0x121056580 '__NSConstantString_tag'
|-TypedefDecl 0x121126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x121055d90 '__SVInt8_t'
|-TypedefDecl 0x121126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x121055db0 '__SVInt16_t'
|-TypedefDecl 0x121126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x121055dd0 '__SVInt32_t'
|-TypedefDecl 0x1211263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x121055df0 '__SVInt64_t'
|-TypedefDecl 0x121126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x121055e10 '__SVUint8_t'
|-TypedefDecl 0x1211264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x121055e30 '__SVUint16_t'
|-TypedefDecl 0x121126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x121055e50 '__SVUint32_t'
|-TypedefDecl 0x121126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x121055e70 '__SVUint64_t'
|-TypedefDecl 0x1211265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x121055e90 '__SVFloat16_t'
|-TypedefDecl 0x121126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x121055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1211266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x121055ed0 '__SVFloat64_t'
|-TypedefDecl 0x121126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x121055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x121126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x121055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1211267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x121055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x121126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x121055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1211268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x121055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x121126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x121055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x121126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x121055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1211269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x121055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x121126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x121055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x121126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x121056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x121126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x121056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x121126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x121056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x121126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x121056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x121126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x121056090 '__clang_svint8x3_t'
|-TypedefDecl 0x121126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1210560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x121126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1210560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x121126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1210560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x121126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x121056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x121126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x121056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x121126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x121056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x121126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x121056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x121126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x121056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x121127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1210561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x121127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1210561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1211278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1210561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x121127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x121056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1211279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x121056230 '__clang_svint16x4_t'
|-TypedefDecl 0x121127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x121056250 '__clang_svint32x4_t'
|-TypedefDecl 0x121127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x121056270 '__clang_svint64x4_t'
|-TypedefDecl 0x121127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x121056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x121127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1210562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x121127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1210562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x121127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1210562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x121127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x121056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x121127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x121056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x121127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x121056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x121127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x121056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x121127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x121056390 '__SVBool_t'
|-TypedefDecl 0x121127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1210563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x121127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1210563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x121127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1210563f0 '__SVCount_t'
|-TypedefDecl 0x121127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x121127fb0 'char *'
|   `-BuiltinType 0x1210556b0 'char'
|-TypedefDecl 0x121128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x121127fb0 'char *'
|   `-BuiltinType 0x1210556b0 'char'
`-FunctionDecl 0x121808658 <dataset_diviso_filec/func18183_vuln.c:1:1, line:29:1> line:1:12 af9005_identify_state 'int (struct usb_device *, struct dvb_usb_device_properties *, struct dvb_usb_device_description **, int *)' static
  |-ParmVarDecl 0x121128648 <col:34, col:53> col:53 used udev 'struct usb_device *'
  |-ParmVarDecl 0x121808228 <line:2:6, col:40> col:40 props 'struct dvb_usb_device_properties *'
  |-ParmVarDecl 0x121808458 <line:3:6, col:42> col:42 desc 'struct dvb_usb_device_description **'
  |-ParmVarDecl 0x121808508 <line:4:6, col:11> col:11 used cold 'int *'
  `-CompoundStmt 0x122809208 <line:5:1, line:29:1>
    |-DeclStmt 0x1218087e8 <line:6:2, col:9>
    | `-VarDecl 0x121808780 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x121808b30 <line:10:2, line:11:11>
    | |-UnaryOperator 0x121808a70 <line:10:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x121808a58 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x121808a38 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x121808b20 <line:11:3, col:11>
    |   `-UnaryOperator 0x121808b08 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x121808af0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x121808ad0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x121808eb0 <line:13:2, line:14:30> 'int' contains-errors '='
    | |-DeclRefExpr 0x121808b50 <line:13:2> 'int' lvalue Var 0x121808780 'ret' 'int'
    | `-CallExpr 0x121808e68 <col:8, line:14:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x121808c50 <line:13:8> 'int ()' Function 0x121808b98 'af9005_boot_packet' 'int ()'
    |   |-DeclRefExpr 0x121808c70 <col:27> 'struct usb_device *' lvalue ParmVar 0x121128648 'udev' 'struct usb_device *'
    |   |-RecoveryExpr 0x121808db0 <col:33> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x121808df0 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x121808dd0 <col:45> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x121808e08 <line:14:6> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x121808e48 <col:11, col:29> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x121808e28 <col:11> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x121808d08 <col:29> 'int' 2
    |-IfStmt 0x121808f70 <line:15:2, line:16:8>
    | |-ImplicitCastExpr 0x121808ef0 <line:15:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x121808ed0 <col:6> 'int' lvalue Var 0x121808780 'ret' 'int'
    | `-GotoStmt 0x121808f58 <line:16:3, col:8> 'err' 0x121808f08
    |-CallExpr 0x121809158 <line:17:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x121809070 <col:2> 'int ()' Function 0x121808fb8 'deb_info' 'int ()'
    | |-StringLiteral 0x1218090d0 <col:11> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x121809138 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x122808eb0 <line:18:2, line:23:11> has_else
    | |-BinaryOperator 0x122808c00 <line:18:6, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1218091e0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1218091a0 <col:15> 'int' 1
    | |-BinaryOperator 0x122808c90 <line:19:3, col:11> 'int' '='
    | | |-UnaryOperator 0x122808c58 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x122808c40 <col:4> 'int *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x122808c20 <col:4> 'int *' lvalue ParmVar 0x121808508 'cold' 'int *'
    | | `-IntegerLiteral 0x122808c70 <col:11> 'int' 1
    | `-IfStmt 0x122808e80 <line:20:7, line:23:11> has_else
    |   |-BinaryOperator 0x122808d28 <line:20:11, col:20> 'int' contains-errors '=='
    |   | |-RecoveryExpr 0x122808d08 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x122808cc8 <col:20> 'int' 2
    |   |-BinaryOperator 0x122808db8 <line:21:3, col:11> 'int' '='
    |   | |-UnaryOperator 0x122808d80 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x122808d68 <col:4> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x122808d48 <col:4> 'int *' lvalue ParmVar 0x121808508 'cold' 'int *'
    |   | `-IntegerLiteral 0x122808d98 <col:11> 'int' 0
    |   `-ReturnStmt 0x122808e70 <line:23:3, col:11>
    |     `-UnaryOperator 0x122808e58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x122808e40 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x122808e20 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x122808fb8 <line:24:2, col:23> 'int'
    | |-ImplicitCastExpr 0x122808fa0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122808ee0 <col:2> 'int ()' Function 0x121808fb8 'deb_info' 'int ()'
    | |-ImplicitCastExpr 0x122808fe8 <col:11> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x122808f00 <col:11> 'char[4]' lvalue "STR"
    | `-ImplicitCastExpr 0x122809000 <col:18, col:19> 'int' <LValueToRValue>
    |   `-UnaryOperator 0x122808f58 <col:18, col:19> 'int' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x122808f40 <col:19> 'int *' <LValueToRValue>
    |       `-DeclRefExpr 0x122808f20 <col:19> 'int *' lvalue ParmVar 0x121808508 'cold' 'int *'
    |-LabelStmt 0x1228091a0 <line:26:1, line:27:11> 'err'
    | `-CallExpr 0x122809178 <col:2, col:11> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1228090f8 <col:2> 'int ()' Function 0x122809040 'kfree' 'int ()'
    |   `-RecoveryExpr 0x122809158 <col:8> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1228091f8 <line:28:2, col:9>
      `-ImplicitCastExpr 0x1228091e0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1228091c0 <col:9> 'int' lvalue Var 0x121808780 'ret' 'int'
