TranslationUnitDecl 0x141855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1418564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x141855bd0 '__int128'
|-TypedefDecl 0x141856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x141855bf0 'unsigned __int128'
|-TypedefDecl 0x14200be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14200bc00 'struct __NSConstantString_tag'
|   `-Record 0x141856580 '__NSConstantString_tag'
|-TypedefDecl 0x14200be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x141855d90 '__SVInt8_t'
|-TypedefDecl 0x14200bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x141855db0 '__SVInt16_t'
|-TypedefDecl 0x14200bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x141855dd0 '__SVInt32_t'
|-TypedefDecl 0x14200bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x141855df0 '__SVInt64_t'
|-TypedefDecl 0x14200c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x141855e10 '__SVUint8_t'
|-TypedefDecl 0x14200c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x141855e30 '__SVUint16_t'
|-TypedefDecl 0x14200c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x141855e50 '__SVUint32_t'
|-TypedefDecl 0x14200c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x141855e70 '__SVUint64_t'
|-TypedefDecl 0x14200c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x141855e90 '__SVFloat16_t'
|-TypedefDecl 0x14200c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x141855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14200c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x141855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14200c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x141855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14200c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x141855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14200c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x141855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14200c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x141855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14200c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x141855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14200c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x141855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14200c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x141855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14200c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x141855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14200c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x141855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14200c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x141856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14200c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x141856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14200c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x141856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14200c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x141856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14200c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x141856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14200c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1418560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14200c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1418560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14200c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1418560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14200c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x141856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14200ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x141856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14200cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x141856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14200cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x141856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14200cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x141856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14200d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1418561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14200d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1418561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14200d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1418561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14200d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x141856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14200d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x141856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14200d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x141856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14200d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x141856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14200d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x141856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14200d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1418562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14200d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1418562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14200d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1418562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14200d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x141856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14200d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x141856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14200d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x141856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14200d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x141856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14200da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x141856390 '__SVBool_t'
|-TypedefDecl 0x14200da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1418563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14200dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1418563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14200db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1418563f0 '__SVCount_t'
|-TypedefDecl 0x14200dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14200dbb0 'char *'
|   `-BuiltinType 0x1418556b0 'char'
|-TypedefDecl 0x14200dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14200dbb0 'char *'
|   `-BuiltinType 0x1418556b0 'char'
`-FunctionDecl 0x14200de88 <dataset_diviso_filec/func5238_vuln.c:1:1, line:42:1> line:1:5 invalid hllMerge 'int (int *, int *)'
  |-ParmVarDecl 0x14200dd28 <col:14, col:23> col:23 referenced invalid max 'int *'
  |-ParmVarDecl 0x14200dda8 <col:28, col:34> col:34 invalid hll 'int *'
  `-CompoundStmt 0x143009ec0 <col:39, line:42:1>
    |-DeclStmt 0x14200e190 <line:2:5, col:34>
    | |-RecordDecl 0x14200df40 <col:5, col:12> col:12 struct hllhdr
    | `-VarDecl 0x14200e0a8 <col:5, col:31> col:20 used hdr 'struct hllhdr *' cinit
    |   `-CXXDependentScopeMemberExpr 0x14200e130 <col:26, col:31> '<dependent type>' contains-errors lvalue ->ptr
    |     `-RecoveryExpr 0x14200e110 <col:26> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14200e228 <line:3:5, col:10>
    | `-VarDecl 0x14200e1c0 <col:5, col:9> col:9 used i 'int'
    `-IfStmt 0x143009e90 <line:5:5, line:40:5> has_else
      |-BinaryOperator 0x142027f20 <line:5:9, col:26> 'int' contains-errors '=='
      | |-RecoveryExpr 0x142027ea0 <col:9, col:14> '<dependent type>' contains-errors lvalue
      | | `-DeclRefExpr 0x14200e240 <col:9> 'struct hllhdr *' contains-errors lvalue Var 0x14200e0a8 'hdr' 'struct hllhdr *'
      | `-RecoveryExpr 0x142027f00 <col:26> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x1420286b8 <col:37, line:12:5>
      | `-ForStmt 0x142028680 <line:8:9, line:11:9>
      |   |-BinaryOperator 0x142027f80 <line:8:14, col:18> 'int' '='
      |   | |-DeclRefExpr 0x142027f40 <col:14> 'int' lvalue Var 0x14200e1c0 'i' 'int'
      |   | `-IntegerLiteral 0x142027f60 <col:18> 'int' 0
      |   |-<<<NULL>>>
      |   |-BinaryOperator 0x142028018 <col:21, col:25> 'int' contains-errors '<'
      |   | |-DeclRefExpr 0x142027fa0 <col:21> 'int' lvalue Var 0x14200e1c0 'i' 'int'
      |   | `-RecoveryExpr 0x142027ff8 <col:25> '<dependent type>' contains-errors lvalue
      |   |-UnaryOperator 0x142028058 <col:40, col:41> 'int' postfix '++'
      |   | `-DeclRefExpr 0x142028038 <col:40> 'int' lvalue Var 0x14200e1c0 'i' 'int'
      |   `-CompoundStmt 0x142028660 <col:45, line:11:9>
      |     |-CallExpr 0x1420282e0 <line:9:13, col:56> '<dependent type>' contains-errors
      |     | |-DeclRefExpr 0x1420281d0 <col:13> 'int ()' Function 0x142028118 'HLL_DENSE_GET_REGISTER' 'int ()'
      |     | |-RecoveryExpr 0x1420282c0 <col:36> '<dependent type>' contains-errors lvalue
      |     | |-RecoveryExpr 0x142028240 <col:40, col:45> '<dependent type>' contains-errors lvalue
      |     | | `-DeclRefExpr 0x142028208 <col:40> 'struct hllhdr *' contains-errors lvalue Var 0x14200e0a8 'hdr' 'struct hllhdr *'
      |     | `-DeclRefExpr 0x142028268 <col:55> 'int' lvalue Var 0x14200e1c0 'i' 'int'
      |     `-IfStmt 0x142028640 <line:10:13, col:40>
      |       |-BinaryOperator 0x142028450 <col:17, col:28> 'int' contains-errors '>'
      |       | |-RecoveryExpr 0x1420283e0 <col:17> '<dependent type>' contains-errors lvalue
      |       | `-ArraySubscriptExpr 0x142028430 <col:23, col:28> '<dependent type>' contains-errors lvalue
      |       |   |-ImplicitCastExpr 0x142028400 <col:23> '<dependent type>' contains-errors <LValueToRValue>
      |       |   | `-RecoveryExpr 0x142028330 <col:23> '<dependent type>' contains-errors lvalue
      |       |   `-ImplicitCastExpr 0x142028418 <col:27> 'int' <LValueToRValue>
      |       |     `-DeclRefExpr 0x142028350 <col:27> 'int' lvalue Var 0x14200e1c0 'i' 'int'
      |       `-BinaryOperator 0x142028620 <col:31, col:40> '<dependent type>' contains-errors '='
      |         |-ArraySubscriptExpr 0x1420285e0 <col:31, col:36> '<dependent type>' contains-errors lvalue
      |         | |-ImplicitCastExpr 0x1420285b0 <col:31> '<dependent type>' contains-errors <LValueToRValue>
      |         | | `-RecoveryExpr 0x142028490 <col:31> '<dependent type>' contains-errors lvalue
      |         | |   `-DeclRefExpr 0x142028470 <col:31> 'int *' lvalue ParmVar 0x14200dd28 'max' 'int *'
      |         | `-ImplicitCastExpr 0x1420285c8 <col:35> 'int' <LValueToRValue>
      |         |   `-DeclRefExpr 0x1420284b8 <col:35> 'int' lvalue Var 0x14200e1c0 'i' 'int'
      |         `-RecoveryExpr 0x142028600 <col:40> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x143009e68 <line:12:12, line:40:5>
        |-DeclStmt 0x142028a98 <line:14:9, col:28>
        | |-VarDecl 0x142028998 <col:9, col:14> col:14 used runlen 'long'
        | `-VarDecl 0x142028a18 <col:9, col:22> col:22 used regval 'long'
        |-BinaryOperator 0x142028b08 <line:17:9, col:13> 'int' '='
        | |-DeclRefExpr 0x142028ac8 <col:9> 'int' lvalue Var 0x14200e1c0 'i' 'int'
        | `-IntegerLiteral 0x142028ae8 <col:13> 'int' 0
        `-WhileStmt 0x143009e08 <line:18:9, line:38:9>
          |-BinaryOperator 0x142028bb8 <line:18:15, col:19> 'int' contains-errors '<'
          | |-RecoveryExpr 0x142028b78 <col:15> '<dependent type>' contains-errors lvalue
          | `-RecoveryExpr 0x142028b98 <col:19> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x143009df0 <col:24, line:38:9>
            `-IfStmt 0x143009dc0 <line:19:13, line:37:13> has_else
              |-RecoveryExpr 0x1430092d8 <line:19:17, col:37> '_Bool' contains-errors
              |-CompoundStmt 0x1430094a0 <col:40, line:23:13>
              | `-CompoundAssignOperator 0x143009470 <line:21:17, col:22> 'int' '+=' ComputeLHSTy='long' ComputeResultTy='long'
              |   |-DeclRefExpr 0x143009418 <col:17> 'int' lvalue Var 0x14200e1c0 'i' 'int'
              |   `-ImplicitCastExpr 0x143009458 <col:22> 'long' <LValueToRValue>
              |     `-DeclRefExpr 0x143009438 <col:22> 'long' lvalue Var 0x142028998 'runlen' 'long'
              `-IfStmt 0x143009d90 <line:23:20, line:37:13> has_else
                |-RecoveryExpr 0x1430095b8 <line:23:24, col:45> '_Bool' contains-errors
                |-CompoundStmt 0x1430097a0 <col:48, line:27:13>
                | `-CompoundAssignOperator 0x143009750 <line:25:17, col:22> 'int' '+=' ComputeLHSTy='long' ComputeResultTy='long'
                |   |-DeclRefExpr 0x1430096f8 <col:17> 'int' lvalue Var 0x14200e1c0 'i' 'int'
                |   `-ImplicitCastExpr 0x143009738 <col:22> 'long' <LValueToRValue>
                |     `-DeclRefExpr 0x143009718 <col:22> 'long' lvalue Var 0x142028998 'runlen' 'long'
                `-CompoundStmt 0x143009d78 <line:27:20, line:37:13>
                  `-WhileStmt 0x143009d58 <line:32:17, line:35:17>
                    |-UnaryOperator 0x143009b00 <line:32:23, col:29> 'long' postfix '--'
                    | `-DeclRefExpr 0x143009ae0 <col:23> 'long' lvalue Var 0x142028998 'runlen' 'long'
                    `-CompoundStmt 0x143009d38 <col:33, line:35:17>
                      |-IfStmt 0x143009ce0 <line:33:21, col:51>
                      | |-BinaryOperator 0x143009bc8 <col:25, col:39> 'int' contains-errors '>'
                      | | |-DeclRefExpr 0x143009b18 <col:25> 'long' lvalue Var 0x142028a18 'regval' 'long'
                      | | `-ArraySubscriptExpr 0x143009ba8 <col:34, col:39> '<dependent type>' contains-errors lvalue
                      | |   |-ImplicitCastExpr 0x143009b78 <col:34> '<dependent type>' contains-errors <LValueToRValue>
                      | |   | `-RecoveryExpr 0x143009b38 <col:34> '<dependent type>' contains-errors lvalue
                      | |   `-ImplicitCastExpr 0x143009b90 <col:38> 'int' <LValueToRValue>
                      | |     `-DeclRefExpr 0x143009b58 <col:38> 'int' lvalue Var 0x14200e1c0 'i' 'int'
                      | `-BinaryOperator 0x143009cc0 <col:42, col:51> '<dependent type>' contains-errors '='
                      |   |-ArraySubscriptExpr 0x143009c80 <col:42, col:47> '<dependent type>' contains-errors lvalue
                      |   | |-ImplicitCastExpr 0x143009c50 <col:42> '<dependent type>' contains-errors <LValueToRValue>
                      |   | | `-RecoveryExpr 0x143009c08 <col:42> '<dependent type>' contains-errors lvalue
                      |   | |   `-DeclRefExpr 0x143009be8 <col:42> 'int *' lvalue ParmVar 0x14200dd28 'max' 'int *'
                      |   | `-ImplicitCastExpr 0x143009c68 <col:46> 'int' <LValueToRValue>
                      |   |   `-DeclRefExpr 0x143009c30 <col:46> 'int' lvalue Var 0x14200e1c0 'i' 'int'
                      |   `-DeclRefExpr 0x143009ca0 <col:51> 'long' lvalue Var 0x142028a18 'regval' 'long'
                      `-UnaryOperator 0x143009d20 <line:34:21, col:22> 'int' postfix '++'
                        `-DeclRefExpr 0x143009d00 <col:21> 'int' lvalue Var 0x14200e1c0 'i' 'int'
