TranslationUnitDecl 0x15b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b855bd0 '__int128'
|-TypedefDecl 0x15b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b855bf0 'unsigned __int128'
|-TypedefDecl 0x15b926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b926800 'struct __NSConstantString_tag'
|   `-Record 0x15b856580 '__NSConstantString_tag'
|-TypedefDecl 0x15b926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b855d90 '__SVInt8_t'
|-TypedefDecl 0x15b926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b855db0 '__SVInt16_t'
|-TypedefDecl 0x15b926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b855dd0 '__SVInt32_t'
|-TypedefDecl 0x15b926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b855df0 '__SVInt64_t'
|-TypedefDecl 0x15b926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b855e10 '__SVUint8_t'
|-TypedefDecl 0x15b926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b855e30 '__SVUint16_t'
|-TypedefDecl 0x15b926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b855e50 '__SVUint32_t'
|-TypedefDecl 0x15b926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b855e70 '__SVUint64_t'
|-TypedefDecl 0x15b926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b855e90 '__SVFloat16_t'
|-TypedefDecl 0x15b926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b856390 '__SVBool_t'
|-TypedefDecl 0x15b928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b8563f0 '__SVCount_t'
|-TypedefDecl 0x15b9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b9287b0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
|-TypedefDecl 0x15b928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b9287b0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
`-FunctionDecl 0x15b945608 <dataset_diviso_filec/func19623_nonvuln.c:1:1, line:64:1> line:1:12 invalid nci_activate_target 'int (struct nfc_dev *, struct nfc_target *, int)' static
  |-ParmVarDecl 0x15b928e48 <col:32, col:48> col:48 used nfc_dev 'struct nfc_dev *'
  |-ParmVarDecl 0x15b945428 <line:2:11, col:30> col:30 used target 'struct nfc_target *'
  |-ParmVarDecl 0x15b9454c0 <col:38, col:44> col:44 invalid protocol 'int'
  `-CompoundStmt 0x15b948858 <line:3:1, line:64:1>
    |-DeclStmt 0x15b945af8 <line:4:2, col:49>
    | |-RecordDecl 0x15b9456c8 <col:2, col:9> col:9 struct nci_dev
    | `-VarDecl 0x15b945838 <col:2, col:48> col:18 used ndev 'struct nci_dev *' cinit
    |   `-ImplicitCastExpr 0x15b945ac8 <col:25, col:48> 'struct nci_dev *' <IntegralToPointer>
    |     `-CallExpr 0x15b945a88 <col:25, col:48> 'int'
    |       |-ImplicitCastExpr 0x15b945a70 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x15b945a00 <col:25> 'int ()' Function 0x15b945948 'nfc_get_drvdata' 'int ()'
    |       `-ImplicitCastExpr 0x15b945ab0 <col:41> 'struct nfc_dev *' <LValueToRValue>
    |         `-DeclRefExpr 0x15b945a20 <col:41> 'struct nfc_dev *' lvalue ParmVar 0x15b928e48 'nfc_dev' 'struct nfc_dev *'
    |-DeclStmt 0x15b945c88 <line:5:2, col:43>
    | |-RecordDecl 0x15b945b10 <col:2, col:9> col:9 struct nci_rf_discover_select_param
    | `-VarDecl 0x15b945c08 <col:2, col:38> col:38 referenced invalid param 'struct nci_rf_discover_select_param'
    |-DeclStmt 0x15b945df8 <line:6:2, col:44>
    | `-VarDecl 0x15b945d58 <col:2, col:40> col:27 used nci_target 'const struct nfc_target *' cinit
    |   `-RecoveryExpr 0x15b945dd8 <col:40> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15b945e90 <line:7:2, col:7>
    | `-VarDecl 0x15b945e28 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x15b945f48 <line:8:2, col:12>
    | `-VarDecl 0x15b945ec0 <col:2, col:11> col:6 used rc 'int' cinit
    |   `-IntegerLiteral 0x15b945f28 <col:11> 'int' 0
    |-CallExpr 0x15b946140 <line:10:2, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15b946040 <col:2> 'int ()' Function 0x15b945f88 'pr_debug' 'int ()'
    | |-StringLiteral 0x15b9460a0 <col:11> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x15b9460f8 <col:18, col:26> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15b9460c0 <col:18> 'struct nfc_target *' lvalue ParmVar 0x15b945428 'target' 'struct nfc_target *'
    | `-RecoveryExpr 0x15b946120 <col:31> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15b9474c0 <line:12:2, line:16:2>
    | |-RecoveryExpr 0x15b947260 <line:12:6, line:13:51> '_Bool' contains-errors
    | `-CompoundStmt 0x15b9474a0 <col:54, line:16:2>
    |   |-CallExpr 0x15b9473b8 <line:14:3, col:15> 'int'
    |   | |-ImplicitCastExpr 0x15b9473a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15b947360 <col:3> 'int ()' Function 0x15b9472a8 'pr_err' 'int ()'
    |   | `-ImplicitCastExpr 0x15b9473e0 <col:10> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x15b947380 <col:10> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x15b947490 <line:15:3, col:11>
    |     `-UnaryOperator 0x15b947478 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x15b947460 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x15b947440 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15b9476a0 <line:18:2, line:21:2>
    | |-RecoveryExpr 0x15b947518 <line:18:6, col:12> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15b9474e0 <col:6> 'struct nci_dev *' lvalue Var 0x15b945838 'ndev' 'struct nci_dev *'
    | `-CompoundStmt 0x15b947680 <col:32, line:21:2>
    |   |-CallExpr 0x15b947598 <line:19:3, col:15> 'int'
    |   | |-ImplicitCastExpr 0x15b947580 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15b947540 <col:3> 'int ()' Function 0x15b9472a8 'pr_err' 'int ()'
    |   | `-ImplicitCastExpr 0x15b9475c0 <col:10> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x15b947560 <col:10> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x15b947670 <line:20:3, col:11>
    |     `-UnaryOperator 0x15b947658 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x15b947640 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x15b947620 <col:11> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x15b947b18 <line:23:2, line:28:2>
    | |-BinaryOperator 0x15b947700 <line:23:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x15b9476c0 <col:7> 'int' lvalue Var 0x15b945e28 'i' 'int'
    | | `-IntegerLiteral 0x15b9476e0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15b9477a0 <col:14, col:24> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x15b947720 <col:14> 'int' lvalue Var 0x15b945e28 'i' 'int'
    | | `-RecoveryExpr 0x15b947778 <col:18, col:24> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15b947740 <col:18> 'struct nci_dev *' lvalue Var 0x15b945838 'ndev' 'struct nci_dev *'
    | |-UnaryOperator 0x15b9477e0 <col:35, col:36> 'int' postfix '++'
    | | `-DeclRefExpr 0x15b9477c0 <col:35> 'int' lvalue Var 0x15b945e28 'i' 'int'
    | `-CompoundStmt 0x15b947b00 <col:40, line:28:2>
    |   `-IfStmt 0x15b947ae0 <line:24:3, line:27:3>
    |     |-BinaryOperator 0x15b947970 <line:24:7, col:39> 'int' contains-errors '=='
    |     | |-CXXDependentScopeMemberExpr 0x15b9478c8 <col:7, col:24> '<dependent type>' contains-errors lvalue .idx
    |     | | `-ArraySubscriptExpr 0x15b9478a8 <col:7, col:22> '<dependent type>' contains-errors lvalue
    |     | |   |-ImplicitCastExpr 0x15b947878 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   | `-RecoveryExpr 0x15b947830 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |     | |   |   `-DeclRefExpr 0x15b9477f8 <col:7> 'struct nci_dev *' lvalue Var 0x15b945838 'ndev' 'struct nci_dev *'
    |     | |   `-ImplicitCastExpr 0x15b947890 <col:21> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x15b947858 <col:21> 'int' lvalue Var 0x15b945e28 'i' 'int'
    |     | `-RecoveryExpr 0x15b947948 <col:31, col:39> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x15b947910 <col:31> 'struct nfc_target *' lvalue ParmVar 0x15b945428 'target' 'struct nfc_target *'
    |     `-CompoundStmt 0x15b947ac0 <col:44, line:27:3>
    |       |-BinaryOperator 0x15b947a98 <line:25:4, col:33> 'const struct nfc_target *' contains-errors '='
    |       | |-DeclRefExpr 0x15b947990 <col:4> 'const struct nfc_target *' contains-errors lvalue Var 0x15b945d58 'nci_target' 'const struct nfc_target *'
    |       | `-UnaryOperator 0x15b947a80 <col:17, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       |   `-ArraySubscriptExpr 0x15b947a60 <col:18, col:33> '<dependent type>' contains-errors lvalue
    |       |     |-ImplicitCastExpr 0x15b947a30 <col:18, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |       |     | `-RecoveryExpr 0x15b9479e8 <col:18, col:24> '<dependent type>' contains-errors lvalue
    |       |     |   `-DeclRefExpr 0x15b9479b0 <col:18> 'struct nci_dev *' lvalue Var 0x15b945838 'ndev' 'struct nci_dev *'
    |       |     `-ImplicitCastExpr 0x15b947a48 <col:32> 'int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x15b947a10 <col:32> 'int' lvalue Var 0x15b945e28 'i' 'int'
    |       `-BreakStmt 0x15b947ab8 <line:26:4>
    |-IfStmt 0x15b947c50 <line:30:2, line:33:2>
    | |-UnaryOperator 0x15b947b88 <line:30:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15b947b70 <col:7> 'const struct nfc_target *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x15b947b50 <col:7> 'const struct nfc_target *' contains-errors lvalue Var 0x15b945d58 'nci_target' 'const struct nfc_target *'
    | `-CompoundStmt 0x15b947c38 <col:19, line:33:2>
    |   `-CallExpr 0x15b947bf8 <line:31:3, col:15> 'int'
    |     |-ImplicitCastExpr 0x15b947be0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b947ba0 <col:3> 'int ()' Function 0x15b9472a8 'pr_err' 'int ()'
    |     `-ImplicitCastExpr 0x15b947c20 <col:10> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x15b947bc0 <col:10> 'char[4]' lvalue "STR"
    |-IfStmt 0x15b947e50 <line:35:2, line:39:2>
    | |-UnaryOperator 0x15b947d90 <line:35:6, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ParenExpr 0x15b947d70 <col:7, col:57> '<dependent type>' contains-errors
    | |   `-BinaryOperator 0x15b947d50 <col:8, col:56> '<dependent type>' contains-errors '&'
    | |     |-RecoveryExpr 0x15b947ca8 <col:8, col:20> '<dependent type>' contains-errors lvalue
    | |     | `-DeclRefExpr 0x15b947c70 <col:8> 'const struct nfc_target *' contains-errors lvalue Var 0x15b945d58 'nci_target' 'const struct nfc_target *'
    | |     `-ParenExpr 0x15b947d30 <col:42, col:56> '<dependent type>' contains-errors
    | |       `-BinaryOperator 0x15b947d10 <col:43, col:48> '<dependent type>' contains-errors '<<'
    | |         |-IntegerLiteral 0x15b947cd0 <col:43> 'int' 1
    | |         `-RecoveryExpr 0x15b947cf0 <col:48> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15b947e38 <col:60, line:39:2>
    |   `-CallExpr 0x15b947e08 <line:36:3, line:37:18> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15b947da8 <line:36:3> 'int ()' Function 0x15b9472a8 'pr_err' 'int ()'
    |     |-StringLiteral 0x15b947dc8 <col:10> 'char[4]' lvalue "STR"
    |     `-RecoveryExpr 0x15b947de8 <line:37:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15b9486e0 <line:41:2, line:58:2>
    | |-RecoveryExpr 0x15b947f30 <line:41:6, col:35> '_Bool' contains-errors
    | `-CompoundStmt 0x15b9486c8 <col:55, line:58:2>
    |   `-BinaryOperator 0x15b948040 <line:42:3, col:39> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x15b947f98 <col:3, col:9> '<dependent type>' contains-errors lvalue .rf_discovery_id
    |     | `-RecoveryExpr 0x15b947f70 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x15b947f50 <col:3> 'struct nci_rf_discover_select_param' lvalue Var 0x15b945c08 'param' 'struct nci_rf_discover_select_param'
    |     `-RecoveryExpr 0x15b948018 <col:27, col:39> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x15b947fe0 <col:27> 'const struct nfc_target *' contains-errors lvalue Var 0x15b945d58 'nci_target' 'const struct nfc_target *'
    |-IfStmt 0x15b9487f0 <line:60:2, line:61:30>
    | |-UnaryOperator 0x15b948738 <line:60:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15b948720 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15b948700 <col:7> 'int' lvalue Var 0x15b945ec0 'rc' 'int'
    | `-BinaryOperator 0x15b9487d0 <line:61:3, col:30> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x15b948788 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x15b948750 <col:3> 'struct nci_dev *' lvalue Var 0x15b945838 'ndev' 'struct nci_dev *'
    |   `-RecoveryExpr 0x15b9487b0 <col:30> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x15b948848 <line:63:2, col:9>
      `-ImplicitCastExpr 0x15b948830 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15b948810 <col:9> 'int' lvalue Var 0x15b945ec0 'rc' 'int'
