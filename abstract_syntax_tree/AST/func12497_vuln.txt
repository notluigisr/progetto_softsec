TranslationUnitDecl 0x12984e408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12984f2b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12984e9d0 '__int128'
|-TypedefDecl 0x12984f328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12984e9f0 'unsigned __int128'
|-TypedefDecl 0x12991f030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12991ee00 'struct __NSConstantString_tag'
|   `-Record 0x12984f380 '__NSConstantString_tag'
|-TypedefDecl 0x12991f098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12984eb90 '__SVInt8_t'
|-TypedefDecl 0x12991f100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12984ebb0 '__SVInt16_t'
|-TypedefDecl 0x12991f168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12984ebd0 '__SVInt32_t'
|-TypedefDecl 0x12991f1d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12984ebf0 '__SVInt64_t'
|-TypedefDecl 0x12991f238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12984ec10 '__SVUint8_t'
|-TypedefDecl 0x12991f2a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12984ec30 '__SVUint16_t'
|-TypedefDecl 0x12991f308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12984ec50 '__SVUint32_t'
|-TypedefDecl 0x12991f370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12984ec70 '__SVUint64_t'
|-TypedefDecl 0x12991f3d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12984ec90 '__SVFloat16_t'
|-TypedefDecl 0x12991f440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12984ecb0 '__SVFloat32_t'
|-TypedefDecl 0x12991f4a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12984ecd0 '__SVFloat64_t'
|-TypedefDecl 0x12991f510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12984ecf0 '__SVBfloat16_t'
|-TypedefDecl 0x12991f578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12984ed10 '__clang_svint8x2_t'
|-TypedefDecl 0x12991f5e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12984ed30 '__clang_svint16x2_t'
|-TypedefDecl 0x12991f648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12984ed50 '__clang_svint32x2_t'
|-TypedefDecl 0x12991f6b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12984ed70 '__clang_svint64x2_t'
|-TypedefDecl 0x12991f718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12984ed90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12991f780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12984edb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12991f7e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12984edd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12991f850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12984edf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12991f8b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12984ee10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12991f920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12984ee30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12991f988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12984ee50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12991f9f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12984ee70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12991fa58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12984ee90 '__clang_svint8x3_t'
|-TypedefDecl 0x12991fac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12984eeb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12991fb28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12984eed0 '__clang_svint32x3_t'
|-TypedefDecl 0x12991fb90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12984eef0 '__clang_svint64x3_t'
|-TypedefDecl 0x12991fbf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12984ef10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12991fc60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12984ef30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12991fcc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12984ef50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12991fd30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12984ef70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12991fd98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12984ef90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x129920600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12984efb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x129920668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12984efd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1299206d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12984eff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x129920738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12984f010 '__clang_svint8x4_t'
|-TypedefDecl 0x1299207a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12984f030 '__clang_svint16x4_t'
|-TypedefDecl 0x129920808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12984f050 '__clang_svint32x4_t'
|-TypedefDecl 0x129920870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12984f070 '__clang_svint64x4_t'
|-TypedefDecl 0x1299208d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12984f090 '__clang_svuint8x4_t'
|-TypedefDecl 0x129920940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12984f0b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1299209a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12984f0d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x129920a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12984f0f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x129920a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12984f110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x129920ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12984f130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x129920b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12984f150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x129920bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12984f170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x129920c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12984f190 '__SVBool_t'
|-TypedefDecl 0x129920c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12984f1b0 '__clang_svboolx2_t'
|-TypedefDecl 0x129920ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12984f1d0 '__clang_svboolx4_t'
|-TypedefDecl 0x129920d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12984f1f0 '__SVCount_t'
|-TypedefDecl 0x129920df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x129920db0 'char *'
|   `-BuiltinType 0x12984e4b0 'char'
|-TypedefDecl 0x129920e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x129920db0 'char *'
|   `-BuiltinType 0x12984e4b0 'char'
|-FunctionDecl 0x1299210b8 <dataset_diviso_filec/func12497_vuln.c:1:1, line:48:1> line:1:19 invalid PHP_HAVAL160Final 'int (unsigned char *, int *)'
| |-ParmVarDecl 0x129920f28 <col:37, col:52> col:52 used digest 'unsigned char *'
| |-ParmVarDecl 0x129920fd8 <col:60, col:76> col:76 referenced invalid context 'int *'
| `-CompoundStmt 0x12800fa68 <line:2:1, line:48:1>
|   |-DeclStmt 0x129921280 <line:3:2, col:24>
|   | `-VarDecl 0x129921218 <col:2, col:23> col:16 used bits 'unsigned char[10]'
|   |-DeclStmt 0x1299213b0 <line:4:2, col:28>
|   | |-VarDecl 0x1299212b0 <col:2, col:15> col:15 used index 'unsigned int'
|   | `-VarDecl 0x129921330 <col:2, col:22> col:22 used padLen 'unsigned int'
|   |-BinaryOperator 0x128809a48 <line:10:2, col:33> 'unsigned char' contains-errors '='
|   | |-ArraySubscriptExpr 0x128809960 <col:2, col:8> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x128809948 <col:2> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x128809908 <col:2> 'unsigned char[10]' lvalue Var 0x129921218 'bits' 'unsigned char[10]'
|   | | `-IntegerLiteral 0x128809928 <col:7> 'int' 1
|   | `-ParenExpr 0x128809a28 <col:12, col:33> '<dependent type>' contains-errors
|   |   `-BinaryOperator 0x128809a08 <col:13, col:32> '<dependent type>' contains-errors '>>'
|   |     |-CXXDependentScopeMemberExpr 0x1288099a0 <col:13, col:22> '<dependent type>' contains-errors lvalue ->output
|   |     | `-RecoveryExpr 0x128809980 <col:13> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x1288099e8 <col:32> 'int' 2
|   |-CallExpr 0x128809ce0 <line:13:2, col:36> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128809bc0 <col:2> 'int ()' Function 0x128809b08 'Encode' 'int ()'
|   | |-BinaryOperator 0x128809c38 <col:9, col:16> 'unsigned char *' '+'
|   | | |-ImplicitCastExpr 0x128809c20 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x128809be0 <col:9> 'unsigned char[10]' lvalue Var 0x129921218 'bits' 'unsigned char[10]'
|   | | `-IntegerLiteral 0x128809c00 <col:16> 'int' 2
|   | |-CXXDependentScopeMemberExpr 0x128809c78 <col:19, col:28> '<dependent type>' contains-errors lvalue ->count
|   | | `-RecoveryExpr 0x128809c58 <col:19> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x128809cc0 <col:35> 'int' 8
|   |-BinaryOperator 0x128809f18 <line:16:2, col:57> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x128809d18 <col:2> 'unsigned int' lvalue Var 0x1299212b0 'index' 'unsigned int'
|   | `-CStyleCastExpr 0x128809ef0 <col:10, col:57> 'unsigned int' contains-errors <Dependent>
|   |   `-ParenExpr 0x128809ed0 <col:25, col:57> '<dependent type>' contains-errors
|   |     `-BinaryOperator 0x128809e78 <col:26, col:53> '<dependent type>' contains-errors '&'
|   |       |-ParenExpr 0x128809e38 <col:26, col:49> '<dependent type>' contains-errors
|   |       | `-BinaryOperator 0x128809e18 <col:27, col:48> '<dependent type>' contains-errors '>>'
|   |       |   |-ArraySubscriptExpr 0x128809dd8 <col:27, col:43> '<dependent type>' contains-errors lvalue
|   |       |   | |-ImplicitCastExpr 0x128809dc0 <col:27, col:36> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   | | `-CXXDependentScopeMemberExpr 0x128809d58 <col:27, col:36> '<dependent type>' contains-errors lvalue ->count
|   |       |   | |   `-RecoveryExpr 0x128809d38 <col:27> '<dependent type>' contains-errors lvalue
|   |       |   | `-IntegerLiteral 0x128809da0 <col:42> 'int' 0
|   |       |   `-IntegerLiteral 0x128809df8 <col:48> 'int' 3
|   |       `-IntegerLiteral 0x128809e58 <col:53> 'int' 63
|   |-BinaryOperator 0x12880a198 <line:17:2, col:55> 'unsigned int' '='
|   | |-DeclRefExpr 0x128809f38 <col:2> 'unsigned int' lvalue Var 0x129921330 'padLen' 'unsigned int'
|   | `-ConditionalOperator 0x12880a168 <col:11, col:55> 'unsigned int'
|   |   |-ParenExpr 0x128809fe8 <col:11, col:23> 'int'
|   |   | `-BinaryOperator 0x128809fc8 <col:12, col:20> 'int' '<'
|   |   |   |-ImplicitCastExpr 0x128809f98 <col:12> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x128809f58 <col:12> 'unsigned int' lvalue Var 0x1299212b0 'index' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x128809fb0 <col:20> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x128809f78 <col:20> 'int' 118
|   |   |-ParenExpr 0x12880a098 <col:27, col:39> 'unsigned int'
|   |   | `-BinaryOperator 0x12880a078 <col:28, col:34> 'unsigned int' '-'
|   |   |   |-ImplicitCastExpr 0x12880a060 <col:28> 'unsigned int' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x12880a008 <col:28> 'int' 118
|   |   |   `-ImplicitCastExpr 0x12880a048 <col:34> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12880a028 <col:34> 'unsigned int' lvalue Var 0x1299212b0 'index' 'unsigned int'
|   |   `-ParenExpr 0x12880a148 <col:43, col:55> 'unsigned int'
|   |     `-BinaryOperator 0x12880a128 <col:44, col:50> 'unsigned int' '-'
|   |       |-ImplicitCastExpr 0x12880a110 <col:44> 'unsigned int' <IntegralCast>
|   |       | `-IntegerLiteral 0x12880a0b8 <col:44> 'int' 246
|   |       `-ImplicitCastExpr 0x12880a0f8 <col:50> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x12880a0d8 <col:50> 'unsigned int' lvalue Var 0x1299212b0 'index' 'unsigned int'
|   |-CallExpr 0x12880a368 <line:18:2, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12880a298 <col:2> 'int ()' Function 0x12880a1e0 'PHP_HAVALUpdate' 'int ()'
|   | |-RecoveryExpr 0x12880a2b8 <col:18> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x12880a348 <col:27> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x12880a2f0 <col:36> 'unsigned int' lvalue Var 0x129921330 'padLen' 'unsigned int'
|   |-CallExpr 0x12880a420 <line:21:2, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12880a3a0 <col:2> 'int ()' Function 0x12880a1e0 'PHP_HAVALUpdate' 'int ()'
|   | |-RecoveryExpr 0x12880a3c0 <col:18> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x12880a3e0 <col:27> 'unsigned char[10]' lvalue Var 0x129921218 'bits' 'unsigned char[10]'
|   | `-IntegerLiteral 0x12880a400 <col:33> 'int' 10
|   |-CompoundAssignOperator 0x12800db80 <line:24:2, line:26:46> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x12880a520 <line:24:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x12880a508 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x12880a4a0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x12880a478 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12880a458 <col:2> 'int *' lvalue ParmVar 0x129920fd8 'context' 'int *'
|   | | `-IntegerLiteral 0x12880a4e8 <col:17> 'int' 4
|   | `-BinaryOperator 0x12800db60 <col:23, line:26:46> '<dependent type>' contains-errors '>>'
|   |   |-ParenExpr 0x12800db20 <line:24:23, line:26:41> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x12800db00 <line:24:24, line:26:40> '<dependent type>' contains-errors '|'
|   |   |   |-BinaryOperator 0x12880a780 <line:24:24, line:25:40> '<dependent type>' contains-errors '|'
|   |   |   | |-ParenExpr 0x12880a640 <line:24:24, col:55> '<dependent type>' contains-errors
|   |   |   | | `-BinaryOperator 0x12880a620 <col:25, col:45> '<dependent type>' contains-errors '&'
|   |   |   | |   |-ArraySubscriptExpr 0x12880a5e0 <col:25, col:41> '<dependent type>' contains-errors lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x12880a5c8 <col:25, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | |   | | `-CXXDependentScopeMemberExpr 0x12880a560 <col:25, col:34> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   | |   `-RecoveryExpr 0x12880a540 <col:25> '<dependent type>' contains-errors lvalue
|   |   |   | |   | `-IntegerLiteral 0x12880a5a8 <col:40> 'int' 7
|   |   |   | |   `-IntegerLiteral 0x12880a600 <col:45> 'unsigned int' 4261412864
|   |   |   | `-ParenExpr 0x12880a760 <line:25:9, col:40> '<dependent type>' contains-errors
|   |   |   |   `-BinaryOperator 0x12880a740 <col:10, col:30> '<dependent type>' contains-errors '&'
|   |   |   |     |-ArraySubscriptExpr 0x12880a700 <col:10, col:26> '<dependent type>' contains-errors lvalue
|   |   |   |     | |-ImplicitCastExpr 0x12880a6e8 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     | | `-CXXDependentScopeMemberExpr 0x12880a680 <col:10, col:19> '<dependent type>' contains-errors lvalue ->state
|   |   |   |     | |   `-RecoveryExpr 0x12880a660 <col:10> '<dependent type>' contains-errors lvalue
|   |   |   |     | `-IntegerLiteral 0x12880a6c8 <col:25> 'int' 6
|   |   |   |     `-IntegerLiteral 0x12880a720 <col:30> 'int' 33030144
|   |   |   `-ParenExpr 0x12800dae0 <line:26:9, col:40> '<dependent type>' contains-errors
|   |   |     `-BinaryOperator 0x12800dac0 <col:10, col:30> '<dependent type>' contains-errors '&'
|   |   |       |-ArraySubscriptExpr 0x12800da80 <col:10, col:26> '<dependent type>' contains-errors lvalue
|   |   |       | |-ImplicitCastExpr 0x12800da68 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | | `-CXXDependentScopeMemberExpr 0x12800da00 <col:10, col:19> '<dependent type>' contains-errors lvalue ->state
|   |   |       | |   `-RecoveryExpr 0x12880a7a0 <col:10> '<dependent type>' contains-errors lvalue
|   |   |       | `-IntegerLiteral 0x12800da48 <col:25> 'int' 5
|   |   |       `-IntegerLiteral 0x12800daa0 <col:30> 'int' 520192
|   |   `-IntegerLiteral 0x12800db40 <col:46> 'int' 12
|   |-CompoundAssignOperator 0x12800e098 <line:28:2, line:30:46> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x12800dc78 <line:28:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x12800dc60 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x12800dbf8 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x12800dbd0 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12800dbb0 <col:2> 'int *' lvalue ParmVar 0x129920fd8 'context' 'int *'
|   | | `-IntegerLiteral 0x12800dc40 <col:17> 'int' 3
|   | `-BinaryOperator 0x12800e078 <col:23, line:30:46> '<dependent type>' contains-errors '>>'
|   |   |-ParenExpr 0x12800e038 <line:28:23, line:30:41> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x12800e018 <line:28:24, line:30:40> '<dependent type>' contains-errors '|'
|   |   |   |-BinaryOperator 0x12800ded8 <line:28:24, line:29:40> '<dependent type>' contains-errors '|'
|   |   |   | |-ParenExpr 0x12800dd98 <line:28:24, col:55> '<dependent type>' contains-errors
|   |   |   | | `-BinaryOperator 0x12800dd78 <col:25, col:45> '<dependent type>' contains-errors '&'
|   |   |   | |   |-ArraySubscriptExpr 0x12800dd38 <col:25, col:41> '<dependent type>' contains-errors lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x12800dd20 <col:25, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | |   | | `-CXXDependentScopeMemberExpr 0x12800dcb8 <col:25, col:34> '<dependent type>' contains-errors lvalue ->state
|   |   |   | |   | |   `-RecoveryExpr 0x12800dc98 <col:25> '<dependent type>' contains-errors lvalue
|   |   |   | |   | `-IntegerLiteral 0x12800dd00 <col:40> 'int' 7
|   |   |   | |   `-IntegerLiteral 0x12800dd58 <col:45> 'int' 33030144
|   |   |   | `-ParenExpr 0x12800deb8 <line:29:9, col:40> '<dependent type>' contains-errors
|   |   |   |   `-BinaryOperator 0x12800de98 <col:10, col:30> '<dependent type>' contains-errors '&'
|   |   |   |     |-ArraySubscriptExpr 0x12800de58 <col:10, col:26> '<dependent type>' contains-errors lvalue
|   |   |   |     | |-ImplicitCastExpr 0x12800de40 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     | | `-CXXDependentScopeMemberExpr 0x12800ddd8 <col:10, col:19> '<dependent type>' contains-errors lvalue ->state
|   |   |   |     | |   `-RecoveryExpr 0x12800ddb8 <col:10> '<dependent type>' contains-errors lvalue
|   |   |   |     | `-IntegerLiteral 0x12800de20 <col:25> 'int' 6
|   |   |   |     `-IntegerLiteral 0x12800de78 <col:30> 'int' 520192
|   |   |   `-ParenExpr 0x12800dff8 <line:30:9, col:40> '<dependent type>' contains-errors
|   |   |     `-BinaryOperator 0x12800dfd8 <col:10, col:30> '<dependent type>' contains-errors '&'
|   |   |       |-ArraySubscriptExpr 0x12800df98 <col:10, col:26> '<dependent type>' contains-errors lvalue
|   |   |       | |-ImplicitCastExpr 0x12800df80 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | | `-CXXDependentScopeMemberExpr 0x12800df18 <col:10, col:19> '<dependent type>' contains-errors lvalue ->state
|   |   |       | |   `-RecoveryExpr 0x12800def8 <col:10> '<dependent type>' contains-errors lvalue
|   |   |       | `-IntegerLiteral 0x12800df60 <col:25> 'int' 5
|   |   |       `-IntegerLiteral 0x12800dfb8 <col:30> 'int' 4032
|   |   `-IntegerLiteral 0x12800e058 <col:46> 'int' 6
|   |-CompoundAssignOperator 0x12800e550 <line:32:2, line:34:40> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x12800e190 <line:32:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x12800e178 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x12800e110 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x12800e0e8 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12800e0c8 <col:2> 'int *' lvalue ParmVar 0x129920fd8 'context' 'int *'
|   | | `-IntegerLiteral 0x12800e158 <col:17> 'int' 2
|   | `-BinaryOperator 0x12800e530 <col:24, line:34:40> '<dependent type>' contains-errors '|'
|   |   |-BinaryOperator 0x12800e3f0 <line:32:24, line:33:40> '<dependent type>' contains-errors '|'
|   |   | |-ParenExpr 0x12800e2b0 <line:32:24, col:55> '<dependent type>' contains-errors
|   |   | | `-BinaryOperator 0x12800e290 <col:25, col:45> '<dependent type>' contains-errors '&'
|   |   | |   |-ArraySubscriptExpr 0x12800e250 <col:25, col:41> '<dependent type>' contains-errors lvalue
|   |   | |   | |-ImplicitCastExpr 0x12800e238 <col:25, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   | | `-CXXDependentScopeMemberExpr 0x12800e1d0 <col:25, col:34> '<dependent type>' contains-errors lvalue ->state
|   |   | |   | |   `-RecoveryExpr 0x12800e1b0 <col:25> '<dependent type>' contains-errors lvalue
|   |   | |   | `-IntegerLiteral 0x12800e218 <col:40> 'int' 7
|   |   | |   `-IntegerLiteral 0x12800e270 <col:45> 'int' 520192
|   |   | `-ParenExpr 0x12800e3d0 <line:33:9, col:40> '<dependent type>' contains-errors
|   |   |   `-BinaryOperator 0x12800e3b0 <col:10, col:30> '<dependent type>' contains-errors '&'
|   |   |     |-ArraySubscriptExpr 0x12800e370 <col:10, col:26> '<dependent type>' contains-errors lvalue
|   |   |     | |-ImplicitCastExpr 0x12800e358 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | | `-CXXDependentScopeMemberExpr 0x12800e2f0 <col:10, col:19> '<dependent type>' contains-errors lvalue ->state
|   |   |     | |   `-RecoveryExpr 0x12800e2d0 <col:10> '<dependent type>' contains-errors lvalue
|   |   |     | `-IntegerLiteral 0x12800e338 <col:25> 'int' 6
|   |   |     `-IntegerLiteral 0x12800e390 <col:30> 'int' 4032
|   |   `-ParenExpr 0x12800e510 <line:34:9, col:40> '<dependent type>' contains-errors
|   |     `-BinaryOperator 0x12800e4f0 <col:10, col:30> '<dependent type>' contains-errors '&'
|   |       |-ArraySubscriptExpr 0x12800e4b0 <col:10, col:26> '<dependent type>' contains-errors lvalue
|   |       | |-ImplicitCastExpr 0x12800e498 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |       | | `-CXXDependentScopeMemberExpr 0x12800e430 <col:10, col:19> '<dependent type>' contains-errors lvalue ->state
|   |       | |   `-RecoveryExpr 0x12800e410 <col:10> '<dependent type>' contains-errors lvalue
|   |       | `-IntegerLiteral 0x12800e478 <col:25> 'int' 5
|   |       `-IntegerLiteral 0x12800e4d0 <col:30> 'int' 63
|   |-CompoundAssignOperator 0x12800eb70 <line:36:2, line:38:46> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x12800e648 <line:36:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x12800e630 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x12800e5c8 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x12800e5a0 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12800e580 <col:2> 'int *' lvalue ParmVar 0x129920fd8 'context' 'int *'
|   | | `-IntegerLiteral 0x12800e610 <col:17> 'int' 1
|   | `-CallExpr 0x12800eb40 <col:23, line:38:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12800e748 <line:36:23> 'int ()' Function 0x12800e690 'ROTR' 'int ()'
|   |   |-BinaryOperator 0x12800eb00 <col:28, line:38:41> '<dependent type>' contains-errors '|'
|   |   | |-BinaryOperator 0x12800e9a8 <line:36:28, line:37:41> '<dependent type>' contains-errors '|'
|   |   | | |-ParenExpr 0x12800e868 <line:36:28, col:59> '<dependent type>' contains-errors
|   |   | | | `-BinaryOperator 0x12800e848 <col:29, col:49> '<dependent type>' contains-errors '&'
|   |   | | |   |-ArraySubscriptExpr 0x12800e808 <col:29, col:45> '<dependent type>' contains-errors lvalue
|   |   | | |   | |-ImplicitCastExpr 0x12800e7f0 <col:29, col:38> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   | | `-CXXDependentScopeMemberExpr 0x12800e788 <col:29, col:38> '<dependent type>' contains-errors lvalue ->state
|   |   | | |   | |   `-RecoveryExpr 0x12800e768 <col:29> '<dependent type>' contains-errors lvalue
|   |   | | |   | `-IntegerLiteral 0x12800e7d0 <col:44> 'int' 7
|   |   | | |   `-IntegerLiteral 0x12800e828 <col:49> 'int' 4032
|   |   | | `-ParenExpr 0x12800e988 <line:37:10, col:41> '<dependent type>' contains-errors
|   |   | |   `-BinaryOperator 0x12800e968 <col:11, col:31> '<dependent type>' contains-errors '&'
|   |   | |     |-ArraySubscriptExpr 0x12800e928 <col:11, col:27> '<dependent type>' contains-errors lvalue
|   |   | |     | |-ImplicitCastExpr 0x12800e910 <col:11, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     | | `-CXXDependentScopeMemberExpr 0x12800e8a8 <col:11, col:20> '<dependent type>' contains-errors lvalue ->state
|   |   | |     | |   `-RecoveryExpr 0x12800e888 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |     | `-IntegerLiteral 0x12800e8f0 <col:26> 'int' 6
|   |   | |     `-IntegerLiteral 0x12800e948 <col:31> 'int' 63
|   |   | `-ParenExpr 0x12800eae0 <line:38:10, col:41> '<dependent type>' contains-errors
|   |   |   `-BinaryOperator 0x12800eac0 <col:11, col:31> '<dependent type>' contains-errors '&'
|   |   |     |-ArraySubscriptExpr 0x12800ea80 <col:11, col:27> '<dependent type>' contains-errors lvalue
|   |   |     | |-ImplicitCastExpr 0x12800ea68 <col:11, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | | `-CXXDependentScopeMemberExpr 0x12800ea00 <col:11, col:20> '<dependent type>' contains-errors lvalue ->state
|   |   |     | |   `-RecoveryExpr 0x12800e9c8 <col:11> '<dependent type>' contains-errors lvalue
|   |   |     | `-IntegerLiteral 0x12800ea48 <col:26> 'int' 5
|   |   |     `-IntegerLiteral 0x12800eaa0 <col:31> 'unsigned int' 4261412864
|   |   `-IntegerLiteral 0x12800eb20 <col:44> 'int' 25
|   |-CompoundAssignOperator 0x12800f098 <line:40:2, line:42:46> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-ArraySubscriptExpr 0x12800ec68 <line:40:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x12800ec50 <col:2, col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x12800ebe8 <col:2, col:11> '<dependent type>' contains-errors lvalue ->state
|   | | |   `-RecoveryExpr 0x12800ebc0 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12800eba0 <col:2> 'int *' lvalue ParmVar 0x129920fd8 'context' 'int *'
|   | | `-IntegerLiteral 0x12800ec30 <col:17> 'int' 0
|   | `-CallExpr 0x12800f068 <col:23, line:42:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12800ec88 <line:40:23> 'int ()' Function 0x12800e690 'ROTR' 'int ()'
|   |   |-BinaryOperator 0x12800f028 <col:28, line:42:41> '<dependent type>' contains-errors '|'
|   |   | |-BinaryOperator 0x12800eee8 <line:40:28, line:41:41> '<dependent type>' contains-errors '|'
|   |   | | |-ParenExpr 0x12800eda8 <line:40:28, col:59> '<dependent type>' contains-errors
|   |   | | | `-BinaryOperator 0x12800ed88 <col:29, col:49> '<dependent type>' contains-errors '&'
|   |   | | |   |-ArraySubscriptExpr 0x12800ed48 <col:29, col:45> '<dependent type>' contains-errors lvalue
|   |   | | |   | |-ImplicitCastExpr 0x12800ed30 <col:29, col:38> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   | | `-CXXDependentScopeMemberExpr 0x12800ecc8 <col:29, col:38> '<dependent type>' contains-errors lvalue ->state
|   |   | | |   | |   `-RecoveryExpr 0x12800eca8 <col:29> '<dependent type>' contains-errors lvalue
|   |   | | |   | `-IntegerLiteral 0x12800ed10 <col:44> 'int' 7
|   |   | | |   `-IntegerLiteral 0x12800ed68 <col:49> 'int' 63
|   |   | | `-ParenExpr 0x12800eec8 <line:41:10, col:41> '<dependent type>' contains-errors
|   |   | |   `-BinaryOperator 0x12800eea8 <col:11, col:31> '<dependent type>' contains-errors '&'
|   |   | |     |-ArraySubscriptExpr 0x12800ee68 <col:11, col:27> '<dependent type>' contains-errors lvalue
|   |   | |     | |-ImplicitCastExpr 0x12800ee50 <col:11, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     | | `-CXXDependentScopeMemberExpr 0x12800ede8 <col:11, col:20> '<dependent type>' contains-errors lvalue ->state
|   |   | |     | |   `-RecoveryExpr 0x12800edc8 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |     | `-IntegerLiteral 0x12800ee30 <col:26> 'int' 6
|   |   | |     `-IntegerLiteral 0x12800ee88 <col:31> 'unsigned int' 4261412864
|   |   | `-ParenExpr 0x12800f008 <line:42:10, col:41> '<dependent type>' contains-errors
|   |   |   `-BinaryOperator 0x12800efe8 <col:11, col:31> '<dependent type>' contains-errors '&'
|   |   |     |-ArraySubscriptExpr 0x12800efa8 <col:11, col:27> '<dependent type>' contains-errors lvalue
|   |   |     | |-ImplicitCastExpr 0x12800ef90 <col:11, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | | `-CXXDependentScopeMemberExpr 0x12800ef28 <col:11, col:20> '<dependent type>' contains-errors lvalue ->state
|   |   |     | |   `-RecoveryExpr 0x12800ef08 <col:11> '<dependent type>' contains-errors lvalue
|   |   |     | `-IntegerLiteral 0x12800ef70 <col:26> 'int' 5
|   |   |     `-IntegerLiteral 0x12800efc8 <col:31> 'int' 33030144
|   |   `-IntegerLiteral 0x12800f048 <col:44> 'int' 19
|   |-CallExpr 0x12800f190 <line:44:2, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12800f0c8 <col:2> 'int ()' Function 0x128809b08 'Encode' 'int ()'
|   | |-DeclRefExpr 0x12800f0e8 <col:9> 'unsigned char *' lvalue ParmVar 0x129920f28 'digest' 'unsigned char *'
|   | |-CXXDependentScopeMemberExpr 0x12800f128 <col:17, col:26> '<dependent type>' contains-errors lvalue ->state
|   | | `-RecoveryExpr 0x12800f108 <col:17> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x12800f170 <col:33> 'int' 20
|   `-CallExpr 0x12800fa18 <line:47:2, col:54> 'void *' contains-errors
|     |-ImplicitCastExpr 0x12800fa00 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x12800f890 <col:2> 'void *(void *, int, unsigned long)' Function 0x12800f640 'memset' 'void *(void *, int, unsigned long)'
|     |-ImplicitCastExpr 0x12800fa50 <col:9, col:26> 'void *' contains-errors <BitCast>
|     | `-CStyleCastExpr 0x12800f8e8 <col:9, col:26> 'unsigned char *' contains-errors <Dependent>
|     |   `-RecoveryExpr 0x12800f8b0 <col:26> '<dependent type>' contains-errors lvalue
|     |-IntegerLiteral 0x12800f910 <col:35> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x12800f9a0 <col:38, col:53> 'unsigned long' contains-errors sizeof
|       `-ParenExpr 0x12800f980 <col:44, col:53> '<dependent type>' contains-errors
|         `-UnaryOperator 0x12800f968 <col:45, col:46> '<dependent type>' contains-errors prefix '*' cannot overflow
|           `-ImplicitCastExpr 0x12800f950 <col:46> '<dependent type>' contains-errors <LValueToRValue>
|             `-RecoveryExpr 0x12800f930 <col:46> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x12800f640 <col:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x12800f740 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12800f7a8 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x12800f810 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12800f6e8 <<invalid sloc>> Implicit 900
