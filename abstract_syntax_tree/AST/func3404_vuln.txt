TranslationUnitDecl 0x12c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c855bd0 '__int128'
|-TypedefDecl 0x12c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c855bf0 'unsigned __int128'
|-TypedefDecl 0x12c926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c926000 'struct __NSConstantString_tag'
|   `-Record 0x12c856580 '__NSConstantString_tag'
|-TypedefDecl 0x12c926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c855d90 '__SVInt8_t'
|-TypedefDecl 0x12c926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c855db0 '__SVInt16_t'
|-TypedefDecl 0x12c926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c855dd0 '__SVInt32_t'
|-TypedefDecl 0x12c9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c855df0 '__SVInt64_t'
|-TypedefDecl 0x12c926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c855e10 '__SVUint8_t'
|-TypedefDecl 0x12c9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c855e30 '__SVUint16_t'
|-TypedefDecl 0x12c926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c855e50 '__SVUint32_t'
|-TypedefDecl 0x12c926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c855e70 '__SVUint64_t'
|-TypedefDecl 0x12c9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c855e90 '__SVFloat16_t'
|-TypedefDecl 0x12c926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c856390 '__SVBool_t'
|-TypedefDecl 0x12c927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c8563f0 '__SVCount_t'
|-TypedefDecl 0x12c927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c927fb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-TypedefDecl 0x12c928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c927fb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
`-FunctionDecl 0x12c9283d8 <dataset_diviso_filec/func3404_vuln.c:1:1, line:50:2> line:1:5 invalid ssl3_write_bytes 'int (int *, int, const void *, int)'
  |-ParmVarDecl 0x12c928128 <col:22, col:27> col:27 referenced invalid s 'int *'
  |-ParmVarDecl 0x12c9281a8 <col:30, col:34> col:34 used type 'int'
  |-ParmVarDecl 0x12c928258 <col:40, col:52> col:52 used buf_ 'const void *'
  |-ParmVarDecl 0x12c9282d8 <col:58, col:62> col:62 used len 'int'
  `-CompoundStmt 0x12d808e88 <line:2:2, line:50:2>
    |-DeclStmt 0x12c9285a0 <line:3:2, col:31>
    | `-VarDecl 0x12c9284e8 <col:2, col:27> col:23 used buf 'const unsigned char *' cinit
    |   `-ImplicitCastExpr 0x12c928588 <col:27> 'const unsigned char *' <BitCast>
    |     `-ImplicitCastExpr 0x12c928570 <col:27> 'const void *' <LValueToRValue>
    |       `-DeclRefExpr 0x12c928550 <col:27> 'const void *' lvalue ParmVar 0x12c928258 'buf_' 'const void *'
    |-DeclStmt 0x12c928758 <line:4:2, col:23>
    | |-VarDecl 0x12c9285d0 <col:2, col:15> col:15 used tot 'unsigned int'
    | |-VarDecl 0x12c928650 <col:2, col:19> col:19 used n 'unsigned int'
    | `-VarDecl 0x12c9286d0 <col:2, col:21> col:21 used nw 'unsigned int'
    |-DeclStmt 0x12c941800 <line:5:2, col:7>
    | `-VarDecl 0x12c928788 <col:2, col:6> col:6 used i 'int'
    |-BinaryOperator 0x12c941900 <line:7:2, col:13> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12c941860 <col:2, col:5> '<dependent type>' contains-errors lvalue ->rwstate
    | | `-RecoveryExpr 0x12c941838 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c941818 <col:2> 'int *' lvalue ParmVar 0x12c928128 's' 'int *'
    | `-RecoveryExpr 0x12c9418e0 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c9419f0 <line:8:2, col:13> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x12c941920 <col:2> 'unsigned int' lvalue Var 0x12c9285d0 'tot' 'unsigned int'
    | `-CXXDependentScopeMemberExpr 0x12c9419a8 <col:6, col:13> '<dependent type>' contains-errors lvalue ->wnum
    |   `-CXXDependentScopeMemberExpr 0x12c941960 <col:6, col:9> '<dependent type>' contains-errors lvalue ->s3
    |     `-RecoveryExpr 0x12c941940 <col:6> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c941b08 <line:9:2, col:14> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12c941aa0 <col:2, col:9> '<dependent type>' contains-errors lvalue ->wnum
    | | `-CXXDependentScopeMemberExpr 0x12c941a58 <col:2, col:5> '<dependent type>' contains-errors lvalue ->s3
    | |   `-RecoveryExpr 0x12c941a30 <col:2> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12c941a10 <col:2> 'int *' lvalue ParmVar 0x12c928128 's' 'int *'
    | `-IntegerLiteral 0x12c941ae8 <col:14> 'int' 0
    |-IfStmt 0x12c942288 <line:11:2, line:20:3>
    | |-BinaryOperator 0x12c941d80 <line:11:6, col:28> 'int' contains-errors '&&'
    | | |-CallExpr 0x12c941cc0 <col:6, col:19> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12c941c80 <col:6> 'int ()' Function 0x12c941bc8 'SSL_in_init' 'int ()'
    | | | `-RecoveryExpr 0x12c941ca0 <col:18> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x12c941d68 <col:24, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x12c941d50 <col:25, col:28> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-CXXDependentScopeMemberExpr 0x12c941d08 <col:25, col:28> '<dependent type>' contains-errors lvalue ->in_handshake
    | |       `-RecoveryExpr 0x12c941ce8 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12c942260 <line:12:3, line:20:3>
    |   |-BinaryOperator 0x12c941e70 <line:13:3, col:24> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12c941da0 <col:3> 'int' lvalue Var 0x12c928788 'i' 'int'
    |   | `-CallExpr 0x12c941e48 <col:5, col:24> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x12c941de0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->handshake_func
    |   |   | `-RecoveryExpr 0x12c941dc0 <col:5> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x12c941e28 <col:23> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x12c941f70 <line:14:3, col:22>
    |   | |-BinaryOperator 0x12c941ee8 <col:7, col:11> 'int' '<'
    |   | | |-ImplicitCastExpr 0x12c941ed0 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12c941e90 <col:7> 'int' lvalue Var 0x12c928788 'i' 'int'
    |   | | `-IntegerLiteral 0x12c941eb0 <col:11> 'int' 0
    |   | `-ReturnStmt 0x12c941f60 <col:14, col:22>
    |   |   `-ImplicitCastExpr 0x12c941f48 <col:20, col:22> 'int' <LValueToRValue>
    |   |     `-ParenExpr 0x12c941f28 <col:20, col:22> 'int' lvalue
    |   |       `-DeclRefExpr 0x12c941f08 <col:21> 'int' lvalue Var 0x12c928788 'i' 'int'
    |   `-IfStmt 0x12c942240 <line:15:3, line:19:4>
    |     |-BinaryOperator 0x12c941fe8 <line:15:7, col:12> 'int' '=='
    |     | |-ImplicitCastExpr 0x12c941fd0 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12c941f90 <col:7> 'int' lvalue Var 0x12c928788 'i' 'int'
    |     | `-IntegerLiteral 0x12c941fb0 <col:12> 'int' 0
    |     `-CompoundStmt 0x12c942220 <line:16:4, line:19:4>
    |       |-CallExpr 0x12c9421a8 <line:17:4, col:61> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x12c9420e8 <col:4> 'int ()' Function 0x12c942030 'SSLerr' 'int ()'
    |       | |-RecoveryExpr 0x12c942168 <col:11> '<dependent type>' contains-errors lvalue
    |       | `-RecoveryExpr 0x12c942188 <col:34> '<dependent type>' contains-errors lvalue
    |       `-ReturnStmt 0x12c942210 <line:18:4, col:12>
    |         `-UnaryOperator 0x12c9421f8 <col:11, col:12> 'int' prefix '-'
    |           `-IntegerLiteral 0x12c9421d8 <col:12> 'int' 1
    |-BinaryOperator 0x12c942390 <line:22:2, col:12> 'unsigned int' '='
    | |-DeclRefExpr 0x12c9422a8 <col:2> 'unsigned int' lvalue Var 0x12c928650 'n' 'unsigned int'
    | `-ParenExpr 0x12c942370 <col:4, col:12> 'unsigned int'
    |   `-BinaryOperator 0x12c942350 <col:5, col:9> 'unsigned int' '-'
    |     |-ImplicitCastExpr 0x12c942338 <col:5> 'unsigned int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x12c942308 <col:5> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x12c9422c8 <col:5> 'int' lvalue ParmVar 0x12c9282d8 'len' 'int'
    |     `-ImplicitCastExpr 0x12c942320 <col:9> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x12c9422e8 <col:9> 'unsigned int' lvalue Var 0x12c9285d0 'tot' 'unsigned int'
    `-ForStmt 0x12d808e50 <line:23:2, line:49:3>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-<<<NULL>>>
      `-CompoundStmt 0x12d808e10 <line:24:3, line:49:3>
        |-IfStmt 0x12c942578 <line:25:3, line:28:7> has_else
        | |-BinaryOperator 0x12c942438 <line:25:7, col:14> 'int' contains-errors '>'
        | | |-DeclRefExpr 0x12c9423b0 <col:7> 'unsigned int' lvalue Var 0x12c928650 'n' 'unsigned int'
        | | `-CXXDependentScopeMemberExpr 0x12c9423f0 <col:11, col:14> '<dependent type>' contains-errors lvalue ->max_send_fragment
        | |   `-RecoveryExpr 0x12c9423d0 <col:11> '<dependent type>' contains-errors lvalue
        | |-BinaryOperator 0x12c9424e0 <line:26:4, col:10> 'unsigned int' contains-errors '='
        | | |-DeclRefExpr 0x12c942458 <col:4> 'unsigned int' lvalue Var 0x12c9286d0 'nw' 'unsigned int'
        | | `-CXXDependentScopeMemberExpr 0x12c942498 <col:7, col:10> '<dependent type>' contains-errors lvalue ->max_send_fragment
        | |   `-RecoveryExpr 0x12c942478 <col:7> '<dependent type>' contains-errors lvalue
        | `-BinaryOperator 0x12c942558 <line:28:4, col:7> 'unsigned int' '='
        |   |-DeclRefExpr 0x12c942500 <col:4> 'unsigned int' lvalue Var 0x12c9286d0 'nw' 'unsigned int'
        |   `-ImplicitCastExpr 0x12c942540 <col:7> 'unsigned int' <LValueToRValue>
        |     `-DeclRefExpr 0x12c942520 <col:7> 'unsigned int' lvalue Var 0x12c928650 'n' 'unsigned int'
        |-BinaryOperator 0x12d808668 <line:30:3, col:46> 'int' contains-errors '='
        | |-DeclRefExpr 0x12c9425a8 <col:3> 'int' lvalue Var 0x12c928788 'i' 'int'
        | `-CallExpr 0x12d808620 <col:5, col:46> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x12c9426a8 <col:5> 'int ()' Function 0x12c9425f0 'do_ssl3_write' 'int ()'
        |   |-RecoveryExpr 0x12c9426c8 <col:19> '<dependent type>' contains-errors lvalue
        |   |-DeclRefExpr 0x12c9426e8 <col:22> 'int' lvalue ParmVar 0x12c9281a8 'type' 'int'
        |   |-UnaryOperator 0x12c9427b8 <col:28, col:38> 'const unsigned char *' prefix '&' cannot overflow
        |   | `-ParenExpr 0x12c942798 <col:29, col:38> 'const unsigned char' lvalue
        |   |   `-ArraySubscriptExpr 0x12c942778 <col:30, col:37> 'const unsigned char' lvalue
        |   |     |-ImplicitCastExpr 0x12c942748 <col:30> 'const unsigned char *' <LValueToRValue>
        |   |     | `-DeclRefExpr 0x12c942708 <col:30> 'const unsigned char *' lvalue Var 0x12c9284e8 'buf' 'const unsigned char *'
        |   |     `-ImplicitCastExpr 0x12c942760 <col:34> 'unsigned int' <LValueToRValue>
        |   |       `-DeclRefExpr 0x12c942728 <col:34> 'unsigned int' lvalue Var 0x12c9285d0 'tot' 'unsigned int'
        |   |-DeclRefExpr 0x12c9427d0 <col:41> 'unsigned int' lvalue Var 0x12c9286d0 'nw' 'unsigned int'
        |   `-IntegerLiteral 0x12d808600 <col:45> 'int' 0
        |-IfStmt 0x12d808880 <line:31:3, line:35:4>
        | |-BinaryOperator 0x12d8086e0 <line:31:7, col:12> 'int' '<='
        | | |-ImplicitCastExpr 0x12d8086c8 <col:7> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x12d808688 <col:7> 'int' lvalue Var 0x12c928788 'i' 'int'
        | | `-IntegerLiteral 0x12d8086a8 <col:12> 'int' 0
        | `-CompoundStmt 0x12d808860 <line:32:4, line:35:4>
        |   |-BinaryOperator 0x12d8087f8 <line:33:4, col:16> '<dependent type>' contains-errors '='
        |   | |-CXXDependentScopeMemberExpr 0x12d808790 <col:4, col:11> '<dependent type>' contains-errors lvalue ->wnum
        |   | | `-CXXDependentScopeMemberExpr 0x12d808748 <col:4, col:7> '<dependent type>' contains-errors lvalue ->s3
        |   | |   `-RecoveryExpr 0x12d808720 <col:4> '<dependent type>' contains-errors lvalue
        |   | |     `-DeclRefExpr 0x12d808700 <col:4> 'int *' lvalue ParmVar 0x12c928128 's' 'int *'
        |   | `-DeclRefExpr 0x12d8087d8 <col:16> 'unsigned int' lvalue Var 0x12c9285d0 'tot' 'unsigned int'
        |   `-ReturnStmt 0x12d808850 <line:34:4, col:11>
        |     `-ImplicitCastExpr 0x12d808838 <col:11> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x12d808818 <col:11> 'int' lvalue Var 0x12c928788 'i' 'int'
        |-IfStmt 0x12d808cb0 <line:37:3, line:45:4>
        | |-RecoveryExpr 0x12d808a88 <line:37:7, line:39:46> '_Bool' contains-errors
        | `-CompoundStmt 0x12d808c90 <line:40:4, line:45:4>
        |   |-BinaryOperator 0x12d808ba0 <line:42:4, col:33> '<dependent type>' contains-errors '='
        |   | |-CXXDependentScopeMemberExpr 0x12d808b38 <col:4, col:11> '<dependent type>' contains-errors lvalue ->empty_fragment_done
        |   | | `-CXXDependentScopeMemberExpr 0x12d808af0 <col:4, col:7> '<dependent type>' contains-errors lvalue ->s3
        |   | |   `-RecoveryExpr 0x12d808ac8 <col:4> '<dependent type>' contains-errors lvalue
        |   | |     `-DeclRefExpr 0x12d808aa8 <col:4> 'int *' lvalue ParmVar 0x12c928128 's' 'int *'
        |   | `-IntegerLiteral 0x12d808b80 <col:33> 'int' 0
        |   `-ReturnStmt 0x12d808c80 <line:44:4, col:15>
        |     `-ImplicitCastExpr 0x12d808c68 <col:11, col:15> 'int' <IntegralCast>
        |       `-BinaryOperator 0x12d808c48 <col:11, col:15> 'unsigned int' '+'
        |         |-ImplicitCastExpr 0x12d808c00 <col:11> 'unsigned int' <LValueToRValue>
        |         | `-DeclRefExpr 0x12d808bc0 <col:11> 'unsigned int' lvalue Var 0x12c9285d0 'tot' 'unsigned int'
        |         `-ImplicitCastExpr 0x12d808c30 <col:15> 'unsigned int' <IntegralCast>
        |           `-ImplicitCastExpr 0x12d808c18 <col:15> 'int' <LValueToRValue>
        |             `-DeclRefExpr 0x12d808be0 <col:15> 'int' lvalue Var 0x12c928788 'i' 'int'
        |-CompoundAssignOperator 0x12d808d40 <line:47:3, col:6> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
        | |-DeclRefExpr 0x12d808cd0 <col:3> 'unsigned int' lvalue Var 0x12c928650 'n' 'unsigned int'
        | `-ImplicitCastExpr 0x12d808d28 <col:6> 'unsigned int' <IntegralCast>
        |   `-ImplicitCastExpr 0x12d808d10 <col:6> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x12d808cf0 <col:6> 'int' lvalue Var 0x12c928788 'i' 'int'
        `-CompoundAssignOperator 0x12d808de0 <line:48:3, col:8> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
          |-DeclRefExpr 0x12d808d70 <col:3> 'unsigned int' lvalue Var 0x12c9285d0 'tot' 'unsigned int'
          `-ImplicitCastExpr 0x12d808dc8 <col:8> 'unsigned int' <IntegralCast>
            `-ImplicitCastExpr 0x12d808db0 <col:8> 'int' <LValueToRValue>
              `-DeclRefExpr 0x12d808d90 <col:8> 'int' lvalue Var 0x12c928788 'i' 'int'
