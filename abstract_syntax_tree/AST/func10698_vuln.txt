TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12a90dc30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a90da00 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a90dc98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12a90dd00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12a90dd68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a90ddd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12a90de38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12a90dea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12a90df08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12a90df70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12a90dfd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a90e040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a90e0a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a90e110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a90e178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a90e1e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a90e248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a90e2b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a90e318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a90e380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a90e3e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a90e450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a90e4b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a90e520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a90e588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a90e5f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a90e658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a90e6c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a90e728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a90e790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a90e7f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a90e860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a90e8c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a90e930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a90e998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a90f200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a90f268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a90f2d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a90f338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a90f3a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a90f408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a90f470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a90f4d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a90f540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a90f5a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a90f610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a90f678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a90f6e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a90f748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a90f7b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a90f818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12a90f880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a90f8e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a90f950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12a90f9f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a90f9b0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12a90fa68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a90f9b0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
`-FunctionDecl 0x12a90fda0 <dataset_diviso_filec/func10698_vuln.c:1:1, line:39:1> line:1:13 invalid jas_stream_initbuf 'void (int *, int, char *, int)' static
  |-ParmVarDecl 0x12a90fb28 <col:32, col:46> col:46 referenced invalid stream 'int *'
  |-ParmVarDecl 0x12a90fba8 <col:54, col:58> col:58 used bufmode 'int'
  |-ParmVarDecl 0x12a90fc28 <col:67, col:73> col:73 used buf 'char *'
  |-ParmVarDecl 0x12a90fca8 <line:2:3, col:7> col:7 used bufsize 'int'
  `-CompoundStmt 0x12c8084c0 <line:3:1, line:39:1>
    |-CallExpr 0x12a910078 <line:5:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a90ffc0 <col:2> 'int ()' Function 0x12a90ff08 'assert' 'int ()'
    | `-UnaryOperator 0x12a910060 <col:9, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-ImplicitCastExpr 0x12a910048 <col:10, col:18> '<dependent type>' contains-errors <LValueToRValue>
    |     `-CXXDependentScopeMemberExpr 0x12a910000 <col:10, col:18> '<dependent type>' contains-errors lvalue ->bufbase_
    |       `-RecoveryExpr 0x12a90ffe0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a929ff0 <line:7:2, line:34:2> has_else
    | |-BinaryOperator 0x12a910118 <line:7:6, col:17> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12a9100a0 <col:6> 'int' lvalue ParmVar 0x12a90fba8 'bufmode' 'int'
    | | `-RecoveryExpr 0x12a9100f8 <col:17> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12a929ce0 <col:35, line:27:2>
    | | `-IfStmt 0x12a929cb0 <line:9:3, line:26:3> has_else
    | |   |-UnaryOperator 0x12a910170 <line:9:7, col:8> 'int' prefix '!' cannot overflow
    | |   | `-ImplicitCastExpr 0x12a910158 <col:8> 'char *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x12a910138 <col:8> 'char *' lvalue ParmVar 0x12a90fc28 'buf' 'char *'
    | |   |-CompoundStmt 0x12a929840 <col:13, line:20:3>
    | |   | `-IfStmt 0x12a929810 <line:11:4, line:19:4> has_else
    | |   |   |-RecoveryExpr 0x12a929398 <line:11:8, line:12:28> '_Bool' contains-errors
    | |   |   |-CompoundStmt 0x12a9295e8 <col:31, line:15:4>
    | |   |   | |-CompoundAssignOperator 0x12a9294b0 <line:13:5, col:25> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   |   | | |-CXXDependentScopeMemberExpr 0x12a929400 <col:5, col:13> '<dependent type>' contains-errors lvalue ->bufmode_
    | |   |   | | | `-RecoveryExpr 0x12a9293d8 <col:5> '<dependent type>' contains-errors lvalue
    | |   |   | | |   `-DeclRefExpr 0x12a9293b8 <col:5> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
    | |   |   | | `-RecoveryExpr 0x12a929490 <col:25> '<dependent type>' contains-errors lvalue
    | |   |   | `-BinaryOperator 0x12a9295c8 <line:14:5, col:24> '<dependent type>' contains-errors '='
    | |   |   |   |-CXXDependentScopeMemberExpr 0x12a929528 <col:5, col:13> '<dependent type>' contains-errors lvalue ->bufsize_
    | |   |   |   | `-RecoveryExpr 0x12a929500 <col:5> '<dependent type>' contains-errors lvalue
    | |   |   |   |   `-DeclRefExpr 0x12a9294e0 <col:5> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
    | |   |   |   `-RecoveryExpr 0x12a9295a8 <col:24> '<dependent type>' contains-errors lvalue
    | |   |   `-CompoundStmt 0x12a9297f0 <line:15:11, line:19:4>
    | |   |     |-BinaryOperator 0x12a929700 <line:17:5, col:32> '<dependent type>' contains-errors '='
    | |   |     | |-CXXDependentScopeMemberExpr 0x12a929650 <col:5, col:13> '<dependent type>' contains-errors lvalue ->bufbase_
    | |   |     | | `-RecoveryExpr 0x12a929628 <col:5> '<dependent type>' contains-errors lvalue
    | |   |     | |   `-DeclRefExpr 0x12a929608 <col:5> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
    | |   |     | `-CXXDependentScopeMemberExpr 0x12a9296b8 <col:24, col:32> '<dependent type>' contains-errors lvalue ->tinybuf_
    | |   |     |   `-RecoveryExpr 0x12a929698 <col:24> '<dependent type>' contains-errors lvalue
    | |   |     `-BinaryOperator 0x12a9297d0 <line:18:5, col:24> '<dependent type>' contains-errors '='
    | |   |       |-CXXDependentScopeMemberExpr 0x12a929768 <col:5, col:13> '<dependent type>' contains-errors lvalue ->bufsize_
    | |   |       | `-RecoveryExpr 0x12a929740 <col:5> '<dependent type>' contains-errors lvalue
    | |   |       |   `-DeclRefExpr 0x12a929720 <col:5> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
    | |   |       `-IntegerLiteral 0x12a9297b0 <col:24> 'int' 1
    | |   `-CompoundStmt 0x12a929c90 <line:20:10, line:26:3>
    | |     |-CallExpr 0x12a929938 <line:23:4, col:42> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x12a929858 <col:4> 'int ()' Function 0x12a90ff08 'assert' 'int ()'
    | |     | `-BinaryOperator 0x12a929918 <col:11, col:21> 'int' contains-errors '>'
    | |     |   |-DeclRefExpr 0x12a929878 <col:11> 'int' lvalue ParmVar 0x12a90fca8 'bufsize' 'int'
    | |     |   `-RecoveryExpr 0x12a9298f8 <col:21> '<dependent type>' contains-errors lvalue
    | |     `-BinaryOperator 0x12a929c70 <line:25:4, col:33> '<dependent type>' contains-errors '='
    | |       |-CXXDependentScopeMemberExpr 0x12a929b70 <col:4, col:12> '<dependent type>' contains-errors lvalue ->bufsize_
    | |       | `-RecoveryExpr 0x12a929b48 <col:4> '<dependent type>' contains-errors lvalue
    | |       |   `-DeclRefExpr 0x12a929b28 <col:4> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
    | |       `-BinaryOperator 0x12a929c50 <col:23, col:33> '<dependent type>' contains-errors '-'
    | |         |-DeclRefExpr 0x12a929bb8 <col:23> 'int' lvalue ParmVar 0x12a90fca8 'bufsize' 'int'
    | |         `-RecoveryExpr 0x12a929c30 <col:33> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a929fc8 <line:27:9, line:34:2>
    |   |-CallExpr 0x12a929db8 <line:30:3, col:14> 'int'
    |   | |-ImplicitCastExpr 0x12a929da0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12a929cf8 <col:3> 'int ()' Function 0x12a90ff08 'assert' 'int ()'
    |   | `-UnaryOperator 0x12a929d50 <col:10, col:11> 'int' prefix '!' cannot overflow
    |   |   `-ImplicitCastExpr 0x12a929d38 <col:11> 'char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12a929d18 <col:11> 'char *' lvalue ParmVar 0x12a90fc28 'buf' 'char *'
    |   |-BinaryOperator 0x12a929ed8 <line:32:3, col:30> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12a929e28 <col:3, col:11> '<dependent type>' contains-errors lvalue ->bufbase_
    |   | | `-RecoveryExpr 0x12a929e00 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12a929de0 <col:3> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
    |   | `-CXXDependentScopeMemberExpr 0x12a929e90 <col:22, col:30> '<dependent type>' contains-errors lvalue ->tinybuf_
    |   |   `-RecoveryExpr 0x12a929e70 <col:22> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x12a929fa8 <line:33:3, col:22> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x12a929f40 <col:3, col:11> '<dependent type>' contains-errors lvalue ->bufsize_
    |     | `-RecoveryExpr 0x12a929f18 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x12a929ef8 <col:3> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
    |     `-IntegerLiteral 0x12a929f88 <col:22> 'int' 1
    |-BinaryOperator 0x12c808248 <line:36:2, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12a92a178 <col:2, col:10> '<dependent type>' contains-errors lvalue ->ptr_
    | | `-RecoveryExpr 0x12a92a150 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12a92a130 <col:2> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
    | `-CXXDependentScopeMemberExpr 0x12c808200 <col:17, col:25> '<dependent type>' contains-errors lvalue ->bufstart_
    |   `-RecoveryExpr 0x12a92a1c0 <col:17> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c808318 <line:37:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12c8082b0 <col:2, col:10> '<dependent type>' contains-errors lvalue ->cnt_
    | | `-RecoveryExpr 0x12c808288 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c808268 <col:2> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
    | `-IntegerLiteral 0x12c8082f8 <col:17> 'int' 0
    `-CompoundAssignOperator 0x12c808490 <line:38:2, col:32> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      |-CXXDependentScopeMemberExpr 0x12c808380 <col:2, col:10> '<dependent type>' contains-errors lvalue ->bufmode_
      | `-RecoveryExpr 0x12c808358 <col:2> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x12c808338 <col:2> 'int *' lvalue ParmVar 0x12a90fb28 'stream' 'int *'
      `-BinaryOperator 0x12c808470 <col:22, col:32> '<dependent type>' contains-errors '&'
        |-DeclRefExpr 0x12c8083c8 <col:22> 'int' lvalue ParmVar 0x12a90fba8 'bufmode' 'int'
        `-RecoveryExpr 0x12c808450 <col:32> '<dependent type>' contains-errors lvalue
