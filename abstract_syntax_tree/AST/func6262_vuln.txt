TranslationUnitDecl 0x15a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a055bd0 '__int128'
|-TypedefDecl 0x15a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a055bf0 'unsigned __int128'
|-TypedefDecl 0x15a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a126000 'struct __NSConstantString_tag'
|   `-Record 0x15a056580 '__NSConstantString_tag'
|-TypedefDecl 0x15a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a055d90 '__SVInt8_t'
|-TypedefDecl 0x15a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a055db0 '__SVInt16_t'
|-TypedefDecl 0x15a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a055dd0 '__SVInt32_t'
|-TypedefDecl 0x15a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a055df0 '__SVInt64_t'
|-TypedefDecl 0x15a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a055e10 '__SVUint8_t'
|-TypedefDecl 0x15a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a055e30 '__SVUint16_t'
|-TypedefDecl 0x15a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a055e50 '__SVUint32_t'
|-TypedefDecl 0x15a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a055e70 '__SVUint64_t'
|-TypedefDecl 0x15a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a055e90 '__SVFloat16_t'
|-TypedefDecl 0x15a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a056390 '__SVBool_t'
|-TypedefDecl 0x15a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a0563f0 '__SVCount_t'
|-TypedefDecl 0x15a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a127fb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-TypedefDecl 0x15a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a127fb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-FunctionDecl 0x15a128438 <dataset_diviso_filec/func6262_vuln.c:1:1, line:27:1> line:1:1 invalid runarg 'int (int *, const char *, const char *, const char *, int)'
| |-ParmVarDecl 0x15a128128 <col:8, col:27> col:27 referenced invalid minst 'int *'
| |-ParmVarDecl 0x15a1281a8 <col:34, col:46> col:46 used pre 'const char *'
| |-ParmVarDecl 0x15a128228 <col:51, col:63> col:63 used arg 'const char *'
| |-ParmVarDecl 0x15a1282a8 <line:2:8, col:20> col:20 used post 'const char *'
| |-ParmVarDecl 0x15a128328 <col:26, col:30> col:30 used options 'int'
| `-CompoundStmt 0x15a144f58 <line:3:1, line:27:1>
|   |-DeclStmt 0x15a142000 <line:4:5, col:63>
|   | `-VarDecl 0x15a128520 <col:5, col:62> col:9 used len 'int' cinit
|   |   `-ImplicitCastExpr 0x15a141fe8 <col:15, col:62> 'int' <IntegralCast>
|   |     `-BinaryOperator 0x15a141fc8 <col:15, col:62> 'unsigned long' '+'
|   |       |-BinaryOperator 0x15a141f70 <col:15, col:58> 'unsigned long' '+'
|   |       | |-BinaryOperator 0x15a141ea0 <col:15, col:43> 'unsigned long' '+'
|   |       | | |-CallExpr 0x15a141c28 <col:15, col:25> 'unsigned long'
|   |       | | | |-ImplicitCastExpr 0x15a141c10 <col:15> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | | | `-DeclRefExpr 0x15a141b80 <col:15> 'unsigned long (const char *)' Function 0x15a141a10 'strlen' 'unsigned long (const char *)'
|   |       | | | `-ImplicitCastExpr 0x15a141c50 <col:22> 'const char *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x15a141ba0 <col:22> 'const char *' lvalue ParmVar 0x15a1281a8 'pre' 'const char *'
|   |       | | `-ImplicitCastExpr 0x15a141e88 <col:29, col:43> 'unsigned long' <IntegralCast>
|   |       | |   `-CallExpr 0x15a141e48 <col:29, col:43> 'int'
|   |       | |     |-ImplicitCastExpr 0x15a141e30 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | |     | `-DeclRefExpr 0x15a141dc0 <col:29> 'int ()' Function 0x15a141d08 'esc_strlen' 'int ()'
|   |       | |     `-ImplicitCastExpr 0x15a141e70 <col:40> 'const char *' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x15a141de0 <col:40> 'const char *' lvalue ParmVar 0x15a128228 'arg' 'const char *'
|   |       | `-CallExpr 0x15a141f30 <col:47, col:58> 'unsigned long'
|   |       |   |-ImplicitCastExpr 0x15a141f18 <col:47> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x15a141ec0 <col:47> 'unsigned long (const char *)' Function 0x15a141a10 'strlen' 'unsigned long (const char *)'
|   |       |   `-ImplicitCastExpr 0x15a141f58 <col:54> 'const char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x15a141ee0 <col:54> 'const char *' lvalue ParmVar 0x15a1282a8 'post' 'const char *'
|   |       `-ImplicitCastExpr 0x15a141fb0 <col:62> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x15a141f90 <col:62> 'int' 1
|   |-DeclStmt 0x15a142098 <line:5:5, col:13>
|   | `-VarDecl 0x15a142030 <col:5, col:9> col:9 used code 'int'
|   |-DeclStmt 0x15a142130 <line:6:5, col:15>
|   | `-VarDecl 0x15a1420c8 <col:5, col:11> col:11 used line 'char *'
|   |-IfStmt 0x15a142468 <line:8:5, line:13:5>
|   | |-BinaryOperator 0x15a1421c0 <line:8:9, col:19> '<dependent type>' contains-errors '&'
|   | | |-DeclRefExpr 0x15a142148 <col:9> 'int' lvalue ParmVar 0x15a128328 'options' 'int'
|   | | `-RecoveryExpr 0x15a1421a0 <col:19> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15a142448 <col:28, line:13:5>
|   |   |-BinaryOperator 0x15a142348 <line:9:9, col:35> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x15a1421e0 <col:9> 'int' lvalue Var 0x15a142030 'code' 'int'
|   |   | `-CallExpr 0x15a142320 <col:16, col:35> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x15a1422e0 <col:16> 'int ()' Function 0x15a142228 'gs_main_init2' 'int ()'
|   |   |   `-RecoveryExpr 0x15a142300 <col:30> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x15a142428 <line:11:9, line:12:20>
|   |     |-BinaryOperator 0x15a1423c0 <line:11:13, col:20> 'int' '<'
|   |     | |-ImplicitCastExpr 0x15a1423a8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x15a142368 <col:13> 'int' lvalue Var 0x15a142030 'code' 'int'
|   |     | `-IntegerLiteral 0x15a142388 <col:20> 'int' 0
|   |     `-ReturnStmt 0x15a142418 <line:12:13, col:20>
|   |       `-ImplicitCastExpr 0x15a142400 <col:20> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x15a1423e0 <col:20> 'int' lvalue Var 0x15a142030 'code' 'int'
|   |-BinaryOperator 0x15a142708 <line:14:5, col:58> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x15a142488 <col:5> 'char *' lvalue Var 0x15a1420c8 'line' 'char *'
|   | `-CStyleCastExpr 0x15a1426e0 <col:12, col:58> 'char *' contains-errors <Dependent>
|   |   `-CallExpr 0x15a142690 <col:20, col:58> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15a142588 <col:20> 'int ()' Function 0x15a1424d0 'gs_alloc_bytes' 'int ()'
|   |     |-CXXDependentScopeMemberExpr 0x15a1425c8 <col:35, col:42> '<dependent type>' contains-errors lvalue ->heap
|   |     | `-RecoveryExpr 0x15a1425a8 <col:35> '<dependent type>' contains-errors lvalue
|   |     |-DeclRefExpr 0x15a142610 <col:48> 'int' lvalue Var 0x15a128520 'len' 'int'
|   |     `-StringLiteral 0x15a142670 <col:53> 'char[4]' lvalue "STR"
|   |-IfStmt 0x15a1440f8 <line:15:5, line:18:5>
|   | |-BinaryOperator 0x15a142798 <line:15:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x15a142768 <col:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15a142728 <col:9> 'char *' lvalue Var 0x15a1420c8 'line' 'char *'
|   | | `-ImplicitCastExpr 0x15a142780 <col:17> 'char *' <NullToPointer>
|   | |   `-IntegerLiteral 0x15a142748 <col:17> 'int' 0
|   | `-CompoundStmt 0x15a1440d8 <col:20, line:18:5>
|   |   |-CallExpr 0x15a143f10 <line:16:9, col:22> 'int'
|   |   | |-ImplicitCastExpr 0x15a143ef8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15a143eb8 <col:9> 'int ()' Function 0x15a143e00 'lprintf' 'int ()'
|   |   | `-ImplicitCastExpr 0x15a143f38 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x15a143ed8 <col:17> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x15a1440b0 <line:17:9, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15a144030 <col:9> 'int ()' Function 0x15a143f78 'return_error' 'int ()'
|   |     `-RecoveryExpr 0x15a144090 <col:22> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x15a144418 <line:19:5, col:21> 'char *'
|   | |-ImplicitCastExpr 0x15a144400 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15a144340 <col:5> 'char *(char *, const char *)' Function 0x15a144160 'strcpy' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x15a144448 <col:12> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15a144360 <col:12> 'char *' lvalue Var 0x15a1420c8 'line' 'char *'
|   | `-ImplicitCastExpr 0x15a144460 <col:18> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a144380 <col:18> 'const char *' lvalue ParmVar 0x15a1281a8 'pre' 'const char *'
|   |-CallExpr 0x15a1445d0 <line:20:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x15a1445b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15a144558 <col:5> 'int ()' Function 0x15a1444a0 'esc_strcat' 'int ()'
|   | |-ImplicitCastExpr 0x15a144600 <col:16> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15a144578 <col:16> 'char *' lvalue Var 0x15a1420c8 'line' 'char *'
|   | `-ImplicitCastExpr 0x15a144618 <col:22> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a144598 <col:22> 'const char *' lvalue ParmVar 0x15a128228 'arg' 'const char *'
|   |-CallExpr 0x15a1448b8 <line:21:5, col:22> 'char *'
|   | |-ImplicitCastExpr 0x15a1448a0 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15a144810 <col:5> 'char *(char *, const char *)' Function 0x15a144630 'strcat' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x15a1448e8 <col:12> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15a144830 <col:12> 'char *' lvalue Var 0x15a1420c8 'line' 'char *'
|   | `-ImplicitCastExpr 0x15a144900 <col:18> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15a144850 <col:18> 'const char *' lvalue ParmVar 0x15a1282a8 'post' 'const char *'
|   |-BinaryOperator 0x15a144a48 <line:22:5, col:41> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15a1449a8 <col:5, col:21> '<dependent type>' contains-errors lvalue ->starting_arg_file
|   | | `-CXXDependentScopeMemberExpr 0x15a144960 <col:5, col:12> '<dependent type>' contains-errors lvalue ->i_ctx_p
|   | |   `-RecoveryExpr 0x15a144938 <col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x15a144918 <col:5> 'int *' lvalue ParmVar 0x15a128128 'minst' 'int *'
|   | `-DeclRefExpr 0x15a144a28 <col:41> 'const char *' lvalue ParmVar 0x15a1281a8 'pre' 'const char *'
|   |-BinaryOperator 0x15a144c20 <line:23:5, col:43> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15a144a68 <col:5> 'int' lvalue Var 0x15a142030 'code' 'int'
|   | `-CallExpr 0x15a144be8 <col:12, col:43> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15a144b68 <col:12> 'int ()' Function 0x15a144ab0 'run_string' 'int ()'
|   |   |-RecoveryExpr 0x15a144b88 <col:23> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x15a144ba8 <col:30> 'char *' lvalue Var 0x15a1420c8 'line' 'char *'
|   |   `-DeclRefExpr 0x15a144bc8 <col:36> 'int' lvalue ParmVar 0x15a128328 'options' 'int'
|   |-CallExpr 0x15a144ed8 <line:25:5, col:44> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a144e10 <col:5> 'int ()' Function 0x15a144d58 'gs_free_object' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x15a144e50 <col:20, col:27> '<dependent type>' contains-errors lvalue ->heap
|   | | `-RecoveryExpr 0x15a144e30 <col:20> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x15a144e98 <col:33> 'char *' lvalue Var 0x15a1420c8 'line' 'char *'
|   | `-StringLiteral 0x15a144eb8 <col:39> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x15a144f48 <line:26:5, col:12>
|     `-ImplicitCastExpr 0x15a144f30 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15a144f10 <col:12> 'int' lvalue Var 0x15a142030 'code' 'int'
|-FunctionDecl 0x15a141a10 <line:4:15> col:15 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x15a141b10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15a141ab8 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x15a144160 <line:19:5> col:5 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x15a144260 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x15a1442c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15a144208 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x15a144630 <line:21:5> col:5 implicit used strcat 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x15a144730 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x15a144798 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15a1446d8 <<invalid sloc>> Implicit 889
