TranslationUnitDecl 0x153055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1530564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x153055bd0 '__int128'
|-TypedefDecl 0x153056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x153055bf0 'unsigned __int128'
|-TypedefDecl 0x15380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15380bc00 'struct __NSConstantString_tag'
|   `-Record 0x153056580 '__NSConstantString_tag'
|-TypedefDecl 0x15380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x153055d90 '__SVInt8_t'
|-TypedefDecl 0x15380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x153055db0 '__SVInt16_t'
|-TypedefDecl 0x15380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x153055dd0 '__SVInt32_t'
|-TypedefDecl 0x15380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x153055df0 '__SVInt64_t'
|-TypedefDecl 0x15380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x153055e10 '__SVUint8_t'
|-TypedefDecl 0x15380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x153055e30 '__SVUint16_t'
|-TypedefDecl 0x15380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x153055e50 '__SVUint32_t'
|-TypedefDecl 0x15380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x153055e70 '__SVUint64_t'
|-TypedefDecl 0x15380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x153055e90 '__SVFloat16_t'
|-TypedefDecl 0x15380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x153055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x153055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x153055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x153055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x153055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x153055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x153055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x153055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x153055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x153055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x153055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x153056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x153056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x153056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x153056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x153056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1530560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1530560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1530560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x153056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x153056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x153056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x153056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x153056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1530561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1530561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1530561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x153056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x153056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x153056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x153056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x153056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1530562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1530562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1530562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x153056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x153056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x153056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x153056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x153056390 '__SVBool_t'
|-TypedefDecl 0x15380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1530563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1530563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1530563f0 '__SVCount_t'
|-TypedefDecl 0x15380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-TypedefDecl 0x15380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-FunctionDecl 0x15380df58 <dataset_diviso_filec/func36_vuln.c:1:1, line:45:1> line:1:12 invalid ng_pkt 'int (int **, const char *, int)' static
| |-ParmVarDecl 0x15380dd60 <col:19, col:29> col:29 invalid out 'int **'
| |-ParmVarDecl 0x15380dde0 <col:34, col:46> col:46 used line 'const char *'
| |-ParmVarDecl 0x15380de60 <col:52, col:59> col:59 referenced invalid len 'int'
| `-CompoundStmt 0x153123ca0 <line:2:1, line:45:1>
|   |-DeclStmt 0x15380e0b0 <line:4:2, col:17>
|   | `-VarDecl 0x15380e048 <col:2, col:14> col:14 used ptr 'const char *'
|   |-UnaryExprOrTypeTraitExpr 0x15380e120 <line:5:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x15380e100 <col:9> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x153827480 <line:8:2, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x153827400 <col:2> 'int ()' Function 0x15380e330 'GITERR_CHECK_ALLOC' 'int ()'
|   | `-RecoveryExpr 0x153827460 <col:21> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x153827518 <line:13:2, col:10> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | |-DeclRefExpr 0x1538274d8 <col:2> 'const char *' lvalue ParmVar 0x15380dde0 'line' 'const char *'
|   | `-IntegerLiteral 0x1538274f8 <col:10> 'int' 3
|   |-IfStmt 0x153827d88 <line:14:2, line:15:8>
|   | |-UnaryOperator 0x153827d08 <line:14:6, col:31> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x153827ce8 <col:7, col:31> 'const char *'
|   | |   `-BinaryOperator 0x153827cc8 <col:8, col:30> 'const char *' '='
|   | |     |-DeclRefExpr 0x153827548 <col:8> 'const char *' lvalue Var 0x15380e048 'ptr' 'const char *'
|   | |     `-ImplicitCastExpr 0x153827cb0 <col:14, col:30> 'const char *' <NoOp>
|   | |       `-CallExpr 0x153827c68 <col:14, col:30> 'char *'
|   | |         |-ImplicitCastExpr 0x153827c50 <col:14> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |         | `-DeclRefExpr 0x153827bb0 <col:14> 'char *(const char *, int)' Function 0x1538279d0 'strchr' 'char *(const char *, int)'
|   | |         |-ImplicitCastExpr 0x153827c98 <col:21> 'const char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x153827bd0 <col:21> 'const char *' lvalue ParmVar 0x15380dde0 'line' 'const char *'
|   | |         `-CharacterLiteral 0x153827bf0 <col:27> 'int' 32
|   | `-GotoStmt 0x153827d70 <line:15:3, col:8> 'out_err' 0x153827d20
|   |-BinaryOperator 0x153827e80 <line:16:2, col:14> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x153827dc8 <col:2> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x153827da8 <col:2> 'int' lvalue ParmVar 0x15380de60 'len' 'int'
|   | `-BinaryOperator 0x153827e60 <col:8, col:14> 'long' '-'
|   |   |-ImplicitCastExpr 0x153827e30 <col:8> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x153827df0 <col:8> 'const char *' lvalue Var 0x15380e048 'ptr' 'const char *'
|   |   `-ImplicitCastExpr 0x153827e48 <col:14> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x153827e10 <col:14> 'const char *' lvalue ParmVar 0x15380dde0 'line' 'const char *'
|   |-CallExpr 0x153828080 <line:18:2, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x153827f80 <col:2> 'int ()' Function 0x153827ec8 'GITERR_CHECK_ALLOC_ADD' 'int ()'
|   | |-UnaryOperator 0x153828068 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x153828048 <col:26> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x153827fd0 <col:36> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x153827ff0 <col:41> 'int' 1
|   |-BinaryOperator 0x153123548 <line:25:2, col:15> 'const char *' '='
|   | |-DeclRefExpr 0x1531234b0 <col:2> 'const char *' lvalue ParmVar 0x15380dde0 'line' 'const char *'
|   | `-BinaryOperator 0x153123528 <col:9, col:15> 'const char *' '+'
|   |   |-ImplicitCastExpr 0x153123510 <col:9> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531234d0 <col:9> 'const char *' lvalue Var 0x15380e048 'ptr' 'const char *'
|   |   `-IntegerLiteral 0x1531234f0 <col:15> 'int' 1
|   |-IfStmt 0x1531236e0 <line:26:2, line:27:8>
|   | |-UnaryOperator 0x1531236b0 <line:26:6, col:32> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x153123690 <col:7, col:32> 'const char *'
|   | |   `-BinaryOperator 0x153123670 <col:8, col:31> 'const char *' '='
|   | |     |-DeclRefExpr 0x153123568 <col:8> 'const char *' lvalue Var 0x15380e048 'ptr' 'const char *'
|   | |     `-ImplicitCastExpr 0x153123658 <col:14, col:31> 'const char *' <NoOp>
|   | |       `-CallExpr 0x153123610 <col:14, col:31> 'char *'
|   | |         |-ImplicitCastExpr 0x1531235f8 <col:14> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |         | `-DeclRefExpr 0x153123588 <col:14> 'char *(const char *, int)' Function 0x1538279d0 'strchr' 'char *(const char *, int)'
|   | |         |-ImplicitCastExpr 0x153123640 <col:21> 'const char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x1531235a8 <col:21> 'const char *' lvalue ParmVar 0x15380dde0 'line' 'const char *'
|   | |         `-CharacterLiteral 0x1531235c8 <col:27> 'int' 10
|   | `-GotoStmt 0x1531236c8 <line:27:3, col:8> 'out_err' 0x153827d20
|   |-BinaryOperator 0x1531237d8 <line:28:2, col:14> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x153123720 <col:2> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x153123700 <col:2> 'int' lvalue ParmVar 0x15380de60 'len' 'int'
|   | `-BinaryOperator 0x1531237b8 <col:8, col:14> 'long' '-'
|   |   |-ImplicitCastExpr 0x153123788 <col:8> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x153123748 <col:8> 'const char *' lvalue Var 0x15380e048 'ptr' 'const char *'
|   |   `-ImplicitCastExpr 0x1531237a0 <col:14> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x153123768 <col:14> 'const char *' lvalue ParmVar 0x15380dde0 'line' 'const char *'
|   |-ReturnStmt 0x1531239a0 <line:38:2, col:9>
|   | `-IntegerLiteral 0x153123980 <col:9> 'int' 0
|   |-LabelStmt 0x153123b18 <line:40:1, col:8> 'out_err'
|   | `-NullStmt 0x153123b10 <col:8>
|   `-ReturnStmt 0x153123c90 <line:44:2, col:10>
|     `-UnaryOperator 0x153123c78 <col:9, col:10> 'int' prefix '-'
|       `-IntegerLiteral 0x153123c58 <col:10> 'int' 1
|-FunctionDecl 0x1538279d0 <line:14:14> col:14 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x153827ad0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x153827b38 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x153827a78 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x1538281b8 <line:22:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1538282b8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x153828320 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x153828388 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x153828260 <<invalid sloc>> Implicit 882
