TranslationUnitDecl 0x145855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1458564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145855bd0 '__int128'
|-TypedefDecl 0x145856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145855bf0 'unsigned __int128'
|-TypedefDecl 0x14600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14600bc00 'struct __NSConstantString_tag'
|   `-Record 0x145856580 '__NSConstantString_tag'
|-TypedefDecl 0x14600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145855d90 '__SVInt8_t'
|-TypedefDecl 0x14600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145855db0 '__SVInt16_t'
|-TypedefDecl 0x14600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145855dd0 '__SVInt32_t'
|-TypedefDecl 0x14600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145855df0 '__SVInt64_t'
|-TypedefDecl 0x14600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145855e10 '__SVUint8_t'
|-TypedefDecl 0x14600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145855e30 '__SVUint16_t'
|-TypedefDecl 0x14600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145855e50 '__SVUint32_t'
|-TypedefDecl 0x14600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145855e70 '__SVUint64_t'
|-TypedefDecl 0x14600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145855e90 '__SVFloat16_t'
|-TypedefDecl 0x14600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1458560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1458560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1458560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1458561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1458561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1458561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1458562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1458562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1458562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145856390 '__SVBool_t'
|-TypedefDecl 0x14600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1458563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1458563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1458563f0 '__SVCount_t'
|-TypedefDecl 0x14600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-TypedefDecl 0x14600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
`-FunctionDecl 0x14600e048 <dataset_diviso_filec/func10280_nonvuln.c:1:1, line:22:1> line:1:12 find_next_descriptor 'int (unsigned char *, int, int, int, int *)' static
  |-ParmVarDecl 0x14600dd08 <col:33, col:48> col:48 used buffer 'unsigned char *'
  |-ParmVarDecl 0x14600dd88 <col:56, col:60> col:60 used size 'int'
  |-ParmVarDecl 0x14600de08 <line:2:5, col:9> col:9 used dt1 'int'
  |-ParmVarDecl 0x14600de88 <col:14, col:18> col:18 used dt2 'int'
  |-ParmVarDecl 0x14600df38 <col:23, col:28> col:28 used num_skipped 'int *'
  `-CompoundStmt 0x1460271d8 <line:3:1, line:22:1>
    |-DeclStmt 0x14600e348 <line:4:2, col:33>
    | |-RecordDecl 0x14600e160 <col:2, col:9> col:9 struct usb_descriptor_header
    | `-VarDecl 0x14600e2c8 <col:2, col:32> col:32 used h 'struct usb_descriptor_header *'
    |-DeclStmt 0x146026600 <line:5:2, col:11>
    | `-VarDecl 0x14600e378 <col:2, col:10> col:6 used n 'int' cinit
    |   `-IntegerLiteral 0x14600e3e0 <col:10> 'int' 0
    |-DeclStmt 0x1460266d0 <line:6:2, col:33>
    | `-VarDecl 0x146026630 <col:2, col:27> col:17 used buffer0 'unsigned char *' cinit
    |   `-ImplicitCastExpr 0x1460266b8 <col:27> 'unsigned char *' <LValueToRValue>
    |     `-DeclRefExpr 0x146026698 <col:27> 'unsigned char *' lvalue ParmVar 0x14600dd08 'buffer' 'unsigned char *'
    |-WhileStmt 0x146027000 <line:9:2, line:16:2>
    | |-BinaryOperator 0x146026740 <line:9:9, col:16> 'int' '>'
    | | |-ImplicitCastExpr 0x146026728 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1460266e8 <col:9> 'int' lvalue ParmVar 0x14600dd88 'size' 'int'
    | | `-IntegerLiteral 0x146026708 <col:16> 'int' 0
    | `-CompoundStmt 0x146026fc8 <col:19, line:16:2>
    |   |-BinaryOperator 0x146026868 <line:10:3, col:40> 'struct usb_descriptor_header *' '='
    |   | |-DeclRefExpr 0x146026760 <col:3> 'struct usb_descriptor_header *' lvalue Var 0x14600e2c8 'h' 'struct usb_descriptor_header *'
    |   | `-CStyleCastExpr 0x146026840 <col:7, col:40> 'struct usb_descriptor_header *' <BitCast>
    |   |   `-ImplicitCastExpr 0x146026828 <col:40> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |     `-DeclRefExpr 0x146026780 <col:40> 'unsigned char *' lvalue ParmVar 0x14600dd08 'buffer' 'unsigned char *'
    |   |-IfStmt 0x146026e10 <line:11:3, line:12:4>
    |   | |-BinaryOperator 0x146026de8 <line:11:7, col:58> 'int' contains-errors '||'
    |   | | |-BinaryOperator 0x146026d28 <col:7, col:29> 'int' contains-errors '=='
    |   | | | |-RecoveryExpr 0x146026ce0 <col:7, col:10> '<dependent type>' contains-errors lvalue
    |   | | | | `-DeclRefExpr 0x146026888 <col:7> 'struct usb_descriptor_header *' lvalue Var 0x14600e2c8 'h' 'struct usb_descriptor_header *'
    |   | | | `-DeclRefExpr 0x146026d08 <col:29> 'int' lvalue ParmVar 0x14600de08 'dt1' 'int'
    |   | | `-BinaryOperator 0x146026dc8 <col:36, col:58> 'int' contains-errors '=='
    |   | |   |-RecoveryExpr 0x146026d80 <col:36, col:39> '<dependent type>' contains-errors lvalue
    |   | |   | `-DeclRefExpr 0x146026d48 <col:36> 'struct usb_descriptor_header *' lvalue Var 0x14600e2c8 'h' 'struct usb_descriptor_header *'
    |   | |   `-DeclRefExpr 0x146026da8 <col:58> 'int' lvalue ParmVar 0x14600de88 'dt2' 'int'
    |   | `-BreakStmt 0x146026e08 <line:12:4>
    |   |-CompoundAssignOperator 0x146026eb0 <line:13:3, col:16> 'unsigned char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x146026e30 <col:3> 'unsigned char *' lvalue ParmVar 0x14600dd08 'buffer' 'unsigned char *'
    |   | `-RecoveryExpr 0x146026e88 <col:13, col:16> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x146026e50 <col:13> 'struct usb_descriptor_header *' lvalue Var 0x14600e2c8 'h' 'struct usb_descriptor_header *'
    |   |-CompoundAssignOperator 0x146026f60 <line:14:3, col:14> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x146026ee0 <col:3> 'int' lvalue ParmVar 0x14600dd88 'size' 'int'
    |   | `-RecoveryExpr 0x146026f38 <col:11, col:14> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x146026f00 <col:11> 'struct usb_descriptor_header *' lvalue Var 0x14600e2c8 'h' 'struct usb_descriptor_header *'
    |   `-UnaryOperator 0x146026fb0 <line:15:3, col:5> 'int' prefix '++'
    |     `-DeclRefExpr 0x146026f90 <col:5> 'int' lvalue Var 0x14600e378 'n' 'int'
    |-IfStmt 0x146027100 <line:19:2, line:20:18>
    | |-ImplicitCastExpr 0x146027040 <line:19:6> 'int *' <LValueToRValue>
    | | `-DeclRefExpr 0x146027020 <col:6> 'int *' lvalue ParmVar 0x14600df38 'num_skipped' 'int *'
    | `-BinaryOperator 0x1460270e0 <line:20:3, col:18> 'int' '='
    |   |-UnaryOperator 0x146027090 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x146027078 <col:4> 'int *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x146027058 <col:4> 'int *' lvalue ParmVar 0x14600df38 'num_skipped' 'int *'
    |   `-ImplicitCastExpr 0x1460270c8 <col:18> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1460270a8 <col:18> 'int' lvalue Var 0x14600e378 'n' 'int'
    `-ReturnStmt 0x1460271c8 <line:21:2, col:18>
      `-ImplicitCastExpr 0x1460271b0 <col:9, col:18> 'int' <IntegralCast>
        `-BinaryOperator 0x146027190 <col:9, col:18> 'long' '-'
          |-ImplicitCastExpr 0x146027160 <col:9> 'unsigned char *' <LValueToRValue>
          | `-DeclRefExpr 0x146027120 <col:9> 'unsigned char *' lvalue ParmVar 0x14600dd08 'buffer' 'unsigned char *'
          `-ImplicitCastExpr 0x146027178 <col:18> 'unsigned char *' <LValueToRValue>
            `-DeclRefExpr 0x146027140 <col:18> 'unsigned char *' lvalue Var 0x146026630 'buffer0' 'unsigned char *'
