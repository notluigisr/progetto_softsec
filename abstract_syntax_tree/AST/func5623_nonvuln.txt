TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b126000 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-FunctionDecl 0x13b1281a8 <dataset_diviso_filec/func5623_nonvuln.c:1:1, line:20:1> line:1:1 getmntoptfile 'int (const char *)'
| |-ParmVarDecl 0x13b1280d8 <col:16, col:28> col:28 used file 'const char *'
| `-CompoundStmt 0x13b1422e0 <col:34, line:20:1>
|   |-DeclStmt 0x13b128520 <line:2:2, col:28>
|   | |-RecordDecl 0x13b1282a0 <col:2, col:9> col:9 struct mntentchn
|   | |-VarDecl 0x13b128408 <col:2, col:20> col:20 used mc 'struct mntentchn *'
|   | `-VarDecl 0x13b128498 <col:2, col:25> col:25 used mc0 'struct mntentchn *'
|   |-DeclStmt 0x13b128650 <line:3:2, col:22>
|   | |-VarDecl 0x13b128550 <col:2, col:14> col:14 used opts 'const char *'
|   | `-VarDecl 0x13b1285d0 <col:2, col:21> col:21 used s 'const char *'
|   |-DeclStmt 0x13b1286e8 <line:4:2, col:7>
|   | `-VarDecl 0x13b128680 <col:2, col:6> col:6 used l 'int'
|   |-IfStmt 0x13b1287b0 <line:6:2, line:7:10>
|   | |-UnaryOperator 0x13b128738 <line:6:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13b128720 <col:7> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13b128700 <col:7> 'const char *' lvalue ParmVar 0x13b1280d8 'file' 'const char *'
|   | `-ReturnStmt 0x13b1287a0 <line:7:3, col:10>
|   |   `-RecoveryExpr 0x13b128780 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13b1410d0 <line:9:2, col:17> 'int' '='
|   | |-DeclRefExpr 0x13b1287d0 <col:2> 'int' lvalue Var 0x13b128680 'l' 'int'
|   | `-ImplicitCastExpr 0x13b1410b8 <col:6, col:17> 'int' <IntegralCast>
|   |   `-CallExpr 0x13b141078 <col:6, col:17> 'unsigned long'
|   |     |-ImplicitCastExpr 0x13b141060 <col:6> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b140fd0 <col:6> 'unsigned long (const char *)' Function 0x13b140e60 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x13b1410a0 <col:13> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13b140ff0 <col:13> 'const char *' lvalue ParmVar 0x13b1280d8 'file' 'const char *'
|   |-BinaryOperator 0x13b1412c0 <line:11:2, col:18> 'struct mntentchn *' '='
|   | |-DeclRefExpr 0x13b1410f0 <col:2> 'struct mntentchn *' lvalue Var 0x13b128498 'mc0' 'struct mntentchn *'
|   | `-ImplicitCastExpr 0x13b1412a8 <col:8, col:18> 'struct mntentchn *' <IntegralToPointer>
|   |   `-CallExpr 0x13b141288 <col:8, col:18> 'int'
|   |     `-ImplicitCastExpr 0x13b141270 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x13b141220 <col:8> 'int ()' Function 0x13b141168 'mtab_head' 'int ()'
|   |-ForStmt 0x13b142260 <line:12:2, line:18:11>
|   | |-BinaryOperator 0x13b141360 <line:12:7, col:17> 'struct mntentchn *' contains-errors '='
|   | | |-DeclRefExpr 0x13b1412e0 <col:7> 'struct mntentchn *' lvalue Var 0x13b128408 'mc' 'struct mntentchn *'
|   | | `-RecoveryExpr 0x13b141338 <col:12, col:17> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13b141300 <col:12> 'struct mntentchn *' lvalue Var 0x13b128498 'mc0' 'struct mntentchn *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13b141448 <col:22, col:34> 'int' '&&'
|   | | |-ImplicitCastExpr 0x13b141430 <col:22> 'struct mntentchn *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13b141380 <col:22> 'struct mntentchn *' lvalue Var 0x13b128408 'mc' 'struct mntentchn *'
|   | | `-BinaryOperator 0x13b141410 <col:28, col:34> 'int' '!='
|   | |   |-ImplicitCastExpr 0x13b1413e0 <col:28> 'struct mntentchn *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13b1413a0 <col:28> 'struct mntentchn *' lvalue Var 0x13b128408 'mc' 'struct mntentchn *'
|   | |   `-ImplicitCastExpr 0x13b1413f8 <col:34> 'struct mntentchn *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13b1413c0 <col:34> 'struct mntentchn *' lvalue Var 0x13b128498 'mc0' 'struct mntentchn *'
|   | |-BinaryOperator 0x13b1414e8 <col:39, col:48> 'struct mntentchn *' contains-errors '='
|   | | |-DeclRefExpr 0x13b141468 <col:39> 'struct mntentchn *' lvalue Var 0x13b128408 'mc' 'struct mntentchn *'
|   | | `-RecoveryExpr 0x13b1414c0 <col:44, col:48> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13b141488 <col:44> 'struct mntentchn *' lvalue Var 0x13b128408 'mc' 'struct mntentchn *'
|   | `-IfStmt 0x13b142240 <line:13:3, line:18:11>
|   |   |-BinaryOperator 0x13b80abb8 <line:13:7, line:17:39> 'int' contains-errors '&&'
|   |   | |-BinaryOperator 0x13b80a9d8 <line:13:7, line:16:36> 'int' contains-errors '&&'
|   |   | | |-BinaryOperator 0x13b80a8a0 <line:13:7, line:15:31> 'int' contains-errors '&&'
|   |   | | | |-BinaryOperator 0x13b80a768 <line:13:7, line:14:34> 'int' contains-errors '&&'
|   |   | | | | |-BinaryOperator 0x13b80a630 <line:13:7, col:34> 'int' contains-errors '!='
|   |   | | | | | |-ParenExpr 0x13b1415f0 <col:7, col:29> 'const char *' contains-errors
|   |   | | | | | | `-BinaryOperator 0x13b1415d0 <col:8, col:21> 'const char *' contains-errors '='
|   |   | | | | | |   |-DeclRefExpr 0x13b141508 <col:8> 'const char *' lvalue Var 0x13b128550 'opts' 'const char *'
|   |   | | | | | |   `-CXXDependentScopeMemberExpr 0x13b141588 <col:15, col:21> '<dependent type>' contains-errors lvalue .mnt_opts
|   |   | | | | | |     `-RecoveryExpr 0x13b141560 <col:15, col:19> '<dependent type>' contains-errors lvalue
|   |   | | | | | |       `-DeclRefExpr 0x13b141528 <col:15> 'struct mntentchn *' lvalue Var 0x13b128408 'mc' 'struct mntentchn *'
|   |   | | | | | `-RecoveryExpr 0x13b80a610 <col:34> '<dependent type>' contains-errors lvalue
|   |   | | | | `-ParenExpr 0x13b80a748 <line:14:10, col:34> 'const char *'
|   |   | | | |   `-BinaryOperator 0x13b80a728 <col:11, col:33> 'const char *' '='
|   |   | | | |     |-DeclRefExpr 0x13b141648 <col:11> 'const char *' lvalue Var 0x13b1285d0 's' 'const char *'
|   |   | | | |     `-ImplicitCastExpr 0x13b80a710 <col:15, col:33> 'const char *' <NoOp>
|   |   | | | |       `-CallExpr 0x13b80a698 <col:15, col:33> 'char *'
|   |   | | | |         |-ImplicitCastExpr 0x13b80a680 <col:15> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | |         | `-DeclRefExpr 0x13b141890 <col:15> 'char *(const char *, const char *)' Function 0x13b1416b0 'strstr' 'char *(const char *, const char *)'
|   |   | | | |         |-ImplicitCastExpr 0x13b80a6c8 <col:22> 'const char *' <LValueToRValue>
|   |   | | | |         | `-DeclRefExpr 0x13b1418b0 <col:22> 'const char *' lvalue Var 0x13b128550 'opts' 'const char *'
|   |   | | | |         `-ImplicitCastExpr 0x13b80a6f8 <col:28> 'const char *' <NoOp>
|   |   | | | |           `-ImplicitCastExpr 0x13b80a6e0 <col:28> 'char *' <ArrayToPointerDecay>
|   |   | | | |             `-StringLiteral 0x13b141910 <col:28> 'char[4]' lvalue "STR"
|   |   | | | `-UnaryOperator 0x13b80a888 <line:15:10, col:31> 'int' prefix '!' cannot overflow
|   |   | | |   `-CallExpr 0x13b80a808 <col:11, col:31> 'int'
|   |   | | |     |-ImplicitCastExpr 0x13b80a7f0 <col:11> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x13b809f48 <col:11> 'int (const char *, const char *, unsigned long)' Function 0x13b809cf8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   | | |     |-BinaryOperator 0x13b80a7a0 <col:19, col:21> 'const char *' '+'
|   |   | | |     | |-ImplicitCastExpr 0x13b80a788 <col:19> 'const char *' <LValueToRValue>
|   |   | | |     | | `-DeclRefExpr 0x13b809f68 <col:19> 'const char *' lvalue Var 0x13b1285d0 's' 'const char *'
|   |   | | |     | `-IntegerLiteral 0x13b809f88 <col:21> 'int' 5
|   |   | | |     |-ImplicitCastExpr 0x13b80a840 <col:24> 'const char *' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x13b809fe0 <col:24> 'const char *' lvalue ParmVar 0x13b1280d8 'file' 'const char *'
|   |   | | |     `-ImplicitCastExpr 0x13b80a870 <col:30> 'unsigned long' <IntegralCast>
|   |   | | |       `-ImplicitCastExpr 0x13b80a858 <col:30> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x13b80a000 <col:30> 'int' lvalue Var 0x13b128680 'l' 'int'
|   |   | | `-ParenExpr 0x13b80a9b8 <line:16:10, col:36> 'int'
|   |   | |   `-BinaryOperator 0x13b80a998 <col:11, col:33> 'int' '||'
|   |   | |     |-BinaryOperator 0x13b80a8f0 <col:11, col:16> 'int' '=='
|   |   | |     | |-ImplicitCastExpr 0x13b80a8c0 <col:11> 'const char *' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x13b80a150 <col:11> 'const char *' lvalue Var 0x13b1285d0 's' 'const char *'
|   |   | |     | `-ImplicitCastExpr 0x13b80a8d8 <col:16> 'const char *' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x13b80a170 <col:16> 'const char *' lvalue Var 0x13b128550 'opts' 'const char *'
|   |   | |     `-BinaryOperator 0x13b80a978 <col:24, col:33> 'int' '=='
|   |   | |       |-ImplicitCastExpr 0x13b80a960 <col:24, col:28> 'int' <IntegralCast>
|   |   | |       | `-ImplicitCastExpr 0x13b80a948 <col:24, col:28> 'char' <LValueToRValue>
|   |   | |       |   `-ArraySubscriptExpr 0x13b80a928 <col:24, col:28> 'const char' lvalue
|   |   | |       |     |-ImplicitCastExpr 0x13b80a910 <col:24> 'const char *' <LValueToRValue>
|   |   | |       |     | `-DeclRefExpr 0x13b80a1e0 <col:24> 'const char *' lvalue Var 0x13b1285d0 's' 'const char *'
|   |   | |       |     `-UnaryOperator 0x13b80a220 <col:26, col:27> 'int' prefix '-'
|   |   | |       |       `-IntegerLiteral 0x13b80a200 <col:27> 'int' 1
|   |   | |       `-CharacterLiteral 0x13b80a270 <col:33> 'int' 44
|   |   | `-ParenExpr 0x13b80ab98 <line:17:10, col:39> 'int'
|   |   |   `-BinaryOperator 0x13b80ab78 <col:11, col:36> 'int' '||'
|   |   |     |-BinaryOperator 0x13b80aa98 <col:11, col:21> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x13b80aa80 <col:11, col:16> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x13b80aa68 <col:11, col:16> 'char' <LValueToRValue>
|   |   |     | |   `-ArraySubscriptExpr 0x13b80aa48 <col:11, col:16> 'const char' lvalue
|   |   |     | |     |-ImplicitCastExpr 0x13b80aa30 <col:11> 'const char *' <LValueToRValue>
|   |   |     | |     | `-DeclRefExpr 0x13b80a338 <col:11> 'const char *' lvalue Var 0x13b1285d0 's' 'const char *'
|   |   |     | |     `-BinaryOperator 0x13b80aa10 <col:13, col:15> 'int' '+'
|   |   |     | |       |-ImplicitCastExpr 0x13b80a9f8 <col:13> 'int' <LValueToRValue>
|   |   |     | |       | `-DeclRefExpr 0x13b80a358 <col:13> 'int' lvalue Var 0x13b128680 'l' 'int'
|   |   |     | |       `-IntegerLiteral 0x13b80a378 <col:15> 'int' 5
|   |   |     | `-IntegerLiteral 0x13b80a408 <col:21> 'int' 0
|   |   |     `-BinaryOperator 0x13b80ab58 <col:26, col:36> 'int' '=='
|   |   |       |-ImplicitCastExpr 0x13b80ab40 <col:26, col:31> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x13b80ab28 <col:26, col:31> 'char' <LValueToRValue>
|   |   |       |   `-ArraySubscriptExpr 0x13b80ab08 <col:26, col:31> 'const char' lvalue
|   |   |       |     |-ImplicitCastExpr 0x13b80aaf0 <col:26> 'const char *' <LValueToRValue>
|   |   |       |     | `-DeclRefExpr 0x13b80a478 <col:26> 'const char *' lvalue Var 0x13b1285d0 's' 'const char *'
|   |   |       |     `-BinaryOperator 0x13b80aad0 <col:28, col:30> 'int' '+'
|   |   |       |       |-ImplicitCastExpr 0x13b80aab8 <col:28> 'int' <LValueToRValue>
|   |   |       |       | `-DeclRefExpr 0x13b80a498 <col:28> 'int' lvalue Var 0x13b128680 'l' 'int'
|   |   |       |       `-IntegerLiteral 0x13b80a4b8 <col:30> 'int' 5
|   |   |       `-CharacterLiteral 0x13b80a548 <col:36> 'int' 44
|   |   `-ReturnStmt 0x13b142230 <line:18:4, col:11>
|   |     `-ImplicitCastExpr 0x13b142218 <col:11> 'int' <PointerToIntegral>
|   |       `-ImplicitCastExpr 0x13b142200 <col:11> 'struct mntentchn *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13b80abd8 <col:11> 'struct mntentchn *' lvalue Var 0x13b128408 'mc' 'struct mntentchn *'
|   `-ReturnStmt 0x13b1422d0 <line:19:2, col:9>
|     `-RecoveryExpr 0x13b1422b0 <col:9> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x13b140e60 <line:9:6> col:6 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13b140f60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b140f08 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x13b1416b0 <line:14:15> col:15 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x13b1417b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13b141818 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b141758 <<invalid sloc>> Implicit 898
`-FunctionDecl 0x13b809cf8 <line:15:11> col:11 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x13b809df8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13b809e60 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13b809ec8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13b809da0 <<invalid sloc>> Implicit 888
