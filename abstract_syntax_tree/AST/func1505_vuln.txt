TranslationUnitDecl 0x105038e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x105039cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1050393d0 '__int128'
|-TypedefDecl 0x105039d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1050393f0 'unsigned __int128'
|-TypedefDecl 0x106808430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x106808200 'struct __NSConstantString_tag'
|   `-Record 0x105039d80 '__NSConstantString_tag'
|-TypedefDecl 0x106808498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x105039590 '__SVInt8_t'
|-TypedefDecl 0x106808500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1050395b0 '__SVInt16_t'
|-TypedefDecl 0x106808568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1050395d0 '__SVInt32_t'
|-TypedefDecl 0x1068085d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1050395f0 '__SVInt64_t'
|-TypedefDecl 0x106808638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x105039610 '__SVUint8_t'
|-TypedefDecl 0x1068086a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x105039630 '__SVUint16_t'
|-TypedefDecl 0x106808708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x105039650 '__SVUint32_t'
|-TypedefDecl 0x106808770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x105039670 '__SVUint64_t'
|-TypedefDecl 0x1068087d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x105039690 '__SVFloat16_t'
|-TypedefDecl 0x106808840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1050396b0 '__SVFloat32_t'
|-TypedefDecl 0x1068088a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1050396d0 '__SVFloat64_t'
|-TypedefDecl 0x106808910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1050396f0 '__SVBfloat16_t'
|-TypedefDecl 0x106808978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x105039710 '__clang_svint8x2_t'
|-TypedefDecl 0x1068089e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x105039730 '__clang_svint16x2_t'
|-TypedefDecl 0x106808a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x105039750 '__clang_svint32x2_t'
|-TypedefDecl 0x106808ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x105039770 '__clang_svint64x2_t'
|-TypedefDecl 0x106808b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x105039790 '__clang_svuint8x2_t'
|-TypedefDecl 0x106808b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1050397b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x106808be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1050397d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x106808c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1050397f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x106808cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x105039810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x106808d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x105039830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x106808d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x105039850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x106808df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x105039870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x106808e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x105039890 '__clang_svint8x3_t'
|-TypedefDecl 0x106808ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1050398b0 '__clang_svint16x3_t'
|-TypedefDecl 0x106808f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1050398d0 '__clang_svint32x3_t'
|-TypedefDecl 0x106808f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1050398f0 '__clang_svint64x3_t'
|-TypedefDecl 0x106808ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x105039910 '__clang_svuint8x3_t'
|-TypedefDecl 0x106809060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x105039930 '__clang_svuint16x3_t'
|-TypedefDecl 0x1068090c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x105039950 '__clang_svuint32x3_t'
|-TypedefDecl 0x106809130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x105039970 '__clang_svuint64x3_t'
|-TypedefDecl 0x106809198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x105039990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x107008600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1050399b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x107008668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1050399d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1070086d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1050399f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x107008738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x105039a10 '__clang_svint8x4_t'
|-TypedefDecl 0x1070087a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x105039a30 '__clang_svint16x4_t'
|-TypedefDecl 0x107008808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x105039a50 '__clang_svint32x4_t'
|-TypedefDecl 0x107008870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x105039a70 '__clang_svint64x4_t'
|-TypedefDecl 0x1070088d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x105039a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x107008940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x105039ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1070089a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x105039ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x107008a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x105039af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x107008a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x105039b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x107008ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x105039b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x107008b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x105039b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x107008bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x105039b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x107008c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x105039b90 '__SVBool_t'
|-TypedefDecl 0x107008c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x105039bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x107008ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x105039bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x107008d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x105039bf0 '__SVCount_t'
|-TypedefDecl 0x107008df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x107008db0 'char *'
|   `-BuiltinType 0x105038eb0 'char'
|-TypedefDecl 0x107008e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x107008db0 'char *'
|   `-BuiltinType 0x105038eb0 'char'
|-FunctionDecl 0x1070090c8 <dataset_diviso_filec/func1505_vuln.c:1:1, line:27:1> line:1:1 bind_unix_address 'int (int, const char *, int)'
| |-ParmVarDecl 0x107008ed8 <col:19, col:23> col:23 used sock_fd 'int'
| |-ParmVarDecl 0x107008f58 <col:32, col:44> col:44 used addr 'const char *'
| |-ParmVarDecl 0x107008fd8 <col:50, col:54> col:54 used flags 'int'
| `-CompoundStmt 0x10680de00 <line:2:1, line:27:1>
|   |-DeclStmt 0x106809db8 <line:3:3, col:27>
|   | |-RecordDecl 0x1070091d0 <col:3, col:9> col:9 union sockaddr_all
|   | `-VarDecl 0x1070092c8 <col:3, col:22> col:22 referenced invalid saddr 'union sockaddr_all'
|   |-IfStmt 0x10680a6f8 <line:5:3, line:9:3>
|   | |-BinaryOperator 0x10680a450 <line:5:7, line:6:32> 'int' contains-errors '>='
|   | | |-CallExpr 0x10680a320 <line:5:7, col:74> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x10680a0a8 <col:7> 'int (char *, unsigned long, const char *, ...)' Function 0x106809e20 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | | | |-CXXDependentScopeMemberExpr 0x10680a130 <col:16, col:25> '<dependent type>' contains-errors lvalue .sun_path
|   | | | | `-CXXDependentScopeMemberExpr 0x10680a0e8 <col:16, col:22> '<dependent type>' contains-errors lvalue .un
|   | | | |   `-RecoveryExpr 0x10680a0c8 <col:16> '<dependent type>' contains-errors lvalue
|   | | | |-UnaryExprOrTypeTraitExpr 0x10680a248 <col:35, col:60> 'unsigned long' contains-errors sizeof
|   | | | | `-ParenExpr 0x10680a228 <col:42, col:60> '<dependent type>' contains-errors lvalue
|   | | | |   `-CXXDependentScopeMemberExpr 0x10680a1e0 <col:43, col:52> '<dependent type>' contains-errors lvalue .sun_path
|   | | | |     `-CXXDependentScopeMemberExpr 0x10680a198 <col:43, col:49> '<dependent type>' contains-errors lvalue .un
|   | | | |       `-RecoveryExpr 0x10680a178 <col:43> '<dependent type>' contains-errors lvalue
|   | | | |-StringLiteral 0x10680a2b0 <col:63> 'char[4]' lvalue "STR"
|   | | | `-DeclRefExpr 0x10680a2d0 <col:70> 'const char *' lvalue ParmVar 0x107008f58 'addr' 'const char *'
|   | | `-UnaryExprOrTypeTraitExpr 0x10680a430 <line:6:7, col:32> 'unsigned long' contains-errors sizeof
|   | |   `-ParenExpr 0x10680a410 <col:14, col:32> '<dependent type>' contains-errors lvalue
|   | |     `-CXXDependentScopeMemberExpr 0x10680a3c8 <col:15, col:24> '<dependent type>' contains-errors lvalue .sun_path
|   | |       `-CXXDependentScopeMemberExpr 0x10680a380 <col:15, col:21> '<dependent type>' contains-errors lvalue .un
|   | |         `-RecoveryExpr 0x10680a360 <col:15> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x10680a6d8 <col:35, line:9:3>
|   |   |-CallExpr 0x10680a648 <line:7:5, col:26> 'int'
|   |   | |-ImplicitCastExpr 0x10680a630 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x10680a5a0 <col:5> 'int ()' Function 0x10680a4e8 'DEBUG_LOG' 'int ()'
|   |   | |-ImplicitCastExpr 0x10680a678 <col:15> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x10680a5c0 <col:15> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x10680a690 <col:22> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x10680a5e0 <col:22> 'const char *' lvalue ParmVar 0x107008f58 'addr' 'const char *'
|   |   `-ReturnStmt 0x10680a6c8 <line:8:5, col:12>
|   |     `-IntegerLiteral 0x10680a6a8 <col:12> 'int' 0
|   |-BinaryOperator 0x10680a848 <line:10:3, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x10680a7a8 <col:3, col:12> '<dependent type>' contains-errors lvalue .sun_family
|   | | `-CXXDependentScopeMemberExpr 0x10680a760 <col:3, col:9> '<dependent type>' contains-errors lvalue .un
|   | |   `-RecoveryExpr 0x10680a738 <col:3> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x10680a718 <col:3> 'union sockaddr_all' lvalue Var 0x1070092c8 'saddr' 'union sockaddr_all'
|   | `-RecoveryExpr 0x10680a828 <col:25> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x10680a9a0 <line:12:3, col:14> 'int'
|   | |-ImplicitCastExpr 0x10680a988 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x10680a948 <col:3> 'int ()' Function 0x10680a890 'unlink' 'int ()'
|   | `-ImplicitCastExpr 0x10680a9c8 <col:10> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x10680a968 <col:10> 'const char *' lvalue ParmVar 0x107008f58 'addr' 'const char *'
|   |-IfStmt 0x10680d860 <line:15:3, line:18:3>
|   | |-BinaryOperator 0x10680d498 <line:15:7, col:53> 'int' contains-errors '<'
|   | | |-CallExpr 0x10680d440 <col:7, col:49> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x10680aac0 <col:7> 'int ()' Function 0x10680aa08 'bind' 'int ()'
|   | | | |-DeclRefExpr 0x10680aae0 <col:12> 'int' lvalue ParmVar 0x107008ed8 'sock_fd' 'int'
|   | | | |-UnaryOperator 0x10680ab68 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-CXXDependentScopeMemberExpr 0x10680ab20 <col:22, col:28> '<dependent type>' contains-errors lvalue .sa
|   | | | |   `-RecoveryExpr 0x10680ab00 <col:22> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryExprOrTypeTraitExpr 0x10680d420 <col:32, col:48> 'unsigned long' contains-errors sizeof
|   | | |   `-ParenExpr 0x10680d400 <col:39, col:48> '<dependent type>' contains-errors lvalue
|   | | |     `-CXXDependentScopeMemberExpr 0x10680aba0 <col:40, col:46> '<dependent type>' contains-errors lvalue .un
|   | | |       `-RecoveryExpr 0x10680ab80 <col:40> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x10680d478 <col:53> 'int' 0
|   | `-CompoundStmt 0x10680d840 <col:56, line:18:3>
|   |   |-CallExpr 0x10680d7d8 <line:16:5, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x10680d4b8 <col:5> 'int ()' Function 0x10680a4e8 'DEBUG_LOG' 'int ()'
|   |   | |-StringLiteral 0x10680d4d8 <col:15> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x10680d4f8 <col:22> 'const char *' lvalue ParmVar 0x107008f58 'addr' 'const char *'
|   |   | `-CallExpr 0x10680d7b0 <col:28, col:42> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x10680d6c8 <col:28> 'char *(int)' Function 0x10680d558 'strerror' 'char *(int)'
|   |   |   `-RecoveryExpr 0x10680d778 <col:37> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x10680d830 <line:17:5, col:12>
|   |     `-IntegerLiteral 0x10680d810 <col:12> 'int' 0
|   |-IfStmt 0x10680ddb0 <line:21:3, line:24:3>
|   | |-BinaryOperator 0x10680db98 <line:21:7, col:63> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x10680daf8 <col:7, col:15> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x10680d880 <col:7> 'int' lvalue ParmVar 0x107008fd8 'flags' 'int'
|   | | | `-RecoveryExpr 0x10680dad8 <col:15> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x10680db78 <col:43, col:63> 'int' '<'
|   | |   |-CallExpr 0x10680db30 <col:43, col:59> 'int'
|   | |   | |-ImplicitCastExpr 0x10680db18 <col:43> 'int (*)()' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x10680d9b8 <col:43> 'int ()' Function 0x10680d900 'chmod' 'int ()'
|   | |   | |-ImplicitCastExpr 0x10680db60 <col:49> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x10680d9d8 <col:49> 'const char *' lvalue ParmVar 0x107008f58 'addr' 'const char *'
|   | |   | `-IntegerLiteral 0x10680d9f8 <col:55> 'int' 438
|   | |   `-IntegerLiteral 0x10680da78 <col:63> 'int' 0
|   | `-CompoundStmt 0x10680dd90 <col:66, line:24:3>
|   |   |-CallExpr 0x10680dd28 <line:22:5, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x10680dbb8 <col:5> 'int ()' Function 0x10680a4e8 'DEBUG_LOG' 'int ()'
|   |   | |-StringLiteral 0x10680dbd8 <col:15> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x10680dbf8 <col:22> 'const char *' lvalue ParmVar 0x107008f58 'addr' 'const char *'
|   |   | `-CallExpr 0x10680dd00 <col:28, col:42> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x10680dc18 <col:28> 'char *(int)' Function 0x10680d558 'strerror' 'char *(int)'
|   |   |   `-RecoveryExpr 0x10680dcc8 <col:37> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x10680dd80 <line:23:5, col:12>
|   |     `-IntegerLiteral 0x10680dd60 <col:12> 'int' 0
|   `-ReturnStmt 0x10680ddf0 <line:26:3, col:10>
|     `-IntegerLiteral 0x10680ddd0 <col:10> 'int' 1
|-FunctionDecl 0x106809e20 <line:5:7> col:7 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x106809f20 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x106809f88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x106809ff0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x106809ec8 <<invalid sloc>> Implicit 905
| `-FormatAttr 0x10680a070 <col:7> Implicit printf 3 4
`-FunctionDecl 0x10680d558 <line:16:28> col:28 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x10680d658 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x10680d600 <<invalid sloc>> Implicit 901
