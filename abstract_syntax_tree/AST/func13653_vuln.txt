TranslationUnitDecl 0x143055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1430564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x143055bd0 '__int128'
|-TypedefDecl 0x143056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x143055bf0 'unsigned __int128'
|-TypedefDecl 0x143126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x143126000 'struct __NSConstantString_tag'
|   `-Record 0x143056580 '__NSConstantString_tag'
|-TypedefDecl 0x143126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x143055d90 '__SVInt8_t'
|-TypedefDecl 0x143126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x143055db0 '__SVInt16_t'
|-TypedefDecl 0x143126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x143055dd0 '__SVInt32_t'
|-TypedefDecl 0x1431263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x143055df0 '__SVInt64_t'
|-TypedefDecl 0x143126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x143055e10 '__SVUint8_t'
|-TypedefDecl 0x1431264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x143055e30 '__SVUint16_t'
|-TypedefDecl 0x143126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x143055e50 '__SVUint32_t'
|-TypedefDecl 0x143126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x143055e70 '__SVUint64_t'
|-TypedefDecl 0x1431265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x143055e90 '__SVFloat16_t'
|-TypedefDecl 0x143126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x143055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1431266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x143055ed0 '__SVFloat64_t'
|-TypedefDecl 0x143126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x143055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x143126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x143055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1431267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x143055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x143126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x143055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1431268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x143055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x143126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x143055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x143126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x143055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1431269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x143055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x143126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x143055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x143126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x143056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x143126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x143056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x143126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x143056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x143126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x143056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x143126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x143056090 '__clang_svint8x3_t'
|-TypedefDecl 0x143126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1430560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x143126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1430560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x143126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1430560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x143126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x143056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x143126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x143056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x143126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x143056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x143126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x143056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x143126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x143056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x143127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1430561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x143127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1430561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1431278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1430561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x143127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x143056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1431279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x143056230 '__clang_svint16x4_t'
|-TypedefDecl 0x143127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x143056250 '__clang_svint32x4_t'
|-TypedefDecl 0x143127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x143056270 '__clang_svint64x4_t'
|-TypedefDecl 0x143127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x143056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x143127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1430562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x143127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1430562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x143127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1430562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x143127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x143056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x143127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x143056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x143127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x143056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x143127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x143056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x143127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x143056390 '__SVBool_t'
|-TypedefDecl 0x143127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1430563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x143127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1430563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x143127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1430563f0 '__SVCount_t'
|-TypedefDecl 0x143127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x143127fb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-TypedefDecl 0x143128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x143127fb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
`-FunctionDecl 0x143140b48 <dataset_diviso_filec/func13653_vuln.c:1:1, line:47:1> line:1:1 nsim_bpf_map_alloc 'int (struct netdevsim *, struct bpf_offloaded_map *)'
  |-ParmVarDecl 0x143128648 <col:20, col:38> col:38 used ns 'struct netdevsim *'
  |-ParmVarDecl 0x143140a28 <col:42, col:68> col:68 used offmap 'struct bpf_offloaded_map *'
  `-CompoundStmt 0x1431442b8 <line:2:1, line:47:1>
    |-DeclStmt 0x143140e38 <line:3:2, col:33>
    | |-RecordDecl 0x143140c48 <col:2, col:9> col:9 struct nsim_bpf_bound_map
    | `-VarDecl 0x143140db8 <col:2, col:29> col:29 used nmap 'struct nsim_bpf_bound_map *'
    |-DeclStmt 0x143140f68 <line:4:2, col:12>
    | |-VarDecl 0x143140e68 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x143140ee8 <col:2, col:9> col:9 used err 'int'
    |-IfStmt 0x143141448 <line:6:2, line:8:11>
    | |-CallExpr 0x143141378 <line:6:6, line:7:48> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1431410b0 <line:6:6> 'int ()' Function 0x143140ff8 'WARN_ON' 'int ()'
    | | `-BinaryOperator 0x143141358 <col:14, line:7:31> 'int' contains-errors '&&'
    | |   |-BinaryOperator 0x1431412f8 <line:6:14, col:38> 'int' contains-errors '!='
    | |   | |-CXXDependentScopeMemberExpr 0x143141130 <col:14, col:26> '<dependent type>' contains-errors lvalue .map_type
    | |   | | `-RecoveryExpr 0x143141108 <col:14, col:22> '<dependent type>' contains-errors lvalue
    | |   | |   `-DeclRefExpr 0x1431410d0 <col:14> 'struct bpf_offloaded_map *' lvalue ParmVar 0x143140a28 'offmap' 'struct bpf_offloaded_map *'
    | |   | `-RecoveryExpr 0x1431412d8 <col:38> '<dependent type>' contains-errors lvalue
    | |   `-BinaryOperator 0x143141338 <line:7:7, col:31> 'int' contains-errors '!='
    | |     |-CXXDependentScopeMemberExpr 0x143141210 <col:7, col:19> '<dependent type>' contains-errors lvalue .map_type
    | |     | `-RecoveryExpr 0x1431411e8 <col:7, col:15> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x1431411b0 <col:7> 'struct bpf_offloaded_map *' lvalue ParmVar 0x143140a28 'offmap' 'struct bpf_offloaded_map *'
    | |     `-RecoveryExpr 0x143141318 <col:31> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x143141438 <line:8:3, col:11>
    |   `-UnaryOperator 0x143141420 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x143141408 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1431413e8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x143141630 <line:9:2, line:10:11>
    | |-BinaryOperator 0x143141568 <line:9:6, col:32> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x1431414c8 <col:6, col:18> '<dependent type>' contains-errors lvalue .max_entries
    | | | `-RecoveryExpr 0x1431414a0 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x143141468 <col:6> 'struct bpf_offloaded_map *' lvalue ParmVar 0x143140a28 'offmap' 'struct bpf_offloaded_map *'
    | | `-RecoveryExpr 0x143141548 <col:32> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x143141620 <line:10:3, col:11>
    |   `-UnaryOperator 0x143141608 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1431415f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1431415d0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1431417a0 <line:11:2, line:12:11>
    | |-CXXDependentScopeMemberExpr 0x1431416b0 <line:11:6, col:18> '<dependent type>' contains-errors lvalue .map_flags
    | | `-RecoveryExpr 0x143141688 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x143141650 <col:6> 'struct bpf_offloaded_map *' lvalue ParmVar 0x143140a28 'offmap' 'struct bpf_offloaded_map *'
    | `-ReturnStmt 0x143141790 <line:12:3, col:11>
    |   `-UnaryOperator 0x143141778 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x143141760 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x143141740 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x143142060 <line:15:2, line:16:11>
    | |-UnaryOperator 0x1431419a0 <line:15:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x143141988 <col:7> 'struct nsim_bpf_bound_map *' <LValueToRValue>
    | |   `-DeclRefExpr 0x143141968 <col:7> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    | `-ReturnStmt 0x143142050 <line:16:3, col:11>
    |   `-UnaryOperator 0x143142038 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x143142020 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x143142000 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x143142100 <line:18:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1431420b8 <col:2, col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x143142080 <col:2> 'struct bpf_offloaded_map *' lvalue ParmVar 0x143140a28 'offmap' 'struct bpf_offloaded_map *'
    | `-DeclRefExpr 0x1431420e0 <col:21> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    |-BinaryOperator 0x1431421a0 <line:19:2, col:13> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x143142158 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x143142120 <col:2> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    | `-DeclRefExpr 0x143142180 <col:13> 'struct netdevsim *' lvalue ParmVar 0x143128648 'ns' 'struct netdevsim *'
    |-BinaryOperator 0x143142240 <line:20:2, col:14> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1431421f8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1431421c0 <col:2> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    | `-DeclRefExpr 0x143142220 <col:14> 'struct bpf_offloaded_map *' lvalue ParmVar 0x143140a28 'offmap' 'struct bpf_offloaded_map *'
    |-CallExpr 0x1431423d8 <line:21:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x143142340 <col:2> 'int ()' Function 0x143142288 'mutex_init' 'int ()'
    | `-UnaryOperator 0x1431423c0 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x143142398 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x143142360 <col:14> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    |-IfStmt 0x143142bc0 <line:23:2, line:33:2>
    | |-RecoveryExpr 0x1431424a8 <line:23:6, col:30> '_Bool' contains-errors
    | `-CompoundStmt 0x143142ba8 <col:50, line:33:2>
    |   `-ForStmt 0x143142b70 <line:24:3, line:32:3>
    |     |-BinaryOperator 0x143142508 <line:24:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x1431424c8 <col:8> 'int' lvalue Var 0x143140e68 'i' 'int'
    |     | `-IntegerLiteral 0x1431424e8 <col:12> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1431426d0 <col:15, col:41> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x143142528 <col:15> 'int' lvalue Var 0x143140e68 'i' 'int'
    |     | `-CallExpr 0x1431426a8 <col:19, col:41> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x143142628 <col:19> 'int ()' Function 0x143142570 'ARRAY_SIZE' 'int ()'
    |     |   `-RecoveryExpr 0x143142680 <col:30, col:36> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x143142648 <col:30> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    |     |-UnaryOperator 0x143142710 <col:44, col:45> 'int' postfix '++'
    |     | `-DeclRefExpr 0x1431426f0 <col:44> 'int' lvalue Var 0x143140e68 'i' 'int'
    |     `-CompoundStmt 0x143142b50 <col:49, line:32:3>
    |       |-BinaryOperator 0x143142938 <line:27:4, col:39> 'int' '='
    |       | |-DeclRefExpr 0x143142728 <col:4> 'int' lvalue Var 0x143140ee8 'err' 'int'
    |       | `-CallExpr 0x1431428d8 <col:10, col:39> 'int'
    |       |   |-ImplicitCastExpr 0x1431428c0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x143142828 <col:10> 'int ()' Function 0x143142770 'nsim_map_alloc_elem' 'int ()'
    |       |   |-ImplicitCastExpr 0x143142908 <col:30> 'struct bpf_offloaded_map *' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x143142848 <col:30> 'struct bpf_offloaded_map *' lvalue ParmVar 0x143140a28 'offmap' 'struct bpf_offloaded_map *'
    |       |   `-ImplicitCastExpr 0x143142920 <col:38> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x143142868 <col:38> 'int' lvalue Var 0x143140e68 'i' 'int'
    |       `-IfStmt 0x1431429f8 <line:28:4, line:29:10>
    |         |-ImplicitCastExpr 0x143142978 <line:28:8> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x143142958 <col:8> 'int' lvalue Var 0x143140ee8 'err' 'int'
    |         `-GotoStmt 0x1431429e0 <line:29:5, col:10> 'err_free' 0x143142990
    |-CallExpr 0x143142e78 <line:36:2, col:55> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x143142d20 <col:2> 'int ()' Function 0x143142c68 'list_add_tail' 'int ()'
    | |-UnaryOperator 0x143142da0 <col:16, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x143142d78 <col:17, col:23> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x143142d40 <col:17> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    | `-UnaryOperator 0x143142e60 <col:26, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x143142e18 <col:27, col:41> '<dependent type>' contains-errors lvalue ->bpf_bound_maps
    |     `-RecoveryExpr 0x143142df0 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x143142db8 <col:27> 'struct netdevsim *' lvalue ParmVar 0x143128648 'ns' 'struct netdevsim *'
    |-ReturnStmt 0x143142ec8 <line:38:2, col:9>
    | `-IntegerLiteral 0x143142ea8 <col:9> 'int' 0
    |-LabelStmt 0x1431441b8 <line:40:1, line:44:2> 'err_free'
    | `-WhileStmt 0x143144198 <line:41:2, line:44:2>
    |   |-BinaryOperator 0x143142f30 <line:41:9, col:16> 'int' '>='
    |   | |-UnaryOperator 0x143142ef8 <col:9, col:11> 'int' prefix '--'
    |   | | `-DeclRefExpr 0x143142ed8 <col:11> 'int' lvalue Var 0x143140e68 'i' 'int'
    |   | `-IntegerLiteral 0x143142f10 <col:16> 'int' 0
    |   `-CompoundStmt 0x143144178 <col:19, line:44:2>
    |     |-CallExpr 0x143143ff0 <line:42:3, col:27> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x143143eb8 <col:3> 'int ()' Function 0x143143e00 'kfree' 'int ()'
    |     | `-CXXDependentScopeMemberExpr 0x143143fa8 <col:9, col:24> '<dependent type>' contains-errors lvalue .key
    |     |   `-ArraySubscriptExpr 0x143143f88 <col:9, col:22> '<dependent type>' contains-errors lvalue
    |     |     |-ImplicitCastExpr 0x143143f58 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | `-RecoveryExpr 0x143143f10 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |     |     |   `-DeclRefExpr 0x143143ed8 <col:9> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    |     |     `-ImplicitCastExpr 0x143143f70 <col:21> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x143143f38 <col:21> 'int' lvalue Var 0x143140e68 'i' 'int'
    |     `-CallExpr 0x143144150 <line:43:3, col:29> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x143144018 <col:3> 'int ()' Function 0x143143e00 'kfree' 'int ()'
    |       `-CXXDependentScopeMemberExpr 0x143144108 <col:9, col:24> '<dependent type>' contains-errors lvalue .value
    |         `-ArraySubscriptExpr 0x1431440e8 <col:9, col:22> '<dependent type>' contains-errors lvalue
    |           |-ImplicitCastExpr 0x1431440b8 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |           | `-RecoveryExpr 0x143144070 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |           |   `-DeclRefExpr 0x143144038 <col:9> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    |           `-ImplicitCastExpr 0x1431440d0 <col:21> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x143144098 <col:21> 'int' lvalue Var 0x143140e68 'i' 'int'
    |-CallExpr 0x143144230 <line:45:2, col:12> 'int'
    | |-ImplicitCastExpr 0x143144218 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1431441d8 <col:2> 'int ()' Function 0x143143e00 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x143144258 <col:8> 'struct nsim_bpf_bound_map *' <LValueToRValue>
    |   `-DeclRefExpr 0x1431441f8 <col:8> 'struct nsim_bpf_bound_map *' lvalue Var 0x143140db8 'nmap' 'struct nsim_bpf_bound_map *'
    `-ReturnStmt 0x1431442a8 <line:46:2, col:9>
      `-ImplicitCastExpr 0x143144290 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x143144270 <col:9> 'int' lvalue Var 0x143140ee8 'err' 'int'
