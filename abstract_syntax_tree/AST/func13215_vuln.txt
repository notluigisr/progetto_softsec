TranslationUnitDecl 0x121055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1210564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x121055bd0 '__int128'
|-TypedefDecl 0x121056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x121055bf0 'unsigned __int128'
|-TypedefDecl 0x121126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x121126800 'struct __NSConstantString_tag'
|   `-Record 0x121056580 '__NSConstantString_tag'
|-TypedefDecl 0x121126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x121055d90 '__SVInt8_t'
|-TypedefDecl 0x121126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x121055db0 '__SVInt16_t'
|-TypedefDecl 0x121126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x121055dd0 '__SVInt32_t'
|-TypedefDecl 0x121126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x121055df0 '__SVInt64_t'
|-TypedefDecl 0x121126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x121055e10 '__SVUint8_t'
|-TypedefDecl 0x121126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x121055e30 '__SVUint16_t'
|-TypedefDecl 0x121126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x121055e50 '__SVUint32_t'
|-TypedefDecl 0x121126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x121055e70 '__SVUint64_t'
|-TypedefDecl 0x121126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x121055e90 '__SVFloat16_t'
|-TypedefDecl 0x121126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x121055eb0 '__SVFloat32_t'
|-TypedefDecl 0x121126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x121055ed0 '__SVFloat64_t'
|-TypedefDecl 0x121126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x121055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x121126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x121055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x121126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x121055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x121127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x121055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1211270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x121055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x121127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x121055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x121127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x121055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1211271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x121055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x121127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x121055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1211272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x121056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x121127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x121056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x121127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x121056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1211273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x121056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x121127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x121056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1211274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1210560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x121127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1210560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x121127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1210560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1211275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x121056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x121127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x121056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1211276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x121056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x121127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x121056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x121127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x121056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x121128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1210561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x121128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1210561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1211280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1210561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x121128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x121056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1211281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x121056230 '__clang_svint16x4_t'
|-TypedefDecl 0x121128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x121056250 '__clang_svint32x4_t'
|-TypedefDecl 0x121128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x121056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1211282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x121056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x121128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1210562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1211283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1210562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x121128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1210562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x121128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x121056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1211284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x121056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x121128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x121056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1211285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x121056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x121128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x121056390 '__SVBool_t'
|-TypedefDecl 0x121128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1210563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1211286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1210563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x121128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1210563f0 '__SVCount_t'
|-TypedefDecl 0x1211287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1211287b0 'char *'
|   `-BuiltinType 0x1210556b0 'char'
|-TypedefDecl 0x121128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1211287b0 'char *'
|   `-BuiltinType 0x1210556b0 'char'
|-FunctionDecl 0x121128be8 <dataset_diviso_filec/func13215_vuln.c:1:1, line:56:1> line:1:12 invalid bochs_open 'int (int *, int *, int, int **)' static
| |-ParmVarDecl 0x121128928 <col:23, col:41> col:41 referenced invalid bs 'int *'
| |-ParmVarDecl 0x1211289a8 <col:45, col:52> col:52 invalid options 'int *'
| |-ParmVarDecl 0x121128a28 <col:61, col:65> col:65 flags 'int'
| |-ParmVarDecl 0x121128ae0 <line:2:23, col:31> col:31 invalid errp 'int **'
| `-CompoundStmt 0x121145f00 <line:3:1, line:56:1>
|   |-DeclStmt 0x1211422e8 <line:6:5, col:30>
|   | |-RecordDecl 0x121128d30 <col:5, col:12> col:12 struct bochs_header
|   | `-VarDecl 0x121128e28 <col:5, col:25> col:25 invalid bochs 'struct bochs_header'
|   |-DeclStmt 0x121142380 <line:7:5, col:12>
|   | `-VarDecl 0x121142318 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x121142448 <line:9:5, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1211423e0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->read_only
|   | | `-RecoveryExpr 0x1211423b8 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x121142398 <col:5> 'int *' lvalue ParmVar 0x121128928 'bs' 'int *'
|   | `-IntegerLiteral 0x121142428 <col:21> 'int' 1
|   |-BinaryOperator 0x121142760 <line:11:5, col:56> 'int' contains-errors '='
|   | |-DeclRefExpr 0x121142468 <col:5> 'int' lvalue Var 0x121142318 'ret' 'int'
|   | `-CallExpr 0x121142720 <col:11, col:56> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1211425e0 <col:11> 'int ()' Function 0x121142528 'bdrv_pread' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x121142620 <col:22, col:26> '<dependent type>' contains-errors lvalue ->file
|   |   | `-RecoveryExpr 0x121142600 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-IntegerLiteral 0x121142668 <col:32> 'int' 0
|   |   |-UnaryOperator 0x1211426a8 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x121142688 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-UnaryExprOrTypeTraitExpr 0x121142700 <col:43, col:55> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x1211426e0 <col:49, col:55> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x1211426c0 <col:50> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x121142858 <line:12:5, line:14:5>
|   | |-BinaryOperator 0x1211427d8 <line:12:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1211427c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x121142780 <col:9> 'int' lvalue Var 0x121142318 'ret' 'int'
|   | | `-IntegerLiteral 0x1211427a0 <col:15> 'int' 0
|   | `-CompoundStmt 0x121142840 <col:18, line:14:5>
|   |   `-ReturnStmt 0x121142830 <line:13:9, col:16>
|   |     `-ImplicitCastExpr 0x121142818 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1211427f8 <col:16> 'int' lvalue Var 0x121142318 'ret' 'int'
|   |-IfStmt 0x121144b48 <line:16:5, line:23:5>
|   | |-RecoveryExpr 0x1211448a8 <line:16:9, line:20:43> '_Bool' contains-errors
|   | `-CompoundStmt 0x121144b28 <col:46, line:23:5>
|   |   |-CallExpr 0x121144a50 <line:21:9, col:31> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1211449a8 <col:9> 'int ()' Function 0x1211448f0 'error_setg' 'int ()'
|   |   | |-RecoveryExpr 0x1211449c8 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x121144a30 <col:26> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x121144b18 <line:22:9, col:17>
|   |     `-UnaryOperator 0x121144b00 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x121144ae8 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x121144ac8 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x121145200 <line:25:5, line:29:5> has_else
|   | |-BinaryOperator 0x121144c70 <line:25:9, col:39> 'int' contains-errors '=='
|   | | |-CallExpr 0x121144bf0 <col:9, col:34> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x121144b68 <col:9> 'int ()' Function 0x121142e08 'le32_to_cpu' 'int ()'
|   | | | `-CXXDependentScopeMemberExpr 0x121144ba8 <col:21, col:27> '<dependent type>' contains-errors lvalue .version
|   | | |   `-RecoveryExpr 0x121144b88 <col:21> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x121144c50 <col:39> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x121144fa0 <col:50, line:27:5>
|   | | `-BinaryOperator 0x121144f80 <line:26:9, col:72> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x121144cd8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->total_sectors
|   | |   | `-RecoveryExpr 0x121144cb0 <col:9> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x121144c90 <col:9> 'int *' lvalue ParmVar 0x121128928 'bs' 'int *'
|   | |   `-BinaryOperator 0x121144f60 <col:29, col:72> '<dependent type>' contains-errors '/'
|   | |     |-CallExpr 0x121144f18 <col:29, col:68> '<dependent type>' contains-errors
|   | |     | |-DeclRefExpr 0x121144e00 <col:29> 'int ()' Function 0x121144d48 'le64_to_cpu' 'int ()'
|   | |     | `-CXXDependentScopeMemberExpr 0x121144ed0 <col:41, col:64> '<dependent type>' contains-errors lvalue .disk
|   | |     |   `-CXXDependentScopeMemberExpr 0x121144e88 <col:41, col:53> '<dependent type>' contains-errors lvalue .redolog_v1
|   | |     |     `-CXXDependentScopeMemberExpr 0x121144e40 <col:41, col:47> '<dependent type>' contains-errors lvalue .extra
|   | |     |       `-RecoveryExpr 0x121144e20 <col:41> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x121144f40 <col:72> 'int' 512
|   | `-CompoundStmt 0x1211451e8 <line:27:12, line:29:5>
|   |   `-BinaryOperator 0x1211451c8 <line:28:9, col:69> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x121145000 <col:9, col:13> '<dependent type>' contains-errors lvalue ->total_sectors
|   |     | `-RecoveryExpr 0x121144fd8 <col:9> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x121144fb8 <col:9> 'int *' lvalue ParmVar 0x121128928 'bs' 'int *'
|   |     `-BinaryOperator 0x1211451a8 <col:29, col:69> '<dependent type>' contains-errors '/'
|   |       |-CallExpr 0x121145160 <col:29, col:65> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x121145048 <col:29> 'int ()' Function 0x121144d48 'le64_to_cpu' 'int ()'
|   |       | `-CXXDependentScopeMemberExpr 0x121145118 <col:41, col:61> '<dependent type>' contains-errors lvalue .disk
|   |       |   `-CXXDependentScopeMemberExpr 0x1211450d0 <col:41, col:53> '<dependent type>' contains-errors lvalue .redolog
|   |       |     `-CXXDependentScopeMemberExpr 0x121145088 <col:41, col:47> '<dependent type>' contains-errors lvalue .extra
|   |       |       `-RecoveryExpr 0x121145068 <col:41> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x121145188 <col:69> 'int' 512
|   |-IfStmt 0x121145670 <line:36:5, line:38:5>
|   | |-BinaryOperator 0x1211455d0 <line:36:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1211455b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x121145578 <col:9> 'int' lvalue Var 0x121142318 'ret' 'int'
|   | | `-IntegerLiteral 0x121145598 <col:15> 'int' 0
|   | `-CompoundStmt 0x121145658 <col:18, line:38:5>
|   |   `-GotoStmt 0x121145640 <line:37:9, col:14> 'fail' 0x1211455f0
|   |-ReturnStmt 0x121145d80 <line:51:5, col:12>
|   | `-IntegerLiteral 0x121145d60 <col:12> 'int' 0
|   |-LabelStmt 0x121145e98 <line:53:1, col:5> 'fail'
|   | `-NullStmt 0x121145e90 <col:5>
|   `-ReturnStmt 0x121145ef0 <line:55:5, col:12>
|     `-ImplicitCastExpr 0x121145ed8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x121145eb8 <col:12> 'int' lvalue Var 0x121142318 'ret' 'int'
`-FunctionDecl 0x1211428c0 <line:16:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x1211429c0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x121142a28 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x121142968 <<invalid sloc>> Implicit 887
