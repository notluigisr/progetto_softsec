TranslationUnitDecl 0x139055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1390564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x139055bd0 '__int128'
|-TypedefDecl 0x139056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x139055bf0 'unsigned __int128'
|-TypedefDecl 0x139126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x139126000 'struct __NSConstantString_tag'
|   `-Record 0x139056580 '__NSConstantString_tag'
|-TypedefDecl 0x139126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x139055d90 '__SVInt8_t'
|-TypedefDecl 0x139126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x139055db0 '__SVInt16_t'
|-TypedefDecl 0x139126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x139055dd0 '__SVInt32_t'
|-TypedefDecl 0x1391263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x139055df0 '__SVInt64_t'
|-TypedefDecl 0x139126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x139055e10 '__SVUint8_t'
|-TypedefDecl 0x1391264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x139055e30 '__SVUint16_t'
|-TypedefDecl 0x139126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x139055e50 '__SVUint32_t'
|-TypedefDecl 0x139126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x139055e70 '__SVUint64_t'
|-TypedefDecl 0x1391265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x139055e90 '__SVFloat16_t'
|-TypedefDecl 0x139126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x139055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1391266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x139055ed0 '__SVFloat64_t'
|-TypedefDecl 0x139126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x139055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x139126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x139055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1391267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x139055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x139126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x139055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1391268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x139055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x139126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x139055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x139126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x139055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1391269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x139055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x139126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x139055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x139126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x139056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x139126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x139056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x139126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x139056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x139126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x139056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x139126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x139056090 '__clang_svint8x3_t'
|-TypedefDecl 0x139126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1390560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x139126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1390560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x139126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1390560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x139126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x139056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x139126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x139056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x139126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x139056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x139126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x139056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x139126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x139056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x139127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1390561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x139127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1390561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1391278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1390561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x139127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x139056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1391279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x139056230 '__clang_svint16x4_t'
|-TypedefDecl 0x139127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x139056250 '__clang_svint32x4_t'
|-TypedefDecl 0x139127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x139056270 '__clang_svint64x4_t'
|-TypedefDecl 0x139127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x139056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x139127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1390562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x139127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1390562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x139127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1390562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x139127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x139056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x139127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x139056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x139127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x139056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x139127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x139056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x139127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x139056390 '__SVBool_t'
|-TypedefDecl 0x139127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1390563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x139127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1390563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x139127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1390563f0 '__SVCount_t'
|-TypedefDecl 0x139127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x139127fb0 'char *'
|   `-BuiltinType 0x1390556b0 'char'
|-TypedefDecl 0x139128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x139127fb0 'char *'
|   `-BuiltinType 0x1390556b0 'char'
`-FunctionDecl 0x139128348 <dataset_diviso_filec/func16697_vuln.c:1:1, line:37:1> line:1:1 invalid get_visual_text 'int (int *, char **, int *)'
  |-ParmVarDecl 0x139128128 <line:2:5, col:15> col:15 invalid cap 'int *'
  |-ParmVarDecl 0x1391281d8 <line:3:5, col:14> col:14 used pp 'char **'
  |-ParmVarDecl 0x139128258 <line:4:5, col:11> col:11 used lenp 'int *'
  `-CompoundStmt 0x139809d10 <line:5:1, line:37:1>
    |-IfStmt 0x139128678 <line:6:5, line:7:19>
    | |-BinaryOperator 0x139128478 <line:6:9, col:24> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x139128458 <col:9> '<dependent type>' contains-errors lvalue
    | | `-CharacterLiteral 0x139128420 <col:24> 'int' 86
    | `-CallExpr 0x139128658 <line:7:2, col:19> 'int'
    |   `-ImplicitCastExpr 0x139128640 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x1391285f0 <col:2> 'int ()' Function 0x139128538 'unadjust_for_sel' 'int ()'
    |-IfStmt 0x139141bc8 <line:8:5, line:13:5>
    | |-BinaryOperator 0x1391418f8 <line:8:9, col:41> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x139141800 <col:9, col:16> '<dependent type>' contains-errors lvalue .lnum
    | | | `-RecoveryExpr 0x1391287c0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x1391418b0 <col:24, col:41> '<dependent type>' contains-errors lvalue .lnum
    | |   `-CXXDependentScopeMemberExpr 0x139141868 <col:24, col:32> '<dependent type>' contains-errors lvalue ->w_cursor
    | |     `-RecoveryExpr 0x139141848 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139141ba8 <line:9:5, line:13:5>
    |   |-IfStmt 0x139141b40 <line:10:2, line:11:26>
    |   | |-BinaryOperator 0x139141990 <line:10:6, col:13> 'int' contains-errors '!='
    |   | | |-RecoveryExpr 0x139141918 <col:6> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x139141970 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-CallExpr 0x139141b18 <line:11:6, col:26> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x139141a90 <col:6> 'int ()' Function 0x1391419d8 'clearopbeep' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x139141ad0 <col:18, col:23> '<dependent type>' contains-errors lvalue ->oap
    |   |     `-RecoveryExpr 0x139141ab0 <col:18> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x139141b98 <line:12:2, col:9>
    |     `-RecoveryExpr 0x139141b78 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x139809ba8 <line:14:5, line:34:5> has_else
    | |-BinaryOperator 0x139141c58 <line:14:9, col:24> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x139141c38 <col:9> '<dependent type>' contains-errors lvalue
    | | `-CharacterLiteral 0x139141c00 <col:24> 'int' 86
    | |-CompoundStmt 0x1391424b8 <line:15:5, line:18:5>
    | | |-BinaryOperator 0x139142240 <line:16:2, col:23> 'char *' '='
    | | | |-UnaryOperator 0x139141cb0 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x139141c98 <col:3> 'char **' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x139141c78 <col:3> 'char **' lvalue ParmVar 0x1391281d8 'pp' 'char **'
    | | | `-ImplicitCastExpr 0x139141e00 <col:8, col:23> 'char *' <IntegralToPointer>
    | | |   `-CallExpr 0x139141de0 <col:8, col:23> 'int'
    | | |     `-ImplicitCastExpr 0x139141dc8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    | | |       `-DeclRefExpr 0x139141da8 <col:8> 'int ()' Function 0x139141cf0 'ml_get_curline' 'int ()'
    | | `-BinaryOperator 0x139142498 <line:17:2, col:25> 'int' '='
    | |   |-UnaryOperator 0x139142298 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x139142280 <col:3> 'int *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x139142260 <col:3> 'int *' lvalue ParmVar 0x139128258 'lenp' 'int *'
    | |   `-CStyleCastExpr 0x139142470 <col:10, col:25> 'int' <NoOp>
    | |     `-CallExpr 0x139142418 <col:15, col:25> 'int'
    | |       |-ImplicitCastExpr 0x139142400 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x139142390 <col:15> 'int ()' Function 0x1391422d8 'STRLEN' 'int ()'
    | |       `-ImplicitCastExpr 0x139142440 <col:22, col:23> 'char *' <LValueToRValue>
    | |         `-UnaryOperator 0x1391423e8 <col:22, col:23> 'char *' lvalue prefix '*' cannot overflow
    | |           `-ImplicitCastExpr 0x1391423d0 <col:23> 'char **' <LValueToRValue>
    | |             `-DeclRefExpr 0x1391423b0 <col:23> 'char **' lvalue ParmVar 0x1391281d8 'pp' 'char **'
    | `-CompoundStmt 0x139809b90 <line:20:5, line:34:5>
    |   `-IfStmt 0x139809980 <line:21:2, line:30:2> has_else
    |     |-CallExpr 0x139142708 <line:21:6, col:37> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x1391425b8 <col:6> 'int ()' Function 0x139142500 'LT_POS' 'int ()'
    |     | |-CXXDependentScopeMemberExpr 0x1391426a0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->w_cursor
    |     | | `-RecoveryExpr 0x139142680 <col:13> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x1391426e8 <col:31> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x139809870 <line:22:2, line:25:2>
    |     | |-BinaryOperator 0x1398094a0 <line:23:6, col:40> 'char *' contains-errors '='
    |     | | |-UnaryOperator 0x1398093e0 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow
    |     | | | `-ImplicitCastExpr 0x1398093c8 <col:7> 'char **' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x139142738 <col:7> 'char **' lvalue ParmVar 0x1391281d8 'pp' 'char **'
    |     | | `-CallExpr 0x139809478 <col:12, col:40> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x1398092b8 <col:12> 'int ()' Function 0x139809200 'ml_get_pos' 'int ()'
    |     | |   `-UnaryOperator 0x139809460 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |     `-CXXDependentScopeMemberExpr 0x139809418 <col:24, col:32> '<dependent type>' contains-errors lvalue ->w_cursor
    |     | |       `-RecoveryExpr 0x1398093f8 <col:24> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x139809850 <line:24:6, col:50> 'int' contains-errors '='
    |     |   |-UnaryOperator 0x1398096e0 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x1398096c8 <col:7> 'int *' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x1398094c0 <col:7> 'int *' lvalue ParmVar 0x139128258 'lenp' 'int *'
    |     |   `-BinaryOperator 0x139809830 <col:14, col:50> '<dependent type>' contains-errors '+'
    |     |     |-BinaryOperator 0x139809810 <col:14, col:44> '<dependent type>' contains-errors '-'
    |     |     | |-CXXDependentScopeMemberExpr 0x139809718 <col:14, col:21> '<dependent type>' contains-errors lvalue .col
    |     |     | | `-RecoveryExpr 0x1398096f8 <col:14> '<dependent type>' contains-errors lvalue
    |     |     | `-CXXDependentScopeMemberExpr 0x1398097c8 <col:27, col:44> '<dependent type>' contains-errors lvalue .col
    |     |     |   `-CXXDependentScopeMemberExpr 0x139809780 <col:27, col:35> '<dependent type>' contains-errors lvalue ->w_cursor
    |     |     |     `-RecoveryExpr 0x139809760 <col:27> '<dependent type>' contains-errors lvalue
    |     |     `-IntegerLiteral 0x139809638 <col:50> 'int' 1
    |     `-CompoundStmt 0x139809970 <line:27:2, line:30:2>
    `-CallExpr 0x139809cf0 <line:35:5, col:28> 'int'
      `-ImplicitCastExpr 0x139809cd8 <col:5> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x139809cb8 <col:5> 'int ()' Function 0x139809c00 'reset_VIsual_and_resel' 'int ()'
