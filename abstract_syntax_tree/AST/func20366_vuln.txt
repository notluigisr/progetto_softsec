TranslationUnitDecl 0x154855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1548564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x154855bd0 '__int128'
|-TypedefDecl 0x154856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x154855bf0 'unsigned __int128'
|-TypedefDecl 0x154926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x154926000 'struct __NSConstantString_tag'
|   `-Record 0x154856580 '__NSConstantString_tag'
|-TypedefDecl 0x154926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x154855d90 '__SVInt8_t'
|-TypedefDecl 0x154926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x154855db0 '__SVInt16_t'
|-TypedefDecl 0x154926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x154855dd0 '__SVInt32_t'
|-TypedefDecl 0x1549263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x154855df0 '__SVInt64_t'
|-TypedefDecl 0x154926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x154855e10 '__SVUint8_t'
|-TypedefDecl 0x1549264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x154855e30 '__SVUint16_t'
|-TypedefDecl 0x154926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x154855e50 '__SVUint32_t'
|-TypedefDecl 0x154926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x154855e70 '__SVUint64_t'
|-TypedefDecl 0x1549265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x154855e90 '__SVFloat16_t'
|-TypedefDecl 0x154926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x154855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1549266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x154855ed0 '__SVFloat64_t'
|-TypedefDecl 0x154926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x154855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x154926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x154855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1549267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x154855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x154926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x154855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1549268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x154855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x154926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x154855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x154926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x154855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1549269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x154855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x154926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x154855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x154926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x154856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x154926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x154856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x154926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x154856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x154926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x154856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x154926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x154856090 '__clang_svint8x3_t'
|-TypedefDecl 0x154926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1548560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x154926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1548560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x154926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1548560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x154926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x154856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x154926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x154856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x154926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x154856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x154926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x154856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x154926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x154856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x154927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1548561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x154927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1548561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1549278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1548561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x154927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x154856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1549279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x154856230 '__clang_svint16x4_t'
|-TypedefDecl 0x154927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x154856250 '__clang_svint32x4_t'
|-TypedefDecl 0x154927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x154856270 '__clang_svint64x4_t'
|-TypedefDecl 0x154927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x154856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x154927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1548562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x154927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1548562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x154927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1548562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x154927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x154856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x154927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x154856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x154927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x154856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x154927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x154856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x154927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x154856390 '__SVBool_t'
|-TypedefDecl 0x154927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1548563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x154927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1548563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x154927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1548563f0 '__SVCount_t'
|-TypedefDecl 0x154927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x154927fb0 'char *'
|   `-BuiltinType 0x1548556b0 'char'
|-TypedefDecl 0x154928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x154927fb0 'char *'
|   `-BuiltinType 0x1548556b0 'char'
`-FunctionDecl 0x154928288 <dataset_diviso_filec/func20366_vuln.c:1:1, line:52:1> line:1:1 invalid f_setbufvar 'int (int *, int *)'
  |-ParmVarDecl 0x154928128 <col:13, col:23> col:23 invalid argvars 'int *'
  |-ParmVarDecl 0x1549281a8 <col:32, col:42> col:42 invalid rettv 'int *'
  `-CompoundStmt 0x154944a38 <line:2:1, line:52:1>
    |-DeclStmt 0x154928470 <line:4:5, col:33>
    | |-VarDecl 0x154928370 <col:5, col:13> col:13 used varname 'char *'
    | `-VarDecl 0x1549283f0 <col:5, col:23> col:23 used bufvarname 'char *'
    |-DeclStmt 0x154928530 <line:6:5, col:27>
    | `-VarDecl 0x1549284c8 <col:5, col:12> col:12 referenced invalid nbuf 'char'
    |-IfStmt 0x154941898 <line:8:5, line:9:2>
    | |-BinaryOperator 0x154941868 <line:8:9, col:44> 'int' '||'
    | | |-CallExpr 0x154928708 <col:9, col:26> 'int'
    | | | `-ImplicitCastExpr 0x1549286f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x1549286a0 <col:9> 'int ()' Function 0x1549285e8 'check_restricted' 'int ()'
    | | `-CallExpr 0x154941848 <col:31, col:44> 'int'
    | |   `-ImplicitCastExpr 0x154941830 <col:31> 'int (*)()' <FunctionToPointerDecay>
    | |     `-DeclRefExpr 0x154941810 <col:31> 'int ()' Function 0x154928750 'check_secure' 'int ()'
    | `-ReturnStmt 0x154941888 <line:9:2>
    |-CStyleCastExpr 0x154941a80 <line:10:5, col:36> 'void' contains-errors <ToVoid>
    | `-CallExpr 0x154941a48 <col:11, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x154941998 <col:11> 'int ()' Function 0x1549418e0 'tv_get_number' 'int ()'
    |   `-UnaryOperator 0x154941a30 <col:25, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x154941a10 <col:26, col:35> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x1549419f8 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x1549419b8 <col:26> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x1549419d8 <col:34> 'int' 0
    |-BinaryOperator 0x154941c80 <line:11:5, col:44> 'char *' contains-errors '='
    | |-DeclRefExpr 0x154941aa8 <col:5> 'char *' lvalue Var 0x154928370 'varname' 'char *'
    | `-CallExpr 0x154941c58 <col:15, col:44> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x154941ba8 <col:15> 'int ()' Function 0x154941af0 'tv_get_string_chk' 'int ()'
    |   `-UnaryOperator 0x154941c40 <col:33, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x154941c20 <col:34, col:43> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x154941c08 <col:34> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x154941bc8 <col:34> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x154941be8 <col:42> 'int' 1
    |-BinaryOperator 0x154941fd0 <line:12:5, col:40> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x154941cc0 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x154941ca0 <col:5> 'char' lvalue Var 0x1549284c8 'nbuf' 'char'
    | `-CallExpr 0x154941fa0 <col:11, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x154941dc8 <col:11> 'int ()' Function 0x154941d10 'tv_get_buf' 'int ()'
    |   |-UnaryOperator 0x154941f68 <col:22, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ArraySubscriptExpr 0x154941f48 <col:23, col:32> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x154941f30 <col:23> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x154941de8 <col:23> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x154941e08 <col:31> 'int' 0
    |   `-RecoveryExpr 0x154941f80 <col:35> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x154944a18 <line:15:5, line:51:5>
      |-BinaryOperator 0x1549422f8 <line:15:9, col:51> 'int' contains-errors '&&'
      | |-BinaryOperator 0x154942278 <col:9, col:35> 'int' contains-errors '&&'
      | | |-BinaryOperator 0x154942218 <col:9, col:16> 'int' contains-errors '!='
      | | | |-RecoveryExpr 0x1549421d8 <col:9> '<dependent type>' contains-errors lvalue
      | | | `-RecoveryExpr 0x1549421f8 <col:16> '<dependent type>' contains-errors lvalue
      | | `-BinaryOperator 0x154942258 <col:24, col:35> 'int' contains-errors '!='
      | |   |-DeclRefExpr 0x1549420d0 <col:24> 'char *' lvalue Var 0x154928370 'varname' 'char *'
      | |   `-RecoveryExpr 0x154942238 <col:35> '<dependent type>' contains-errors lvalue
      | `-BinaryOperator 0x1549422d8 <col:43, col:51> 'int' contains-errors '!='
      |   |-RecoveryExpr 0x154942298 <col:43> '<dependent type>' contains-errors lvalue
      |   `-RecoveryExpr 0x1549422b8 <col:51> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x154944a00 <line:16:5, line:51:5>
        `-IfStmt 0x1549449d0 <line:17:2, line:50:2> has_else
          |-BinaryOperator 0x1549423b0 <line:17:6, col:18> 'int' '=='
          | |-ImplicitCastExpr 0x154942398 <col:6, col:7> 'int' <IntegralCast>
          | | `-ImplicitCastExpr 0x154942380 <col:6, col:7> 'char' <LValueToRValue>
          | |   `-UnaryOperator 0x154942350 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
          | |     `-ImplicitCastExpr 0x154942338 <col:7> 'char *' <LValueToRValue>
          | |       `-DeclRefExpr 0x154942318 <col:7> 'char *' lvalue Var 0x154928370 'varname' 'char *'
          | `-CharacterLiteral 0x154942368 <col:18> 'int' 38
          |-CompoundStmt 0x154943fa8 <line:18:2, line:35:2>
          | |-DeclStmt 0x154942450 <line:19:6, col:17>
          | | `-VarDecl 0x1549423e8 <col:6, col:11> col:11 used numval 'long'
          | |-DeclStmt 0x1549424e8 <line:21:6, col:24>
          | | `-VarDecl 0x154942480 <col:6, col:11> col:11 used error 'int'
          | `-UnaryOperator 0x154942620 <line:27:6, col:8> 'char *' prefix '++'
          |   `-DeclRefExpr 0x154942600 <col:8> 'char *' lvalue Var 0x154928370 'varname' 'char *'
          `-CompoundStmt 0x1549449b0 <line:37:2, line:50:2>
            |-BinaryOperator 0x154944358 <line:40:6, col:54> 'char *' '='
            | |-DeclRefExpr 0x154943fd0 <col:6> 'char *' lvalue Var 0x1549283f0 'bufvarname' 'char *'
            | `-ImplicitCastExpr 0x154944340 <col:19, col:54> 'char *' <IntegralToPointer>
            |   `-CallExpr 0x154944318 <col:19, col:54> 'int'
            |     |-ImplicitCastExpr 0x154944300 <col:19> 'int (*)()' <FunctionToPointerDecay>
            |     | `-DeclRefExpr 0x1549440d0 <col:19> 'int ()' Function 0x154944018 'alloc' 'int ()'
            |     `-BinaryOperator 0x1549442e0 <col:25, col:53> 'unsigned int' '+'
            |       |-CStyleCastExpr 0x154944280 <col:25, col:49> 'unsigned int' <IntegralCast>
            |       | `-CallExpr 0x154944228 <col:35, col:49> 'int'
            |       |   |-ImplicitCastExpr 0x154944210 <col:35> 'int (*)()' <FunctionToPointerDecay>
            |       |   | `-DeclRefExpr 0x1549441d0 <col:35> 'int ()' Function 0x154944118 'STRLEN' 'int ()'
            |       |   `-ImplicitCastExpr 0x154944250 <col:42> 'char *' <LValueToRValue>
            |       |     `-DeclRefExpr 0x1549441f0 <col:42> 'char *' lvalue Var 0x154928370 'varname' 'char *'
            |       `-ImplicitCastExpr 0x1549442c8 <col:53> 'unsigned int' <IntegralCast>
            |         `-IntegerLiteral 0x1549442a8 <col:53> 'int' 3
            `-IfStmt 0x154944990 <line:41:6, line:49:6>
              |-RecoveryExpr 0x154944398 <line:41:10, col:24> '_Bool' contains-errors
              `-CompoundStmt 0x154944968 <line:42:6, line:49:6>
                |-CallExpr 0x154944558 <line:44:3, col:27> 'int'
                | |-ImplicitCastExpr 0x154944540 <col:3> 'int (*)()' <FunctionToPointerDecay>
                | | `-DeclRefExpr 0x154944498 <col:3> 'int ()' Function 0x1549443e0 'STRCPY' 'int ()'
                | |-ImplicitCastExpr 0x154944588 <col:10> 'char *' <LValueToRValue>
                | | `-DeclRefExpr 0x1549444b8 <col:10> 'char *' lvalue Var 0x1549283f0 'bufvarname' 'char *'
                | `-ImplicitCastExpr 0x1549445a0 <col:22> 'char *' <ArrayToPointerDecay>
                |   `-StringLiteral 0x154944520 <col:22> 'char[4]' lvalue "STR"
                |-CallExpr 0x154944688 <line:45:3, col:33> 'int'
                | |-ImplicitCastExpr 0x154944670 <col:3> 'int (*)()' <FunctionToPointerDecay>
                | | `-DeclRefExpr 0x1549445b8 <col:3> 'int ()' Function 0x1549443e0 'STRCPY' 'int ()'
                | |-BinaryOperator 0x154944630 <col:10, col:23> 'char *' '+'
                | | |-ImplicitCastExpr 0x154944618 <col:10> 'char *' <LValueToRValue>
                | | | `-DeclRefExpr 0x1549445d8 <col:10> 'char *' lvalue Var 0x1549283f0 'bufvarname' 'char *'
                | | `-IntegerLiteral 0x1549445f8 <col:23> 'int' 2
                | `-ImplicitCastExpr 0x1549446b8 <col:26> 'char *' <LValueToRValue>
                |   `-DeclRefExpr 0x154944650 <col:26> 'char *' lvalue Var 0x154928370 'varname' 'char *'
                `-CallExpr 0x154944928 <line:47:3, col:22> 'int'
                  |-ImplicitCastExpr 0x154944910 <col:3> 'int (*)()' <FunctionToPointerDecay>
                  | `-DeclRefExpr 0x1549448d0 <col:3> 'int ()' Function 0x154944818 'vim_free' 'int ()'
                  `-ImplicitCastExpr 0x154944950 <col:12> 'char *' <LValueToRValue>
                    `-DeclRefExpr 0x1549448f0 <col:12> 'char *' lvalue Var 0x1549283f0 'bufvarname' 'char *'
