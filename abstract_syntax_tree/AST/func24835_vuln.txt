TranslationUnitDecl 0x132855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1328564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132855bd0 '__int128'
|-TypedefDecl 0x132856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132855bf0 'unsigned __int128'
|-TypedefDecl 0x132926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132926000 'struct __NSConstantString_tag'
|   `-Record 0x132856580 '__NSConstantString_tag'
|-TypedefDecl 0x132926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132855d90 '__SVInt8_t'
|-TypedefDecl 0x132926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132855db0 '__SVInt16_t'
|-TypedefDecl 0x132926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132855dd0 '__SVInt32_t'
|-TypedefDecl 0x1329263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132855df0 '__SVInt64_t'
|-TypedefDecl 0x132926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132855e10 '__SVUint8_t'
|-TypedefDecl 0x1329264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132855e30 '__SVUint16_t'
|-TypedefDecl 0x132926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132855e50 '__SVUint32_t'
|-TypedefDecl 0x132926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132855e70 '__SVUint64_t'
|-TypedefDecl 0x1329265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132855e90 '__SVFloat16_t'
|-TypedefDecl 0x132926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1329266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132855ed0 '__SVFloat64_t'
|-TypedefDecl 0x132926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1329267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1329268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1329269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132856090 '__clang_svint8x3_t'
|-TypedefDecl 0x132926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1328560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1328560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1328560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x132926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x132926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1328561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1328561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1329278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1328561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1329279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132856230 '__clang_svint16x4_t'
|-TypedefDecl 0x132927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132856250 '__clang_svint32x4_t'
|-TypedefDecl 0x132927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132856270 '__clang_svint64x4_t'
|-TypedefDecl 0x132927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1328562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x132927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1328562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1328562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x132927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x132927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132856390 '__SVBool_t'
|-TypedefDecl 0x132927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1328563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x132927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1328563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1328563f0 '__SVCount_t'
|-TypedefDecl 0x132927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-TypedefDecl 0x132928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
`-FunctionDecl 0x132940a80 <dataset_diviso_filec/func24835_vuln.c:1:1, line:59:1> line:1:6 base64_encode_xmlrpc 'void (struct buffer_st *, const char *, int)'
  |-ParmVarDecl 0x132928648 <col:27, col:45> col:45 used b 'struct buffer_st *'
  |-ParmVarDecl 0x1329286c8 <col:48, col:60> col:60 used source 'const char *'
  |-ParmVarDecl 0x132928748 <col:68, col:72> col:72 used length 'int'
  `-CompoundStmt 0x132945c98 <line:2:1, line:59:1>
    |-DeclStmt 0x132940cc0 <line:3:3, col:20>
    | |-VarDecl 0x132940ba0 <col:3, col:7> col:7 used i 'int'
    | `-VarDecl 0x132940c20 <col:3, col:19> col:10 used hiteof 'int' cinit
    |   `-IntegerLiteral 0x132940c88 <col:19> 'int' 0
    |-DeclStmt 0x132940d78 <line:4:3, col:17>
    | `-VarDecl 0x132940cf0 <col:3, col:16> col:7 used offset 'int' cinit
    |   `-IntegerLiteral 0x132940d58 <col:16> 'int' 0
    |-CallExpr 0x132940f48 <line:6:3, col:15> 'int'
    | |-ImplicitCastExpr 0x132940f30 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x132940ec0 <col:3> 'int ()' Function 0x132940e08 'buffer_new' 'int ()'
    | `-ImplicitCastExpr 0x132940f70 <col:14> 'struct buffer_st *' <LValueToRValue>
    |   `-DeclRefExpr 0x132940ee0 <col:14> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'
    |-ForStmt 0x132941140 <line:10:3, line:13:3>
    | |-BinaryOperator 0x132940fc8 <line:10:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x132940f88 <col:8> 'int' lvalue Var 0x132940ba0 'i' 'int'
    | | `-IntegerLiteral 0x132940fa8 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x132941040 <col:15, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x132941028 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x132940fe8 <col:15> 'int' lvalue Var 0x132940ba0 'i' 'int'
    | | `-IntegerLiteral 0x132941008 <col:19> 'int' 26
    | |-UnaryOperator 0x132941080 <col:23, col:24> 'int' postfix '++'
    | | `-DeclRefExpr 0x132941060 <col:23> 'int' lvalue Var 0x132940ba0 'i' 'int'
    | `-CompoundStmt 0x132941130 <col:28, line:13:3>
    |-ForStmt 0x132941310 <line:14:3, line:16:3>
    | |-BinaryOperator 0x1329411b8 <line:14:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x132941178 <col:8> 'int' lvalue Var 0x132940ba0 'i' 'int'
    | | `-IntegerLiteral 0x132941198 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x132941230 <col:15, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x132941218 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1329411d8 <col:15> 'int' lvalue Var 0x132940ba0 'i' 'int'
    | | `-IntegerLiteral 0x1329411f8 <col:19> 'int' 10
    | |-UnaryOperator 0x132941270 <col:23, col:24> 'int' postfix '++'
    | | `-DeclRefExpr 0x132941250 <col:23> 'int' lvalue Var 0x132940ba0 'i' 'int'
    | `-CompoundStmt 0x132941300 <col:28, line:16:3>
    |-WhileStmt 0x132945bc0 <line:20:3, line:56:3>
    | |-UnaryOperator 0x1329413c0 <line:20:10, col:11> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1329413a8 <col:11> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x132941388 <col:11> 'int' lvalue Var 0x132940c20 'hiteof' 'int'
    | `-CompoundStmt 0x132945b88 <col:19, line:56:3>
    |   |-DeclStmt 0x132941618 <line:21:5, col:39>
    |   | |-VarDecl 0x132941488 <col:5, col:27> col:19 used igroup 'unsigned char[3]'
    |   | `-VarDecl 0x132941598 <col:5, col:38> col:30 used ogroup 'unsigned char[4]'
    |   |-DeclStmt 0x132941748 <line:22:5, col:13>
    |   | |-VarDecl 0x132941648 <col:5, col:9> col:9 used c 'int'
    |   | `-VarDecl 0x1329416c8 <col:5, col:12> col:12 used n 'int'
    |   |-BinaryOperator 0x132941970 <line:24:5, col:41> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x1329417e8 <col:5, col:13> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x1329417d0 <col:5> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x132941760 <col:5> 'unsigned char[3]' lvalue Var 0x132941488 'igroup' 'unsigned char[3]'
    |   | | `-IntegerLiteral 0x132941780 <col:12> 'int' 0
    |   | `-BinaryOperator 0x132941950 <col:17, col:41> 'unsigned char' '='
    |   |   |-ArraySubscriptExpr 0x132941860 <col:17, col:25> 'unsigned char' lvalue
    |   |   | |-ImplicitCastExpr 0x132941848 <col:17> 'unsigned char *' <ArrayToPointerDecay>
    |   |   | | `-DeclRefExpr 0x132941808 <col:17> 'unsigned char[3]' lvalue Var 0x132941488 'igroup' 'unsigned char[3]'
    |   |   | `-IntegerLiteral 0x132941828 <col:24> 'int' 1
    |   |   `-BinaryOperator 0x132941930 <col:29, col:41> 'unsigned char' '='
    |   |     |-ArraySubscriptExpr 0x1329418d8 <col:29, col:37> 'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1329418c0 <col:29> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | | `-DeclRefExpr 0x132941880 <col:29> 'unsigned char[3]' lvalue Var 0x132941488 'igroup' 'unsigned char[3]'
    |   |     | `-IntegerLiteral 0x1329418a0 <col:36> 'int' 2
    |   |     `-ImplicitCastExpr 0x132941918 <col:41> 'unsigned char' <IntegralCast>
    |   |       `-IntegerLiteral 0x1329418f8 <col:41> 'int' 0
    |   |-ForStmt 0x1329438f0 <line:25:5, line:33:5>
    |   | |-BinaryOperator 0x1329419d0 <line:25:10, col:14> 'int' '='
    |   | | |-DeclRefExpr 0x132941990 <col:10> 'int' lvalue Var 0x1329416c8 'n' 'int'
    |   | | `-IntegerLiteral 0x1329419b0 <col:14> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x132943458 <col:17, col:21> 'int' '<'
    |   | | |-ImplicitCastExpr 0x132943440 <col:17> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x132943400 <col:17> 'int' lvalue Var 0x1329416c8 'n' 'int'
    |   | | `-IntegerLiteral 0x132943420 <col:21> 'int' 3
    |   | |-UnaryOperator 0x132943498 <col:24, col:25> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x132943478 <col:24> 'int' lvalue Var 0x1329416c8 'n' 'int'
    |   | `-CompoundStmt 0x1329438c0 <col:29, line:33:5>
    |   |   |-BinaryOperator 0x132943570 <line:26:7, col:21> 'int' '='
    |   |   | |-DeclRefExpr 0x1329434b0 <col:7> 'int' lvalue Var 0x132941648 'c' 'int'
    |   |   | `-ImplicitCastExpr 0x132943558 <col:11, col:21> 'int' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x132943540 <col:11, col:21> 'char' <LValueToRValue>
    |   |   |     `-UnaryOperator 0x132943528 <col:11, col:21> 'const char' lvalue prefix '*' cannot overflow
    |   |   |       `-ParenExpr 0x132943508 <col:12, col:21> 'const char *'
    |   |   |         `-UnaryOperator 0x1329434f0 <col:13, col:19> 'const char *' postfix '++'
    |   |   |           `-DeclRefExpr 0x1329434d0 <col:13> 'const char *' lvalue ParmVar 0x1329286c8 'source' 'const char *'
    |   |   |-UnaryOperator 0x1329435b0 <line:27:7, col:13> 'int' postfix '++'
    |   |   | `-DeclRefExpr 0x132943590 <col:7> 'int' lvalue Var 0x132940cf0 'offset' 'int'
    |   |   |-IfStmt 0x132943778 <line:28:7, line:31:7>
    |   |   | |-BinaryOperator 0x1329436d0 <line:28:11, col:40> 'int' '||'
    |   |   | | |-BinaryOperator 0x132943638 <col:11, col:20> 'int' '>'
    |   |   | | | |-ImplicitCastExpr 0x132943608 <col:11> 'int' <LValueToRValue>
    |   |   | | | | `-DeclRefExpr 0x1329435c8 <col:11> 'int' lvalue Var 0x132940cf0 'offset' 'int'
    |   |   | | | `-ImplicitCastExpr 0x132943620 <col:20> 'int' <LValueToRValue>
    |   |   | | |   `-DeclRefExpr 0x1329435e8 <col:20> 'int' lvalue ParmVar 0x132928748 'length' 'int'
    |   |   | | `-BinaryOperator 0x1329436b0 <col:30, col:40> 'int' '<='
    |   |   | |   |-ImplicitCastExpr 0x132943698 <col:30> 'int' <LValueToRValue>
    |   |   | |   | `-DeclRefExpr 0x132943658 <col:30> 'int' lvalue Var 0x132940cf0 'offset' 'int'
    |   |   | |   `-IntegerLiteral 0x132943678 <col:40> 'int' 0
    |   |   | `-CompoundStmt 0x132943758 <col:43, line:31:7>
    |   |   |   |-BinaryOperator 0x132943730 <line:29:2, col:11> 'int' '='
    |   |   |   | |-DeclRefExpr 0x1329436f0 <col:2> 'int' lvalue Var 0x132940c20 'hiteof' 'int'
    |   |   |   | `-IntegerLiteral 0x132943710 <col:11> 'int' 1
    |   |   |   `-BreakStmt 0x132943750 <line:30:2>
    |   |   `-BinaryOperator 0x1329438a0 <line:32:7, col:35> 'unsigned char' '='
    |   |     |-ArraySubscriptExpr 0x132943808 <col:7, col:15> 'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1329437d8 <col:7> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | | `-DeclRefExpr 0x132943798 <col:7> 'unsigned char[3]' lvalue Var 0x132941488 'igroup' 'unsigned char[3]'
    |   |     | `-ImplicitCastExpr 0x1329437f0 <col:14> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1329437b8 <col:14> 'int' lvalue Var 0x1329416c8 'n' 'int'
    |   |     `-CStyleCastExpr 0x132943878 <col:19, col:35> 'unsigned char' <IntegralCast>
    |   |       `-ImplicitCastExpr 0x132943860 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
    |   |         `-DeclRefExpr 0x132943828 <col:35> 'int' lvalue Var 0x132941648 'c' 'int'
    |   `-IfStmt 0x132945b68 <line:34:5, line:55:5>
    |     |-BinaryOperator 0x132943980 <line:34:9, col:13> 'int' '>'
    |     | |-ImplicitCastExpr 0x132943968 <col:9> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x132943928 <col:9> 'int' lvalue Var 0x1329416c8 'n' 'int'
    |     | `-IntegerLiteral 0x132943948 <col:13> 'int' 0
    |     `-CompoundStmt 0x132945b48 <col:16, line:55:5>
    |       |-IfStmt 0x1329455b8 <line:42:7, line:47:7>
    |       | |-BinaryOperator 0x132944328 <line:42:11, col:15> 'int' '<'
    |       | | |-ImplicitCastExpr 0x132944310 <col:11> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x1329442d0 <col:11> 'int' lvalue Var 0x1329416c8 'n' 'int'
    |       | | `-IntegerLiteral 0x1329442f0 <col:15> 'int' 3
    |       | `-CompoundStmt 0x132945598 <col:18, line:47:7>
    |       |   |-BinaryOperator 0x132945400 <line:43:2, col:14> 'unsigned char' '='
    |       |   | |-ArraySubscriptExpr 0x1329443a0 <col:2, col:10> 'unsigned char' lvalue
    |       |   | | |-ImplicitCastExpr 0x132944388 <col:2> 'unsigned char *' <ArrayToPointerDecay>
    |       |   | | | `-DeclRefExpr 0x132944348 <col:2> 'unsigned char[4]' lvalue Var 0x132941598 'ogroup' 'unsigned char[4]'
    |       |   | | `-IntegerLiteral 0x132944368 <col:9> 'int' 3
    |       |   | `-ImplicitCastExpr 0x1329443d8 <col:14> 'unsigned char' <IntegralCast>
    |       |   |   `-CharacterLiteral 0x1329443c0 <col:14> 'int' 61
    |       |   `-IfStmt 0x132945578 <line:44:2, line:46:2>
    |       |     |-BinaryOperator 0x132945478 <line:44:6, col:10> 'int' '<'
    |       |     | |-ImplicitCastExpr 0x132945460 <col:6> 'int' <LValueToRValue>
    |       |     | | `-DeclRefExpr 0x132945420 <col:6> 'int' lvalue Var 0x1329416c8 'n' 'int'
    |       |     | `-IntegerLiteral 0x132945440 <col:10> 'int' 2
    |       |     `-CompoundStmt 0x132945560 <col:13, line:46:2>
    |       |       `-BinaryOperator 0x132945540 <line:45:4, col:16> 'unsigned char' '='
    |       |         |-ArraySubscriptExpr 0x1329454f0 <col:4, col:12> 'unsigned char' lvalue
    |       |         | |-ImplicitCastExpr 0x1329454d8 <col:4> 'unsigned char *' <ArrayToPointerDecay>
    |       |         | | `-DeclRefExpr 0x132945498 <col:4> 'unsigned char[4]' lvalue Var 0x132941598 'ogroup' 'unsigned char[4]'
    |       |         | `-IntegerLiteral 0x1329454b8 <col:11> 'int' 2
    |       |         `-ImplicitCastExpr 0x132945528 <col:16> 'unsigned char' <IntegralCast>
    |       |           `-CharacterLiteral 0x132945510 <col:16> 'int' 61
    |       `-ForStmt 0x132945b10 <line:48:7, line:54:7>
    |         |-BinaryOperator 0x132945618 <line:48:12, col:16> 'int' '='
    |         | |-DeclRefExpr 0x1329455d8 <col:12> 'int' lvalue Var 0x132940ba0 'i' 'int'
    |         | `-IntegerLiteral 0x1329455f8 <col:16> 'int' 0
    |         |-<<<NULL>>>
    |         |-BinaryOperator 0x132945690 <col:19, col:23> 'int' '<'
    |         | |-ImplicitCastExpr 0x132945678 <col:19> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x132945638 <col:19> 'int' lvalue Var 0x132940ba0 'i' 'int'
    |         | `-IntegerLiteral 0x132945658 <col:23> 'int' 4
    |         |-UnaryOperator 0x1329456d0 <col:26, col:27> 'int' postfix '++'
    |         | `-DeclRefExpr 0x1329456b0 <col:26> 'int' lvalue Var 0x132940ba0 'i' 'int'
    |         `-CompoundStmt 0x132945af0 <col:31, line:54:7>
    |           |-CallExpr 0x1329458b0 <line:49:2, col:25> 'int'
    |           | |-ImplicitCastExpr 0x132945898 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |           | | `-DeclRefExpr 0x1329457c8 <col:2> 'int ()' Function 0x132945710 'buffer_add' 'int ()'
    |           | |-ImplicitCastExpr 0x1329458e0 <col:13> 'struct buffer_st *' <LValueToRValue>
    |           | | `-DeclRefExpr 0x1329457e8 <col:13> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'
    |           | `-ImplicitCastExpr 0x132945910 <col:16, col:24> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x1329458f8 <col:16, col:24> 'unsigned char' <LValueToRValue>
    |           |     `-ArraySubscriptExpr 0x132945878 <col:16, col:24> 'unsigned char' lvalue
    |           |       |-ImplicitCastExpr 0x132945848 <col:16> 'unsigned char *' <ArrayToPointerDecay>
    |           |       | `-DeclRefExpr 0x132945808 <col:16> 'unsigned char[4]' lvalue Var 0x132941598 'ogroup' 'unsigned char[4]'
    |           |       `-ImplicitCastExpr 0x132945860 <col:23> 'int' <LValueToRValue>
    |           |         `-DeclRefExpr 0x132945828 <col:23> 'int' lvalue Var 0x132940ba0 'i' 'int'
    |           `-IfStmt 0x132945ad0 <line:50:2, line:53:2>
    |             |-UnaryOperator 0x1329459e8 <line:50:6, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    |             | `-ParenExpr 0x1329459c8 <col:7, col:22> '<dependent type>' contains-errors
    |             |   `-BinaryOperator 0x1329459a8 <col:8, col:20> '<dependent type>' contains-errors '%'
    |             |     |-RecoveryExpr 0x132945960 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |             |     | `-DeclRefExpr 0x132945928 <col:8> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'
    |             |     `-IntegerLiteral 0x132945988 <col:20> 'int' 72
    |             `-CompoundStmt 0x132945ab8 <col:25, line:53:2>
    |               `-CallExpr 0x132945a70 <line:52:4, col:22> 'int'
    |                 |-ImplicitCastExpr 0x132945a58 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |                 | `-DeclRefExpr 0x132945a00 <col:4> 'int ()' Function 0x132945710 'buffer_add' 'int ()'
    |                 |-ImplicitCastExpr 0x132945aa0 <col:15> 'struct buffer_st *' <LValueToRValue>
    |                 | `-DeclRefExpr 0x132945a20 <col:15> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'
    |                 `-CharacterLiteral 0x132945a40 <col:18> 'int' 10
    `-CallExpr 0x132945c50 <line:58:3, col:21> 'int'
      |-ImplicitCastExpr 0x132945c38 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x132945be0 <col:3> 'int ()' Function 0x132945710 'buffer_add' 'int ()'
      |-ImplicitCastExpr 0x132945c80 <col:14> 'struct buffer_st *' <LValueToRValue>
      | `-DeclRefExpr 0x132945c00 <col:14> 'struct buffer_st *' lvalue ParmVar 0x132928648 'b' 'struct buffer_st *'
      `-CharacterLiteral 0x132945c20 <col:17> 'int' 10
