TranslationUnitDecl 0x13b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b855bd0 '__int128'
|-TypedefDecl 0x13b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b855bf0 'unsigned __int128'
|-TypedefDecl 0x13b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b926000 'struct __NSConstantString_tag'
|   `-Record 0x13b856580 '__NSConstantString_tag'
|-TypedefDecl 0x13b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b855d90 '__SVInt8_t'
|-TypedefDecl 0x13b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b855db0 '__SVInt16_t'
|-TypedefDecl 0x13b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b855dd0 '__SVInt32_t'
|-TypedefDecl 0x13b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b855df0 '__SVInt64_t'
|-TypedefDecl 0x13b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b855e10 '__SVUint8_t'
|-TypedefDecl 0x13b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b855e30 '__SVUint16_t'
|-TypedefDecl 0x13b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b855e50 '__SVUint32_t'
|-TypedefDecl 0x13b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b855e70 '__SVUint64_t'
|-TypedefDecl 0x13b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b855e90 '__SVFloat16_t'
|-TypedefDecl 0x13b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b856390 '__SVBool_t'
|-TypedefDecl 0x13b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b8563f0 '__SVCount_t'
|-TypedefDecl 0x13b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b927fb0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
|-TypedefDecl 0x13b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b927fb0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
`-FunctionDecl 0x13b928258 <dataset_diviso_filec/func5792_nonvuln.c:1:1, line:13:1> line:1:8 invalid git_path_common_dirlen 'int (const char *, const char *)'
  |-ParmVarDecl 0x13b9280f0 <col:31, col:43> col:43 used one 'const char *'
  |-ParmVarDecl 0x13b928170 <col:48, col:60> col:60 used two 'const char *'
  `-CompoundStmt 0x13b941d68 <line:2:1, line:13:1>
    |-DeclStmt 0x13b9284e8 <line:3:2, col:35>
    | |-VarDecl 0x13b928328 <col:2, col:14> col:14 used p 'const char *'
    | |-VarDecl 0x13b9283a8 <col:2, col:18> col:18 used q 'const char *'
    | `-VarDecl 0x13b928428 <col:2, col:31> col:22 used dirsep 'const char *' cinit
    |   `-RecoveryExpr 0x13b9284a8 <col:31> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x13b941b60 <line:5:2, line:10:2>
    | |-BinaryOperator 0x13b9285f0 <line:5:7, col:20> 'const char *' ','
    | | |-BinaryOperator 0x13b928558 <col:7, col:11> 'const char *' '='
    | | | |-DeclRefExpr 0x13b928500 <col:7> 'const char *' lvalue Var 0x13b928328 'p' 'const char *'
    | | | `-ImplicitCastExpr 0x13b928540 <col:11> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x13b928520 <col:11> 'const char *' lvalue ParmVar 0x13b9280f0 'one' 'const char *'
    | | `-BinaryOperator 0x13b9285d0 <col:16, col:20> 'const char *' '='
    | |   |-DeclRefExpr 0x13b928578 <col:16> 'const char *' lvalue Var 0x13b9283a8 'q' 'const char *'
    | |   `-ImplicitCastExpr 0x13b9285b8 <col:20> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13b928598 <col:20> 'const char *' lvalue ParmVar 0x13b928170 'two' 'const char *'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13b928710 <col:25, col:32> 'int' '&&'
    | | |-ImplicitCastExpr 0x13b9286c8 <col:25, col:26> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x13b9286b0 <col:25, col:26> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x13b928648 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x13b928630 <col:26> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x13b928610 <col:26> 'const char *' lvalue Var 0x13b928328 'p' 'const char *'
    | | `-ImplicitCastExpr 0x13b9286f8 <col:31, col:32> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x13b9286e0 <col:31, col:32> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x13b928698 <col:31, col:32> 'const char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x13b928680 <col:32> 'const char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x13b928660 <col:32> 'const char *' lvalue Var 0x13b9283a8 'q' 'const char *'
    | |-BinaryOperator 0x13b9287a0 <col:35, col:41> 'const char *' ','
    | | |-UnaryOperator 0x13b928750 <col:35, col:36> 'const char *' postfix '++'
    | | | `-DeclRefExpr 0x13b928730 <col:35> 'const char *' lvalue Var 0x13b928328 'p' 'const char *'
    | | `-UnaryOperator 0x13b928788 <col:40, col:41> 'const char *' postfix '++'
    | |   `-DeclRefExpr 0x13b928768 <col:40> 'const char *' lvalue Var 0x13b9283a8 'q' 'const char *'
    | `-CompoundStmt 0x13b941b48 <col:45, line:10:2>
    |   `-IfStmt 0x13b941b18 <line:6:3, line:9:4> has_else
    |     |-BinaryOperator 0x13b941938 <line:6:7, col:26> 'int' '&&'
    |     | |-BinaryOperator 0x13b941860 <col:7, col:13> 'int' '=='
    |     | | |-ImplicitCastExpr 0x13b941848 <col:7, col:8> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x13b941830 <col:7, col:8> 'char' <LValueToRValue>
    |     | | |   `-UnaryOperator 0x13b941800 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
    |     | | |     `-ImplicitCastExpr 0x13b9287e0 <col:8> 'const char *' <LValueToRValue>
    |     | | |       `-DeclRefExpr 0x13b9287c0 <col:8> 'const char *' lvalue Var 0x13b928328 'p' 'const char *'
    |     | | `-CharacterLiteral 0x13b941818 <col:13> 'int' 47
    |     | `-BinaryOperator 0x13b941918 <col:20, col:26> 'int' '=='
    |     |   |-ImplicitCastExpr 0x13b941900 <col:20, col:21> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x13b9418e8 <col:20, col:21> 'char' <LValueToRValue>
    |     |   |   `-UnaryOperator 0x13b9418b8 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow
    |     |   |     `-ImplicitCastExpr 0x13b9418a0 <col:21> 'const char *' <LValueToRValue>
    |     |   |       `-DeclRefExpr 0x13b941880 <col:21> 'const char *' lvalue Var 0x13b9283a8 'q' 'const char *'
    |     |   `-CharacterLiteral 0x13b9418d0 <col:26> 'int' 47
    |     |-BinaryOperator 0x13b9419b0 <line:7:4, col:13> 'const char *' contains-errors '='
    |     | |-DeclRefExpr 0x13b941958 <col:4> 'const char *' contains-errors lvalue Var 0x13b928428 'dirsep' 'const char *'
    |     | `-ImplicitCastExpr 0x13b941998 <col:13> 'const char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13b941978 <col:13> 'const char *' lvalue Var 0x13b928328 'p' 'const char *'
    |     `-IfStmt 0x13b941af8 <line:8:8, line:9:4>
    |       |-BinaryOperator 0x13b941ad0 <line:8:12, col:19> 'int' '!='
    |       | |-ImplicitCastExpr 0x13b941aa0 <col:12, col:13> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x13b941a70 <col:12, col:13> 'char' <LValueToRValue>
    |       | |   `-UnaryOperator 0x13b941a08 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow
    |       | |     `-ImplicitCastExpr 0x13b9419f0 <col:13> 'const char *' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x13b9419d0 <col:13> 'const char *' lvalue Var 0x13b928328 'p' 'const char *'
    |       | `-ImplicitCastExpr 0x13b941ab8 <col:18, col:19> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x13b941a88 <col:18, col:19> 'char' <LValueToRValue>
    |       |     `-UnaryOperator 0x13b941a58 <col:18, col:19> 'const char' lvalue prefix '*' cannot overflow
    |       |       `-ImplicitCastExpr 0x13b941a40 <col:19> 'const char *' <LValueToRValue>
    |       |         `-DeclRefExpr 0x13b941a20 <col:19> 'const char *' lvalue Var 0x13b9283a8 'q' 'const char *'
    |       `-BreakStmt 0x13b941af0 <line:9:4>
    `-ReturnStmt 0x13b941d58 <line:12:2, col:39>
      `-ImplicitCastExpr 0x13b941d40 <col:9, col:39> 'int' contains-errors <IntegralCast>
        `-ConditionalOperator 0x13b941d10 <col:9, col:39> 'long' contains-errors
          |-ImplicitCastExpr 0x13b941ce0 <col:9> 'const char *' contains-errors <LValueToRValue>
          | `-DeclRefExpr 0x13b941b98 <col:9> 'const char *' contains-errors lvalue Var 0x13b928428 'dirsep' 'const char *'
          |-BinaryOperator 0x13b941ca0 <col:18, col:35> 'long' contains-errors '+'
          | |-ParenExpr 0x13b941c48 <col:18, col:31> 'long' contains-errors
          | | `-BinaryOperator 0x13b941c28 <col:19, col:28> 'long' contains-errors '-'
          | |   |-ImplicitCastExpr 0x13b941bf8 <col:19> 'const char *' contains-errors <LValueToRValue>
          | |   | `-DeclRefExpr 0x13b941bb8 <col:19> 'const char *' contains-errors lvalue Var 0x13b928428 'dirsep' 'const char *'
          | |   `-ImplicitCastExpr 0x13b941c10 <col:28> 'const char *' <LValueToRValue>
          | |     `-DeclRefExpr 0x13b941bd8 <col:28> 'const char *' lvalue ParmVar 0x13b9280f0 'one' 'const char *'
          | `-ImplicitCastExpr 0x13b941c88 <col:35> 'long' <IntegralCast>
          |   `-IntegerLiteral 0x13b941c68 <col:35> 'int' 1
          `-ImplicitCastExpr 0x13b941cf8 <col:39> 'long' <IntegralCast>
            `-IntegerLiteral 0x13b941cc0 <col:39> 'int' 0
