TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b126000 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-FunctionDecl 0x13b128348 <dataset_diviso_filec/func22654_vuln.c:2:1, line:57:18> line:2:12 invalid ssl_verify_server_cert 'int (int *, const char *, const char **)' static
| |-ParmVarDecl 0x13b128128 <col:35, col:40> col:40 invalid vio 'int *'
| |-ParmVarDecl 0x13b1281a8 <col:45, col:57> col:57 used server_hostname 'const char *'
| |-ParmVarDecl 0x13b128258 <col:74, col:87> col:87 used errptr 'const char **'
| `-CompoundStmt 0x13b1457f8 <line:3:1, line:57:18>
|   |-DeclStmt 0x13b128550 <line:6:3, col:18>
|   | |-VarDecl 0x13b128450 <col:3, col:9> col:9 used cp1 'char *'
|   | `-VarDecl 0x13b1284d0 <col:3, col:15> col:15 used cp2 'char *'
|   |-DeclStmt 0x13b128678 <line:7:3, col:16>
|   | `-VarDecl 0x13b128610 <col:3, col:15> col:8 used buf 'char[256]'
|   |-CallExpr 0x13b141ec8 <line:8:3, col:19> 'int'
|   | |-ImplicitCastExpr 0x13b141eb0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13b141e00 <col:3> 'int ()' Function 0x13b128738 'DBUG_ENTER' 'int ()'
|   | `-ImplicitCastExpr 0x13b141ef0 <col:14> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x13b141e60 <col:14> 'char[4]' lvalue "STR"
|   |-CallExpr 0x13b142060 <line:9:3, col:36> 'int'
|   | |-ImplicitCastExpr 0x13b142048 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13b141fe8 <col:3> 'int ()' Function 0x13b141f30 'DBUG_PRINT' 'int ()'
|   | |-ImplicitCastExpr 0x13b142090 <col:14> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x13b142008 <col:14> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x13b1420a8 <col:21> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13b142028 <col:21> 'const char *' lvalue ParmVar 0x13b1281a8 'server_hostname' 'const char *'
|   |-IfStmt 0x13b142350 <line:11:3, line:15:3>
|   | |-RecoveryExpr 0x13b1420f0 <line:11:7, col:32> '_Bool' contains-errors
|   | `-CompoundStmt 0x13b142330 <line:12:3, line:15:3>
|   |   |-BinaryOperator 0x13b1421b0 <line:13:5, col:14> 'const char *' '='
|   |   | |-UnaryOperator 0x13b142148 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13b142130 <col:6> 'const char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b142110 <col:6> 'const char **' lvalue ParmVar 0x13b128258 'errptr' 'const char **'
|   |   | `-ImplicitCastExpr 0x13b142198 <col:14> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13b142180 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13b142160 <col:14> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x13b142308 <line:14:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x13b1422f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b1422b0 <col:5> 'int ()' Function 0x13b1421f8 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x13b1422d0 <col:17> 'int' 1
|   |-IfStmt 0x13b142520 <line:17:3, line:21:3>
|   | |-UnaryOperator 0x13b1423a8 <line:17:7, col:8> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13b142390 <col:8> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13b142370 <col:8> 'const char *' lvalue ParmVar 0x13b1281a8 'server_hostname' 'const char *'
|   | `-CompoundStmt 0x13b142500 <line:18:3, line:21:3>
|   |   |-BinaryOperator 0x13b142460 <line:19:5, col:14> 'const char *' '='
|   |   | |-UnaryOperator 0x13b1423f8 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13b1423e0 <col:6> 'const char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b1423c0 <col:6> 'const char **' lvalue ParmVar 0x13b128258 'errptr' 'const char **'
|   |   | `-ImplicitCastExpr 0x13b142448 <col:14> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13b142430 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13b142410 <col:14> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x13b1424d8 <line:20:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x13b1424c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b142480 <col:5> 'int ()' Function 0x13b1421f8 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x13b1424a0 <col:17> 'int' 1
|   |-IfStmt 0x13b142838 <line:23:3, line:27:3>
|   | |-RecoveryExpr 0x13b1426b8 <line:23:7, col:51> '_Bool' contains-errors
|   | `-CompoundStmt 0x13b142818 <line:24:3, line:27:3>
|   |   |-BinaryOperator 0x13b142778 <line:25:5, col:14> 'const char *' '='
|   |   | |-UnaryOperator 0x13b142710 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13b1426f8 <col:6> 'const char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b1426d8 <col:6> 'const char **' lvalue ParmVar 0x13b128258 'errptr' 'const char **'
|   |   | `-ImplicitCastExpr 0x13b142760 <col:14> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13b142748 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13b142728 <col:14> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x13b1427f0 <line:26:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x13b1427d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b142798 <col:5> 'int ()' Function 0x13b1421f8 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x13b1427b8 <col:17> 'int' 1
|   |-IfStmt 0x13b142cb8 <line:29:3, line:34:3>
|   | |-BinaryOperator 0x13b142a38 <line:29:7, col:45> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x13b1429d0 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x13b142a10 <col:20, col:45> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x13b142950 <col:20> 'int ()' Function 0x13b142898 'SSL_get_verify_result' 'int ()'
|   | |   `-RecoveryExpr 0x13b1429f0 <col:42> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13b142c98 <line:30:3, line:34:3>
|   |   |-BinaryOperator 0x13b142af8 <line:31:5, col:14> 'const char *' '='
|   |   | |-UnaryOperator 0x13b142a90 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13b142a78 <col:6> 'const char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b142a58 <col:6> 'const char **' lvalue ParmVar 0x13b128258 'errptr' 'const char **'
|   |   | `-ImplicitCastExpr 0x13b142ae0 <col:14> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13b142ac8 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13b142aa8 <col:14> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x13b142c70 <line:33:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x13b142c58 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b142c18 <col:5> 'int ()' Function 0x13b1421f8 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x13b142c38 <col:17> 'int' 1
|   |-CallExpr 0x13b143df0 <line:40:3, col:24> 'int'
|   | |-ImplicitCastExpr 0x13b143dd8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13b143d78 <col:3> 'int ()' Function 0x13b141f30 'DBUG_PRINT' 'int ()'
|   | |-ImplicitCastExpr 0x13b143e20 <col:14> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x13b143d98 <col:14> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x13b143e38 <col:21> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x13b143db8 <col:21> 'char[256]' lvalue Var 0x13b128610 'buf' 'char[256]'
|   |-BinaryOperator 0x13b1441f8 <line:41:3, col:25> 'char *' '='
|   | |-DeclRefExpr 0x13b143e50 <col:3> 'char *' lvalue Var 0x13b128450 'cp1' 'char *'
|   | `-CallExpr 0x13b144168 <col:8, col:25> 'char *'
|   |   |-ImplicitCastExpr 0x13b144150 <col:8> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13b144090 <col:8> 'char *(const char *, const char *)' Function 0x13b143eb0 'strstr' 'char *(const char *, const char *)'
|   |   |-ImplicitCastExpr 0x13b1441b0 <col:15> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x13b144198 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x13b1440b0 <col:15> 'char[256]' lvalue Var 0x13b128610 'buf' 'char[256]'
|   |   `-ImplicitCastExpr 0x13b1441e0 <col:20> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x13b1441c8 <col:20> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x13b1440d0 <col:20> 'char[4]' lvalue "STR"
|   |-IfStmt 0x13b145698 <line:42:3, line:55:3>
|   | |-ImplicitCastExpr 0x13b144238 <line:42:7> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13b144218 <col:7> 'char *' lvalue Var 0x13b128450 'cp1' 'char *'
|   | `-CompoundStmt 0x13b145660 <line:43:3, line:55:3>
|   |   |-CompoundAssignOperator 0x13b144290 <line:44:5, col:11> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x13b144250 <col:5> 'char *' lvalue Var 0x13b128450 'cp1' 'char *'
|   |   | `-IntegerLiteral 0x13b144270 <col:11> 'int' 4
|   |   |-BinaryOperator 0x13b144618 <line:46:5, col:25> 'char *' '='
|   |   | |-DeclRefExpr 0x13b1442c0 <col:5> 'char *' lvalue Var 0x13b1284d0 'cp2' 'char *'
|   |   | `-CallExpr 0x13b1445b8 <col:10, col:25> 'char *'
|   |   |   |-ImplicitCastExpr 0x13b1445a0 <col:10> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x13b144500 <col:10> 'char *(const char *, int)' Function 0x13b144320 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x13b144600 <col:17> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x13b1445e8 <col:17> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x13b144520 <col:17> 'char *' lvalue Var 0x13b128450 'cp1' 'char *'
|   |   |   `-CharacterLiteral 0x13b144540 <col:22> 'int' 47
|   |   |-IfStmt 0x13b144710 <line:47:5, line:48:13>
|   |   | |-ImplicitCastExpr 0x13b144658 <line:47:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13b144638 <col:9> 'char *' lvalue Var 0x13b1284d0 'cp2' 'char *'
|   |   | `-BinaryOperator 0x13b1446f0 <line:48:7, col:13> 'char' '='
|   |   |   |-UnaryOperator 0x13b1446a8 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x13b144690 <col:8> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x13b144670 <col:8> 'char *' lvalue Var 0x13b1284d0 'cp2' 'char *'
|   |   |   `-ImplicitCastExpr 0x13b1446d8 <col:13> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x13b1446c0 <col:13> 'int' 0
|   |   |-CallExpr 0x13b1447a8 <line:49:5, col:26> 'int'
|   |   | |-ImplicitCastExpr 0x13b144790 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13b144730 <col:5> 'int ()' Function 0x13b141f30 'DBUG_PRINT' 'int ()'
|   |   | |-ImplicitCastExpr 0x13b1447d8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x13b144750 <col:16> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x13b1447f0 <col:23> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13b144770 <col:23> 'char *' lvalue Var 0x13b128450 'cp1' 'char *'
|   |   `-IfStmt 0x13b145640 <line:50:5, line:54:5>
|   |     |-UnaryOperator 0x13b144b80 <line:50:9, col:37> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x13b144b08 <col:10, col:37> 'int'
|   |     |   |-ImplicitCastExpr 0x13b144af0 <col:10> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x13b144a30 <col:10> 'int (const char *, const char *)' Function 0x13b144850 'strcmp' 'int (const char *, const char *)'
|   |     |   |-ImplicitCastExpr 0x13b144b50 <col:17> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x13b144b38 <col:17> 'char *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x13b144a50 <col:17> 'char *' lvalue Var 0x13b128450 'cp1' 'char *'
|   |     |   `-ImplicitCastExpr 0x13b144b68 <col:22> 'const char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x13b144a70 <col:22> 'const char *' lvalue ParmVar 0x13b1281a8 'server_hostname' 'const char *'
|   |     `-CompoundStmt 0x13b145628 <line:51:5, line:54:5>
|   |       `-CallExpr 0x13b145600 <line:53:7, col:20> 'int'
|   |         |-ImplicitCastExpr 0x13b144bd8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x13b144b98 <col:7> 'int ()' Function 0x13b1421f8 'DBUG_RETURN' 'int ()'
|   |         `-IntegerLiteral 0x13b144bb8 <col:19> 'int' 0
|   |-BinaryOperator 0x13b145758 <line:56:3, col:12> 'const char *' '='
|   | |-UnaryOperator 0x13b1456f0 <col:3, col:4> 'const char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13b1456d8 <col:4> 'const char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13b1456b8 <col:4> 'const char **' lvalue ParmVar 0x13b128258 'errptr' 'const char **'
|   | `-ImplicitCastExpr 0x13b145740 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13b145728 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13b145708 <col:12> 'char[4]' lvalue "STR"
|   `-CallExpr 0x13b1457d0 <line:57:3, col:16> 'int'
|     |-ImplicitCastExpr 0x13b1457b8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x13b145778 <col:3> 'int ()' Function 0x13b1421f8 'DBUG_RETURN' 'int ()'
|     `-IntegerLiteral 0x13b145798 <col:15> 'int' 1
|-FunctionDecl 0x13b143eb0 <line:41:8> col:8 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x13b143fb0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13b144018 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b143f58 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x13b144320 <line:46:10> col:10 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x13b144420 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13b144488 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13b1443c8 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x13b144850 <line:50:10> col:10 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x13b144950 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13b1449b8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13b1448f8 <<invalid sloc>> Implicit 887
