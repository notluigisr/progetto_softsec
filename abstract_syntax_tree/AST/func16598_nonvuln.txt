TranslationUnitDecl 0x14b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b055bd0 '__int128'
|-TypedefDecl 0x14b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b055bf0 'unsigned __int128'
|-TypedefDecl 0x14b127430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b127200 'struct __NSConstantString_tag'
|   `-Record 0x14b056580 '__NSConstantString_tag'
|-TypedefDecl 0x14b127498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b055d90 '__SVInt8_t'
|-TypedefDecl 0x14b127500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b055db0 '__SVInt16_t'
|-TypedefDecl 0x14b127568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b055dd0 '__SVInt32_t'
|-TypedefDecl 0x14b1275d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b055df0 '__SVInt64_t'
|-TypedefDecl 0x14b127638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b055e10 '__SVUint8_t'
|-TypedefDecl 0x14b1276a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b055e30 '__SVUint16_t'
|-TypedefDecl 0x14b127708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b055e50 '__SVUint32_t'
|-TypedefDecl 0x14b127770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b055e70 '__SVUint64_t'
|-TypedefDecl 0x14b1277d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b055e90 '__SVFloat16_t'
|-TypedefDecl 0x14b127840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b1278a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b127910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b127978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b1279e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b127a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b127ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b127b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b127b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b127be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b127c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b127cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b127d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b127d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b127df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b127e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b127ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b127f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b127f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b127ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b128060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b1280c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b128130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b128198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b128a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b128a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b128ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b128b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b128ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b128c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b128c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b128cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b128d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b128da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b128e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b128e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b128ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b128f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b128fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b129018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b056390 '__SVBool_t'
|-TypedefDecl 0x14b129080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b1290e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b129150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b0563f0 '__SVCount_t'
|-TypedefDecl 0x14b1291f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b1291b0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-TypedefDecl 0x14b129268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b1291b0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-FunctionDecl 0x14b129488 <dataset_diviso_filec/func16598_nonvuln.c:1:1, line:110:1> line:1:19 invalid GetDrawInfo 'int (const int *, int *)'
| |-ParmVarDecl 0x14b1292f0 <col:31, col:48> col:48 referenced invalid image_info 'const int *'
| |-ParmVarDecl 0x14b1293a8 <col:59, col:69> col:69 referenced invalid draw_info 'int *'
| `-CompoundStmt 0x14b148b70 <line:2:1, line:110:1>
|   |-DeclStmt 0x14b1295c0 <line:3:3, line:4:16>
|   | `-VarDecl 0x14b129558 <line:3:3, line:4:6> col:6 used next_token 'char *'
|   |-DeclStmt 0x14b129658 <line:6:3, line:7:12>
|   | `-VarDecl 0x14b1295f0 <line:6:3, line:7:6> col:6 used option 'const char *'
|   |-BinaryOperator 0x14b129748 <line:12:3, line:13:6> '<dependent type>' contains-errors '*'
|   | |-RecoveryExpr 0x14b1296a8 <line:12:3> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14b129688 <col:3> 'const int *' lvalue ParmVar 0x14b1292f0 'image_info' 'const int *'
|   | `-RecoveryExpr 0x14b129728 <line:13:6> '<dependent type>' contains-errors lvalue
|   |-CStyleCastExpr 0x14b143480 <line:18:3, col:47> 'void' contains-errors <ToVoid>
|   | `-CallExpr 0x14b143438 <col:10, col:47> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14b143330 <col:10> 'void *(void *, int, unsigned long)' Function 0x14b1430e0 'memset' 'void *(void *, int, unsigned long)'
|   |   |-RecoveryExpr 0x14b143350 <col:17> '<dependent type>' contains-errors lvalue
|   |   |-IntegerLiteral 0x14b143370 <col:27> 'int' 0
|   |   `-UnaryExprOrTypeTraitExpr 0x14b143400 <col:29, col:46> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x14b1433e0 <col:35, col:46> '<dependent type>' contains-errors
|   |       `-UnaryOperator 0x14b1433c8 <col:36, col:37> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x14b1433b0 <col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |           `-RecoveryExpr 0x14b143390 <col:37> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14b143770 <line:20:3, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14b1436d0 <col:3> 'int ()' Function 0x14b143618 'GetAffineMatrix' 'int ()'
|   | `-UnaryOperator 0x14b143758 <col:19, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x14b143710 <col:20, col:31> '<dependent type>' contains-errors lvalue ->affine
|   |     `-RecoveryExpr 0x14b1436f0 <col:20> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14b145480 <line:27:3, col:27> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14b145418 <col:3, col:14> '<dependent type>' contains-errors lvalue ->stroke_width
|   | | `-RecoveryExpr 0x14b1453f0 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14b1453d0 <col:3> 'int *' lvalue ParmVar 0x14b1293a8 'draw_info' 'int *'
|   | `-FloatingLiteral 0x14b145460 <col:27> 'double' 1.000000e+00
|   |-BinaryOperator 0x14b1458b0 <line:34:3, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14b145848 <col:3, col:14> '<dependent type>' contains-errors lvalue ->miterlimit
|   | | `-RecoveryExpr 0x14b145820 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14b145800 <col:3> 'int *' lvalue ParmVar 0x14b1293a8 'draw_info' 'int *'
|   | `-IntegerLiteral 0x14b145890 <col:25> 'int' 10
|   |-BinaryOperator 0x14b145a10 <line:36:3, col:24> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14b1459a8 <col:3, col:14> '<dependent type>' contains-errors lvalue ->pointsize
|   | | `-RecoveryExpr 0x14b145980 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14b145960 <col:3> 'int *' lvalue ParmVar 0x14b1293a8 'draw_info' 'int *'
|   | `-FloatingLiteral 0x14b1459f0 <col:24> 'double' 1.200000e+01
|   |-BinaryOperator 0x14b145e80 <line:41:3, col:35> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14b145d00 <col:3, col:14> '<dependent type>' contains-errors lvalue ->debug
|   | | `-RecoveryExpr 0x14b145cd8 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14b145cb8 <col:3> 'int *' lvalue ParmVar 0x14b1293a8 'draw_info' 'int *'
|   | `-CallExpr 0x14b145e60 <col:20, col:35> 'int'
|   |   `-ImplicitCastExpr 0x14b145e48 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x14b145e28 <col:20> 'int ()' Function 0x14b145d70 'IsEventLogging' 'int ()'
|   |-IfStmt 0x14b147338 <line:59:3, line:60:51>
|   | |-RecoveryExpr 0x14b147110 <line:59:7, col:32> '_Bool' contains-errors
|   | `-CStyleCastExpr 0x14b147310 <line:60:5, col:51> 'void' contains-errors <ToVoid>
|   |   `-CallExpr 0x14b1472d0 <col:12, col:51> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14b147210 <col:12> 'int ()' Function 0x14b147158 'CloneString' 'int ()'
|   |     |-UnaryOperator 0x14b147298 <col:24, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-CXXDependentScopeMemberExpr 0x14b147250 <col:25, col:36> '<dependent type>' contains-errors lvalue ->encoding
|   |     |   `-RecoveryExpr 0x14b147230 <col:25> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14b1472b0 <col:45> 'const char *' lvalue Var 0x14b1295f0 'option' 'const char *'
|   |-IfStmt 0x14b147520 <line:62:3, line:63:49>
|   | |-RecoveryExpr 0x14b1473d8 <line:62:7, col:32> '_Bool' contains-errors
|   | `-CStyleCastExpr 0x14b1474f8 <line:63:5, col:49> 'void' contains-errors <ToVoid>
|   |   `-CallExpr 0x14b1474b8 <col:12, col:49> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14b1473f8 <col:12> 'int ()' Function 0x14b147158 'CloneString' 'int ()'
|   |     |-UnaryOperator 0x14b147480 <col:24, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-CXXDependentScopeMemberExpr 0x14b147438 <col:25, col:36> '<dependent type>' contains-errors lvalue ->family
|   |     |   `-RecoveryExpr 0x14b147418 <col:25> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14b147498 <col:43> 'const char *' lvalue Var 0x14b1295f0 'option' 'const char *'
|   |-IfStmt 0x14b147b08 <line:73:3, line:74:67>
|   | |-RecoveryExpr 0x14b147850 <line:73:7, col:32> '_Bool' contains-errors
|   | `-BinaryOperator 0x14b147ae8 <line:74:5, col:67> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x14b1478b8 <col:5, col:16> '<dependent type>' contains-errors lvalue ->interline_spacing
|   |   | `-RecoveryExpr 0x14b147890 <col:5> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x14b147870 <col:5> 'int *' lvalue ParmVar 0x14b1293a8 'draw_info' 'int *'
|   |   `-CallExpr 0x14b147aa0 <col:34, col:67> 'int'
|   |     |-ImplicitCastExpr 0x14b147a88 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14b1479e0 <col:34> 'int ()' Function 0x14b147928 'StringToDouble' 'int ()'
|   |     |-ImplicitCastExpr 0x14b147ad0 <col:49> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14b147a00 <col:49> 'const char *' lvalue Var 0x14b1295f0 'option' 'const char *'
|   |     `-UnaryOperator 0x14b147a70 <col:56, col:57> 'char **' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x14b147a20 <col:57> 'char *' lvalue Var 0x14b129558 'next_token' 'char *'
|   |-IfStmt 0x14b147d50 <line:76:3, line:77:67>
|   | |-RecoveryExpr 0x14b147ba8 <line:76:7, col:32> '_Bool' contains-errors
|   | `-BinaryOperator 0x14b147d30 <line:77:5, col:67> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x14b147c10 <col:5, col:16> '<dependent type>' contains-errors lvalue ->interword_spacing
|   |   | `-RecoveryExpr 0x14b147be8 <col:5> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x14b147bc8 <col:5> 'int *' lvalue ParmVar 0x14b1293a8 'draw_info' 'int *'
|   |   `-CallExpr 0x14b147ce8 <col:34, col:67> 'int'
|   |     |-ImplicitCastExpr 0x14b147cd0 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14b147c58 <col:34> 'int ()' Function 0x14b147928 'StringToDouble' 'int ()'
|   |     |-ImplicitCastExpr 0x14b147d18 <col:49> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14b147c78 <col:49> 'const char *' lvalue Var 0x14b1295f0 'option' 'const char *'
|   |     `-UnaryOperator 0x14b147cb8 <col:56, col:57> 'char **' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x14b147c98 <col:57> 'char *' lvalue Var 0x14b129558 'next_token' 'char *'
|   |-IfStmt 0x14b147f98 <line:79:3, line:80:57>
|   | |-RecoveryExpr 0x14b147df0 <line:79:7, col:32> '_Bool' contains-errors
|   | `-BinaryOperator 0x14b147f78 <line:80:5, col:57> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x14b147e58 <col:5, col:16> '<dependent type>' contains-errors lvalue ->kerning
|   |   | `-RecoveryExpr 0x14b147e30 <col:5> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x14b147e10 <col:5> 'int *' lvalue ParmVar 0x14b1293a8 'draw_info' 'int *'
|   |   `-CallExpr 0x14b147f30 <col:24, col:57> 'int'
|   |     |-ImplicitCastExpr 0x14b147f18 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14b147ea0 <col:24> 'int ()' Function 0x14b147928 'StringToDouble' 'int ()'
|   |     |-ImplicitCastExpr 0x14b147f60 <col:39> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14b147ec0 <col:39> 'const char *' lvalue Var 0x14b1295f0 'option' 'const char *'
|   |     `-UnaryOperator 0x14b147f00 <col:46, col:47> 'char **' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x14b147ee0 <col:47> 'char *' lvalue Var 0x14b129558 'next_token' 'char *'
|   |-IfStmt 0x14b148340 <line:86:3, line:87:62>
|   | |-RecoveryExpr 0x14b148198 <line:86:7, col:32> '_Bool' contains-errors
|   | `-BinaryOperator 0x14b148320 <line:87:5, col:62> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x14b148200 <col:5, col:16> '<dependent type>' contains-errors lvalue ->stroke_width
|   |   | `-RecoveryExpr 0x14b1481d8 <col:5> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x14b1481b8 <col:5> 'int *' lvalue ParmVar 0x14b1293a8 'draw_info' 'int *'
|   |   `-CallExpr 0x14b1482d8 <col:29, col:62> 'int'
|   |     |-ImplicitCastExpr 0x14b1482c0 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14b148248 <col:29> 'int ()' Function 0x14b147928 'StringToDouble' 'int ()'
|   |     |-ImplicitCastExpr 0x14b148308 <col:44> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14b148268 <col:44> 'const char *' lvalue Var 0x14b1295f0 'option' 'const char *'
|   |     `-UnaryOperator 0x14b1482a8 <col:51, col:52> 'char **' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x14b148288 <col:52> 'char *' lvalue Var 0x14b129558 'next_token' 'char *'
|   `-IfStmt 0x14b1488a8 <line:97:3, line:106:5>
|     |-RecoveryExpr 0x14b148670 <line:97:7, col:32> '_Bool' contains-errors
|     `-CompoundStmt 0x14b148898 <line:98:5, line:106:5>
|-FunctionDecl 0x14b1430e0 <line:18:10> col:10 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x14b1431e0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x14b143248 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x14b1432b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14b143188 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x14b146a00 <line:47:7> col:7 implicit used fabs 'double (double)' extern
  |-ParmVarDecl 0x14b146b00 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x14b146aa8 <<invalid sloc>> Implicit 1004
  |-NoThrowAttr 0x14b146b70 <col:7> Implicit
  `-ConstAttr 0x14b146b98 <col:7> Implicit
