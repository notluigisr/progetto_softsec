TranslationUnitDecl 0x14504e408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14504f2b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14504e9d0 '__int128'
|-TypedefDecl 0x14504f328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14504e9f0 'unsigned __int128'
|-TypedefDecl 0x144815830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x144815600 'struct __NSConstantString_tag'
|   `-Record 0x14504f380 '__NSConstantString_tag'
|-TypedefDecl 0x144815898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14504eb90 '__SVInt8_t'
|-TypedefDecl 0x144815900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14504ebb0 '__SVInt16_t'
|-TypedefDecl 0x144815968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14504ebd0 '__SVInt32_t'
|-TypedefDecl 0x1448159d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14504ebf0 '__SVInt64_t'
|-TypedefDecl 0x144815a38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14504ec10 '__SVUint8_t'
|-TypedefDecl 0x144815aa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14504ec30 '__SVUint16_t'
|-TypedefDecl 0x144815b08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14504ec50 '__SVUint32_t'
|-TypedefDecl 0x144815b70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14504ec70 '__SVUint64_t'
|-TypedefDecl 0x144815bd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14504ec90 '__SVFloat16_t'
|-TypedefDecl 0x144815c40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14504ecb0 '__SVFloat32_t'
|-TypedefDecl 0x144815ca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14504ecd0 '__SVFloat64_t'
|-TypedefDecl 0x144815d10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14504ecf0 '__SVBfloat16_t'
|-TypedefDecl 0x144815d78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14504ed10 '__clang_svint8x2_t'
|-TypedefDecl 0x144815de0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14504ed30 '__clang_svint16x2_t'
|-TypedefDecl 0x144815e48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14504ed50 '__clang_svint32x2_t'
|-TypedefDecl 0x144815eb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14504ed70 '__clang_svint64x2_t'
|-TypedefDecl 0x144815f18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14504ed90 '__clang_svuint8x2_t'
|-TypedefDecl 0x144815f80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14504edb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x144815fe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14504edd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x144816050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14504edf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1448160b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14504ee10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x144816120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14504ee30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x144816188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14504ee50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1448161f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14504ee70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x144816258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14504ee90 '__clang_svint8x3_t'
|-TypedefDecl 0x1448162c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14504eeb0 '__clang_svint16x3_t'
|-TypedefDecl 0x144816328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14504eed0 '__clang_svint32x3_t'
|-TypedefDecl 0x144816390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14504eef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1448163f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14504ef10 '__clang_svuint8x3_t'
|-TypedefDecl 0x144816460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14504ef30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1448164c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14504ef50 '__clang_svuint32x3_t'
|-TypedefDecl 0x144816530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14504ef70 '__clang_svuint64x3_t'
|-TypedefDecl 0x144816598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14504ef90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x144816600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14504efb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x144816668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14504efd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1448166d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14504eff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x144816738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14504f010 '__clang_svint8x4_t'
|-TypedefDecl 0x1448167a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14504f030 '__clang_svint16x4_t'
|-TypedefDecl 0x144816808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14504f050 '__clang_svint32x4_t'
|-TypedefDecl 0x144816870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14504f070 '__clang_svint64x4_t'
|-TypedefDecl 0x1448168d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14504f090 '__clang_svuint8x4_t'
|-TypedefDecl 0x144816940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14504f0b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1448169a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14504f0d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x144816a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14504f0f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x144816a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14504f110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x144816ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14504f130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x144816b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14504f150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x144816bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14504f170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x144816c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14504f190 '__SVBool_t'
|-TypedefDecl 0x144816c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14504f1b0 '__clang_svboolx2_t'
|-TypedefDecl 0x144816ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14504f1d0 '__clang_svboolx4_t'
|-TypedefDecl 0x144816d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14504f1f0 '__SVCount_t'
|-TypedefDecl 0x144816df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x144816db0 'char *'
|   `-BuiltinType 0x14504e4b0 'char'
|-TypedefDecl 0x144816e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x144816db0 'char *'
|   `-BuiltinType 0x14504e4b0 'char'
|-RecordDecl 0x144816ec0 <dataset_diviso_filec/func13305_vuln.c:1:8, col:15> col:15 struct dump_dir
|-FunctionDecl 0x144817348 <col:1, line:56:1> line:1:25 invalid open_directory_for_modification_of_element 'struct dump_dir *(int *, int, const char *, const char *)' static
| |-ParmVarDecl 0x144816fc8 <line:2:5, col:28> col:28 invalid invocation 'int *'
| |-ParmVarDecl 0x144817048 <line:3:5, col:11> col:11 invalid caller_uid 'int'
| |-ParmVarDecl 0x1448170c8 <line:4:5, col:17> col:17 used problem_id 'const char *'
| |-ParmVarDecl 0x144817148 <line:5:5, col:17> col:17 used element 'const char *'
| `-CompoundStmt 0x14511cdb8 <line:6:1, line:56:1>
|   |-DeclStmt 0x144817548 <line:7:5, line:11:6>
|   | `-VarDecl 0x144817498 <line:7:5, col:49> col:30 used protected_elements 'const char *const[]' static
|   |-ForStmt 0x14511c0c8 <line:13:5, line:25:5>
|   | |-DeclStmt 0x14482eaa0 <line:13:10, col:59>
|   | | `-VarDecl 0x14482ea00 <col:10, col:41> col:29 used protected 'const char *const *' cinit
|   | |   `-ImplicitCastExpr 0x14482ea88 <col:41> 'const char *const *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x14482ea68 <col:41> 'const char *const[]' lvalue Var 0x144817498 'protected_elements' 'const char *const[]'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x14482eb08 <col:61, col:62> 'const char *' <LValueToRValue>
|   | | `-UnaryOperator 0x14482eaf0 <col:61, col:62> 'const char *const' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x14482ead8 <col:62> 'const char *const *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x14482eab8 <col:62> 'const char *const *' lvalue Var 0x14482ea00 'protected' 'const char *const *'
|   | |-UnaryOperator 0x14482eb40 <col:73, col:75> 'const char *const *' prefix '++'
|   | | `-DeclRefExpr 0x14482eb20 <col:75> 'const char *const *' lvalue Var 0x14482ea00 'protected' 'const char *const *'
|   | `-CompoundStmt 0x14511c0b0 <line:14:5, line:25:5>
|   |   `-IfStmt 0x14511c090 <line:15:9, line:24:9>
|   |     |-BinaryOperator 0x14482f328 <line:15:13, col:44> 'int' '=='
|   |     | |-CallExpr 0x14482f2a8 <col:13, col:39> 'int'
|   |     | | |-ImplicitCastExpr 0x14482f290 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x14482f1a0 <col:13> 'int (const char *, const char *)' Function 0x14482efc0 'strcmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x14482f2d8 <col:20, col:21> 'const char *' <LValueToRValue>
|   |     | | | `-UnaryOperator 0x14482f1f8 <col:20, col:21> 'const char *const' lvalue prefix '*' cannot overflow
|   |     | | |   `-ImplicitCastExpr 0x14482f1e0 <col:21> 'const char *const *' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x14482f1c0 <col:21> 'const char *const *' lvalue Var 0x14482ea00 'protected' 'const char *const *'
|   |     | | `-ImplicitCastExpr 0x14482f2f0 <col:32> 'const char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x14482f210 <col:32> 'const char *' lvalue ParmVar 0x144817148 'element' 'const char *'
|   |     | `-IntegerLiteral 0x14482f308 <col:44> 'int' 0
|   |     `-CompoundStmt 0x14511c058 <line:16:9, line:24:9>
|   |       |-CallExpr 0x14482f5a8 <line:17:13, col:50> 'int'
|   |       | |-ImplicitCastExpr 0x14482f590 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14482f4a0 <col:13> 'int ()' Function 0x14482f3e8 'log_notice' 'int ()'
|   |       | |-ImplicitCastExpr 0x14482f5e0 <col:24> 'char *' <ArrayToPointerDecay>
|   |       | | `-StringLiteral 0x14482f500 <col:24> 'char[4]' lvalue "STR"
|   |       | |-ImplicitCastExpr 0x14482f5f8 <col:31> 'const char *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x14482f520 <col:31> 'const char *' lvalue ParmVar 0x144817148 'element' 'const char *'
|   |       | `-ImplicitCastExpr 0x14482f610 <col:40> 'const char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x14482f540 <col:40> 'const char *' lvalue ParmVar 0x1448170c8 'problem_id' 'const char *'
|   |       |-DeclStmt 0x14482f9b8 <line:18:13, col:55>
|   |       | `-VarDecl 0x14482f640 <col:13, col:54> col:19 used error 'char *' cinit
|   |       |   `-ImplicitCastExpr 0x14482f9a0 <col:27, col:54> 'char *' <IntegralToPointer>
|   |       |     `-CallExpr 0x14482f958 <col:27, col:54> 'int'
|   |       |       |-ImplicitCastExpr 0x14482f940 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x14482f788 <col:27> 'int ()' Function 0x14482f6d0 'xasprintf' 'int ()'
|   |       |       |-CallExpr 0x14482f8e0 <col:37, col:44> 'int'
|   |       |       | |-ImplicitCastExpr 0x14482f8c8 <col:37> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | | `-DeclRefExpr 0x14482f888 <col:37> 'int ()' Function 0x14482f7d0 '_' 'int ()'
|   |       |       | `-ImplicitCastExpr 0x14482f908 <col:39> 'char *' <ArrayToPointerDecay>
|   |       |       |   `-StringLiteral 0x14482f8a8 <col:39> 'char[4]' lvalue "STR"
|   |       |       `-ImplicitCastExpr 0x14482f988 <col:47> 'const char *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x14482f920 <col:47> 'const char *' lvalue ParmVar 0x144817148 'element' 'const char *'
|   |       |-CallExpr 0x14511bd38 <line:19:13, line:21:46> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x14511bcb8 <line:19:13> 'int ()' Function 0x14511bc00 'g_dbus_method_invocation_return_dbus_error' 'int ()'
|   |       | |-RecoveryExpr 0x14511bcd8 <col:56> '<dependent type>' contains-errors lvalue
|   |       | |-StringLiteral 0x14511bcf8 <line:20:41> 'char[4]' lvalue "STR"
|   |       | `-DeclRefExpr 0x14511bd18 <line:21:41> 'char *' lvalue Var 0x14482f640 'error' 'char *'
|   |       |-CallExpr 0x14511bfb8 <line:22:13, col:23> 'void'
|   |       | |-ImplicitCastExpr 0x14511bfa0 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14511bf18 <col:13> 'void (void *)' Function 0x14511bda8 'free' 'void (void *)'
|   |       | `-ImplicitCastExpr 0x14511bff8 <col:18> 'void *' <BitCast>
|   |       |   `-ImplicitCastExpr 0x14511bfe0 <col:18> 'char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x14511bf38 <col:18> 'char *' lvalue Var 0x14482f640 'error' 'char *'
|   |       `-ReturnStmt 0x14511c048 <line:23:13, col:20>
|   |         `-RecoveryExpr 0x14511c028 <col:20> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14511c7f0 <line:27:5, line:43:5>
|   | |-UnaryOperator 0x14511c270 <line:27:9, col:59> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x14511c240 <col:10, col:59> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x14511c1e0 <col:10> 'int ()' Function 0x14511c128 'dump_dir_accessible_by_uid' 'int ()'
|   | |   |-DeclRefExpr 0x14511c200 <col:37> 'const char *' lvalue ParmVar 0x1448170c8 'problem_id' 'const char *'
|   | |   `-RecoveryExpr 0x14511c220 <col:49> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14511c7d8 <line:28:5, line:43:5>
|   |   `-IfStmt 0x14511c7a8 <line:29:9, line:40:9> has_else
|   |     |-BinaryOperator 0x14511c318 <line:29:13, col:22> 'int' contains-errors '=='
|   |     | |-RecoveryExpr 0x14511c2d8 <col:13> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x14511c2f8 <col:22> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x14511c580 <line:30:9, line:33:9>
|   |     | |-CallExpr 0x14511c3b0 <line:31:13, col:41> 'int'
|   |     | | |-ImplicitCastExpr 0x14511c398 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x14511c338 <col:13> 'int ()' Function 0x14482f3e8 'log_notice' 'int ()'
|   |     | | |-ImplicitCastExpr 0x14511c3e0 <col:24> 'char *' <ArrayToPointerDecay>
|   |     | | | `-StringLiteral 0x14511c358 <col:24> 'char[4]' lvalue "STR"
|   |     | | `-ImplicitCastExpr 0x14511c3f8 <col:31> 'const char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x14511c378 <col:31> 'const char *' lvalue ParmVar 0x1448170c8 'problem_id' 'const char *'
|   |     | `-CallExpr 0x14511c550 <line:32:13, col:66> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x14511c4f0 <col:13> 'int ()' Function 0x14511c438 'return_InvalidProblemDir_error' 'int ()'
|   |     |   |-RecoveryExpr 0x14511c510 <col:44> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x14511c530 <col:56> 'const char *' lvalue ParmVar 0x1448170c8 'problem_id' 'const char *'
|   |     `-CompoundStmt 0x14511c788 <line:35:9, line:40:9>
|   |       |-CallExpr 0x14511c620 <line:36:13, col:53> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x14511c5a0 <col:13> 'int ()' Function 0x14482f3e8 'log_notice' 'int ()'
|   |       | |-StringLiteral 0x14511c5c0 <col:24> 'char[4]' lvalue "STR"
|   |       | |-RecoveryExpr 0x14511c5e0 <col:31> '<dependent type>' contains-errors lvalue
|   |       | `-DeclRefExpr 0x14511c600 <col:43> 'const char *' lvalue ParmVar 0x1448170c8 'problem_id' 'const char *'
|   |       `-CallExpr 0x14511c750 <line:37:13, line:39:41> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x14511c658 <line:37:13> 'int ()' Function 0x14511bc00 'g_dbus_method_invocation_return_dbus_error' 'int ()'
|   |         |-RecoveryExpr 0x14511c678 <col:56> '<dependent type>' contains-errors lvalue
|   |         |-StringLiteral 0x14511c698 <line:38:33> 'char[4]' lvalue "STR"
|   |         `-CallExpr 0x14511c710 <line:39:33, col:40> 'int'
|   |           |-ImplicitCastExpr 0x14511c6f8 <col:33> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x14511c6b8 <col:33> 'int ()' Function 0x14482f7d0 '_' 'int ()'
|   |           `-ImplicitCastExpr 0x14511c738 <col:35> 'char *' <ArrayToPointerDecay>
|   |             `-StringLiteral 0x14511c6d8 <col:35> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x14511cab8 <line:45:5, col:53>
|   | `-VarDecl 0x14511c898 <col:5, col:52> col:22 used dd 'struct dump_dir *' cinit
|   |   `-ImplicitCastExpr 0x14511caa0 <col:27, col:52> 'struct dump_dir *' <IntegralToPointer>
|   |     `-CallExpr 0x14511ca58 <col:27, col:52> 'int'
|   |       |-ImplicitCastExpr 0x14511ca40 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14511c9e0 <col:27> 'int ()' Function 0x14511c928 'dd_opendir' 'int ()'
|   |       |-ImplicitCastExpr 0x14511ca88 <col:38> 'const char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x14511ca00 <col:38> 'const char *' lvalue ParmVar 0x1448170c8 'problem_id' 'const char *'
|   |       `-IntegerLiteral 0x14511ca20 <col:51> 'int' 0
|   |-IfStmt 0x14511cd50 <line:46:5, line:53:5>
|   | |-UnaryOperator 0x14511cb08 <line:46:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14511caf0 <col:10> 'struct dump_dir *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14511cad0 <col:10> 'struct dump_dir *' lvalue Var 0x14511c898 'dd' 'struct dump_dir *'
|   | `-CompoundStmt 0x14511cd30 <line:47:5, line:53:5>
|   |   |-CallExpr 0x14511cb98 <line:48:9, col:37> 'int'
|   |   | |-ImplicitCastExpr 0x14511cb80 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14511cb20 <col:9> 'int ()' Function 0x14482f3e8 'log_notice' 'int ()'
|   |   | |-ImplicitCastExpr 0x14511cbc8 <col:20> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x14511cb40 <col:20> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x14511cbe0 <col:27> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14511cb60 <col:27> 'const char *' lvalue ParmVar 0x1448170c8 'problem_id' 'const char *'
|   |   `-CallExpr 0x14511ccf8 <line:49:9, line:51:41> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14511cc00 <line:49:9> 'int ()' Function 0x14511bc00 'g_dbus_method_invocation_return_dbus_error' 'int ()'
|   |     |-RecoveryExpr 0x14511cc20 <col:52> '<dependent type>' contains-errors lvalue
|   |     |-StringLiteral 0x14511cc40 <line:50:33> 'char[4]' lvalue "STR"
|   |     `-CallExpr 0x14511ccb8 <line:51:33, col:40> 'int'
|   |       |-ImplicitCastExpr 0x14511cca0 <col:33> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14511cc60 <col:33> 'int ()' Function 0x14482f7d0 '_' 'int ()'
|   |       `-ImplicitCastExpr 0x14511cce0 <col:35> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x14511cc80 <col:35> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x14511cda8 <line:55:5, col:12>
|     `-ImplicitCastExpr 0x14511cd90 <col:12> 'struct dump_dir *' <LValueToRValue>
|       `-DeclRefExpr 0x14511cd70 <col:12> 'struct dump_dir *' lvalue Var 0x14511c898 'dd' 'struct dump_dir *'
|-FunctionDecl 0x14482efc0 <line:15:13> col:13 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x14482f0c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14482f128 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14482f068 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x14511bda8 <line:22:13> col:13 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14511bea8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14511be50 <<invalid sloc>> Implicit 873
