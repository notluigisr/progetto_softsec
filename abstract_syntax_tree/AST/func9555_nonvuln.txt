TranslationUnitDecl 0x15a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a855bd0 '__int128'
|-TypedefDecl 0x15a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a855bf0 'unsigned __int128'
|-TypedefDecl 0x15b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x15a856580 '__NSConstantString_tag'
|-TypedefDecl 0x15b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a855d90 '__SVInt8_t'
|-TypedefDecl 0x15b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a855db0 '__SVInt16_t'
|-TypedefDecl 0x15b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a855dd0 '__SVInt32_t'
|-TypedefDecl 0x15b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a855df0 '__SVInt64_t'
|-TypedefDecl 0x15b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a855e10 '__SVUint8_t'
|-TypedefDecl 0x15b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a855e30 '__SVUint16_t'
|-TypedefDecl 0x15b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a855e50 '__SVUint32_t'
|-TypedefDecl 0x15b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a855e70 '__SVUint64_t'
|-TypedefDecl 0x15b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a855e90 '__SVFloat16_t'
|-TypedefDecl 0x15b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a856390 '__SVBool_t'
|-TypedefDecl 0x15b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a8563f0 '__SVCount_t'
|-TypedefDecl 0x15b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b00dbb0 'char *'
|   `-BuiltinType 0x15a8556b0 'char'
|-TypedefDecl 0x15b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b00dbb0 'char *'
|   `-BuiltinType 0x15a8556b0 'char'
|-FunctionDecl 0x15b00e008 <dataset_diviso_filec/func9555_nonvuln.c:1:1, line:56:1> line:1:1 invalid gs_remove_control_path_len_flags 'int (const int *, int, const char *, int, int)'
| |-ParmVarDecl 0x15b00dcf0 <col:34, col:53> col:53 invalid mem 'const int *'
| |-ParmVarDecl 0x15b00dd70 <col:58, col:76> col:76 invalid type 'int'
| |-ParmVarDecl 0x15b00ddf0 <col:82, col:94> col:94 used path 'const char *'
| |-ParmVarDecl 0x15b00de70 <col:100, col:107> col:107 invalid len 'int'
| |-ParmVarDecl 0x15b00def0 <col:112, col:116> col:116 used flags 'int'
| `-CompoundStmt 0x15b028ee8 <line:2:1, line:56:1>
|   |-DeclStmt 0x15b00e208 <line:4:5, col:22>
|   | |-VarDecl 0x15b00e108 <col:5, col:18> col:18 used n 'unsigned int'
|   | `-VarDecl 0x15b00e188 <col:5, col:21> col:21 used i 'unsigned int'
|   |-DeclStmt 0x15b00e2b8 <line:6:5, col:17>
|   | `-VarDecl 0x15b00e250 <col:5, col:11> col:11 used buffer 'char *'
|   |-DeclStmt 0x15b00e350 <line:7:5, col:14>
|   | `-VarDecl 0x15b00e2e8 <col:5, col:10> col:10 used rlen 'int'
|   |-IfStmt 0x15b0274d0 <line:9:5, line:10:16>
|   | |-BinaryOperator 0x15b027480 <line:9:9, col:32> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x15b027460 <col:9, col:17> 'int' contains-errors '=='
|   | | | |-DeclRefExpr 0x15b00e368 <col:9> 'const char *' lvalue ParmVar 0x15b00ddf0 'path' 'const char *'
|   | | | `-RecoveryExpr 0x15b027440 <col:17> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x15b027400 <col:25, col:32> 'int' contains-errors '=='
|   | |   |-RecoveryExpr 0x15b00e3c0 <col:25> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x15b00e3e0 <col:32> 'int' 0
|   | `-ReturnStmt 0x15b0274c0 <line:10:9, col:16>
|   |   `-IntegerLiteral 0x15b0274a0 <col:16> 'int' 0
|   |-IfStmt 0x15b0276a0 <line:12:5, line:14:16>
|   | |-RecoveryExpr 0x15b027638 <line:12:9, line:13:43> '_Bool' contains-errors
|   | `-ReturnStmt 0x15b027690 <line:14:9, col:16>
|   |   `-RecoveryExpr 0x15b027670 <col:16> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x15b0276f8 <line:16:5, line:28:5>
|   | |-RecoveryExpr 0x15b0276c0 <line:16:12> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15b027790 <col:18, line:28:5>
|   |   |-BreakStmt 0x15b027750 <line:19:13>
|   |   |-BreakStmt 0x15b027758 <line:22:13>
|   |   |-BreakStmt 0x15b027760 <line:25:13>
|   |   `-DefaultStmt 0x15b027770 <line:26:9, col:16>
|   |     `-NullStmt 0x15b027768 <col:16>
|   |-BinaryOperator 0x15b027840 <line:30:5, col:16> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b0277c0 <col:5> 'int' lvalue Var 0x15b00e2e8 'rlen' 'int'
|   | `-BinaryOperator 0x15b027820 <col:12, col:16> '<dependent type>' contains-errors '+'
|   |   |-RecoveryExpr 0x15b0277e0 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x15b027800 <col:16> 'int' 1
|   |-BinaryOperator 0x15b027d50 <line:37:5, col:20> 'char' '='
|   | |-ArraySubscriptExpr 0x15b027cf8 <col:5, col:16> 'char' lvalue
|   | | |-ImplicitCastExpr 0x15b027cc8 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b027c88 <col:5> 'char *' lvalue Var 0x15b00e250 'buffer' 'char *'
|   | | `-ImplicitCastExpr 0x15b027ce0 <col:12> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15b027ca8 <col:12> 'int' lvalue Var 0x15b00e2e8 'rlen' 'int'
|   | `-ImplicitCastExpr 0x15b027d38 <col:20> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x15b027d18 <col:20> 'int' 0
|   |-ForStmt 0x15b028308 <line:40:5, line:45:5>
|   | |-BinaryOperator 0x15b027de8 <line:40:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x15b027d90 <col:10> 'unsigned int' lvalue Var 0x15b00e188 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x15b027dd0 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x15b027db0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15b027e78 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x15b027e48 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b027e08 <col:17> 'unsigned int' lvalue Var 0x15b00e188 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x15b027e60 <col:21> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15b027e28 <col:21> 'unsigned int' lvalue Var 0x15b00e108 'n' 'unsigned int'
|   | |-UnaryOperator 0x15b027eb8 <col:24, col:25> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x15b027e98 <col:24> 'unsigned int' lvalue Var 0x15b00e188 'i' 'unsigned int'
|   | `-CompoundStmt 0x15b0282f0 <col:29, line:45:5>
|   |   `-IfStmt 0x15b0282d0 <line:41:9, line:44:13>
|   |     |-RecoveryExpr 0x15b0282a8 <line:41:13, line:43:44> '_Bool' contains-errors
|   |     `-BreakStmt 0x15b0282c8 <line:44:13>
|   |-IfStmt 0x15b028bd8 <line:47:5, line:48:16>
|   | |-BinaryOperator 0x15b028b88 <line:47:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x15b028b58 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b028b18 <col:9> 'unsigned int' lvalue Var 0x15b00e188 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x15b028b70 <col:14> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15b028b38 <col:14> 'unsigned int' lvalue Var 0x15b00e108 'n' 'unsigned int'
|   | `-ReturnStmt 0x15b028bc8 <line:48:9, col:16>
|   |   `-IntegerLiteral 0x15b028ba8 <col:16> 'int' 0
|   `-ReturnStmt 0x15b028ed8 <line:55:5, col:12>
|     `-IntegerLiteral 0x15b028eb8 <col:12> 'int' 0
`-FunctionDecl 0x15b027f58 <line:42:13> col:13 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x15b028058 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15b0280c0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15b028128 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15b028000 <<invalid sloc>> Implicit 888
