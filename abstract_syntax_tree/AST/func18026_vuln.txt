TranslationUnitDecl 0x13d832408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d8332b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d8329d0 '__int128'
|-TypedefDecl 0x13d833328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d8329f0 'unsigned __int128'
|-TypedefDecl 0x13d903830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d903600 'struct __NSConstantString_tag'
|   `-Record 0x13d833380 '__NSConstantString_tag'
|-TypedefDecl 0x13d903898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d832b90 '__SVInt8_t'
|-TypedefDecl 0x13d903900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d832bb0 '__SVInt16_t'
|-TypedefDecl 0x13d903968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d832bd0 '__SVInt32_t'
|-TypedefDecl 0x13d9039d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d832bf0 '__SVInt64_t'
|-TypedefDecl 0x13d903a38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d832c10 '__SVUint8_t'
|-TypedefDecl 0x13d903aa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d832c30 '__SVUint16_t'
|-TypedefDecl 0x13d903b08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d832c50 '__SVUint32_t'
|-TypedefDecl 0x13d903b70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d832c70 '__SVUint64_t'
|-TypedefDecl 0x13d903bd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d832c90 '__SVFloat16_t'
|-TypedefDecl 0x13d903c40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d832cb0 '__SVFloat32_t'
|-TypedefDecl 0x13d903ca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d832cd0 '__SVFloat64_t'
|-TypedefDecl 0x13d903d10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d832cf0 '__SVBfloat16_t'
|-TypedefDecl 0x13d903d78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d832d10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d903de0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d832d30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d903e48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d832d50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d903eb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d832d70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d903f18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d832d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d903f80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d832db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d903fe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d832dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d904050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d832df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d9040b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d832e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d904120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d832e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d904188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d832e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d9041f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d832e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d904258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d832e90 '__clang_svint8x3_t'
|-TypedefDecl 0x13d9042c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d832eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d904328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d832ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d904390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d832ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d9043f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d832f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d904460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d832f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d9044c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d832f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d904530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d832f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d904598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d832f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d904e00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d832fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d904e68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d832fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d904ed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d832ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d904f38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d833010 '__clang_svint8x4_t'
|-TypedefDecl 0x13d904fa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d833030 '__clang_svint16x4_t'
|-TypedefDecl 0x13d905008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d833050 '__clang_svint32x4_t'
|-TypedefDecl 0x13d905070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d833070 '__clang_svint64x4_t'
|-TypedefDecl 0x13d9050d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d833090 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d905140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d8330b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d9051a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d8330d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d905210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d8330f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d905278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d833110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d9052e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d833130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d905348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d833150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d9053b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d833170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d905418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d833190 '__SVBool_t'
|-TypedefDecl 0x13d905480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d8331b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d9054e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d8331d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d905550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d8331f0 '__SVCount_t'
|-TypedefDecl 0x13d9055f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d9055b0 'char *'
|   `-BuiltinType 0x13d8324b0 'char'
|-TypedefDecl 0x13d905668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d9055b0 'char *'
|   `-BuiltinType 0x13d8324b0 'char'
|-FunctionDecl 0x13d905b78 <dataset_diviso_filec/func18026_vuln.c:1:1, line:58:1> line:1:1 invalid ldbm_config_search_entry_callback 'int (int *, int *, int *, int *, char *, void *)'
| |-ParmVarDecl 0x13d905728 <col:35, col:49> col:49 invalid pb 'int *'
| | `-UnusedAttr 0x13d905790 <col:67> unused
| |-ParmVarDecl 0x13d905800 <line:2:35, col:48> col:48 invalid e 'int *'
| |-ParmVarDecl 0x13d905880 <line:3:35, col:48> col:48 invalid entryAfter 'int *'
| | `-UnusedAttr 0x13d9058e8 <col:74> unused
| |-ParmVarDecl 0x13d905958 <line:4:35, col:40> col:40 used returncode 'int *'
| |-ParmVarDecl 0x13d9059d8 <line:5:35, col:41> col:41 used returntext 'char *'
| |-ParmVarDecl 0x13d905a58 <line:6:35, col:41> col:41 used arg 'void *'
| `-CompoundStmt 0x13d032318 <line:7:1, line:58:1>
|   |-DeclStmt 0x13d905ce0 <line:8:5, col:21>
|   | `-VarDecl 0x13d905c78 <col:5, col:10> col:10 invalid buf 'char'
|   |-DeclStmt 0x13d01d1b8 <line:9:5, col:27>
|   | |-RecordDecl 0x13d905cf8 <col:5, col:12> col:12 struct berval
|   | `-VarDecl 0x13d01d138 <col:5, col:26> col:20 used vals 'struct berval *[2]'
|   |-DeclStmt 0x13d01d6b0 <line:10:5, col:22>
|   | `-VarDecl 0x13d01d220 <col:5, col:19> col:19 referenced invalid val 'struct berval'
|   |-DeclStmt 0x13d01d9a0 <line:11:5, col:49>
|   | |-RecordDecl 0x13d01d6c8 <col:5, col:12> col:12 struct ldbminfo
|   | `-VarDecl 0x13d01d838 <col:5, col:46> col:22 used li 'struct ldbminfo *' cinit
|   |   `-CStyleCastExpr 0x13d01d960 <col:27, col:46> 'struct ldbminfo *' <BitCast>
|   |     `-ImplicitCastExpr 0x13d01d948 <col:46> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x13d01d8a0 <col:46> 'void *' lvalue ParmVar 0x13d905a58 'arg' 'void *'
|   |-DeclStmt 0x13d01da50 <line:13:5, col:14>
|   | `-VarDecl 0x13d01d9e8 <col:5, col:9> col:9 used scope 'int'
|   |-BinaryOperator 0x13d01db80 <line:15:5, col:16> 'struct berval *' contains-errors '='
|   | |-ArraySubscriptExpr 0x13d01db28 <col:5, col:11> 'struct berval *' lvalue
|   | | |-ImplicitCastExpr 0x13d01db10 <col:5> 'struct berval **' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x13d01da68 <col:5> 'struct berval *[2]' lvalue Var 0x13d01d138 'vals' 'struct berval *[2]'
|   | | `-IntegerLiteral 0x13d01da88 <col:10> 'int' 0
|   | `-UnaryOperator 0x13d01db68 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x13d01db48 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13d01dce0 <line:16:5, col:15> 'struct berval *' contains-errors '='
|   | |-ArraySubscriptExpr 0x13d01dca0 <col:5, col:11> 'struct berval *' lvalue
|   | | |-ImplicitCastExpr 0x13d01dc88 <col:5> 'struct berval **' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x13d01dba0 <col:5> 'struct berval *[2]' lvalue Var 0x13d01d138 'vals' 'struct berval *[2]'
|   | | `-IntegerLiteral 0x13d01dbc0 <col:10> 'int' 1
|   | `-RecoveryExpr 0x13d01dcc0 <col:15> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13d01dda8 <line:18:5, col:21> 'char' '='
|   | |-ArraySubscriptExpr 0x13d01dd58 <col:5, col:17> 'char' lvalue
|   | | |-ImplicitCastExpr 0x13d01dd40 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13d01dd00 <col:5> 'char *' lvalue ParmVar 0x13d9059d8 'returntext' 'char *'
|   | | `-IntegerLiteral 0x13d01dd20 <col:16> 'int' 0
|   | `-ImplicitCastExpr 0x13d01dd90 <col:21> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x13d01dd78 <col:21> 'int' 0
|   |-CallExpr 0x13d01dfa0 <line:20:5, col:32> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13d01df20 <col:5> 'int ()' Function 0x13d01de68 'PR_Lock' 'int ()'
|   | `-RecoveryExpr 0x13d01df78 <col:13, col:17> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x13d01df40 <col:13> 'struct ldbminfo *' lvalue Var 0x13d01d838 'li' 'struct ldbminfo *'
|   |-IfStmt 0x13d0319c0 <line:22:5, line:37:5>
|   | |-RecoveryExpr 0x13d01dfc8 <line:22:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13d0319a0 <col:13, line:37:5>
|   |   |-CallExpr 0x13d0311c8 <line:23:9, col:56> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13d0310e0 <col:9> 'int ()' Function 0x13d031028 'slapi_pblock_get' 'int ()'
|   |   | |-RecoveryExpr 0x13d031100 <col:26> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x13d0311a8 <col:30> '<dependent type>' contains-errors lvalue
|   |   | `-UnaryOperator 0x13d031158 <col:50, col:51> 'int *' prefix '&' cannot overflow
|   |   |   `-DeclRefExpr 0x13d031138 <col:51> 'int' lvalue Var 0x13d01d9e8 'scope' 'int'
|   |   `-IfStmt 0x13d031980 <line:24:9, line:36:9>
|   |     |-BinaryOperator 0x13d031278 <line:24:13, col:22> 'int' contains-errors '=='
|   |     | |-DeclRefExpr 0x13d031200 <col:13> 'int' lvalue Var 0x13d01d9e8 'scope' 'int'
|   |     | `-RecoveryExpr 0x13d031258 <col:22> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x13d031958 <col:39, line:36:9>
|   |       |-DeclStmt 0x13d031388 <line:25:13, col:32>
|   |       | `-VarDecl 0x13d0312e8 <col:13, col:28> col:20 used attrs 'char **' cinit
|   |       |   `-RecoveryExpr 0x13d031368 <col:28> '<dependent type>' contains-errors lvalue
|   |       |-CallExpr 0x13d0314c0 <line:26:13, col:60> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x13d0313a0 <col:13> 'int ()' Function 0x13d031028 'slapi_pblock_get' 'int ()'
|   |       | |-RecoveryExpr 0x13d0313c0 <col:30> '<dependent type>' contains-errors lvalue
|   |       | |-RecoveryExpr 0x13d0314a0 <col:34> '<dependent type>' contains-errors lvalue
|   |       | `-UnaryOperator 0x13d031450 <col:54, col:55> 'char ***' contains-errors prefix '&' cannot overflow
|   |       |   `-DeclRefExpr 0x13d0313f8 <col:55> 'char **' contains-errors lvalue Var 0x13d0312e8 'attrs' 'char **'
|   |       `-IfStmt 0x13d031938 <line:27:13, line:34:13>
|   |         |-ImplicitCastExpr 0x13d031518 <line:27:17> 'char **' contains-errors <LValueToRValue>
|   |         | `-DeclRefExpr 0x13d0314f8 <col:17> 'char **' contains-errors lvalue Var 0x13d0312e8 'attrs' 'char **'
|   |         `-CompoundStmt 0x13d031928 <col:24, line:34:13>
|   `-CallExpr 0x13d0322a0 <line:54:5, col:34> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x13d032220 <col:5> 'int ()' Function 0x13d032168 'PR_Unlock' 'int ()'
|     `-RecoveryExpr 0x13d032278 <col:15, col:19> '<dependent type>' contains-errors lvalue
|       `-DeclRefExpr 0x13d032240 <col:15> 'struct ldbminfo *' lvalue Var 0x13d01d838 'li' 'struct ldbminfo *'
`-FunctionDecl 0x13d031d78 <line:50:22> col:22 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13d031e78 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13d031e20 <<invalid sloc>> Implicit 902
