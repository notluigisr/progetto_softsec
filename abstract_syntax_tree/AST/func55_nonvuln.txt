TranslationUnitDecl 0x11e051608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e0524b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e051bd0 '__int128'
|-TypedefDecl 0x11e052528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e051bf0 'unsigned __int128'
|-TypedefDecl 0x11f80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f80bc00 'struct __NSConstantString_tag'
|   `-Record 0x11e052580 '__NSConstantString_tag'
|-TypedefDecl 0x11f80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e051d90 '__SVInt8_t'
|-TypedefDecl 0x11f80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e051db0 '__SVInt16_t'
|-TypedefDecl 0x11f80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e051dd0 '__SVInt32_t'
|-TypedefDecl 0x11f80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e051df0 '__SVInt64_t'
|-TypedefDecl 0x11f80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e051e10 '__SVUint8_t'
|-TypedefDecl 0x11f80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e051e30 '__SVUint16_t'
|-TypedefDecl 0x11f80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e051e50 '__SVUint32_t'
|-TypedefDecl 0x11f80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e051e70 '__SVUint64_t'
|-TypedefDecl 0x11f80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e051e90 '__SVFloat16_t'
|-TypedefDecl 0x11f80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e051eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e051ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e051ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e051f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e051f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e051f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e051f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e051f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e051fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e051fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e051ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e052010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e052030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e052050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e052070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e052090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e0520b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e0520d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e0520f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e052110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e052130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e052150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e052170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e052190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e0521b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e0521d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e0521f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e052210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e052230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e052250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e052270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e052290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e0522b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e0522d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e0522f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e052310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e052330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e052350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e052370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e052390 '__SVBool_t'
|-TypedefDecl 0x11f80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e0523b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e0523d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e0523f0 '__SVCount_t'
|-TypedefDecl 0x11f80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f80dbb0 'char *'
|   `-BuiltinType 0x11e0516b0 'char'
|-TypedefDecl 0x11f80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f80dbb0 'char *'
|   `-BuiltinType 0x11e0516b0 'char'
`-FunctionDecl 0x11f80dfa8 <dataset_diviso_filec/func55_nonvuln.c:1:1, line:27:1> line:1:12 invalid phar_dir_seek 'int (int *, int, int, int *)' static
  |-ParmVarDecl 0x11f80dd28 <col:26, col:38> col:38 invalid stream 'int *'
  |-ParmVarDecl 0x11f80dda8 <col:46, col:52> col:52 referenced invalid offset 'int'
  |-ParmVarDecl 0x11f80de28 <col:60, col:64> col:64 used whence 'int'
  |-ParmVarDecl 0x11f80dea8 <col:72, col:79> col:79 invalid newoffset 'int *'
  `-CompoundStmt 0x11e11eca0 <line:2:1, line:27:1>
    |-IfStmt 0x11f80e198 <line:5:2, line:7:2>
    | |-UnaryOperator 0x11f80e120 <line:5:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11f80e108 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x11f80e0e8 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f80e180 <col:13, line:7:2>
    |   `-ReturnStmt 0x11f80e170 <line:6:3, col:11>
    |     `-UnaryOperator 0x11f80e158 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x11f80e138 <col:11> 'int' 1
    |-IfStmt 0x11e11e420 <line:9:2, line:12:2>
    | |-BinaryOperator 0x11f80e230 <line:9:6, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x11f80e1b8 <col:6> 'int' lvalue ParmVar 0x11f80de28 'whence' 'int'
    | | `-RecoveryExpr 0x11f80e210 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e11e400 <col:26, line:12:2>
    |   |-BinaryOperator 0x11f80e2c8 <line:10:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11f80e250 <col:3> 'int' lvalue ParmVar 0x11f80de28 'whence' 'int'
    |   | `-RecoveryExpr 0x11f80e2a8 <col:12> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x11e11e3e0 <line:11:3, col:43> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x11f80e308 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x11f80e2e8 <col:3> 'int' lvalue ParmVar 0x11f80dda8 'offset' 'int'
    |     `-BinaryOperator 0x11e11e3c0 <col:12, col:43> '<dependent type>' contains-errors '+'
    |       |-CallExpr 0x11e11e398 <col:12, col:39> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x11e11e2b8 <col:12> 'int ()' Function 0x11e11e200 'zend_hash_num_elements' 'int ()'
    |       | `-RecoveryExpr 0x11e11e378 <col:35> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x11e11e318 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11e11e678 <line:14:2, line:16:2>
    | |-BinaryOperator 0x11e11e4b8 <line:14:6, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x11e11e440 <col:6> 'int' lvalue ParmVar 0x11f80de28 'whence' 'int'
    | | `-RecoveryExpr 0x11e11e498 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e11e660 <col:26, line:16:2>
    |   `-CallExpr 0x11e11e638 <line:15:3, col:40> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11e11e5b8 <col:3> 'int ()' Function 0x11e11e500 'zend_hash_internal_pointer_reset' 'int ()'
    |     `-RecoveryExpr 0x11e11e618 <col:36> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x11e11ec70 <line:18:2, line:26:2> has_else
      |-BinaryOperator 0x11e11e6d8 <line:18:6, col:15> 'int' contains-errors '<'
      | |-RecoveryExpr 0x11e11e698 <col:6> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x11e11e6b8 <col:15> 'int' 0
      |-CompoundStmt 0x11e11e740 <col:18, line:20:2>
      | `-ReturnStmt 0x11e11e730 <line:19:3, col:11>
      |   `-UnaryOperator 0x11e11e718 <col:10, col:11> 'int' prefix '-'
      |     `-IntegerLiteral 0x11e11e6f8 <col:11> 'int' 1
      `-CompoundStmt 0x11e11ec48 <line:20:9, line:26:2>
        |-BinaryOperator 0x11e11e7c8 <line:21:3, col:16> '<dependent type>' contains-errors '='
        | |-UnaryOperator 0x11e11e790 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
        | | `-ImplicitCastExpr 0x11e11e778 <col:4> '<dependent type>' contains-errors <LValueToRValue>
        | |   `-RecoveryExpr 0x11e11e758 <col:4> '<dependent type>' contains-errors lvalue
        | `-IntegerLiteral 0x11e11e7a8 <col:16> 'int' 0
        |-WhileStmt 0x11e11ebf8 <line:22:3, line:24:3>
        | |-BinaryOperator 0x11e11eb38 <line:22:10, col:65> 'int' contains-errors '&&'
        | | |-BinaryOperator 0x11e11ea90 <col:10, col:23> 'int' contains-errors '<'
        | | | |-UnaryOperator 0x11e11ea78 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
        | | | | `-ImplicitCastExpr 0x11e11ea60 <col:11> '<dependent type>' contains-errors <LValueToRValue>
        | | | |   `-RecoveryExpr 0x11e11e7e8 <col:11> '<dependent type>' contains-errors lvalue
        | | | `-RecoveryExpr 0x11e11e838 <col:23> '<dependent type>' contains-errors lvalue
        | | `-BinaryOperator 0x11e11eb18 <col:33, col:65> 'int' contains-errors '=='
        | |   |-CallExpr 0x11e11ead0 <col:33, col:60> '<dependent type>' contains-errors
        | |   | |-DeclRefExpr 0x11e11e958 <col:33> 'int ()' Function 0x11e11e8a0 'zend_hash_move_forward' 'int ()'
        | |   | `-RecoveryExpr 0x11e11eab0 <col:56> '<dependent type>' contains-errors lvalue
        | |   `-RecoveryExpr 0x11e11eaf8 <col:65> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x11e11ebe0 <col:74, line:24:3>
        |   `-UnaryOperator 0x11e11ebc8 <line:23:4, col:17> '<dependent type>' contains-errors prefix '++' cannot overflow
        |     `-ParenExpr 0x11e11eba8 <col:6, col:17> '<dependent type>' contains-errors
        |       `-UnaryOperator 0x11e11eb90 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
        |         `-ImplicitCastExpr 0x11e11eb78 <col:8> '<dependent type>' contains-errors <LValueToRValue>
        |           `-RecoveryExpr 0x11e11eb58 <col:8> '<dependent type>' contains-errors lvalue
        `-ReturnStmt 0x11e11ec38 <line:25:3, col:10>
          `-IntegerLiteral 0x11e11ec18 <col:10> 'int' 0
