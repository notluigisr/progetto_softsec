TranslationUnitDecl 0x156855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1568564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156855bd0 '__int128'
|-TypedefDecl 0x156856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156855bf0 'unsigned __int128'
|-TypedefDecl 0x15700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15700bc00 'struct __NSConstantString_tag'
|   `-Record 0x156856580 '__NSConstantString_tag'
|-TypedefDecl 0x15700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156855d90 '__SVInt8_t'
|-TypedefDecl 0x15700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156855db0 '__SVInt16_t'
|-TypedefDecl 0x15700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156855dd0 '__SVInt32_t'
|-TypedefDecl 0x15700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156855df0 '__SVInt64_t'
|-TypedefDecl 0x15700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156855e10 '__SVUint8_t'
|-TypedefDecl 0x15700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156855e30 '__SVUint16_t'
|-TypedefDecl 0x15700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156855e50 '__SVUint32_t'
|-TypedefDecl 0x15700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156855e70 '__SVUint64_t'
|-TypedefDecl 0x15700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156855e90 '__SVFloat16_t'
|-TypedefDecl 0x15700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1568560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1568560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1568560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1568561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1568561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1568561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1568562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1568562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1568562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156856390 '__SVBool_t'
|-TypedefDecl 0x15700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1568563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1568563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1568563f0 '__SVCount_t'
|-TypedefDecl 0x15700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15700dbb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-TypedefDecl 0x15700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15700dbb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-FunctionDecl 0x15700e328 <dataset_diviso_filec/func20470_vuln.c:1:1, line:59:1> line:1:1 invalid glob_ 'int (const char *, int, int (*)(const char *, int), int *, unsigned long, int)'
| |-ParmVarDecl 0x15700dcd8 <col:7, col:19> col:19 used pattern 'const char *'
| |-ParmVarDecl 0x15700dd58 <col:28, col:32> col:32 used flags 'int'
| |-ParmVarDecl 0x15700dfd8 <col:39, col:71> col:45 used errfunc 'int (*)(const char *, int)'
| |-ParmVarDecl 0x15700e0a8 <line:2:7, col:15> col:15 referenced invalid pglob 'int *'
| |-ParmVarDecl 0x15700e128 <col:22, col:36> col:36 used maxfiles 'unsigned long'
| |-ParmVarDecl 0x15700e1a8 <col:46, col:50> col:50 used maxdepth 'int'
| `-CompoundStmt 0x15702c3d0 <line:3:1, line:59:1>
|   |-DeclStmt 0x1570274b0 <line:4:5, col:33>
|   | `-VarDecl 0x157027448 <col:5, col:26> col:26 used patnext 'const unsigned char *'
|   |-DeclStmt 0x157027548 <line:5:5, col:10>
|   | `-VarDecl 0x1570274e0 <col:5, col:9> col:9 used c 'int'
|   |-DeclStmt 0x157027690 <line:6:5, col:45>
|   | |-VarDecl 0x157027578 <col:5, col:11> col:11 used bufnext 'char *'
|   | `-VarDecl 0x1570275f8 <col:5, col:21> col:21 used bufend 'char *'
|   |-DeclStmt 0x157027d08 <line:7:5, col:40>
|   | |-RecordDecl 0x1570276a8 <col:5, col:12> col:12 struct glob_lim
|   | `-VarDecl 0x1570277a8 <col:5, col:21> col:21 invalid limit 'struct glob_lim'
|   |-IfStmt 0x157028160 <line:9:5, line:11:5>
|   | |-BinaryOperator 0x1570280e0 <line:9:9, col:28> 'int' contains-errors '>='
|   | | |-CallExpr 0x157028080 <col:9, col:23> 'unsigned long'
|   | | | |-ImplicitCastExpr 0x157028068 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x157027ec8 <col:9> 'unsigned long (const char *)' Function 0x157027d58 'strlen' 'unsigned long (const char *)'
|   | | | `-ImplicitCastExpr 0x1570280a8 <col:16> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x157027ee8 <col:16> 'const char *' lvalue ParmVar 0x15700dcd8 'pattern' 'const char *'
|   | | `-RecoveryExpr 0x1570280c0 <col:28> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x157028148 <col:38, line:11:5>
|   |   `-ReturnStmt 0x157028138 <line:10:9, col:16>
|   |     `-RecoveryExpr 0x157028118 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x157028230 <line:12:5, col:26> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1570281c8 <col:5, col:12> '<dependent type>' contains-errors lvalue ->gl_maxdepth
|   | | `-RecoveryExpr 0x1570281a0 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x157028180 <col:5> 'int *' lvalue ParmVar 0x15700e0a8 'pglob' 'int *'
|   | `-DeclRefExpr 0x157028210 <col:26> 'int' lvalue ParmVar 0x15700e1a8 'maxdepth' 'int'
|   |-BinaryOperator 0x157028300 <line:13:5, col:26> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x157028298 <col:5, col:12> '<dependent type>' contains-errors lvalue ->gl_maxfiles
|   | | `-RecoveryExpr 0x157028270 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x157028250 <col:5> 'int *' lvalue ParmVar 0x15700e0a8 'pglob' 'int *'
|   | `-DeclRefExpr 0x1570282e0 <col:26> 'unsigned long' lvalue ParmVar 0x15700e128 'maxfiles' 'unsigned long'
|   |-BinaryOperator 0x15702a600 <line:14:5, col:33> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x157028320 <col:5> 'const unsigned char *' lvalue Var 0x157027448 'patnext' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1570283e8 <col:15, col:33> 'const unsigned char *' <NoOp>
|   |   `-CStyleCastExpr 0x1570283c0 <col:15, col:33> 'unsigned char *' <BitCast>
|   |     `-ImplicitCastExpr 0x1570283a8 <col:33> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x157028340 <col:33> 'const char *' lvalue ParmVar 0x15700dcd8 'pattern' 'const char *'
|   |-IfStmt 0x15702ab28 <line:15:5, line:22:5>
|   | |-RecoveryExpr 0x15702a678 <line:15:9, col:30> '_Bool' contains-errors
|   | `-CompoundStmt 0x15702aaf8 <col:33, line:22:5>
|   |   |-BinaryOperator 0x15702a748 <line:16:9, col:27> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x15702a6e0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->gl_pathc
|   |   | | `-RecoveryExpr 0x15702a6b8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x15702a698 <col:9> 'int *' lvalue ParmVar 0x15700e0a8 'pglob' 'int *'
|   |   | `-IntegerLiteral 0x15702a728 <col:27> 'int' 0
|   |   |-BinaryOperator 0x15702a850 <line:17:9, col:27> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x15702a7b0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->gl_pathv
|   |   | | `-RecoveryExpr 0x15702a788 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x15702a768 <col:9> 'int *' lvalue ParmVar 0x15700e0a8 'pglob' 'int *'
|   |   | `-RecoveryExpr 0x15702a830 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x15702a958 <line:18:9, col:27> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x15702a8b8 <col:9, col:16> '<dependent type>' contains-errors lvalue ->gl_statv
|   |   | | `-RecoveryExpr 0x15702a890 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x15702a870 <col:9> 'int *' lvalue ParmVar 0x15700e0a8 'pglob' 'int *'
|   |   | `-RecoveryExpr 0x15702a938 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x15702aad8 <line:19:9, line:21:9>
|   |     |-RecoveryExpr 0x15702a9d0 <line:19:13, col:34> '_Bool' contains-errors
|   |     `-CompoundStmt 0x15702aac0 <col:37, line:21:9>
|   |       `-BinaryOperator 0x15702aaa0 <line:20:13, col:30> '<dependent type>' contains-errors '='
|   |         |-CXXDependentScopeMemberExpr 0x15702aa38 <col:13, col:20> '<dependent type>' contains-errors lvalue ->gl_offs
|   |         | `-RecoveryExpr 0x15702aa10 <col:13> '<dependent type>' contains-errors lvalue
|   |         |   `-DeclRefExpr 0x15702a9f0 <col:13> 'int *' lvalue ParmVar 0x15700e0a8 'pglob' 'int *'
|   |         `-IntegerLiteral 0x15702aa80 <col:30> 'int' 0
|   |-BinaryOperator 0x15702acf0 <line:23:5, col:32> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15702ab90 <col:5, col:12> '<dependent type>' contains-errors lvalue ->gl_flags
|   | | `-RecoveryExpr 0x15702ab68 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15702ab48 <col:5> 'int *' lvalue ParmVar 0x15700e0a8 'pglob' 'int *'
|   | `-BinaryOperator 0x15702acd0 <col:23, col:32> '<dependent type>' contains-errors '&'
|   |   |-DeclRefExpr 0x15702abd8 <col:23> 'int' lvalue ParmVar 0x15700dd58 'flags' 'int'
|   |   `-UnaryOperator 0x15702acb8 <col:31, col:32> '<dependent type>' contains-errors prefix '~' cannot overflow
|   |     `-ImplicitCastExpr 0x15702aca0 <col:32> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x15702ac80 <col:32> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15702adc0 <line:24:5, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15702ad58 <col:5, col:12> '<dependent type>' contains-errors lvalue ->gl_errfunc
|   | | `-RecoveryExpr 0x15702ad30 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15702ad10 <col:5> 'int *' lvalue ParmVar 0x15700e0a8 'pglob' 'int *'
|   | `-DeclRefExpr 0x15702ada0 <col:25> 'int (*)(const char *, int)' lvalue ParmVar 0x15700dfd8 'errfunc' 'int (*)(const char *, int)'
|   |-BinaryOperator 0x15702ae90 <line:25:5, col:24> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15702ae28 <col:5, col:12> '<dependent type>' contains-errors lvalue ->gl_matchc
|   | | `-RecoveryExpr 0x15702ae00 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15702ade0 <col:5> 'int *' lvalue ParmVar 0x15700e0a8 'pglob' 'int *'
|   | `-IntegerLiteral 0x15702ae70 <col:24> 'int' 0
|   |-IfStmt 0x15702b4e8 <line:27:5, line:31:5>
|   | |-BinaryOperator 0x15702b468 <line:27:9, line:29:55> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x15702b3c8 <line:27:9, line:28:57> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x15702b368 <line:27:9, line:28:27> 'int' contains-errors '||'
|   | | | | |-BinaryOperator 0x15702b000 <line:27:9, col:49> 'int' contains-errors '||'
|   | | | | | |-BinaryOperator 0x15702af38 <col:9, col:26> 'int' contains-errors '<'
|   | | | | | | |-CXXDependentScopeMemberExpr 0x15702aed0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->gl_offs
|   | | | | | | | `-RecoveryExpr 0x15702aeb0 <col:9> '<dependent type>' contains-errors lvalue
|   | | | | | | `-IntegerLiteral 0x15702af18 <col:26> 'int' 0
|   | | | | | `-BinaryOperator 0x15702afe0 <col:31, col:49> 'int' contains-errors '<'
|   | | | | |   |-CXXDependentScopeMemberExpr 0x15702af78 <col:31, col:38> '<dependent type>' contains-errors lvalue ->gl_pathc
|   | | | | |   | `-RecoveryExpr 0x15702af58 <col:31> '<dependent type>' contains-errors lvalue
|   | | | | |   `-IntegerLiteral 0x15702afc0 <col:49> 'int' 0
|   | | | | `-BinaryOperator 0x15702b348 <line:28:9, col:27> 'int' contains-errors '>='
|   | | | |   |-CXXDependentScopeMemberExpr 0x15702b040 <col:9, col:16> '<dependent type>' contains-errors lvalue ->gl_offs
|   | | | |   | `-RecoveryExpr 0x15702b020 <col:9> '<dependent type>' contains-errors lvalue
|   | | | |   `-RecoveryExpr 0x15702b328 <col:27> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x15702b3a8 <col:38, col:57> 'int' contains-errors '>='
|   | | |   |-CXXDependentScopeMemberExpr 0x15702b100 <col:38, col:45> '<dependent type>' contains-errors lvalue ->gl_pathc
|   | | |   | `-RecoveryExpr 0x15702b0e0 <col:38> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x15702b388 <col:57> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x15702b448 <line:29:9, col:55> 'int' contains-errors '>='
|   | |   |-CXXDependentScopeMemberExpr 0x15702b1c0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->gl_pathc
|   | |   | `-RecoveryExpr 0x15702b1a0 <col:9> '<dependent type>' contains-errors lvalue
|   | |   `-BinaryOperator 0x15702b428 <col:28, col:55> '<dependent type>' contains-errors '-'
|   | |     |-BinaryOperator 0x15702b408 <col:28, col:45> '<dependent type>' contains-errors '-'
|   | |     | |-RecoveryExpr 0x15702b3e8 <col:28> '<dependent type>' contains-errors lvalue
|   | |     | `-CXXDependentScopeMemberExpr 0x15702b240 <col:38, col:45> '<dependent type>' contains-errors lvalue ->gl_offs
|   | |     |   `-RecoveryExpr 0x15702b220 <col:38> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x15702b2a8 <col:55> 'int' 1
|   | `-CompoundStmt 0x15702b4d0 <col:58, line:31:5>
|   |   `-ReturnStmt 0x15702b4c0 <line:30:9, col:16>
|   |     `-RecoveryExpr 0x15702b4a0 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15702b580 <line:32:5, col:15> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x15702b508 <col:5> 'char *' lvalue Var 0x157027578 'bufnext' 'char *'
|   | `-RecoveryExpr 0x15702b560 <col:15> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15702b6e0 <line:33:5, col:35> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x15702b5a0 <col:5> 'char *' lvalue Var 0x1570275f8 'bufend' 'char *'
|   | `-BinaryOperator 0x15702b6c0 <col:14, col:35> '<dependent type>' contains-errors '-'
|   |   |-BinaryOperator 0x15702b6a0 <col:14, col:24> '<dependent type>' contains-errors '+'
|   |   | |-DeclRefExpr 0x15702b5c0 <col:14> 'char *' lvalue Var 0x157027578 'bufnext' 'char *'
|   |   | `-RecoveryExpr 0x15702b680 <col:24> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x15702b620 <col:35> 'int' 1
|   |-IfStmt 0x15702bf78 <line:34:5, line:51:5> has_else
|   | |-BinaryOperator 0x15702b778 <line:34:9, col:17> '<dependent type>' contains-errors '&'
|   | | |-DeclRefExpr 0x15702b700 <col:9> 'int' lvalue ParmVar 0x15700dd58 'flags' 'int'
|   | | `-RecoveryExpr 0x15702b758 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x15702ba20 <col:32, line:38:5>
|   | | `-WhileStmt 0x15702ba00 <line:35:9, line:37:9>
|   | |   |-RecoveryExpr 0x15702b908 <line:35:16, col:56> '_Bool' contains-errors
|   | |   `-CompoundStmt 0x15702b9e8 <col:61, line:37:9>
|   | |     `-BinaryOperator 0x15702b9c8 <line:36:13, col:26> 'char' '='
|   | |       |-UnaryOperator 0x15702b960 <col:13, col:21> 'char' lvalue prefix '*' cannot overflow
|   | |       | `-UnaryOperator 0x15702b948 <col:14, col:21> 'char *' postfix '++'
|   | |       |   `-DeclRefExpr 0x15702b928 <col:14> 'char *' lvalue Var 0x157027578 'bufnext' 'char *'
|   | |       `-ImplicitCastExpr 0x15702b9b0 <col:26> 'char' <IntegralCast>
|   | |         `-ImplicitCastExpr 0x15702b998 <col:26> 'int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x15702b978 <col:26> 'int' lvalue Var 0x1570274e0 'c' 'int'
|   | `-CompoundStmt 0x15702bf60 <line:38:12, line:51:5>
|   |   `-WhileStmt 0x15702bf40 <line:40:9, line:50:9>
|   |     |-RecoveryExpr 0x15702bba8 <line:40:16, col:56> '_Bool' contains-errors
|   |     `-CompoundStmt 0x15702bf28 <col:61, line:50:9>
|   |       `-IfStmt 0x15702bef8 <line:41:13, line:49:13> has_else
|   |         |-RecoveryExpr 0x15702bbe8 <line:41:17, col:22> '_Bool' contains-errors
|   |         |-CompoundStmt 0x15702be08 <col:29, line:47:13>
|   |         | `-IfStmt 0x15702bd78 <line:42:17, line:45:17>
|   |         |   |-RecoveryExpr 0x15702bce8 <line:42:21, col:41> '_Bool' contains-errors
|   |         |   `-CompoundStmt 0x15702bd60 <col:46, line:45:17>
|   |         |     `-UnaryOperator 0x15702bd48 <line:44:21, col:23> 'const unsigned char *' prefix '--'
|   |         |       `-DeclRefExpr 0x15702bd28 <col:23> 'const unsigned char *' lvalue Var 0x157027448 'patnext' 'const unsigned char *'
|   |         `-CompoundStmt 0x15702bee0 <line:47:20, line:49:13>
|   |           `-BinaryOperator 0x15702bec0 <line:48:17, col:30> 'char' '='
|   |             |-UnaryOperator 0x15702be58 <col:17, col:25> 'char' lvalue prefix '*' cannot overflow
|   |             | `-UnaryOperator 0x15702be40 <col:18, col:25> 'char *' postfix '++'
|   |             |   `-DeclRefExpr 0x15702be20 <col:18> 'char *' lvalue Var 0x157027578 'bufnext' 'char *'
|   |             `-ImplicitCastExpr 0x15702bea8 <col:30> 'char' <IntegralCast>
|   |               `-ImplicitCastExpr 0x15702be90 <col:30> 'int' <LValueToRValue>
|   |                 `-DeclRefExpr 0x15702be70 <col:30> 'int' lvalue Var 0x1570274e0 'c' 'int'
|   `-IfStmt 0x15702c3a0 <line:54:5, line:58:5> has_else
|     |-RecoveryExpr 0x15702c018 <line:54:9, col:17> '_Bool' contains-errors
|     |-CompoundStmt 0x15702c228 <col:29, line:56:5>
|     `-CompoundStmt 0x15702c390 <col:12, line:58:5>
`-FunctionDecl 0x157027d58 <line:9:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x157027e58 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x157027e00 <<invalid sloc>> Implicit 902
