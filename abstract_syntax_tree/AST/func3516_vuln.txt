TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x13780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13780bc00 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x13780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x13780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x13780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x13780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x13780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x13780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x13780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x13780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x13780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x13780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x13780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x13780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13780dbb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x13780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13780dbb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-FunctionDecl 0x137122678 <dataset_diviso_filec/func3516_vuln.c:1:1, line:56:1> line:1:12 match_func 'int (struct libmnt_fs *, void *)' static
| |-ParmVarDecl 0x13780e248 <col:23, col:41> col:41 used fs 'struct libmnt_fs *'
| |-ParmVarDecl 0x13780e2c8 <line:2:9, col:15> col:15 data 'void *'
| | `-UnusedAttr 0x13780e330 <col:36> unused
| `-CompoundStmt 0x14000bbd0 <line:3:1, line:56:1>
|   |-DeclStmt 0x137122960 <line:4:2, col:36>
|   | `-VarDecl 0x137122790 <col:2, col:35> col:6 used rc 'int' cinit
|   |   `-ConditionalOperator 0x137122930 <col:11, col:35> '<dependent type>' contains-errors
|   |     |-BinaryOperator 0x137122910 <col:11, col:19> '<dependent type>' contains-errors '&'
|   |     | |-RecoveryExpr 0x1371228d0 <col:11> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x1371228f0 <col:19> '<dependent type>' contains-errors lvalue
|   |     |-IntegerLiteral 0x137122860 <col:31> 'int' 1
|   |     `-IntegerLiteral 0x137122880 <col:35> 'int' 0
|   |-DeclStmt 0x1371229f8 <line:5:2, col:15>
|   | `-VarDecl 0x137122990 <col:2, col:14> col:14 used m 'const char *'
|   |-DeclStmt 0x137122a90 <line:6:2, col:10>
|   | `-VarDecl 0x137122a28 <col:2, col:8> col:8 used md 'void *'
|   |-BinaryOperator 0x137122ca8 <line:8:2, col:26> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x137122aa8 <col:2> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | `-CallExpr 0x137122c80 <col:6, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x137122be0 <col:6> 'int ()' Function 0x137122b28 'get_match' 'int ()'
|   |   `-RecoveryExpr 0x137122c60 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x137122f70 <line:9:2, line:10:10>
|   | |-BinaryOperator 0x137122f08 <line:9:6, col:37> 'int' '&&'
|   | | |-ImplicitCastExpr 0x137122ef0 <col:6> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x137122cc8 <col:6> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | | `-UnaryOperator 0x137122ed8 <col:11, col:37> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x137122e78 <col:12, col:37> 'int'
|   | |     |-ImplicitCastExpr 0x137122e60 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x137122dc8 <col:12> 'int ()' Function 0x137122d10 'mnt_fs_match_fstype' 'int ()'
|   | |     |-ImplicitCastExpr 0x137122ea8 <col:32> 'struct libmnt_fs *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x137122de8 <col:32> 'struct libmnt_fs *' lvalue ParmVar 0x13780e248 'fs' 'struct libmnt_fs *'
|   | |     `-ImplicitCastExpr 0x137122ec0 <col:36> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x137122e08 <col:36> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | `-ReturnStmt 0x137122f60 <line:10:3, col:10>
|   |   `-ImplicitCastExpr 0x137122f48 <col:10> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x137122f28 <col:10> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |-BinaryOperator 0x137123078 <line:12:2, col:27> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x137122f90 <col:2> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | `-CallExpr 0x137123050 <col:6, col:27> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x137122fb0 <col:6> 'int ()' Function 0x137122b28 'get_match' 'int ()'
|   |   `-RecoveryExpr 0x137123030 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x137123308 <line:13:2, line:14:10>
|   | |-BinaryOperator 0x1371232a0 <line:13:6, col:38> 'int' '&&'
|   | | |-ImplicitCastExpr 0x137123288 <col:6> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x137123098 <col:6> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | | `-UnaryOperator 0x137123270 <col:11, col:38> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x137123210 <col:12, col:38> 'int'
|   | |     |-ImplicitCastExpr 0x1371231f8 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x137123198 <col:12> 'int ()' Function 0x1371230e0 'mnt_fs_match_options' 'int ()'
|   | |     |-ImplicitCastExpr 0x137123240 <col:33> 'struct libmnt_fs *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1371231b8 <col:33> 'struct libmnt_fs *' lvalue ParmVar 0x13780e248 'fs' 'struct libmnt_fs *'
|   | |     `-ImplicitCastExpr 0x137123258 <col:37> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1371231d8 <col:37> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | `-ReturnStmt 0x1371232f8 <line:14:3, col:10>
|   |   `-ImplicitCastExpr 0x1371232e0 <col:10> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x1371232c0 <col:10> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |-BinaryOperator 0x1371234f0 <line:16:2, col:32> 'void *' contains-errors '='
|   | |-DeclRefExpr 0x137123328 <col:2> 'void *' lvalue Var 0x137122a28 'md' 'void *'
|   | `-CallExpr 0x1371234c8 <col:7, col:32> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x137123428 <col:7> 'int ()' Function 0x137123370 'get_match_data' 'int ()'
|   |   `-RecoveryExpr 0x1371234a8 <col:22> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x137124928 <line:17:2, line:18:10>
|   | |-RecoveryExpr 0x1371248c0 <line:17:6, col:50> '_Bool' contains-errors
|   | `-ReturnStmt 0x137124918 <line:18:3, col:10>
|   |   `-ImplicitCastExpr 0x137124900 <col:10> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x1371248e0 <col:10> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |-BinaryOperator 0x137124a30 <line:20:2, col:26> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x137124948 <col:2> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | `-CallExpr 0x137124a08 <col:6, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x137124968 <col:6> 'int ()' Function 0x137122b28 'get_match' 'int ()'
|   |   `-RecoveryExpr 0x1371249e8 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x137124d10 <line:21:2, line:22:10>
|   | |-BinaryOperator 0x137124ca8 <line:21:6, col:44> 'int' contains-errors '&&'
|   | | |-DeclRefExpr 0x137124a50 <col:6> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | | `-UnaryOperator 0x137124c90 <col:11, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-CallExpr 0x137124c58 <col:12, col:44> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x137124b50 <col:12> 'int ()' Function 0x137124a98 'mnt_fs_match_target' 'int ()'
|   | |     |-DeclRefExpr 0x137124b70 <col:32> 'struct libmnt_fs *' lvalue ParmVar 0x13780e248 'fs' 'struct libmnt_fs *'
|   | |     |-DeclRefExpr 0x137124b90 <col:36> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | |     `-RecoveryExpr 0x137124c38 <col:39> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x137124d00 <line:22:3, col:10>
|   |   `-ImplicitCastExpr 0x137124ce8 <col:10> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x137124cc8 <col:10> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |-BinaryOperator 0x137124e18 <line:24:2, col:26> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x137124d30 <col:2> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | `-CallExpr 0x137124df0 <col:6, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x137124d50 <col:6> 'int ()' Function 0x137122b28 'get_match' 'int ()'
|   |   `-RecoveryExpr 0x137124dd0 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1371250f8 <line:25:2, line:26:10>
|   | |-BinaryOperator 0x137125090 <line:25:6, col:44> 'int' contains-errors '&&'
|   | | |-DeclRefExpr 0x137124e38 <col:6> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | | `-UnaryOperator 0x137125078 <col:11, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-CallExpr 0x137125040 <col:12, col:44> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x137124f38 <col:12> 'int ()' Function 0x137124e80 'mnt_fs_match_source' 'int ()'
|   | |     |-DeclRefExpr 0x137124f58 <col:32> 'struct libmnt_fs *' lvalue ParmVar 0x13780e248 'fs' 'struct libmnt_fs *'
|   | |     |-DeclRefExpr 0x137124f78 <col:36> 'const char *' lvalue Var 0x137122990 'm' 'const char *'
|   | |     `-RecoveryExpr 0x137125020 <col:39> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1371250e8 <line:26:3, col:10>
|   |   `-ImplicitCastExpr 0x1371250d0 <col:10> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x1371250b0 <col:10> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |-IfStmt 0x14000b050 <line:28:2, line:36:2>
|   | |-RecoveryExpr 0x137125168 <line:28:6, col:41> '_Bool' contains-errors
|   | `-CompoundStmt 0x14000b028 <col:44, line:36:2>
|   |   |-DeclStmt 0x137125398 <line:29:3, col:43>
|   |   | `-VarDecl 0x1371251a0 <col:3, col:42> col:15 used type 'const char *' cinit
|   |   |   `-ImplicitCastExpr 0x137125380 <col:22, col:42> 'const char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x137125340 <col:22, col:42> 'int'
|   |   |       |-ImplicitCastExpr 0x137125328 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1371252e8 <col:22> 'int ()' Function 0x137125230 'mnt_fs_get_fstype' 'int ()'
|   |   |       `-ImplicitCastExpr 0x137125368 <col:40> 'struct libmnt_fs *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x137125308 <col:40> 'struct libmnt_fs *' lvalue ParmVar 0x13780e248 'fs' 'struct libmnt_fs *'
|   |   |-IfStmt 0x14000ae28 <line:31:3, line:32:12>
|   |   | |-BinaryOperator 0x137125798 <line:31:7, col:33> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x137125780 <col:7> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1371253b0 <col:7> 'const char *' lvalue Var 0x1371251a0 'type' 'const char *'
|   |   | | `-CallExpr 0x137125708 <col:15, col:33> 'char *'
|   |   | |   |-ImplicitCastExpr 0x1371256f0 <col:15> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x1371255f0 <col:15> 'char *(const char *, const char *)' Function 0x137125410 'strstr' 'char *(const char *, const char *)'
|   |   | |   |-ImplicitCastExpr 0x137125738 <col:22> 'const char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x137125610 <col:22> 'const char *' lvalue Var 0x1371251a0 'type' 'const char *'
|   |   | |   `-ImplicitCastExpr 0x137125768 <col:28> 'const char *' <NoOp>
|   |   | |     `-ImplicitCastExpr 0x137125750 <col:28> 'char *' <ArrayToPointerDecay>
|   |   | |       `-StringLiteral 0x137125670 <col:28> 'char[4]' lvalue "STR"
|   |   | `-ReturnStmt 0x14000ae18 <line:32:4, col:12>
|   |   |   `-UnaryOperator 0x14000ae00 <col:11, col:12> 'int' contains-errors prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x1371257d8 <col:12> 'int' contains-errors <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1371257b8 <col:12> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |   `-IfStmt 0x14000b008 <line:34:3, line:35:11>
|   |     |-CallExpr 0x14000af80 <line:34:7, col:28> 'int'
|   |     | |-ImplicitCastExpr 0x14000af68 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x14000af28 <col:7> 'int ()' Function 0x14000ae70 'mnt_fs_is_pseudofs' 'int ()'
|   |     | `-ImplicitCastExpr 0x14000afa8 <col:26> 'struct libmnt_fs *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x14000af48 <col:26> 'struct libmnt_fs *' lvalue ParmVar 0x13780e248 'fs' 'struct libmnt_fs *'
|   |     `-ReturnStmt 0x14000aff8 <line:35:4, col:11>
|   |       `-ImplicitCastExpr 0x14000afe0 <col:11> 'int' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x14000afc0 <col:11> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |-IfStmt 0x14000b170 <line:38:2, line:39:13>
|   | |-RecoveryExpr 0x14000b108 <line:38:6, col:48> '_Bool' contains-errors
|   | `-ReturnStmt 0x14000b160 <line:39:6, col:13>
|   |   `-ImplicitCastExpr 0x14000b148 <col:13> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x14000b128 <col:13> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |-IfStmt 0x14000b2a8 <line:41:2, line:42:13>
|   | |-RecoveryExpr 0x14000b240 <line:41:6, col:51> '_Bool' contains-errors
|   | `-ReturnStmt 0x14000b298 <line:42:6, col:13>
|   |   `-ImplicitCastExpr 0x14000b280 <col:13> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x14000b260 <col:13> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |-IfStmt 0x14000b938 <line:44:2, line:50:2>
|   | |-RecoveryExpr 0x14000b2c8 <line:44:6, col:26> '_Bool' contains-errors
|   | `-CompoundStmt 0x14000b910 <col:29, line:50:2>
|   |   |-DeclStmt 0x14000b4d8 <line:45:3, col:33>
|   |   | |-RecordDecl 0x14000b2e8 <col:3, col:10> col:10 struct libmnt_table
|   |   | `-VarDecl 0x14000b458 <col:3, col:24> col:24 used tb 'struct libmnt_table *'
|   |   |-CallExpr 0x14000b6c0 <line:47:3, col:27> 'int'
|   |   | |-ImplicitCastExpr 0x14000b6a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14000b5d0 <col:3> 'int ()' Function 0x14000b518 'mnt_fs_get_table' 'int ()'
|   |   | |-ImplicitCastExpr 0x14000b6f0 <col:20> 'struct libmnt_fs *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14000b5f0 <col:20> 'struct libmnt_fs *' lvalue ParmVar 0x13780e248 'fs' 'struct libmnt_fs *'
|   |   | `-UnaryOperator 0x14000b690 <col:24, col:25> 'struct libmnt_table **' prefix '&' cannot overflow
|   |   |   `-DeclRefExpr 0x14000b610 <col:25> 'struct libmnt_table *' lvalue Var 0x14000b458 'tb' 'struct libmnt_table *'
|   |   `-IfStmt 0x14000b8f0 <line:48:3, line:49:11>
|   |     |-RecoveryExpr 0x14000b888 <line:48:7, col:48> '_Bool' contains-errors
|   |     `-ReturnStmt 0x14000b8e0 <line:49:4, col:11>
|   |       `-ImplicitCastExpr 0x14000b8c8 <col:11> 'int' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x14000b8a8 <col:11> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   |-IfStmt 0x14000bb50 <line:52:2, line:53:10>
|   | |-RecoveryExpr 0x14000bae8 <line:52:6, col:51> '_Bool' contains-errors
|   | `-ReturnStmt 0x14000bb40 <line:53:3, col:10>
|   |   `-ImplicitCastExpr 0x14000bb28 <col:10> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x14000bb08 <col:10> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
|   `-ReturnStmt 0x14000bbc0 <line:55:2, col:10>
|     `-UnaryOperator 0x14000bba8 <col:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x14000bb90 <col:10> 'int' contains-errors <LValueToRValue>
|         `-DeclRefExpr 0x14000bb70 <col:10> 'int' contains-errors lvalue Var 0x137122790 'rc' 'int'
`-FunctionDecl 0x137125410 <line:31:15> col:15 implicit used strstr 'char *(const char *, const char *)' extern
  |-ParmVarDecl 0x137125510 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x137125578 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1371254b8 <<invalid sloc>> Implicit 898
