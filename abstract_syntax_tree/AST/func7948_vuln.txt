TranslationUnitDecl 0x138855008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x138855eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1388555d0 '__int128'
|-TypedefDecl 0x138855f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1388555f0 'unsigned __int128'
|-TypedefDecl 0x138024a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x138024800 'struct __NSConstantString_tag'
|   `-Record 0x138855f80 '__NSConstantString_tag'
|-TypedefDecl 0x138024a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x138855790 '__SVInt8_t'
|-TypedefDecl 0x138024b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1388557b0 '__SVInt16_t'
|-TypedefDecl 0x138024b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1388557d0 '__SVInt32_t'
|-TypedefDecl 0x138024bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1388557f0 '__SVInt64_t'
|-TypedefDecl 0x138024c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x138855810 '__SVUint8_t'
|-TypedefDecl 0x138024ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x138855830 '__SVUint16_t'
|-TypedefDecl 0x138024d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x138855850 '__SVUint32_t'
|-TypedefDecl 0x138024d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x138855870 '__SVUint64_t'
|-TypedefDecl 0x138024dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x138855890 '__SVFloat16_t'
|-TypedefDecl 0x138024e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1388558b0 '__SVFloat32_t'
|-TypedefDecl 0x138024ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1388558d0 '__SVFloat64_t'
|-TypedefDecl 0x138024f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1388558f0 '__SVBfloat16_t'
|-TypedefDecl 0x138024f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x138855910 '__clang_svint8x2_t'
|-TypedefDecl 0x138024fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x138855930 '__clang_svint16x2_t'
|-TypedefDecl 0x138025048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x138855950 '__clang_svint32x2_t'
|-TypedefDecl 0x1380250b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x138855970 '__clang_svint64x2_t'
|-TypedefDecl 0x138025118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x138855990 '__clang_svuint8x2_t'
|-TypedefDecl 0x138025180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1388559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1380251e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1388559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x138025250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1388559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1380252b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x138855a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x138025320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x138855a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x138025388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x138855a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1380253f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x138855a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x138025458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x138855a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1380254c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x138855ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x138025528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x138855ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x138025590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x138855af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1380255f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x138855b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x138025660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x138855b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1380256c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x138855b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x138025730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x138855b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x138025798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x138855b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x138026000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x138855bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x138026068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x138855bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1380260d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x138855bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x138026138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x138855c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1380261a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x138855c30 '__clang_svint16x4_t'
|-TypedefDecl 0x138026208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x138855c50 '__clang_svint32x4_t'
|-TypedefDecl 0x138026270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x138855c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1380262d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x138855c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x138026340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x138855cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1380263a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x138855cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x138026410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x138855cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x138026478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x138855d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1380264e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x138855d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x138026548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x138855d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1380265b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x138855d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x138026618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x138855d90 '__SVBool_t'
|-TypedefDecl 0x138026680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x138855db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1380266e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x138855dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x138026750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x138855df0 '__SVCount_t'
|-TypedefDecl 0x1380267f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1380267b0 'char *'
|   `-BuiltinType 0x1388550b0 'char'
|-TypedefDecl 0x138026868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1380267b0 'char *'
|   `-BuiltinType 0x1388550b0 'char'
|-FunctionDecl 0x138026a38 <dataset_diviso_filec/func7948_vuln.c:1:1, line:11:1> line:1:12 cJSON_strcasecmp 'int (const char *, const char *)' static
| |-ParmVarDecl 0x1380268d8 <col:30, col:42> col:42 used s1 'const char *'
| |-ParmVarDecl 0x138026958 <col:46, col:58> col:58 used s2 'const char *'
| `-CompoundStmt 0x13803fc30 <line:2:1, line:11:1>
|   |-IfStmt 0x138026cb8 <line:3:2, line:4:29>
|   | |-UnaryOperator 0x138026b70 <line:3:7, col:9> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x138026b58 <col:9> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x138026b38 <col:9> 'const char *' lvalue ParmVar 0x1380268d8 's1' 'const char *'
|   | `-ReturnStmt 0x138026ca8 <line:4:3, col:29>
|   |   `-ConditionalOperator 0x138026c78 <col:10, col:29> 'int'
|   |     |-ParenExpr 0x138026c18 <col:10, col:21> 'int'
|   |     | `-BinaryOperator 0x138026bf8 <col:12, col:18> 'int' '=='
|   |     |   |-ImplicitCastExpr 0x138026bc8 <col:12> 'const char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x138026b88 <col:12> 'const char *' lvalue ParmVar 0x1380268d8 's1' 'const char *'
|   |     |   `-ImplicitCastExpr 0x138026be0 <col:18> 'const char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x138026ba8 <col:18> 'const char *' lvalue ParmVar 0x138026958 's2' 'const char *'
|   |     |-IntegerLiteral 0x138026c38 <col:25> 'int' 0
|   |     `-IntegerLiteral 0x138026c58 <col:29> 'int' 1
|   |-IfStmt 0x138026d58 <line:5:2, line:6:10>
|   | |-UnaryOperator 0x138026d10 <line:5:7, col:9> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x138026cf8 <col:9> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x138026cd8 <col:9> 'const char *' lvalue ParmVar 0x138026958 's2' 'const char *'
|   | `-ReturnStmt 0x138026d48 <line:6:3, col:10>
|   |   `-IntegerLiteral 0x138026d28 <col:10> 'int' 1
|   |-ForStmt 0x13803f950 <line:7:2, line:9:11>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13803f790 <line:7:10, col:37> 'int' '=='
|   | | |-CallExpr 0x13803f658 <col:10, col:21> 'int'
|   | | | |-ImplicitCastExpr 0x13803f640 <col:10> 'int (*)(int)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13803f5a0 <col:10> 'int (int)' Function 0x13803f3e0 'tolower' 'int (int)'
|   | | | `-ImplicitCastExpr 0x13803f698 <col:18, col:19> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x13803f680 <col:18, col:19> 'char' <LValueToRValue>
|   | | |     `-UnaryOperator 0x13803f5f8 <col:18, col:19> 'const char' lvalue prefix '*' cannot overflow
|   | | |       `-ImplicitCastExpr 0x13803f5e0 <col:19> 'const char *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x13803f5c0 <col:19> 'const char *' lvalue ParmVar 0x1380268d8 's1' 'const char *'
|   | | `-CallExpr 0x13803f738 <col:26, col:37> 'int'
|   | |   |-ImplicitCastExpr 0x13803f720 <col:26> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13803f6b0 <col:26> 'int (int)' Function 0x13803f3e0 'tolower' 'int (int)'
|   | |   `-ImplicitCastExpr 0x13803f778 <col:34, col:35> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x13803f760 <col:34, col:35> 'char' <LValueToRValue>
|   | |       `-UnaryOperator 0x13803f708 <col:34, col:35> 'const char' lvalue prefix '*' cannot overflow
|   | |         `-ImplicitCastExpr 0x13803f6f0 <col:35> 'const char *' <LValueToRValue>
|   | |           `-DeclRefExpr 0x13803f6d0 <col:35> 'const char *' lvalue ParmVar 0x138026958 's2' 'const char *'
|   | |-BinaryOperator 0x13803f820 <col:40, col:48> 'const char *' ','
|   | | |-UnaryOperator 0x13803f7d0 <col:40, col:42> 'const char *' prefix '++'
|   | | | `-DeclRefExpr 0x13803f7b0 <col:42> 'const char *' lvalue ParmVar 0x1380268d8 's1' 'const char *'
|   | | `-UnaryOperator 0x13803f808 <col:46, col:48> 'const char *' prefix '++'
|   | |   `-DeclRefExpr 0x13803f7e8 <col:48> 'const char *' lvalue ParmVar 0x138026958 's2' 'const char *'
|   | `-IfStmt 0x13803f930 <line:8:3, line:9:11>
|   |   |-BinaryOperator 0x13803f8e0 <line:8:7, col:14> 'int' '=='
|   |   | |-ImplicitCastExpr 0x13803f8c8 <col:7, col:8> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x13803f8b0 <col:7, col:8> 'char' <LValueToRValue>
|   |   | |   `-UnaryOperator 0x13803f878 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x13803f860 <col:8> 'const char *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x13803f840 <col:8> 'const char *' lvalue ParmVar 0x1380268d8 's1' 'const char *'
|   |   | `-IntegerLiteral 0x13803f890 <col:14> 'int' 0
|   |   `-ReturnStmt 0x13803f920 <line:9:4, col:11>
|   |     `-IntegerLiteral 0x13803f900 <col:11> 'int' 0
|   `-ReturnStmt 0x13803fc20 <line:10:2, col:81>
|     `-BinaryOperator 0x13803fc00 <col:9, col:81> 'int' '-'
|       |-CallExpr 0x13803fa88 <col:9, col:43> 'int'
|       | |-ImplicitCastExpr 0x13803fa70 <col:9> 'int (*)(int)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x13803f988 <col:9> 'int (int)' Function 0x13803f3e0 'tolower' 'int (int)'
|       | `-ImplicitCastExpr 0x13803fac8 <col:17, col:41> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x13803fab0 <col:17, col:41> 'unsigned char' <LValueToRValue>
|       |     `-UnaryOperator 0x13803fa58 <col:17, col:41> 'const unsigned char' lvalue prefix '*' cannot overflow
|       |       `-CStyleCastExpr 0x13803fa30 <col:18, col:41> 'const unsigned char *' <BitCast>
|       |         `-ImplicitCastExpr 0x13803fa18 <col:41> 'const char *' <LValueToRValue> part_of_explicit_cast
|       |           `-DeclRefExpr 0x13803f9a8 <col:41> 'const char *' lvalue ParmVar 0x1380268d8 's1' 'const char *'
|       `-CallExpr 0x13803fba8 <col:47, col:81> 'int'
|         |-ImplicitCastExpr 0x13803fb90 <col:47> 'int (*)(int)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x13803fae0 <col:47> 'int (int)' Function 0x13803f3e0 'tolower' 'int (int)'
|         `-ImplicitCastExpr 0x13803fbe8 <col:55, col:79> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x13803fbd0 <col:55, col:79> 'unsigned char' <LValueToRValue>
|             `-UnaryOperator 0x13803fb78 <col:55, col:79> 'const unsigned char' lvalue prefix '*' cannot overflow
|               `-CStyleCastExpr 0x13803fb50 <col:56, col:79> 'const unsigned char *' <BitCast>
|                 `-ImplicitCastExpr 0x13803fb38 <col:79> 'const char *' <LValueToRValue> part_of_explicit_cast
|                   `-DeclRefExpr 0x13803fb00 <col:79> 'const char *' lvalue ParmVar 0x138026958 's2' 'const char *'
`-FunctionDecl 0x13803f3e0 <line:7:10> col:10 implicit used tolower 'int (int)' extern
  |-ParmVarDecl 0x13803f4e0 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x13803f488 <<invalid sloc>> Implicit 932
  |-NoThrowAttr 0x13803f550 <col:10> Implicit
  `-PureAttr 0x13803f578 <col:10> Implicit
