TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12d926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d926800 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12d926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12d926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12d926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12d926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12d926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12d926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12d926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12d928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12d9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d9287b0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12d928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d9287b0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
`-FunctionDecl 0x12d928d50 <dataset_diviso_filec/func7709_vuln.c:1:1, line:45:1> line:1:13 invalid CopyRectangleFromRectangle 'void (int *, int, int, int, int, int, int)' static
  |-ParmVarDecl 0x12d928928 <col:40, col:51> col:51 invalid client 'int *'
  |-ParmVarDecl 0x12d9289a8 <col:59, col:63> col:63 used src_x 'int'
  |-ParmVarDecl 0x12d928a28 <col:70, col:74> col:74 used src_y 'int'
  |-ParmVarDecl 0x12d928aa8 <col:81, col:85> col:85 used w 'int'
  |-ParmVarDecl 0x12d928b28 <col:88, col:92> col:92 used h 'int'
  |-ParmVarDecl 0x12d928ba8 <col:95, col:99> col:99 used dest_x 'int'
  |-ParmVarDecl 0x12d928c28 <col:107, col:111> col:111 used dest_y 'int'
  `-CompoundStmt 0x12d944128 <col:119, line:45:1>
    |-DeclStmt 0x12d928f48 <line:2:3, col:10>
    | |-VarDecl 0x12d928e48 <col:3, col:7> col:7 used i 'int'
    | `-VarDecl 0x12d928ec8 <col:3, col:9> col:9 used j 'int'
    |-IfStmt 0x12d942068 <line:4:3, line:6:3>
    | |-BinaryOperator 0x12d942020 <line:4:7, col:30> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12d928f80 <col:7, col:15> '<dependent type>' contains-errors lvalue ->frameBuffer
    | | | `-RecoveryExpr 0x12d928f60 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12d942000 <col:30> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d942050 <col:36, line:6:3>
    |   `-ReturnStmt 0x12d942040 <line:5:7>
    |-CompoundStmt 0x12d943968 <line:9:3, line:36:3>
    | `-IfStmt 0x12d943938 <line:11:5, line:35:5> has_else
    |   |-BinaryOperator 0x12d9420f8 <line:11:9, col:18> 'int' '<'
    |   | |-ImplicitCastExpr 0x12d9420c8 <col:9> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12d942088 <col:9> 'int' lvalue ParmVar 0x12d928c28 'dest_y' 'int'
    |   | `-ImplicitCastExpr 0x12d9420e0 <col:18> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12d9420a8 <col:18> 'int' lvalue ParmVar 0x12d928a28 'src_y' 'int'
    |   |-CompoundStmt 0x12d942c10 <col:25, line:23:5>
    |   | `-ForStmt 0x12d942bd8 <line:12:7, line:22:7>
    |   |   |-BinaryOperator 0x12d9421e0 <line:12:11, col:30> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x12d942118 <col:11> 'int' lvalue Var 0x12d928ec8 'j' 'int'
    |   |   | `-BinaryOperator 0x12d9421c0 <col:15, col:30> '<dependent type>' contains-errors '*'
    |   |   |   |-DeclRefExpr 0x12d942138 <col:15> 'int' lvalue ParmVar 0x12d928c28 'dest_y' 'int'
    |   |   |   `-CXXDependentScopeMemberExpr 0x12d942178 <col:22, col:30> '<dependent type>' contains-errors lvalue ->width
    |   |   |     `-RecoveryExpr 0x12d942158 <col:22> '<dependent type>' contains-errors lvalue
    |   |   |-<<<NULL>>>
    |   |   |-BinaryOperator 0x12d942358 <col:37, col:60> 'int' contains-errors '<'
    |   |   | |-DeclRefExpr 0x12d942200 <col:37> 'int' lvalue Var 0x12d928ec8 'j' 'int'
    |   |   | `-BinaryOperator 0x12d942338 <col:41, col:60> '<dependent type>' contains-errors '*'
    |   |   |   |-ParenExpr 0x12d9422b0 <col:41, col:50> 'int'
    |   |   |   | `-BinaryOperator 0x12d942290 <col:42, col:49> 'int' '+'
    |   |   |   |   |-ImplicitCastExpr 0x12d942260 <col:42> 'int' <LValueToRValue>
    |   |   |   |   | `-DeclRefExpr 0x12d942220 <col:42> 'int' lvalue ParmVar 0x12d928c28 'dest_y' 'int'
    |   |   |   |   `-ImplicitCastExpr 0x12d942278 <col:49> 'int' <LValueToRValue>
    |   |   |   |     `-DeclRefExpr 0x12d942240 <col:49> 'int' lvalue ParmVar 0x12d928b28 'h' 'int'
    |   |   |   `-CXXDependentScopeMemberExpr 0x12d9422f0 <col:52, col:60> '<dependent type>' contains-errors lvalue ->width
    |   |   |     `-RecoveryExpr 0x12d9422d0 <col:52> '<dependent type>' contains-errors lvalue
    |   |   |-CompoundAssignOperator 0x12d942400 <col:67, col:80> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   | |-DeclRefExpr 0x12d942378 <col:67> 'int' lvalue Var 0x12d928ec8 'j' 'int'
    |   |   | `-CXXDependentScopeMemberExpr 0x12d9423b8 <col:72, col:80> '<dependent type>' contains-errors lvalue ->width
    |   |   |   `-RecoveryExpr 0x12d942398 <col:72> '<dependent type>' contains-errors lvalue
    |   |   `-CompoundStmt 0x12d942bc0 <col:87, line:22:7>
    |   |     `-IfStmt 0x12d942b90 <line:13:9, line:21:9> has_else
    |   |       |-BinaryOperator 0x12d9424a0 <line:13:13, col:22> 'int' '<'
    |   |       | |-ImplicitCastExpr 0x12d942470 <col:13> 'int' <LValueToRValue>
    |   |       | | `-DeclRefExpr 0x12d942430 <col:13> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |   |       | `-ImplicitCastExpr 0x12d942488 <col:22> 'int' <LValueToRValue>
    |   |       |   `-DeclRefExpr 0x12d942450 <col:22> 'int' lvalue ParmVar 0x12d9289a8 'src_x' 'int'
    |   |       |-CompoundStmt 0x12d9427f0 <col:29, line:17:9>
    |   |       | `-ForStmt 0x12d9427b8 <line:14:11, line:16:11>
    |   |       |   |-BinaryOperator 0x12d942518 <line:14:15, col:19> 'int' '='
    |   |       |   | |-DeclRefExpr 0x12d9424c0 <col:15> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |   |       |   | `-ImplicitCastExpr 0x12d942500 <col:19> 'int' <LValueToRValue>
    |   |       |   |   `-DeclRefExpr 0x12d9424e0 <col:19> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |   |       |   |-<<<NULL>>>
    |   |       |   |-BinaryOperator 0x12d942600 <col:27, col:38> 'int' '<'
    |   |       |   | |-ImplicitCastExpr 0x12d9425e8 <col:27> 'int' <LValueToRValue>
    |   |       |   | | `-DeclRefExpr 0x12d942538 <col:27> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |   |       |   | `-BinaryOperator 0x12d9425c8 <col:31, col:38> 'int' '+'
    |   |       |   |   |-ImplicitCastExpr 0x12d942598 <col:31> 'int' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x12d942558 <col:31> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |   |       |   |   `-ImplicitCastExpr 0x12d9425b0 <col:38> 'int' <LValueToRValue>
    |   |       |   |     `-DeclRefExpr 0x12d942578 <col:38> 'int' lvalue ParmVar 0x12d928aa8 'w' 'int'
    |   |       |   |-UnaryOperator 0x12d942640 <col:41, col:42> 'int' postfix '++'
    |   |       |   | `-DeclRefExpr 0x12d942620 <col:41> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |   |       |   `-CompoundStmt 0x12d9427a8 <col:46, line:16:11>
    |   |       `-CompoundStmt 0x12d942b78 <line:17:16, line:21:9>
    |   |         `-ForStmt 0x12d942b40 <line:18:11, line:20:11>
    |   |           |-BinaryOperator 0x12d9428f8 <line:18:15, col:28> 'int' '='
    |   |           | |-DeclRefExpr 0x12d942808 <col:15> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |   |           | `-BinaryOperator 0x12d9428d8 <col:19, col:28> 'int' '-'
    |   |           |   |-BinaryOperator 0x12d942898 <col:19, col:26> 'int' '+'
    |   |           |   | |-ImplicitCastExpr 0x12d942868 <col:19> 'int' <LValueToRValue>
    |   |           |   | | `-DeclRefExpr 0x12d942828 <col:19> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |   |           |   | `-ImplicitCastExpr 0x12d942880 <col:26> 'int' <LValueToRValue>
    |   |           |   |   `-DeclRefExpr 0x12d942848 <col:26> 'int' lvalue ParmVar 0x12d928aa8 'w' 'int'
    |   |           |   `-IntegerLiteral 0x12d9428b8 <col:28> 'int' 1
    |   |           |-<<<NULL>>>
    |   |           |-BinaryOperator 0x12d942988 <col:31, col:36> 'int' '>='
    |   |           | |-ImplicitCastExpr 0x12d942958 <col:31> 'int' <LValueToRValue>
    |   |           | | `-DeclRefExpr 0x12d942918 <col:31> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |   |           | `-ImplicitCastExpr 0x12d942970 <col:36> 'int' <LValueToRValue>
    |   |           |   `-DeclRefExpr 0x12d942938 <col:36> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |   |           |-UnaryOperator 0x12d9429c8 <col:44, col:45> 'int' postfix '--'
    |   |           | `-DeclRefExpr 0x12d9429a8 <col:44> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |   |           `-CompoundStmt 0x12d942b30 <col:49, line:20:11>
    |   `-CompoundStmt 0x12d943920 <line:23:12, line:35:5>
    |     `-ForStmt 0x12d9438e8 <line:24:7, line:34:7>
    |       |-BinaryOperator 0x12d942f60 <line:24:11, col:36> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x12d942c28 <col:11> 'int' lvalue Var 0x12d928ec8 'j' 'int'
    |       | `-BinaryOperator 0x12d942f40 <col:15, col:36> '<dependent type>' contains-errors '*'
    |       |   |-ParenExpr 0x12d942f20 <col:15, col:26> 'int'
    |       |   | `-BinaryOperator 0x12d942f00 <col:16, col:25> 'int' '-'
    |       |   |   |-BinaryOperator 0x12d942ee0 <col:16, col:23> 'int' '+'
    |       |   |   | |-ImplicitCastExpr 0x12d942eb0 <col:16> 'int' <LValueToRValue>
    |       |   |   | | `-DeclRefExpr 0x12d942c48 <col:16> 'int' lvalue ParmVar 0x12d928c28 'dest_y' 'int'
    |       |   |   | `-ImplicitCastExpr 0x12d942ec8 <col:23> 'int' <LValueToRValue>
    |       |   |   |   `-DeclRefExpr 0x12d942c68 <col:23> 'int' lvalue ParmVar 0x12d928b28 'h' 'int'
    |       |   |   `-IntegerLiteral 0x12d942cd8 <col:25> 'int' 1
    |       |   `-CXXDependentScopeMemberExpr 0x12d942d58 <col:28, col:36> '<dependent type>' contains-errors lvalue ->width
    |       |     `-RecoveryExpr 0x12d942d38 <col:28> '<dependent type>' contains-errors lvalue
    |       |-<<<NULL>>>
    |       |-BinaryOperator 0x12d943068 <col:43, col:63> 'int' contains-errors '>='
    |       | |-DeclRefExpr 0x12d942f80 <col:43> 'int' lvalue Var 0x12d928ec8 'j' 'int'
    |       | `-BinaryOperator 0x12d943048 <col:48, col:63> '<dependent type>' contains-errors '*'
    |       |   |-DeclRefExpr 0x12d942fa0 <col:48> 'int' lvalue ParmVar 0x12d928c28 'dest_y' 'int'
    |       |   `-CXXDependentScopeMemberExpr 0x12d943000 <col:55, col:63> '<dependent type>' contains-errors lvalue ->width
    |       |     `-RecoveryExpr 0x12d942fc0 <col:55> '<dependent type>' contains-errors lvalue
    |       |-CompoundAssignOperator 0x12d943110 <col:70, col:81> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       | |-DeclRefExpr 0x12d943088 <col:70> 'int' lvalue Var 0x12d928ec8 'j' 'int'
    |       | `-CXXDependentScopeMemberExpr 0x12d9430c8 <col:73, col:81> '<dependent type>' contains-errors lvalue ->width
    |       |   `-RecoveryExpr 0x12d9430a8 <col:73> '<dependent type>' contains-errors lvalue
    |       `-CompoundStmt 0x12d9438d0 <col:88, line:34:7>
    |         `-IfStmt 0x12d9438a0 <line:25:9, line:33:9> has_else
    |           |-BinaryOperator 0x12d9431b0 <line:25:13, col:22> 'int' '<'
    |           | |-ImplicitCastExpr 0x12d943180 <col:13> 'int' <LValueToRValue>
    |           | | `-DeclRefExpr 0x12d943140 <col:13> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |           | `-ImplicitCastExpr 0x12d943198 <col:22> 'int' <LValueToRValue>
    |           |   `-DeclRefExpr 0x12d943160 <col:22> 'int' lvalue ParmVar 0x12d9289a8 'src_x' 'int'
    |           |-CompoundStmt 0x12d943500 <col:29, line:29:9>
    |           | `-ForStmt 0x12d9434c8 <line:26:11, line:28:11>
    |           |   |-BinaryOperator 0x12d943228 <line:26:15, col:19> 'int' '='
    |           |   | |-DeclRefExpr 0x12d9431d0 <col:15> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |           |   | `-ImplicitCastExpr 0x12d943210 <col:19> 'int' <LValueToRValue>
    |           |   |   `-DeclRefExpr 0x12d9431f0 <col:19> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |           |   |-<<<NULL>>>
    |           |   |-BinaryOperator 0x12d943310 <col:27, col:38> 'int' '<'
    |           |   | |-ImplicitCastExpr 0x12d9432f8 <col:27> 'int' <LValueToRValue>
    |           |   | | `-DeclRefExpr 0x12d943248 <col:27> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |           |   | `-BinaryOperator 0x12d9432d8 <col:31, col:38> 'int' '+'
    |           |   |   |-ImplicitCastExpr 0x12d9432a8 <col:31> 'int' <LValueToRValue>
    |           |   |   | `-DeclRefExpr 0x12d943268 <col:31> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |           |   |   `-ImplicitCastExpr 0x12d9432c0 <col:38> 'int' <LValueToRValue>
    |           |   |     `-DeclRefExpr 0x12d943288 <col:38> 'int' lvalue ParmVar 0x12d928aa8 'w' 'int'
    |           |   |-UnaryOperator 0x12d943350 <col:41, col:42> 'int' postfix '++'
    |           |   | `-DeclRefExpr 0x12d943330 <col:41> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |           |   `-CompoundStmt 0x12d9434b8 <col:46, line:28:11>
    |           `-CompoundStmt 0x12d943888 <line:29:16, line:33:9>
    |             `-ForStmt 0x12d943850 <line:30:11, line:32:11>
    |               |-BinaryOperator 0x12d943608 <line:30:15, col:28> 'int' '='
    |               | |-DeclRefExpr 0x12d943518 <col:15> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |               | `-BinaryOperator 0x12d9435e8 <col:19, col:28> 'int' '-'
    |               |   |-BinaryOperator 0x12d9435a8 <col:19, col:26> 'int' '+'
    |               |   | |-ImplicitCastExpr 0x12d943578 <col:19> 'int' <LValueToRValue>
    |               |   | | `-DeclRefExpr 0x12d943538 <col:19> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |               |   | `-ImplicitCastExpr 0x12d943590 <col:26> 'int' <LValueToRValue>
    |               |   |   `-DeclRefExpr 0x12d943558 <col:26> 'int' lvalue ParmVar 0x12d928aa8 'w' 'int'
    |               |   `-IntegerLiteral 0x12d9435c8 <col:28> 'int' 1
    |               |-<<<NULL>>>
    |               |-BinaryOperator 0x12d943698 <col:31, col:36> 'int' '>='
    |               | |-ImplicitCastExpr 0x12d943668 <col:31> 'int' <LValueToRValue>
    |               | | `-DeclRefExpr 0x12d943628 <col:31> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |               | `-ImplicitCastExpr 0x12d943680 <col:36> 'int' <LValueToRValue>
    |               |   `-DeclRefExpr 0x12d943648 <col:36> 'int' lvalue ParmVar 0x12d928ba8 'dest_x' 'int'
    |               |-UnaryOperator 0x12d9436d8 <col:44, col:45> 'int' postfix '--'
    |               | `-DeclRefExpr 0x12d9436b8 <col:44> 'int' lvalue Var 0x12d928e48 'i' 'int'
    |               `-CompoundStmt 0x12d943840 <col:49, line:32:11>
    `-SwitchStmt 0x12d943a48 <line:38:3, line:44:3>
      |-CXXDependentScopeMemberExpr 0x12d9439e8 <line:38:10, col:25> '<dependent type>' contains-errors lvalue .bitsPerPixel
      | `-CXXDependentScopeMemberExpr 0x12d9439a0 <col:10, col:18> '<dependent type>' contains-errors lvalue ->format
      |   `-RecoveryExpr 0x12d943980 <col:10> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12d9440e0 <col:39, line:44:3>
        |-CaseStmt 0x12d943a90 <line:39:3, col:33>
        | |-IntegerLiteral 0x12d943a70 <col:9> 'int' 8
        | `-CallExpr 0x12d943c98 <col:12, col:33> 'int'
        |   |-ImplicitCastExpr 0x12d943c80 <col:12> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x12d943c10 <col:12> 'int ()' Function 0x12d943b58 'COPY_RECT_FROM_RECT' 'int ()'
        |   `-IntegerLiteral 0x12d943c30 <col:32> 'int' 8
        |-BreakStmt 0x12d943cc0 <col:37>
        |-CaseStmt 0x12d943ce8 <line:40:3, col:34>
        | |-IntegerLiteral 0x12d943cc8 <col:8> 'int' 16
        | `-CallExpr 0x12d943d68 <col:12, col:34> 'int'
        |   |-ImplicitCastExpr 0x12d943d50 <col:12> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x12d943d10 <col:12> 'int ()' Function 0x12d943b58 'COPY_RECT_FROM_RECT' 'int ()'
        |   `-IntegerLiteral 0x12d943d30 <col:32> 'int' 16
        |-BreakStmt 0x12d943d90 <col:37>
        |-CaseStmt 0x12d943db8 <line:41:3, col:34>
        | |-IntegerLiteral 0x12d943d98 <col:8> 'int' 32
        | `-CallExpr 0x12d943e38 <col:12, col:34> 'int'
        |   |-ImplicitCastExpr 0x12d943e20 <col:12> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x12d943de0 <col:12> 'int ()' Function 0x12d943b58 'COPY_RECT_FROM_RECT' 'int ()'
        |   `-IntegerLiteral 0x12d943e00 <col:32> 'int' 32
        |-BreakStmt 0x12d943e60 <col:37>
        `-DefaultStmt 0x12d9440c0 <line:42:3, line:43:51>
          `-CallExpr 0x12d944090 <col:5, col:51> '<dependent type>' contains-errors
            |-DeclRefExpr 0x12d943f48 <col:5> 'int ()' Function 0x12d943e90 'rfbClientLog' 'int ()'
            |-StringLiteral 0x12d943fb0 <col:18> 'char[4]' lvalue "STR"
            `-CXXDependentScopeMemberExpr 0x12d944048 <col:24, col:39> '<dependent type>' contains-errors lvalue .bitsPerPixel
              `-CXXDependentScopeMemberExpr 0x12d944000 <col:24, col:32> '<dependent type>' contains-errors lvalue ->format
                `-RecoveryExpr 0x12d943fd0 <col:24> '<dependent type>' contains-errors lvalue
