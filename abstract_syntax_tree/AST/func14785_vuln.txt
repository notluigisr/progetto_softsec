TranslationUnitDecl 0x127055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x127055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1270555d0 '__int128'
|-TypedefDecl 0x127055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1270555f0 'unsigned __int128'
|-TypedefDecl 0x13000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13000bc00 'struct __NSConstantString_tag'
|   `-Record 0x127055f80 '__NSConstantString_tag'
|-TypedefDecl 0x13000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055790 '__SVInt8_t'
|-TypedefDecl 0x13000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1270557b0 '__SVInt16_t'
|-TypedefDecl 0x13000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1270557d0 '__SVInt32_t'
|-TypedefDecl 0x13000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1270557f0 '__SVInt64_t'
|-TypedefDecl 0x13000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055810 '__SVUint8_t'
|-TypedefDecl 0x13000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055830 '__SVUint16_t'
|-TypedefDecl 0x13000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055850 '__SVUint32_t'
|-TypedefDecl 0x13000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055870 '__SVUint64_t'
|-TypedefDecl 0x13000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055890 '__SVFloat16_t'
|-TypedefDecl 0x13000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1270558b0 '__SVFloat32_t'
|-TypedefDecl 0x13000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1270558d0 '__SVFloat64_t'
|-TypedefDecl 0x13000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1270558f0 '__SVBfloat16_t'
|-TypedefDecl 0x13000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055910 '__clang_svint8x2_t'
|-TypedefDecl 0x13000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055930 '__clang_svint16x2_t'
|-TypedefDecl 0x13000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055950 '__clang_svint32x2_t'
|-TypedefDecl 0x13000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055970 '__clang_svint64x2_t'
|-TypedefDecl 0x13000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1270559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1270559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1270559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x13000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x127055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x127055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x127055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x13000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x127055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x127055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x127055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x13000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x13000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x13000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x13000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x127055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x127055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x127055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127055d90 '__SVBool_t'
|-TypedefDecl 0x13000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x127055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x13000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x127055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x127055df0 '__SVCount_t'
|-TypedefDecl 0x13000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1270550b0 'char'
|-TypedefDecl 0x13000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1270550b0 'char'
|-FunctionDecl 0x13000e0f8 <dataset_diviso_filec/func14785_vuln.c:1:1, line:53:1> line:1:1 invalid gerbv_gdk_draw_prim21 'int (int *, int *, double *, double, int, int)'
| |-ParmVarDecl 0x13000dd28 <col:23, col:34> col:34 invalid pixmap 'int *'
| |-ParmVarDecl 0x13000dda8 <col:42, col:49> col:49 invalid gc 'int *'
| |-ParmVarDecl 0x13000de58 <col:53, col:61> col:61 used p 'double *'
| |-ParmVarDecl 0x13000ded8 <line:2:5, col:12> col:12 used scale 'double'
| |-ParmVarDecl 0x13000df58 <col:19, col:24> col:24 used x 'int'
| |-ParmVarDecl 0x13000dfd8 <col:27, col:32> col:32 used y 'int'
| `-CompoundStmt 0x13002c0c0 <line:3:1, line:53:1>
|   |-DeclStmt 0x13000e270 <line:4:5, col:31>
|   | `-VarDecl 0x13000e1e8 <col:5, col:30> col:15 used exposure_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13000e250 <col:30> 'int' 0
|   |-DeclStmt 0x13000e328 <line:5:5, col:28>
|   | `-VarDecl 0x13000e2a0 <col:5, col:27> col:15 used width_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13000e308 <col:27> 'int' 1
|   |-DeclStmt 0x13000e3e0 <line:6:5, col:29>
|   | `-VarDecl 0x13000e358 <col:5, col:28> col:15 used height_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13000e3c0 <col:28> 'int' 2
|   |-DeclStmt 0x1300274a0 <line:7:5, col:28>
|   | `-VarDecl 0x130027418 <col:5, col:27> col:15 used exp_x_idx 'const int' cinit
|   |   `-IntegerLiteral 0x130027480 <col:27> 'int' 3
|   |-DeclStmt 0x130027558 <line:8:5, col:28>
|   | `-VarDecl 0x1300274d0 <col:5, col:27> col:15 used exp_y_idx 'const int' cinit
|   |   `-IntegerLiteral 0x130027538 <col:27> 'int' 4
|   |-DeclStmt 0x130027610 <line:9:5, col:31>
|   | `-VarDecl 0x130027588 <col:5, col:30> col:15 used rotation_idx 'const int' cinit
|   |   `-IntegerLiteral 0x1300275f0 <col:30> 'int' 5
|   |-DeclStmt 0x1300276c8 <line:10:5, col:29>
|   | `-VarDecl 0x130027640 <col:5, col:28> col:15 used nuf_points 'const int' cinit
|   |   `-IntegerLiteral 0x1300276a8 <col:28> 'int' 4
|   |-DeclStmt 0x1300279d0 <line:14:5, col:32>
|   | |-VarDecl 0x1300278d0 <col:5, col:9> col:9 used half_width 'int'
|   | `-VarDecl 0x130027950 <col:5, col:21> col:21 used half_height 'int'
|   |-DeclStmt 0x130027a68 <line:15:5, col:10>
|   | `-VarDecl 0x130027a00 <col:5, col:9> col:9 used i 'int'
|   |-BinaryOperator 0x130028330 <line:17:5, col:55> 'int' '='
|   | |-DeclRefExpr 0x130027a80 <col:5> 'int' lvalue Var 0x1300278d0 'half_width' 'int'
|   | `-CStyleCastExpr 0x130028308 <col:18, col:55> 'int' <FloatingToIntegral>
|   |   `-CallExpr 0x1300282c8 <col:23, col:55> 'double'
|   |     |-ImplicitCastExpr 0x1300282b0 <col:23> 'double (*)(double)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1300280c0 <col:23> 'double (double)' Function 0x130027f00 'round' 'double (double)'
|   |     `-BinaryOperator 0x130028258 <col:29, col:52> 'double' '/'
|   |       |-BinaryOperator 0x130028218 <col:29, col:44> 'double' '*'
|   |       | |-ImplicitCastExpr 0x130028190 <col:29, col:40> 'double' <LValueToRValue>
|   |       | | `-ArraySubscriptExpr 0x130028150 <col:29, col:40> 'double' lvalue
|   |       | |   |-ImplicitCastExpr 0x130028120 <col:29> 'double *' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x1300280e0 <col:29> 'double *' lvalue ParmVar 0x13000de58 'p' 'double *'
|   |       | |   `-ImplicitCastExpr 0x130028138 <col:31> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x130028100 <col:31> 'const int' lvalue Var 0x13000e2a0 'width_idx' 'const int'
|   |       | `-ImplicitCastExpr 0x1300281a8 <col:44> 'double' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x130028170 <col:44> 'double' lvalue ParmVar 0x13000ded8 'scale' 'double'
|   |       `-FloatingLiteral 0x130028238 <col:52> 'double' 2.000000e+00
|   |-BinaryOperator 0x13002a5a8 <line:18:5, col:56> 'int' '='
|   | |-DeclRefExpr 0x130028350 <col:5> 'int' lvalue Var 0x130027950 'half_height' 'int'
|   | `-CStyleCastExpr 0x13002a580 <col:18, col:56> 'int' <FloatingToIntegral>
|   |   `-CallExpr 0x13002a540 <col:23, col:56> 'double'
|   |     |-ImplicitCastExpr 0x13002a528 <col:23> 'double (*)(double)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x130028370 <col:23> 'double (double)' Function 0x130027f00 'round' 'double (double)'
|   |     `-BinaryOperator 0x13002a508 <col:29, col:53> 'double' '/'
|   |       |-BinaryOperator 0x13002a4c8 <col:29, col:45> 'double' '*'
|   |       | |-ImplicitCastExpr 0x13002a440 <col:29, col:41> 'double' <LValueToRValue>
|   |       | | `-ArraySubscriptExpr 0x13002a400 <col:29, col:41> 'double' lvalue
|   |       | |   |-ImplicitCastExpr 0x1300283d0 <col:29> 'double *' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x130028390 <col:29> 'double *' lvalue ParmVar 0x13000de58 'p' 'double *'
|   |       | |   `-ImplicitCastExpr 0x1300283e8 <col:31> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x1300283b0 <col:31> 'const int' lvalue Var 0x13000e358 'height_idx' 'const int'
|   |       | `-ImplicitCastExpr 0x13002a458 <col:45> 'double' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13002a420 <col:45> 'double' lvalue ParmVar 0x13000ded8 'scale' 'double'
|   |       `-FloatingLiteral 0x13002a4e8 <col:53> 'double' 2.000000e+00
|   |-ForStmt 0x13002b058 <line:32:5, line:38:5>
|   | |-BinaryOperator 0x13002a8c8 <line:32:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x13002a888 <col:10> 'int' lvalue Var 0x130027a00 'i' 'int'
|   | | `-IntegerLiteral 0x13002a8a8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13002a958 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x13002a928 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13002a8e8 <col:17> 'int' lvalue Var 0x130027a00 'i' 'int'
|   | | `-ImplicitCastExpr 0x13002a940 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13002a908 <col:21> 'const int' lvalue Var 0x130027640 'nuf_points' 'const int'
|   | |-UnaryOperator 0x13002a9f0 <col:33, col:34> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13002a9d0 <col:33> 'int' lvalue Var 0x130027a00 'i' 'int'
|   | `-CompoundStmt 0x13002b048 <col:38, line:38:5>
|   |-IfStmt 0x13002be30 <line:43:5, line:46:5>
|   | |-BinaryOperator 0x13002b2d0 <line:43:9, col:28> 'int' '=='
|   | | |-ImplicitCastExpr 0x13002b260 <col:9, col:23> 'double' <LValueToRValue>
|   | | | `-ArraySubscriptExpr 0x13002b220 <col:9, col:23> 'double' lvalue
|   | | |   |-ImplicitCastExpr 0x13002b1f0 <col:9> 'double *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x13002b1b0 <col:9> 'double *' lvalue ParmVar 0x13000de58 'p' 'double *'
|   | | |   `-ImplicitCastExpr 0x13002b208 <col:11> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13002b1d0 <col:11> 'const int' lvalue Var 0x13000e1e8 'exposure_idx' 'const int'
|   | | `-FloatingLiteral 0x13002b240 <col:28> 'double' 0.000000e+00
|   | `-CompoundStmt 0x13002be20 <col:33, line:46:5>
|   `-ReturnStmt 0x13002c0b0 <line:52:5>
`-FunctionDecl 0x130027f00 <line:17:23> col:23 implicit used round 'double (double)' extern
  |-ParmVarDecl 0x130028000 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x130027fa8 <<invalid sloc>> Implicit 1145
  |-NoThrowAttr 0x130028070 <col:23> Implicit
  `-ConstAttr 0x130028098 <col:23> Implicit
