TranslationUnitDecl 0x13f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f055bd0 '__int128'
|-TypedefDecl 0x13f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f055bf0 'unsigned __int128'
|-TypedefDecl 0x13f80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13f056580 '__NSConstantString_tag'
|-TypedefDecl 0x13f80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f055d90 '__SVInt8_t'
|-TypedefDecl 0x13f80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f055db0 '__SVInt16_t'
|-TypedefDecl 0x13f80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f055dd0 '__SVInt32_t'
|-TypedefDecl 0x13f80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f055df0 '__SVInt64_t'
|-TypedefDecl 0x13f80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f055e10 '__SVUint8_t'
|-TypedefDecl 0x13f80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f055e30 '__SVUint16_t'
|-TypedefDecl 0x13f80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f055e50 '__SVUint32_t'
|-TypedefDecl 0x13f80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f055e70 '__SVUint64_t'
|-TypedefDecl 0x13f80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f055e90 '__SVFloat16_t'
|-TypedefDecl 0x13f80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13f80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13f80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13f80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13f80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13f80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13f80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13f80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13f80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f056390 '__SVBool_t'
|-TypedefDecl 0x13f80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f0563f0 '__SVCount_t'
|-TypedefDecl 0x13f80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f80dbb0 'char *'
|   `-BuiltinType 0x13f0556b0 'char'
|-TypedefDecl 0x13f80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f80dbb0 'char *'
|   `-BuiltinType 0x13f0556b0 'char'
|-FunctionDecl 0x13f80e0f8 <dataset_diviso_filec/func2086_vuln.c:1:1, line:49:1> line:1:1 invalid gerbv_gdk_draw_prim20 'int (int *, int *, double *, double, int, int)'
| |-ParmVarDecl 0x13f80dd28 <col:23, col:34> col:34 invalid pixmap 'int *'
| |-ParmVarDecl 0x13f80dda8 <col:42, col:49> col:49 invalid gc 'int *'
| |-ParmVarDecl 0x13f80de58 <col:53, col:61> col:61 used p 'double *'
| |-ParmVarDecl 0x13f80ded8 <line:2:5, col:12> col:12 used scale 'double'
| |-ParmVarDecl 0x13f80df58 <col:19, col:24> col:24 used x 'int'
| |-ParmVarDecl 0x13f80dfd8 <col:27, col:32> col:32 used y 'int'
| `-CompoundStmt 0x13f82cfc8 <line:3:1, line:49:1>
|   |-DeclStmt 0x13f80e270 <line:4:5, col:31>
|   | `-VarDecl 0x13f80e1e8 <col:5, col:30> col:15 used exposure_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13f80e250 <col:30> 'int' 0
|   |-DeclStmt 0x13f80e328 <line:5:5, col:32>
|   | `-VarDecl 0x13f80e2a0 <col:5, col:31> col:15 used linewidth_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13f80e308 <col:31> 'int' 1
|   |-DeclStmt 0x13f80e3e0 <line:6:5, col:30>
|   | `-VarDecl 0x13f80e358 <col:5, col:29> col:15 used start_x_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13f80e3c0 <col:29> 'int' 2
|   |-DeclStmt 0x13f8274a0 <line:7:5, col:30>
|   | `-VarDecl 0x13f827418 <col:5, col:29> col:15 used start_y_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13f827480 <col:29> 'int' 3
|   |-DeclStmt 0x13f827558 <line:8:5, col:28>
|   | `-VarDecl 0x13f8274d0 <col:5, col:27> col:15 used end_x_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13f827538 <col:27> 'int' 4
|   |-DeclStmt 0x13f827610 <line:9:5, col:28>
|   | `-VarDecl 0x13f827588 <col:5, col:27> col:15 used end_y_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13f8275f0 <col:27> 'int' 5
|   |-DeclStmt 0x13f8276c8 <line:10:5, col:31>
|   | `-VarDecl 0x13f827640 <col:5, col:30> col:15 used rotation_idx 'const int' cinit
|   |   `-IntegerLiteral 0x13f8276a8 <col:30> 'int' 6
|   |-DeclStmt 0x13f827780 <line:11:5, col:29>
|   | `-VarDecl 0x13f8276f8 <col:5, col:28> col:15 used nuf_points 'const int' cinit
|   |   `-IntegerLiteral 0x13f827760 <col:28> 'int' 2
|   |-DeclStmt 0x13f8279f8 <line:15:5, col:10>
|   | `-VarDecl 0x13f827990 <col:5, col:9> col:9 used i 'int'
|   |-CallExpr 0x13f827b98 <line:17:5, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13f827af0 <col:5> 'int ()' Function 0x13f827a38 'gdk_gc_copy' 'int ()'
|   | |-RecoveryExpr 0x13f827b78 <col:17> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x13f827b28 <col:27> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13f827f40 <line:20:5, line:23:5>
|   | |-BinaryOperator 0x13f827ce8 <line:20:9, col:28> 'int' '=='
|   | | |-ImplicitCastExpr 0x13f827c78 <col:9, col:23> 'double' <LValueToRValue>
|   | | | `-ArraySubscriptExpr 0x13f827c38 <col:9, col:23> 'double' lvalue
|   | | |   |-ImplicitCastExpr 0x13f827c08 <col:9> 'double *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x13f827bc8 <col:9> 'double *' lvalue ParmVar 0x13f80de58 'p' 'double *'
|   | | |   `-ImplicitCastExpr 0x13f827c20 <col:11> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13f827be8 <col:11> 'const int' lvalue Var 0x13f80e1e8 'exposure_idx' 'const int'
|   | | `-FloatingLiteral 0x13f827c58 <col:28> 'double' 0.000000e+00
|   | `-CompoundStmt 0x13f827f28 <col:33, line:23:5>
|   |   `-CallExpr 0x13f827ef8 <line:22:2, col:40> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13f827e08 <col:2> 'int ()' Function 0x13f827d50 'gdk_gc_set_foreground' 'int ()'
|   |     |-RecoveryExpr 0x13f827ea0 <col:24> '<dependent type>' contains-errors lvalue
|   |     `-UnaryOperator 0x13f827ee0 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-RecoveryExpr 0x13f827ec0 <col:35> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13f82a130 <line:25:5, line:29:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13f828040 <line:25:5> 'int ()' Function 0x13f827f88 'gdk_gc_set_line_attributes' 'int ()'
|   | |-RecoveryExpr 0x13f829f90 <col:32> '<dependent type>' contains-errors lvalue
|   | |-CStyleCastExpr 0x13f82a0a8 <line:26:11, col:46> 'int' <FloatingToIntegral>
|   | | `-CallExpr 0x13f82a080 <col:16, col:46> 'double'
|   | |   |-ImplicitCastExpr 0x13f82a068 <col:16> 'double (*)(double)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13f829cd0 <col:16> 'double (double)' Function 0x13f829b10 'round' 'double (double)'
|   | |   `-BinaryOperator 0x13f82a048 <col:22, col:45> 'double' '*'
|   | |     |-ImplicitCastExpr 0x13f82a018 <col:22> 'double' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x13f829cf0 <col:22> 'double' lvalue ParmVar 0x13f80ded8 'scale' 'double'
|   | |     `-ImplicitCastExpr 0x13f82a030 <col:30, col:45> 'double' <LValueToRValue>
|   | |       `-ArraySubscriptExpr 0x13f829ff8 <col:30, col:45> 'double' lvalue
|   | |         |-ImplicitCastExpr 0x13f829fc8 <col:30> 'double *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x13f829d10 <col:30> 'double *' lvalue ParmVar 0x13f80de58 'p' 'double *'
|   | |         `-ImplicitCastExpr 0x13f829fe0 <col:32> 'int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x13f829d30 <col:32> 'const int' lvalue Var 0x13f80e2a0 'linewidth_idx' 'const int'
|   | |-RecoveryExpr 0x13f82a0d0 <line:27:11> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x13f82a0f0 <line:28:11> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x13f82a110 <line:29:11> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x13f82cce0 <line:36:5, line:40:5>
|   | |-BinaryOperator 0x13f82a818 <line:36:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x13f82a7d8 <col:10> 'int' lvalue Var 0x13f827990 'i' 'int'
|   | | `-IntegerLiteral 0x13f82a7f8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13f82a8a8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x13f82a878 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13f82a838 <col:17> 'int' lvalue Var 0x13f827990 'i' 'int'
|   | | `-ImplicitCastExpr 0x13f82a890 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13f82a858 <col:21> 'const int' lvalue Var 0x13f8276f8 'nuf_points' 'const int'
|   | |-UnaryOperator 0x13f82a940 <col:33, col:34> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13f82a920 <col:33> 'int' lvalue Var 0x13f827990 'i' 'int'
|   | `-CompoundStmt 0x13f82ccd0 <col:38, line:40:5>
|   `-ReturnStmt 0x13f82cfb8 <line:48:5>
`-FunctionDecl 0x13f829b10 <line:26:16> col:16 implicit used round 'double (double)' extern
  |-ParmVarDecl 0x13f829c10 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x13f829bb8 <<invalid sloc>> Implicit 1145
  |-NoThrowAttr 0x13f829c80 <col:16> Implicit
  `-ConstAttr 0x13f829ca8 <col:16> Implicit
