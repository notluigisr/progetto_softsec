TranslationUnitDecl 0x14f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14f855bd0 '__int128'
|-TypedefDecl 0x14f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14f855bf0 'unsigned __int128'
|-TypedefDecl 0x14f926c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f926a00 'struct __NSConstantString_tag'
|   `-Record 0x14f856580 '__NSConstantString_tag'
|-TypedefDecl 0x14f926c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14f855d90 '__SVInt8_t'
|-TypedefDecl 0x14f926d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14f855db0 '__SVInt16_t'
|-TypedefDecl 0x14f926d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14f855dd0 '__SVInt32_t'
|-TypedefDecl 0x14f926dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14f855df0 '__SVInt64_t'
|-TypedefDecl 0x14f926e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14f855e10 '__SVUint8_t'
|-TypedefDecl 0x14f926ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14f855e30 '__SVUint16_t'
|-TypedefDecl 0x14f926f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14f855e50 '__SVUint32_t'
|-TypedefDecl 0x14f926f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14f855e70 '__SVUint64_t'
|-TypedefDecl 0x14f926fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14f855e90 '__SVFloat16_t'
|-TypedefDecl 0x14f927040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14f9270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14f927110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14f927178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14f9271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14f927248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14f9272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14f927318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f927380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f9273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f927450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f9274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f927520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f927588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f9275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f927658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14f9276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f927728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f927790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f9277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f927860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f9278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f927930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f927998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f928200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f928268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f9282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f928338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14f9283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14f928408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14f928470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14f9284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f928540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f9285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f928610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f928678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f9286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f928748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f9287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f928818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14f856390 '__SVBool_t'
|-TypedefDecl 0x14f928880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f9288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f928950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14f8563f0 '__SVCount_t'
|-TypedefDecl 0x14f9289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f9289b0 'char *'
|   `-BuiltinType 0x14f8556b0 'char'
|-TypedefDecl 0x14f928a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f9289b0 'char *'
|   `-BuiltinType 0x14f8556b0 'char'
|-FunctionDecl 0x14f928c88 <dataset_diviso_filec/func8344_vuln.c:1:1, line:76:1> line:1:1 invalid stl_remove_degenerate 'int (int *, int)'
| |-ParmVarDecl 0x14f928b28 <col:23, col:33> col:33 referenced invalid stl 'int *'
| |-ParmVarDecl 0x14f928ba8 <col:38, col:42> col:42 used facet 'int'
| `-CompoundStmt 0x14f9474a8 <col:49, line:76:1>
|   |-DeclStmt 0x14f928dc0 <line:2:3, col:12>
|   | `-VarDecl 0x14f928d58 <col:3, col:7> col:7 used edge1 'int'
|   |-DeclStmt 0x14f928e58 <line:3:3, col:12>
|   | `-VarDecl 0x14f928df0 <col:3, col:7> col:7 used edge2 'int'
|   |-DeclStmt 0x14f928ef0 <line:4:3, col:12>
|   | `-VarDecl 0x14f928e88 <col:3, col:7> col:7 used edge3 'int'
|   |-DeclStmt 0x14f928f88 <line:5:3, col:16>
|   | `-VarDecl 0x14f928f20 <col:3, col:7> col:7 used neighbor1 'int'
|   |-DeclStmt 0x14f929020 <line:6:3, col:16>
|   | `-VarDecl 0x14f928fb8 <col:3, col:7> col:7 used neighbor2 'int'
|   |-DeclStmt 0x14f9290b8 <line:7:3, col:16>
|   | `-VarDecl 0x14f929050 <col:3, col:7> col:7 used neighbor3 'int'
|   |-DeclStmt 0x14f929150 <line:8:3, col:12>
|   | `-VarDecl 0x14f9290e8 <col:3, col:7> col:7 used vnot1 'int'
|   |-DeclStmt 0x14f9291e8 <line:9:3, col:12>
|   | `-VarDecl 0x14f929180 <col:3, col:7> col:7 used vnot2 'int'
|   |-DeclStmt 0x14f942280 <line:10:3, col:12>
|   | `-VarDecl 0x14f942218 <col:3, col:7> col:7 used vnot3 'int'
|   |-IfStmt 0x14f942310 <line:12:3, col:19>
|   | |-CXXDependentScopeMemberExpr 0x14f9422b8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->error
|   | | `-RecoveryExpr 0x14f942298 <col:7> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x14f942300 <col:19>
|   |-IfStmt 0x14f943648 <line:14:3, line:24:3>
|   | |-RecoveryExpr 0x14f9430d0 <line:14:9, line:17:74> '_Bool' contains-errors
|   | `-CompoundStmt 0x14f943620 <col:77, line:24:3>
|   |   |-CallExpr 0x14f9433c8 <line:20:5, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x14f9433b0 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14f9432d8 <col:5> 'int (const char *, ...)' Function 0x14f943130 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x14f943408 <col:12> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x14f9433f0 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x14f943340 <col:12> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x14f9435e0 <line:22:5, col:32> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14f943580 <col:5> 'int ()' Function 0x14f9434c8 'stl_remove_facet' 'int ()'
|   |   | |-RecoveryExpr 0x14f9435a0 <col:22> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x14f9435c0 <col:27> 'int' lvalue ParmVar 0x14f928ba8 'facet' 'int'
|   |   `-ReturnStmt 0x14f943610 <line:23:5>
|   |-IfStmt 0x14f944b30 <line:26:3, line:44:3> has_else
|   | |-RecoveryExpr 0x14f9439c0 <line:26:6, line:27:68> '_Bool' contains-errors
|   | |-CompoundStmt 0x14f943b00 <col:71, line:31:3>
|   | | |-BinaryOperator 0x14f943a20 <line:28:5, col:13> 'int' '='
|   | | | |-DeclRefExpr 0x14f9439e0 <col:5> 'int' lvalue Var 0x14f928d58 'edge1' 'int'
|   | | | `-IntegerLiteral 0x14f943a00 <col:13> 'int' 1
|   | | |-BinaryOperator 0x14f943a80 <line:29:5, col:13> 'int' '='
|   | | | |-DeclRefExpr 0x14f943a40 <col:5> 'int' lvalue Var 0x14f928df0 'edge2' 'int'
|   | | | `-IntegerLiteral 0x14f943a60 <col:13> 'int' 2
|   | | `-BinaryOperator 0x14f943ae0 <line:30:5, col:13> 'int' '='
|   | |   |-DeclRefExpr 0x14f943aa0 <col:5> 'int' lvalue Var 0x14f928e88 'edge3' 'int'
|   | |   `-IntegerLiteral 0x14f943ac0 <col:13> 'int' 0
|   | `-IfStmt 0x14f944b00 <line:31:10, line:44:3> has_else
|   |   |-RecoveryExpr 0x14f943e80 <line:31:13, line:32:75> '_Bool' contains-errors
|   |   |-CompoundStmt 0x14f943fc0 <col:78, line:36:3>
|   |   | |-BinaryOperator 0x14f943ee0 <line:33:5, col:13> 'int' '='
|   |   | | |-DeclRefExpr 0x14f943ea0 <col:5> 'int' lvalue Var 0x14f928d58 'edge1' 'int'
|   |   | | `-IntegerLiteral 0x14f943ec0 <col:13> 'int' 0
|   |   | |-BinaryOperator 0x14f943f40 <line:34:5, col:13> 'int' '='
|   |   | | |-DeclRefExpr 0x14f943f00 <col:5> 'int' lvalue Var 0x14f928df0 'edge2' 'int'
|   |   | | `-IntegerLiteral 0x14f943f20 <col:13> 'int' 2
|   |   | `-BinaryOperator 0x14f943fa0 <line:35:5, col:13> 'int' '='
|   |   |   |-DeclRefExpr 0x14f943f60 <col:5> 'int' lvalue Var 0x14f928e88 'edge3' 'int'
|   |   |   `-IntegerLiteral 0x14f943f80 <col:13> 'int' 1
|   |   `-IfStmt 0x14f944ad0 <line:36:10, line:44:3> has_else
|   |     |-RecoveryExpr 0x14f944940 <line:36:13, line:37:75> '_Bool' contains-errors
|   |     |-CompoundStmt 0x14f944a80 <col:78, line:41:3>
|   |     | |-BinaryOperator 0x14f9449a0 <line:38:5, col:13> 'int' '='
|   |     | | |-DeclRefExpr 0x14f944960 <col:5> 'int' lvalue Var 0x14f928d58 'edge1' 'int'
|   |     | | `-IntegerLiteral 0x14f944980 <col:13> 'int' 0
|   |     | |-BinaryOperator 0x14f944a00 <line:39:5, col:13> 'int' '='
|   |     | | |-DeclRefExpr 0x14f9449c0 <col:5> 'int' lvalue Var 0x14f928df0 'edge2' 'int'
|   |     | | `-IntegerLiteral 0x14f9449e0 <col:13> 'int' 1
|   |     | `-BinaryOperator 0x14f944a60 <line:40:5, col:13> 'int' '='
|   |     |   |-DeclRefExpr 0x14f944a20 <col:5> 'int' lvalue Var 0x14f928e88 'edge3' 'int'
|   |     |   `-IntegerLiteral 0x14f944a40 <col:13> 'int' 2
|   |     `-CompoundStmt 0x14f944ab8 <line:41:10, line:44:3>
|   |       `-ReturnStmt 0x14f944aa8 <line:43:5>
|   |-BinaryOperator 0x14f944d10 <line:45:3, col:57> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14f944b60 <col:3> 'int' lvalue Var 0x14f928f20 'neighbor1' 'int'
|   | `-ArraySubscriptExpr 0x14f944cf0 <col:15, col:57> '<dependent type>' contains-errors lvalue
|   |   |-ImplicitCastExpr 0x14f944cc0 <col:15, col:43> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-CXXDependentScopeMemberExpr 0x14f944c58 <col:15, col:43> '<dependent type>' contains-errors lvalue .neighbor
|   |   |   `-ArraySubscriptExpr 0x14f944c38 <col:15, col:41> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x14f944c08 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-CXXDependentScopeMemberExpr 0x14f944ba0 <col:15, col:20> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |   |     |   `-RecoveryExpr 0x14f944b80 <col:15> '<dependent type>' contains-errors lvalue
|   |   |     `-ImplicitCastExpr 0x14f944c20 <col:36> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14f944be8 <col:36> 'int' lvalue ParmVar 0x14f928ba8 'facet' 'int'
|   |   `-ImplicitCastExpr 0x14f944cd8 <col:52> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14f944ca0 <col:52> 'int' lvalue Var 0x14f928d58 'edge1' 'int'
|   |-BinaryOperator 0x14f944ee0 <line:46:3, col:57> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14f944d30 <col:3> 'int' lvalue Var 0x14f928fb8 'neighbor2' 'int'
|   | `-ArraySubscriptExpr 0x14f944ec0 <col:15, col:57> '<dependent type>' contains-errors lvalue
|   |   |-ImplicitCastExpr 0x14f944e90 <col:15, col:43> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-CXXDependentScopeMemberExpr 0x14f944e28 <col:15, col:43> '<dependent type>' contains-errors lvalue .neighbor
|   |   |   `-ArraySubscriptExpr 0x14f944e08 <col:15, col:41> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x14f944dd8 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-CXXDependentScopeMemberExpr 0x14f944d70 <col:15, col:20> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |   |     |   `-RecoveryExpr 0x14f944d50 <col:15> '<dependent type>' contains-errors lvalue
|   |   |     `-ImplicitCastExpr 0x14f944df0 <col:36> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14f944db8 <col:36> 'int' lvalue ParmVar 0x14f928ba8 'facet' 'int'
|   |   `-ImplicitCastExpr 0x14f944ea8 <col:52> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14f944e70 <col:52> 'int' lvalue Var 0x14f928df0 'edge2' 'int'
|   |-IfStmt 0x14f945118 <line:48:3, line:50:3>
|   | |-BinaryOperator 0x14f944f70 <line:48:6, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x14f944f58 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14f944f00 <col:6> 'int' lvalue Var 0x14f928f20 'neighbor1' 'int'
|   | | `-UnaryOperator 0x14f944f40 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14f944f20 <col:20> 'int' 1
|   | `-CompoundStmt 0x14f945100 <col:23, line:50:3>
|   |   `-CallExpr 0x14f9450d0 <line:49:5, col:48> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14f945070 <col:5> 'int ()' Function 0x14f944fb8 'stl_update_connects_remove_1' 'int ()'
|   |     |-RecoveryExpr 0x14f945090 <col:34> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14f9450b0 <col:39> 'int' lvalue Var 0x14f928fb8 'neighbor2' 'int'
|   |-IfStmt 0x14f945270 <line:51:3, line:53:3>
|   | |-BinaryOperator 0x14f9451a8 <line:51:6, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x14f945190 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14f945138 <col:6> 'int' lvalue Var 0x14f928fb8 'neighbor2' 'int'
|   | | `-UnaryOperator 0x14f945178 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14f945158 <col:20> 'int' 1
|   | `-CompoundStmt 0x14f945258 <col:23, line:53:3>
|   |   `-CallExpr 0x14f945228 <line:52:5, col:48> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14f9451c8 <col:5> 'int ()' Function 0x14f944fb8 'stl_update_connects_remove_1' 'int ()'
|   |     |-RecoveryExpr 0x14f9451e8 <col:34> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14f945208 <col:39> 'int' lvalue Var 0x14f928f20 'neighbor1' 'int'
|   |-BinaryOperator 0x14f945440 <line:56:3, col:57> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14f945290 <col:3> 'int' lvalue Var 0x14f929050 'neighbor3' 'int'
|   | `-ArraySubscriptExpr 0x14f945420 <col:15, col:57> '<dependent type>' contains-errors lvalue
|   |   |-ImplicitCastExpr 0x14f9453f0 <col:15, col:43> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-CXXDependentScopeMemberExpr 0x14f945388 <col:15, col:43> '<dependent type>' contains-errors lvalue .neighbor
|   |   |   `-ArraySubscriptExpr 0x14f945368 <col:15, col:41> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x14f945338 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-CXXDependentScopeMemberExpr 0x14f9452d0 <col:15, col:20> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |   |     |   `-RecoveryExpr 0x14f9452b0 <col:15> '<dependent type>' contains-errors lvalue
|   |   |     `-ImplicitCastExpr 0x14f945350 <col:36> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14f945318 <col:36> 'int' lvalue ParmVar 0x14f928ba8 'facet' 'int'
|   |   `-ImplicitCastExpr 0x14f945408 <col:52> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14f9453d0 <col:52> 'int' lvalue Var 0x14f928e88 'edge3' 'int'
|   |-BinaryOperator 0x14f945610 <line:57:3, col:61> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14f945460 <col:3> 'int' lvalue Var 0x14f9290e8 'vnot1' 'int'
|   | `-ArraySubscriptExpr 0x14f9455f0 <col:11, col:61> '<dependent type>' contains-errors lvalue
|   |   |-ImplicitCastExpr 0x14f9455c0 <col:11, col:39> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-CXXDependentScopeMemberExpr 0x14f945558 <col:11, col:39> '<dependent type>' contains-errors lvalue .which_vertex_not
|   |   |   `-ArraySubscriptExpr 0x14f945538 <col:11, col:37> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x14f945508 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-CXXDependentScopeMemberExpr 0x14f9454a0 <col:11, col:16> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |   |     |   `-RecoveryExpr 0x14f945480 <col:11> '<dependent type>' contains-errors lvalue
|   |   |     `-ImplicitCastExpr 0x14f945520 <col:32> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14f9454e8 <col:32> 'int' lvalue ParmVar 0x14f928ba8 'facet' 'int'
|   |   `-ImplicitCastExpr 0x14f9455d8 <col:56> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14f9455a0 <col:56> 'int' lvalue Var 0x14f928d58 'edge1' 'int'
|   |-BinaryOperator 0x14f9457e0 <line:58:3, col:61> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14f945630 <col:3> 'int' lvalue Var 0x14f929180 'vnot2' 'int'
|   | `-ArraySubscriptExpr 0x14f9457c0 <col:11, col:61> '<dependent type>' contains-errors lvalue
|   |   |-ImplicitCastExpr 0x14f945790 <col:11, col:39> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-CXXDependentScopeMemberExpr 0x14f945728 <col:11, col:39> '<dependent type>' contains-errors lvalue .which_vertex_not
|   |   |   `-ArraySubscriptExpr 0x14f945708 <col:11, col:37> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x14f9456d8 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-CXXDependentScopeMemberExpr 0x14f945670 <col:11, col:16> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |   |     |   `-RecoveryExpr 0x14f945650 <col:11> '<dependent type>' contains-errors lvalue
|   |   |     `-ImplicitCastExpr 0x14f9456f0 <col:32> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14f9456b8 <col:32> 'int' lvalue ParmVar 0x14f928ba8 'facet' 'int'
|   |   `-ImplicitCastExpr 0x14f9457a8 <col:56> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14f945770 <col:56> 'int' lvalue Var 0x14f928df0 'edge2' 'int'
|   |-BinaryOperator 0x14f9463b0 <line:59:3, col:61> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14f946200 <col:3> 'int' lvalue Var 0x14f942218 'vnot3' 'int'
|   | `-ArraySubscriptExpr 0x14f946390 <col:11, col:61> '<dependent type>' contains-errors lvalue
|   |   |-ImplicitCastExpr 0x14f946360 <col:11, col:39> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-CXXDependentScopeMemberExpr 0x14f9462f8 <col:11, col:39> '<dependent type>' contains-errors lvalue .which_vertex_not
|   |   |   `-ArraySubscriptExpr 0x14f9462d8 <col:11, col:37> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x14f9462a8 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-CXXDependentScopeMemberExpr 0x14f946240 <col:11, col:16> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |   |     |   `-RecoveryExpr 0x14f946220 <col:11> '<dependent type>' contains-errors lvalue
|   |   |     `-ImplicitCastExpr 0x14f9462c0 <col:32> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14f946288 <col:32> 'int' lvalue ParmVar 0x14f928ba8 'facet' 'int'
|   |   `-ImplicitCastExpr 0x14f946378 <col:56> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14f946340 <col:56> 'int' lvalue Var 0x14f928e88 'edge3' 'int'
|   |-IfStmt 0x14f9469b0 <line:61:3, line:64:3>
|   | |-BinaryOperator 0x14f946440 <line:61:6, col:20> 'int' '!='
|   | | |-ImplicitCastExpr 0x14f946428 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14f9463d0 <col:6> 'int' lvalue Var 0x14f928f20 'neighbor1' 'int'
|   | | `-UnaryOperator 0x14f946410 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14f9463f0 <col:20> 'int' 1
|   | `-CompoundStmt 0x14f946990 <col:22, line:64:3>
|   |   |-BinaryOperator 0x14f9466d8 <line:62:5, col:65> '<dependent type>' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x14f946698 <col:5, col:61> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x14f946680 <col:5, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-CXXDependentScopeMemberExpr 0x14f946560 <col:5, col:37> '<dependent type>' contains-errors lvalue .neighbor
|   |   | | |   `-ArraySubscriptExpr 0x14f946540 <col:5, col:35> '<dependent type>' contains-errors lvalue
|   |   | | |     |-ImplicitCastExpr 0x14f946510 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |     | `-CXXDependentScopeMemberExpr 0x14f9464a8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |   | | |     |   `-RecoveryExpr 0x14f946480 <col:5> '<dependent type>' contains-errors lvalue
|   |   | | |     |     `-DeclRefExpr 0x14f946460 <col:5> 'int *' lvalue ParmVar 0x14f928b28 'stl' 'int *'
|   |   | | |     `-ImplicitCastExpr 0x14f946528 <col:26> 'int' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x14f9464f0 <col:26> 'int' lvalue Var 0x14f928f20 'neighbor1' 'int'
|   |   | | `-BinaryOperator 0x14f946660 <col:46, col:60> 'int' '%'
|   |   | |   |-ParenExpr 0x14f946620 <col:46, col:56> 'int'
|   |   | |   | `-BinaryOperator 0x14f946600 <col:47, col:55> 'int' '+'
|   |   | |   |   |-ImplicitCastExpr 0x14f9465e8 <col:47> 'int' <LValueToRValue>
|   |   | |   |   | `-DeclRefExpr 0x14f9465a8 <col:47> 'int' lvalue Var 0x14f9290e8 'vnot1' 'int'
|   |   | |   |   `-IntegerLiteral 0x14f9465c8 <col:55> 'int' 1
|   |   | |   `-IntegerLiteral 0x14f946640 <col:60> 'int' 3
|   |   | `-DeclRefExpr 0x14f9466b8 <col:65> 'int' lvalue Var 0x14f928fb8 'neighbor2' 'int'
|   |   `-BinaryOperator 0x14f946970 <line:63:5, col:73> '<dependent type>' contains-errors '='
|   |     |-ArraySubscriptExpr 0x14f946930 <col:5, col:69> '<dependent type>' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x14f946918 <col:5, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | `-CXXDependentScopeMemberExpr 0x14f9467f8 <col:5, col:37> '<dependent type>' contains-errors lvalue .which_vertex_not
|   |     | |   `-ArraySubscriptExpr 0x14f9467d8 <col:5, col:35> '<dependent type>' contains-errors lvalue
|   |     | |     |-ImplicitCastExpr 0x14f9467a8 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |     | `-CXXDependentScopeMemberExpr 0x14f946740 <col:5, col:10> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |     | |     |   `-RecoveryExpr 0x14f946718 <col:5> '<dependent type>' contains-errors lvalue
|   |     | |     |     `-DeclRefExpr 0x14f9466f8 <col:5> 'int *' lvalue ParmVar 0x14f928b28 'stl' 'int *'
|   |     | |     `-ImplicitCastExpr 0x14f9467c0 <col:26> 'int' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x14f946788 <col:26> 'int' lvalue Var 0x14f928f20 'neighbor1' 'int'
|   |     | `-BinaryOperator 0x14f9468f8 <col:54, col:68> 'int' '%'
|   |     |   |-ParenExpr 0x14f9468b8 <col:54, col:64> 'int'
|   |     |   | `-BinaryOperator 0x14f946898 <col:55, col:63> 'int' '+'
|   |     |   |   |-ImplicitCastExpr 0x14f946880 <col:55> 'int' <LValueToRValue>
|   |     |   |   | `-DeclRefExpr 0x14f946840 <col:55> 'int' lvalue Var 0x14f9290e8 'vnot1' 'int'
|   |     |   |   `-IntegerLiteral 0x14f946860 <col:63> 'int' 1
|   |     |   `-IntegerLiteral 0x14f9468d8 <col:68> 'int' 3
|   |     `-DeclRefExpr 0x14f946950 <col:73> 'int' lvalue Var 0x14f929180 'vnot2' 'int'
|   |-IfStmt 0x14f946fb0 <line:65:3, line:68:3>
|   | |-BinaryOperator 0x14f946a40 <line:65:6, col:20> 'int' '!='
|   | | |-ImplicitCastExpr 0x14f946a28 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14f9469d0 <col:6> 'int' lvalue Var 0x14f928fb8 'neighbor2' 'int'
|   | | `-UnaryOperator 0x14f946a10 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14f9469f0 <col:20> 'int' 1
|   | `-CompoundStmt 0x14f946f90 <col:22, line:68:3>
|   |   |-BinaryOperator 0x14f946cd8 <line:66:5, col:65> '<dependent type>' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x14f946c98 <col:5, col:61> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x14f946c80 <col:5, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-CXXDependentScopeMemberExpr 0x14f946b60 <col:5, col:37> '<dependent type>' contains-errors lvalue .neighbor
|   |   | | |   `-ArraySubscriptExpr 0x14f946b40 <col:5, col:35> '<dependent type>' contains-errors lvalue
|   |   | | |     |-ImplicitCastExpr 0x14f946b10 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |     | `-CXXDependentScopeMemberExpr 0x14f946aa8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |   | | |     |   `-RecoveryExpr 0x14f946a80 <col:5> '<dependent type>' contains-errors lvalue
|   |   | | |     |     `-DeclRefExpr 0x14f946a60 <col:5> 'int *' lvalue ParmVar 0x14f928b28 'stl' 'int *'
|   |   | | |     `-ImplicitCastExpr 0x14f946b28 <col:26> 'int' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x14f946af0 <col:26> 'int' lvalue Var 0x14f928fb8 'neighbor2' 'int'
|   |   | | `-BinaryOperator 0x14f946c60 <col:46, col:60> 'int' '%'
|   |   | |   |-ParenExpr 0x14f946c20 <col:46, col:56> 'int'
|   |   | |   | `-BinaryOperator 0x14f946c00 <col:47, col:55> 'int' '+'
|   |   | |   |   |-ImplicitCastExpr 0x14f946be8 <col:47> 'int' <LValueToRValue>
|   |   | |   |   | `-DeclRefExpr 0x14f946ba8 <col:47> 'int' lvalue Var 0x14f929180 'vnot2' 'int'
|   |   | |   |   `-IntegerLiteral 0x14f946bc8 <col:55> 'int' 1
|   |   | |   `-IntegerLiteral 0x14f946c40 <col:60> 'int' 3
|   |   | `-DeclRefExpr 0x14f946cb8 <col:65> 'int' lvalue Var 0x14f928f20 'neighbor1' 'int'
|   |   `-BinaryOperator 0x14f946f70 <line:67:5, col:73> '<dependent type>' contains-errors '='
|   |     |-ArraySubscriptExpr 0x14f946f30 <col:5, col:69> '<dependent type>' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x14f946f18 <col:5, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | `-CXXDependentScopeMemberExpr 0x14f946df8 <col:5, col:37> '<dependent type>' contains-errors lvalue .which_vertex_not
|   |     | |   `-ArraySubscriptExpr 0x14f946dd8 <col:5, col:35> '<dependent type>' contains-errors lvalue
|   |     | |     |-ImplicitCastExpr 0x14f946da8 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |     | `-CXXDependentScopeMemberExpr 0x14f946d40 <col:5, col:10> '<dependent type>' contains-errors lvalue ->neighbors_start
|   |     | |     |   `-RecoveryExpr 0x14f946d18 <col:5> '<dependent type>' contains-errors lvalue
|   |     | |     |     `-DeclRefExpr 0x14f946cf8 <col:5> 'int *' lvalue ParmVar 0x14f928b28 'stl' 'int *'
|   |     | |     `-ImplicitCastExpr 0x14f946dc0 <col:26> 'int' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x14f946d88 <col:26> 'int' lvalue Var 0x14f928fb8 'neighbor2' 'int'
|   |     | `-BinaryOperator 0x14f946ef8 <col:54, col:68> 'int' '%'
|   |     |   |-ParenExpr 0x14f946eb8 <col:54, col:64> 'int'
|   |     |   | `-BinaryOperator 0x14f946e98 <col:55, col:63> 'int' '+'
|   |     |   |   |-ImplicitCastExpr 0x14f946e80 <col:55> 'int' <LValueToRValue>
|   |     |   |   | `-DeclRefExpr 0x14f946e40 <col:55> 'int' lvalue Var 0x14f929180 'vnot2' 'int'
|   |     |   |   `-IntegerLiteral 0x14f946e60 <col:63> 'int' 1
|   |     |   `-IntegerLiteral 0x14f946ed8 <col:68> 'int' 3
|   |     `-DeclRefExpr 0x14f946f50 <col:73> 'int' lvalue Var 0x14f9290e8 'vnot1' 'int'
|   |-CallExpr 0x14f947030 <line:70:3, col:30> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14f946fd0 <col:3> 'int ()' Function 0x14f9434c8 'stl_remove_facet' 'int ()'
|   | |-RecoveryExpr 0x14f946ff0 <col:20> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x14f947010 <col:25> 'int' lvalue ParmVar 0x14f928ba8 'facet' 'int'
|   `-IfStmt 0x14f947488 <line:72:3, line:75:3>
|     |-BinaryOperator 0x14f9470d0 <line:72:6, col:20> 'int' '!='
|     | |-ImplicitCastExpr 0x14f9470b8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x14f947060 <col:6> 'int' lvalue Var 0x14f929050 'neighbor3' 'int'
|     | `-UnaryOperator 0x14f9470a0 <col:19, col:20> 'int' prefix '-'
|     |   `-IntegerLiteral 0x14f947080 <col:20> 'int' 1
|     `-CompoundStmt 0x14f947468 <col:23, line:75:3>
|       |-CallExpr 0x14f947150 <line:73:5, col:48> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x14f9470f0 <col:5> 'int ()' Function 0x14f944fb8 'stl_update_connects_remove_1' 'int ()'
|       | |-RecoveryExpr 0x14f947110 <col:34> '<dependent type>' contains-errors lvalue
|       | `-DeclRefExpr 0x14f947130 <col:39> 'int' lvalue Var 0x14f929050 'neighbor3' 'int'
|       `-BinaryOperator 0x14f947448 <line:74:5, col:66> '<dependent type>' contains-errors '='
|         |-ArraySubscriptExpr 0x14f9473f0 <col:5, col:61> '<dependent type>' contains-errors lvalue
|         | |-ImplicitCastExpr 0x14f9473d8 <col:5, col:37> '<dependent type>' contains-errors <LValueToRValue>
|         | | `-CXXDependentScopeMemberExpr 0x14f9472b8 <col:5, col:37> '<dependent type>' contains-errors lvalue .neighbor
|         | |   `-ArraySubscriptExpr 0x14f947298 <col:5, col:35> '<dependent type>' contains-errors lvalue
|         | |     |-ImplicitCastExpr 0x14f947268 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|         | |     | `-CXXDependentScopeMemberExpr 0x14f947200 <col:5, col:10> '<dependent type>' contains-errors lvalue ->neighbors_start
|         | |     |   `-RecoveryExpr 0x14f9471a0 <col:5> '<dependent type>' contains-errors lvalue
|         | |     |     `-DeclRefExpr 0x14f947180 <col:5> 'int *' lvalue ParmVar 0x14f928b28 'stl' 'int *'
|         | |     `-ImplicitCastExpr 0x14f947280 <col:26> 'int' <LValueToRValue>
|         | |       `-DeclRefExpr 0x14f947248 <col:26> 'int' lvalue Var 0x14f929050 'neighbor3' 'int'
|         | `-BinaryOperator 0x14f9473b8 <col:46, col:60> 'int' '%'
|         |   |-ParenExpr 0x14f947378 <col:46, col:56> 'int'
|         |   | `-BinaryOperator 0x14f947358 <col:47, col:55> 'int' '+'
|         |   |   |-ImplicitCastExpr 0x14f947340 <col:47> 'int' <LValueToRValue>
|         |   |   | `-DeclRefExpr 0x14f947300 <col:47> 'int' lvalue Var 0x14f942218 'vnot3' 'int'
|         |   |   `-IntegerLiteral 0x14f947320 <col:55> 'int' 1
|         |   `-IntegerLiteral 0x14f947398 <col:60> 'int' 3
|         `-UnaryOperator 0x14f947430 <col:65, col:66> 'int' prefix '-'
|           `-IntegerLiteral 0x14f947410 <col:66> 'int' 1
|-FunctionDecl 0x14f9427d0 <line:14:10> col:10 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x14f9428d0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x14f942938 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x14f9429a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14f942878 <<invalid sloc>> Implicit 883
`-FunctionDecl 0x14f943130 <line:20:5> col:5 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x14f943230 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x14f9431d8 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x14f9432a0 <col:5> Implicit printf 1 2
