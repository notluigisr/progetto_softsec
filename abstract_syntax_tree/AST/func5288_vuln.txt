TranslationUnitDecl 0x12b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b055bd0 '__int128'
|-TypedefDecl 0x12b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b055bf0 'unsigned __int128'
|-TypedefDecl 0x12b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12b056580 '__NSConstantString_tag'
|-TypedefDecl 0x12b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b055d90 '__SVInt8_t'
|-TypedefDecl 0x12b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b055db0 '__SVInt16_t'
|-TypedefDecl 0x12b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b055dd0 '__SVInt32_t'
|-TypedefDecl 0x12b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b055df0 '__SVInt64_t'
|-TypedefDecl 0x12b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b055e10 '__SVUint8_t'
|-TypedefDecl 0x12b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b055e30 '__SVUint16_t'
|-TypedefDecl 0x12b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b055e50 '__SVUint32_t'
|-TypedefDecl 0x12b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b055e70 '__SVUint64_t'
|-TypedefDecl 0x12b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b055e90 '__SVFloat16_t'
|-TypedefDecl 0x12b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b056390 '__SVBool_t'
|-TypedefDecl 0x12b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b0563f0 '__SVCount_t'
|-TypedefDecl 0x12b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b80dbb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
|-TypedefDecl 0x12b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b80dbb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
`-FunctionDecl 0x12b80e078 <dataset_diviso_filec/func5288_vuln.c:1:1, line:93:1> line:1:1 invalid ensure_credentials_sync 'int (int *, int *, int *, int *, int **)'
  |-ParmVarDecl 0x12b80dd28 <col:26, col:41> col:41 invalid provider 'int *'
  |-ParmVarDecl 0x12b80dda8 <line:2:26, col:41> col:41 invalid object 'int *'
  |-ParmVarDecl 0x12b80de28 <line:3:26, col:41> col:41 used out_expires_in 'int *'
  |-ParmVarDecl 0x12b80dea8 <line:4:26, col:41> col:41 invalid cancellable 'int *'
  |-ParmVarDecl 0x12b80df60 <line:5:26, col:41> col:41 invalid error 'int **'
  `-CompoundStmt 0x12b829df0 <line:6:1, line:93:1>
    |-DeclStmt 0x12b80e210 <line:11:3, col:24>
    | `-VarDecl 0x12b80e1a8 <col:3, col:16> col:16 used username 'const char *'
    |-DeclStmt 0x12b80e2a8 <line:12:3, col:18>
    | `-VarDecl 0x12b80e240 <col:3, col:10> col:10 used password 'char *'
    |-DeclStmt 0x12b80e340 <line:13:3, col:20>
    | `-VarDecl 0x12b80e2d8 <col:3, col:10> col:10 used uri_caldav 'char *'
    |-IfStmt 0x12b827aa8 <line:23:3, line:28:10>
    | |-RecoveryExpr 0x12b827a20 <line:23:7, line:27:93> '_Bool' contains-errors
    | `-GotoStmt 0x12b827a90 <line:28:5, col:10> 'out' 0x12b827a40
    |-IfStmt 0x12b8284b0 <line:34:3, line:46:5>
    | |-RecoveryExpr 0x12b827c88 <line:34:7, col:22> '_Bool' contains-errors
    | `-CompoundStmt 0x12b828490 <line:35:5, line:46:5>
    |   |-IfStmt 0x12b828458 <line:36:7, line:44:9>
    |   | |-RecoveryExpr 0x12b827cc8 <line:36:11, col:20> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12b828440 <line:37:9, line:44:9>
    |   |   `-CallExpr 0x12b828290 <line:38:11, line:41:41> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x12b827dc8 <line:38:11> 'int ()' Function 0x12b827d10 'g_prefix_error' 'int ()'
    |   |     |-RecoveryExpr 0x12b827de8 <col:27> '<dependent type>' contains-errors lvalue
    |   |     |-CallExpr 0x12b827fb8 <line:39:27, col:34> 'int'
    |   |     | |-ImplicitCastExpr 0x12b827fa0 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   |     | | `-DeclRefExpr 0x12b827ee8 <col:27> 'int ()' Function 0x12b827e30 '_' 'int ()'
    |   |     | `-ImplicitCastExpr 0x12b827fe0 <col:29> 'char *' <ArrayToPointerDecay>
    |   |     |   `-StringLiteral 0x12b827f50 <col:29> 'char[4]' lvalue "STR"
    |   |     |-CallExpr 0x12b8281b0 <line:40:27, col:62> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x12b8280d8 <col:27> 'int ()' Function 0x12b828020 'g_quark_to_string' 'int ()'
    |   |     | `-CXXDependentScopeMemberExpr 0x12b828168 <col:46, col:56> '<dependent type>' contains-errors lvalue ->domain
    |   |     |   `-ParenExpr 0x12b828148 <col:46, col:53> '<dependent type>' contains-errors
    |   |     |     `-UnaryOperator 0x12b828130 <col:47, col:48> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     |       `-ImplicitCastExpr 0x12b828118 <col:48> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |         `-RecoveryExpr 0x12b8280f8 <col:48> '<dependent type>' contains-errors lvalue
    |   |     `-CXXDependentScopeMemberExpr 0x12b828248 <line:41:27, col:37> '<dependent type>' contains-errors lvalue ->code
    |   |       `-ParenExpr 0x12b828228 <col:27, col:34> '<dependent type>' contains-errors
    |   |         `-UnaryOperator 0x12b828210 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |           `-ImplicitCastExpr 0x12b8281f8 <col:29> '<dependent type>' contains-errors <LValueToRValue>
    |   |             `-RecoveryExpr 0x12b8281d8 <col:29> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12b828478 <line:45:7, col:12> 'out' 0x12b827a40
    |-IfStmt 0x12b829158 <line:52:3, line:62:5>
    | |-RecoveryExpr 0x12b828e88 <line:52:7, col:55> '_Bool' contains-errors
    | `-CompoundStmt 0x12b829138 <line:53:5, line:62:5>
    |   |-IfStmt 0x12b829100 <line:54:7, line:60:9>
    |   | |-RecoveryExpr 0x12b828ec8 <line:54:11, col:20> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12b8290f0 <line:55:9, line:60:9>
    |   `-GotoStmt 0x12b829120 <line:61:7, col:12> 'out' 0x12b827a40
    |-IfStmt 0x12b829988 <line:71:3, line:85:5>
    | |-RecoveryExpr 0x12b829450 <line:71:7, col:8> '_Bool' contains-errors
    | `-CompoundStmt 0x12b829968 <line:72:5, line:85:5>
    |   |-IfStmt 0x12b829930 <line:73:7, line:83:9>
    |   | |-RecoveryExpr 0x12b829490 <line:73:11, col:20> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12b829918 <line:74:9, line:83:9>
    |   |   `-CallExpr 0x12b829760 <line:75:11, line:80:41> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x12b8294b0 <line:75:11> 'int ()' Function 0x12b827d10 'g_prefix_error' 'int ()'
    |   |     |-RecoveryExpr 0x12b8294d0 <col:27> '<dependent type>' contains-errors lvalue
    |   |     |-CallExpr 0x12b829548 <line:77:27, col:34> 'int'
    |   |     | |-ImplicitCastExpr 0x12b829530 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   |     | | `-DeclRefExpr 0x12b8294f0 <col:27> 'int ()' Function 0x12b827e30 '_' 'int ()'
    |   |     | `-ImplicitCastExpr 0x12b829570 <col:29> 'char *' <ArrayToPointerDecay>
    |   |     |   `-StringLiteral 0x12b829510 <col:29> 'char[4]' lvalue "STR"
    |   |     |-DeclRefExpr 0x12b829588 <line:78:27> 'const char *' lvalue Var 0x12b80e1a8 'username' 'const char *'
    |   |     |-CallExpr 0x12b829680 <line:79:27, col:62> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x12b8295a8 <col:27> 'int ()' Function 0x12b828020 'g_quark_to_string' 'int ()'
    |   |     | `-CXXDependentScopeMemberExpr 0x12b829638 <col:46, col:56> '<dependent type>' contains-errors lvalue ->domain
    |   |     |   `-ParenExpr 0x12b829618 <col:46, col:53> '<dependent type>' contains-errors
    |   |     |     `-UnaryOperator 0x12b829600 <col:47, col:48> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     |       `-ImplicitCastExpr 0x12b8295e8 <col:48> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |         `-RecoveryExpr 0x12b8295c8 <col:48> '<dependent type>' contains-errors lvalue
    |   |     `-CXXDependentScopeMemberExpr 0x12b829718 <line:80:27, col:37> '<dependent type>' contains-errors lvalue ->code
    |   |       `-ParenExpr 0x12b8296f8 <col:27, col:34> '<dependent type>' contains-errors
    |   |         `-UnaryOperator 0x12b8296e0 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |           `-ImplicitCastExpr 0x12b8296c8 <col:29> '<dependent type>' contains-errors <LValueToRValue>
    |   |             `-RecoveryExpr 0x12b8296a8 <col:29> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12b829950 <line:84:7, col:12> 'out' 0x12b827a40
    |-LabelStmt 0x12b829ab0 <line:87:2, col:5> 'out'
    | `-NullStmt 0x12b829aa8 <col:5>
    |-CallExpr 0x12b829c18 <line:89:3, col:19> 'int'
    | |-ImplicitCastExpr 0x12b829c00 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12b829bb0 <col:3> 'int ()' Function 0x12b829af8 'g_free' 'int ()'
    | `-ImplicitCastExpr 0x12b829c40 <col:11> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x12b829bd0 <col:11> 'char *' lvalue Var 0x12b80e240 'password' 'char *'
    `-CallExpr 0x12b829cb0 <line:90:3, col:21> 'int'
      |-ImplicitCastExpr 0x12b829c98 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12b829c58 <col:3> 'int ()' Function 0x12b829af8 'g_free' 'int ()'
      `-ImplicitCastExpr 0x12b829cd8 <col:11> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x12b829c78 <col:11> 'char *' lvalue Var 0x12b80e2d8 'uri_caldav' 'char *'
