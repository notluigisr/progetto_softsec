TranslationUnitDecl 0x14903de08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14903ecb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14903e3d0 '__int128'
|-TypedefDecl 0x14903ed28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14903e3f0 'unsigned __int128'
|-TypedefDecl 0x14a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14903ed80 '__NSConstantString_tag'
|-TypedefDecl 0x14a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14903e590 '__SVInt8_t'
|-TypedefDecl 0x14a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14903e5b0 '__SVInt16_t'
|-TypedefDecl 0x14a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14903e5d0 '__SVInt32_t'
|-TypedefDecl 0x14a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14903e5f0 '__SVInt64_t'
|-TypedefDecl 0x14a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14903e610 '__SVUint8_t'
|-TypedefDecl 0x14a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14903e630 '__SVUint16_t'
|-TypedefDecl 0x14a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14903e650 '__SVUint32_t'
|-TypedefDecl 0x14a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14903e670 '__SVUint64_t'
|-TypedefDecl 0x14a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14903e690 '__SVFloat16_t'
|-TypedefDecl 0x14a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14903e6b0 '__SVFloat32_t'
|-TypedefDecl 0x14a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14903e6d0 '__SVFloat64_t'
|-TypedefDecl 0x14a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14903e6f0 '__SVBfloat16_t'
|-TypedefDecl 0x14a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14903e710 '__clang_svint8x2_t'
|-TypedefDecl 0x14a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14903e730 '__clang_svint16x2_t'
|-TypedefDecl 0x14a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14903e750 '__clang_svint32x2_t'
|-TypedefDecl 0x14a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14903e770 '__clang_svint64x2_t'
|-TypedefDecl 0x14a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14903e790 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14903e7b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14903e7d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14903e7f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14903e810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14903e830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14903e850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14903e870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14903e890 '__clang_svint8x3_t'
|-TypedefDecl 0x14a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14903e8b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14903e8d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14903e8f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14903e910 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14903e930 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14903e950 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14903e970 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14903e990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14903e9b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14903e9d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14903e9f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14903ea10 '__clang_svint8x4_t'
|-TypedefDecl 0x14a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14903ea30 '__clang_svint16x4_t'
|-TypedefDecl 0x14a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14903ea50 '__clang_svint32x4_t'
|-TypedefDecl 0x14a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14903ea70 '__clang_svint64x4_t'
|-TypedefDecl 0x14a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14903ea90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14903eab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14903ead0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14903eaf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14903eb10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14903eb30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14903eb50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14903eb70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14903eb90 '__SVBool_t'
|-TypedefDecl 0x14a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14903ebb0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14903ebd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14903ebf0 '__SVCount_t'
|-TypedefDecl 0x14a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x14903deb0 'char'
|-TypedefDecl 0x14a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x14903deb0 'char'
`-FunctionDecl 0x14a82a948 <dataset_diviso_filec/func20319_vuln.c:1:1, line:58:1> line:1:12 hiddev_open 'int (struct inode *, struct file *)' static
  |-ParmVarDecl 0x14a80e248 <col:24, col:38> col:38 used inode 'struct inode *'
  |-ParmVarDecl 0x14a82a828 <col:45, col:58> col:58 used file 'struct file *'
  `-CompoundStmt 0x14a830c68 <line:2:1, line:58:1>
    |-DeclStmt 0x14a82ac38 <line:3:2, col:26>
    | |-RecordDecl 0x14a82aa48 <col:2, col:9> col:9 struct hiddev_list
    | `-VarDecl 0x14a82abb8 <col:2, col:22> col:22 used list 'struct hiddev_list *'
    |-DeclStmt 0x14a82ae38 <line:4:2, col:28>
    | |-RecordDecl 0x14a82ac50 <col:2, col:9> col:9 struct usb_interface
    | `-VarDecl 0x14a82adb8 <col:2, col:24> col:24 used intf 'struct usb_interface *'
    |-DeclStmt 0x14a82b038 <line:5:2, col:24>
    | |-RecordDecl 0x14a82ae50 <col:2, col:9> col:9 struct hid_device
    | `-VarDecl 0x14a82afb8 <col:2, col:21> col:21 used hid 'struct hid_device *'
    |-DeclStmt 0x14a82b238 <line:6:2, col:23>
    | |-RecordDecl 0x14a82b050 <col:2, col:9> col:9 struct hiddev
    | `-VarDecl 0x14a82b1b8 <col:2, col:17> col:17 used hiddev 'struct hiddev *'
    |-DeclStmt 0x14a82b2d0 <line:7:2, col:9>
    | `-VarDecl 0x14a82b268 <col:2, col:6> col:6 used res 'int'
    |-BinaryOperator 0x14a82b650 <line:9:2, col:44> 'struct usb_interface *' '='
    | |-DeclRefExpr 0x14a82b2e8 <col:2> 'struct usb_interface *' lvalue Var 0x14a82adb8 'intf' 'struct usb_interface *'
    | `-ImplicitCastExpr 0x14a82b638 <col:9, col:44> 'struct usb_interface *' <IntegralToPointer>
    |   `-CallExpr 0x14a82b610 <col:9, col:44> 'int'
    |     |-ImplicitCastExpr 0x14a82b5f8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14a82b430 <col:9> 'int ()' Function 0x14a82b378 'usbhid_find_interface' 'int ()'
    |     `-CallExpr 0x14a82b5b8 <col:31, col:43> 'int'
    |       |-ImplicitCastExpr 0x14a82b5a0 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14a82b530 <col:31> 'int ()' Function 0x14a82b478 'iminor' 'int ()'
    |       `-ImplicitCastExpr 0x14a82b5e0 <col:38> 'struct inode *' <LValueToRValue>
    |         `-DeclRefExpr 0x14a82b550 <col:38> 'struct inode *' lvalue ParmVar 0x14a80e248 'inode' 'struct inode *'
    |-IfStmt 0x14a82b768 <line:10:2, line:11:11>
    | |-UnaryOperator 0x14a82b6a8 <line:10:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14a82b690 <col:7> 'struct usb_interface *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14a82b670 <col:7> 'struct usb_interface *' lvalue Var 0x14a82adb8 'intf' 'struct usb_interface *'
    | `-ReturnStmt 0x14a82b758 <line:11:3, col:11>
    |   `-UnaryOperator 0x14a82b740 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14a82b728 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14a82b708 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14a82d168 <line:12:2, col:29> 'struct hid_device *' '='
    | |-DeclRefExpr 0x14a82b788 <col:2> 'struct hid_device *' lvalue Var 0x14a82afb8 'hid' 'struct hid_device *'
    | `-ImplicitCastExpr 0x14a82d150 <col:8, col:29> 'struct hid_device *' <IntegralToPointer>
    |   `-CallExpr 0x14a82d110 <col:8, col:29> 'int'
    |     |-ImplicitCastExpr 0x14a82d0f8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14a82d0b8 <col:8> 'int ()' Function 0x14a82d000 'usb_get_intfdata' 'int ()'
    |     `-ImplicitCastExpr 0x14a82d138 <col:25> 'struct usb_interface *' <LValueToRValue>
    |       `-DeclRefExpr 0x14a82d0d8 <col:25> 'struct usb_interface *' lvalue Var 0x14a82adb8 'intf' 'struct usb_interface *'
    |-BinaryOperator 0x14a82d208 <line:13:2, col:16> 'struct hiddev *' contains-errors '='
    | |-DeclRefExpr 0x14a82d188 <col:2> 'struct hiddev *' lvalue Var 0x14a82b1b8 'hiddev' 'struct hiddev *'
    | `-RecoveryExpr 0x14a82d1e0 <col:11, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14a82d1a8 <col:11> 'struct hid_device *' lvalue Var 0x14a82afb8 'hid' 'struct hid_device *'
    |-IfStmt 0x14a82d468 <line:15:2, line:16:11>
    | |-RecoveryExpr 0x14a82d3a0 <line:15:6, col:50> '_Bool' contains-errors
    | `-ReturnStmt 0x14a82d458 <line:16:3, col:11>
    |   `-UnaryOperator 0x14a82d440 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14a82d428 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14a82d408 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14a82d600 <line:17:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a82d568 <col:2> 'int ()' Function 0x14a82d4b0 'mutex_init' 'int ()'
    | `-UnaryOperator 0x14a82d5e8 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14a82d5c0 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14a82d588 <col:14> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    |-BinaryOperator 0x14a82d6a8 <line:18:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14a82d660 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14a82d628 <col:2> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    | `-DeclRefExpr 0x14a82d688 <col:17> 'struct hiddev *' lvalue Var 0x14a82b1b8 'hiddev' 'struct hiddev *'
    |-BinaryOperator 0x14a82d748 <line:19:2, col:23> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14a82d700 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14a82d6c8 <col:2> 'struct file *' lvalue ParmVar 0x14a82a828 'file' 'struct file *'
    | `-DeclRefExpr 0x14a82d728 <col:23> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    |-IfStmt 0x14a82dd38 <line:22:2, line:31:2> has_else
    | |-CXXDependentScopeMemberExpr 0x14a82d7c8 <line:22:6, col:20> '<dependent type>' contains-errors lvalue ->exist
    | | `-RecoveryExpr 0x14a82d7a0 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14a82d768 <col:6> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    | |-CompoundStmt 0x14a82dbf0 <col:27, line:28:2>
    | | `-IfStmt 0x14a82dbd0 <line:23:3, line:27:3>
    | |   |-UnaryOperator 0x14a82d8d0 <line:23:7, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   | `-UnaryOperator 0x14a82d8b8 <col:8, col:26> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |   |   `-CXXDependentScopeMemberExpr 0x14a82d870 <col:8, col:22> '<dependent type>' contains-errors lvalue ->open
    | |   |     `-RecoveryExpr 0x14a82d848 <col:8, col:14> '<dependent type>' contains-errors lvalue
    | |   |       `-DeclRefExpr 0x14a82d810 <col:8> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    | |   `-CompoundStmt 0x14a82dbb0 <col:30, line:27:3>
    | |     |-BinaryOperator 0x14a82da90 <line:24:4, col:33> 'int' contains-errors '='
    | |     | |-DeclRefExpr 0x14a82d8e8 <col:4> 'int' lvalue Var 0x14a82b268 'res' 'int'
    | |     | `-CallExpr 0x14a82da68 <col:10, col:33> '<dependent type>' contains-errors
    | |     |   |-DeclRefExpr 0x14a82d9e8 <col:10> 'int ()' Function 0x14a82d930 'hid_hw_open' 'int ()'
    | |     |   `-RecoveryExpr 0x14a82da40 <col:22, col:30> '<dependent type>' contains-errors lvalue
    | |     |     `-DeclRefExpr 0x14a82da08 <col:22> 'struct hiddev *' lvalue Var 0x14a82b1b8 'hiddev' 'struct hiddev *'
    | |     `-IfStmt 0x14a82db90 <line:25:4, line:26:10>
    | |       |-BinaryOperator 0x14a82db08 <line:25:8, col:14> 'int' '<'
    | |       | |-ImplicitCastExpr 0x14a82daf0 <col:8> 'int' <LValueToRValue>
    | |       | | `-DeclRefExpr 0x14a82dab0 <col:8> 'int' lvalue Var 0x14a82b268 'res' 'int'
    | |       | `-IntegerLiteral 0x14a82dad0 <col:14> 'int' 0
    | |       `-GotoStmt 0x14a82db78 <line:26:5, col:10> 'bail' 0x14a82db28
    | `-CompoundStmt 0x14a82dd18 <line:28:9, line:31:2>
    |   |-BinaryOperator 0x14a82dce0 <line:29:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14a82dc08 <col:3> 'int' lvalue Var 0x14a82b268 'res' 'int'
    |   | `-UnaryOperator 0x14a82dcc8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x14a82dcb0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x14a82dc90 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x14a82dd00 <line:30:3, col:8> 'bail' 0x14a82db28
    |-CallExpr 0x14a82df28 <line:33:2, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a82de48 <col:2> 'int ()' Function 0x14a82dd90 'spin_lock_irq' 'int ()'
    | `-UnaryOperator 0x14a82df10 <col:16, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14a82dec8 <col:17, col:31> '<dependent type>' contains-errors lvalue ->list_lock
    |     `-RecoveryExpr 0x14a82dea0 <col:17, col:23> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14a82de68 <col:17> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    |-CallExpr 0x14a82f5c8 <line:34:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a82f4b8 <col:2> 'int ()' Function 0x14a82f400 'list_add_tail' 'int ()'
    | |-UnaryOperator 0x14a82f538 <col:16, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14a82f510 <col:17, col:23> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14a82f4d8 <col:17> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    | `-UnaryOperator 0x14a82f5b0 <col:29, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14a82f588 <col:30, col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14a82f550 <col:30> 'struct hiddev *' lvalue Var 0x14a82b1b8 'hiddev' 'struct hiddev *'
    |-CallExpr 0x14a82f7b8 <line:35:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a82f6d8 <col:2> 'int ()' Function 0x14a82f620 'spin_unlock_irq' 'int ()'
    | `-UnaryOperator 0x14a82f7a0 <col:18, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14a82f758 <col:19, col:33> '<dependent type>' contains-errors lvalue ->list_lock
    |     `-RecoveryExpr 0x14a82f730 <col:19, col:25> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14a82f6f8 <col:19> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    |-CallExpr 0x14a82f958 <line:37:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a82f8c0 <col:2> 'int ()' Function 0x14a82f808 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x14a82f940 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14a82f918 <col:14, col:22> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14a82f8e0 <col:14> 'struct hiddev *' lvalue Var 0x14a82b1b8 'hiddev' 'struct hiddev *'
    |-IfStmt 0x14a8300d0 <line:38:2, line:47:3>
    | |-UnaryOperator 0x14a82fa40 <line:38:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-UnaryOperator 0x14a82fa28 <col:7, col:25> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |   `-CXXDependentScopeMemberExpr 0x14a82f9e0 <col:7, col:21> '<dependent type>' contains-errors lvalue ->open
    | |     `-RecoveryExpr 0x14a82f9b8 <col:7, col:13> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x14a82f980 <col:7> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    | `-IfStmt 0x14a8300b0 <line:39:3, line:47:3>
    |   |-CXXDependentScopeMemberExpr 0x14a82fab8 <line:39:7, col:21> '<dependent type>' contains-errors lvalue ->exist
    |   | `-RecoveryExpr 0x14a82fa90 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14a82fa58 <col:7> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    |   `-CompoundStmt 0x14a830080 <col:28, line:47:3>
    |     |-DeclStmt 0x14a82fc50 <line:40:4, col:40>
    |     | `-VarDecl 0x14a82fb88 <col:4, col:37> col:23 used hid 'struct hid_device *' cinit
    |     |   `-RecoveryExpr 0x14a82fc28 <col:29, col:37> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x14a82fbf0 <col:29> 'struct hiddev *' lvalue Var 0x14a82b1b8 'hiddev' 'struct hiddev *'
    |     |-IfStmt 0x14a82fe88 <line:42:4, line:43:10>
    |     | |-BinaryOperator 0x14a82fe00 <line:42:8, col:14> 'int' '<'
    |     | | |-ImplicitCastExpr 0x14a82fde8 <col:8> 'int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x14a82fda8 <col:8> 'int' lvalue Var 0x14a82b268 'res' 'int'
    |     | | `-IntegerLiteral 0x14a82fdc8 <col:14> 'int' 0
    |     | `-GotoStmt 0x14a82fe70 <line:43:5, col:10> 'bail_unlock' 0x14a82fe20
    |     |-BinaryOperator 0x14a82ff60 <line:44:4, col:25> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x14a82fea8 <col:4> 'int' lvalue Var 0x14a82b268 'res' 'int'
    |     | `-CallExpr 0x14a82ff20 <col:10, col:25> 'int' contains-errors
    |     |   |-ImplicitCastExpr 0x14a82ff08 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x14a82fec8 <col:10> 'int ()' Function 0x14a82d930 'hid_hw_open' 'int ()'
    |     |   `-ImplicitCastExpr 0x14a82ff48 <col:22> 'struct hid_device *' contains-errors <LValueToRValue>
    |     |     `-DeclRefExpr 0x14a82fee8 <col:22> 'struct hid_device *' contains-errors lvalue Var 0x14a82fb88 'hid' 'struct hid_device *'
    |     `-IfStmt 0x14a830060 <line:45:4, line:46:10>
    |       |-BinaryOperator 0x14a82ffd8 <line:45:8, col:14> 'int' '<'
    |       | |-ImplicitCastExpr 0x14a82ffc0 <col:8> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x14a82ff80 <col:8> 'int' lvalue Var 0x14a82b268 'res' 'int'
    |       | `-IntegerLiteral 0x14a82ffa0 <col:14> 'int' 0
    |       `-GotoStmt 0x14a830048 <line:46:5, col:10> 'bail_normal_power' 0x14a82fff8
    |-CallExpr 0x14a830268 <line:48:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a8301d0 <col:2> 'int ()' Function 0x14a830118 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x14a830250 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14a830228 <col:16, col:24> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14a8301f0 <col:16> 'struct hiddev *' lvalue Var 0x14a82b1b8 'hiddev' 'struct hiddev *'
    |-ReturnStmt 0x14a8302b0 <line:49:2, col:9>
    | `-IntegerLiteral 0x14a830290 <col:9> 'int' 0
    |-LabelStmt 0x14a830308 <line:50:1, col:18> 'bail_normal_power'
    | `-NullStmt 0x14a830300 <col:18>
    |-LabelStmt 0x14a830a00 <line:52:1, line:53:37> 'bail_unlock'
    | `-CallExpr 0x14a8303c0 <col:2, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14a830328 <col:2> 'int ()' Function 0x14a830118 'mutex_unlock' 'int ()'
    |   `-UnaryOperator 0x14a8303a8 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14a830380 <col:16, col:24> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14a830348 <col:16> 'struct hiddev *' lvalue Var 0x14a82b1b8 'hiddev' 'struct hiddev *'
    |-LabelStmt 0x14a830a88 <line:54:1, col:5> 'bail'
    | `-NullStmt 0x14a830a80 <col:5>
    |-CallExpr 0x14a830be0 <line:56:2, col:12> 'int'
    | |-ImplicitCastExpr 0x14a830bc8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14a830b88 <col:2> 'int ()' Function 0x14a830ad0 'vfree' 'int ()'
    | `-ImplicitCastExpr 0x14a830c08 <col:8> 'struct hiddev_list *' <LValueToRValue>
    |   `-DeclRefExpr 0x14a830ba8 <col:8> 'struct hiddev_list *' lvalue Var 0x14a82abb8 'list' 'struct hiddev_list *'
    `-ReturnStmt 0x14a830c58 <line:57:2, col:9>
      `-ImplicitCastExpr 0x14a830c40 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14a830c20 <col:9> 'int' lvalue Var 0x14a82b268 'res' 'int'
