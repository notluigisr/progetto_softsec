TranslationUnitDecl 0x125855008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x125855eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1258555d0 '__int128'
|-TypedefDecl 0x125855f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1258555f0 'unsigned __int128'
|-TypedefDecl 0x12603a430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12603a200 'struct __NSConstantString_tag'
|   `-Record 0x125855f80 '__NSConstantString_tag'
|-TypedefDecl 0x12603a498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125855790 '__SVInt8_t'
|-TypedefDecl 0x12603a500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1258557b0 '__SVInt16_t'
|-TypedefDecl 0x12603a568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1258557d0 '__SVInt32_t'
|-TypedefDecl 0x12603a5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1258557f0 '__SVInt64_t'
|-TypedefDecl 0x12603a638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125855810 '__SVUint8_t'
|-TypedefDecl 0x12603a6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125855830 '__SVUint16_t'
|-TypedefDecl 0x12603a708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125855850 '__SVUint32_t'
|-TypedefDecl 0x12603a770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125855870 '__SVUint64_t'
|-TypedefDecl 0x12603a7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125855890 '__SVFloat16_t'
|-TypedefDecl 0x12603a840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1258558b0 '__SVFloat32_t'
|-TypedefDecl 0x12603a8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1258558d0 '__SVFloat64_t'
|-TypedefDecl 0x12603a910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1258558f0 '__SVBfloat16_t'
|-TypedefDecl 0x12603a978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125855910 '__clang_svint8x2_t'
|-TypedefDecl 0x12603a9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125855930 '__clang_svint16x2_t'
|-TypedefDecl 0x12603aa48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125855950 '__clang_svint32x2_t'
|-TypedefDecl 0x12603aab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125855970 '__clang_svint64x2_t'
|-TypedefDecl 0x12603ab18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125855990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12603ab80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1258559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12603abe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1258559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12603ac50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1258559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12603acb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125855a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12603ad20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125855a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12603ad88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125855a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12603adf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125855a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12603ae58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125855a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12603aec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x125855ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12603af28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x125855ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12603af90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x125855af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12603aff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125855b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12603b060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125855b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12603b0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125855b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12603b130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125855b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12603b198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125855b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12603ba00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x125855bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12603ba68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x125855bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12603bad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x125855bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12603bb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125855c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12603bba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125855c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12603bc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125855c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12603bc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125855c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12603bcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125855c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12603bd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x125855cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12603bda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x125855cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12603be10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x125855cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12603be78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125855d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12603bee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125855d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12603bf48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125855d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12603bfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125855d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12603c018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125855d90 '__SVBool_t'
|-TypedefDecl 0x12603c080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x125855db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12603c0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x125855dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12603c150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x125855df0 '__SVCount_t'
|-TypedefDecl 0x12603c1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12603c1b0 'char *'
|   `-BuiltinType 0x1258550b0 'char'
|-TypedefDecl 0x12603c268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12603c1b0 'char *'
|   `-BuiltinType 0x1258550b0 'char'
`-FunctionDecl 0x12603c458 <dataset_diviso_filec/func2545_vuln.c:1:1, line:24:1> line:1:1 invalid xmlDictComputeFastKey 'int (const int *, int)'
  |-ParmVarDecl 0x12603c2f0 <col:23, col:38> col:38 invalid name 'const int *'
  |-ParmVarDecl 0x12603c370 <col:44, col:48> col:48 used namelen 'int'
  `-CompoundStmt 0x1258f5010 <col:57, line:24:1>
    |-DeclStmt 0x12603c5c8 <line:2:5, col:29>
    | `-VarDecl 0x12603c528 <col:5, col:27> col:19 used value 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x12603c5b0 <col:27> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x12603c590 <col:27> 'long' 0
    |-IfStmt 0x12603c6c8 <line:4:5, col:31>
    | |-BinaryOperator 0x12603c658 <col:9, col:17> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12603c5e0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12603c638 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12603c6b8 <col:23, col:31>
    |   `-ParenExpr 0x12603c698 <col:29, col:31> 'int'
    |     `-IntegerLiteral 0x12603c678 <col:30> 'int' 0
    |-BinaryOperator 0x12603c758 <line:5:5, col:14> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x12603c6e8 <col:5> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    | `-UnaryOperator 0x12603c740 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x12603c728 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x12603c708 <col:14> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x12603c7d0 <line:6:5, col:15> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x12603c778 <col:5> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    | `-IntegerLiteral 0x12603c798 <col:15> 'int' 5
    |-IfStmt 0x1258f4420 <line:7:5, line:10:5>
    | |-BinaryOperator 0x12603c858 <line:7:9, col:19> 'int' '>'
    | | |-ImplicitCastExpr 0x12603c840 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12603c800 <col:9> 'int' lvalue ParmVar 0x12603c370 'namelen' 'int'
    | | `-IntegerLiteral 0x12603c820 <col:19> 'int' 10
    | `-CompoundStmt 0x1258f4400 <col:23, line:10:5>
    |   |-CompoundAssignOperator 0x12603c968 <line:8:9, col:34> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x12603c878 <col:9> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   | `-ArraySubscriptExpr 0x12603c948 <col:18, col:34> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12603c930 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x12603c898 <col:18> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x12603c910 <col:23, col:33> 'int' '-'
    |   |     |-ImplicitCastExpr 0x12603c8f8 <col:23> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x12603c8b8 <col:23> 'int' lvalue ParmVar 0x12603c370 'namelen' 'int'
    |   |     `-IntegerLiteral 0x12603c8d8 <col:33> 'int' 1
    |   `-BinaryOperator 0x12603c9d8 <line:9:9, col:19> 'int' '='
    |     |-DeclRefExpr 0x12603c998 <col:9> 'int' lvalue ParmVar 0x12603c370 'namelen' 'int'
    |     `-IntegerLiteral 0x12603c9b8 <col:19> 'int' 10
    |-SwitchStmt 0x1258f4478 <line:11:5, line:22:5>
    | |-ImplicitCastExpr 0x1258f4460 <line:11:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1258f4440 <col:13> 'int' lvalue ParmVar 0x12603c370 'namelen' 'int'
    | `-CompoundStmt 0x1258f4f30 <col:22, line:22:5>
    |   |-CaseStmt 0x1258f44d8 <line:12:9, col:33>
    |   | |-ConstantExpr 0x1258f44c0 <col:14> 'int'
    |   | | `-IntegerLiteral 0x1258f44a0 <col:14> 'int' 10
    |   | `-CompoundAssignOperator 0x1258f4598 <col:18, col:33> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x1258f4500 <col:18> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   |   `-ArraySubscriptExpr 0x1258f4578 <col:27, col:33> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1258f4560 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1258f4520 <col:27> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1258f4540 <col:32> 'int' 9
    |   |-CaseStmt 0x1258f4600 <line:13:9, col:32>
    |   | |-ConstantExpr 0x1258f45e8 <col:14> 'int'
    |   | | `-IntegerLiteral 0x1258f45c8 <col:14> 'int' 9
    |   | `-CompoundAssignOperator 0x1258f46c0 <col:17, col:32> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x1258f4628 <col:17> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   |   `-ArraySubscriptExpr 0x1258f46a0 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1258f4688 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1258f4648 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1258f4668 <col:31> 'int' 8
    |   |-CaseStmt 0x1258f4728 <line:14:9, col:32>
    |   | |-ConstantExpr 0x1258f4710 <col:14> 'int'
    |   | | `-IntegerLiteral 0x1258f46f0 <col:14> 'int' 8
    |   | `-CompoundAssignOperator 0x1258f47e8 <col:17, col:32> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x1258f4750 <col:17> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   |   `-ArraySubscriptExpr 0x1258f47c8 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1258f47b0 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1258f4770 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1258f4790 <col:31> 'int' 7
    |   |-CaseStmt 0x1258f4850 <line:15:9, col:32>
    |   | |-ConstantExpr 0x1258f4838 <col:14> 'int'
    |   | | `-IntegerLiteral 0x1258f4818 <col:14> 'int' 7
    |   | `-CompoundAssignOperator 0x1258f4910 <col:17, col:32> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x1258f4878 <col:17> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   |   `-ArraySubscriptExpr 0x1258f48f0 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1258f48d8 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1258f4898 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1258f48b8 <col:31> 'int' 6
    |   |-CaseStmt 0x1258f4978 <line:16:9, col:32>
    |   | |-ConstantExpr 0x1258f4960 <col:14> 'int'
    |   | | `-IntegerLiteral 0x1258f4940 <col:14> 'int' 6
    |   | `-CompoundAssignOperator 0x1258f4a38 <col:17, col:32> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x1258f49a0 <col:17> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   |   `-ArraySubscriptExpr 0x1258f4a18 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1258f4a00 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1258f49c0 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1258f49e0 <col:31> 'int' 5
    |   |-CaseStmt 0x1258f4aa0 <line:17:9, col:32>
    |   | |-ConstantExpr 0x1258f4a88 <col:14> 'int'
    |   | | `-IntegerLiteral 0x1258f4a68 <col:14> 'int' 5
    |   | `-CompoundAssignOperator 0x1258f4b60 <col:17, col:32> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x1258f4ac8 <col:17> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   |   `-ArraySubscriptExpr 0x1258f4b40 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1258f4b28 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1258f4ae8 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1258f4b08 <col:31> 'int' 4
    |   |-CaseStmt 0x1258f4bc8 <line:18:9, col:32>
    |   | |-ConstantExpr 0x1258f4bb0 <col:14> 'int'
    |   | | `-IntegerLiteral 0x1258f4b90 <col:14> 'int' 4
    |   | `-CompoundAssignOperator 0x1258f4c88 <col:17, col:32> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x1258f4bf0 <col:17> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   |   `-ArraySubscriptExpr 0x1258f4c68 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1258f4c50 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1258f4c10 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1258f4c30 <col:31> 'int' 3
    |   |-CaseStmt 0x1258f4cf0 <line:19:9, col:32>
    |   | |-ConstantExpr 0x1258f4cd8 <col:14> 'int'
    |   | | `-IntegerLiteral 0x1258f4cb8 <col:14> 'int' 3
    |   | `-CompoundAssignOperator 0x1258f4db0 <col:17, col:32> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x1258f4d18 <col:17> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   |   `-ArraySubscriptExpr 0x1258f4d90 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1258f4d78 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1258f4d38 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1258f4d58 <col:31> 'int' 2
    |   |-CaseStmt 0x1258f4e18 <line:20:9, col:32>
    |   | |-ConstantExpr 0x1258f4e00 <col:14> 'int'
    |   | | `-IntegerLiteral 0x1258f4de0 <col:14> 'int' 2
    |   | `-CompoundAssignOperator 0x1258f4ed8 <col:17, col:32> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x1258f4e40 <col:17> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
    |   |   `-ArraySubscriptExpr 0x1258f4eb8 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1258f4ea0 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1258f4e60 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1258f4e80 <col:31> 'int' 1
    |   `-DefaultStmt 0x1258f4f10 <line:21:9, col:18>
    |     `-BreakStmt 0x1258f4f08 <col:18>
    `-ReturnStmt 0x1258f5000 <line:23:5, col:17>
      `-ImplicitCastExpr 0x1258f4fe8 <col:11, col:17> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x1258f4fd0 <col:11, col:17> 'unsigned long' <LValueToRValue>
          `-ParenExpr 0x1258f4fb0 <col:11, col:17> 'unsigned long' lvalue
            `-DeclRefExpr 0x1258f4f90 <col:12> 'unsigned long' lvalue Var 0x12603c528 'value' 'unsigned long'
