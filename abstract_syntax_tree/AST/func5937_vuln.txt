TranslationUnitDecl 0x154855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1548564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x154855bd0 '__int128'
|-TypedefDecl 0x154856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x154855bf0 'unsigned __int128'
|-TypedefDecl 0x154926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x154926000 'struct __NSConstantString_tag'
|   `-Record 0x154856580 '__NSConstantString_tag'
|-TypedefDecl 0x154926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x154855d90 '__SVInt8_t'
|-TypedefDecl 0x154926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x154855db0 '__SVInt16_t'
|-TypedefDecl 0x154926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x154855dd0 '__SVInt32_t'
|-TypedefDecl 0x1549263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x154855df0 '__SVInt64_t'
|-TypedefDecl 0x154926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x154855e10 '__SVUint8_t'
|-TypedefDecl 0x1549264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x154855e30 '__SVUint16_t'
|-TypedefDecl 0x154926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x154855e50 '__SVUint32_t'
|-TypedefDecl 0x154926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x154855e70 '__SVUint64_t'
|-TypedefDecl 0x1549265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x154855e90 '__SVFloat16_t'
|-TypedefDecl 0x154926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x154855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1549266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x154855ed0 '__SVFloat64_t'
|-TypedefDecl 0x154926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x154855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x154926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x154855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1549267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x154855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x154926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x154855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1549268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x154855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x154926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x154855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x154926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x154855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1549269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x154855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x154926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x154855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x154926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x154856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x154926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x154856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x154926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x154856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x154926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x154856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x154926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x154856090 '__clang_svint8x3_t'
|-TypedefDecl 0x154926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1548560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x154926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1548560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x154926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1548560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x154926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x154856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x154926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x154856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x154926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x154856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x154926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x154856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x154926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x154856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x154927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1548561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x154927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1548561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1549278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1548561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x154927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x154856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1549279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x154856230 '__clang_svint16x4_t'
|-TypedefDecl 0x154927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x154856250 '__clang_svint32x4_t'
|-TypedefDecl 0x154927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x154856270 '__clang_svint64x4_t'
|-TypedefDecl 0x154927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x154856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x154927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1548562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x154927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1548562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x154927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1548562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x154927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x154856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x154927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x154856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x154927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x154856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x154927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x154856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x154927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x154856390 '__SVBool_t'
|-TypedefDecl 0x154927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1548563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x154927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1548563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x154927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1548563f0 '__SVCount_t'
|-TypedefDecl 0x154927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x154927fb0 'char *'
|   `-BuiltinType 0x1548556b0 'char'
|-TypedefDecl 0x154928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x154927fb0 'char *'
|   `-BuiltinType 0x1548556b0 'char'
`-FunctionDecl 0x1549283a8 <dataset_diviso_filec/func5937_vuln.c:1:1, line:44:1> line:1:12 invalid asepcos_parse_sec_attr 'int (int *, int *, const int *, int)' static
  |-ParmVarDecl 0x154928128 <col:35, col:46> col:46 invalid card 'int *'
  |-ParmVarDecl 0x1549281a8 <col:52, col:63> col:63 invalid file 'int *'
  |-ParmVarDecl 0x154928228 <col:69, col:79> col:79 invalid buf 'const int *'
  |-ParmVarDecl 0x1549282a8 <line:2:2, col:9> col:9 referenced invalid len 'int'
  `-CompoundStmt 0x154943e90 <line:3:1, line:44:1>
    |-DeclStmt 0x154928510 <line:4:2, col:19>
    | `-VarDecl 0x154928488 <col:2, col:12> col:12 referenced invalid p 'const int *'
    `-WhileStmt 0x154943e70 <line:6:2, line:41:2>
      |-BinaryOperator 0x154928568 <line:6:9, col:16> 'int' contains-errors '!='
      | |-RecoveryExpr 0x154928528 <col:9> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x154928548 <col:16> 'int' 0
      `-CompoundStmt 0x154943e30 <col:19, line:41:2>
        |-DeclStmt 0x1549286d8 <line:7:3, col:31>
        | |-VarDecl 0x1549285a0 <col:3, col:16> col:16 used amode 'unsigned int'
        | `-VarDecl 0x154928620 <col:3, col:30> col:23 used tlen 'unsigned int' cinit
        |   `-ImplicitCastExpr 0x1549286a8 <col:30> 'unsigned int' <IntegralCast>
        |     `-IntegerLiteral 0x154928688 <col:30> 'int' 3
        |-IfStmt 0x154941c68 <line:8:3, line:11:3>
        | |-BinaryOperator 0x1549418f8 <line:8:7, col:42> 'int' contains-errors '&&'
        | | |-BinaryOperator 0x154941820 <col:7, col:26> 'int' contains-errors '&&'
        | | | |-BinaryOperator 0x154928730 <col:7, col:13> 'int' contains-errors '<'
        | | | | |-RecoveryExpr 0x1549286f0 <col:7> '<dependent type>' contains-errors lvalue
        | | | | `-IntegerLiteral 0x154928710 <col:13> 'int' 5
        | | | `-BinaryOperator 0x154941800 <col:18, col:26> 'int' contains-errors '!='
        | | |   |-ArraySubscriptExpr 0x1549287a8 <col:18, col:21> '<dependent type>' contains-errors lvalue
        | | |   | |-ImplicitCastExpr 0x154928790 <col:18> '<dependent type>' contains-errors <LValueToRValue>
        | | |   | | `-RecoveryExpr 0x154928750 <col:18> '<dependent type>' contains-errors lvalue
        | | |   | `-IntegerLiteral 0x154928770 <col:20> 'int' 0
        | | |   `-IntegerLiteral 0x1549287c8 <col:26> 'int' 128
        | | `-BinaryOperator 0x1549418d8 <col:34, col:42> 'int' contains-errors '!='
        | |   |-ArraySubscriptExpr 0x154941898 <col:34, col:37> '<dependent type>' contains-errors lvalue
        | |   | |-ImplicitCastExpr 0x154941880 <col:34> '<dependent type>' contains-errors <LValueToRValue>
        | |   | | `-RecoveryExpr 0x154941840 <col:34> '<dependent type>' contains-errors lvalue
        | |   | `-IntegerLiteral 0x154941860 <col:36> 'int' 1
        | |   `-IntegerLiteral 0x1549418b8 <col:42> 'int' 1
        | `-CompoundStmt 0x154941c48 <col:48, line:11:3>
        |   |-CallExpr 0x154941bc8 <line:9:4, col:50> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x154941a70 <col:4> 'int ()' Function 0x1549419b8 'sc_debug' 'int ()'
        |   | |-CXXDependentScopeMemberExpr 0x154941ab0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->ctx
        |   | | `-RecoveryExpr 0x154941a90 <col:13> '<dependent type>' contains-errors lvalue
        |   | |-RecoveryExpr 0x154941ba8 <col:24> '<dependent type>' contains-errors lvalue
        |   | `-StringLiteral 0x154941b50 <col:45> 'char[4]' lvalue "STR"
        |   `-ReturnStmt 0x154941c38 <line:10:4, col:11>
        |     `-RecoveryExpr 0x154941c18 <col:11> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x154941d20 <line:12:3, col:14> 'unsigned int' contains-errors '='
        | |-DeclRefExpr 0x154941c88 <col:3> 'unsigned int' lvalue Var 0x1549285a0 'amode' 'unsigned int'
        | `-ArraySubscriptExpr 0x154941d00 <col:11, col:14> '<dependent type>' contains-errors lvalue
        |   |-ImplicitCastExpr 0x154941ce8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
        |   | `-RecoveryExpr 0x154941ca8 <col:11> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x154941cc8 <col:13> 'int' 2
        |-IfStmt 0x154943cd0 <line:13:3, line:38:3> has_else
        | |-BinaryOperator 0x154941eb0 <line:13:7, col:31> 'int' contains-errors '&&'
        | | |-BinaryOperator 0x154941dd8 <col:7, col:15> 'int' contains-errors '=='
        | | | |-ArraySubscriptExpr 0x154941d98 <col:7, col:10> '<dependent type>' contains-errors lvalue
        | | | | |-ImplicitCastExpr 0x154941d80 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        | | | | | `-RecoveryExpr 0x154941d40 <col:7> '<dependent type>' contains-errors lvalue
        | | | | `-IntegerLiteral 0x154941d60 <col:9> 'int' 3
        | | | `-IntegerLiteral 0x154941db8 <col:15> 'int' 144
        | | `-BinaryOperator 0x154941e90 <col:23, col:31> 'int' contains-errors '=='
        | |   |-ArraySubscriptExpr 0x154941e50 <col:23, col:26> '<dependent type>' contains-errors lvalue
        | |   | |-ImplicitCastExpr 0x154941e38 <col:23> '<dependent type>' contains-errors <LValueToRValue>
        | |   | | `-RecoveryExpr 0x154941df8 <col:23> '<dependent type>' contains-errors lvalue
        | |   | `-IntegerLiteral 0x154941e18 <col:25> 'int' 4
        | |   `-IntegerLiteral 0x154941e70 <col:31> 'int' 0
        | |-CompoundStmt 0x154942308 <col:37, line:18:3>
        | | |-DeclStmt 0x154942168 <line:14:4, col:52>
        | | | `-VarDecl 0x154941ee8 <col:4, col:51> col:8 used r 'int' cinit
        | | |   `-CallExpr 0x154942128 <col:12, col:51> '<dependent type>' contains-errors
        | | |     |-DeclRefExpr 0x154942030 <col:12> 'int ()' Function 0x154941f78 'set_sec_attr' 'int ()'
        | | |     |-RecoveryExpr 0x154942050 <col:25> '<dependent type>' contains-errors lvalue
        | | |     |-DeclRefExpr 0x154942070 <col:31> 'unsigned int' lvalue Var 0x1549285a0 'amode' 'unsigned int'
        | | |     |-IntegerLiteral 0x154942090 <col:38> 'int' 0
        | | |     `-RecoveryExpr 0x154942108 <col:41> '<dependent type>' contains-errors lvalue
        | | |-IfStmt 0x154942260 <line:15:4, line:16:12>
        | | | |-BinaryOperator 0x1549421f8 <line:15:8, col:13> 'int' contains-errors '!='
        | | | | |-DeclRefExpr 0x154942180 <col:8> 'int' contains-errors lvalue Var 0x154941ee8 'r' 'int'
        | | | | `-RecoveryExpr 0x1549421d8 <col:13> '<dependent type>' contains-errors lvalue
        | | | `-ReturnStmt 0x154942250 <line:16:5, col:12>
        | | |   `-ImplicitCastExpr 0x154942238 <col:12> 'int' contains-errors <LValueToRValue>
        | | |     `-DeclRefExpr 0x154942218 <col:12> 'int' contains-errors lvalue Var 0x154941ee8 'r' 'int'
        | | `-CompoundAssignOperator 0x1549422d8 <line:17:4, col:12> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
        | |   |-DeclRefExpr 0x154942280 <col:4> 'unsigned int' lvalue Var 0x154928620 'tlen' 'unsigned int'
        | |   `-ImplicitCastExpr 0x1549422c0 <col:12> 'unsigned int' <IntegralCast>
        | |     `-IntegerLiteral 0x1549422a0 <col:12> 'int' 2
        | `-IfStmt 0x154943ca0 <line:18:10, line:38:3> has_else
        |   |-BinaryOperator 0x1549424a0 <line:18:14, col:38> 'int' contains-errors '&&'
        |   | |-BinaryOperator 0x1549423c8 <col:14, col:22> 'int' contains-errors '=='
        |   | | |-ArraySubscriptExpr 0x154942388 <col:14, col:17> '<dependent type>' contains-errors lvalue
        |   | | | |-ImplicitCastExpr 0x154942370 <col:14> '<dependent type>' contains-errors <LValueToRValue>
        |   | | | | `-RecoveryExpr 0x154942330 <col:14> '<dependent type>' contains-errors lvalue
        |   | | | `-IntegerLiteral 0x154942350 <col:16> 'int' 3
        |   | | `-IntegerLiteral 0x1549423a8 <col:22> 'int' 151
        |   | `-BinaryOperator 0x154942480 <col:30, col:38> 'int' contains-errors '=='
        |   |   |-ArraySubscriptExpr 0x154942440 <col:30, col:33> '<dependent type>' contains-errors lvalue
        |   |   | |-ImplicitCastExpr 0x154942428 <col:30> '<dependent type>' contains-errors <LValueToRValue>
        |   |   | | `-RecoveryExpr 0x1549423e8 <col:30> '<dependent type>' contains-errors lvalue
        |   |   | `-IntegerLiteral 0x154942408 <col:32> 'int' 4
        |   |   `-IntegerLiteral 0x154942460 <col:38> 'int' 0
        |   |-CompoundStmt 0x154942e30 <col:44, line:23:3>
        |   | |-DeclStmt 0x154942678 <line:19:4, col:53>
        |   | | `-VarDecl 0x1549424d8 <col:4, col:52> col:8 used r 'int' cinit
        |   | |   `-CallExpr 0x154942638 <col:12, col:52> '<dependent type>' contains-errors
        |   | |     |-DeclRefExpr 0x154942540 <col:12> 'int ()' Function 0x154941f78 'set_sec_attr' 'int ()'
        |   | |     |-RecoveryExpr 0x154942560 <col:25> '<dependent type>' contains-errors lvalue
        |   | |     |-DeclRefExpr 0x154942580 <col:31> 'unsigned int' lvalue Var 0x1549285a0 'amode' 'unsigned int'
        |   | |     |-IntegerLiteral 0x1549425a0 <col:38> 'int' 0
        |   | |     `-RecoveryExpr 0x154942618 <col:41> '<dependent type>' contains-errors lvalue
        |   | |-IfStmt 0x154942770 <line:20:4, line:21:12>
        |   | | |-BinaryOperator 0x154942708 <line:20:8, col:13> 'int' contains-errors '!='
        |   | | | |-DeclRefExpr 0x154942690 <col:8> 'int' contains-errors lvalue Var 0x1549424d8 'r' 'int'
        |   | | | `-RecoveryExpr 0x1549426e8 <col:13> '<dependent type>' contains-errors lvalue
        |   | | `-ReturnStmt 0x154942760 <line:21:5, col:12>
        |   | |   `-ImplicitCastExpr 0x154942748 <col:12> 'int' contains-errors <LValueToRValue>
        |   | |     `-DeclRefExpr 0x154942728 <col:12> 'int' contains-errors lvalue Var 0x1549424d8 'r' 'int'
        |   | `-CompoundAssignOperator 0x154942e00 <line:22:4, col:12> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
        |   |   |-DeclRefExpr 0x154942790 <col:4> 'unsigned int' lvalue Var 0x154928620 'tlen' 'unsigned int'
        |   |   `-ImplicitCastExpr 0x1549427d0 <col:12> 'unsigned int' <IntegralCast>
        |   |     `-IntegerLiteral 0x1549427b0 <col:12> 'int' 2
        |   `-IfStmt 0x154943c70 <line:23:10, line:38:3> has_else
        |     |-BinaryOperator 0x154943008 <line:23:14, col:45> 'int' contains-errors '&&'
        |     | |-BinaryOperator 0x154942ef0 <col:14, col:22> 'int' contains-errors '=='
        |     | | |-ArraySubscriptExpr 0x154942eb0 <col:14, col:17> '<dependent type>' contains-errors lvalue
        |     | | | |-ImplicitCastExpr 0x154942e98 <col:14> '<dependent type>' contains-errors <LValueToRValue>
        |     | | | | `-RecoveryExpr 0x154942e58 <col:14> '<dependent type>' contains-errors lvalue
        |     | | | `-IntegerLiteral 0x154942e78 <col:16> 'int' 3
        |     | | `-IntegerLiteral 0x154942ed0 <col:22> 'int' 160
        |     | `-BinaryOperator 0x154942fe8 <col:30, col:45> 'int' contains-errors '>='
        |     |   |-RecoveryExpr 0x154942f10 <col:30> '<dependent type>' contains-errors lvalue
        |     |   `-BinaryOperator 0x154942fc8 <col:37, col:45> '<dependent type>' contains-errors '+'
        |     |     |-IntegerLiteral 0x154942f30 <col:37> 'unsigned int' 4
        |     |     `-ArraySubscriptExpr 0x154942fa8 <col:42, col:45> '<dependent type>' contains-errors lvalue
        |     |       |-ImplicitCastExpr 0x154942f90 <col:42> '<dependent type>' contains-errors <LValueToRValue>
        |     |       | `-RecoveryExpr 0x154942f50 <col:42> '<dependent type>' contains-errors lvalue
        |     |       `-IntegerLiteral 0x154942f70 <col:44> 'int' 4
        |     |-CompoundStmt 0x1549434c8 <col:48, line:29:3>
        |     | |-DeclStmt 0x1549432a8 <line:25:4, col:54>
        |     | | `-VarDecl 0x154943040 <col:4, col:53> col:8 used r 'int' cinit
        |     | |   `-CallExpr 0x154943268 <col:12, col:53> '<dependent type>' contains-errors
        |     | |     |-DeclRefExpr 0x1549430a8 <col:12> 'int ()' Function 0x154941f78 'set_sec_attr' 'int ()'
        |     | |     |-RecoveryExpr 0x1549430c8 <col:25> '<dependent type>' contains-errors lvalue
        |     | |     |-DeclRefExpr 0x1549430e8 <col:31> 'unsigned int' lvalue Var 0x1549285a0 'amode' 'unsigned int'
        |     | |     |-ArraySubscriptExpr 0x154943228 <col:38, col:41> '<dependent type>' contains-errors lvalue
        |     | |     | |-ImplicitCastExpr 0x154943210 <col:38> '<dependent type>' contains-errors <LValueToRValue>
        |     | |     | | `-RecoveryExpr 0x154943108 <col:38> '<dependent type>' contains-errors lvalue
        |     | |     | `-IntegerLiteral 0x154943128 <col:40> 'int' 5
        |     | |     `-RecoveryExpr 0x154943248 <col:44> '<dependent type>' contains-errors lvalue
        |     | |-IfStmt 0x1549433a0 <line:26:4, line:27:12>
        |     | | |-BinaryOperator 0x154943338 <line:26:8, col:13> 'int' contains-errors '!='
        |     | | | |-DeclRefExpr 0x1549432c0 <col:8> 'int' contains-errors lvalue Var 0x154943040 'r' 'int'
        |     | | | `-RecoveryExpr 0x154943318 <col:13> '<dependent type>' contains-errors lvalue
        |     | | `-ReturnStmt 0x154943390 <line:27:5, col:12>
        |     | |   `-ImplicitCastExpr 0x154943378 <col:12> 'int' contains-errors <LValueToRValue>
        |     | |     `-DeclRefExpr 0x154943358 <col:12> 'int' contains-errors lvalue Var 0x154943040 'r' 'int'
        |     | `-CompoundAssignOperator 0x154943498 <line:28:4, col:19> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |     |   |-DeclRefExpr 0x1549433c0 <col:4> 'unsigned int' lvalue Var 0x154928620 'tlen' 'unsigned int'
        |     |   `-BinaryOperator 0x154943478 <col:12, col:19> '<dependent type>' contains-errors '+'
        |     |     |-IntegerLiteral 0x1549433e0 <col:12> 'int' 2
        |     |     `-ArraySubscriptExpr 0x154943458 <col:16, col:19> '<dependent type>' contains-errors lvalue
        |     |       |-ImplicitCastExpr 0x154943440 <col:16> '<dependent type>' contains-errors <LValueToRValue>
        |     |       | `-RecoveryExpr 0x154943400 <col:16> '<dependent type>' contains-errors lvalue
        |     |       `-IntegerLiteral 0x154943420 <col:18> 'int' 4
        |     `-IfStmt 0x154943c40 <line:29:10, line:38:3> has_else
        |       |-BinaryOperator 0x1549436a0 <line:29:14, col:45> 'int' contains-errors '&&'
        |       | |-BinaryOperator 0x154943588 <col:14, col:22> 'int' contains-errors '=='
        |       | | |-ArraySubscriptExpr 0x154943548 <col:14, col:17> '<dependent type>' contains-errors lvalue
        |       | | | |-ImplicitCastExpr 0x154943530 <col:14> '<dependent type>' contains-errors <LValueToRValue>
        |       | | | | `-RecoveryExpr 0x1549434f0 <col:14> '<dependent type>' contains-errors lvalue
        |       | | | `-IntegerLiteral 0x154943510 <col:16> 'int' 3
        |       | | `-IntegerLiteral 0x154943568 <col:22> 'int' 175
        |       | `-BinaryOperator 0x154943680 <col:30, col:45> 'int' contains-errors '>='
        |       |   |-RecoveryExpr 0x1549435a8 <col:30> '<dependent type>' contains-errors lvalue
        |       |   `-BinaryOperator 0x154943660 <col:37, col:45> '<dependent type>' contains-errors '+'
        |       |     |-IntegerLiteral 0x1549435c8 <col:37> 'unsigned int' 4
        |       |     `-ArraySubscriptExpr 0x154943640 <col:42, col:45> '<dependent type>' contains-errors lvalue
        |       |       |-ImplicitCastExpr 0x154943628 <col:42> '<dependent type>' contains-errors <LValueToRValue>
        |       |       | `-RecoveryExpr 0x1549435e8 <col:42> '<dependent type>' contains-errors lvalue
        |       |       `-IntegerLiteral 0x154943608 <col:44> 'int' 4
        |       |-CompoundStmt 0x154943b60 <col:48, line:35:3>
        |       | |-DeclStmt 0x154943940 <line:31:4, col:54>
        |       | | `-VarDecl 0x1549436d8 <col:4, col:53> col:8 used r 'int' cinit
        |       | |   `-CallExpr 0x154943900 <col:12, col:53> '<dependent type>' contains-errors
        |       | |     |-DeclRefExpr 0x154943740 <col:12> 'int ()' Function 0x154941f78 'set_sec_attr' 'int ()'
        |       | |     |-RecoveryExpr 0x154943760 <col:25> '<dependent type>' contains-errors lvalue
        |       | |     |-DeclRefExpr 0x154943780 <col:31> 'unsigned int' lvalue Var 0x1549285a0 'amode' 'unsigned int'
        |       | |     |-ArraySubscriptExpr 0x1549438c0 <col:38, col:41> '<dependent type>' contains-errors lvalue
        |       | |     | |-ImplicitCastExpr 0x1549438a8 <col:38> '<dependent type>' contains-errors <LValueToRValue>
        |       | |     | | `-RecoveryExpr 0x1549437a0 <col:38> '<dependent type>' contains-errors lvalue
        |       | |     | `-IntegerLiteral 0x1549437c0 <col:40> 'int' 5
        |       | |     `-RecoveryExpr 0x1549438e0 <col:44> '<dependent type>' contains-errors lvalue
        |       | |-IfStmt 0x154943a38 <line:32:4, line:33:12>
        |       | | |-BinaryOperator 0x1549439d0 <line:32:8, col:13> 'int' contains-errors '!='
        |       | | | |-DeclRefExpr 0x154943958 <col:8> 'int' contains-errors lvalue Var 0x1549436d8 'r' 'int'
        |       | | | `-RecoveryExpr 0x1549439b0 <col:13> '<dependent type>' contains-errors lvalue
        |       | | `-ReturnStmt 0x154943a28 <line:33:5, col:12>
        |       | |   `-ImplicitCastExpr 0x154943a10 <col:12> 'int' contains-errors <LValueToRValue>
        |       | |     `-DeclRefExpr 0x1549439f0 <col:12> 'int' contains-errors lvalue Var 0x1549436d8 'r' 'int'
        |       | `-CompoundAssignOperator 0x154943b30 <line:34:4, col:19> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |       |   |-DeclRefExpr 0x154943a58 <col:4> 'unsigned int' lvalue Var 0x154928620 'tlen' 'unsigned int'
        |       |   `-BinaryOperator 0x154943b10 <col:12, col:19> '<dependent type>' contains-errors '+'
        |       |     |-IntegerLiteral 0x154943a78 <col:12> 'int' 2
        |       |     `-ArraySubscriptExpr 0x154943af0 <col:16, col:19> '<dependent type>' contains-errors lvalue
        |       |       |-ImplicitCastExpr 0x154943ad8 <col:16> '<dependent type>' contains-errors <LValueToRValue>
        |       |       | `-RecoveryExpr 0x154943a98 <col:16> '<dependent type>' contains-errors lvalue
        |       |       `-IntegerLiteral 0x154943ab8 <col:18> 'int' 4
        |       `-CompoundStmt 0x154943c30 <line:35:10, line:38:3>
        |-CompoundAssignOperator 0x154943d68 <line:39:3, col:10> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        | |-RecoveryExpr 0x154943d20 <col:3> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x154943d00 <col:3> 'const int *' lvalue Var 0x154928488 'p' 'const int *'
        | `-DeclRefExpr 0x154943d48 <col:10> 'unsigned int' lvalue Var 0x154928620 'tlen' 'unsigned int'
        `-CompoundAssignOperator 0x154943e00 <line:40:3, col:10> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
          |-RecoveryExpr 0x154943db8 <col:3> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x154943d98 <col:3> 'int' lvalue ParmVar 0x1549282a8 'len' 'int'
          `-DeclRefExpr 0x154943de0 <col:10> 'unsigned int' lvalue Var 0x154928620 'tlen' 'unsigned int'
