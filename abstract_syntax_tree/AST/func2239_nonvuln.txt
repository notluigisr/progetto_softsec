TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12a926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a926000 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12a926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12a926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12a926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12a9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12a926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12a926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12a9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12a927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12a927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12a928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-FunctionDecl 0x12a940a00 <dataset_diviso_filec/func2239_nonvuln.c:1:1, line:30:1> line:1:6 add_reported_to 'void (struct dump_dir *, const char *)'
| |-ParmVarDecl 0x12a928648 <col:22, col:39> col:39 used dd 'struct dump_dir *'
| |-ParmVarDecl 0x12a9286c8 <col:43, col:55> col:55 used line 'const char *'
| `-CompoundStmt 0x12a944db0 <line:2:1, line:30:1>
|   |-IfStmt 0x12a940dc8 <line:3:5, line:4:32>
|   | |-UnaryOperator 0x12a940b78 <line:3:9, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12a940b60 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12a940b38 <col:10, col:14> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12a940b00 <col:10> 'struct dump_dir *' lvalue ParmVar 0x12a928648 'dd' 'struct dump_dir *'
|   | `-CallExpr 0x12a940d88 <line:4:9, col:32> 'int'
|   |   |-ImplicitCastExpr 0x12a940d70 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12a940cc0 <col:9> 'int ()' Function 0x12a940c08 'error_msg_and_die' 'int ()'
|   |   `-ImplicitCastExpr 0x12a940db0 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x12a940d20 <col:27> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x12a9410e0 <line:6:5, col:129>
|   | `-VarDecl 0x12a940e00 <col:5, col:128> col:11 used reported_to 'char *' cinit
|   |   `-CallExpr 0x12a9410a8 <col:25, col:128> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12a940f48 <col:25> 'int ()' Function 0x12a940e90 'dd_load_text_ext' 'int ()'
|   |     |-DeclRefExpr 0x12a940f68 <col:42> 'struct dump_dir *' lvalue ParmVar 0x12a928648 'dd' 'struct dump_dir *'
|   |     |-RecoveryExpr 0x12a941028 <col:46> '<dependent type>' contains-errors lvalue
|   |     `-BinaryOperator 0x12a941088 <col:68, col:93> '<dependent type>' contains-errors '|'
|   |       |-RecoveryExpr 0x12a941048 <col:68> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x12a941068 <col:93> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12a9448c0 <line:7:5, line:26:44> has_else
|   | |-ImplicitCastExpr 0x12a941118 <line:7:9> 'char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x12a9410f8 <col:9> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   | |-CompoundStmt 0x12a944670 <line:8:5, line:24:5>
|   | | |-DeclStmt 0x12a941450 <line:9:9, col:41>
|   | | | `-VarDecl 0x12a941148 <col:9, col:40> col:18 used len_line 'unsigned int' cinit
|   | | |   `-ImplicitCastExpr 0x12a941438 <col:29, col:40> 'unsigned int' <IntegralCast>
|   | | |     `-CallExpr 0x12a9413f8 <col:29, col:40> 'unsigned long'
|   | | |       |-ImplicitCastExpr 0x12a9413e0 <col:29> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x12a941358 <col:29> 'unsigned long (const char *)' Function 0x12a9411e8 'strlen' 'unsigned long (const char *)'
|   | | |       `-ImplicitCastExpr 0x12a941420 <col:36> 'const char *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x12a941378 <col:36> 'const char *' lvalue ParmVar 0x12a9286c8 'line' 'const char *'
|   | | |-DeclStmt 0x12a941520 <line:10:9, col:30>
|   | | | `-VarDecl 0x12a941480 <col:9, col:19> col:15 used p 'char *' cinit
|   | | |   `-ImplicitCastExpr 0x12a941508 <col:19> 'char *' contains-errors <LValueToRValue>
|   | | |     `-DeclRefExpr 0x12a9414e8 <col:19> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   | | |-WhileStmt 0x12a944018 <line:11:9, line:19:9>
|   | | | |-ImplicitCastExpr 0x12a941588 <line:11:16, col:17> 'char' contains-errors <LValueToRValue>
|   | | | | `-UnaryOperator 0x12a941570 <col:16, col:17> 'char' contains-errors lvalue prefix '*' cannot overflow
|   | | | |   `-ImplicitCastExpr 0x12a941558 <col:17> 'char *' contains-errors <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x12a941538 <col:17> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | | `-CompoundStmt 0x12a943fe8 <line:12:9, line:19:9>
|   | | |   |-IfStmt 0x12a943cf8 <line:13:13, line:14:22>
|   | | |   | |-BinaryOperator 0x12a943c70 <line:13:17, col:95> 'int' contains-errors '&&'
|   | | |   | | |-BinaryOperator 0x12a943a20 <col:17, col:47> 'int' contains-errors '=='
|   | | |   | | | |-CallExpr 0x12a941948 <col:17, col:42> 'int' contains-errors
|   | | |   | | | | |-ImplicitCastExpr 0x12a941930 <col:17> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | |   | | | | | `-DeclRefExpr 0x12a941838 <col:17> 'int (const char *, const char *, unsigned long)' Function 0x12a9415e8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | | |   | | | | |-ImplicitCastExpr 0x12a941998 <col:25> 'const char *' contains-errors <NoOp>
|   | | |   | | | | | `-ImplicitCastExpr 0x12a941980 <col:25> 'char *' contains-errors <LValueToRValue>
|   | | |   | | | | |   `-DeclRefExpr 0x12a941858 <col:25> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | |   | | | | |-ImplicitCastExpr 0x12a9419b0 <col:28> 'const char *' <LValueToRValue>
|   | | |   | | | | | `-DeclRefExpr 0x12a941878 <col:28> 'const char *' lvalue ParmVar 0x12a9286c8 'line' 'const char *'
|   | | |   | | | | `-ImplicitCastExpr 0x12a9419e0 <col:34> 'unsigned long' <IntegralCast>
|   | | |   | | | |   `-ImplicitCastExpr 0x12a9419c8 <col:34> 'unsigned int' <LValueToRValue>
|   | | |   | | | |     `-DeclRefExpr 0x12a941898 <col:34> 'unsigned int' lvalue Var 0x12a941148 'len_line' 'unsigned int'
|   | | |   | | | `-IntegerLiteral 0x12a943a00 <col:47> 'int' 0
|   | | |   | | `-ParenExpr 0x12a943c50 <col:52, col:95> 'int' contains-errors
|   | | |   | |   `-BinaryOperator 0x12a943c30 <col:53, col:91> 'int' contains-errors '||'
|   | | |   | |     |-BinaryOperator 0x12a943b18 <col:53, col:68> 'int' contains-errors '=='
|   | | |   | |     | |-ImplicitCastExpr 0x12a943b00 <col:53, col:63> 'int' contains-errors <IntegralCast>
|   | | |   | |     | | `-ImplicitCastExpr 0x12a943ae8 <col:53, col:63> 'char' contains-errors <LValueToRValue>
|   | | |   | |     | |   `-ArraySubscriptExpr 0x12a943ab0 <col:53, col:63> 'char' contains-errors lvalue
|   | | |   | |     | |     |-ImplicitCastExpr 0x12a943a80 <col:53> 'char *' contains-errors <LValueToRValue>
|   | | |   | |     | |     | `-DeclRefExpr 0x12a943a40 <col:53> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | |   | |     | |     `-ImplicitCastExpr 0x12a943a98 <col:55> 'unsigned int' <LValueToRValue>
|   | | |   | |     | |       `-DeclRefExpr 0x12a943a60 <col:55> 'unsigned int' lvalue Var 0x12a941148 'len_line' 'unsigned int'
|   | | |   | |     | `-CharacterLiteral 0x12a943ad0 <col:68> 'int' 10
|   | | |   | |     `-BinaryOperator 0x12a943c10 <col:76, col:91> 'int' contains-errors '=='
|   | | |   | |       |-ImplicitCastExpr 0x12a943bf8 <col:76, col:86> 'int' contains-errors <IntegralCast>
|   | | |   | |       | `-ImplicitCastExpr 0x12a943be0 <col:76, col:86> 'char' contains-errors <LValueToRValue>
|   | | |   | |       |   `-ArraySubscriptExpr 0x12a943ba8 <col:76, col:86> 'char' contains-errors lvalue
|   | | |   | |       |     |-ImplicitCastExpr 0x12a943b78 <col:76> 'char *' contains-errors <LValueToRValue>
|   | | |   | |       |     | `-DeclRefExpr 0x12a943b38 <col:76> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | |   | |       |     `-ImplicitCastExpr 0x12a943b90 <col:78> 'unsigned int' <LValueToRValue>
|   | | |   | |       |       `-DeclRefExpr 0x12a943b58 <col:78> 'unsigned int' lvalue Var 0x12a941148 'len_line' 'unsigned int'
|   | | |   | |       `-CharacterLiteral 0x12a943bc8 <col:91> 'int' 0
|   | | |   | `-GotoStmt 0x12a943ce0 <line:14:17, col:22> 'ret' 0x12a943c90
|   | | |   |-BinaryOperator 0x12a943ee8 <line:15:13, col:34> 'char *' contains-errors '='
|   | | |   | |-DeclRefExpr 0x12a943d18 <col:13> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | |   | `-ImplicitCastExpr 0x12a943ed0 <col:17, col:34> 'char *' contains-errors <IntegralToPointer>
|   | | |   |   `-CallExpr 0x12a943e88 <col:17, col:34> 'int' contains-errors
|   | | |   |     |-ImplicitCastExpr 0x12a943e70 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |     | `-DeclRefExpr 0x12a943e18 <col:17> 'int ()' Function 0x12a943d60 'strchrnul' 'int ()'
|   | | |   |     |-ImplicitCastExpr 0x12a943eb8 <col:27> 'char *' contains-errors <LValueToRValue>
|   | | |   |     | `-DeclRefExpr 0x12a943e38 <col:27> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | |   |     `-CharacterLiteral 0x12a943e58 <col:30> 'int' 10
|   | | |   |-IfStmt 0x12a943f90 <line:16:13, line:17:17>
|   | | |   | |-UnaryOperator 0x12a943f70 <line:16:17, col:19> 'int' contains-errors prefix '!' cannot overflow
|   | | |   | | `-ImplicitCastExpr 0x12a943f58 <col:18, col:19> 'char' contains-errors <LValueToRValue>
|   | | |   | |   `-UnaryOperator 0x12a943f40 <col:18, col:19> 'char' contains-errors lvalue prefix '*' cannot overflow
|   | | |   | |     `-ImplicitCastExpr 0x12a943f28 <col:19> 'char *' contains-errors <LValueToRValue>
|   | | |   | |       `-DeclRefExpr 0x12a943f08 <col:19> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | |   | `-BreakStmt 0x12a943f88 <line:17:17>
|   | | |   `-UnaryOperator 0x12a943fd0 <line:18:13, col:14> 'char *' contains-errors postfix '++'
|   | | |     `-DeclRefExpr 0x12a943fb0 <col:13> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | |-IfStmt 0x12a9443f0 <line:20:9, line:21:71>
|   | | | |-BinaryOperator 0x12a9441c0 <line:20:13, col:42> 'int' contains-errors '&&'
|   | | | | |-BinaryOperator 0x12a9440a8 <col:13, col:18> 'int' contains-errors '!='
|   | | | | | |-ImplicitCastExpr 0x12a944078 <col:13> 'char *' contains-errors <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x12a944038 <col:13> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | | | | `-ImplicitCastExpr 0x12a944090 <col:18> 'char *' contains-errors <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x12a944058 <col:18> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   | | | | `-BinaryOperator 0x12a9441a0 <col:33, col:42> 'int' contains-errors '!='
|   | | | |   |-ImplicitCastExpr 0x12a944188 <col:33, col:37> 'int' contains-errors <IntegralCast>
|   | | | |   | `-ImplicitCastExpr 0x12a944170 <col:33, col:37> 'char' contains-errors <LValueToRValue>
|   | | | |   |   `-ArraySubscriptExpr 0x12a944138 <col:33, col:37> 'char' contains-errors lvalue
|   | | | |   |     |-ImplicitCastExpr 0x12a944120 <col:33> 'char *' contains-errors <LValueToRValue>
|   | | | |   |     | `-DeclRefExpr 0x12a9440c8 <col:33> 'char *' contains-errors lvalue Var 0x12a941480 'p' 'char *'
|   | | | |   |     `-UnaryOperator 0x12a944108 <col:35, col:36> 'int' prefix '-'
|   | | | |   |       `-IntegerLiteral 0x12a9440e8 <col:36> 'int' 1
|   | | | |   `-CharacterLiteral 0x12a944158 <col:42> 'int' 10
|   | | | `-BinaryOperator 0x12a9443d0 <line:21:13, col:71> 'char *' contains-errors '='
|   | | |   |-DeclRefExpr 0x12a9441e0 <col:13> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   | | |   `-ImplicitCastExpr 0x12a9443b8 <col:27, col:71> 'char *' contains-errors <IntegralToPointer>
|   | | |     `-CallExpr 0x12a944358 <col:27, col:71> 'int' contains-errors
|   | | |       |-ImplicitCastExpr 0x12a944340 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x12a9442e0 <col:27> 'int ()' Function 0x12a944228 'append_to_malloced_string' 'int ()'
|   | | |       |-ImplicitCastExpr 0x12a944388 <col:53> 'char *' contains-errors <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x12a944300 <col:53> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   | | |       `-ImplicitCastExpr 0x12a9443a0 <col:66> 'char *' <ArrayToPointerDecay>
|   | | |         `-StringLiteral 0x12a944320 <col:66> 'char[4]' lvalue "STR"
|   | | |-BinaryOperator 0x12a944520 <line:22:9, col:66> 'char *' contains-errors '='
|   | | | |-DeclRefExpr 0x12a944410 <col:9> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   | | | `-ImplicitCastExpr 0x12a944508 <col:23, col:66> 'char *' contains-errors <IntegralToPointer>
|   | | |   `-CallExpr 0x12a9444a8 <col:23, col:66> 'int' contains-errors
|   | | |     |-ImplicitCastExpr 0x12a944490 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x12a944430 <col:23> 'int ()' Function 0x12a944228 'append_to_malloced_string' 'int ()'
|   | | |     |-ImplicitCastExpr 0x12a9444d8 <col:49> 'char *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12a944450 <col:49> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   | | |     `-ImplicitCastExpr 0x12a9444f0 <col:62> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x12a944470 <col:62> 'const char *' lvalue ParmVar 0x12a9286c8 'line' 'const char *'
|   | | `-BinaryOperator 0x12a944650 <line:23:9, col:67> 'char *' contains-errors '='
|   | |   |-DeclRefExpr 0x12a944540 <col:9> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   | |   `-ImplicitCastExpr 0x12a944638 <col:23, col:67> 'char *' contains-errors <IntegralToPointer>
|   | |     `-CallExpr 0x12a9445d8 <col:23, col:67> 'int' contains-errors
|   | |       |-ImplicitCastExpr 0x12a9445c0 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x12a944560 <col:23> 'int ()' Function 0x12a944228 'append_to_malloced_string' 'int ()'
|   | |       |-ImplicitCastExpr 0x12a944608 <col:49> 'char *' contains-errors <LValueToRValue>
|   | |       | `-DeclRefExpr 0x12a944580 <col:49> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   | |       `-ImplicitCastExpr 0x12a944620 <col:62> 'char *' <ArrayToPointerDecay>
|   | |         `-StringLiteral 0x12a9445a0 <col:62> 'char[4]' lvalue "STR"
|   | `-BinaryOperator 0x12a9448a0 <line:26:9, col:44> 'char *' contains-errors '='
|   |   |-DeclRefExpr 0x12a9446b0 <col:9> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   |   `-ImplicitCastExpr 0x12a944888 <col:23, col:44> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x12a944828 <col:23, col:44> 'int'
|   |       |-ImplicitCastExpr 0x12a944810 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12a9447b0 <col:23> 'int ()' Function 0x12a9446f8 'xasprintf' 'int ()'
|   |       |-ImplicitCastExpr 0x12a944858 <col:33> 'char *' <ArrayToPointerDecay>
|   |       | `-StringLiteral 0x12a9447d0 <col:33> 'char[4]' lvalue "STR"
|   |       `-ImplicitCastExpr 0x12a944870 <col:40> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x12a9447f0 <col:40> 'const char *' lvalue ParmVar 0x12a9286c8 'line' 'const char *'
|   |-CallExpr 0x12a944ab0 <line:27:5, col:55> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12a9449d0 <col:5> 'int ()' Function 0x12a944918 'dd_save_text' 'int ()'
|   | |-DeclRefExpr 0x12a944a00 <col:18> 'struct dump_dir *' lvalue ParmVar 0x12a928648 'dd' 'struct dump_dir *'
|   | |-RecoveryExpr 0x12a944a90 <col:22> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x12a944a38 <col:44> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|   `-LabelStmt 0x12a944d90 <line:28:2, line:29:21> 'ret'
|     `-CallExpr 0x12a944d38 <col:5, col:21> 'void' contains-errors
|       |-ImplicitCastExpr 0x12a944d20 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12a944c98 <col:5> 'void (void *)' Function 0x12a944b28 'free' 'void (void *)'
|       `-ImplicitCastExpr 0x12a944d78 <col:10> 'void *' contains-errors <BitCast>
|         `-ImplicitCastExpr 0x12a944d60 <col:10> 'char *' contains-errors <LValueToRValue>
|           `-DeclRefExpr 0x12a944cb8 <col:10> 'char *' contains-errors lvalue Var 0x12a940e00 'reported_to' 'char *'
|-FunctionDecl 0x12a9411e8 <line:9:29> col:29 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x12a9412e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12a941290 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x12a9415e8 <line:13:17> col:17 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x12a9416e8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12a941750 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12a9417b8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12a941690 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x12a944b28 <line:29:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12a944c28 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12a944bd0 <<invalid sloc>> Implicit 873
