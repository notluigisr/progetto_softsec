TranslationUnitDecl 0x148855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1488564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148855bd0 '__int128'
|-TypedefDecl 0x148856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148855bf0 'unsigned __int128'
|-TypedefDecl 0x148926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x148926000 'struct __NSConstantString_tag'
|   `-Record 0x148856580 '__NSConstantString_tag'
|-TypedefDecl 0x148926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148855d90 '__SVInt8_t'
|-TypedefDecl 0x148926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148855db0 '__SVInt16_t'
|-TypedefDecl 0x148926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148855dd0 '__SVInt32_t'
|-TypedefDecl 0x1489263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148855df0 '__SVInt64_t'
|-TypedefDecl 0x148926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148855e10 '__SVUint8_t'
|-TypedefDecl 0x1489264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148855e30 '__SVUint16_t'
|-TypedefDecl 0x148926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148855e50 '__SVUint32_t'
|-TypedefDecl 0x148926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148855e70 '__SVUint64_t'
|-TypedefDecl 0x1489265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148855e90 '__SVFloat16_t'
|-TypedefDecl 0x148926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1489266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148855ed0 '__SVFloat64_t'
|-TypedefDecl 0x148926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x148926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1489267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x148926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1489268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x148926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x148926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1489269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x148926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x148926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x148926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x148926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x148926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x148926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148856090 '__clang_svint8x3_t'
|-TypedefDecl 0x148926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1488560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x148926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1488560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x148926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1488560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x148926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x148926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x148926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x148926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x148926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x148927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1488561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x148927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1488561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1489278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1488561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x148927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1489279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148856230 '__clang_svint16x4_t'
|-TypedefDecl 0x148927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148856250 '__clang_svint32x4_t'
|-TypedefDecl 0x148927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148856270 '__clang_svint64x4_t'
|-TypedefDecl 0x148927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x148927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1488562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x148927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1488562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x148927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1488562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x148927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x148927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x148927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x148927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x148927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148856390 '__SVBool_t'
|-TypedefDecl 0x148927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1488563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x148927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1488563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x148927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1488563f0 '__SVCount_t'
|-TypedefDecl 0x148927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x148927fb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
|-TypedefDecl 0x148928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x148927fb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
|-FunctionDecl 0x148928338 <dataset_diviso_filec/func22993_vuln.c:1:1, line:48:1> line:1:12 invalid gdImageRotateInterpolated 'int (const int, const float, int)'
| |-ParmVarDecl 0x1489280f0 <col:38, col:55> col:55 invalid src 'const int'
| |-ParmVarDecl 0x148928170 <col:60, col:72> col:72 used angle 'const float'
| |-ParmVarDecl 0x1489281f0 <col:79, col:83> col:83 used bgcolor 'int'
| `-CompoundStmt 0x14a0092d0 <line:2:1, line:48:1>
|   |-DeclStmt 0x148941c48 <line:3:2, col:51>
|   | `-VarDecl 0x148928410 <col:2, col:50> col:12 used angle_rounded 'const int' cinit
|   |   `-CStyleCastExpr 0x148941c20 <col:28, col:50> 'int' <FloatingToIntegral>
|   |     `-CallExpr 0x148941bc8 <col:33, col:50> 'double'
|   |       |-ImplicitCastExpr 0x148941bb0 <col:33> 'double (*)(double)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x148941ad0 <col:33> 'double (double)' Function 0x148941910 'floor' 'double (double)'
|   |       `-ImplicitCastExpr 0x148941bf0 <col:39, col:47> 'double' <FloatingCast>
|   |         `-BinaryOperator 0x148941b60 <col:39, col:47> 'float' '*'
|   |           |-ImplicitCastExpr 0x148941b30 <col:39> 'float' <LValueToRValue>
|   |           | `-DeclRefExpr 0x148941af0 <col:39> 'const float' lvalue ParmVar 0x148928170 'angle' 'const float'
|   |           `-ImplicitCastExpr 0x148941b48 <col:47> 'float' <IntegralToFloating>
|   |             `-IntegerLiteral 0x148941b10 <col:47> 'int' 100
|   |-IfStmt 0x148941e80 <line:5:2, line:7:2>
|   | |-BinaryOperator 0x148941e00 <line:5:6, col:32> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x148941da0 <col:6, col:16> 'int' '<'
|   | | | |-ImplicitCastExpr 0x148941d88 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x148941c60 <col:6> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|   | | | `-IntegerLiteral 0x148941c80 <col:16> 'int' 0
|   | | `-BinaryOperator 0x148941de0 <col:21, col:32> 'int' contains-errors '>='
|   | |   |-DeclRefExpr 0x148941cd8 <col:21> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|   | |   `-RecoveryExpr 0x148941dc0 <col:32> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x148941e68 <col:45, line:7:2>
|   |   `-ReturnStmt 0x148941e58 <line:6:3, col:10>
|   |     `-RecoveryExpr 0x148941e38 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1489426c0 <line:10:2, line:15:2>
|   | |-BinaryOperator 0x148941f28 <line:10:6, col:24> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x148941ec0 <col:6, col:11> '<dependent type>' contains-errors lvalue ->trueColor
|   | | | `-RecoveryExpr 0x148941ea0 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x148941f08 <col:24> 'int' 0
|   | `-CompoundStmt 0x1489426a0 <col:27, line:15:2>
|   |   |-IfStmt 0x148942538 <line:11:3, line:13:3>
|   |   | |-BinaryOperator 0x148941fa0 <line:11:7, col:18> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x148941f88 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x148941f48 <col:7> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|   |   | | `-IntegerLiteral 0x148941f68 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x148942520 <col:21, line:13:3>
|   |   |   `-BinaryOperator 0x148942500 <line:12:4, col:111> 'int' contains-errors '='
|   |   |     |-DeclRefExpr 0x148941fc0 <col:4> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|   |   |     `-CallExpr 0x1489424c0 <col:15, col:111> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x148942140 <col:15> 'int ()' Function 0x148942088 'gdTrueColorAlpha' 'int ()'
|   |   |       |-ArraySubscriptExpr 0x148942218 <col:32, col:48> '<dependent type>' contains-errors lvalue
|   |   |       | |-ImplicitCastExpr 0x1489421e8 <col:32, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | | `-CXXDependentScopeMemberExpr 0x148942180 <col:32, col:37> '<dependent type>' contains-errors lvalue ->red
|   |   |       | |   `-RecoveryExpr 0x148942160 <col:32> '<dependent type>' contains-errors lvalue
|   |   |       | `-ImplicitCastExpr 0x148942200 <col:41> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x1489421c8 <col:41> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|   |   |       |-ArraySubscriptExpr 0x1489422f0 <col:51, col:69> '<dependent type>' contains-errors lvalue
|   |   |       | |-ImplicitCastExpr 0x1489422c0 <col:51, col:56> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | | `-CXXDependentScopeMemberExpr 0x148942258 <col:51, col:56> '<dependent type>' contains-errors lvalue ->green
|   |   |       | |   `-RecoveryExpr 0x148942238 <col:51> '<dependent type>' contains-errors lvalue
|   |   |       | `-ImplicitCastExpr 0x1489422d8 <col:62> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x1489422a0 <col:62> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|   |   |       |-ArraySubscriptExpr 0x1489423c8 <col:72, col:89> '<dependent type>' contains-errors lvalue
|   |   |       | |-ImplicitCastExpr 0x148942398 <col:72, col:77> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | | `-CXXDependentScopeMemberExpr 0x148942330 <col:72, col:77> '<dependent type>' contains-errors lvalue ->blue
|   |   |       | |   `-RecoveryExpr 0x148942310 <col:72> '<dependent type>' contains-errors lvalue
|   |   |       | `-ImplicitCastExpr 0x1489423b0 <col:82> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x148942378 <col:82> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|   |   |       `-ArraySubscriptExpr 0x1489424a0 <col:92, col:110> '<dependent type>' contains-errors lvalue
|   |   |         |-ImplicitCastExpr 0x148942470 <col:92, col:97> '<dependent type>' contains-errors <LValueToRValue>
|   |   |         | `-CXXDependentScopeMemberExpr 0x148942408 <col:92, col:97> '<dependent type>' contains-errors lvalue ->alpha
|   |   |         |   `-RecoveryExpr 0x1489423e8 <col:92> '<dependent type>' contains-errors lvalue
|   |   |         `-ImplicitCastExpr 0x148942488 <col:103> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x148942450 <col:103> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|   |   `-CallExpr 0x148942678 <line:14:3, col:32> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x148942638 <col:3> 'int ()' Function 0x148942580 'gdImagePaletteToTrueColor' 'int ()'
|   |     `-RecoveryExpr 0x148942658 <col:29> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x148942718 <line:18:2, line:25:2>
|   | |-ImplicitCastExpr 0x148942700 <line:18:10> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1489426e0 <col:10> 'const int' lvalue Var 0x148928410 'angle_rounded' 'const int'
|   | `-CompoundStmt 0x148944918 <col:25, line:25:2>
|   |   |-CaseStmt 0x148942778 <line:19:3, line:20:33>
|   |   | |-ConstantExpr 0x148942760 <line:19:8> 'int'
|   |   | | `-IntegerLiteral 0x148942740 <col:8> 'int' 9000
|   |   | `-ReturnStmt 0x148944548 <line:20:4, col:33>
|   |   |   `-CallExpr 0x148944518 <col:11, col:33> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x1489444b8 <col:11> 'int ()' Function 0x148944400 'gdImageRotate90' 'int ()'
|   |   |     |-RecoveryExpr 0x1489444d8 <col:27> '<dependent type>' contains-errors lvalue
|   |   |     `-IntegerLiteral 0x1489444f8 <col:32> 'int' 0
|   |   |-CaseStmt 0x148944590 <line:21:3, line:22:34>
|   |   | |-ConstantExpr 0x148944578 <line:21:8> 'int'
|   |   | | `-IntegerLiteral 0x148944558 <col:8> 'int' 18000
|   |   | `-ReturnStmt 0x148944728 <line:22:4, col:34>
|   |   |   `-CallExpr 0x1489446f8 <col:11, col:34> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x148944698 <col:11> 'int ()' Function 0x1489445e0 'gdImageRotate180' 'int ()'
|   |   |     |-RecoveryExpr 0x1489446b8 <col:28> '<dependent type>' contains-errors lvalue
|   |   |     `-IntegerLiteral 0x1489446d8 <col:33> 'int' 0
|   |   `-CaseStmt 0x148944770 <line:23:3, line:24:34>
|   |     |-ConstantExpr 0x148944758 <line:23:8> 'int'
|   |     | `-IntegerLiteral 0x148944738 <col:8> 'int' 27000
|   |     `-ReturnStmt 0x148944908 <line:24:4, col:34>
|   |       `-CallExpr 0x1489448d8 <col:11, col:34> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x148944878 <col:11> 'int ()' Function 0x1489447c0 'gdImageRotate270' 'int ()'
|   |         |-RecoveryExpr 0x148944898 <col:28> '<dependent type>' contains-errors lvalue
|   |         `-IntegerLiteral 0x1489448b8 <col:33> 'int' 0
|   |-IfStmt 0x148944c98 <line:27:2, line:29:2>
|   | |-BinaryOperator 0x148944c18 <line:27:6, col:74> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x148944bb8 <col:6, col:45> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x148944b98 <col:6, col:13> 'int' contains-errors '=='
|   | | | | |-RecoveryExpr 0x148944998 <col:6> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x148944b78 <col:13> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x148944a78 <col:21, col:45> 'int' contains-errors '<'
|   | | |   |-CXXDependentScopeMemberExpr 0x148944a10 <col:21, col:26> '<dependent type>' contains-errors lvalue ->interpolation_id
|   | | |   | `-RecoveryExpr 0x1489449f0 <col:21> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x148944a58 <col:45> 'int' 1
|   | | `-BinaryOperator 0x148944bf8 <col:50, col:74> 'int' contains-errors '>'
|   | |   |-CXXDependentScopeMemberExpr 0x148944ad8 <col:50, col:55> '<dependent type>' contains-errors lvalue ->interpolation_id
|   | |   | `-RecoveryExpr 0x148944ab8 <col:50> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x148944bd8 <col:74> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x148944c80 <col:91, line:29:2>
|   |   `-ReturnStmt 0x148944c70 <line:28:3, col:10>
|   |     `-RecoveryExpr 0x148944c50 <col:10> '<dependent type>' contains-errors lvalue
|   `-SwitchStmt 0x148944d38 <line:31:2, line:46:2>
|     |-ImplicitCastExpr 0x148944d20 <line:31:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
|     | `-CXXDependentScopeMemberExpr 0x148944cd8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->interpolation_id
|     |   `-RecoveryExpr 0x148944cb8 <col:10> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x14a009288 <col:33, line:46:2>
|       |-ReturnStmt 0x148944f10 <line:33:4, col:60>
|       | `-CallExpr 0x148944ed8 <col:11, col:60> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x148944e58 <col:11> 'int ()' Function 0x148944da0 'gdImageRotateNearestNeighbour' 'int ()'
|       |   |-RecoveryExpr 0x148944e78 <col:41> '<dependent type>' contains-errors lvalue
|       |   |-DeclRefExpr 0x148944e98 <col:46> 'const float' lvalue ParmVar 0x148928170 'angle' 'const float'
|       |   `-DeclRefExpr 0x148944eb8 <col:53> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|       |-BreakStmt 0x148944f20 <line:34:4>
|       |-ReturnStmt 0x1489450d8 <line:37:4, col:52>
|       | `-CallExpr 0x1489450a0 <col:11, col:52> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x148945020 <col:11> 'int ()' Function 0x148944f68 'gdImageRotateBilinear' 'int ()'
|       |   |-RecoveryExpr 0x148945040 <col:33> '<dependent type>' contains-errors lvalue
|       |   |-DeclRefExpr 0x148945060 <col:38> 'const float' lvalue ParmVar 0x148928170 'angle' 'const float'
|       |   `-DeclRefExpr 0x148945080 <col:45> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|       |-BreakStmt 0x1489450e8 <line:38:4>
|       |-ReturnStmt 0x1489452a0 <line:41:4, col:56>
|       | `-CallExpr 0x148945268 <col:11, col:56> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x1489451e8 <col:11> 'int ()' Function 0x148945130 'gdImageRotateBicubicFixed' 'int ()'
|       |   |-RecoveryExpr 0x148945208 <col:37> '<dependent type>' contains-errors lvalue
|       |   |-DeclRefExpr 0x148945228 <col:42> 'const float' lvalue ParmVar 0x148928170 'angle' 'const float'
|       |   `-DeclRefExpr 0x148945248 <col:49> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
|       |-BreakStmt 0x1489452b0 <line:42:4>
|       `-DefaultStmt 0x14a009268 <line:44:3, line:45:51>
|         `-ReturnStmt 0x14a009258 <col:4, col:51>
|           `-CallExpr 0x14a009220 <col:11, col:51> '<dependent type>' contains-errors
|             |-DeclRefExpr 0x148945398 <col:11> 'int ()' Function 0x1489452e0 'gdImageRotateGeneric' 'int ()'
|             |-RecoveryExpr 0x1489453b8 <col:32> '<dependent type>' contains-errors lvalue
|             |-DeclRefExpr 0x1489453d8 <col:37> 'const float' lvalue ParmVar 0x148928170 'angle' 'const float'
|             `-DeclRefExpr 0x14a009200 <col:44> 'int' lvalue ParmVar 0x1489281f0 'bgcolor' 'int'
`-FunctionDecl 0x148941910 <line:3:33> col:33 implicit used floor 'double (double)' extern
  |-ParmVarDecl 0x148941a10 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x1489419b8 <<invalid sloc>> Implicit 1079
  |-NoThrowAttr 0x148941a80 <col:33> Implicit
  `-ConstAttr 0x148941aa8 <col:33> Implicit
