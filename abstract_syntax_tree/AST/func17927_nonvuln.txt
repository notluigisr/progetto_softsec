TranslationUnitDecl 0x11e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e855bd0 '__int128'
|-TypedefDecl 0x11e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e855bf0 'unsigned __int128'
|-TypedefDecl 0x11e926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e926000 'struct __NSConstantString_tag'
|   `-Record 0x11e856580 '__NSConstantString_tag'
|-TypedefDecl 0x11e926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e855d90 '__SVInt8_t'
|-TypedefDecl 0x11e926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e855db0 '__SVInt16_t'
|-TypedefDecl 0x11e926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e855dd0 '__SVInt32_t'
|-TypedefDecl 0x11e9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e855df0 '__SVInt64_t'
|-TypedefDecl 0x11e926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e855e10 '__SVUint8_t'
|-TypedefDecl 0x11e9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e855e30 '__SVUint16_t'
|-TypedefDecl 0x11e926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e855e50 '__SVUint32_t'
|-TypedefDecl 0x11e926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e855e70 '__SVUint64_t'
|-TypedefDecl 0x11e9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e855e90 '__SVFloat16_t'
|-TypedefDecl 0x11e926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e856390 '__SVBool_t'
|-TypedefDecl 0x11e927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e8563f0 '__SVCount_t'
|-TypedefDecl 0x11e927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e927fb0 'char *'
|   `-BuiltinType 0x11e8556b0 'char'
|-TypedefDecl 0x11e928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e927fb0 'char *'
|   `-BuiltinType 0x11e8556b0 'char'
`-FunctionDecl 0x11e940b48 <dataset_diviso_filec/func17927_nonvuln.c:1:1, line:29:1> line:1:17 update_treesame 'unsigned int (struct rev_info *, struct commit *)' static
  |-ParmVarDecl 0x11e928648 <col:33, col:50> col:50 used revs 'struct rev_info *'
  |-ParmVarDecl 0x11e940a28 <col:56, col:71> col:71 used commit 'struct commit *'
  `-CompoundStmt 0x11e9478b0 <line:2:1, line:29:1>
    |-IfStmt 0x11e947760 <line:3:2, line:26:2>
    | |-BinaryOperator 0x11e940d50 <line:3:6, col:42> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x11e940c80 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x11e940c48 <col:6> 'struct commit *' lvalue ParmVar 0x11e940a28 'commit' 'struct commit *'
    | | `-CXXDependentScopeMemberExpr 0x11e940d08 <col:25, col:42> '<dependent type>' contains-errors lvalue ->next
    | |   `-RecoveryExpr 0x11e940ce0 <col:25, col:33> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x11e940ca8 <col:25> 'struct commit *' lvalue ParmVar 0x11e940a28 'commit' 'struct commit *'
    | `-CompoundStmt 0x11e9476f8 <col:48, line:26:2>
    |   |-DeclStmt 0x11e940df0 <line:4:3, col:13>
    |   | `-VarDecl 0x11e940d88 <col:3, col:12> col:12 used n 'unsigned int'
    |   |-DeclStmt 0x11e940ff8 <line:5:3, col:28>
    |   | |-RecordDecl 0x11e940e08 <col:3, col:10> col:10 struct treesame_state
    |   | `-VarDecl 0x11e940f78 <col:3, col:26> col:26 used st 'struct treesame_state *'
    |   |-DeclStmt 0x11e9411f8 <line:6:3, col:24>
    |   | |-RecordDecl 0x11e941010 <col:3, col:10> col:10 struct commit_list
    |   | `-VarDecl 0x11e941178 <col:3, col:23> col:23 used p 'struct commit_list *'
    |   |-DeclStmt 0x11e941290 <line:7:3, col:28>
    |   | `-VarDecl 0x11e941228 <col:3, col:12> col:12 used relevant_parents 'unsigned int'
    |   |-DeclStmt 0x11e9413c0 <line:8:3, col:46>
    |   | |-VarDecl 0x11e9412c0 <col:3, col:12> col:12 used relevant_change 'unsigned int'
    |   | `-VarDecl 0x11e941340 <col:3, col:29> col:29 used irrelevant_change 'unsigned int'
    |   |-BinaryOperator 0x11e941660 <line:10:3, col:58> 'struct treesame_state *' contains-errors '='
    |   | |-DeclRefExpr 0x11e9413d8 <col:3> 'struct treesame_state *' lvalue Var 0x11e940f78 'st' 'struct treesame_state *'
    |   | `-CallExpr 0x11e941630 <col:8, col:58> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11e941520 <col:8> 'int ()' Function 0x11e941468 'lookup_decoration' 'int ()'
    |   |   |-UnaryOperator 0x11e9415a0 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x11e941578 <col:27, col:33> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x11e941540 <col:27> 'struct rev_info *' lvalue ParmVar 0x11e928648 'revs' 'struct rev_info *'
    |   |   `-UnaryOperator 0x11e941618 <col:43, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x11e9415f0 <col:44, col:52> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x11e9415b8 <col:44> 'struct commit *' lvalue ParmVar 0x11e940a28 'commit' 'struct commit *'
    |   |-IfStmt 0x11e946a58 <line:11:3, line:12:46>
    |   | |-UnaryOperator 0x11e9416b8 <line:11:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x11e9416a0 <col:8> 'struct treesame_state *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x11e941680 <col:8> 'struct treesame_state *' lvalue Var 0x11e940f78 'st' 'struct treesame_state *'
    |   | `-CallExpr 0x11e946a28 <line:12:4, col:46> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11e9417b0 <col:4> 'int ()' Function 0x11e9416f8 'die' 'int ()'
    |   |   |-StringLiteral 0x11e941810 <col:8> 'char[4]' lvalue "STR"
    |   |   `-CallExpr 0x11e946a00 <col:15, col:45> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x11e941910 <col:15> 'int ()' Function 0x11e941858 'oid_to_hex' 'int ()'
    |   |     `-UnaryOperator 0x11e9419d8 <col:26, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |       `-CXXDependentScopeMemberExpr 0x11e941990 <col:27, col:42> '<dependent type>' contains-errors lvalue .oid
    |   |         `-RecoveryExpr 0x11e941968 <col:27, col:35> '<dependent type>' contains-errors lvalue
    |   |           `-DeclRefExpr 0x11e941930 <col:27> 'struct commit *' lvalue ParmVar 0x11e940a28 'commit' 'struct commit *'
    |   |-BinaryOperator 0x11e946ad0 <line:13:3, col:22> 'unsigned int' '='
    |   | |-DeclRefExpr 0x11e946a78 <col:3> 'unsigned int' lvalue Var 0x11e941228 'relevant_parents' 'unsigned int'
    |   | `-ImplicitCastExpr 0x11e946ab8 <col:22> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x11e946a98 <col:22> 'int' 0
    |   |-BinaryOperator 0x11e946b88 <line:14:3, col:41> 'unsigned int' '='
    |   | |-DeclRefExpr 0x11e946af0 <col:3> 'unsigned int' lvalue Var 0x11e9412c0 'relevant_change' 'unsigned int'
    |   | `-BinaryOperator 0x11e946b68 <col:21, col:41> 'unsigned int' '='
    |   |   |-DeclRefExpr 0x11e946b10 <col:21> 'unsigned int' lvalue Var 0x11e941340 'irrelevant_change' 'unsigned int'
    |   |   `-ImplicitCastExpr 0x11e946b50 <col:41> 'unsigned int' <IntegralCast>
    |   |     `-IntegerLiteral 0x11e946b30 <col:41> 'int' 0
    |   |-ForStmt 0x11e9472d8 <line:15:3, line:21:3>
    |   | |-BinaryOperator 0x11e946cc0 <line:15:8, col:33> 'unsigned int' contains-errors ','
    |   | | |-BinaryOperator 0x11e946c28 <col:8, col:20> 'struct commit_list *' contains-errors '='
    |   | | | |-DeclRefExpr 0x11e946ba8 <col:8> 'struct commit_list *' lvalue Var 0x11e941178 'p' 'struct commit_list *'
    |   | | | `-RecoveryExpr 0x11e946c00 <col:12, col:20> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x11e946bc8 <col:12> 'struct commit *' lvalue ParmVar 0x11e940a28 'commit' 'struct commit *'
    |   | | `-BinaryOperator 0x11e946ca0 <col:29, col:33> 'unsigned int' '='
    |   | |   |-DeclRefExpr 0x11e946c48 <col:29> 'unsigned int' lvalue Var 0x11e940d88 'n' 'unsigned int'
    |   | |   `-ImplicitCastExpr 0x11e946c88 <col:33> 'unsigned int' <IntegralCast>
    |   | |     `-IntegerLiteral 0x11e946c68 <col:33> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-ImplicitCastExpr 0x11e946d00 <col:36> 'struct commit_list *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x11e946ce0 <col:36> 'struct commit_list *' lvalue Var 0x11e941178 'p' 'struct commit_list *'
    |   | |-BinaryOperator 0x11e946df0 <col:39, col:51> 'struct commit_list *' contains-errors ','
    |   | | |-UnaryOperator 0x11e946d38 <col:39, col:40> 'unsigned int' postfix '++'
    |   | | | `-DeclRefExpr 0x11e946d18 <col:39> 'unsigned int' lvalue Var 0x11e940d88 'n' 'unsigned int'
    |   | | `-BinaryOperator 0x11e946dd0 <col:44, col:51> 'struct commit_list *' contains-errors '='
    |   | |   |-DeclRefExpr 0x11e946d50 <col:44> 'struct commit_list *' lvalue Var 0x11e941178 'p' 'struct commit_list *'
    |   | |   `-RecoveryExpr 0x11e946da8 <col:48, col:51> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x11e946d70 <col:48> 'struct commit_list *' lvalue Var 0x11e941178 'p' 'struct commit_list *'
    |   | `-CompoundStmt 0x11e9472c0 <col:57, line:21:3>
    |   |   `-IfStmt 0x11e947290 <line:16:4, line:20:41> has_else
    |   |     |-CallExpr 0x11e946f70 <line:16:8, col:31> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x11e946ef0 <col:8> 'int ()' Function 0x11e946e38 'relevant_commit' 'int ()'
    |   |     | `-RecoveryExpr 0x11e946f48 <col:24, col:27> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x11e946f10 <col:24> 'struct commit_list *' lvalue Var 0x11e941178 'p' 'struct commit_list *'
    |   |     |-CompoundStmt 0x11e947120 <col:34, line:19:4>
    |   |     | |-CompoundAssignOperator 0x11e9470b8 <line:17:5, col:39> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |     | | |-DeclRefExpr 0x11e946f98 <col:5> 'unsigned int' lvalue Var 0x11e9412c0 'relevant_change' 'unsigned int'
    |   |     | | `-UnaryOperator 0x11e9470a0 <col:24, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |     | |   `-ImplicitCastExpr 0x11e947088 <col:25, col:39> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | |     `-ArraySubscriptExpr 0x11e947068 <col:25, col:39> '<dependent type>' contains-errors lvalue
    |   |     | |       |-ImplicitCastExpr 0x11e947038 <col:25, col:29> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | |       | `-RecoveryExpr 0x11e946ff0 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |   |     | |       |   `-DeclRefExpr 0x11e946fb8 <col:25> 'struct treesame_state *' lvalue Var 0x11e940f78 'st' 'struct treesame_state *'
    |   |     | |       `-ImplicitCastExpr 0x11e947050 <col:38> 'unsigned int' <LValueToRValue>
    |   |     | |         `-DeclRefExpr 0x11e947018 <col:38> 'unsigned int' lvalue Var 0x11e940d88 'n' 'unsigned int'
    |   |     | `-UnaryOperator 0x11e947108 <line:18:5, col:21> 'unsigned int' postfix '++'
    |   |     |   `-DeclRefExpr 0x11e9470e8 <col:5> 'unsigned int' lvalue Var 0x11e941228 'relevant_parents' 'unsigned int'
    |   |     `-CompoundAssignOperator 0x11e947260 <line:20:5, col:41> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |       |-DeclRefExpr 0x11e947140 <col:5> 'unsigned int' lvalue Var 0x11e941340 'irrelevant_change' 'unsigned int'
    |   |       `-UnaryOperator 0x11e947248 <col:26, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |         `-ImplicitCastExpr 0x11e947230 <col:27, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |   |           `-ArraySubscriptExpr 0x11e947210 <col:27, col:41> '<dependent type>' contains-errors lvalue
    |   |             |-ImplicitCastExpr 0x11e9471e0 <col:27, col:31> '<dependent type>' contains-errors <LValueToRValue>
    |   |             | `-RecoveryExpr 0x11e947198 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |   |             |   `-DeclRefExpr 0x11e947160 <col:27> 'struct treesame_state *' lvalue Var 0x11e940f78 'st' 'struct treesame_state *'
    |   |             `-ImplicitCastExpr 0x11e9471f8 <col:40> 'unsigned int' <LValueToRValue>
    |   |               `-DeclRefExpr 0x11e9471c0 <col:40> 'unsigned int' lvalue Var 0x11e940d88 'n' 'unsigned int'
    |   `-IfStmt 0x11e9476c8 <line:22:3, line:25:28> has_else
    |     |-ConditionalOperator 0x11e9473b8 <line:22:7, col:44> 'unsigned int'
    |     | |-ImplicitCastExpr 0x11e947370 <col:7> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x11e947310 <col:7> 'unsigned int' lvalue Var 0x11e941228 'relevant_parents' 'unsigned int'
    |     | |-ImplicitCastExpr 0x11e947388 <col:26> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x11e947330 <col:26> 'unsigned int' lvalue Var 0x11e9412c0 'relevant_change' 'unsigned int'
    |     | `-ImplicitCastExpr 0x11e9473a0 <col:44> 'unsigned int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x11e947350 <col:44> 'unsigned int' lvalue Var 0x11e941340 'irrelevant_change' 'unsigned int'
    |     |-CompoundAssignOperator 0x11e947558 <line:23:4, col:29> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     | |-CXXDependentScopeMemberExpr 0x11e947448 <col:4, col:19> '<dependent type>' contains-errors lvalue .flags
    |     | | `-RecoveryExpr 0x11e947420 <col:4, col:12> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x11e9473e8 <col:4> 'struct commit *' lvalue ParmVar 0x11e940a28 'commit' 'struct commit *'
    |     | `-UnaryOperator 0x11e947540 <col:28, col:29> '<dependent type>' contains-errors prefix '~' cannot overflow
    |     |   `-ImplicitCastExpr 0x11e947528 <col:29> '<dependent type>' contains-errors <LValueToRValue>
    |     |     `-RecoveryExpr 0x11e947508 <col:29> '<dependent type>' contains-errors lvalue
    |     `-CompoundAssignOperator 0x11e947698 <line:25:4, col:28> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |-CXXDependentScopeMemberExpr 0x11e9475e8 <col:4, col:19> '<dependent type>' contains-errors lvalue .flags
    |       | `-RecoveryExpr 0x11e9475c0 <col:4, col:12> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x11e947588 <col:4> 'struct commit *' lvalue ParmVar 0x11e940a28 'commit' 'struct commit *'
    |       `-RecoveryExpr 0x11e947678 <col:28> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11e9478a0 <line:28:2, col:32>
      `-BinaryOperator 0x11e947880 <col:9, col:32> '<dependent type>' contains-errors '&'
        |-CXXDependentScopeMemberExpr 0x11e9477e0 <col:9, col:24> '<dependent type>' contains-errors lvalue .flags
        | `-RecoveryExpr 0x11e9477b8 <col:9, col:17> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x11e947780 <col:9> 'struct commit *' lvalue ParmVar 0x11e940a28 'commit' 'struct commit *'
        `-RecoveryExpr 0x11e947860 <col:32> '<dependent type>' contains-errors lvalue
