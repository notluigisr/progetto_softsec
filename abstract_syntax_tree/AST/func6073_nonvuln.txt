TranslationUnitDecl 0x150053608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500544b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150053bd0 '__int128'
|-TypedefDecl 0x150054528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150053bf0 'unsigned __int128'
|-TypedefDecl 0x150124230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x150124000 'struct __NSConstantString_tag'
|   `-Record 0x150054580 '__NSConstantString_tag'
|-TypedefDecl 0x150124298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150053d90 '__SVInt8_t'
|-TypedefDecl 0x150124300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150053db0 '__SVInt16_t'
|-TypedefDecl 0x150124368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150053dd0 '__SVInt32_t'
|-TypedefDecl 0x1501243d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150053df0 '__SVInt64_t'
|-TypedefDecl 0x150124438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150053e10 '__SVUint8_t'
|-TypedefDecl 0x1501244a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150053e30 '__SVUint16_t'
|-TypedefDecl 0x150124508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150053e50 '__SVUint32_t'
|-TypedefDecl 0x150124570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150053e70 '__SVUint64_t'
|-TypedefDecl 0x1501245d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150053e90 '__SVFloat16_t'
|-TypedefDecl 0x150124640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150053eb0 '__SVFloat32_t'
|-TypedefDecl 0x1501246a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150053ed0 '__SVFloat64_t'
|-TypedefDecl 0x150124710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150053ef0 '__SVBfloat16_t'
|-TypedefDecl 0x150124778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150053f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1501247e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150053f30 '__clang_svint16x2_t'
|-TypedefDecl 0x150124848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150053f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1501248b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150053f70 '__clang_svint64x2_t'
|-TypedefDecl 0x150124918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150053f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x150124980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150053fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1501249e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150053fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x150124a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150053ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x150124ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150054010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150124b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150054030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150124b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150054050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x150124bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150054070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150124c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150054090 '__clang_svint8x3_t'
|-TypedefDecl 0x150124cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500540b0 '__clang_svint16x3_t'
|-TypedefDecl 0x150124d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1500540d0 '__clang_svint32x3_t'
|-TypedefDecl 0x150124d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1500540f0 '__clang_svint64x3_t'
|-TypedefDecl 0x150124df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150054110 '__clang_svuint8x3_t'
|-TypedefDecl 0x150124e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150054130 '__clang_svuint16x3_t'
|-TypedefDecl 0x150124ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150054150 '__clang_svuint32x3_t'
|-TypedefDecl 0x150124f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150054170 '__clang_svuint64x3_t'
|-TypedefDecl 0x150124f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150054190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150125800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500541b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150125868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1500541d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1501258d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1500541f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150125938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150054210 '__clang_svint8x4_t'
|-TypedefDecl 0x1501259a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150054230 '__clang_svint16x4_t'
|-TypedefDecl 0x150125a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150054250 '__clang_svint32x4_t'
|-TypedefDecl 0x150125a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150054270 '__clang_svint64x4_t'
|-TypedefDecl 0x150125ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150054290 '__clang_svuint8x4_t'
|-TypedefDecl 0x150125b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500542b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x150125ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1500542d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x150125c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1500542f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x150125c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150054310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x150125ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150054330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150125d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150054350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x150125db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150054370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150125e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150054390 '__SVBool_t'
|-TypedefDecl 0x150125e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500543b0 '__clang_svboolx2_t'
|-TypedefDecl 0x150125ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1500543d0 '__clang_svboolx4_t'
|-TypedefDecl 0x150125f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1500543f0 '__SVCount_t'
|-TypedefDecl 0x150125ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x150125fb0 'char *'
|   `-BuiltinType 0x1500536b0 'char'
|-TypedefDecl 0x150126068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x150125fb0 'char *'
|   `-BuiltinType 0x1500536b0 'char'
`-FunctionDecl 0x15013ed18 <dataset_diviso_filec/func6073_nonvuln.c:1:1, line:20:1> line:1:21 fanout_demux_rollover 'unsigned int (struct packet_fanout *, struct sk_buff *, unsigned int, unsigned int, unsigned int)' static
  |-ParmVarDecl 0x150126648 <col:43, col:65> col:65 used f 'struct packet_fanout *'
  |-ParmVarDecl 0x15013ea28 <line:2:8, col:24> col:24 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x15013eaa8 <line:3:8, col:21> col:21 used idx 'unsigned int'
  |-ParmVarDecl 0x15013eb28 <col:26, col:39> col:39 used skip 'unsigned int'
  |-ParmVarDecl 0x15013eba8 <line:4:8, col:21> col:21 used num 'unsigned int'
  `-CompoundStmt 0x150140ed8 <line:5:1, line:20:1>
    |-DeclStmt 0x15013ef48 <line:6:2, col:19>
    | |-VarDecl 0x15013ee48 <col:2, col:15> col:15 used i 'unsigned int'
    | `-VarDecl 0x15013eec8 <col:2, col:18> col:18 used j 'unsigned int'
    |-DoStmt 0x150140e70 <line:9:2, line:17:17>
    | |-CompoundStmt 0x15013f9b8 <line:9:5, line:17:2>
    | | |-IfStmt 0x15013f870 <line:10:3, line:14:3>
    | | | |-BinaryOperator 0x15013f628 <line:10:7, col:62> 'int' contains-errors '&&'
    | | | | |-BinaryOperator 0x15013f2c0 <col:7, col:12> 'int' '!='
    | | | | | |-ImplicitCastExpr 0x15013f290 <col:7> 'unsigned int' <LValueToRValue>
    | | | | | | `-DeclRefExpr 0x15013f250 <col:7> 'unsigned int' lvalue Var 0x15013ee48 'i' 'unsigned int'
    | | | | | `-ImplicitCastExpr 0x15013f2a8 <col:12> 'unsigned int' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x15013f270 <col:12> 'unsigned int' lvalue ParmVar 0x15013eb28 'skip' 'unsigned int'
    | | | | `-CallExpr 0x15013f5f8 <col:20, col:62> '<dependent type>' contains-errors
    | | | |   |-DeclRefExpr 0x15013f3c0 <col:20> 'int ()' Function 0x15013f308 'packet_rcv_has_room' 'int ()'
    | | | |   |-CallExpr 0x15013f5b0 <col:40, col:56> '<dependent type>' contains-errors
    | | | |   | |-DeclRefExpr 0x15013f4c0 <col:40> 'int ()' Function 0x15013f408 'pkt_sk' 'int ()'
    | | | |   | `-ArraySubscriptExpr 0x15013f590 <col:47, col:55> '<dependent type>' contains-errors lvalue
    | | | |   |   |-ImplicitCastExpr 0x15013f560 <col:47, col:50> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   |   | `-RecoveryExpr 0x15013f518 <col:47, col:50> '<dependent type>' contains-errors lvalue
    | | | |   |   |   `-DeclRefExpr 0x15013f4e0 <col:47> 'struct packet_fanout *' lvalue ParmVar 0x150126648 'f' 'struct packet_fanout *'
    | | | |   |   `-ImplicitCastExpr 0x15013f578 <col:54> 'unsigned int' <LValueToRValue>
    | | | |   |     `-DeclRefExpr 0x15013f540 <col:54> 'unsigned int' lvalue Var 0x15013ee48 'i' 'unsigned int'
    | | | |   `-DeclRefExpr 0x15013f5d8 <col:59> 'struct sk_buff *' lvalue ParmVar 0x15013ea28 'skb' 'struct sk_buff *'
    | | | `-CompoundStmt 0x15013f850 <col:65, line:14:3>
    | | |   |-IfStmt 0x15013f7e8 <line:11:4, line:12:20>
    | | |   | |-BinaryOperator 0x15013f6b8 <line:11:8, col:13> 'int' '!='
    | | |   | | |-ImplicitCastExpr 0x15013f688 <col:8> 'unsigned int' <LValueToRValue>
    | | |   | | | `-DeclRefExpr 0x15013f648 <col:8> 'unsigned int' lvalue Var 0x15013ee48 'i' 'unsigned int'
    | | |   | | `-ImplicitCastExpr 0x15013f6a0 <col:13> 'unsigned int' <LValueToRValue>
    | | |   | |   `-DeclRefExpr 0x15013f668 <col:13> 'unsigned int' lvalue Var 0x15013eec8 'j' 'unsigned int'
    | | |   | `-BinaryOperator 0x15013f7c8 <line:12:5, col:20> '<dependent type>' contains-errors '='
    | | |   |   |-ArraySubscriptExpr 0x15013f788 <col:5, col:16> '<dependent type>' contains-errors lvalue
    | | |   |   | |-ImplicitCastExpr 0x15013f758 <col:5, col:8> '<dependent type>' contains-errors <LValueToRValue>
    | | |   |   | | `-RecoveryExpr 0x15013f710 <col:5, col:8> '<dependent type>' contains-errors lvalue
    | | |   |   | |   `-DeclRefExpr 0x15013f6d8 <col:5> 'struct packet_fanout *' lvalue ParmVar 0x150126648 'f' 'struct packet_fanout *'
    | | |   |   | `-ImplicitCastExpr 0x15013f770 <col:13> 'unsigned int' <LValueToRValue>
    | | |   |   |   `-DeclRefExpr 0x15013f738 <col:13> 'unsigned int' lvalue ParmVar 0x15013eaa8 'idx' 'unsigned int'
    | | |   |   `-DeclRefExpr 0x15013f7a8 <col:20> 'unsigned int' lvalue Var 0x15013ee48 'i' 'unsigned int'
    | | |   `-ReturnStmt 0x15013f840 <line:13:4, col:11>
    | | |     `-ImplicitCastExpr 0x15013f828 <col:11> 'unsigned int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x15013f808 <col:11> 'unsigned int' lvalue Var 0x15013ee48 'i' 'unsigned int'
    | | `-IfStmt 0x15013f998 <line:15:3, line:16:8>
    | |   |-BinaryOperator 0x15013f900 <line:15:7, col:14> 'int' '=='
    | |   | |-UnaryOperator 0x15013f8b0 <col:7, col:9> 'unsigned int' prefix '++'
    | |   | | `-DeclRefExpr 0x15013f890 <col:9> 'unsigned int' lvalue Var 0x15013ee48 'i' 'unsigned int'
    | |   | `-ImplicitCastExpr 0x15013f8e8 <col:14> 'unsigned int' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x15013f8c8 <col:14> 'unsigned int' lvalue ParmVar 0x15013eba8 'num' 'unsigned int'
    | |   `-BinaryOperator 0x15013f978 <line:16:4, col:8> 'unsigned int' '='
    | |     |-DeclRefExpr 0x15013f920 <col:4> 'unsigned int' lvalue Var 0x15013ee48 'i' 'unsigned int'
    | |     `-ImplicitCastExpr 0x15013f960 <col:8> 'unsigned int' <IntegralCast>
    | |       `-IntegerLiteral 0x15013f940 <col:8> 'int' 0
    | `-BinaryOperator 0x150140e50 <line:17:11, col:16> 'int' '!='
    |   |-ImplicitCastExpr 0x150140e20 <col:11> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15013f9d8 <col:11> 'unsigned int' lvalue Var 0x15013ee48 'i' 'unsigned int'
    |   `-ImplicitCastExpr 0x150140e38 <col:16> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x150140e00 <col:16> 'unsigned int' lvalue Var 0x15013eec8 'j' 'unsigned int'
    `-ReturnStmt 0x150140ec8 <line:19:2, col:9>
      `-ImplicitCastExpr 0x150140eb0 <col:9> 'unsigned int' <LValueToRValue>
        `-DeclRefExpr 0x150140e90 <col:9> 'unsigned int' lvalue ParmVar 0x15013eaa8 'idx' 'unsigned int'
