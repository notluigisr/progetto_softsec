TranslationUnitDecl 0x149855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1498564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149855bd0 '__int128'
|-TypedefDecl 0x149856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149855bf0 'unsigned __int128'
|-TypedefDecl 0x149926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x149926000 'struct __NSConstantString_tag'
|   `-Record 0x149856580 '__NSConstantString_tag'
|-TypedefDecl 0x149926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149855d90 '__SVInt8_t'
|-TypedefDecl 0x149926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x149855db0 '__SVInt16_t'
|-TypedefDecl 0x149926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x149855dd0 '__SVInt32_t'
|-TypedefDecl 0x1499263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x149855df0 '__SVInt64_t'
|-TypedefDecl 0x149926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149855e10 '__SVUint8_t'
|-TypedefDecl 0x1499264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149855e30 '__SVUint16_t'
|-TypedefDecl 0x149926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149855e50 '__SVUint32_t'
|-TypedefDecl 0x149926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149855e70 '__SVUint64_t'
|-TypedefDecl 0x1499265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149855e90 '__SVFloat16_t'
|-TypedefDecl 0x149926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x149855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1499266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x149855ed0 '__SVFloat64_t'
|-TypedefDecl 0x149926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x149855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x149926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1499267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x149926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1499268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x149926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x149926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x149855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1499269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x149855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x149926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x149855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x149926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x149926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x149926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x149926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x149926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149856090 '__clang_svint8x3_t'
|-TypedefDecl 0x149926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1498560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x149926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1498560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x149926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1498560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x149926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x149926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x149926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x149926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x149926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x149927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1498561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x149927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1498561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1499278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1498561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x149927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1499279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149856230 '__clang_svint16x4_t'
|-TypedefDecl 0x149927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149856250 '__clang_svint32x4_t'
|-TypedefDecl 0x149927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149856270 '__clang_svint64x4_t'
|-TypedefDecl 0x149927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x149927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1498562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x149927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1498562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x149927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1498562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x149927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x149927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x149927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x149927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x149927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149856390 '__SVBool_t'
|-TypedefDecl 0x149927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1498563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x149927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1498563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x149927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1498563f0 '__SVCount_t'
|-TypedefDecl 0x149927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x149927fb0 'char *'
|   `-BuiltinType 0x1498556b0 'char'
|-TypedefDecl 0x149928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x149927fb0 'char *'
|   `-BuiltinType 0x1498556b0 'char'
|-FunctionDecl 0x1499286a0 <dataset_diviso_filec/func16390_nonvuln.c:1:1, line:36:22> line:2:1 invalid encode_named_val 'void (int *, char *, char *, char **, char **, int *, int *, char *, int *)' static
| |-ParmVarDecl 0x149928128 <col:19, col:43> col:43 invalid assembly 'int *'
| |-ParmVarDecl 0x1499281a8 <col:53, col:59> col:59 used buffer 'char *'
| |-ParmVarDecl 0x149928228 <col:67, col:73> col:73 used p 'char *'
| |-ParmVarDecl 0x1499282d8 <col:76, col:83> col:83 used retbuffer 'char **'
| |-ParmVarDecl 0x149928358 <col:94, col:101> col:101 used retp 'char **'
| |-ParmVarDecl 0x1499283d8 <col:107, col:116> col:116 invalid buflen 'int *'
| |-ParmVarDecl 0x149928458 <col:124, col:134> col:134 invalid type 'int *'
| |-ParmVarDecl 0x1499284d8 <col:140, col:146> col:146 used name 'char *'
| |-ParmVarDecl 0x149928558 <col:152, col:164> col:164 invalid value 'int *'
| `-CompoundStmt 0x14a009948 <line:3:1, line:36:22>
|   |-DeclStmt 0x149941868 <line:4:2, col:9>
|   | `-VarDecl 0x149941800 <col:2, col:6> col:6 used len 'int'
|   |-IfStmt 0x149943b68 <line:6:2, line:16:2> has_else
|   | |-BinaryOperator 0x149941a78 <line:6:6, col:61> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x149941a58 <col:6, col:20> 'int' contains-errors '=='
|   | | | |-CXXDependentScopeMemberExpr 0x1499418a0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->type
|   | | | | `-RecoveryExpr 0x149941880 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x149941a38 <col:20> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x1499419d0 <col:43, col:61> '<dependent type>' contains-errors lvalue ->enumtype
|   | |   `-CXXDependentScopeMemberExpr 0x149941988 <col:43, col:54> '<dependent type>' contains-errors lvalue .klass
|   | |     `-CXXDependentScopeMemberExpr 0x149941940 <col:43, col:49> '<dependent type>' contains-errors lvalue ->data
|   | |       `-RecoveryExpr 0x149941920 <col:43> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x149942638 <col:71, line:10:2>
|   | | |-DeclStmt 0x149941d48 <line:7:3, col:51>
|   | | | `-VarDecl 0x149941ab0 <col:3, col:50> col:9 used str 'char *' cinit
|   | | |   `-CallExpr 0x149941d18 <col:15, col:50> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x149941c70 <col:15> 'int ()' Function 0x149941bb8 'type_get_qualified_name' 'int ()'
|   | | |     |-RecoveryExpr 0x149941c90 <col:40> '<dependent type>' contains-errors lvalue
|   | | |     `-RecoveryExpr 0x149941cf8 <col:46> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x149942468 <line:8:3, col:20> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x149941d60 <col:3> 'int' lvalue Var 0x149941800 'len' 'int'
|   | | | `-ImplicitCastExpr 0x149942450 <col:9, col:20> 'int' contains-errors <IntegralCast>
|   | | |   `-CallExpr 0x1499423f8 <col:9, col:20> 'unsigned long' contains-errors
|   | | |     |-ImplicitCastExpr 0x1499423e0 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x149942350 <col:9> 'unsigned long (const char *)' Function 0x1499421e0 'strlen' 'unsigned long (const char *)'
|   | | |     `-ImplicitCastExpr 0x149942438 <col:17> 'const char *' contains-errors <NoOp>
|   | | |       `-ImplicitCastExpr 0x149942420 <col:17> 'char *' contains-errors <LValueToRValue>
|   | | |         `-DeclRefExpr 0x149942370 <col:17> 'char *' contains-errors lvalue Var 0x149941ab0 'str' 'char *'
|   | | `-CallExpr 0x1499425f8 <line:9:3, col:14> 'int' contains-errors
|   | |   |-ImplicitCastExpr 0x1499425e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x149942568 <col:3> 'int ()' Function 0x1499424b0 'g_free' 'int ()'
|   | |   `-ImplicitCastExpr 0x149942620 <col:11> 'char *' contains-errors <LValueToRValue>
|   | |     `-DeclRefExpr 0x149942588 <col:11> 'char *' contains-errors lvalue Var 0x149941ab0 'str' 'char *'
|   | `-IfStmt 0x149943b38 <line:10:9, line:16:2> has_else
|   |   |-BinaryOperator 0x149943660 <line:10:13, col:66> 'int' contains-errors '&&'
|   |   | |-BinaryOperator 0x149943640 <col:13, col:27> 'int' contains-errors '=='
|   |   | | |-CXXDependentScopeMemberExpr 0x149942680 <col:13, col:19> '<dependent type>' contains-errors lvalue ->type
|   |   | | | `-RecoveryExpr 0x149942660 <col:13> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x149943620 <col:27> '<dependent type>' contains-errors lvalue
|   |   | `-CXXDependentScopeMemberExpr 0x1499427b0 <col:48, col:66> '<dependent type>' contains-errors lvalue ->enumtype
|   |   |   `-CXXDependentScopeMemberExpr 0x149942768 <col:48, col:59> '<dependent type>' contains-errors lvalue .klass
|   |   |     `-CXXDependentScopeMemberExpr 0x149942720 <col:48, col:54> '<dependent type>' contains-errors lvalue ->data
|   |   |       `-RecoveryExpr 0x149942700 <col:48> '<dependent type>' contains-errors lvalue
|   |   |-CompoundStmt 0x149943a98 <col:76, line:14:2>
|   |   | |-DeclStmt 0x1499438c8 <line:11:3, col:75>
|   |   | | `-VarDecl 0x149943698 <col:3, col:74> col:9 used str 'char *' cinit
|   |   | |   `-CallExpr 0x149943898 <col:15, col:74> '<dependent type>' contains-errors
|   |   | |     |-DeclRefExpr 0x149943700 <col:15> 'int ()' Function 0x149941bb8 'type_get_qualified_name' 'int ()'
|   |   | |     |-UnaryOperator 0x149943818 <col:40, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | |     | `-CXXDependentScopeMemberExpr 0x1499437d0 <col:41, col:59> '<dependent type>' contains-errors lvalue ->byval_arg
|   |   | |     |   `-CXXDependentScopeMemberExpr 0x149943788 <col:41, col:52> '<dependent type>' contains-errors lvalue .klass
|   |   | |     |     `-CXXDependentScopeMemberExpr 0x149943740 <col:41, col:47> '<dependent type>' contains-errors lvalue ->data
|   |   | |     |       `-RecoveryExpr 0x149943720 <col:41> '<dependent type>' contains-errors lvalue
|   |   | |     `-RecoveryExpr 0x149943878 <col:70> '<dependent type>' contains-errors lvalue
|   |   | |-BinaryOperator 0x1499439e0 <line:12:3, col:20> 'int' contains-errors '='
|   |   | | |-DeclRefExpr 0x1499438e0 <col:3> 'int' lvalue Var 0x149941800 'len' 'int'
|   |   | | `-ImplicitCastExpr 0x1499439c8 <col:9, col:20> 'int' contains-errors <IntegralCast>
|   |   | |   `-CallExpr 0x149943970 <col:9, col:20> 'unsigned long' contains-errors
|   |   | |     |-ImplicitCastExpr 0x149943958 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x149943900 <col:9> 'unsigned long (const char *)' Function 0x1499421e0 'strlen' 'unsigned long (const char *)'
|   |   | |     `-ImplicitCastExpr 0x1499439b0 <col:17> 'const char *' contains-errors <NoOp>
|   |   | |       `-ImplicitCastExpr 0x149943998 <col:17> 'char *' contains-errors <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x149943920 <col:17> 'char *' contains-errors lvalue Var 0x149943698 'str' 'char *'
|   |   | `-CallExpr 0x149943a58 <line:13:3, col:14> 'int' contains-errors
|   |   |   |-ImplicitCastExpr 0x149943a40 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x149943a00 <col:3> 'int ()' Function 0x1499424b0 'g_free' 'int ()'
|   |   |   `-ImplicitCastExpr 0x149943a80 <col:11> 'char *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x149943a20 <col:11> 'char *' contains-errors lvalue Var 0x149943698 'str' 'char *'
|   |   `-CompoundStmt 0x149943b20 <line:14:9, line:16:2>
|   |     `-BinaryOperator 0x149943b00 <line:15:3, col:9> 'int' '='
|   |       |-DeclRefExpr 0x149943ac0 <col:3> 'int' lvalue Var 0x149941800 'len' 'int'
|   |       `-IntegerLiteral 0x149943ae0 <col:9> 'int' 0
|   |-CompoundAssignOperator 0x149943c80 <line:17:2, col:21> 'int' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   | |-DeclRefExpr 0x149943b98 <col:2> 'int' lvalue Var 0x149941800 'len' 'int'
|   | `-CallExpr 0x149943c28 <col:9, col:21> 'unsigned long'
|   |   |-ImplicitCastExpr 0x149943c10 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x149943bb8 <col:9> 'unsigned long (const char *)' Function 0x1499421e0 'strlen' 'unsigned long (const char *)'
|   |   `-ImplicitCastExpr 0x149943c68 <col:17> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x149943c50 <col:17> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x149943bd8 <col:17> 'char *' lvalue ParmVar 0x1499284d8 'name' 'char *'
|   |-IfStmt 0x149944450 <line:19:2, line:26:2>
|   | |-BinaryOperator 0x149943e78 <line:19:6, col:32> 'int' contains-errors '>='
|   | | |-BinaryOperator 0x149943e08 <col:6, col:24> 'long' '+'
|   | | | |-BinaryOperator 0x149943d98 <col:6, col:19> 'long' '+'
|   | | | | |-ParenExpr 0x149943d40 <col:6, col:15> 'long'
|   | | | | | `-BinaryOperator 0x149943d20 <col:7, col:9> 'long' '-'
|   | | | | |   |-ImplicitCastExpr 0x149943cf0 <col:7> 'char *' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x149943cb0 <col:7> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   | | | | |   `-ImplicitCastExpr 0x149943d08 <col:9> 'char *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x149943cd0 <col:9> 'char *' lvalue ParmVar 0x1499281a8 'buffer' 'char *'
|   | | | | `-ImplicitCastExpr 0x149943d80 <col:19> 'long' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x149943d60 <col:19> 'int' 20
|   | | | `-ImplicitCastExpr 0x149943df0 <col:24> 'long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x149943dd8 <col:24> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x149943db8 <col:24> 'int' lvalue Var 0x149941800 'len' 'int'
|   | | `-UnaryOperator 0x149943e60 <col:31, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x149943e48 <col:32> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x149943e28 <col:32> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x149944410 <col:40, line:26:2>
|   |   |-DeclStmt 0x149943f18 <line:20:3, col:15>
|   |   | `-VarDecl 0x149943eb0 <col:3, col:9> col:9 used newbuf 'char *'
|   |   |-CompoundAssignOperator 0x149943fa0 <line:21:3, col:14> '<dependent type>' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-UnaryOperator 0x149943f68 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x149943f50 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x149943f30 <col:4> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x149943f80 <col:14> 'int' 2
|   |   |-CompoundAssignOperator 0x149944040 <line:22:3, col:14> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-UnaryOperator 0x149944008 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x149943ff0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x149943fd0 <col:4> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x149944020 <col:14> 'int' lvalue Var 0x149941800 'len' 'int'
|   |   |-BinaryOperator 0x149944230 <line:23:3, col:38> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x149944070 <col:3> 'char *' lvalue Var 0x149943eb0 'newbuf' 'char *'
|   |   | `-CallExpr 0x149944200 <col:12, col:38> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x149944170 <col:12> 'int ()' Function 0x1499440b8 'g_realloc' 'int ()'
|   |   |   |-DeclRefExpr 0x149944190 <col:23> 'char *' lvalue ParmVar 0x1499281a8 'buffer' 'char *'
|   |   |   `-UnaryOperator 0x1499441e8 <col:31, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x1499441d0 <col:32> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-RecoveryExpr 0x1499441b0 <col:32> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x149944378 <line:24:3, col:25> 'char *' '='
|   |   | |-DeclRefExpr 0x149944250 <col:3> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   |   | `-BinaryOperator 0x149944358 <col:7, col:25> 'char *' '+'
|   |   |   |-ImplicitCastExpr 0x149944340 <col:7> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x149944270 <col:7> 'char *' lvalue Var 0x149943eb0 'newbuf' 'char *'
|   |   |   `-ParenExpr 0x149944320 <col:16, col:25> 'long'
|   |   |     `-BinaryOperator 0x149944300 <col:17, col:19> 'long' '-'
|   |   |       |-ImplicitCastExpr 0x1499442d0 <col:17> 'char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x149944290 <col:17> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   |   |       `-ImplicitCastExpr 0x1499442e8 <col:19> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1499442b0 <col:19> 'char *' lvalue ParmVar 0x1499281a8 'buffer' 'char *'
|   |   `-BinaryOperator 0x1499443f0 <line:25:3, col:12> 'char *' '='
|   |     |-DeclRefExpr 0x149944398 <col:3> 'char *' lvalue ParmVar 0x1499281a8 'buffer' 'char *'
|   |     `-ImplicitCastExpr 0x1499443d8 <col:12> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1499443b8 <col:12> 'char *' lvalue Var 0x149943eb0 'newbuf' 'char *'
|   |-CallExpr 0x14a008c00 <line:28:2, col:40> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x149944550 <col:2> 'int ()' Function 0x149944498 'encode_field_or_prop_type' 'int ()'
|   | |-RecoveryExpr 0x149944570 <col:29> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x149944590 <col:35> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   | `-UnaryOperator 0x1499445d0 <col:38, col:39> 'char **' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1499445b0 <col:39> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   |-BinaryOperator 0x14a008d38 <line:30:2, col:20> 'int' '='
|   | |-DeclRefExpr 0x14a008c38 <col:2> 'int' lvalue Var 0x149941800 'len' 'int'
|   | `-ImplicitCastExpr 0x14a008d20 <col:8, col:20> 'int' <IntegralCast>
|   |   `-CallExpr 0x14a008cc8 <col:8, col:20> 'unsigned long'
|   |     |-ImplicitCastExpr 0x14a008cb0 <col:8> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14a008c58 <col:8> 'unsigned long (const char *)' Function 0x1499421e0 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x14a008d08 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x14a008cf0 <col:16> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14a008c78 <col:16> 'char *' lvalue ParmVar 0x1499284d8 'name' 'char *'
|   |-CallExpr 0x14a008ee8 <line:31:2, col:40> 'int'
|   | |-ImplicitCastExpr 0x14a008ed0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14a008e38 <col:2> 'int ()' Function 0x14a008d80 'mono_metadata_encode_value' 'int ()'
|   | |-ImplicitCastExpr 0x14a008f20 <col:30> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x14a008e58 <col:30> 'int' lvalue Var 0x149941800 'len' 'int'
|   | |-ImplicitCastExpr 0x14a008f38 <col:35> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x14a008e78 <col:35> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   | `-UnaryOperator 0x14a008eb8 <col:38, col:39> 'char **' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x14a008e98 <col:39> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   |-CallExpr 0x14a009328 <line:32:2, col:22> 'void *'
|   | |-ImplicitCastExpr 0x14a009310 <col:2> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14a009218 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x14a008fc8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-ImplicitCastExpr 0x14a009378 <col:10> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x14a009360 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a009238 <col:10> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   | |-ImplicitCastExpr 0x14a0093a8 <col:13> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x14a009390 <col:13> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a009258 <col:13> 'char *' lvalue ParmVar 0x1499284d8 'name' 'char *'
|   | `-ImplicitCastExpr 0x14a0093d8 <col:19> 'unsigned long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x14a0093c0 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14a009278 <col:19> 'int' lvalue Var 0x149941800 'len' 'int'
|   |-CompoundAssignOperator 0x14a009448 <line:33:2, col:7> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x14a0093f0 <col:2> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   | `-ImplicitCastExpr 0x14a009430 <col:7> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x14a009410 <col:7> 'int' lvalue Var 0x149941800 'len' 'int'
|   |-CallExpr 0x14a009790 <line:34:2, col:91> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14a009558 <col:2> 'int ()' Function 0x14a0094a0 'encode_cattr_value' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x14a009598 <col:22, col:32> '<dependent type>' contains-errors lvalue ->assembly
|   | | `-RecoveryExpr 0x14a009578 <col:22> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x14a0095e0 <col:42> 'char *' lvalue ParmVar 0x1499281a8 'buffer' 'char *'
|   | |-DeclRefExpr 0x14a009600 <col:50> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   | |-UnaryOperator 0x14a009640 <col:53, col:54> 'char **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x14a009620 <col:54> 'char *' lvalue ParmVar 0x1499281a8 'buffer' 'char *'
|   | |-UnaryOperator 0x14a009678 <col:62, col:63> 'char **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x14a009658 <col:63> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   | |-RecoveryExpr 0x14a009690 <col:66> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x14a0096b0 <col:74> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x14a0096d0 <col:80> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x14a009770 <col:87> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14a009880 <line:35:2, col:10> 'char *' '='
|   | |-UnaryOperator 0x14a009830 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14a009818 <col:3> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a0097f8 <col:3> 'char **' lvalue ParmVar 0x149928358 'retp' 'char **'
|   | `-ImplicitCastExpr 0x14a009868 <col:10> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14a009848 <col:10> 'char *' lvalue ParmVar 0x149928228 'p' 'char *'
|   `-BinaryOperator 0x14a009928 <line:36:2, col:15> 'char *' '='
|     |-UnaryOperator 0x14a0098d8 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x14a0098c0 <col:3> 'char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x14a0098a0 <col:3> 'char **' lvalue ParmVar 0x1499282d8 'retbuffer' 'char **'
|     `-ImplicitCastExpr 0x14a009910 <col:15> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x14a0098f0 <col:15> 'char *' lvalue ParmVar 0x1499281a8 'buffer' 'char *'
|-FunctionDecl 0x1499421e0 <line:8:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1499422e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x149942288 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x14a008fc8 <line:32:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14a0090c8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14a009130 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14a009198 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14a009070 <<invalid sloc>> Implicit 882
