TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x137126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137126000 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x137126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x137126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x137126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x1371263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x137126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x1371264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x137126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x137126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x1371265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x137126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1371266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x137126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x137126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1371267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x137126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1371268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x137126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x137126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1371269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x137126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x137126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x137126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x137126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x137126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x137126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x137126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x137126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1371278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1371279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x137127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x137127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x137127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x137127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x137127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x137127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x137127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x137127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x137127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x137127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x137128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-FunctionDecl 0x1371281a8 <dataset_diviso_filec/func16332_nonvuln.c:1:1, line:13:1> line:1:1 ldns_strip_ws 'int (char *)'
| |-ParmVarDecl 0x1371280d8 <col:15, col:21> col:21 used line 'char *'
| `-CompoundStmt 0x137141790 <line:2:1, line:13:1>
|   |-DeclStmt 0x1371283f0 <line:3:2, col:20>
|   | |-VarDecl 0x1371282b8 <col:2, col:12> col:8 used s 'char *' cinit
|   | | `-ImplicitCastExpr 0x137128340 <col:12> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x137128320 <col:12> 'char *' lvalue ParmVar 0x1371280d8 'line' 'char *'
|   | `-VarDecl 0x137128370 <col:2, col:19> col:19 used e 'char *'
|   |-ForStmt 0x137140ee8 <line:5:2, line:6:3>
|   | |-BinaryOperator 0x137128460 <line:5:7, col:11> 'char *' '='
|   | | |-DeclRefExpr 0x137128408 <col:7> 'char *' lvalue Var 0x1371282b8 's' 'char *'
|   | | `-ImplicitCastExpr 0x137128448 <col:11> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x137128428 <col:11> 'char *' lvalue ParmVar 0x1371280d8 'line' 'char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x137140e88 <col:17, col:48> 'int' '&&'
|   | | |-ImplicitCastExpr 0x137140e70 <col:17, col:18> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x137140e58 <col:17, col:18> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1371284b8 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1371284a0 <col:18> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x137128480 <col:18> 'char *' lvalue Var 0x1371282b8 's' 'char *'
|   | | `-CallExpr 0x137140e18 <col:23, col:48> 'int'
|   | |   |-ImplicitCastExpr 0x137140e00 <col:23> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x137140d00 <col:23> 'int (int)' Function 0x137140b40 'isspace' 'int (int)'
|   | |   `-ImplicitCastExpr 0x137140e40 <col:31, col:47> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x137140da0 <col:31, col:47> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x137140d88 <col:46, col:47> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-UnaryOperator 0x137140d58 <col:46, col:47> 'char' lvalue prefix '*' cannot overflow
|   | |           `-ImplicitCastExpr 0x137140d40 <col:47> 'char *' <LValueToRValue>
|   | |             `-DeclRefExpr 0x137140d20 <col:47> 'char *' lvalue Var 0x1371282b8 's' 'char *'
|   | |-UnaryOperator 0x137140ec8 <col:51, col:52> 'char *' postfix '++'
|   | | `-DeclRefExpr 0x137140ea8 <col:51> 'char *' lvalue Var 0x1371282b8 's' 'char *'
|   | `-NullStmt 0x137140ee0 <line:6:3>
|   |-ForStmt 0x137141650 <line:8:2, line:9:3>
|   | |-BinaryOperator 0x137141288 <line:8:7, col:22> 'char *' '='
|   | | |-DeclRefExpr 0x137140f20 <col:7> 'char *' lvalue Var 0x137128370 'e' 'char *'
|   | | `-CallExpr 0x137141228 <col:11, col:22> 'char *'
|   | |   |-ImplicitCastExpr 0x137141210 <col:11> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x137141160 <col:11> 'char *(const char *, int)' Function 0x137140f80 'strchr' 'char *(const char *, int)'
|   | |   |-ImplicitCastExpr 0x137141270 <col:18> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x137141258 <col:18> 'char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x137141180 <col:18> 'char *' lvalue Var 0x1371282b8 's' 'char *'
|   | |   `-IntegerLiteral 0x1371411a0 <col:21> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1371415f0 <col:25, col:78> 'int' '&&'
|   | | |-BinaryOperator 0x1371414d8 <col:25, col:64> 'int' '&&'
|   | | | |-BinaryOperator 0x137141358 <col:25, col:31> 'int' '>'
|   | | | | |-ImplicitCastExpr 0x137141340 <col:25> 'char *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x1371412a8 <col:25> 'char *' lvalue Var 0x137128370 'e' 'char *'
|   | | | | `-BinaryOperator 0x137141320 <col:29, col:31> 'char *' '+'
|   | | | |   |-ImplicitCastExpr 0x137141308 <col:29> 'char *' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x1371412c8 <col:29> 'char *' lvalue Var 0x1371282b8 's' 'char *'
|   | | | |   `-IntegerLiteral 0x1371412e8 <col:31> 'int' 2
|   | | | `-CallExpr 0x137141498 <col:36, col:64> 'int'
|   | | |   |-ImplicitCastExpr 0x137141480 <col:36> 'int (*)(int)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x137141378 <col:36> 'int (int)' Function 0x137140b40 'isspace' 'int (int)'
|   | | |   `-ImplicitCastExpr 0x1371414c0 <col:44, col:63> 'int' <IntegralCast>
|   | | |     `-CStyleCastExpr 0x137141458 <col:44, col:63> 'unsigned char' <IntegralCast>
|   | | |       `-ImplicitCastExpr 0x137141440 <col:59, col:63> 'char' <LValueToRValue> part_of_explicit_cast
|   | | |         `-ArraySubscriptExpr 0x137141408 <col:59, col:63> 'char' lvalue
|   | | |           |-ImplicitCastExpr 0x1371413f0 <col:59> 'char *' <LValueToRValue>
|   | | |           | `-DeclRefExpr 0x137141398 <col:59> 'char *' lvalue Var 0x137128370 'e' 'char *'
|   | | |           `-UnaryOperator 0x1371413d8 <col:61, col:62> 'int' prefix '-'
|   | | |             `-IntegerLiteral 0x1371413b8 <col:62> 'int' 1
|   | | `-BinaryOperator 0x1371415d0 <col:69, col:78> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1371415b8 <col:69, col:73> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1371415a0 <col:69, col:73> 'char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x137141568 <col:69, col:73> 'char' lvalue
|   | |   |     |-ImplicitCastExpr 0x137141550 <col:69> 'char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x1371414f8 <col:69> 'char *' lvalue Var 0x137128370 'e' 'char *'
|   | |   |     `-UnaryOperator 0x137141538 <col:71, col:72> 'int' prefix '-'
|   | |   |       `-IntegerLiteral 0x137141518 <col:72> 'int' 2
|   | |   `-CharacterLiteral 0x137141588 <col:78> 'int' 92
|   | |-UnaryOperator 0x137141630 <col:84, col:85> 'char *' postfix '--'
|   | | `-DeclRefExpr 0x137141610 <col:84> 'char *' lvalue Var 0x137128370 'e' 'char *'
|   | `-NullStmt 0x137141648 <line:9:3>
|   |-BinaryOperator 0x137141710 <line:10:2, col:7> 'char' '='
|   | |-UnaryOperator 0x1371416c0 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1371416a8 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x137141688 <col:3> 'char *' lvalue Var 0x137128370 'e' 'char *'
|   | `-ImplicitCastExpr 0x1371416f8 <col:7> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x1371416d8 <col:7> 'int' 0
|   `-ReturnStmt 0x137141780 <line:12:2, col:9>
|     `-ImplicitCastExpr 0x137141768 <col:9> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x137141750 <col:9> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x137141730 <col:9> 'char *' lvalue Var 0x1371282b8 's' 'char *'
|-FunctionDecl 0x137140b40 <line:5:23> col:23 implicit used isspace 'int (int)' extern
| |-ParmVarDecl 0x137140c40 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x137140be8 <<invalid sloc>> Implicit 929
| |-NoThrowAttr 0x137140cb0 <col:23> Implicit
| `-PureAttr 0x137140cd8 <col:23> Implicit
`-FunctionDecl 0x137140f80 <line:8:11> col:11 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x137141080 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1371410e8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x137141028 <<invalid sloc>> Implicit 893
