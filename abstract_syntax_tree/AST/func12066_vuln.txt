TranslationUnitDecl 0x14c038e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c039cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c0393d0 '__int128'
|-TypedefDecl 0x14c039d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c0393f0 'unsigned __int128'
|-TypedefDecl 0x15c01d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15c01d600 'struct __NSConstantString_tag'
|   `-Record 0x14c039d80 '__NSConstantString_tag'
|-TypedefDecl 0x15c01d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c039590 '__SVInt8_t'
|-TypedefDecl 0x15c01d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c0395b0 '__SVInt16_t'
|-TypedefDecl 0x15c01d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c0395d0 '__SVInt32_t'
|-TypedefDecl 0x15c01d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c0395f0 '__SVInt64_t'
|-TypedefDecl 0x15c01da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c039610 '__SVUint8_t'
|-TypedefDecl 0x15c01daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c039630 '__SVUint16_t'
|-TypedefDecl 0x15c01db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c039650 '__SVUint32_t'
|-TypedefDecl 0x15c01db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c039670 '__SVUint64_t'
|-TypedefDecl 0x15c01dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c039690 '__SVFloat16_t'
|-TypedefDecl 0x15c01dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c0396b0 '__SVFloat32_t'
|-TypedefDecl 0x15c01dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c0396d0 '__SVFloat64_t'
|-TypedefDecl 0x15c01dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c0396f0 '__SVBfloat16_t'
|-TypedefDecl 0x15c01dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c039710 '__clang_svint8x2_t'
|-TypedefDecl 0x15c01dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c039730 '__clang_svint16x2_t'
|-TypedefDecl 0x15c01de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c039750 '__clang_svint32x2_t'
|-TypedefDecl 0x15c01deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c039770 '__clang_svint64x2_t'
|-TypedefDecl 0x15c01df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c039790 '__clang_svuint8x2_t'
|-TypedefDecl 0x15c01df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c0397b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15c01dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c0397d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15c01e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c0397f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15c01e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c039810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15c01e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c039830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15c01e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c039850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15c01e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c039870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15c01e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c039890 '__clang_svint8x3_t'
|-TypedefDecl 0x15c01e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c0398b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15c01e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c0398d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15c01e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c0398f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15c01e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c039910 '__clang_svuint8x3_t'
|-TypedefDecl 0x15c01e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c039930 '__clang_svuint16x3_t'
|-TypedefDecl 0x15c01e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c039950 '__clang_svuint32x3_t'
|-TypedefDecl 0x15c01e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c039970 '__clang_svuint64x3_t'
|-TypedefDecl 0x15c01e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c039990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15c01ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c0399b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15c01ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c0399d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15c01ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c0399f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15c01eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c039a10 '__clang_svint8x4_t'
|-TypedefDecl 0x15c01eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c039a30 '__clang_svint16x4_t'
|-TypedefDecl 0x15c01ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c039a50 '__clang_svint32x4_t'
|-TypedefDecl 0x15c01ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c039a70 '__clang_svint64x4_t'
|-TypedefDecl 0x15c01ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c039a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x15c01ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c039ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15c01eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c039ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15c01ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c039af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15c01ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c039b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15c01eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c039b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15c01ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c039b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15c01efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c039b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15c01f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c039b90 '__SVBool_t'
|-TypedefDecl 0x15c01f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c039bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x15c01f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c039bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x15c01f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c039bf0 '__SVCount_t'
|-TypedefDecl 0x15c01f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15c01f1b0 'char *'
|   `-BuiltinType 0x14c038eb0 'char'
|-TypedefDecl 0x15c01f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15c01f1b0 'char *'
|   `-BuiltinType 0x14c038eb0 'char'
|-FunctionDecl 0x15c01f518 <dataset_diviso_filec/func12066_vuln.c:1:1, line:52:1> line:1:12 invalid add_array_entry 'int (const char *, int *, char *)' static
| |-ParmVarDecl 0x15c01f2d8 <col:28, col:40> col:40 used loc_name 'const char *'
| |-ParmVarDecl 0x15c01f3a8 <col:50, col:56> col:56 invalid hash_arr 'int *'
| |-ParmVarDecl 0x15c01f428 <col:66, col:72> col:72 used key_name 'char *'
| `-CompoundStmt 0x14d809100 <line:2:1, line:52:1>
|   |-DeclStmt 0x15c01f690 <line:3:2, col:27>
|   | `-VarDecl 0x15c01f5f0 <col:2, col:23> col:10 used key_value 'char *' cinit
|   |   `-RecoveryExpr 0x15c01f670 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15c01f760 <line:4:2, col:29>
|   | `-VarDecl 0x15c01f6c0 <col:2, col:25> col:10 used cur_key_name 'char *' cinit
|   |   `-RecoveryExpr 0x15c01f740 <col:25> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15c01f830 <line:5:2, col:30>
|   | `-VarDecl 0x15c01f790 <col:2, col:26> col:10 used token 'char *' cinit
|   |   `-RecoveryExpr 0x15c01f810 <col:26> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15c01f900 <line:6:2, col:27>
|   | `-VarDecl 0x15c01f860 <col:2, col:23> col:10 used last_ptr 'char *' cinit
|   |   `-RecoveryExpr 0x15c01f8e0 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15c01f9b8 <line:8:2, col:17>
|   | `-VarDecl 0x15c01f930 <col:2, col:16> col:6 used result 'int' cinit
|   |   `-IntegerLiteral 0x15c01f998 <col:16> 'int' 0
|   |-DeclStmt 0x15c044288 <line:9:2, col:23>
|   | `-VarDecl 0x15c044200 <col:2, col:22> col:7 used cur_result 'int' cinit
|   |   `-IntegerLiteral 0x15c044268 <col:22> 'int' 0
|   |-DeclStmt 0x15c044340 <line:10:2, col:17>
|   | `-VarDecl 0x15c0442b8 <col:2, col:16> col:7 used cnt 'int' cinit
|   |   `-IntegerLiteral 0x15c044320 <col:16> 'int' 0
|   |-IfStmt 0x15c0450c0 <line:13:2, line:18:2> has_else
|   | |-BinaryOperator 0x15c044b18 <line:13:6, col:42> 'int' contains-errors '=='
|   | | |-CallExpr 0x15c044ae8 <col:6, col:39> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x15c0449a0 <col:6> 'int (const char *, const char *)' Function 0x15c0447c0 'strcmp' 'int (const char *, const char *)'
|   | | | |-DeclRefExpr 0x15c0449c0 <col:13> 'char *' lvalue ParmVar 0x15c01f428 'key_name' 'char *'
|   | | | `-RecoveryExpr 0x15c044a98 <col:24> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x15c044a58 <col:42> 'int' 0
|   | |-CompoundStmt 0x15c044e10 <col:45, line:16:2>
|   | | |-BinaryOperator 0x15c044d90 <line:14:3, col:45> 'char *' contains-errors '='
|   | | | |-DeclRefExpr 0x15c044b38 <col:3> 'char *' contains-errors lvalue Var 0x15c01f5f0 'key_value' 'char *'
|   | | | `-ImplicitCastExpr 0x15c044d78 <col:15, col:45> 'char *' <IntegralToPointer>
|   | | |   `-CallExpr 0x15c044d38 <col:15, col:45> 'int'
|   | | |     |-ImplicitCastExpr 0x15c044d20 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x15c044cb0 <col:15> 'int ()' Function 0x15c044bf8 'get_private_subtags' 'int ()'
|   | | |     `-ImplicitCastExpr 0x15c044d60 <col:36> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x15c044cd0 <col:36> 'const char *' lvalue ParmVar 0x15c01f2d8 'loc_name' 'const char *'
|   | | `-BinaryOperator 0x15c044df0 <line:15:3, col:12> 'int' '='
|   | |   |-DeclRefExpr 0x15c044db0 <col:3> 'int' lvalue Var 0x15c01f930 'result' 'int'
|   | |   `-IntegerLiteral 0x15c044dd0 <col:12> 'int' 1
|   | `-CompoundStmt 0x15c0450a8 <line:16:9, line:18:2>
|   |   `-BinaryOperator 0x15c045088 <line:17:3, col:71> 'char *' contains-errors '='
|   |     |-DeclRefExpr 0x15c044e30 <col:3> 'char *' contains-errors lvalue Var 0x15c01f5f0 'key_value' 'char *'
|   |     `-ImplicitCastExpr 0x15c045070 <col:15, col:71> 'char *' <IntegralToPointer>
|   |       `-CallExpr 0x15c045000 <col:15, col:71> 'int'
|   |         |-ImplicitCastExpr 0x15c044fe8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x15c044f30 <col:15> 'int ()' Function 0x15c044e78 'get_icu_value_internal' 'int ()'
|   |         |-ImplicitCastExpr 0x15c045040 <col:39> 'const char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x15c044f50 <col:39> 'const char *' lvalue ParmVar 0x15c01f2d8 'loc_name' 'const char *'
|   |         |-ImplicitCastExpr 0x15c045058 <col:50> 'char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x15c044f70 <col:50> 'char *' lvalue ParmVar 0x15c01f428 'key_name' 'char *'
|   |         |-UnaryOperator 0x15c044fb0 <col:61, col:62> 'int *' prefix '&' cannot overflow
|   |         | `-DeclRefExpr 0x15c044f90 <col:62> 'int' lvalue Var 0x15c01f930 'result' 'int'
|   |         `-IntegerLiteral 0x15c044fc8 <col:69> 'int' 1
|   |-IfStmt 0x14d808e78 <line:19:2, line:42:2> has_else
|   | |-RecoveryExpr 0x14c8096f8 <line:19:6, line:20:42> '_Bool' contains-errors
|   | |-CompoundStmt 0x14d808cb8 <col:45, line:37:2>
|   | | `-IfStmt 0x14d808c98 <line:21:3, line:36:3>
|   | |   |-BinaryOperator 0x14c8097c8 <line:21:7, col:21> 'int' contains-errors '&&'
|   | |   | |-BinaryOperator 0x14c809770 <col:7, col:16> 'int' '>'
|   | |   | | |-ImplicitCastExpr 0x14c809758 <col:7> 'int' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x14c809718 <col:7> 'int' lvalue Var 0x15c01f930 'result' 'int'
|   | |   | | `-IntegerLiteral 0x14c809738 <col:16> 'int' 0
|   | |   | `-ImplicitCastExpr 0x14c8097b0 <col:21> 'char *' contains-errors <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x14c809790 <col:21> 'char *' contains-errors lvalue Var 0x15c01f5f0 'key_value' 'char *'
|   | |   `-CompoundStmt 0x14d808c60 <col:31, line:36:3>
|   | |     |-BinaryOperator 0x14c809a58 <line:23:4, col:58> 'char *' contains-errors '='
|   | |     | |-DeclRefExpr 0x14c8097e8 <col:4> 'char *' contains-errors lvalue Var 0x15c01f790 'token' 'char *'
|   | |     | `-CallExpr 0x14c809a20 <col:12, col:58> '<dependent type>' contains-errors
|   | |     |   |-DeclRefExpr 0x14c8098e8 <col:12> 'int ()' Function 0x14c809830 'php_strtok_r' 'int ()'
|   | |     |   |-DeclRefExpr 0x14c809908 <col:26> 'char *' contains-errors lvalue Var 0x15c01f5f0 'key_value' 'char *'
|   | |     |   |-RecoveryExpr 0x14c809a00 <col:38> '<dependent type>' contains-errors lvalue
|   | |     |   `-UnaryOperator 0x14c809990 <col:49, col:50> 'char **' contains-errors prefix '&' cannot overflow
|   | |     |     `-DeclRefExpr 0x14c809940 <col:50> 'char *' contains-errors lvalue Var 0x15c01f860 'last_ptr' 'char *'
|   | |     |-IfStmt 0x14c809c40 <line:24:4, line:26:4>
|   | |     | |-ImplicitCastExpr 0x14c809a98 <line:24:8> 'char *' contains-errors <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x14c809a78 <col:8> 'char *' contains-errors lvalue Var 0x15c01f6c0 'cur_key_name' 'char *'
|   | |     | `-CompoundStmt 0x14c809c28 <col:22, line:26:4>
|   | |     |   `-CallExpr 0x14c809be8 <line:25:5, col:24> 'int' contains-errors
|   | |     |     |-ImplicitCastExpr 0x14c809bd0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | |     |     | `-DeclRefExpr 0x14c809b90 <col:5> 'int ()' Function 0x14c809ad8 'efree' 'int ()'
|   | |     |     `-ImplicitCastExpr 0x14c809c10 <col:12> 'char *' contains-errors <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x14c809bb0 <col:12> 'char *' contains-errors lvalue Var 0x15c01f6c0 'cur_key_name' 'char *'
|   | |     |-BinaryOperator 0x14c809e48 <line:27:4, col:42> 'char *' contains-errors '='
|   | |     | |-DeclRefExpr 0x14c809c60 <col:4> 'char *' contains-errors lvalue Var 0x15c01f6c0 'cur_key_name' 'char *'
|   | |     | `-CStyleCastExpr 0x14c809e20 <col:19, col:42> 'char *' <IntegralToPointer>
|   | |     |   `-CallExpr 0x14c809dd8 <col:26, col:42> 'int'
|   | |     |     |-ImplicitCastExpr 0x14c809dc0 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   | |     |     | `-DeclRefExpr 0x14c809d60 <col:26> 'int ()' Function 0x14c809ca8 'ecalloc' 'int ()'
|   | |     |     |-IntegerLiteral 0x14c809d80 <col:35> 'int' 25
|   | |     |     `-IntegerLiteral 0x14c809da0 <col:40> 'int' 25
|   | |     |-CallExpr 0x14c80a248 <line:28:4, col:51> 'int' contains-errors
|   | |     | |-ImplicitCastExpr 0x14c80a230 <col:4> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x14c80a0d0 <col:4> 'int (char *, const char *, ...)' Function 0x14c809eb8 'sprintf' 'int (char *, const char *, ...)'
|   | |     | |-ImplicitCastExpr 0x14c80a288 <col:13> 'char *' contains-errors <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x14c80a0f0 <col:13> 'char *' contains-errors lvalue Var 0x15c01f6c0 'cur_key_name' 'char *'
|   | |     | |-ImplicitCastExpr 0x14c80a2b8 <col:28> 'const char *' <NoOp>
|   | |     | | `-ImplicitCastExpr 0x14c80a2a0 <col:28> 'char *' <ArrayToPointerDecay>
|   | |     | |   `-StringLiteral 0x14c80a150 <col:28> 'char[4]' lvalue "STR"
|   | |     | |-ImplicitCastExpr 0x14c80a2d0 <col:35> 'char *' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x14c80a170 <col:35> 'char *' lvalue ParmVar 0x15c01f428 'key_name' 'char *'
|   | |     | `-UnaryOperator 0x14c80a1b0 <col:46, col:49> 'int' postfix '++'
|   | |     |   `-DeclRefExpr 0x14c80a190 <col:46> 'int' lvalue Var 0x15c0442b8 'cnt' 'int'
|   | |     `-WhileStmt 0x14d808c40 <line:31:4, line:34:4>
|   | |       |-RecoveryExpr 0x14d8089e8 <line:31:11, col:83> '_Bool' contains-errors
|   | |       `-CompoundStmt 0x14d808c28 <col:86, line:34:4>
|   | |         `-CallExpr 0x14d808b08 <line:32:5, col:52> 'int' contains-errors
|   | |           |-ImplicitCastExpr 0x14d808af0 <col:5> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   | |           | `-DeclRefExpr 0x14d808a08 <col:5> 'int (char *, const char *, ...)' Function 0x14c809eb8 'sprintf' 'int (char *, const char *, ...)'
|   | |           |-ImplicitCastExpr 0x14d808b48 <col:14> 'char *' contains-errors <LValueToRValue>
|   | |           | `-DeclRefExpr 0x14d808a28 <col:14> 'char *' contains-errors lvalue Var 0x15c01f6c0 'cur_key_name' 'char *'
|   | |           |-ImplicitCastExpr 0x14d808b78 <col:29> 'const char *' <NoOp>
|   | |           | `-ImplicitCastExpr 0x14d808b60 <col:29> 'char *' <ArrayToPointerDecay>
|   | |           |   `-StringLiteral 0x14d808a48 <col:29> 'char[4]' lvalue "STR"
|   | |           |-ImplicitCastExpr 0x14d808b90 <col:36> 'char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x14d808a68 <col:36> 'char *' lvalue ParmVar 0x15c01f428 'key_name' 'char *'
|   | |           `-UnaryOperator 0x14d808aa8 <col:47, col:50> 'int' postfix '++'
|   | |             `-DeclRefExpr 0x14d808a88 <col:47> 'int' lvalue Var 0x15c0442b8 'cnt' 'int'
|   | `-CompoundStmt 0x14d808e60 <line:37:9, line:42:2>
|   |   `-IfStmt 0x14d808e40 <line:38:3, line:41:3>
|   |     |-BinaryOperator 0x14d808d28 <line:38:7, col:17> 'int' '=='
|   |     | |-ImplicitCastExpr 0x14d808d10 <col:7> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x14d808cd0 <col:7> 'int' lvalue Var 0x15c01f930 'result' 'int'
|   |     | `-IntegerLiteral 0x14d808cf0 <col:17> 'int' 1
|   |     `-CompoundStmt 0x14d808e28 <col:20, line:41:3>
|   |       `-BinaryOperator 0x14d808e08 <line:40:4, col:17> 'int' '='
|   |         |-DeclRefExpr 0x14d808dc8 <col:4> 'int' lvalue Var 0x15c044200 'cur_result' 'int'
|   |         `-IntegerLiteral 0x14d808de8 <col:17> 'int' 1
|   |-IfStmt 0x14d808f90 <line:44:2, line:46:2>
|   | |-ImplicitCastExpr 0x14d808ec8 <line:44:6> 'char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x14d808ea8 <col:6> 'char *' contains-errors lvalue Var 0x15c01f6c0 'cur_key_name' 'char *'
|   | `-CompoundStmt 0x14d808f78 <col:20, line:46:2>
|   |   `-CallExpr 0x14d808f38 <line:45:3, col:22> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x14d808f20 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14d808ee0 <col:3> 'int ()' Function 0x14c809ad8 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x14d808f60 <col:10> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x14d808f00 <col:10> 'char *' contains-errors lvalue Var 0x15c01f6c0 'cur_key_name' 'char *'
|   |-IfStmt 0x14d809098 <line:48:2, line:50:2>
|   | |-ImplicitCastExpr 0x14d808fd0 <line:48:6> 'char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x14d808fb0 <col:6> 'char *' contains-errors lvalue Var 0x15c01f5f0 'key_value' 'char *'
|   | `-CompoundStmt 0x14d809080 <col:16, line:50:2>
|   |   `-CallExpr 0x14d809040 <line:49:3, col:18> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x14d809028 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14d808fe8 <col:3> 'int ()' Function 0x14c809ad8 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x14d809068 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x14d809008 <col:9> 'char *' contains-errors lvalue Var 0x15c01f5f0 'key_value' 'char *'
|   `-ReturnStmt 0x14d8090f0 <line:51:2, col:9>
|     `-ImplicitCastExpr 0x14d8090d8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14d8090b8 <col:9> 'int' lvalue Var 0x15c044200 'cur_result' 'int'
|-FunctionDecl 0x15c0447c0 <line:13:6> col:6 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x15c0448c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15c044928 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15c044868 <<invalid sloc>> Implicit 887
|-FunctionDecl 0x14c809eb8 <line:28:4> col:4 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x14c809fb8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x14c80a020 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x14c809f60 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x14c80a098 <col:4> Implicit printf 2 3
`-FunctionDecl 0x14c80a4f8 <line:31:68> col:68 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x14d808800 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14c80a5a0 <<invalid sloc>> Implicit 902
