TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10480bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10480dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10480dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x1048274d8 <dataset_diviso_filec/func4794_nonvuln.c:1:1, line:40:1> line:1:9 invalid cli_bcapi_write 'int (struct cli_bc_ctx *, int *, int)'
| |-ParmVarDecl 0x10480e268 <col:25, col:44> col:44 used ctx 'struct cli_bc_ctx *'
| |-ParmVarDecl 0x10480e318 <col:49, col:57> col:57 invalid data 'int *'
| |-ParmVarDecl 0x10480e398 <col:63, col:71> col:71 invalid len 'int'
| `-CompoundStmt 0x10482aff8 <line:2:1, line:40:1>
|   |-DeclStmt 0x1048276a8 <line:3:5, col:18>
|   | `-VarDecl 0x104827640 <col:5, col:17> col:10 used err 'char[128]'
|   |-IfStmt 0x104827b80 <line:7:5, line:11:5>
|   | |-BinaryOperator 0x104827750 <line:7:9, col:15> 'int' contains-errors '<'
|   | | |-RecoveryExpr 0x104827710 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x104827730 <col:15> 'int' 0
|   | `-CompoundStmt 0x104827b58 <col:18, line:11:5>
|   |   |-CallExpr 0x104827998 <line:8:2, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x104827980 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1048278d0 <col:2> 'int ()' Function 0x104827818 'cli_warnmsg' 'int ()'
|   |   | `-ImplicitCastExpr 0x1048279c0 <col:14> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x104827930 <col:14> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x104827af0 <line:9:2, col:13> 'int'
|   |   | `-ImplicitCastExpr 0x104827ad8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x104827ab8 <col:2> 'int ()' Function 0x104827a00 'API_MISUSE' 'int ()'
|   |   `-ReturnStmt 0x104827b48 <line:10:2, col:10>
|   |     `-UnaryOperator 0x104827b30 <col:9, col:10> 'int' prefix '-'
|   |       `-IntegerLiteral 0x104827b10 <col:10> 'int' 1
|   |-IfStmt 0x10482a788 <line:12:5, line:28:5>
|   | |-UnaryOperator 0x104827c18 <line:12:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x104827c00 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x104827bd8 <col:10, col:15> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x104827ba0 <col:10> 'struct cli_bc_ctx *' lvalue ParmVar 0x10480e268 'ctx' 'struct cli_bc_ctx *'
|   | `-CompoundStmt 0x10482a758 <col:22, line:28:5>
|   |   |-BinaryOperator 0x104828088 <line:13:2, col:64> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x104827c68 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x104827c30 <col:2> 'struct cli_bc_ctx *' lvalue ParmVar 0x10480e268 'ctx' 'struct cli_bc_ctx *'
|   |   | `-CallExpr 0x104828060 <col:18, col:64> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x104827d70 <col:18> 'int ()' Function 0x104827cb8 'cli_gentemp' 'int ()'
|   |   |   `-ConditionalOperator 0x104828030 <col:30, col:60> '<dependent type>' contains-errors
|   |   |     |-RecoveryExpr 0x104827f40 <col:30> '<dependent type>' contains-errors lvalue
|   |   |     |-CXXDependentScopeMemberExpr 0x104827fc8 <col:37, col:51> '<dependent type>' contains-errors lvalue ->tmpdir
|   |   |     | `-CXXDependentScopeMemberExpr 0x104827f80 <col:37, col:43> '<dependent type>' contains-errors lvalue ->engine
|   |   |     |   `-RecoveryExpr 0x104827f60 <col:37> '<dependent type>' contains-errors lvalue
|   |   |     `-RecoveryExpr 0x104828010 <col:60> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x104829cf0 <line:14:2, line:18:2>
|   |   | |-UnaryOperator 0x104828120 <line:14:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x104828108 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x1048280e0 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x1048280a8 <col:7> 'struct cli_bc_ctx *' lvalue ParmVar 0x10480e268 'ctx' 'struct cli_bc_ctx *'
|   |   | `-CompoundStmt 0x104829cc8 <col:22, line:18:2>
|   |   |   |-CallExpr 0x104828270 <line:15:6, col:22> 'int'
|   |   |   | |-ImplicitCastExpr 0x104828258 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x104828218 <col:6> 'int ()' Function 0x104828160 'cli_dbgmsg' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x104828298 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x104828238 <col:17> 'char[4]' lvalue "STR"
|   |   |   |-CallExpr 0x104829c50 <line:16:6, col:31> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x104828390 <col:6> 'int ()' Function 0x1048282d8 'cli_event_error_oom' 'int ()'
|   |   |   | |-RecoveryExpr 0x104829c30 <col:26> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x1048283c8 <col:30> 'int' 0
|   |   |   `-ReturnStmt 0x104829cb8 <line:17:6, col:14>
|   |   |     `-UnaryOperator 0x104829ca0 <col:13, col:14> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x104829c80 <col:14> 'int' 1
|   |   |-IfStmt 0x10482a668 <line:20:2, line:26:2>
|   |   | |-BinaryOperator 0x104829f88 <line:20:6, col:21> 'int' contains-errors '=='
|   |   | | |-RecoveryExpr 0x104829f28 <col:6, col:11> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x104829ef0 <col:6> 'struct cli_bc_ctx *' lvalue ParmVar 0x10480e268 'ctx' 'struct cli_bc_ctx *'
|   |   | | `-UnaryOperator 0x104829f70 <col:20, col:21> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x104829f50 <col:21> 'int' 1
|   |   | `-CompoundStmt 0x10482a640 <col:24, line:26:2>
|   |   |   |-BinaryOperator 0x10482a028 <line:21:6, col:19> '<dependent type>' contains-errors '='
|   |   |   | |-RecoveryExpr 0x104829fe0 <col:6, col:11> '<dependent type>' contains-errors lvalue
|   |   |   | | `-DeclRefExpr 0x104829fa8 <col:6> 'struct cli_bc_ctx *' lvalue ParmVar 0x10480e268 'ctx' 'struct cli_bc_ctx *'
|   |   |   | `-IntegerLiteral 0x10482a008 <col:19> 'int' 0
|   |   |   |-CallExpr 0x10482a5d0 <line:24:6, col:24> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x10482a538 <col:6> 'void (void *)' Function 0x10482a3c8 'free' 'void (void *)'
|   |   |   | `-RecoveryExpr 0x10482a590 <col:11, col:16> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x10482a558 <col:11> 'struct cli_bc_ctx *' lvalue ParmVar 0x10480e268 'ctx' 'struct cli_bc_ctx *'
|   |   |   `-ReturnStmt 0x10482a630 <line:25:6, col:14>
|   |   |     `-UnaryOperator 0x10482a618 <col:13, col:14> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x10482a5f8 <col:14> 'int' 1
|   |   `-CallExpr 0x10482a728 <line:27:2, col:33> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x10482a688 <col:2> 'int ()' Function 0x104828160 'cli_dbgmsg' 'int ()'
|   |     |-StringLiteral 0x10482a6a8 <col:13> 'char[4]' lvalue "STR"
|   |     `-RecoveryExpr 0x10482a700 <col:20, col:25> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x10482a6c8 <col:20> 'struct cli_bc_ctx *' lvalue ParmVar 0x10480e268 'ctx' 'struct cli_bc_ctx *'
|   |-IfStmt 0x10482abb0 <line:31:5, line:32:10>
|   | |-RecoveryExpr 0x10482ab48 <line:31:9, col:62> '_Bool' contains-errors
|   | `-ReturnStmt 0x10482aba0 <line:32:2, col:10>
|   |   `-UnaryOperator 0x10482ab88 <col:9, col:10> 'int' prefix '-'
|   |     `-IntegerLiteral 0x10482ab68 <col:10> 'int' 1
|   `-IfStmt 0x10482afd8 <line:35:5, line:38:5>
|     |-RecoveryExpr 0x10482ae88 <line:35:9, col:17> '_Bool' contains-errors
|     `-CompoundStmt 0x10482afc8 <col:20, line:38:5>
`-FunctionDecl 0x10482a3c8 <line:24:6> col:6 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x10482a4c8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x10482a470 <<invalid sloc>> Implicit 873
