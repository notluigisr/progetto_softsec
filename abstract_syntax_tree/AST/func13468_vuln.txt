TranslationUnitDecl 0x150055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150055bd0 '__int128'
|-TypedefDecl 0x150056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150055bf0 'unsigned __int128'
|-TypedefDecl 0x150126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x150126000 'struct __NSConstantString_tag'
|   `-Record 0x150056580 '__NSConstantString_tag'
|-TypedefDecl 0x150126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150055d90 '__SVInt8_t'
|-TypedefDecl 0x150126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150055db0 '__SVInt16_t'
|-TypedefDecl 0x150126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150055dd0 '__SVInt32_t'
|-TypedefDecl 0x1501263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150055df0 '__SVInt64_t'
|-TypedefDecl 0x150126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150055e10 '__SVUint8_t'
|-TypedefDecl 0x1501264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150055e30 '__SVUint16_t'
|-TypedefDecl 0x150126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150055e50 '__SVUint32_t'
|-TypedefDecl 0x150126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150055e70 '__SVUint64_t'
|-TypedefDecl 0x1501265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150055e90 '__SVFloat16_t'
|-TypedefDecl 0x150126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1501266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150055ed0 '__SVFloat64_t'
|-TypedefDecl 0x150126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x150126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1501267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x150126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1501268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x150126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x150126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1501269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x150126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x150126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x150126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150056090 '__clang_svint8x3_t'
|-TypedefDecl 0x150126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x150126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1500560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x150126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1500560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x150126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x150126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x150126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x150126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x150126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1500561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1501278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1500561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1501279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150056230 '__clang_svint16x4_t'
|-TypedefDecl 0x150127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150056250 '__clang_svint32x4_t'
|-TypedefDecl 0x150127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150056270 '__clang_svint64x4_t'
|-TypedefDecl 0x150127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x150127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x150127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1500562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x150127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1500562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x150127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x150127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x150127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150056390 '__SVBool_t'
|-TypedefDecl 0x150127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x150127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1500563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x150127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1500563f0 '__SVCount_t'
|-TypedefDecl 0x150127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x150127fb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-TypedefDecl 0x150128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x150127fb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-FunctionDecl 0x1501281c8 <dataset_diviso_filec/func13468_vuln.c:1:1, line:46:1> line:1:5 invalid socket_create 'int (int)'
| |-ParmVarDecl 0x1501280f0 <col:19, col:28> col:28 invalid port 'int'
| `-CompoundStmt 0x150145918 <line:2:1, line:46:1>
|   |-DeclStmt 0x150128330 <line:3:2, col:14>
|   | `-VarDecl 0x150128290 <col:2, col:13> col:6 used sfd 'int' cinit
|   |   `-UnaryOperator 0x150128318 <col:12, col:13> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1501282f8 <col:13> 'int' 1
|   |-DeclStmt 0x1501283e8 <line:4:2, col:13>
|   | `-VarDecl 0x150128360 <col:2, col:12> col:6 used yes 'int' cinit
|   |   `-IntegerLiteral 0x1501283c8 <col:12> 'int' 1
|   |-DeclStmt 0x1501419b8 <line:15:2, col:26>
|   | |-RecordDecl 0x150128400 <col:2, col:9> col:9 struct sockaddr_in
|   | `-VarDecl 0x1501284f8 <col:2, col:21> col:21 referenced invalid saddr 'struct sockaddr_in'
|   |-IfStmt 0x150141ea0 <line:17:2, line:20:2>
|   | |-RecoveryExpr 0x150141c30 <line:17:6, col:58> '_Bool' contains-errors
|   | `-CompoundStmt 0x150141e80 <col:61, line:20:2>
|   |   |-CallExpr 0x150141df8 <line:18:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x150141de0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x150141d30 <col:3> 'int ()' Function 0x150141c78 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x150141e20 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x150141d90 <col:10> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x150141e70 <line:19:3, col:11>
|   |     `-UnaryOperator 0x150141e58 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x150141e38 <col:11> 'int' 1
|   |-IfStmt 0x150142530 <line:22:2, line:26:2>
|   | |-BinaryOperator 0x150142290 <line:22:6, col:78> 'int' contains-errors '=='
|   | | |-CallExpr 0x150142248 <col:6, col:72> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x150141fa0 <col:6> 'int ()' Function 0x150141ee8 'setsockopt' 'int ()'
|   | | | |-DeclRefExpr 0x150141fc0 <col:17> 'int' lvalue Var 0x150128290 'sfd' 'int'
|   | | | |-RecoveryExpr 0x150142190 <col:22> '<dependent type>' contains-errors lvalue
|   | | | |-RecoveryExpr 0x1501421b0 <col:34> '<dependent type>' contains-errors lvalue
|   | | | |-CStyleCastExpr 0x1501421e8 <col:48, col:56> 'void *' <BitCast>
|   | | | | `-UnaryOperator 0x150142060 <col:55, col:56> 'int *' prefix '&' cannot overflow
|   | | | |   `-DeclRefExpr 0x150142010 <col:56> 'int' lvalue Var 0x150128360 'yes' 'int'
|   | | | `-UnaryExprOrTypeTraitExpr 0x150142228 <col:61, col:71> 'unsigned long' sizeof 'int'
|   | | `-UnaryOperator 0x150142158 <col:77, col:78> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x150142138 <col:78> 'int' 1
|   | `-CompoundStmt 0x150142508 <col:81, line:26:2>
|   |   |-CallExpr 0x150142308 <line:23:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x1501422f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1501422b0 <col:3> 'int ()' Function 0x150141c78 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x150142330 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x1501422d0 <col:10> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x150142480 <line:24:3, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x150142468 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x150142428 <col:3> 'int ()' Function 0x150142370 'socket_close' 'int ()'
|   |   | `-ImplicitCastExpr 0x1501424a8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x150142448 <col:16> 'int' lvalue Var 0x150128290 'sfd' 'int'
|   |   `-ReturnStmt 0x1501424f8 <line:25:3, col:11>
|   |     `-UnaryOperator 0x1501424e0 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1501424c0 <col:11> 'int' 1
|   |-CallExpr 0x150144968 <line:28:2, col:42> 'void *' contains-errors
|   | |-ImplicitCastExpr 0x150144950 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x150144800 <col:2> 'void *(void *, int, unsigned long)' Function 0x150142598 'memset' 'void *(void *, int, unsigned long)'
|   | |-CStyleCastExpr 0x150144870 <col:9, col:19> 'void *' contains-errors <Dependent>
|   | | `-UnaryOperator 0x150144840 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   `-RecoveryExpr 0x150144820 <col:19> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x150144898 <col:26> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1501448f8 <col:29, col:41> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x1501448d8 <col:35, col:41> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x1501448b8 <col:36> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x150144a88 <line:29:2, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1501449e8 <col:2, col:8> '<dependent type>' contains-errors lvalue .sin_family
|   | | `-RecoveryExpr 0x1501449c0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1501449a0 <col:2> 'struct sockaddr_in' lvalue Var 0x1501284f8 'saddr' 'struct sockaddr_in'
|   | `-RecoveryExpr 0x150144a68 <col:21> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x150144d28 <line:30:2, col:42> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x150144b38 <col:2, col:17> '<dependent type>' contains-errors lvalue .s_addr
|   | | `-CXXDependentScopeMemberExpr 0x150144af0 <col:2, col:8> '<dependent type>' contains-errors lvalue .sin_addr
|   | |   `-RecoveryExpr 0x150144ac8 <col:2> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x150144aa8 <col:2> 'struct sockaddr_in' lvalue Var 0x1501284f8 'saddr' 'struct sockaddr_in'
|   | `-CallExpr 0x150144d00 <col:26, col:42> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x150144c60 <col:26> 'int ()' Function 0x150144ba8 'htonl' 'int ()'
|   |   `-RecoveryExpr 0x150144ce0 <col:32> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x150144f20 <line:31:2, col:29> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x150144d90 <col:2, col:8> '<dependent type>' contains-errors lvalue .sin_port
|   | | `-RecoveryExpr 0x150144d68 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x150144d48 <col:2> 'struct sockaddr_in' lvalue Var 0x1501284f8 'saddr' 'struct sockaddr_in'
|   | `-CallExpr 0x150144ef8 <col:19, col:29> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x150144eb8 <col:19> 'int ()' Function 0x150144e00 'htons' 'int ()'
|   |   `-RecoveryExpr 0x150144ed8 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1501454d8 <line:33:2, line:37:2>
|   | |-BinaryOperator 0x150145318 <line:33:6, col:61> 'int' contains-errors '>'
|   | | |-IntegerLiteral 0x150144f40 <col:6> 'int' 0
|   | | `-CallExpr 0x1501452c8 <col:10, col:61> 'int' contains-errors
|   | |   |-ImplicitCastExpr 0x1501452b0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x150145040 <col:10> 'int ()' Function 0x150144f88 'bind' 'int ()'
|   | |   |-ImplicitCastExpr 0x150145300 <col:15> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x150145060 <col:15> 'int' lvalue Var 0x150128290 'sfd' 'int'
|   | |   |-CStyleCastExpr 0x150145228 <col:20, col:41> 'struct sockaddr *' contains-errors <Dependent>
|   | |   | `-UnaryOperator 0x150145140 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   |   `-RecoveryExpr 0x150145120 <col:41> '<dependent type>' contains-errors lvalue
|   | |   `-UnaryExprOrTypeTraitExpr 0x150145290 <col:48, col:60> 'unsigned long' contains-errors sizeof
|   | |     `-ParenExpr 0x150145270 <col:54, col:60> '<dependent type>' contains-errors lvalue
|   | |       `-RecoveryExpr 0x150145250 <col:55> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1501454b0 <col:64, line:37:2>
|   |   |-CallExpr 0x150145390 <line:34:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x150145378 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x150145338 <col:3> 'int ()' Function 0x150141c78 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x1501453b8 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x150145358 <col:10> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x150145428 <line:35:3, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x150145410 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1501453d0 <col:3> 'int ()' Function 0x150142370 'socket_close' 'int ()'
|   |   | `-ImplicitCastExpr 0x150145450 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1501453f0 <col:16> 'int' lvalue Var 0x150128290 'sfd' 'int'
|   |   `-ReturnStmt 0x1501454a0 <line:36:3, col:11>
|   |     `-UnaryOperator 0x150145488 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x150145468 <col:11> 'int' 1
|   |-IfStmt 0x1501458b0 <line:39:2, line:43:2>
|   | |-BinaryOperator 0x1501456d0 <line:39:6, col:25> 'int' '=='
|   | | |-CallExpr 0x150145650 <col:6, col:19> 'int'
|   | | | |-ImplicitCastExpr 0x150145638 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1501455d8 <col:6> 'int ()' Function 0x150145520 'listen' 'int ()'
|   | | | |-ImplicitCastExpr 0x150145680 <col:13> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1501455f8 <col:13> 'int' lvalue Var 0x150128290 'sfd' 'int'
|   | | | `-IntegerLiteral 0x150145618 <col:18> 'int' 1
|   | | `-UnaryOperator 0x1501456b8 <col:24, col:25> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x150145698 <col:25> 'int' 1
|   | `-CompoundStmt 0x150145888 <col:28, line:43:2>
|   |   |-CallExpr 0x150145748 <line:40:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x150145730 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1501456f0 <col:3> 'int ()' Function 0x150141c78 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x150145770 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x150145710 <col:10> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x150145800 <line:41:3, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x1501457c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x150145788 <col:3> 'int ()' Function 0x150142370 'socket_close' 'int ()'
|   |   | `-ImplicitCastExpr 0x150145828 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1501457a8 <col:16> 'int' lvalue Var 0x150128290 'sfd' 'int'
|   |   `-ReturnStmt 0x150145878 <line:42:3, col:11>
|   |     `-UnaryOperator 0x150145860 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x150145840 <col:11> 'int' 1
|   `-ReturnStmt 0x150145908 <line:45:2, col:9>
|     `-ImplicitCastExpr 0x1501458f0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1501458d0 <col:9> 'int' lvalue Var 0x150128290 'sfd' 'int'
`-FunctionDecl 0x150142598 <line:28:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x150142698 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x150142700 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x150142768 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x150142640 <<invalid sloc>> Implicit 900
