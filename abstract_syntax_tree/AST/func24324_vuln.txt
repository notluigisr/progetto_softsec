TranslationUnitDecl 0x12f81d408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f81e2b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f81d9d0 '__int128'
|-TypedefDecl 0x12f81e328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f81d9f0 'unsigned __int128'
|-TypedefDecl 0x12f8ee030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f8ede00 'struct __NSConstantString_tag'
|   `-Record 0x12f81e380 '__NSConstantString_tag'
|-TypedefDecl 0x12f8ee098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f81db90 '__SVInt8_t'
|-TypedefDecl 0x12f8ee100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f81dbb0 '__SVInt16_t'
|-TypedefDecl 0x12f8ee168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f81dbd0 '__SVInt32_t'
|-TypedefDecl 0x12f8ee1d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f81dbf0 '__SVInt64_t'
|-TypedefDecl 0x12f8ee238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f81dc10 '__SVUint8_t'
|-TypedefDecl 0x12f8ee2a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f81dc30 '__SVUint16_t'
|-TypedefDecl 0x12f8ee308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f81dc50 '__SVUint32_t'
|-TypedefDecl 0x12f8ee370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f81dc70 '__SVUint64_t'
|-TypedefDecl 0x12f8ee3d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f81dc90 '__SVFloat16_t'
|-TypedefDecl 0x12f8ee440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f81dcb0 '__SVFloat32_t'
|-TypedefDecl 0x12f8ee4a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f81dcd0 '__SVFloat64_t'
|-TypedefDecl 0x12f8ee510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f81dcf0 '__SVBfloat16_t'
|-TypedefDecl 0x12f8ee578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f81dd10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f8ee5e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f81dd30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f8ee648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f81dd50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f8ee6b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f81dd70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f8ee718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f81dd90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f8ee780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f81ddb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f8ee7e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f81ddd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f8ee850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f81ddf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f8ee8b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f81de10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f8ee920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f81de30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f8ee988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f81de50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f8ee9f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f81de70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f8eea58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f81de90 '__clang_svint8x3_t'
|-TypedefDecl 0x12f8eeac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f81deb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f8eeb28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f81ded0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f8eeb90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f81def0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f8eebf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f81df10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f8eec60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f81df30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f8eecc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f81df50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f8eed30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f81df70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f8eed98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f81df90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f8ef600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f81dfb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f8ef668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f81dfd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f8ef6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f81dff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f8ef738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f81e010 '__clang_svint8x4_t'
|-TypedefDecl 0x12f8ef7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f81e030 '__clang_svint16x4_t'
|-TypedefDecl 0x12f8ef808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f81e050 '__clang_svint32x4_t'
|-TypedefDecl 0x12f8ef870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f81e070 '__clang_svint64x4_t'
|-TypedefDecl 0x12f8ef8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f81e090 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f8ef940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f81e0b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f8ef9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f81e0d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f8efa10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f81e0f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f8efa78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f81e110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f8efae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f81e130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f8efb48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f81e150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f8efbb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f81e170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f8efc18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f81e190 '__SVBool_t'
|-TypedefDecl 0x12f8efc80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f81e1b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f8efce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f81e1d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f8efd50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f81e1f0 '__SVCount_t'
|-TypedefDecl 0x12f8efdf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f8efdb0 'char *'
|   `-BuiltinType 0x12f81d4b0 'char'
|-TypedefDecl 0x12f8efe68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f8efdb0 'char *'
|   `-BuiltinType 0x12f81d4b0 'char'
`-FunctionDecl 0x12f8f0088 <dataset_diviso_filec/func24324_vuln.c:1:1, line:17:1> line:1:14 invalid ReluPrepare 'int (int *, int *)'
  |-ParmVarDecl 0x12f8eff28 <col:26, col:41> col:41 invalid context 'int *'
  |-ParmVarDecl 0x12f8effa8 <col:50, col:62> col:62 invalid node 'int *'
  `-CompoundStmt 0x13f80c6d0 <col:68, line:17:1>
    |-CallExpr 0x12f8f0518 <line:3:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f8f0370 <col:3> 'int ()' Function 0x12f8f02b8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x12f8f0390 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x12f8f04d0 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12f8f0490 <col:30> 'int ()' Function 0x12f8f03d8 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x12f8f04b0 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12f8f04f8 <col:47> 'int' 1
    |-CallExpr 0x13f80b940 <line:4:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f8f0550 <col:3> 'int ()' Function 0x12f8f02b8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x12f8f0570 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x13f80b8f8 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13f80b8b8 <col:30> 'int ()' Function 0x13f80b800 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x13f80b8d8 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x13f80b920 <col:48> 'int' 1
    |-DeclStmt 0x13f80bb90 <line:5:3, col:57>
    | `-VarDecl 0x13f80b990 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x13f80bfe0 <line:7:3, col:61> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13f80be38 <col:3> 'int ()' Function 0x13f80bd80 'TF_LITE_ENSURE_TYPES_EQ' 'int ()'
    | |-RecoveryExpr 0x13f80be58 <col:27> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x13f80be98 <col:36, col:43> '<dependent type>' contains-errors lvalue ->type
    | | `-RecoveryExpr 0x13f80be78 <col:36> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x13f80bf98 <col:49, col:57> '<dependent type>' contains-errors lvalue ->type
    |   `-RecoveryExpr 0x13f80bf78 <col:49> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13f80c498 <line:9:3, line:13:3>
      |-BinaryOperator 0x13f80c1f8 <line:9:7, col:52> 'int' contains-errors '||'
      | |-BinaryOperator 0x13f80c198 <col:7, col:22> 'int' contains-errors '=='
      | | |-CXXDependentScopeMemberExpr 0x13f80c038 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type
      | | | `-RecoveryExpr 0x13f80c018 <col:7> '<dependent type>' contains-errors lvalue
      | | `-RecoveryExpr 0x13f80c178 <col:22> '<dependent type>' contains-errors lvalue
      | `-BinaryOperator 0x13f80c1d8 <col:37, col:52> 'int' contains-errors '=='
      |   |-CXXDependentScopeMemberExpr 0x13f80c0d8 <col:37, col:44> '<dependent type>' contains-errors lvalue ->type
      |   | `-RecoveryExpr 0x13f80c0b8 <col:37> '<dependent type>' contains-errors lvalue
      |   `-RecoveryExpr 0x13f80c1b8 <col:52> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x13f80c480 <col:66, line:13:3>
        `-DeclStmt 0x13f80c348 <line:10:5, col:72>
          `-VarDecl 0x13f80c230 <col:5, col:12> col:12 used real_multiplier 'double'
