TranslationUnitDecl 0x11f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f055bd0 '__int128'
|-TypedefDecl 0x11f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f055bf0 'unsigned __int128'
|-TypedefDecl 0x11f126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f126000 'struct __NSConstantString_tag'
|   `-Record 0x11f056580 '__NSConstantString_tag'
|-TypedefDecl 0x11f126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f055d90 '__SVInt8_t'
|-TypedefDecl 0x11f126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f055db0 '__SVInt16_t'
|-TypedefDecl 0x11f126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f055dd0 '__SVInt32_t'
|-TypedefDecl 0x11f1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f055df0 '__SVInt64_t'
|-TypedefDecl 0x11f126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f055e10 '__SVUint8_t'
|-TypedefDecl 0x11f1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f055e30 '__SVUint16_t'
|-TypedefDecl 0x11f126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f055e50 '__SVUint32_t'
|-TypedefDecl 0x11f126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f055e70 '__SVUint64_t'
|-TypedefDecl 0x11f1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f055e90 '__SVFloat16_t'
|-TypedefDecl 0x11f126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f056390 '__SVBool_t'
|-TypedefDecl 0x11f127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f0563f0 '__SVCount_t'
|-TypedefDecl 0x11f127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
|-TypedefDecl 0x11f128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
|-FunctionDecl 0x11f1281a8 <dataset_diviso_filec/func13905_vuln.c:1:1, line:10:1> line:1:12 is_integer 'int (char *)' static
| |-ParmVarDecl 0x11f1280d8 <col:23, col:29> col:29 used string 'char *'
| `-CompoundStmt 0x11f1410e8 <line:2:1, line:10:1>
|   |-IfStmt 0x11f141098 <line:3:3, line:8:3>
|   | |-BinaryOperator 0x11f140de0 <line:3:7, col:62> 'int' '||'
|   | | |-BinaryOperator 0x11f140ce0 <col:7, col:42> 'int' '||'
|   | | | |-CallExpr 0x11f140ba8 <col:7, col:24> 'int'
|   | | | | |-ImplicitCastExpr 0x11f140b90 <col:7> 'int (*)(int)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x11f140ac0 <col:7> 'int (int)' Function 0x11f128700 'isdigit' 'int (int)'
|   | | | | `-ImplicitCastExpr 0x11f140be8 <col:15, col:23> 'int' <IntegralCast>
|   | | | |   `-ImplicitCastExpr 0x11f140bd0 <col:15, col:23> 'char' <LValueToRValue>
|   | | | |     `-ArraySubscriptExpr 0x11f140b38 <col:15, col:23> 'char' lvalue
|   | | | |       |-ImplicitCastExpr 0x11f140b20 <col:15> 'char *' <LValueToRValue>
|   | | | |       | `-DeclRefExpr 0x11f140ae0 <col:15> 'char *' lvalue ParmVar 0x11f1280d8 'string' 'char *'
|   | | | |       `-IntegerLiteral 0x11f140b00 <col:22> 'int' 0
|   | | | `-BinaryOperator 0x11f140cc0 <col:29, col:42> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x11f140ca8 <col:29, col:37> 'int' <IntegralCast>
|   | | |   | `-ImplicitCastExpr 0x11f140c90 <col:29, col:37> 'char' <LValueToRValue>
|   | | |   |   `-ArraySubscriptExpr 0x11f140c58 <col:29, col:37> 'char' lvalue
|   | | |   |     |-ImplicitCastExpr 0x11f140c40 <col:29> 'char *' <LValueToRValue>
|   | | |   |     | `-DeclRefExpr 0x11f140c00 <col:29> 'char *' lvalue ParmVar 0x11f1280d8 'string' 'char *'
|   | | |   |     `-IntegerLiteral 0x11f140c20 <col:36> 'int' 0
|   | | |   `-CharacterLiteral 0x11f140c78 <col:42> 'int' 45
|   | | `-BinaryOperator 0x11f140dc0 <col:49, col:62> 'int' '=='
|   | |   |-ImplicitCastExpr 0x11f140da8 <col:49, col:57> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x11f140d90 <col:49, col:57> 'char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x11f140d58 <col:49, col:57> 'char' lvalue
|   | |   |     |-ImplicitCastExpr 0x11f140d40 <col:49> 'char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x11f140d00 <col:49> 'char *' lvalue ParmVar 0x11f1280d8 'string' 'char *'
|   | |   |     `-IntegerLiteral 0x11f140d20 <col:56> 'int' 0
|   | |   `-CharacterLiteral 0x11f140d78 <col:62> 'int' 43
|   | `-CompoundStmt 0x11f141078 <col:67, line:8:3>
|   |   |-WhileStmt 0x11f140f88 <line:4:5, line:5:7>
|   |   | |-BinaryOperator 0x11f140f60 <line:4:12, col:40> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x11f140f48 <col:12, col:15> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x11f140f30 <col:12, col:15> 'char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x11f140e38 <col:12, col:15> 'char' lvalue prefix '*' cannot overflow
|   |   | | |     `-UnaryOperator 0x11f140e20 <col:13, col:15> 'char *' prefix '++'
|   |   | | |       `-DeclRefExpr 0x11f140e00 <col:15> 'char *' lvalue ParmVar 0x11f1280d8 'string' 'char *'
|   |   | | `-CallExpr 0x11f140ed8 <col:25, col:40> 'int'
|   |   | |   |-ImplicitCastExpr 0x11f140ec0 <col:25> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x11f140e50 <col:25> 'int (int)' Function 0x11f128700 'isdigit' 'int (int)'
|   |   | |   `-ImplicitCastExpr 0x11f140f18 <col:33, col:34> 'int' <IntegralCast>
|   |   | |     `-ImplicitCastExpr 0x11f140f00 <col:33, col:34> 'char' <LValueToRValue>
|   |   | |       `-UnaryOperator 0x11f140ea8 <col:33, col:34> 'char' lvalue prefix '*' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x11f140e90 <col:34> 'char *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x11f140e70 <col:34> 'char *' lvalue ParmVar 0x11f1280d8 'string' 'char *'
|   |   | `-NullStmt 0x11f140f80 <line:5:7>
|   |   `-IfStmt 0x11f141058 <line:6:5, line:7:14>
|   |     |-UnaryOperator 0x11f141010 <line:6:9, col:11> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x11f140ff8 <col:10, col:11> 'char' <LValueToRValue>
|   |     |   `-UnaryOperator 0x11f140fe0 <col:10, col:11> 'char' lvalue prefix '*' cannot overflow
|   |     |     `-ImplicitCastExpr 0x11f140fc8 <col:11> 'char *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x11f140fa8 <col:11> 'char *' lvalue ParmVar 0x11f1280d8 'string' 'char *'
|   |     `-ReturnStmt 0x11f141048 <line:7:7, col:14>
|   |       `-IntegerLiteral 0x11f141028 <col:14> 'int' 1
|   `-ReturnStmt 0x11f1410d8 <line:9:3, col:10>
|     `-IntegerLiteral 0x11f1410b8 <col:10> 'int' 0
`-FunctionDecl 0x11f128700 <line:3:7> col:7 implicit used isdigit 'int (int)' extern
  |-ParmVarDecl 0x11f140a00 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x11f1287a8 <<invalid sloc>> Implicit 924
  |-NoThrowAttr 0x11f140a70 <col:7> Implicit
  `-PureAttr 0x11f140a98 <col:7> Implicit
