TranslationUnitDecl 0x130055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130055bd0 '__int128'
|-TypedefDecl 0x130056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130055bf0 'unsigned __int128'
|-TypedefDecl 0x130126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130126000 'struct __NSConstantString_tag'
|   `-Record 0x130056580 '__NSConstantString_tag'
|-TypedefDecl 0x130126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130055d90 '__SVInt8_t'
|-TypedefDecl 0x130126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130055db0 '__SVInt16_t'
|-TypedefDecl 0x130126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130055dd0 '__SVInt32_t'
|-TypedefDecl 0x1301263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130055df0 '__SVInt64_t'
|-TypedefDecl 0x130126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130055e10 '__SVUint8_t'
|-TypedefDecl 0x1301264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130055e30 '__SVUint16_t'
|-TypedefDecl 0x130126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130055e50 '__SVUint32_t'
|-TypedefDecl 0x130126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130055e70 '__SVUint64_t'
|-TypedefDecl 0x1301265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130055e90 '__SVFloat16_t'
|-TypedefDecl 0x130126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1301266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130055ed0 '__SVFloat64_t'
|-TypedefDecl 0x130126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x130126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1301267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x130126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1301268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x130126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x130126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1301269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x130126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x130126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130056090 '__clang_svint8x3_t'
|-TypedefDecl 0x130126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1300560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x130126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1300560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x130126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1300560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x130126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x130126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x130126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x130126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x130126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x130127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1300561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x130127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1300561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1301278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1300561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x130127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1301279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130056230 '__clang_svint16x4_t'
|-TypedefDecl 0x130127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130056250 '__clang_svint32x4_t'
|-TypedefDecl 0x130127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130056270 '__clang_svint64x4_t'
|-TypedefDecl 0x130127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x130127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x130127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x130127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x130127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x130127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x130127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x130127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x130127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130056390 '__SVBool_t'
|-TypedefDecl 0x130127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x130127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x130127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300563f0 '__SVCount_t'
|-TypedefDecl 0x130127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x130127fb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-TypedefDecl 0x130128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x130127fb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-FunctionDecl 0x1301281c8 <dataset_diviso_filec/func2737_vuln.c:1:5, line:38:5> line:1:10 invalid parse 'int (char *)'
| |-ParmVarDecl 0x1301280f0 <col:16, col:22> col:22 used ptr 'char *'
| `-CompoundStmt 0x130143ec0 <line:2:5, line:38:5>
|   |-CallExpr 0x1301284b0 <line:3:9, col:28> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1301283d0 <col:9> 'int ()' Function 0x130128318 'CV_Assert' 'int ()'
|   | `-BinaryOperator 0x130128490 <col:20, col:26> 'int' contains-errors '!='
|   |   |-RecoveryExpr 0x130128470 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x130128408 <col:26> 'int' 0
|   |-RecoveryExpr 0x130128508 <line:5:9> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1301285c8 <line:6:9, col:25>
|   | `-VarDecl 0x130128540 <col:9, col:24> col:13 used tag_type 'int' cinit
|   |   `-IntegerLiteral 0x1301285a8 <col:24> 'int' 0
|   |-BinaryOperator 0x1301287d8 <line:10:9, col:50> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1301285e0 <col:9> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|   | `-CallExpr 0x1301287a8 <col:15, col:50> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1301286e0 <col:15> 'int ()' Function 0x130128628 'skipSpaces' 'int ()'
|   |   |-DeclRefExpr 0x130128700 <col:27> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|   |   `-RecoveryExpr 0x130128788 <col:32> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1301422c8 <line:12:9, line:13:39>
|   | |-BinaryOperator 0x1301420f8 <line:12:13, col:40> 'int' '!='
|   | | |-CallExpr 0x130142028 <col:13, col:35> 'int'
|   | | | |-ImplicitCastExpr 0x130142010 <col:13> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x130141ef0 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x130141ca0 'memcmp' 'int (const void *, const void *, unsigned long)'
|   | | | |-ImplicitCastExpr 0x130142078 <col:21> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x130142060 <col:21> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x130141f10 <col:21> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|   | | | |-ImplicitCastExpr 0x1301420a8 <col:26> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x130142090 <col:26> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x130141f70 <col:26> 'char[4]' lvalue "STR"
|   | | | `-ImplicitCastExpr 0x1301420c0 <col:33> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x130141f90 <col:33> 'int' 5
|   | | `-IntegerLiteral 0x1301420d8 <col:40> 'int' 0
|   | `-CallExpr 0x130142288 <line:13:13, col:39> 'int'
|   |   |-ImplicitCastExpr 0x130142270 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1301421f8 <col:13> 'int ()' Function 0x130142140 'CV_PARSE_ERROR_CPP' 'int ()'
|   |   `-ImplicitCastExpr 0x1301422b0 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x130142218 <col:33> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x130142558 <line:15:9, col:55> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1301422e8 <col:9> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|   | `-CallExpr 0x130142518 <col:15, col:55> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1301423e8 <col:15> 'int ()' Function 0x130142330 'parseTag' 'int ()'
|   |   |-DeclRefExpr 0x130142408 <col:25> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|   |   |-RecoveryExpr 0x1301424d8 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x1301424f8 <col:35> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x130142458 <col:46> 'int' lvalue Var 0x130128540 'tag_type' 'int'
|   `-WhileStmt 0x130143e80 <line:18:9, line:35:9>
|     |-BinaryOperator 0x130142668 <line:18:16, col:31> 'int' '&&'
|     | |-ImplicitCastExpr 0x130142650 <col:16> 'char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x130142578 <col:16> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|     | `-BinaryOperator 0x130142630 <col:23, col:31> 'int' '!='
|     |   |-ImplicitCastExpr 0x130142618 <col:23, col:24> 'int' <IntegralCast>
|     |   | `-ImplicitCastExpr 0x130142600 <col:23, col:24> 'char' <LValueToRValue>
|     |   |   `-UnaryOperator 0x1301425d0 <col:23, col:24> 'char' lvalue prefix '*' cannot overflow
|     |   |     `-ImplicitCastExpr 0x1301425b8 <col:24> 'char *' <LValueToRValue>
|     |   |       `-DeclRefExpr 0x130142598 <col:24> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|     |   `-CharacterLiteral 0x1301425e8 <col:31> 'int' 0
|     `-CompoundStmt 0x130143e60 <line:19:9, line:35:9>
|       |-BinaryOperator 0x130142780 <line:20:13, col:38> 'char *' '='
|       | |-DeclRefExpr 0x130142688 <col:13> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|       | `-ImplicitCastExpr 0x130142768 <col:19, col:38> 'char *' <IntegralToPointer>
|       |   `-CallExpr 0x130142720 <col:19, col:38> 'int'
|       |     |-ImplicitCastExpr 0x130142708 <col:19> 'int (*)()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x1301426a8 <col:19> 'int ()' Function 0x130128628 'skipSpaces' 'int ()'
|       |     |-ImplicitCastExpr 0x130142750 <col:31> 'char *' <LValueToRValue>
|       |     | `-DeclRefExpr 0x1301426c8 <col:31> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|       |     `-IntegerLiteral 0x1301426e8 <col:36> 'int' 0
|       `-IfStmt 0x130143e40 <line:22:13, line:34:13>
|         |-BinaryOperator 0x130143648 <line:22:17, col:25> 'int' '!='
|         | |-ImplicitCastExpr 0x130143630 <col:17, col:18> 'int' <IntegralCast>
|         | | `-ImplicitCastExpr 0x130143618 <col:17, col:18> 'char' <LValueToRValue>
|         | |   `-UnaryOperator 0x1301427d8 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|         | |     `-ImplicitCastExpr 0x1301427c0 <col:18> 'char *' <LValueToRValue>
|         | |       `-DeclRefExpr 0x1301427a0 <col:18> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|         | `-CharacterLiteral 0x130143600 <col:25> 'int' 0
|         `-CompoundStmt 0x130143e10 <line:23:13, line:34:13>
|           |-BinaryOperator 0x1301437f8 <line:24:17, col:63> 'char *' contains-errors '='
|           | |-DeclRefExpr 0x130143668 <col:17> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|           | `-CallExpr 0x1301437b8 <col:23, col:63> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x130143688 <col:23> 'int ()' Function 0x130142330 'parseTag' 'int ()'
|           |   |-DeclRefExpr 0x1301436a8 <col:33> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|           |   |-RecoveryExpr 0x130143778 <col:38> '<dependent type>' contains-errors lvalue
|           |   |-RecoveryExpr 0x130143798 <col:43> '<dependent type>' contains-errors lvalue
|           |   `-DeclRefExpr 0x1301436f8 <col:54> 'int' lvalue Var 0x130128540 'tag_type' 'int'
|           |-IfStmt 0x130143a20 <line:25:17, line:26:47>
|           | |-BinaryOperator 0x130143968 <line:25:21, col:62> 'int' contains-errors '||'
|           | | |-BinaryOperator 0x130143908 <col:21, col:33> 'int' contains-errors '!='
|           | | | |-DeclRefExpr 0x130143818 <col:21> 'int' lvalue Var 0x130128540 'tag_type' 'int'
|           | | | `-RecoveryExpr 0x1301438e8 <col:33> '<dependent type>' contains-errors lvalue
|           | | `-BinaryOperator 0x130143948 <col:55, col:62> 'int' contains-errors '!='
|           | |   |-RecoveryExpr 0x130143928 <col:55> '<dependent type>' contains-errors lvalue
|           | |   `-StringLiteral 0x130143888 <col:62> 'char[4]' lvalue "STR"
|           | `-CallExpr 0x1301439e0 <line:26:21, col:47> 'int'
|           |   |-ImplicitCastExpr 0x1301439c8 <col:21> 'int (*)()' <FunctionToPointerDecay>
|           |   | `-DeclRefExpr 0x130143988 <col:21> 'int ()' Function 0x130142140 'CV_PARSE_ERROR_CPP' 'int ()'
|           |   `-ImplicitCastExpr 0x130143a08 <col:41> 'char *' <ArrayToPointerDecay>
|           |     `-StringLiteral 0x1301439a8 <col:41> 'char[4]' lvalue "STR"
|           |-IfStmt 0x130143cd8 <line:30:17, line:31:47>
|           | |-RecoveryExpr 0x130143c20 <line:30:21, col:62> '_Bool' contains-errors
|           | `-CallExpr 0x130143c98 <line:31:21, col:47> 'int'
|           |   |-ImplicitCastExpr 0x130143c80 <col:21> 'int (*)()' <FunctionToPointerDecay>
|           |   | `-DeclRefExpr 0x130143c40 <col:21> 'int ()' Function 0x130142140 'CV_PARSE_ERROR_CPP' 'int ()'
|           |   `-ImplicitCastExpr 0x130143cc0 <col:41> 'char *' <ArrayToPointerDecay>
|           |     `-StringLiteral 0x130143c60 <col:41> 'char[4]' lvalue "STR"
|           `-BinaryOperator 0x130143df0 <line:32:17, col:42> 'char *' '='
|             |-DeclRefExpr 0x130143cf8 <col:17> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|             `-ImplicitCastExpr 0x130143dd8 <col:23, col:42> 'char *' <IntegralToPointer>
|               `-CallExpr 0x130143d90 <col:23, col:42> 'int'
|                 |-ImplicitCastExpr 0x130143d78 <col:23> 'int (*)()' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x130143d18 <col:23> 'int ()' Function 0x130128628 'skipSpaces' 'int ()'
|                 |-ImplicitCastExpr 0x130143dc0 <col:35> 'char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x130143d38 <col:35> 'char *' lvalue ParmVar 0x1301280f0 'ptr' 'char *'
|                 `-IntegerLiteral 0x130143d58 <col:40> 'int' 0
`-FunctionDecl 0x130141ca0 <line:12:13> col:13 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x130141da0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x130141e08 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x130141e70 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x130141d48 <<invalid sloc>> Implicit 883
