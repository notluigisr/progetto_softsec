TranslationUnitDecl 0x121855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1218564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x121855bd0 '__int128'
|-TypedefDecl 0x121856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x121855bf0 'unsigned __int128'
|-TypedefDecl 0x121926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x121926000 'struct __NSConstantString_tag'
|   `-Record 0x121856580 '__NSConstantString_tag'
|-TypedefDecl 0x121926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x121855d90 '__SVInt8_t'
|-TypedefDecl 0x121926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x121855db0 '__SVInt16_t'
|-TypedefDecl 0x121926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x121855dd0 '__SVInt32_t'
|-TypedefDecl 0x1219263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x121855df0 '__SVInt64_t'
|-TypedefDecl 0x121926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x121855e10 '__SVUint8_t'
|-TypedefDecl 0x1219264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x121855e30 '__SVUint16_t'
|-TypedefDecl 0x121926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x121855e50 '__SVUint32_t'
|-TypedefDecl 0x121926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x121855e70 '__SVUint64_t'
|-TypedefDecl 0x1219265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x121855e90 '__SVFloat16_t'
|-TypedefDecl 0x121926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x121855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1219266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x121855ed0 '__SVFloat64_t'
|-TypedefDecl 0x121926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x121855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x121926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x121855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1219267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x121855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x121926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x121855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1219268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x121855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x121926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x121855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x121926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x121855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1219269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x121855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x121926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x121855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x121926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x121856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x121926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x121856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x121926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x121856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x121926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x121856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x121926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x121856090 '__clang_svint8x3_t'
|-TypedefDecl 0x121926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1218560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x121926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1218560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x121926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1218560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x121926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x121856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x121926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x121856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x121926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x121856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x121926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x121856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x121926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x121856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x121927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1218561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x121927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1218561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1219278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1218561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x121927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x121856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1219279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x121856230 '__clang_svint16x4_t'
|-TypedefDecl 0x121927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x121856250 '__clang_svint32x4_t'
|-TypedefDecl 0x121927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x121856270 '__clang_svint64x4_t'
|-TypedefDecl 0x121927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x121856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x121927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1218562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x121927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1218562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x121927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1218562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x121927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x121856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x121927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x121856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x121927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x121856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x121927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x121856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x121927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x121856390 '__SVBool_t'
|-TypedefDecl 0x121927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1218563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x121927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1218563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x121927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1218563f0 '__SVCount_t'
|-TypedefDecl 0x121927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x121927fb0 'char *'
|   `-BuiltinType 0x1218556b0 'char'
|-TypedefDecl 0x121928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x121927fb0 'char *'
|   `-BuiltinType 0x1218556b0 'char'
`-FunctionDecl 0x121928318 <dataset_diviso_filec/func20725_vuln.c:1:1, line:33:1> line:1:1 invalid ber_parse_header 'int (int, int, int *)'
  |-ParmVarDecl 0x1219280f0 <col:18, col:25> col:25 invalid s 'int'
  |-ParmVarDecl 0x121928170 <col:28, col:32> col:32 used tagval 'int'
  |-ParmVarDecl 0x121928228 <col:40, col:45> col:45 used length 'int *'
  `-CompoundStmt 0x1219423a8 <line:2:1, line:33:1>
    |-DeclStmt 0x1219284f0 <line:3:2, col:14>
    | |-VarDecl 0x1219283f0 <col:2, col:6> col:6 used tag 'int'
    | `-VarDecl 0x121928470 <col:2, col:11> col:11 used len 'int'
    |-IfStmt 0x121941960 <line:5:2, line:12:2> has_else
    | |-BinaryOperator 0x121928560 <line:5:6, col:15> 'int' '>'
    | | |-ImplicitCastExpr 0x121928548 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x121928508 <col:6> 'int' lvalue ParmVar 0x121928170 'tagval' 'int'
    | | `-IntegerLiteral 0x121928528 <col:15> 'int' 255
    | |-CompoundStmt 0x121928770 <line:6:2, line:8:2>
    | | `-CallExpr 0x121928740 <line:7:3, col:22> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1219286e0 <col:3> 'int ()' Function 0x121928628 'in_uint16_be' 'int ()'
    | |   |-RecoveryExpr 0x121928700 <col:16> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x121928720 <col:19> 'int' lvalue Var 0x1219283f0 'tag' 'int'
    | `-CompoundStmt 0x121941948 <line:10:2, line:12:2>
    |   `-CallExpr 0x121941918 <line:11:3, col:18> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1219418b8 <col:3> 'int ()' Function 0x121941800 'in_uint8' 'int ()'
    |     |-RecoveryExpr 0x1219418d8 <col:12> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1219418f8 <col:15> 'int' lvalue Var 0x1219283f0 'tag' 'int'
    |-IfStmt 0x121941cb8 <line:14:2, line:18:2>
    | |-BinaryOperator 0x121941a00 <line:14:6, col:13> 'int' '!='
    | | |-ImplicitCastExpr 0x1219419d0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x121941990 <col:6> 'int' lvalue Var 0x1219283f0 'tag' 'int'
    | | `-ImplicitCastExpr 0x1219419e8 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1219419b0 <col:13> 'int' lvalue ParmVar 0x121928170 'tagval' 'int'
    | `-CompoundStmt 0x121941ca0 <line:15:2, line:18:2>
    |   `-CallExpr 0x121941c08 <line:16:3, col:27> 'int'
    |     |-ImplicitCastExpr 0x121941bf0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x121941b00 <col:3> 'int ()' Function 0x121941a48 'error' 'int ()'
    |     |-ImplicitCastExpr 0x121941c40 <col:9> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x121941b60 <col:9> 'char[4]' lvalue "STR"
    |     |-ImplicitCastExpr 0x121941c58 <col:16> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x121941b80 <col:16> 'int' lvalue ParmVar 0x121928170 'tagval' 'int'
    |     `-ImplicitCastExpr 0x121941c70 <col:24> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x121941ba0 <col:24> 'int' lvalue Var 0x1219283f0 'tag' 'int'
    |-CallExpr 0x121941d38 <line:20:2, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x121941cd8 <col:2> 'int ()' Function 0x121941800 'in_uint8' 'int ()'
    | |-RecoveryExpr 0x121941cf8 <col:11> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x121941d18 <col:14> 'int' lvalue Var 0x121928470 'len' 'int'
    |-IfStmt 0x121942220 <line:22:2, line:30:13> has_else
    | |-BinaryOperator 0x121941dc0 <line:22:6, col:12> 'int' '&'
    | | |-ImplicitCastExpr 0x121941da8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x121941d68 <col:6> 'int' lvalue Var 0x121928470 'len' 'int'
    | | `-IntegerLiteral 0x121941d88 <col:12> 'int' 128
    | |-CompoundStmt 0x121942150 <line:23:2, line:28:2>
    | | |-CompoundAssignOperator 0x121941e38 <line:24:3, col:11> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
    | | | |-DeclRefExpr 0x121941de0 <col:3> 'int' lvalue Var 0x121928470 'len' 'int'
    | | | `-UnaryOperator 0x121941e20 <col:10, col:11> 'int' prefix '~' cannot overflow
    | | |   `-IntegerLiteral 0x121941e00 <col:11> 'int' 128
    | | |-BinaryOperator 0x121941ed8 <line:25:3, col:13> 'int' '='
    | | | |-UnaryOperator 0x121941ea0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x121941e88 <col:4> 'int *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x121941e68 <col:4> 'int *' lvalue ParmVar 0x121928228 'length' 'int *'
    | | | `-IntegerLiteral 0x121941eb8 <col:13> 'int' 0
    | | `-WhileStmt 0x121942130 <line:26:3, line:27:22>
    | |   |-UnaryOperator 0x121941f18 <line:26:10, col:13> 'int' postfix '--'
    | |   | `-DeclRefExpr 0x121941ef8 <col:10> 'int' lvalue Var 0x121928470 'len' 'int'
    | |   `-CallExpr 0x121942100 <line:27:4, col:22> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x121942010 <col:4> 'int ()' Function 0x121941f58 'next_be' 'int ()'
    | |     |-RecoveryExpr 0x121942030 <col:12> '<dependent type>' contains-errors lvalue
    | |     `-UnaryOperator 0x1219420e8 <col:15, col:16> 'int' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x1219420d0 <col:16> 'int *' <LValueToRValue>
    | |         `-DeclRefExpr 0x121942050 <col:16> 'int *' lvalue ParmVar 0x121928228 'length' 'int *'
    | `-BinaryOperator 0x121942200 <line:30:3, col:13> 'int' '='
    |   |-UnaryOperator 0x1219421b0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x121942198 <col:4> 'int *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x121942178 <col:4> 'int *' lvalue ParmVar 0x121928228 'length' 'int *'
    |   `-ImplicitCastExpr 0x1219421e8 <col:13> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1219421c8 <col:13> 'int' lvalue Var 0x121928470 'len' 'int'
    `-ReturnStmt 0x121942398 <line:32:2, col:18>
      `-CallExpr 0x121942370 <col:9, col:18> '<dependent type>' contains-errors
        |-DeclRefExpr 0x121942330 <col:9> 'int ()' Function 0x121942278 's_check' 'int ()'
        `-RecoveryExpr 0x121942350 <col:17> '<dependent type>' contains-errors lvalue
