TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x13280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13280bc00 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x13280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x13280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x13280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x13280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x13280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x13280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x13280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x13280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x13280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x13280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x13280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x13280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13280dbb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x13280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13280dbb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-FunctionDecl 0x13280df18 <dataset_diviso_filec/func7667_vuln.c:1:1, line:59:1> line:1:1 invalid tight_detect_smooth_image24 'int (int *, int, int)'
| |-ParmVarDecl 0x13280dd28 <col:29, col:39> col:39 invalid vs 'int *'
| |-ParmVarDecl 0x13280dda8 <col:43, col:47> col:47 used w 'int'
| |-ParmVarDecl 0x13280de28 <col:50, col:54> col:54 used h 'int'
| `-CompoundStmt 0x13282a898 <line:2:1, line:59:1>
|   |-DeclStmt 0x13280e058 <line:3:5, col:12>
|   | `-VarDecl 0x13280dff0 <col:5, col:9> col:9 used off 'int'
|   |-DeclStmt 0x13280e298 <line:4:5, col:20>
|   | |-VarDecl 0x13280e088 <col:5, col:9> col:9 used x 'int'
|   | |-VarDecl 0x13280e108 <col:5, col:12> col:12 used y 'int'
|   | |-VarDecl 0x13280e188 <col:5, col:15> col:15 used d 'int'
|   | `-VarDecl 0x13280e208 <col:5, col:18> col:18 used dx 'int'
|   |-DeclStmt 0x13280e330 <line:5:5, col:19>
|   | `-VarDecl 0x13280e2c8 <col:5, col:18> col:18 used c 'unsigned int'
|   |-DeclStmt 0x132827468 <line:6:5, col:28>
|   | `-VarDecl 0x132827400 <col:5, col:27> col:18 used stats 'unsigned int[256]'
|   |-DeclStmt 0x132827520 <line:7:5, col:19>
|   | `-VarDecl 0x132827498 <col:5, col:18> col:9 used pixels 'int' cinit
|   |   `-IntegerLiteral 0x132827500 <col:18> 'int' 0
|   |-DeclStmt 0x1328276e8 <line:8:5, col:21>
|   | |-VarDecl 0x132827550 <col:5, col:9> col:9 used pix 'int'
|   | `-VarDecl 0x132827668 <col:5, col:20> col:14 used left 'int[3]'
|   |-DeclStmt 0x132827780 <line:9:5, col:24>
|   | `-VarDecl 0x132827718 <col:5, col:18> col:18 used errors 'unsigned int'
|   |-DeclStmt 0x132827948 <line:10:5, col:48>
|   | `-VarDecl 0x1328277e8 <col:5, col:42> col:20 used buf 'unsigned char *' cinit
|   |   `-CXXDependentScopeMemberExpr 0x132827900 <col:26, col:42> '<dependent type>' contains-errors lvalue .buffer
|   |     `-CXXDependentScopeMemberExpr 0x1328278b8 <col:26, col:36> '<dependent type>' contains-errors lvalue .tight
|   |       `-CXXDependentScopeMemberExpr 0x132827870 <col:26, col:30> '<dependent type>' contains-errors lvalue ->tight
|   |         `-RecoveryExpr 0x132827850 <col:26> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x132828288 <line:15:5, col:36> 'void *'
|   | |-ImplicitCastExpr 0x132828270 <col:5> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x132828130 <col:5> 'void *(void *, int, unsigned long)' Function 0x132827ee0 'memset' 'void *(void *, int, unsigned long)'
|   | |-ImplicitCastExpr 0x1328282d8 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1328282c0 <col:12> 'unsigned int *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x132828150 <col:12> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]'
|   | |-IntegerLiteral 0x132828170 <col:19> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1328281d0 <col:22, col:35> 'unsigned long' sizeof
|   |   `-ParenExpr 0x1328281b0 <col:29, col:35> 'unsigned int[256]' lvalue
|   |     `-DeclRefExpr 0x132828190 <col:30> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]' non_odr_use_unevaluated
|   |-ForStmt 0x1328299c0 <line:17:5, line:39:5>
|   | |-BinaryOperator 0x1328283b0 <line:17:10, col:21> 'int' ','
|   | | |-BinaryOperator 0x132828330 <col:10, col:14> 'int' '='
|   | | | |-DeclRefExpr 0x1328282f0 <col:10> 'int' lvalue Var 0x13280e108 'y' 'int'
|   | | | `-IntegerLiteral 0x132828310 <col:14> 'int' 0
|   | | `-BinaryOperator 0x132828390 <col:17, col:21> 'int' '='
|   | |   |-DeclRefExpr 0x132828350 <col:17> 'int' lvalue Var 0x13280e088 'x' 'int'
|   | |   `-IntegerLiteral 0x132828370 <col:21> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x133008300 <col:24, col:37> 'int' '&&'
|   | | |-BinaryOperator 0x133008250 <col:24, col:28> 'int' '<'
|   | | | |-ImplicitCastExpr 0x133008220 <col:24> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1328283d0 <col:24> 'int' lvalue Var 0x13280e108 'y' 'int'
|   | | | `-ImplicitCastExpr 0x133008238 <col:28> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x133008200 <col:28> 'int' lvalue ParmVar 0x13280de28 'h' 'int'
|   | | `-BinaryOperator 0x1330082e0 <col:33, col:37> 'int' '<'
|   | |   |-ImplicitCastExpr 0x1330082b0 <col:33> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x133008270 <col:33> 'int' lvalue Var 0x13280e088 'x' 'int'
|   | |   `-ImplicitCastExpr 0x1330082c8 <col:37> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x133008290 <col:37> 'int' lvalue ParmVar 0x13280dda8 'w' 'int'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1328299a0 <col:41, line:39:5>
|   |   |-ForStmt 0x132829698 <line:18:9, line:31:9>
|   |   | |-BinaryOperator 0x133008360 <line:18:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x133008320 <col:14> 'int' lvalue Var 0x13280e188 'd' 'int'
|   |   | | `-IntegerLiteral 0x133008340 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1330087a0 <col:21, col:46> 'int' contains-errors '&&'
|   |   | | |-BinaryOperator 0x1330086d0 <col:21, col:29> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1330086b8 <col:21> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x133008380 <col:21> 'int' lvalue Var 0x13280e188 'd' 'int'
|   |   | | | `-BinaryOperator 0x133008698 <col:25, col:29> 'int' '-'
|   |   | | |   |-ImplicitCastExpr 0x133008668 <col:25> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1330083a0 <col:25> 'int' lvalue ParmVar 0x13280de28 'h' 'int'
|   |   | | |   `-ImplicitCastExpr 0x133008680 <col:29> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1330083c0 <col:29> 'int' lvalue Var 0x13280e108 'y' 'int'
|   |   | | `-BinaryOperator 0x133008780 <col:34, col:46> 'int' contains-errors '<'
|   |   | |   |-DeclRefExpr 0x133008468 <col:34> 'int' lvalue Var 0x13280e188 'd' 'int'
|   |   | |   `-BinaryOperator 0x133008760 <col:38, col:46> '<dependent type>' contains-errors '-'
|   |   | |     |-BinaryOperator 0x133008720 <col:38, col:42> 'int' '-'
|   |   | |     | |-ImplicitCastExpr 0x1330086f0 <col:38> 'int' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x133008488 <col:38> 'int' lvalue ParmVar 0x13280dda8 'w' 'int'
|   |   | |     | `-ImplicitCastExpr 0x133008708 <col:42> 'int' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x1330084a8 <col:42> 'int' lvalue Var 0x13280e088 'x' 'int'
|   |   | |     `-RecoveryExpr 0x133008740 <col:46> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x1330087e0 <line:19:14, col:15> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x1330087c0 <col:14> 'int' lvalue Var 0x13280e188 'd' 'int'
|   |   | `-CompoundStmt 0x132829678 <col:19, line:31:9>
|   |   |   |-ForStmt 0x133008da8 <line:20:13, line:22:13>
|   |   |   | |-BinaryOperator 0x133008850 <line:20:18, col:22> 'unsigned int' '='
|   |   |   | | |-DeclRefExpr 0x1330087f8 <col:18> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |   | | `-ImplicitCastExpr 0x133008838 <col:22> 'unsigned int' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x133008818 <col:22> 'int' 0
|   |   |   | |-<<<NULL>>>
|   |   |   | |-BinaryOperator 0x1330088e0 <col:25, col:29> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x1330088b0 <col:25> 'unsigned int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x133008870 <col:25> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |   | | `-ImplicitCastExpr 0x1330088c8 <col:29> 'unsigned int' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x133008890 <col:29> 'int' 3
|   |   |   | |-UnaryOperator 0x133008920 <col:32, col:33> 'unsigned int' postfix '++'
|   |   |   | | `-DeclRefExpr 0x133008900 <col:32> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |   | `-CompoundStmt 0x133008d90 <col:37, line:22:13>
|   |   |   |   `-BinaryOperator 0x133008d70 <line:21:17, col:56> 'int' contains-errors '='
|   |   |   |     |-ArraySubscriptExpr 0x1330089a8 <col:17, col:23> 'int' lvalue
|   |   |   |     | |-ImplicitCastExpr 0x133008978 <col:17> 'int *' <ArrayToPointerDecay>
|   |   |   |     | | `-DeclRefExpr 0x133008938 <col:17> 'int[3]' lvalue Var 0x132827668 'left' 'int[3]'
|   |   |   |     | `-ImplicitCastExpr 0x133008990 <col:22> 'unsigned int' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x133008958 <col:22> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |   |     `-BinaryOperator 0x133008d50 <col:27, col:56> 'int' contains-errors '&'
|   |   |   |       |-ImplicitCastExpr 0x133008d38 <col:27, col:52> 'int' contains-errors <IntegralCast>
|   |   |   |       | `-ImplicitCastExpr 0x133008d20 <col:27, col:52> 'unsigned char' contains-errors <LValueToRValue>
|   |   |   |       |   `-ArraySubscriptExpr 0x133008ce0 <col:27, col:52> 'unsigned char' contains-errors lvalue
|   |   |   |       |     |-ImplicitCastExpr 0x133008cc8 <col:27> 'unsigned char *' contains-errors <LValueToRValue>
|   |   |   |       |     | `-DeclRefExpr 0x1330089c8 <col:27> 'unsigned char *' contains-errors lvalue Var 0x1328277e8 'buf' 'unsigned char *'
|   |   |   |       |     `-BinaryOperator 0x133008ca8 <col:31, col:51> 'unsigned int' '+'
|   |   |   |       |       |-ImplicitCastExpr 0x133008c90 <col:31, col:47> 'unsigned int' <IntegralCast>
|   |   |   |       |       | `-BinaryOperator 0x133008c38 <col:31, col:47> 'int' '+'
|   |   |   |       |       |   |-BinaryOperator 0x133008be0 <col:31, col:45> 'int' '*'
|   |   |   |       |       |   | |-ParenExpr 0x133008ba0 <col:31, col:43> 'int'
|   |   |   |       |       |   | | `-BinaryOperator 0x133008b80 <col:32, col:42> 'int' '+'
|   |   |   |       |       |   | |   |-BinaryOperator 0x133008b28 <col:32, col:40> 'int' '+'
|   |   |   |       |       |   | |   | |-BinaryOperator 0x133008ad0 <col:32, col:38> 'int' '*'
|   |   |   |       |       |   | |   | | |-ParenExpr 0x133008a78 <col:32, col:36> 'int'
|   |   |   |       |       |   | |   | | | `-BinaryOperator 0x133008a58 <col:33, col:35> 'int' '+'
|   |   |   |       |       |   | |   | | |   |-ImplicitCastExpr 0x133008a28 <col:33> 'int' <LValueToRValue>
|   |   |   |       |       |   | |   | | |   | `-DeclRefExpr 0x1330089e8 <col:33> 'int' lvalue Var 0x13280e108 'y' 'int'
|   |   |   |       |       |   | |   | | |   `-ImplicitCastExpr 0x133008a40 <col:35> 'int' <LValueToRValue>
|   |   |   |       |       |   | |   | | |     `-DeclRefExpr 0x133008a08 <col:35> 'int' lvalue Var 0x13280e188 'd' 'int'
|   |   |   |       |       |   | |   | | `-ImplicitCastExpr 0x133008ab8 <col:38> 'int' <LValueToRValue>
|   |   |   |       |       |   | |   | |   `-DeclRefExpr 0x133008a98 <col:38> 'int' lvalue ParmVar 0x13280dda8 'w' 'int'
|   |   |   |       |       |   | |   | `-ImplicitCastExpr 0x133008b10 <col:40> 'int' <LValueToRValue>
|   |   |   |       |       |   | |   |   `-DeclRefExpr 0x133008af0 <col:40> 'int' lvalue Var 0x13280e088 'x' 'int'
|   |   |   |       |       |   | |   `-ImplicitCastExpr 0x133008b68 <col:42> 'int' <LValueToRValue>
|   |   |   |       |       |   | |     `-DeclRefExpr 0x133008b48 <col:42> 'int' lvalue Var 0x13280e188 'd' 'int'
|   |   |   |       |       |   | `-IntegerLiteral 0x133008bc0 <col:45> 'int' 4
|   |   |   |       |       |   `-ImplicitCastExpr 0x133008c20 <col:47> 'int' <LValueToRValue>
|   |   |   |       |       |     `-DeclRefExpr 0x133008c00 <col:47> 'int' lvalue Var 0x13280dff0 'off' 'int'
|   |   |   |       |       `-ImplicitCastExpr 0x133008c78 <col:51> 'unsigned int' <LValueToRValue>
|   |   |   |       |         `-DeclRefExpr 0x133008c58 <col:51> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |   |       `-IntegerLiteral 0x133008d00 <col:56> 'int' 255
|   |   |   `-ForStmt 0x132829640 <line:23:13, line:30:13>
|   |   |     |-BinaryOperator 0x133008e20 <line:23:18, col:23> 'int' '='
|   |   |     | |-DeclRefExpr 0x133008de0 <col:18> 'int' lvalue Var 0x13280e208 'dx' 'int'
|   |   |     | `-IntegerLiteral 0x133008e00 <col:23> 'int' 1
|   |   |     |-<<<NULL>>>
|   |   |     |-BinaryOperator 0x133008eb8 <col:26, col:32> 'int' contains-errors '<='
|   |   |     | |-DeclRefExpr 0x133008e40 <col:26> 'int' lvalue Var 0x13280e208 'dx' 'int'
|   |   |     | `-RecoveryExpr 0x133008e98 <col:32> '<dependent type>' contains-errors lvalue
|   |   |     |-UnaryOperator 0x133008ef8 <col:63, col:65> 'int' postfix '++'
|   |   |     | `-DeclRefExpr 0x133008ed8 <col:63> 'int' lvalue Var 0x13280e208 'dx' 'int'
|   |   |     `-CompoundStmt 0x132829620 <col:69, line:30:13>
|   |   |       |-ForStmt 0x1328295b0 <line:24:17, line:28:17>
|   |   |       | |-BinaryOperator 0x133008f68 <line:24:22, col:26> 'unsigned int' '='
|   |   |       | | |-DeclRefExpr 0x133008f10 <col:22> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |       | | `-ImplicitCastExpr 0x133008f50 <col:26> 'unsigned int' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x133008f30 <col:26> 'int' 0
|   |   |       | |-<<<NULL>>>
|   |   |       | |-BinaryOperator 0x133008ff8 <col:29, col:33> 'int' '<'
|   |   |       | | |-ImplicitCastExpr 0x133008fc8 <col:29> 'unsigned int' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x133008f88 <col:29> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |       | | `-ImplicitCastExpr 0x133008fe0 <col:33> 'unsigned int' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x133008fa8 <col:33> 'int' 3
|   |   |       | |-UnaryOperator 0x133009038 <col:36, col:37> 'unsigned int' postfix '++'
|   |   |       | | `-DeclRefExpr 0x133009018 <col:36> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |       | `-CompoundStmt 0x132829588 <col:41, line:28:17>
|   |   |       |   |-BinaryOperator 0x132829080 <line:25:21, col:59> 'int' contains-errors '='
|   |   |       |   | |-DeclRefExpr 0x133009050 <col:21> 'int' lvalue Var 0x132827550 'pix' 'int'
|   |   |       |   | `-BinaryOperator 0x132829060 <col:27, col:59> 'int' contains-errors '&'
|   |   |       |   |   |-ImplicitCastExpr 0x132829048 <col:27, col:55> 'int' contains-errors <IntegralCast>
|   |   |       |   |   | `-ImplicitCastExpr 0x132829030 <col:27, col:55> 'unsigned char' contains-errors <LValueToRValue>
|   |   |       |   |   |   `-ArraySubscriptExpr 0x132828ff0 <col:27, col:55> 'unsigned char' contains-errors lvalue
|   |   |       |   |   |     |-ImplicitCastExpr 0x132828fd8 <col:27> 'unsigned char *' contains-errors <LValueToRValue>
|   |   |       |   |   |     | `-DeclRefExpr 0x133009070 <col:27> 'unsigned char *' contains-errors lvalue Var 0x1328277e8 'buf' 'unsigned char *'
|   |   |       |   |   |     `-BinaryOperator 0x132828fb8 <col:31, col:54> 'unsigned int' '+'
|   |   |       |   |   |       |-ImplicitCastExpr 0x132828fa0 <col:31, col:50> 'unsigned int' <IntegralCast>
|   |   |       |   |   |       | `-BinaryOperator 0x132828f48 <col:31, col:50> 'int' '+'
|   |   |       |   |   |       |   |-BinaryOperator 0x132828ef0 <col:31, col:48> 'int' '*'
|   |   |       |   |   |       |   | |-ParenExpr 0x132828eb0 <col:31, col:46> 'int'
|   |   |       |   |   |       |   | | `-BinaryOperator 0x132828e90 <col:32, col:44> 'int' '+'
|   |   |       |   |   |       |   | |   |-BinaryOperator 0x132828e38 <col:32, col:42> 'int' '+'
|   |   |       |   |   |       |   | |   | |-BinaryOperator 0x1330091d0 <col:32, col:40> 'int' '+'
|   |   |       |   |   |       |   | |   | | |-BinaryOperator 0x133009178 <col:32, col:38> 'int' '*'
|   |   |       |   |   |       |   | |   | | | |-ParenExpr 0x133009120 <col:32, col:36> 'int'
|   |   |       |   |   |       |   | |   | | | | `-BinaryOperator 0x133009100 <col:33, col:35> 'int' '+'
|   |   |       |   |   |       |   | |   | | | |   |-ImplicitCastExpr 0x1330090d0 <col:33> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   | | | |   | `-DeclRefExpr 0x133009090 <col:33> 'int' lvalue Var 0x13280e108 'y' 'int'
|   |   |       |   |   |       |   | |   | | | |   `-ImplicitCastExpr 0x1330090e8 <col:35> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   | | | |     `-DeclRefExpr 0x1330090b0 <col:35> 'int' lvalue Var 0x13280e188 'd' 'int'
|   |   |       |   |   |       |   | |   | | | `-ImplicitCastExpr 0x133009160 <col:38> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   | | |   `-DeclRefExpr 0x133009140 <col:38> 'int' lvalue ParmVar 0x13280dda8 'w' 'int'
|   |   |       |   |   |       |   | |   | | `-ImplicitCastExpr 0x1330091b8 <col:40> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   | |   `-DeclRefExpr 0x133009198 <col:40> 'int' lvalue Var 0x13280e088 'x' 'int'
|   |   |       |   |   |       |   | |   | `-ImplicitCastExpr 0x132828e20 <col:42> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   |   `-DeclRefExpr 0x132828e00 <col:42> 'int' lvalue Var 0x13280e188 'd' 'int'
|   |   |       |   |   |       |   | |   `-ImplicitCastExpr 0x132828e78 <col:44> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |     `-DeclRefExpr 0x132828e58 <col:44> 'int' lvalue Var 0x13280e208 'dx' 'int'
|   |   |       |   |   |       |   | `-IntegerLiteral 0x132828ed0 <col:48> 'int' 4
|   |   |       |   |   |       |   `-ImplicitCastExpr 0x132828f30 <col:50> 'int' <LValueToRValue>
|   |   |       |   |   |       |     `-DeclRefExpr 0x132828f10 <col:50> 'int' lvalue Var 0x13280dff0 'off' 'int'
|   |   |       |   |   |       `-ImplicitCastExpr 0x132828f88 <col:54> 'unsigned int' <LValueToRValue>
|   |   |       |   |   |         `-DeclRefExpr 0x132828f68 <col:54> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |       |   |   `-IntegerLiteral 0x132829010 <col:59> 'int' 255
|   |   |       |   |-UnaryOperator 0x132829488 <line:26:21, col:46> 'unsigned int' postfix '++'
|   |   |       |   | `-ArraySubscriptExpr 0x132829468 <col:21, col:45> 'unsigned int' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x132829450 <col:21> 'unsigned int *' <ArrayToPointerDecay>
|   |   |       |   |   | `-DeclRefExpr 0x1328290a0 <col:21> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]'
|   |   |       |   |   `-CallExpr 0x132829428 <col:27, col:44> 'int'
|   |   |       |   |     |-ImplicitCastExpr 0x132829410 <col:27> 'int (*)(int)' <FunctionToPointerDecay>
|   |   |       |   |     | `-DeclRefExpr 0x1328292b8 <col:27> 'int (int)' Function 0x1328290f8 'abs' 'int (int)'
|   |   |       |   |     `-BinaryOperator 0x1328293b8 <col:31, col:43> 'int' '-'
|   |   |       |   |       |-ImplicitCastExpr 0x132829388 <col:31> 'int' <LValueToRValue>
|   |   |       |   |       | `-DeclRefExpr 0x1328292d8 <col:31> 'int' lvalue Var 0x132827550 'pix' 'int'
|   |   |       |   |       `-ImplicitCastExpr 0x1328293a0 <col:37, col:43> 'int' <LValueToRValue>
|   |   |       |   |         `-ArraySubscriptExpr 0x132829368 <col:37, col:43> 'int' lvalue
|   |   |       |   |           |-ImplicitCastExpr 0x132829338 <col:37> 'int *' <ArrayToPointerDecay>
|   |   |       |   |           | `-DeclRefExpr 0x1328292f8 <col:37> 'int[3]' lvalue Var 0x132827668 'left' 'int[3]'
|   |   |       |   |           `-ImplicitCastExpr 0x132829350 <col:42> 'unsigned int' <LValueToRValue>
|   |   |       |   |             `-DeclRefExpr 0x132829318 <col:42> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |       |   `-BinaryOperator 0x132829568 <line:27:21, col:31> 'int' '='
|   |   |       |     |-ArraySubscriptExpr 0x132829510 <col:21, col:27> 'int' lvalue
|   |   |       |     | |-ImplicitCastExpr 0x1328294e0 <col:21> 'int *' <ArrayToPointerDecay>
|   |   |       |     | | `-DeclRefExpr 0x1328294a0 <col:21> 'int[3]' lvalue Var 0x132827668 'left' 'int[3]'
|   |   |       |     | `-ImplicitCastExpr 0x1328294f8 <col:26> 'unsigned int' <LValueToRValue>
|   |   |       |     |   `-DeclRefExpr 0x1328294c0 <col:26> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |       |     `-ImplicitCastExpr 0x132829550 <col:31> 'int' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x132829530 <col:31> 'int' lvalue Var 0x132827550 'pix' 'int'
|   |   |       `-UnaryOperator 0x132829608 <line:29:17, col:23> 'int' postfix '++'
|   |   |         `-DeclRefExpr 0x1328295e8 <col:17> 'int' lvalue Var 0x132827498 'pixels' 'int'
|   |   `-IfStmt 0x132829970 <line:32:9, line:38:9> has_else
|   |     |-BinaryOperator 0x132829740 <line:32:13, col:17> 'int' '>'
|   |     | |-ImplicitCastExpr 0x132829710 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1328296d0 <col:13> 'int' lvalue ParmVar 0x13280dda8 'w' 'int'
|   |     | `-ImplicitCastExpr 0x132829728 <col:17> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1328296f0 <col:17> 'int' lvalue ParmVar 0x13280de28 'h' 'int'
|   |     |-CompoundStmt 0x132829848 <col:20, line:35:9>
|   |     | |-CompoundAssignOperator 0x1328297b8 <line:33:13, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | | |-DeclRefExpr 0x132829760 <col:13> 'int' lvalue Var 0x13280e088 'x' 'int'
|   |     | | `-ImplicitCastExpr 0x1328297a0 <col:18> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x132829780 <col:18> 'int' lvalue ParmVar 0x13280de28 'h' 'int'
|   |     | `-BinaryOperator 0x132829828 <line:34:13, col:17> 'int' '='
|   |     |   |-DeclRefExpr 0x1328297e8 <col:13> 'int' lvalue Var 0x13280e108 'y' 'int'
|   |     |   `-IntegerLiteral 0x132829808 <col:17> 'int' 0
|   |     `-CompoundStmt 0x132829950 <line:35:16, line:38:9>
|   |       |-BinaryOperator 0x1328298a8 <line:36:13, col:17> 'int' '='
|   |       | |-DeclRefExpr 0x132829868 <col:13> 'int' lvalue Var 0x13280e088 'x' 'int'
|   |       | `-IntegerLiteral 0x132829888 <col:17> 'int' 0
|   |       `-CompoundAssignOperator 0x132829920 <line:37:13, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-DeclRefExpr 0x1328298c8 <col:13> 'int' lvalue Var 0x13280e108 'y' 'int'
|   |         `-ImplicitCastExpr 0x132829908 <col:18> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1328298e8 <col:18> 'int' lvalue ParmVar 0x13280dda8 'w' 'int'
|   |-IfStmt 0x132829bf0 <line:42:5, line:44:5>
|   | |-BinaryOperator 0x132829b88 <line:42:9, col:35> 'int' '>='
|   | | |-BinaryOperator 0x132829b30 <col:9, col:25> 'unsigned int' '/'
|   | | | |-BinaryOperator 0x132829ac0 <col:9, col:20> 'unsigned int' '*'
|   | | | | |-ImplicitCastExpr 0x132829a90 <col:9, col:16> 'unsigned int' <LValueToRValue>
|   | | | | | `-ArraySubscriptExpr 0x132829a50 <col:9, col:16> 'unsigned int' lvalue
|   | | | | |   |-ImplicitCastExpr 0x132829a38 <col:9> 'unsigned int *' <ArrayToPointerDecay>
|   | | | | |   | `-DeclRefExpr 0x1328299f8 <col:9> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]'
|   | | | | |   `-IntegerLiteral 0x132829a18 <col:15> 'int' 0
|   | | | | `-ImplicitCastExpr 0x132829aa8 <col:20> 'unsigned int' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x132829a70 <col:20> 'int' 33
|   | | | `-ImplicitCastExpr 0x132829b18 <col:25> 'unsigned int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x132829b00 <col:25> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x132829ae0 <col:25> 'int' lvalue Var 0x132827498 'pixels' 'int'
|   | | `-ImplicitCastExpr 0x132829b70 <col:35> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x132829b50 <col:35> 'int' 95
|   | `-CompoundStmt 0x132829bd8 <col:39, line:44:5>
|   |   `-ReturnStmt 0x132829bc8 <line:43:9, col:16>
|   |     `-IntegerLiteral 0x132829ba8 <col:16> 'int' 0
|   |-BinaryOperator 0x132829c68 <line:46:5, col:14> 'unsigned int' '='
|   | |-DeclRefExpr 0x132829c10 <col:5> 'unsigned int' lvalue Var 0x132827718 'errors' 'unsigned int'
|   | `-ImplicitCastExpr 0x132829c50 <col:14> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x132829c30 <col:14> 'int' 0
|   |-ForStmt 0x13282a370 <line:47:5, line:52:5>
|   | |-BinaryOperator 0x132829ce0 <line:47:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x132829c88 <col:10> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   | | `-ImplicitCastExpr 0x132829cc8 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x132829ca8 <col:14> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x132829d70 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x132829d40 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x132829d00 <col:17> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   | | `-ImplicitCastExpr 0x132829d58 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x132829d20 <col:21> 'int' 8
|   | |-UnaryOperator 0x132829db0 <col:24, col:25> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x132829d90 <col:24> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   | `-CompoundStmt 0x13282a350 <col:29, line:52:5>
|   |   |-CompoundAssignOperator 0x132829f78 <line:48:9, col:36> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x132829dc8 <col:9> 'unsigned int' lvalue Var 0x132827718 'errors' 'unsigned int'
|   |   | `-BinaryOperator 0x132829f58 <col:19, col:36> 'unsigned int' '*'
|   |   |   |-ImplicitCastExpr 0x132829f40 <col:19, col:26> 'unsigned int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x132829e70 <col:19, col:26> 'unsigned int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x132829e40 <col:19> 'unsigned int *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x132829e00 <col:19> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]'
|   |   |   |   `-ImplicitCastExpr 0x132829e58 <col:25> 'unsigned int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x132829e20 <col:25> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |   `-ParenExpr 0x132829f20 <col:30, col:36> 'unsigned int'
|   |   |     `-BinaryOperator 0x132829f00 <col:31, col:35> 'unsigned int' '*'
|   |   |       |-ImplicitCastExpr 0x132829ed0 <col:31> 'unsigned int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x132829e90 <col:31> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   |       `-ImplicitCastExpr 0x132829ee8 <col:35> 'unsigned int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x132829eb0 <col:35> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |   `-IfStmt 0x13282a330 <line:49:9, line:51:9>
|   |     |-BinaryOperator 0x13282a2c8 <line:49:13, col:54> 'int' '||'
|   |     | |-BinaryOperator 0x13282a088 <col:13, col:25> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x13282a058 <col:13, col:20> 'unsigned int' <LValueToRValue>
|   |     | | | `-ArraySubscriptExpr 0x13282a018 <col:13, col:20> 'unsigned int' lvalue
|   |     | | |   |-ImplicitCastExpr 0x132829fe8 <col:13> 'unsigned int *' <ArrayToPointerDecay>
|   |     | | |   | `-DeclRefExpr 0x132829fa8 <col:13> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]'
|   |     | | |   `-ImplicitCastExpr 0x13282a000 <col:19> 'unsigned int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x132829fc8 <col:19> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |     | | `-ImplicitCastExpr 0x13282a070 <col:25> 'unsigned int' <IntegralCast>
|   |     | |   `-IntegerLiteral 0x13282a038 <col:25> 'int' 0
|   |     | `-BinaryOperator 0x13282a2a8 <col:30, col:54> 'int' '>'
|   |     |   |-ImplicitCastExpr 0x13282a290 <col:30, col:37> 'unsigned int' <LValueToRValue>
|   |     |   | `-ArraySubscriptExpr 0x13282a118 <col:30, col:37> 'unsigned int' lvalue
|   |     |   |   |-ImplicitCastExpr 0x13282a0e8 <col:30> 'unsigned int *' <ArrayToPointerDecay>
|   |     |   |   | `-DeclRefExpr 0x13282a0a8 <col:30> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]'
|   |     |   |   `-ImplicitCastExpr 0x13282a100 <col:36> 'unsigned int' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x13282a0c8 <col:36> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |     |   `-BinaryOperator 0x13282a270 <col:41, col:54> 'unsigned int' '*'
|   |     |     |-ImplicitCastExpr 0x13282a240 <col:41, col:50> 'unsigned int' <LValueToRValue>
|   |     |     | `-ArraySubscriptExpr 0x13282a200 <col:41, col:50> 'unsigned int' lvalue
|   |     |     |   |-ImplicitCastExpr 0x13282a1e8 <col:41> 'unsigned int *' <ArrayToPointerDecay>
|   |     |     |   | `-DeclRefExpr 0x13282a138 <col:41> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]'
|   |     |     |   `-BinaryOperator 0x13282a1c8 <col:47, col:49> 'unsigned int' '-'
|   |     |     |     |-ImplicitCastExpr 0x13282a198 <col:47> 'unsigned int' <LValueToRValue>
|   |     |     |     | `-DeclRefExpr 0x13282a158 <col:47> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |     |     |     `-ImplicitCastExpr 0x13282a1b0 <col:49> 'unsigned int' <IntegralCast>
|   |     |     |       `-IntegerLiteral 0x13282a178 <col:49> 'int' 1
|   |     |     `-ImplicitCastExpr 0x13282a258 <col:54> 'unsigned int' <IntegralCast>
|   |     |       `-IntegerLiteral 0x13282a220 <col:54> 'int' 2
|   |     `-CompoundStmt 0x13282a318 <col:57, line:51:9>
|   |       `-ReturnStmt 0x13282a308 <line:50:13, col:20>
|   |         `-IntegerLiteral 0x13282a2e8 <col:20> 'int' 0
|   |-ForStmt 0x13282a650 <line:53:5, line:55:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13282a418 <line:53:12, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x13282a3e8 <col:12> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13282a3a8 <col:12> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13282a400 <col:16> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13282a3c8 <col:16> 'int' 256
|   | |-UnaryOperator 0x13282a458 <col:21, col:22> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x13282a438 <col:21> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   | `-CompoundStmt 0x13282a638 <col:26, line:55:5>
|   |   `-CompoundAssignOperator 0x13282a608 <line:54:9, col:36> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x13282a470 <col:9> 'unsigned int' lvalue Var 0x132827718 'errors' 'unsigned int'
|   |     `-BinaryOperator 0x13282a5e8 <col:19, col:36> 'unsigned int' '*'
|   |       |-ImplicitCastExpr 0x13282a5d0 <col:19, col:26> 'unsigned int' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x13282a500 <col:19, col:26> 'unsigned int' lvalue
|   |       |   |-ImplicitCastExpr 0x13282a4d0 <col:19> 'unsigned int *' <ArrayToPointerDecay>
|   |       |   | `-DeclRefExpr 0x13282a490 <col:19> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]'
|   |       |   `-ImplicitCastExpr 0x13282a4e8 <col:25> 'unsigned int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x13282a4b0 <col:25> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |       `-ParenExpr 0x13282a5b0 <col:30, col:36> 'unsigned int'
|   |         `-BinaryOperator 0x13282a590 <col:31, col:35> 'unsigned int' '*'
|   |           |-ImplicitCastExpr 0x13282a560 <col:31> 'unsigned int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x13282a520 <col:31> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |           `-ImplicitCastExpr 0x13282a578 <col:35> 'unsigned int' <LValueToRValue>
|   |             `-DeclRefExpr 0x13282a540 <col:35> 'unsigned int' lvalue Var 0x13280e2c8 'c' 'unsigned int'
|   |-CompoundAssignOperator 0x13282a808 <line:56:5, col:37> 'unsigned int' '/=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x13282a688 <col:5> 'unsigned int' lvalue Var 0x132827718 'errors' 'unsigned int'
|   | `-ParenExpr 0x13282a7e8 <col:15, col:37> 'unsigned int'
|   |   `-BinaryOperator 0x13282a7c8 <col:16, col:36> 'unsigned int' '-'
|   |     |-ImplicitCastExpr 0x13282a7b0 <col:16, col:25> 'unsigned int' <IntegralCast>
|   |     | `-BinaryOperator 0x13282a700 <col:16, col:25> 'int' '*'
|   |     |   |-ImplicitCastExpr 0x13282a6e8 <col:16> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x13282a6a8 <col:16> 'int' lvalue Var 0x132827498 'pixels' 'int'
|   |     |   `-IntegerLiteral 0x13282a6c8 <col:25> 'int' 3
|   |     `-ImplicitCastExpr 0x13282a798 <col:29, col:36> 'unsigned int' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x13282a778 <col:29, col:36> 'unsigned int' lvalue
|   |         |-ImplicitCastExpr 0x13282a760 <col:29> 'unsigned int *' <ArrayToPointerDecay>
|   |         | `-DeclRefExpr 0x13282a720 <col:29> 'unsigned int[256]' lvalue Var 0x132827400 'stats' 'unsigned int[256]'
|   |         `-IntegerLiteral 0x13282a740 <col:35> 'int' 0
|   `-ReturnStmt 0x13282a888 <line:58:5, col:12>
|     `-ImplicitCastExpr 0x13282a870 <col:12> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x13282a858 <col:12> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x13282a838 <col:12> 'unsigned int' lvalue Var 0x132827718 'errors' 'unsigned int'
|-FunctionDecl 0x132827ee0 <line:15:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x132827fe0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x132828048 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x1328280b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x132827f88 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x1328290f8 <line:26:27> col:27 implicit used abs 'int (int)' extern
  |-ParmVarDecl 0x1328291f8 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x1328291a0 <<invalid sloc>> Implicit 998
  |-NoThrowAttr 0x132829268 <col:27> Implicit
  `-ConstAttr 0x132829290 <col:27> Implicit
