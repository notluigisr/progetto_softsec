TranslationUnitDecl 0x13a83f208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a8400b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a83f7d0 '__int128'
|-TypedefDecl 0x13a840128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a83f7f0 'unsigned __int128'
|-TypedefDecl 0x13b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13a840180 '__NSConstantString_tag'
|-TypedefDecl 0x13b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a83f990 '__SVInt8_t'
|-TypedefDecl 0x13b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a83f9b0 '__SVInt16_t'
|-TypedefDecl 0x13b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a83f9d0 '__SVInt32_t'
|-TypedefDecl 0x13b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a83f9f0 '__SVInt64_t'
|-TypedefDecl 0x13b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a83fa10 '__SVUint8_t'
|-TypedefDecl 0x13b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a83fa30 '__SVUint16_t'
|-TypedefDecl 0x13b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a83fa50 '__SVUint32_t'
|-TypedefDecl 0x13b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a83fa70 '__SVUint64_t'
|-TypedefDecl 0x13b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a83fa90 '__SVFloat16_t'
|-TypedefDecl 0x13b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a83fab0 '__SVFloat32_t'
|-TypedefDecl 0x13b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a83fad0 '__SVFloat64_t'
|-TypedefDecl 0x13b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a83faf0 '__SVBfloat16_t'
|-TypedefDecl 0x13b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a83fb10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a83fb30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a83fb50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a83fb70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a83fb90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a83fbb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a83fbd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a83fbf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a83fc10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a83fc30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a83fc50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a83fc70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a83fc90 '__clang_svint8x3_t'
|-TypedefDecl 0x13b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a83fcb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a83fcd0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a83fcf0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a83fd10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a83fd30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a83fd50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a83fd70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a83fd90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a83fdb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a83fdd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a83fdf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a83fe10 '__clang_svint8x4_t'
|-TypedefDecl 0x13b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a83fe30 '__clang_svint16x4_t'
|-TypedefDecl 0x13b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a83fe50 '__clang_svint32x4_t'
|-TypedefDecl 0x13b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a83fe70 '__clang_svint64x4_t'
|-TypedefDecl 0x13b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a83fe90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a83feb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a83fed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a83fef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a83ff10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a83ff30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a83ff50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a83ff70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a83ff90 '__SVBool_t'
|-TypedefDecl 0x13b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a83ffb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a83ffd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a83fff0 '__SVCount_t'
|-TypedefDecl 0x13b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13a83f2b0 'char'
|-TypedefDecl 0x13b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13a83f2b0 'char'
|-FunctionDecl 0x13a012e38 <dataset_diviso_filec/func11051_vuln.c:1:1, line:55:1> line:1:1 invalid delete_principal_2_svc 'int (int *, struct svc_req *)'
| |-ParmVarDecl 0x13b80dd28 <col:24, col:36> col:36 invalid arg 'int *'
| |-ParmVarDecl 0x13b80e318 <col:41, col:57> col:57 used rqstp 'struct svc_req *'
| `-CompoundStmt 0x13c009380 <line:2:1, line:55:1>
|   |-DeclStmt 0x13a012f70 <line:3:5, col:40>
|   | `-VarDecl 0x13a012f08 <col:5, col:37> col:37 referenced invalid ret 'int' static
|   |-DeclStmt 0x13a013008 <line:4:5, col:47>
|   | `-VarDecl 0x13a012fa0 <col:5, col:38> col:38 used prime_arg 'char *'
|   |-DeclStmt 0x13a0130d8 <line:9:5, col:51>
|   | `-VarDecl 0x13a013038 <col:5, col:47> col:38 used errmsg 'const char *' cinit
|   |   `-RecoveryExpr 0x13a0130b8 <col:47> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13a013310 <line:11:5, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13a013250 <col:5> 'int ()' Function 0x13a013198 'xdr_free' 'int ()'
|   | |-RecoveryExpr 0x13a0132f0 <col:14> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x13a0132a8 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x13a013288 <col:32> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13a013640 <line:13:5, line:14:14>
|   | |-RecoveryExpr 0x13a0135b8 <line:13:9, col:72> '_Bool' contains-errors
|   | `-GotoStmt 0x13a013628 <line:14:9, col:14> 'exit_func' 0x13a0135d8
|   |-IfStmt 0x13a013830 <line:16:5, line:17:14>
|   | |-RecoveryExpr 0x13a0137f8 <line:16:9, col:49> '_Bool' contains-errors
|   | `-GotoStmt 0x13a013818 <line:17:9, col:14> 'exit_func' 0x13a0135d8
|   |-BinaryOperator 0x13a0139c8 <line:19:5, col:31> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13a013898 <col:5, col:9> '<dependent type>' contains-errors lvalue .api_version
|   | | `-RecoveryExpr 0x13a013870 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13a013850 <col:5> 'int' lvalue Var 0x13a012f08 'ret' 'int'
|   | `-CXXDependentScopeMemberExpr 0x13a013980 <col:23, col:31> '<dependent type>' contains-errors lvalue ->api_version
|   |   `-RecoveryExpr 0x13a013960 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13b827800 <line:21:5, line:24:5>
|   | |-BinaryOperator 0x13a013c88 <line:21:9, col:63> 'int' contains-errors '<'
|   | | |-CallExpr 0x13a013c50 <col:9, col:59> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x13a013ac8 <col:9> 'int ()' Function 0x13a013a10 'setup_gss_names' 'int ()'
|   | | | |-DeclRefExpr 0x13a013ae8 <col:25> 'struct svc_req *' lvalue ParmVar 0x13b80e318 'rqstp' 'struct svc_req *'
|   | | | |-UnaryOperator 0x13a013c00 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x13a013be0 <col:33> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x13a013c38 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x13a013c18 <col:47> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x13a013ba0 <col:63> 'int' 0
|   | `-CompoundStmt 0x13a013dc8 <col:66, line:24:5>
|   |   |-BinaryOperator 0x13a013d90 <line:22:9, col:20> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x13a013cf0 <col:9, col:13> '<dependent type>' contains-errors lvalue .code
|   |   | | `-RecoveryExpr 0x13a013cc8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x13a013ca8 <col:9> 'int' lvalue Var 0x13a012f08 'ret' 'int'
|   |   | `-RecoveryExpr 0x13a013d70 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x13a013db0 <line:23:9, col:14> 'exit_func' 0x13a0135d8
|   |-IfStmt 0x13b827bf0 <line:25:5, line:28:5>
|   | |-CallExpr 0x13b827af8 <line:25:9, col:66> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13b827900 <col:9> 'int ()' Function 0x13b827848 'krb5_unparse_name' 'int ()'
|   | | |-CXXDependentScopeMemberExpr 0x13b827ab0 <col:27, col:35> '<dependent type>' contains-errors lvalue ->context
|   | | | `-RecoveryExpr 0x13b827a90 <col:27> '<dependent type>' contains-errors lvalue
|   | | |-CXXDependentScopeMemberExpr 0x13b8279a0 <col:44, col:49> '<dependent type>' contains-errors lvalue ->princ
|   | | | `-RecoveryExpr 0x13b827980 <col:44> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x13b827a40 <col:56, col:57> 'char **' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x13b8279e8 <col:57> 'char *' lvalue Var 0x13a012fa0 'prime_arg' 'char *'
|   | `-CompoundStmt 0x13b827bd8 <col:69, line:28:5>
|   |   `-GotoStmt 0x13b827bc0 <line:27:9, col:14> 'exit_func' 0x13a0135d8
|   |-IfStmt 0x13c008e20 <line:30:5, line:47:5> has_else
|   | |-RecoveryExpr 0x13b828098 <line:30:9, line:32:48> '_Bool' contains-errors
|   | |-CompoundStmt 0x13b8282f0 <col:51, line:36:5>
|   | `-CompoundStmt 0x13c008e10 <col:12, line:47:5>
|   |-CallExpr 0x13c009098 <line:48:5, col:19> 'void'
|   | |-ImplicitCastExpr 0x13c009080 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13c008ff8 <col:5> 'void (void *)' Function 0x13c008e88 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x13c0090d8 <col:10> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x13c0090c0 <col:10> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13c009018 <col:10> 'char *' lvalue Var 0x13a012fa0 'prime_arg' 'char *'
|   |-LabelStmt 0x13c009318 <line:52:1, col:10> 'exit_func'
|   | `-NullStmt 0x13c009310 <col:10>
|   `-ReturnStmt 0x13c009370 <line:54:5, col:13>
|     `-UnaryOperator 0x13c009358 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|       `-RecoveryExpr 0x13c009338 <col:13> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13c008e88 <line:48:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13c008f88 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13c008f30 <<invalid sloc>> Implicit 873
