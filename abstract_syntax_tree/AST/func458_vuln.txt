TranslationUnitDecl 0x135055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1350564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135055bd0 '__int128'
|-TypedefDecl 0x135056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135055bf0 'unsigned __int128'
|-TypedefDecl 0x135126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135126000 'struct __NSConstantString_tag'
|   `-Record 0x135056580 '__NSConstantString_tag'
|-TypedefDecl 0x135126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135055d90 '__SVInt8_t'
|-TypedefDecl 0x135126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135055db0 '__SVInt16_t'
|-TypedefDecl 0x135126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135055dd0 '__SVInt32_t'
|-TypedefDecl 0x1351263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135055df0 '__SVInt64_t'
|-TypedefDecl 0x135126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135055e10 '__SVUint8_t'
|-TypedefDecl 0x1351264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135055e30 '__SVUint16_t'
|-TypedefDecl 0x135126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135055e50 '__SVUint32_t'
|-TypedefDecl 0x135126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135055e70 '__SVUint64_t'
|-TypedefDecl 0x1351265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135055e90 '__SVFloat16_t'
|-TypedefDecl 0x135126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1351266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135055ed0 '__SVFloat64_t'
|-TypedefDecl 0x135126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1351267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1351268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1351269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x135126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x135126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135056090 '__clang_svint8x3_t'
|-TypedefDecl 0x135126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1350560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1350560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1350560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x135126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x135126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1350561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1350561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1351278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1350561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1351279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135056230 '__clang_svint16x4_t'
|-TypedefDecl 0x135127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135056250 '__clang_svint32x4_t'
|-TypedefDecl 0x135127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135056270 '__clang_svint64x4_t'
|-TypedefDecl 0x135127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1350562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x135127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1350562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1350562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x135127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x135127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135056390 '__SVBool_t'
|-TypedefDecl 0x135127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1350563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x135127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1350563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1350563f0 '__SVCount_t'
|-TypedefDecl 0x135127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x135127fb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
|-TypedefDecl 0x135128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x135127fb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
`-FunctionDecl 0x1351284d8 <dataset_diviso_filec/func458_vuln.c:1:1, line:23:1> line:1:5 diskutil_dd2 'int (const char *, const char *, const int, const long long, const long long, const long long)'
  |-ParmVarDecl 0x1351280d8 <col:18, col:30> col:30 used in 'const char *'
  |-ParmVarDecl 0x135128158 <col:34, col:46> col:46 used out 'const char *'
  |-ParmVarDecl 0x1351281d8 <col:51, col:61> col:61 used bs 'const int'
  |-ParmVarDecl 0x135128258 <col:65, col:81> col:81 used count 'const long long'
  |-ParmVarDecl 0x1351282d8 <col:88, col:104> col:104 used seek 'const long long'
  |-ParmVarDecl 0x135128358 <col:110, col:126> col:126 used skip 'const long long'
  `-CompoundStmt 0x1351427c0 <line:2:1, line:23:1>
    |-DeclStmt 0x1351286c8 <line:3:5, col:24>
    | `-VarDecl 0x135128610 <col:5, col:20> col:11 used output 'char *' cinit
    |   `-RecoveryExpr 0x1351286a8 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1351423f0 <line:5:5, line:19:5>
    | |-BinaryOperator 0x135128750 <line:5:9, col:15> 'int' '&&'
    | | |-ImplicitCastExpr 0x135128720 <col:9> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1351286e0 <col:9> 'const char *' lvalue ParmVar 0x1351280d8 'in' 'const char *'
    | | `-ImplicitCastExpr 0x135128738 <col:15> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x135128700 <col:15> 'const char *' lvalue ParmVar 0x135128158 'out' 'const char *'
    | `-CompoundStmt 0x1351423b8 <col:20, line:19:5>
    |   |-CallExpr 0x1351419a8 <line:6:9, col:26> 'int'
    |   | |-ImplicitCastExpr 0x135141990 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1351418b8 <col:9> 'int ()' Function 0x135141800 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x1351419d8 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x135141920 <col:17> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x1351419f0 <col:24> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x135141940 <col:24> 'const char *' lvalue ParmVar 0x1351280d8 'in' 'const char *'
    |   |-CallExpr 0x135141a80 <line:7:9, col:27> 'int'
    |   | |-ImplicitCastExpr 0x135141a68 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x135141a08 <col:9> 'int ()' Function 0x135141800 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x135141ab0 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x135141a28 <col:17> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x135141ac8 <col:24> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x135141a48 <col:24> 'const char *' lvalue ParmVar 0x135128158 'out' 'const char *'
    |   |-CallExpr 0x135141bb8 <line:8:9, col:45> 'int'
    |   | |-ImplicitCastExpr 0x135141ba0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x135141ae0 <col:9> 'int ()' Function 0x135141800 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x135141c00 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x135141b00 <col:17> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x135141c18 <col:24> 'long long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x135141b20 <col:24> 'const long long' lvalue ParmVar 0x135128258 'count' 'const long long'
    |   | |-ImplicitCastExpr 0x135141c30 <col:31> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x135141b40 <col:31> 'const int' lvalue ParmVar 0x1351281d8 'bs' 'const int'
    |   | |-ImplicitCastExpr 0x135141c48 <col:35> 'long long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x135141b60 <col:35> 'const long long' lvalue ParmVar 0x1351282d8 'seek' 'const long long'
    |   | `-ImplicitCastExpr 0x135141c60 <col:41> 'long long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x135141b80 <col:41> 'const long long' lvalue ParmVar 0x135128358 'skip' 'const long long'
    |   |-IfStmt 0x135142208 <line:11:9, line:15:9>
    |   | |-UnaryOperator 0x135141f28 <line:11:13, col:14> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x135141f10 <col:14> 'char *' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x135141ef0 <col:14> 'char *' contains-errors lvalue Var 0x135128610 'output' 'char *'
    |   | `-CompoundStmt 0x1351421e8 <col:22, line:15:9>
    |   |   |-CallExpr 0x135142098 <line:12:13, col:31> 'int'
    |   |   | |-ImplicitCastExpr 0x135142080 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x135142020 <col:13> 'int ()' Function 0x135141f68 'LOGERROR' 'int ()'
    |   |   | |-ImplicitCastExpr 0x1351420c8 <col:22> 'char *' <ArrayToPointerDecay>
    |   |   | | `-StringLiteral 0x135142040 <col:22> 'char[4]' lvalue "STR"
    |   |   | `-ImplicitCastExpr 0x1351420e0 <col:29> 'const char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x135142060 <col:29> 'const char *' lvalue ParmVar 0x1351280d8 'in' 'const char *'
    |   |   `-CallExpr 0x135142170 <line:13:13, col:32> 'int'
    |   |     |-ImplicitCastExpr 0x135142158 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1351420f8 <col:13> 'int ()' Function 0x135141f68 'LOGERROR' 'int ()'
    |   |     |-ImplicitCastExpr 0x1351421a0 <col:22> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x135142118 <col:22> 'char[4]' lvalue "STR"
    |   |     `-ImplicitCastExpr 0x1351421b8 <col:29> 'const char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x135142138 <col:29> 'const char *' lvalue ParmVar 0x135128158 'out' 'const char *'
    |   `-CallExpr 0x135142360 <line:17:9, col:25> 'int' contains-errors
    |     |-ImplicitCastExpr 0x135142348 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x135142308 <col:9> 'int ()' Function 0x135142250 'EUCA_FREE' 'int ()'
    |     `-ImplicitCastExpr 0x135142388 <col:19> 'char *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x135142328 <col:19> 'char *' contains-errors lvalue Var 0x135128610 'output' 'char *'
    `-CallExpr 0x135142758 <line:21:5, col:35> 'int'
      |-ImplicitCastExpr 0x135142740 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x1351424f0 <col:5> 'int ()' Function 0x135142438 'LOGWARN' 'int ()'
      |-ImplicitCastExpr 0x135142790 <col:13> 'char *' <ArrayToPointerDecay>
      | `-StringLiteral 0x135142510 <col:13> 'char[4]' lvalue "STR"
      |-CallExpr 0x135142668 <col:20, col:25> 'int'
      | |-ImplicitCastExpr 0x135142650 <col:20> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x135142610 <col:20> 'int ()' Function 0x135142558 'SP' 'int ()'
      | `-ImplicitCastExpr 0x135142690 <col:23> 'const char *' <LValueToRValue>
      |   `-DeclRefExpr 0x135142630 <col:23> 'const char *' lvalue ParmVar 0x1351280d8 'in' 'const char *'
      `-CallExpr 0x135142700 <col:28, col:34> 'int'
        |-ImplicitCastExpr 0x1351426e8 <col:28> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x1351426a8 <col:28> 'int ()' Function 0x135142558 'SP' 'int ()'
        `-ImplicitCastExpr 0x135142728 <col:31> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x1351426c8 <col:31> 'const char *' lvalue ParmVar 0x135128158 'out' 'const char *'
