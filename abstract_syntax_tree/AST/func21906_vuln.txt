TranslationUnitDecl 0x12b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b055bd0 '__int128'
|-TypedefDecl 0x12b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b055bf0 'unsigned __int128'
|-TypedefDecl 0x12b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b126000 'struct __NSConstantString_tag'
|   `-Record 0x12b056580 '__NSConstantString_tag'
|-TypedefDecl 0x12b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b055d90 '__SVInt8_t'
|-TypedefDecl 0x12b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b055db0 '__SVInt16_t'
|-TypedefDecl 0x12b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b055dd0 '__SVInt32_t'
|-TypedefDecl 0x12b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b055df0 '__SVInt64_t'
|-TypedefDecl 0x12b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b055e10 '__SVUint8_t'
|-TypedefDecl 0x12b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b055e30 '__SVUint16_t'
|-TypedefDecl 0x12b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b055e50 '__SVUint32_t'
|-TypedefDecl 0x12b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b055e70 '__SVUint64_t'
|-TypedefDecl 0x12b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b055e90 '__SVFloat16_t'
|-TypedefDecl 0x12b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b056390 '__SVBool_t'
|-TypedefDecl 0x12b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b0563f0 '__SVCount_t'
|-TypedefDecl 0x12b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b127fb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
|-TypedefDecl 0x12b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b127fb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
|-FunctionDecl 0x12b140b40 <dataset_diviso_filec/func21906_vuln.c:1:1, line:26:1> line:1:13 prepare_cmd 'void (struct argv_array *, const struct child_process *)' static
| |-ParmVarDecl 0x12b128648 <col:25, col:44> col:44 used out 'struct argv_array *'
| |-ParmVarDecl 0x12b140a28 <col:49, col:77> col:77 used cmd 'const struct child_process *'
| `-CompoundStmt 0x12b1422a0 <line:2:1, line:26:1>
|   |-IfStmt 0x12b140f58 <line:3:2, line:4:12>
|   | |-UnaryOperator 0x12b140d10 <line:3:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12b140cf8 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-ArraySubscriptExpr 0x12b140cd8 <col:7, col:18> '<dependent type>' contains-errors lvalue
|   | |     |-ImplicitCastExpr 0x12b140cc0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   | |     | `-RecoveryExpr 0x12b140c78 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   | |     |   `-DeclRefExpr 0x12b140c40 <col:7> 'const struct child_process *' lvalue ParmVar 0x12b140a28 'cmd' 'const struct child_process *'
|   | |     `-IntegerLiteral 0x12b140ca0 <col:17> 'int' 0
|   | `-CallExpr 0x12b140f18 <line:4:3, col:12> 'int'
|   |   |-ImplicitCastExpr 0x12b140f00 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12b140e50 <col:3> 'int ()' Function 0x12b140d98 'die' 'int ()'
|   |   `-ImplicitCastExpr 0x12b140f40 <col:7> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x12b140eb0 <col:7> 'char[4]' lvalue "STR"
|   |-CallExpr 0x12b141100 <line:7:2, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12b141058 <col:2> 'int ()' Function 0x12b140fa0 'argv_array_push' 'int ()'
|   | |-DeclRefExpr 0x12b141078 <col:18> 'struct argv_array *' lvalue ParmVar 0x12b128648 'out' 'struct argv_array *'
|   | `-RecoveryExpr 0x12b1410e0 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12b141778 <line:9:2, line:16:2> has_else
|   | |-RecoveryExpr 0x12b141168 <line:9:6, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12b141130 <col:6> 'const struct child_process *' lvalue ParmVar 0x12b140a28 'cmd' 'const struct child_process *'
|   | |-CompoundStmt 0x12b141418 <col:20, line:12:2>
|   | | |-CallExpr 0x12b141208 <line:10:3, col:29> 'int'
|   | | | |-ImplicitCastExpr 0x12b1411f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12b141190 <col:3> 'int ()' Function 0x12b140fa0 'argv_array_push' 'int ()'
|   | | | |-ImplicitCastExpr 0x12b141238 <col:19> 'struct argv_array *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x12b1411b0 <col:19> 'struct argv_array *' lvalue ParmVar 0x12b128648 'out' 'struct argv_array *'
|   | | | `-ImplicitCastExpr 0x12b141250 <col:24> 'char *' <ArrayToPointerDecay>
|   | | |   `-StringLiteral 0x12b1411d0 <col:24> 'char[4]' lvalue "STR"
|   | | `-CallExpr 0x12b1413e8 <line:11:3, col:34> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x12b141348 <col:3> 'int ()' Function 0x12b141290 'argv_array_pushv' 'int ()'
|   | |   |-DeclRefExpr 0x12b141368 <col:20> 'struct argv_array *' lvalue ParmVar 0x12b128648 'out' 'struct argv_array *'
|   | |   `-RecoveryExpr 0x12b1413c0 <col:25, col:30> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12b141388 <col:25> 'const struct child_process *' lvalue ParmVar 0x12b140a28 'cmd' 'const struct child_process *'
|   | `-IfStmt 0x12b141748 <line:12:9, line:16:2> has_else
|   |   |-RecoveryExpr 0x12b141470 <line:12:13, col:18> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12b141438 <col:13> 'const struct child_process *' lvalue ParmVar 0x12b140a28 'cmd' 'const struct child_process *'
|   |   |-CompoundStmt 0x12b141648 <col:29, line:14:2>
|   |   | `-CallExpr 0x12b141618 <line:13:3, col:35> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12b141578 <col:3> 'int ()' Function 0x12b1414c0 'prepare_shell_cmd' 'int ()'
|   |   |   |-DeclRefExpr 0x12b141598 <col:21> 'struct argv_array *' lvalue ParmVar 0x12b128648 'out' 'struct argv_array *'
|   |   |   `-RecoveryExpr 0x12b1415f0 <col:26, col:31> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x12b1415b8 <col:26> 'const struct child_process *' lvalue ParmVar 0x12b140a28 'cmd' 'const struct child_process *'
|   |   `-CompoundStmt 0x12b141730 <line:14:9, line:16:2>
|   |     `-CallExpr 0x12b141700 <line:15:3, col:34> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x12b141660 <col:3> 'int ()' Function 0x12b141290 'argv_array_pushv' 'int ()'
|   |       |-DeclRefExpr 0x12b141680 <col:20> 'struct argv_array *' lvalue ParmVar 0x12b128648 'out' 'struct argv_array *'
|   |       `-RecoveryExpr 0x12b1416d8 <col:25, col:30> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x12b1416a0 <col:25> 'const struct child_process *' lvalue ParmVar 0x12b140a28 'cmd' 'const struct child_process *'
|   `-IfStmt 0x12b142280 <line:19:2, line:25:2>
|     |-UnaryOperator 0x12b141b18 <line:19:6, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
|     | `-CallExpr 0x12b141ae8 <col:7, col:31> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x12b1419d0 <col:7> 'char *(const char *, int)' Function 0x12b1417f0 'strchr' 'char *(const char *, int)'
|     |   |-ArraySubscriptExpr 0x12b141a98 <col:14, col:25> '<dependent type>' contains-errors lvalue
|     |   | |-ImplicitCastExpr 0x12b141a80 <col:14, col:19> '<dependent type>' contains-errors <LValueToRValue>
|     |   | | `-RecoveryExpr 0x12b141a38 <col:14, col:19> '<dependent type>' contains-errors lvalue
|     |   | |   `-DeclRefExpr 0x12b141a00 <col:14> 'struct argv_array *' lvalue ParmVar 0x12b128648 'out' 'struct argv_array *'
|     |   | `-IntegerLiteral 0x12b141a60 <col:24> 'int' 1
|     |   `-CharacterLiteral 0x12b141ab8 <col:28> 'int' 47
|     `-CompoundStmt 0x12b142260 <col:34, line:25:2>
|       |-DeclStmt 0x12b141d90 <line:20:3, col:47>
|       | `-VarDecl 0x12b141b48 <col:3, col:46> col:9 used program 'char *' cinit
|       |   `-CallExpr 0x12b141d68 <col:19, col:46> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x12b141c90 <col:19> 'int ()' Function 0x12b141bd8 'locate_in_PATH' 'int ()'
|       |     `-ArraySubscriptExpr 0x12b141d48 <col:34, col:45> '<dependent type>' contains-errors lvalue
|       |       |-ImplicitCastExpr 0x12b141d30 <col:34, col:39> '<dependent type>' contains-errors <LValueToRValue>
|       |       | `-RecoveryExpr 0x12b141ce8 <col:34, col:39> '<dependent type>' contains-errors lvalue
|       |       |   `-DeclRefExpr 0x12b141cb0 <col:34> 'struct argv_array *' lvalue ParmVar 0x12b128648 'out' 'struct argv_array *'
|       |       `-IntegerLiteral 0x12b141d10 <col:44> 'int' 1
|       `-IfStmt 0x12b142240 <line:21:3, line:24:3>
|         |-ImplicitCastExpr 0x12b141dc8 <line:21:7> 'char *' contains-errors <LValueToRValue>
|         | `-DeclRefExpr 0x12b141da8 <col:7> 'char *' contains-errors lvalue Var 0x12b141b48 'program' 'char *'
|         `-CompoundStmt 0x12b142220 <col:16, line:24:3>
|           |-CallExpr 0x12b1420e8 <line:22:4, col:29> 'void' contains-errors
|           | |-ImplicitCastExpr 0x12b1420d0 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|           | | `-DeclRefExpr 0x12b141f88 <col:4> 'void (void *)' Function 0x12b141e18 'free' 'void (void *)'
|           | `-ImplicitCastExpr 0x12b142110 <col:9, col:28> 'void *' contains-errors <BitCast>
|           |   `-CStyleCastExpr 0x12b142078 <col:9, col:28> 'char *' contains-errors <Dependent>
|           |     `-ArraySubscriptExpr 0x12b142040 <col:17, col:28> '<dependent type>' contains-errors lvalue
|           |       |-ImplicitCastExpr 0x12b142028 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
|           |       | `-RecoveryExpr 0x12b141fe0 <col:17, col:22> '<dependent type>' contains-errors lvalue
|           |       |   `-DeclRefExpr 0x12b141fa8 <col:17> 'struct argv_array *' lvalue ParmVar 0x12b128648 'out' 'struct argv_array *'
|           |       `-IntegerLiteral 0x12b142008 <col:27> 'int' 1
|           `-BinaryOperator 0x12b142200 <line:23:4, col:19> '<dependent type>' contains-errors '='
|             |-ArraySubscriptExpr 0x12b1421c0 <col:4, col:15> '<dependent type>' contains-errors lvalue
|             | |-ImplicitCastExpr 0x12b1421a8 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>
|             | | `-RecoveryExpr 0x12b142160 <col:4, col:9> '<dependent type>' contains-errors lvalue
|             | |   `-DeclRefExpr 0x12b142128 <col:4> 'struct argv_array *' lvalue ParmVar 0x12b128648 'out' 'struct argv_array *'
|             | `-IntegerLiteral 0x12b142188 <col:14> 'int' 1
|             `-DeclRefExpr 0x12b1421e0 <col:19> 'char *' contains-errors lvalue Var 0x12b141b48 'program' 'char *'
|-FunctionDecl 0x12b1417f0 <line:19:7> col:7 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x12b1418f0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12b141958 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x12b141898 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x12b141e18 <line:22:4> col:4 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12b141f18 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12b141ec0 <<invalid sloc>> Implicit 873
