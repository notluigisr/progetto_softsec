TranslationUnitDecl 0x11d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d855bd0 '__int128'
|-TypedefDecl 0x11d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d855bf0 'unsigned __int128'
|-TypedefDecl 0x11e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x11d856580 '__NSConstantString_tag'
|-TypedefDecl 0x11e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d855d90 '__SVInt8_t'
|-TypedefDecl 0x11e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d855db0 '__SVInt16_t'
|-TypedefDecl 0x11e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d855dd0 '__SVInt32_t'
|-TypedefDecl 0x11e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d855df0 '__SVInt64_t'
|-TypedefDecl 0x11e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d855e10 '__SVUint8_t'
|-TypedefDecl 0x11e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d855e30 '__SVUint16_t'
|-TypedefDecl 0x11e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d855e50 '__SVUint32_t'
|-TypedefDecl 0x11e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d855e70 '__SVUint64_t'
|-TypedefDecl 0x11e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d855e90 '__SVFloat16_t'
|-TypedefDecl 0x11e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d856390 '__SVBool_t'
|-TypedefDecl 0x11e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d8563f0 '__SVCount_t'
|-TypedefDecl 0x11e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
|-TypedefDecl 0x11e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
`-FunctionDecl 0x11e00e100 <dataset_diviso_filec/func790_vuln.c:1:1, line:20:1> line:1:20 ModulateHSL 'void (const double, const double, const double, double *, double *, double *)' static inline
  |-ParmVarDecl 0x11e00dcd8 <col:32, col:45> col:45 used percent_hue 'const double'
  |-ParmVarDecl 0x11e00dd58 <line:2:3, col:16> col:16 used percent_saturation 'const double'
  |-ParmVarDecl 0x11e00ddd8 <col:35, col:48> col:48 used percent_lightness 'const double'
  |-ParmVarDecl 0x11e00de88 <col:66, col:74> col:74 used red 'double *'
  |-ParmVarDecl 0x11e00df08 <line:3:3, col:11> col:11 used green 'double *'
  |-ParmVarDecl 0x11e00df88 <col:17, col:25> col:25 used blue 'double *'
  `-CompoundStmt 0x11e027f70 <line:4:1, line:20:1>
    |-DeclStmt 0x11e00e3c0 <line:5:3, line:8:15>
    | |-VarDecl 0x11e00e238 <line:5:3, line:6:5> col:5 used hue 'double'
    | |-VarDecl 0x11e00e2b8 <line:5:3, line:7:5> col:5 used lightness 'double'
    | `-VarDecl 0x11e00e338 <line:5:3, line:8:5> col:5 used saturation 'double'
    |-CallExpr 0x11e027718 <line:11:3, col:64> 'int'
    | |-ImplicitCastExpr 0x11e027700 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11e027510 <col:3> 'int ()' Function 0x11e027458 'ConvertRGBToHSL' 'int ()'
    | |-ImplicitCastExpr 0x11e027768 <col:19, col:20> 'double' <LValueToRValue>
    | | `-UnaryOperator 0x11e027568 <col:19, col:20> 'double' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x11e027550 <col:20> 'double *' <LValueToRValue>
    | |     `-DeclRefExpr 0x11e027530 <col:20> 'double *' lvalue ParmVar 0x11e00de88 'red' 'double *'
    | |-ImplicitCastExpr 0x11e027780 <col:24, col:25> 'double' <LValueToRValue>
    | | `-UnaryOperator 0x11e0275b8 <col:24, col:25> 'double' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x11e0275a0 <col:25> 'double *' <LValueToRValue>
    | |     `-DeclRefExpr 0x11e027580 <col:25> 'double *' lvalue ParmVar 0x11e00df08 'green' 'double *'
    | |-ImplicitCastExpr 0x11e027798 <col:31, col:32> 'double' <LValueToRValue>
    | | `-UnaryOperator 0x11e027608 <col:31, col:32> 'double' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x11e0275f0 <col:32> 'double *' <LValueToRValue>
    | |     `-DeclRefExpr 0x11e0275d0 <col:32> 'double *' lvalue ParmVar 0x11e00df88 'blue' 'double *'
    | |-UnaryOperator 0x11e027640 <col:37, col:38> 'double *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x11e027620 <col:38> 'double' lvalue Var 0x11e00e238 'hue' 'double'
    | |-UnaryOperator 0x11e027678 <col:42, col:43> 'double *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x11e027658 <col:43> 'double' lvalue Var 0x11e00e338 'saturation' 'double'
    | `-UnaryOperator 0x11e0276b0 <col:54, col:55> 'double *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x11e027690 <col:55> 'double' lvalue Var 0x11e00e2b8 'lightness' 'double'
    |-CompoundAssignOperator 0x11e0278e8 <line:12:3, col:33> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x11e0277b0 <col:3> 'double' lvalue Var 0x11e00e238 'hue' 'double'
    | `-BinaryOperator 0x11e0278c8 <col:8, col:33> 'double' '*'
    |   |-FloatingLiteral 0x11e0277d0 <col:8> 'double' 5.000000e-01
    |   `-ParenExpr 0x11e0278a8 <col:12, col:33> 'double'
    |     `-BinaryOperator 0x11e027888 <col:13, col:30> 'double' '-'
    |       |-BinaryOperator 0x11e027848 <col:13, col:18> 'double' '*'
    |       | |-FloatingLiteral 0x11e0277f0 <col:13> 'double' 1.000000e-02
    |       | `-ImplicitCastExpr 0x11e027830 <col:18> 'double' <LValueToRValue>
    |       |   `-DeclRefExpr 0x11e027810 <col:18> 'const double' lvalue ParmVar 0x11e00dcd8 'percent_hue' 'const double'
    |       `-FloatingLiteral 0x11e027868 <col:30> 'double' 1.000000e+00
    |-WhileStmt 0x11e027a00 <line:13:3, line:14:10>
    | |-BinaryOperator 0x11e027970 <line:13:10, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x11e027958 <col:10> 'double' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e027918 <col:10> 'double' lvalue Var 0x11e00e238 'hue' 'double'
    | | `-FloatingLiteral 0x11e027938 <col:16> 'double' 0.000000e+00
    | `-CompoundAssignOperator 0x11e0279d0 <line:14:5, col:10> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
    |   |-DeclRefExpr 0x11e027990 <col:5> 'double' lvalue Var 0x11e00e238 'hue' 'double'
    |   `-FloatingLiteral 0x11e0279b0 <col:10> 'double' 1.000000e+00
    |-WhileStmt 0x11e027b08 <line:15:3, line:16:10>
    | |-BinaryOperator 0x11e027a78 <line:15:10, col:17> 'int' '>='
    | | |-ImplicitCastExpr 0x11e027a60 <col:10> 'double' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e027a20 <col:10> 'double' lvalue Var 0x11e00e238 'hue' 'double'
    | | `-FloatingLiteral 0x11e027a40 <col:17> 'double' 1.000000e+00
    | `-CompoundAssignOperator 0x11e027ad8 <line:16:5, col:10> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
    |   |-DeclRefExpr 0x11e027a98 <col:5> 'double' lvalue Var 0x11e00e238 'hue' 'double'
    |   `-FloatingLiteral 0x11e027ab8 <col:10> 'double' 1.000000e+00
    |-CompoundAssignOperator 0x11e027bc0 <line:17:3, col:20> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x11e027b28 <col:3> 'double' lvalue Var 0x11e00e338 'saturation' 'double'
    | `-BinaryOperator 0x11e027ba0 <col:15, col:20> 'double' '*'
    |   |-FloatingLiteral 0x11e027b48 <col:15> 'double' 1.000000e-02
    |   `-ImplicitCastExpr 0x11e027b88 <col:20> 'double' <LValueToRValue>
    |     `-DeclRefExpr 0x11e027b68 <col:20> 'const double' lvalue ParmVar 0x11e00dd58 'percent_saturation' 'const double'
    |-CompoundAssignOperator 0x11e027c88 <line:18:3, col:19> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x11e027bf0 <col:3> 'double' lvalue Var 0x11e00e2b8 'lightness' 'double'
    | `-BinaryOperator 0x11e027c68 <col:14, col:19> 'double' '*'
    |   |-FloatingLiteral 0x11e027c10 <col:14> 'double' 1.000000e-02
    |   `-ImplicitCastExpr 0x11e027c50 <col:19> 'double' <LValueToRValue>
    |     `-DeclRefExpr 0x11e027c30 <col:19> 'const double' lvalue ParmVar 0x11e00ddd8 'percent_lightness' 'const double'
    `-CallExpr 0x11e027e90 <line:19:3, col:58> 'int'
      |-ImplicitCastExpr 0x11e027e78 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x11e027d98 <col:3> 'int ()' Function 0x11e027ce0 'ConvertHSLToRGB' 'int ()'
      |-ImplicitCastExpr 0x11e027ee0 <col:19> 'double' <LValueToRValue>
      | `-DeclRefExpr 0x11e027db8 <col:19> 'double' lvalue Var 0x11e00e238 'hue' 'double'
      |-ImplicitCastExpr 0x11e027ef8 <col:23> 'double' <LValueToRValue>
      | `-DeclRefExpr 0x11e027dd8 <col:23> 'double' lvalue Var 0x11e00e338 'saturation' 'double'
      |-ImplicitCastExpr 0x11e027f10 <col:34> 'double' <LValueToRValue>
      | `-DeclRefExpr 0x11e027df8 <col:34> 'double' lvalue Var 0x11e00e2b8 'lightness' 'double'
      |-ImplicitCastExpr 0x11e027f28 <col:44> 'double *' <LValueToRValue>
      | `-DeclRefExpr 0x11e027e18 <col:44> 'double *' lvalue ParmVar 0x11e00de88 'red' 'double *'
      |-ImplicitCastExpr 0x11e027f40 <col:48> 'double *' <LValueToRValue>
      | `-DeclRefExpr 0x11e027e38 <col:48> 'double *' lvalue ParmVar 0x11e00df08 'green' 'double *'
      `-ImplicitCastExpr 0x11e027f58 <col:54> 'double *' <LValueToRValue>
        `-DeclRefExpr 0x11e027e58 <col:54> 'double *' lvalue ParmVar 0x11e00df88 'blue' 'double *'
