TranslationUnitDecl 0x14a828008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a828eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a8285d0 '__int128'
|-TypedefDecl 0x14a828f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a8285f0 'unsigned __int128'
|-TypedefDecl 0x14a03b630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a03b400 'struct __NSConstantString_tag'
|   `-Record 0x14a828f80 '__NSConstantString_tag'
|-TypedefDecl 0x14a03b698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a828790 '__SVInt8_t'
|-TypedefDecl 0x14a03b700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a8287b0 '__SVInt16_t'
|-TypedefDecl 0x14a03b768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a8287d0 '__SVInt32_t'
|-TypedefDecl 0x14a03b7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a8287f0 '__SVInt64_t'
|-TypedefDecl 0x14a03b838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a828810 '__SVUint8_t'
|-TypedefDecl 0x14a03b8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a828830 '__SVUint16_t'
|-TypedefDecl 0x14a03b908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a828850 '__SVUint32_t'
|-TypedefDecl 0x14a03b970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a828870 '__SVUint64_t'
|-TypedefDecl 0x14a03b9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a828890 '__SVFloat16_t'
|-TypedefDecl 0x14a03ba40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a8288b0 '__SVFloat32_t'
|-TypedefDecl 0x14a03baa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a8288d0 '__SVFloat64_t'
|-TypedefDecl 0x14a03bb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a8288f0 '__SVBfloat16_t'
|-TypedefDecl 0x14a03bb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a828910 '__clang_svint8x2_t'
|-TypedefDecl 0x14a03bbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a828930 '__clang_svint16x2_t'
|-TypedefDecl 0x14a03bc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a828950 '__clang_svint32x2_t'
|-TypedefDecl 0x14a03bcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a828970 '__clang_svint64x2_t'
|-TypedefDecl 0x14a03bd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a828990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a03bd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a8289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a03bde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a8289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a03be50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a8289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a03beb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a828a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a03bf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a828a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a03bf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a828a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a03bff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a828a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a03c058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a828a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14a03c0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a828ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a03c128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a828ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a03c190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a828af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a03c1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a828b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a03c260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a828b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a03c2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a828b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a03c330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a828b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a03c398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a828b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a03c400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a828bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a03c468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a828bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a03c4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a828bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a03c538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a828c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14a03c5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a828c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14a03c608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a828c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14a03c670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a828c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14a03c6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a828c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a03c740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a828cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a03c7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a828cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a03c810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a828cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a03c878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a828d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a03c8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a828d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a03c948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a828d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a03c9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a828d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a03ca18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a828d90 '__SVBool_t'
|-TypedefDecl 0x14a03ca80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a828db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a03cae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a828dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a03cb50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a828df0 '__SVCount_t'
|-TypedefDecl 0x14a03cbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a03cbb0 'char *'
|   `-BuiltinType 0x14a8280b0 'char'
|-TypedefDecl 0x14a03cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a03cbb0 'char *'
|   `-BuiltinType 0x14a8280b0 'char'
`-FunctionDecl 0x14a054cd8 <dataset_diviso_filec/func8807_nonvuln.c:1:1, line:31:1> line:1:1 invalid wb_prep 'int (int *, const struct pkt_prep *, int)'
  |-ParmVarDecl 0x14a03cd28 <col:9, col:29> col:29 invalid ndo 'int *'
  |-ParmVarDecl 0x14a03d318 <line:2:9, col:32> col:32 used prep 'const struct pkt_prep *'
  |-ParmVarDecl 0x14a03d398 <col:38, col:44> col:44 invalid len 'int'
  `-CompoundStmt 0x14a055f08 <line:3:1, line:31:1>
    |-DeclStmt 0x14a054e18 <line:4:2, col:7>
    | `-VarDecl 0x14a054db0 <col:2, col:6> col:6 used n 'int'
    |-DeclStmt 0x14a055018 <line:5:2, col:26>
    | |-RecordDecl 0x14a054e30 <col:8, col:15> col:15 struct pgstate
    | `-VarDecl 0x14a054f98 <col:2, col:24> col:24 used ps 'const struct pgstate *'
    |-DeclStmt 0x14a055118 <line:6:2, col:37>
    | `-VarDecl 0x14a055048 <col:2, col:26> col:16 ep 'const char *' cinit
    |   `-CXXDependentScopeMemberExpr 0x14a0550d0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->ndo_snapend
    |     `-RecoveryExpr 0x14a0550b0 <col:21> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14a055370 <line:8:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a055290 <col:2> 'int ()' Function 0x14a0551d8 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x14a055350 <col:11, col:22> 'char[4]' contains-errors
    |   `-BinaryOperator 0x14a055330 <col:12, col:17> 'char[4]' contains-errors ','
    |     |-RecoveryExpr 0x14a0552b0 <col:12> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x14a055310 <col:17> 'char[4]' lvalue "STR"
    |-IfStmt 0x14a0556f0 <line:9:2, line:10:13>
    | |-RecoveryExpr 0x14a055668 <line:9:6, col:44> '_Bool' contains-errors
    | `-ReturnStmt 0x14a0556e0 <line:10:3, col:13>
    |   `-ParenExpr 0x14a0556c0 <col:10, col:13> 'int'
    |     `-UnaryOperator 0x14a0556a8 <col:11, col:12> 'int' prefix '-'
    |       `-IntegerLiteral 0x14a055688 <col:12> 'int' 1
    |-BinaryOperator 0x14a0558d0 <line:11:2, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x14a055710 <col:2> 'int' lvalue Var 0x14a054db0 'n' 'int'
    | `-CallExpr 0x14a0558a8 <col:6, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14a055810 <col:6> 'int ()' Function 0x14a055758 'EXTRACT_32BITS' 'int ()'
    |   `-UnaryOperator 0x14a055890 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14a055868 <col:22, col:28> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14a055830 <col:22> 'const struct pkt_prep *' lvalue ParmVar 0x14a03d318 'prep' 'const struct pkt_prep *'
    |-BinaryOperator 0x14a055a90 <line:12:2, col:40> 'const struct pgstate *' contains-errors '='
    | |-DeclRefExpr 0x14a0558f0 <col:2> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'
    | `-CStyleCastExpr 0x14a055a68 <col:7, col:40> 'const struct pgstate *' contains-errors <Dependent>
    |   `-ParenExpr 0x14a055a48 <col:31, col:40> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14a055968 <col:32, col:39> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x14a055910 <col:32> 'const struct pkt_prep *' lvalue ParmVar 0x14a03d318 'prep' 'const struct pkt_prep *'
    |       `-IntegerLiteral 0x14a055930 <col:39> 'int' 1
    `-WhileStmt 0x14a055ee8 <line:13:2, line:29:2>
      |-BinaryOperator 0x14a8f6830 <line:13:9, col:33> 'int' contains-errors '&&'
      | |-BinaryOperator 0x14a055b08 <col:9, col:16> 'int' '>='
      | | |-UnaryOperator 0x14a055ad0 <col:9, col:11> 'int' prefix '--'
      | | | `-DeclRefExpr 0x14a055ab0 <col:11> 'int' lvalue Var 0x14a054db0 'n' 'int'
      | | `-IntegerLiteral 0x14a055ae8 <col:16> 'int' 0
      | `-RecoveryExpr 0x14a8f6800 <col:21, col:33> '<dependent type>' contains-errors lvalue
      |   |-DeclRefExpr 0x14a055b28 <col:21> 'int ()' Function 0x14a055450 'ND_TTEST' 'int ()'
      |   `-UnaryOperator 0x14a055b80 <col:30, col:31> 'const struct pgstate' lvalue prefix '*' cannot overflow
      |     `-ImplicitCastExpr 0x14a055b68 <col:31> 'const struct pgstate *' <LValueToRValue>
      |       `-DeclRefExpr 0x14a055b48 <col:31> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'
      `-CompoundStmt 0x14a055ea0 <col:36, line:29:2>
        |-DeclStmt 0x14a8f6ad0 <line:14:3, col:31>
        | |-RecordDecl 0x14a8f6850 <col:9, col:16> col:16 struct id_off
        | |-VarDecl 0x14a8f69b8 <col:3, col:24> col:24 used io 'const struct id_off *'
        | `-VarDecl 0x14a8f6a48 <col:3, col:29> col:29 used ie 'const struct id_off *'
        |-DeclStmt 0x14a8f6b90 <line:15:3, col:15>
        | `-VarDecl 0x14a8f6af8 <col:3, col:12> col:8 used c 'char' cinit
        |   `-ImplicitCastExpr 0x14a8f6b78 <col:12> 'char' <IntegralCast>
        |     `-CharacterLiteral 0x14a8f6b60 <col:12> 'int' 60
        |-CallExpr 0x14a8f7080 <line:17:3, line:20:39> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x14a8f6ba8 <line:17:3> 'int ()' Function 0x14a0551d8 'ND_PRINT' 'int ()'
        | `-ParenExpr 0x14a8f7060 <col:12, line:20:38> '<dependent type>' contains-errors
        |   `-BinaryOperator 0x14a8f7040 <line:17:13, line:20:37> '<dependent type>' contains-errors ','
        |     |-BinaryOperator 0x14a8f6f18 <line:17:13, line:19:41> '<dependent type>' contains-errors ','
        |     | |-BinaryOperator 0x14a8f6ce8 <line:17:13, line:18:31> '<dependent type>' contains-errors ','
        |     | | |-BinaryOperator 0x14a8f6c08 <line:17:13, col:18> 'char[4]' contains-errors ','
        |     | | | |-RecoveryExpr 0x14a8f6bc8 <col:13> '<dependent type>' contains-errors lvalue
        |     | | | `-StringLiteral 0x14a8f6be8 <col:18> 'char[4]' lvalue "STR"
        |     | | `-CallExpr 0x14a8f6cc0 <line:18:7, col:31> '<dependent type>' contains-errors
        |     | |   |-DeclRefExpr 0x14a8f6c28 <col:7> 'int ()' Function 0x14a055758 'EXTRACT_32BITS' 'int ()'
        |     | |   `-UnaryOperator 0x14a8f6ca8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     | |     `-RecoveryExpr 0x14a8f6c80 <col:23, col:27> '<dependent type>' contains-errors lvalue
        |     | |       `-DeclRefExpr 0x14a8f6c48 <col:23> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'
        |     | `-CallExpr 0x14a8f6ee8 <line:19:7, col:41> '<dependent type>' contains-errors
        |     |   |-DeclRefExpr 0x14a8f6de8 <col:7> 'int ()' Function 0x14a8f6d30 'ipaddr_string' 'int ()'
        |     |   |-RecoveryExpr 0x14a8f6e08 <col:21> '<dependent type>' contains-errors lvalue
        |     |   `-UnaryOperator 0x14a8f6ed0 <col:26, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     |     `-CXXDependentScopeMemberExpr 0x14a8f6e88 <col:27, col:36> '<dependent type>' contains-errors lvalue .p_sid
        |     |       `-RecoveryExpr 0x14a8f6e60 <col:27, col:31> '<dependent type>' contains-errors lvalue
        |     |         `-DeclRefExpr 0x14a8f6e28 <col:27> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'
        |     `-CallExpr 0x14a8f7018 <line:20:7, col:37> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x14a8f6f38 <col:7> 'int ()' Function 0x14a055758 'EXTRACT_32BITS' 'int ()'
        |       `-UnaryOperator 0x14a8f7000 <col:22, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
        |         `-CXXDependentScopeMemberExpr 0x14a8f6fb8 <col:23, col:32> '<dependent type>' contains-errors lvalue .p_uid
        |           `-RecoveryExpr 0x14a8f6f90 <col:23, col:27> '<dependent type>' contains-errors lvalue
        |             `-DeclRefExpr 0x14a8f6f58 <col:23> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'
        |-BinaryOperator 0x14a8f7240 <line:21:3, col:38> 'const struct id_off *' contains-errors '='
        | |-DeclRefExpr 0x14a8f70a8 <col:3> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'
        | `-CStyleCastExpr 0x14a8f7218 <col:8, col:38> 'const struct id_off *' contains-errors <Dependent>
        |   `-ParenExpr 0x14a8f71f8 <col:31, col:38> '<dependent type>' contains-errors lvalue
        |     `-RecoveryExpr 0x14a8f7120 <col:32, col:37> '<dependent type>' contains-errors lvalue
        |       |-DeclRefExpr 0x14a8f70c8 <col:32> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'
        |       `-IntegerLiteral 0x14a8f70e8 <col:37> 'int' 1
        |-ForStmt 0x14a055cd8 <line:22:3, line:26:3>
        | |-BinaryOperator 0x14a8f7320 <line:22:8, col:22> 'const struct id_off *' contains-errors '='
        | | |-DeclRefExpr 0x14a8f7260 <col:8> 'const struct id_off *' lvalue Var 0x14a8f6a48 'ie' 'const struct id_off *'
        | | `-BinaryOperator 0x14a8f7300 <col:13, col:22> '<dependent type>' contains-errors '+'
        | |   |-DeclRefExpr 0x14a8f7280 <col:13> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'
        | |   `-RecoveryExpr 0x14a8f72d8 <col:18, col:22> '<dependent type>' contains-errors lvalue
        | |     `-DeclRefExpr 0x14a8f72a0 <col:18> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'
        | |-<<<NULL>>>
        | |-BinaryOperator 0x14a8f74c8 <col:27, col:50> 'int' contains-errors '&&'
        | | |-BinaryOperator 0x14a8f73b0 <col:27, col:32> 'int' '<'
        | | | |-ImplicitCastExpr 0x14a8f7380 <col:27> 'const struct id_off *' <LValueToRValue>
        | | | | `-DeclRefExpr 0x14a8f7340 <col:27> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'
        | | | `-ImplicitCastExpr 0x14a8f7398 <col:32> 'const struct id_off *' <LValueToRValue>
        | | |   `-DeclRefExpr 0x14a8f7360 <col:32> 'const struct id_off *' lvalue Var 0x14a8f6a48 'ie' 'const struct id_off *'
        | | `-RecoveryExpr 0x14a8f7498 <col:38, col:50> '<dependent type>' contains-errors lvalue
        | |   |-DeclRefExpr 0x14a8f73d0 <col:38> 'int ()' Function 0x14a055450 'ND_TTEST' 'int ()'
        | |   `-UnaryOperator 0x14a8f7428 <col:47, col:48> 'const struct id_off' lvalue prefix '*' cannot overflow
        | |     `-ImplicitCastExpr 0x14a8f7410 <col:48> 'const struct id_off *' <LValueToRValue>
        | |       `-DeclRefExpr 0x14a8f73f0 <col:48> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'
        | |-ImplicitCastExpr 0x14a8f7530 <col:53, col:55> '<dependent type>' contains-errors <LValueToRValue>
        | | `-RecoveryExpr 0x14a8f7508 <col:53, col:55> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x14a8f74e8 <col:55> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'
        | `-CompoundStmt 0x14a055cb8 <col:59, line:26:3>
        |   |-CallExpr 0x14a055c20 <line:23:4, line:24:33> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x14a8f7548 <line:23:4> 'int ()' Function 0x14a0551d8 'ND_PRINT' 'int ()'
        |   | `-ParenExpr 0x14a055c00 <col:13, line:24:32> '<dependent type>' contains-errors
        |   |   `-BinaryOperator 0x14a8f77d0 <line:23:14, line:24:31> '<dependent type>' contains-errors ','
        |   |     |-BinaryOperator 0x14a8f76f0 <line:23:14, col:55> '<dependent type>' contains-errors ','
        |   |     | |-BinaryOperator 0x14a8f75e8 <col:14, col:26> 'char' contains-errors ','
        |   |     | | |-BinaryOperator 0x14a8f75a8 <col:14, col:19> 'char[4]' contains-errors ','
        |   |     | | | |-RecoveryExpr 0x14a8f7568 <col:14> '<dependent type>' contains-errors lvalue
        |   |     | | | `-StringLiteral 0x14a8f7588 <col:19> 'char[4]' lvalue "STR"
        |   |     | | `-DeclRefExpr 0x14a8f75c8 <col:26> 'char' lvalue Var 0x14a8f6af8 'c' 'char'
        |   |     | `-CallExpr 0x14a8f76c0 <col:29, col:55> '<dependent type>' contains-errors
        |   |     |   |-DeclRefExpr 0x14a8f7608 <col:29> 'int ()' Function 0x14a8f6d30 'ipaddr_string' 'int ()'
        |   |     |   |-RecoveryExpr 0x14a8f7628 <col:43> '<dependent type>' contains-errors lvalue
        |   |     |   `-UnaryOperator 0x14a8f76a8 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |     |     `-RecoveryExpr 0x14a8f7680 <col:49, col:53> '<dependent type>' contains-errors lvalue
        |   |     |       `-DeclRefExpr 0x14a8f7648 <col:49> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'
        |   |     `-CallExpr 0x14a8f77a8 <line:24:8, col:31> '<dependent type>' contains-errors
        |   |       |-DeclRefExpr 0x14a8f7710 <col:8> 'int ()' Function 0x14a055758 'EXTRACT_32BITS' 'int ()'
        |   |       `-UnaryOperator 0x14a8f7790 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |         `-RecoveryExpr 0x14a8f7768 <col:24, col:28> '<dependent type>' contains-errors lvalue
        |   |           `-DeclRefExpr 0x14a8f7730 <col:24> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'
        |   `-BinaryOperator 0x14a055c98 <line:25:4, col:8> 'char' '='
        |     |-DeclRefExpr 0x14a055c48 <col:4> 'char' lvalue Var 0x14a8f6af8 'c' 'char'
        |     `-ImplicitCastExpr 0x14a055c80 <col:8> 'char' <IntegralCast>
        |       `-CharacterLiteral 0x14a055c68 <col:8> 'int' 44
        |-CallExpr 0x14a055db0 <line:27:3, col:24> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x14a055d10 <col:3> 'int ()' Function 0x14a0551d8 'ND_PRINT' 'int ()'
        | `-ParenExpr 0x14a055d90 <col:12, col:23> 'char[4]' contains-errors
        |   `-BinaryOperator 0x14a055d70 <col:13, col:18> 'char[4]' contains-errors ','
        |     |-RecoveryExpr 0x14a055d30 <col:13> '<dependent type>' contains-errors lvalue
        |     `-StringLiteral 0x14a055d50 <col:18> 'char[4]' lvalue "STR"
        `-BinaryOperator 0x14a055e80 <line:28:3, col:32> 'const struct pgstate *' '='
          |-DeclRefExpr 0x14a055dd8 <col:3> 'const struct pgstate *' lvalue Var 0x14a054f98 'ps' 'const struct pgstate *'
          `-CStyleCastExpr 0x14a055e58 <col:8, col:32> 'const struct pgstate *' <BitCast>
            `-ImplicitCastExpr 0x14a055e40 <col:32> 'const struct id_off *' <LValueToRValue> part_of_explicit_cast
              `-DeclRefExpr 0x14a055df8 <col:32> 'const struct id_off *' lvalue Var 0x14a8f69b8 'io' 'const struct id_off *'
