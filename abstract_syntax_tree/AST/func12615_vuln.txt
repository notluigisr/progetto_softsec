TranslationUnitDecl 0x130855008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x130855eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1308555d0 '__int128'
|-TypedefDecl 0x130855f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1308555f0 'unsigned __int128'
|-TypedefDecl 0x130926630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130926400 'struct __NSConstantString_tag'
|   `-Record 0x130855f80 '__NSConstantString_tag'
|-TypedefDecl 0x130926698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130855790 '__SVInt8_t'
|-TypedefDecl 0x130926700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1308557b0 '__SVInt16_t'
|-TypedefDecl 0x130926768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1308557d0 '__SVInt32_t'
|-TypedefDecl 0x1309267d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1308557f0 '__SVInt64_t'
|-TypedefDecl 0x130926838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130855810 '__SVUint8_t'
|-TypedefDecl 0x1309268a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130855830 '__SVUint16_t'
|-TypedefDecl 0x130926908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130855850 '__SVUint32_t'
|-TypedefDecl 0x130926970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130855870 '__SVUint64_t'
|-TypedefDecl 0x1309269d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130855890 '__SVFloat16_t'
|-TypedefDecl 0x130926a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1308558b0 '__SVFloat32_t'
|-TypedefDecl 0x130926aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1308558d0 '__SVFloat64_t'
|-TypedefDecl 0x130926b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1308558f0 '__SVBfloat16_t'
|-TypedefDecl 0x130926b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130855910 '__clang_svint8x2_t'
|-TypedefDecl 0x130926be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130855930 '__clang_svint16x2_t'
|-TypedefDecl 0x130926c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130855950 '__clang_svint32x2_t'
|-TypedefDecl 0x130926cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130855970 '__clang_svint64x2_t'
|-TypedefDecl 0x130926d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130855990 '__clang_svuint8x2_t'
|-TypedefDecl 0x130926d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1308559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x130926de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1308559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130926e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1308559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x130926eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130855a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130926f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130855a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130926f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130855a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x130926ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130855a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130927058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130855a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1309270c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x130855ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x130927128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x130855ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x130927190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x130855af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1309271f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130855b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x130927260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130855b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1309272c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130855b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x130927330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130855b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x130927398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130855b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x130927c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x130855bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x130927c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x130855bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x130927cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x130855bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x130927d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130855c10 '__clang_svint8x4_t'
|-TypedefDecl 0x130927da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130855c30 '__clang_svint16x4_t'
|-TypedefDecl 0x130927e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130855c50 '__clang_svint32x4_t'
|-TypedefDecl 0x130927e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130855c70 '__clang_svint64x4_t'
|-TypedefDecl 0x130927ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130855c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x130927f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x130855cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x130927fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x130855cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x130928010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x130855cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x130928078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130855d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1309280e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130855d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x130928148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130855d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1309281b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130855d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x130928218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130855d90 '__SVBool_t'
|-TypedefDecl 0x130928280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x130855db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1309282e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x130855dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x130928350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x130855df0 '__SVCount_t'
|-TypedefDecl 0x1309283f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1309283b0 'char *'
|   `-BuiltinType 0x1308550b0 'char'
|-TypedefDecl 0x130928468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1309283b0 'char *'
|   `-BuiltinType 0x1308550b0 'char'
|-FunctionDecl 0x130928718 <dataset_diviso_filec/func12615_vuln.c:2:1, line:89:23> line:2:13 invalid cli_read_rows 'int *(int *, int *, unsigned int)'
| |-ParmVarDecl 0x130928528 <col:27, col:34> col:34 referenced invalid mysql 'int *'
| |-ParmVarDecl 0x1309285a8 <col:40, col:53> col:53 referenced invalid mysql_fields 'int *'
| |-ParmVarDecl 0x130928628 <line:3:6, col:19> col:19 used fields 'unsigned int'
| `-CompoundStmt 0x130944350 <line:4:1, line:89:23>
|   |-DeclStmt 0x130928858 <line:5:3, col:13>
|   | `-VarDecl 0x1309287f0 <col:3, col:8> col:8 used field 'int'
|   |-DeclStmt 0x1309288f0 <line:6:3, col:16>
|   | `-VarDecl 0x130928888 <col:3, col:9> col:9 used pkt_len 'long'
|   |-DeclStmt 0x130928988 <line:7:3, col:12>
|   | `-VarDecl 0x130928920 <col:3, col:9> col:9 used len 'long'
|   |-DeclStmt 0x130928a20 <line:8:3, col:12>
|   | `-VarDecl 0x1309289b8 <col:3, col:10> col:10 used cp 'char *'
|   |-DeclStmt 0x130928b50 <line:9:3, col:20>
|   | |-VarDecl 0x130928a50 <col:3, col:9> col:9 used to 'char *'
|   | `-VarDecl 0x130928ad0 <col:3, col:14> col:14 used end_to 'char *'
|   |-CallExpr 0x1280094d8 <line:13:3, col:19> 'int'
|   | |-ImplicitCastExpr 0x1280094c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x128009410 <col:3> 'int ()' Function 0x128009358 'DBUG_ENTER' 'int ()'
|   | `-ImplicitCastExpr 0x128009500 <col:14> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x128009470 <col:14> 'char[4]' lvalue "STR"
|   |-IfStmt 0x128009898 <line:15:3, line:16:18>
|   | |-BinaryOperator 0x128009718 <line:15:7, col:42> 'int' contains-errors '=='
|   | | |-ParenExpr 0x1280096a0 <col:7, col:37> 'long' contains-errors
|   | | | `-BinaryOperator 0x128009680 <col:8, col:36> 'long' contains-errors '='
|   | | |   |-DeclRefExpr 0x128009518 <col:8> 'long' lvalue Var 0x130928888 'pkt_len' 'long'
|   | | |   `-CallExpr 0x128009658 <col:17, col:36> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x128009618 <col:17> 'int ()' Function 0x128009560 'cli_safe_read' 'int ()'
|   | | |     `-RecoveryExpr 0x128009638 <col:31> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1280096f8 <col:42> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x128009870 <line:16:5, col:18> 'int'
|   |   |-ImplicitCastExpr 0x128009858 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x128009818 <col:5> 'int ()' Function 0x128009760 'DBUG_RETURN' 'int ()'
|   |   `-IntegerLiteral 0x128009838 <col:17> 'int' 0
|   |-IfStmt 0x128009ac0 <line:17:3, line:22:3>
|   | |-RecoveryExpr 0x1280098e8 <line:17:7, line:18:38> '_Bool' contains-errors
|   | `-CompoundStmt 0x128009aa8 <line:19:3, line:22:3>
|   |   `-CallExpr 0x128009a80 <line:21:5, col:18> 'int'
|   |     |-ImplicitCastExpr 0x128009a68 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x128009a28 <col:5> 'int ()' Function 0x128009760 'DBUG_RETURN' 'int ()'
|   |     `-IntegerLiteral 0x128009a48 <col:17> 'int' 0
|   |-WhileStmt 0x130942ba8 <line:31:3, line:79:3>
|   | |-RecoveryExpr 0x128009d30 <line:31:10, col:51> '_Bool' contains-errors
|   | `-CompoundStmt 0x130942b78 <line:32:3, line:79:3>
|   |   |-IfStmt 0x128009f48 <line:34:5, line:43:5>
|   |   | |-RecoveryExpr 0x128009d50 <line:34:9, line:38:41> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x128009f30 <line:39:5, line:43:5>
|   |   |   `-CallExpr 0x128009f08 <line:42:7, col:20> 'int'
|   |   |     |-ImplicitCastExpr 0x128009ef0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x128009eb0 <col:7> 'int ()' Function 0x128009760 'DBUG_RETURN' 'int ()'
|   |   |     `-IntegerLiteral 0x128009ed0 <col:19> 'int' 0
|   |   |-BinaryOperator 0x12800a0b8 <line:47:5, col:23> 'char *' '='
|   |   | |-DeclRefExpr 0x128009fc8 <col:5> 'char *' lvalue Var 0x130928ad0 'end_to' 'char *'
|   |   | `-BinaryOperator 0x12800a098 <col:12, col:23> 'char *' '-'
|   |   |   |-BinaryOperator 0x12800a058 <col:12, col:15> 'char *' '+'
|   |   |   | |-ImplicitCastExpr 0x12800a028 <col:12> 'char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x128009fe8 <col:12> 'char *' lvalue Var 0x130928a50 'to' 'char *'
|   |   |   | `-ImplicitCastExpr 0x12800a040 <col:15> 'long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12800a008 <col:15> 'long' lvalue Var 0x130928888 'pkt_len' 'long'
|   |   |   `-IntegerLiteral 0x12800a078 <col:23> 'int' 1
|   |   |-ForStmt 0x130942940 <line:48:5, line:72:5>
|   |   | |-BinaryOperator 0x12800a118 <line:48:10, col:16> 'int' '='
|   |   | | |-DeclRefExpr 0x12800a0d8 <col:10> 'int' lvalue Var 0x1309287f0 'field' 'int'
|   |   | | `-IntegerLiteral 0x12800a0f8 <col:16> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x12800a1c0 <col:20, col:28> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x12800a1a8 <col:20> 'unsigned int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x12800a178 <col:20> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x12800a138 <col:20> 'int' lvalue Var 0x1309287f0 'field' 'int'
|   |   | | `-ImplicitCastExpr 0x12800a190 <col:28> 'unsigned int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12800a158 <col:28> 'unsigned int' lvalue ParmVar 0x130928628 'fields' 'unsigned int'
|   |   | |-UnaryOperator 0x130941c00 <col:37, col:42> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x12800a1e0 <col:37> 'int' lvalue Var 0x1309287f0 'field' 'int'
|   |   | `-CompoundStmt 0x130942928 <line:49:5, line:72:5>
|   |   |   `-IfStmt 0x1309428f8 <line:50:7, line:71:7> has_else
|   |   |     |-RecoveryExpr 0x130941c38 <line:50:11, col:50> '_Bool' contains-errors
|   |   |     |-CompoundStmt 0x130941c98 <line:51:7, line:53:7>
|   |   |     `-CompoundStmt 0x1309428b8 <line:55:7, line:71:7>
|   |   |       |-IfStmt 0x130941eb0 <line:57:9, line:62:9>
|   |   |       | |-RecoveryExpr 0x130941d98 <line:57:13, col:39> '_Bool' contains-errors
|   |   |       | `-CompoundStmt 0x130941e98 <line:58:9, line:62:9>
|   |   |       |   `-CallExpr 0x130941e70 <line:61:11, col:24> 'int'
|   |   |       |     |-ImplicitCastExpr 0x130941e58 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |     | `-DeclRefExpr 0x130941e18 <col:11> 'int ()' Function 0x128009760 'DBUG_RETURN' 'int ()'
|   |   |       |     `-IntegerLiteral 0x130941e38 <col:23> 'int' 0
|   |   |       |-CallExpr 0x1309422e8 <line:63:2, col:26> 'void *'
|   |   |       | |-ImplicitCastExpr 0x1309422d0 <col:2> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x130942198 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x130941f48 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   |       | |-ImplicitCastExpr 0x130942338 <col:9> 'void *' <BitCast>
|   |   |       | | `-ImplicitCastExpr 0x130942320 <col:9> 'char *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x1309421b8 <col:9> 'char *' lvalue Var 0x130928a50 'to' 'char *'
|   |   |       | |-ImplicitCastExpr 0x130942350 <col:12, col:20> 'const void *' <BitCast>
|   |   |       | | `-CStyleCastExpr 0x130942228 <col:12, col:20> 'char *' <NoOp>
|   |   |       | |   `-ImplicitCastExpr 0x130942210 <col:20> 'char *' <LValueToRValue> part_of_explicit_cast
|   |   |       | |     `-DeclRefExpr 0x1309421d8 <col:20> 'char *' lvalue Var 0x1309289b8 'cp' 'char *'
|   |   |       | `-ImplicitCastExpr 0x130942380 <col:23> 'unsigned long' <IntegralCast>
|   |   |       |   `-ImplicitCastExpr 0x130942368 <col:23> 'long' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x130942250 <col:23> 'long' lvalue Var 0x130928920 'len' 'long'
|   |   |       |-BinaryOperator 0x130942460 <col:29, col:37> 'char' '='
|   |   |       | |-ArraySubscriptExpr 0x130942408 <col:29, col:35> 'char' lvalue
|   |   |       | | |-ImplicitCastExpr 0x1309423d8 <col:29> 'char *' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x130942398 <col:29> 'char *' lvalue Var 0x130928a50 'to' 'char *'
|   |   |       | | `-ImplicitCastExpr 0x1309423f0 <col:32> 'long' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x1309423b8 <col:32> 'long' lvalue Var 0x130928920 'len' 'long'
|   |   |       | `-ImplicitCastExpr 0x130942448 <col:37> 'char' <IntegralCast>
|   |   |       |   `-IntegerLiteral 0x130942428 <col:37> 'int' 0
|   |   |       |-CompoundAssignOperator 0x130942530 <line:64:2, col:10> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |       | |-DeclRefExpr 0x130942480 <col:2> 'char *' lvalue Var 0x130928a50 'to' 'char *'
|   |   |       | `-BinaryOperator 0x130942510 <col:6, col:10> 'long' '+'
|   |   |       |   |-ImplicitCastExpr 0x1309424e0 <col:6> 'long' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x1309424a0 <col:6> 'long' lvalue Var 0x130928920 'len' 'long'
|   |   |       |   `-ImplicitCastExpr 0x1309424f8 <col:10> 'long' <IntegralCast>
|   |   |       |     `-IntegerLiteral 0x1309424c0 <col:10> 'int' 1
|   |   |       |-CompoundAssignOperator 0x1309425b8 <line:65:2, col:6> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |       | |-DeclRefExpr 0x130942560 <col:2> 'char *' lvalue Var 0x1309289b8 'cp' 'char *'
|   |   |       | `-ImplicitCastExpr 0x1309425a0 <col:6> 'long' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x130942580 <col:6> 'long' lvalue Var 0x130928920 'len' 'long'
|   |   |       `-IfStmt 0x130942898 <line:66:2, line:70:2>
|   |   |         |-RecoveryExpr 0x1309425e8 <line:66:6> '<dependent type>' contains-errors lvalue
|   |   |         `-CompoundStmt 0x130942880 <line:67:2, line:70:2>
|   |   |           `-IfStmt 0x130942860 <line:68:4, line:69:37>
|   |   |             |-BinaryOperator 0x130942700 <line:68:8, col:41> 'int' contains-errors '<'
|   |   |             | |-CXXDependentScopeMemberExpr 0x130942698 <col:8, col:28> '<dependent type>' contains-errors lvalue .max_length
|   |   |             | | `-ArraySubscriptExpr 0x130942678 <col:8, col:26> '<dependent type>' contains-errors lvalue
|   |   |             | |   |-ImplicitCastExpr 0x130942648 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |   |             | |   | `-RecoveryExpr 0x130942608 <col:8> '<dependent type>' contains-errors lvalue
|   |   |             | |   `-ImplicitCastExpr 0x130942660 <col:21> 'int' <LValueToRValue>
|   |   |             | |     `-DeclRefExpr 0x130942628 <col:21> 'int' lvalue Var 0x1309287f0 'field' 'int'
|   |   |             | `-DeclRefExpr 0x1309426e0 <col:41> 'long' lvalue Var 0x130928920 'len' 'long'
|   |   |             `-BinaryOperator 0x130942840 <line:69:6, col:37> '<dependent type>' contains-errors '='
|   |   |               |-CXXDependentScopeMemberExpr 0x1309427d8 <col:6, col:26> '<dependent type>' contains-errors lvalue .max_length
|   |   |               | `-ArraySubscriptExpr 0x1309427b8 <col:6, col:24> '<dependent type>' contains-errors lvalue
|   |   |               |   |-ImplicitCastExpr 0x130942788 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   |   |               |   | `-RecoveryExpr 0x130942740 <col:6> '<dependent type>' contains-errors lvalue
|   |   |               |   |   `-DeclRefExpr 0x130942720 <col:6> 'int *' lvalue ParmVar 0x1309285a8 'mysql_fields' 'int *'
|   |   |               |   `-ImplicitCastExpr 0x1309427a0 <col:19> 'int' <LValueToRValue>
|   |   |               |     `-DeclRefExpr 0x130942768 <col:19> 'int' lvalue Var 0x1309287f0 'field' 'int'
|   |   |               `-DeclRefExpr 0x130942820 <col:37> 'long' lvalue Var 0x130928920 'len' 'long'
|   |   `-IfStmt 0x130942b58 <line:74:5, line:78:5>
|   |     |-RecoveryExpr 0x130942a80 <line:74:9, col:43> '_Bool' contains-errors
|   |     `-CompoundStmt 0x130942b40 <line:75:5, line:78:5>
|   |       `-CallExpr 0x130942b18 <line:77:7, col:20> 'int'
|   |         |-ImplicitCastExpr 0x130942b00 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x130942ac0 <col:7> 'int ()' Function 0x128009760 'DBUG_RETURN' 'int ()'
|   |         `-IntegerLiteral 0x130942ae0 <col:19> 'int' 0
|   `-IfStmt 0x1309442d0 <line:81:3, line:87:3>
|     |-BinaryOperator 0x130943c70 <line:81:7, col:17> 'int' '>'
|     | |-ImplicitCastExpr 0x130943c40 <col:7> 'long' <LValueToRValue>
|     | | `-DeclRefExpr 0x130943c00 <col:7> 'long' lvalue Var 0x130928888 'pkt_len' 'long'
|     | `-ImplicitCastExpr 0x130943c58 <col:17> 'long' <IntegralCast>
|     |   `-IntegerLiteral 0x130943c20 <col:17> 'int' 1
|     `-CompoundStmt 0x1309442a8 <line:82:3, line:87:3>
|       |-BinaryOperator 0x130943ed8 <line:83:5, col:41> '<dependent type>' contains-errors '='
|       | |-CXXDependentScopeMemberExpr 0x130943cd8 <col:5, col:12> '<dependent type>' contains-errors lvalue ->warning_count
|       | | `-RecoveryExpr 0x130943cb0 <col:5> '<dependent type>' contains-errors lvalue
|       | |   `-DeclRefExpr 0x130943c90 <col:5> 'int *' lvalue ParmVar 0x130928528 'mysql' 'int *'
|       | `-CallExpr 0x130943eb0 <col:27, col:41> 'int'
|       |   |-ImplicitCastExpr 0x130943e98 <col:27> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x130943e00 <col:27> 'int ()' Function 0x130943d48 'uint2korr' 'int ()'
|       |   `-BinaryOperator 0x130943e78 <col:37, col:40> 'char *' '+'
|       |     |-ImplicitCastExpr 0x130943e60 <col:37> 'char *' <LValueToRValue>
|       |     | `-DeclRefExpr 0x130943e20 <col:37> 'char *' lvalue Var 0x1309289b8 'cp' 'char *'
|       |     `-IntegerLiteral 0x130943e40 <col:40> 'int' 1
|       |-BinaryOperator 0x130944060 <line:84:5, col:41> '<dependent type>' contains-errors '='
|       | |-CXXDependentScopeMemberExpr 0x130943f40 <col:5, col:12> '<dependent type>' contains-errors lvalue ->server_status
|       | | `-RecoveryExpr 0x130943f18 <col:5> '<dependent type>' contains-errors lvalue
|       | |   `-DeclRefExpr 0x130943ef8 <col:5> 'int *' lvalue ParmVar 0x130928528 'mysql' 'int *'
|       | `-CallExpr 0x130944038 <col:27, col:41> 'int'
|       |   |-ImplicitCastExpr 0x130944020 <col:27> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x130943f88 <col:27> 'int ()' Function 0x130943d48 'uint2korr' 'int ()'
|       |   `-BinaryOperator 0x130944000 <col:37, col:40> 'char *' '+'
|       |     |-ImplicitCastExpr 0x130943fe8 <col:37> 'char *' <LValueToRValue>
|       |     | `-DeclRefExpr 0x130943fa8 <col:37> 'char *' lvalue Var 0x1309289b8 'cp' 'char *'
|       |     `-IntegerLiteral 0x130943fc8 <col:40> 'int' 3
|       `-CallExpr 0x130944270 <line:85:5, line:86:52> '<dependent type>' contains-errors
|         |-DeclRefExpr 0x130944160 <line:85:5> 'int ()' Function 0x1309440a8 'DBUG_PRINT' 'int ()'
|         |-StringLiteral 0x130944180 <col:16> 'char[4]' lvalue "STR"
|         |-CXXDependentScopeMemberExpr 0x1309441c0 <line:86:10, col:17> '<dependent type>' contains-errors lvalue ->server_status
|         | `-RecoveryExpr 0x1309441a0 <col:10> '<dependent type>' contains-errors lvalue
|         `-CXXDependentScopeMemberExpr 0x130944228 <col:32, col:39> '<dependent type>' contains-errors lvalue ->warning_count
|           `-RecoveryExpr 0x130944208 <col:32> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x130941f48 <line:63:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x130942048 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1309420b0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x130942118 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x130941ff0 <<invalid sloc>> Implicit 882
