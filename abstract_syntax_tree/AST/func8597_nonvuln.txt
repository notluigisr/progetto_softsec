TranslationUnitDecl 0x147055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1470564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147055bd0 '__int128'
|-TypedefDecl 0x147056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147055bf0 'unsigned __int128'
|-TypedefDecl 0x14780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14780bc00 'struct __NSConstantString_tag'
|   `-Record 0x147056580 '__NSConstantString_tag'
|-TypedefDecl 0x14780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147055d90 '__SVInt8_t'
|-TypedefDecl 0x14780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147055db0 '__SVInt16_t'
|-TypedefDecl 0x14780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147055dd0 '__SVInt32_t'
|-TypedefDecl 0x14780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147055df0 '__SVInt64_t'
|-TypedefDecl 0x14780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147055e10 '__SVUint8_t'
|-TypedefDecl 0x14780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147055e30 '__SVUint16_t'
|-TypedefDecl 0x14780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147055e50 '__SVUint32_t'
|-TypedefDecl 0x14780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147055e70 '__SVUint64_t'
|-TypedefDecl 0x14780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147055e90 '__SVFloat16_t'
|-TypedefDecl 0x14780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1470560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1470560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1470560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1470561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1470561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1470561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1470562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1470562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1470562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147056390 '__SVBool_t'
|-TypedefDecl 0x14780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1470563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1470563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1470563f0 '__SVCount_t'
|-TypedefDecl 0x14780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14780dbb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
|-TypedefDecl 0x14780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14780dbb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
`-FunctionDecl 0x14780dfd0 <dataset_diviso_filec/func8597_nonvuln.c:1:1, line:19:1> line:1:13 invalid fast_csum 'void (int *, const unsigned char *, const unsigned char *, int)' static
  |-ParmVarDecl 0x14780dd28 <col:23, col:32> col:32 invalid csum 'int *'
  |-ParmVarDecl 0x14780ddd8 <line:2:9, col:30> col:30 used optr 'const unsigned char *'
  |-ParmVarDecl 0x14780de58 <line:3:9, col:30> col:30 used nptr 'const unsigned char *'
  |-ParmVarDecl 0x14780ded8 <line:4:9, col:13> col:13 used offset 'int'
  `-CompoundStmt 0x147827f70 <line:5:1, line:19:1>
    |-DeclStmt 0x14780e1b0 <line:6:2, col:20>
    | `-VarDecl 0x14780e148 <col:2, col:19> col:16 used s 'unsigned char[4]'
    |-IfStmt 0x147827a28 <line:8:2, line:16:2> has_else
    | |-BinaryOperator 0x14780e220 <line:8:6, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x14780e208 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14780e1c8 <col:6> 'int' lvalue ParmVar 0x14780ded8 'offset' 'int'
    | | `-IntegerLiteral 0x14780e1e8 <col:15> 'int' 1
    | |-CompoundStmt 0x147827628 <col:18, line:12:2>
    | | |-BinaryOperator 0x14780e3b8 <line:9:3, col:17> 'unsigned char' '='
    | | | |-ArraySubscriptExpr 0x14780e2c8 <col:3, col:6> 'unsigned char' lvalue
    | | | | |-ImplicitCastExpr 0x14780e2b0 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    | | | | | `-DeclRefExpr 0x14780e240 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    | | | | `-IntegerLiteral 0x14780e260 <col:5> 'int' 0
    | | | `-BinaryOperator 0x14780e398 <col:10, col:17> 'unsigned char' '='
    | | |   |-ArraySubscriptExpr 0x14780e340 <col:10, col:13> 'unsigned char' lvalue
    | | |   | |-ImplicitCastExpr 0x14780e328 <col:10> 'unsigned char *' <ArrayToPointerDecay>
    | | |   | | `-DeclRefExpr 0x14780e2e8 <col:10> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    | | |   | `-IntegerLiteral 0x14780e308 <col:12> 'int' 2
    | | |   `-ImplicitCastExpr 0x14780e380 <col:17> 'unsigned char' <IntegralCast>
    | | |     `-IntegerLiteral 0x14780e360 <col:17> 'int' 0
    | | |-BinaryOperator 0x147827508 <line:10:3, col:12> 'unsigned char' '='
    | | | |-ArraySubscriptExpr 0x147827438 <col:3, col:6> 'unsigned char' lvalue
    | | | | |-ImplicitCastExpr 0x147827420 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    | | | | | `-DeclRefExpr 0x14780e3d8 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    | | | | `-IntegerLiteral 0x147827400 <col:5> 'int' 1
    | | | `-ImplicitCastExpr 0x1478274f0 <col:10, col:12> 'unsigned char' <IntegralCast>
    | | |   `-UnaryOperator 0x1478274d8 <col:10, col:12> 'int' prefix '~' cannot overflow
    | | |     `-ImplicitCastExpr 0x1478274c0 <col:11, col:12> 'int' <IntegralCast>
    | | |       `-ImplicitCastExpr 0x1478274a8 <col:11, col:12> 'unsigned char' <LValueToRValue>
    | | |         `-UnaryOperator 0x147827490 <col:11, col:12> 'const unsigned char' lvalue prefix '*' cannot overflow
    | | |           `-ImplicitCastExpr 0x147827478 <col:12> 'const unsigned char *' <LValueToRValue>
    | | |             `-DeclRefExpr 0x147827458 <col:12> 'const unsigned char *' lvalue ParmVar 0x14780ddd8 'optr' 'const unsigned char *'
    | | `-BinaryOperator 0x147827608 <line:11:3, col:11> 'unsigned char' '='
    | |   |-ArraySubscriptExpr 0x147827580 <col:3, col:6> 'unsigned char' lvalue
    | |   | |-ImplicitCastExpr 0x147827568 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    | |   | | `-DeclRefExpr 0x147827528 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    | |   | `-IntegerLiteral 0x147827548 <col:5> 'int' 3
    | |   `-ImplicitCastExpr 0x1478275f0 <col:10, col:11> 'unsigned char' <LValueToRValue>
    | |     `-UnaryOperator 0x1478275d8 <col:10, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x1478275c0 <col:11> 'const unsigned char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x1478275a0 <col:11> 'const unsigned char *' lvalue ParmVar 0x14780de58 'nptr' 'const unsigned char *'
    | `-CompoundStmt 0x147827a00 <line:12:9, line:16:2>
    |   |-BinaryOperator 0x147827798 <line:13:3, col:17> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x1478276a8 <col:3, col:6> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x147827690 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x147827650 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    |   | | `-IntegerLiteral 0x147827670 <col:5> 'int' 1
    |   | `-BinaryOperator 0x147827778 <col:10, col:17> 'unsigned char' '='
    |   |   |-ArraySubscriptExpr 0x147827720 <col:10, col:13> 'unsigned char' lvalue
    |   |   | |-ImplicitCastExpr 0x147827708 <col:10> 'unsigned char *' <ArrayToPointerDecay>
    |   |   | | `-DeclRefExpr 0x1478276c8 <col:10> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    |   |   | `-IntegerLiteral 0x1478276e8 <col:12> 'int' 3
    |   |   `-ImplicitCastExpr 0x147827760 <col:17> 'unsigned char' <IntegralCast>
    |   |     `-IntegerLiteral 0x147827740 <col:17> 'int' 0
    |   |-BinaryOperator 0x1478278e0 <line:14:3, col:12> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x147827810 <col:3, col:6> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x1478277f8 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x1478277b8 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    |   | | `-IntegerLiteral 0x1478277d8 <col:5> 'int' 0
    |   | `-ImplicitCastExpr 0x1478278c8 <col:10, col:12> 'unsigned char' <IntegralCast>
    |   |   `-UnaryOperator 0x1478278b0 <col:10, col:12> 'int' prefix '~' cannot overflow
    |   |     `-ImplicitCastExpr 0x147827898 <col:11, col:12> 'int' <IntegralCast>
    |   |       `-ImplicitCastExpr 0x147827880 <col:11, col:12> 'unsigned char' <LValueToRValue>
    |   |         `-UnaryOperator 0x147827868 <col:11, col:12> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   |           `-ImplicitCastExpr 0x147827850 <col:12> 'const unsigned char *' <LValueToRValue>
    |   |             `-DeclRefExpr 0x147827830 <col:12> 'const unsigned char *' lvalue ParmVar 0x14780ddd8 'optr' 'const unsigned char *'
    |   `-BinaryOperator 0x1478279e0 <line:15:3, col:11> 'unsigned char' '='
    |     |-ArraySubscriptExpr 0x147827958 <col:3, col:6> 'unsigned char' lvalue
    |     | |-ImplicitCastExpr 0x147827940 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x147827900 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    |     | `-IntegerLiteral 0x147827920 <col:5> 'int' 2
    |     `-ImplicitCastExpr 0x1478279c8 <col:10, col:11> 'unsigned char' <LValueToRValue>
    |       `-UnaryOperator 0x1478279b0 <col:10, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x147827998 <col:11> 'const unsigned char *' <LValueToRValue>
    |           `-DeclRefExpr 0x147827978 <col:11> 'const unsigned char *' lvalue ParmVar 0x14780de58 'nptr' 'const unsigned char *'
    `-BinaryOperator 0x147827f50 <line:18:2, col:59> '<dependent type>' contains-errors '='
      |-UnaryOperator 0x147827a90 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x147827a78 <col:3> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x147827a58 <col:3> '<dependent type>' contains-errors lvalue
      `-CallExpr 0x147827f28 <col:10, col:59> '<dependent type>' contains-errors
        |-DeclRefExpr 0x147827c00 <col:10> 'int ()' Function 0x147827b48 'csum_fold' 'int ()'
        `-CallExpr 0x147827ef0 <col:20, col:58> '<dependent type>' contains-errors
          |-DeclRefExpr 0x147827d00 <col:20> 'int ()' Function 0x147827c48 'csum_partial' 'int ()'
          |-DeclRefExpr 0x147827d20 <col:33> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
          |-IntegerLiteral 0x147827d40 <col:36> 'int' 4
          `-UnaryOperator 0x147827ed8 <col:39, col:57> '<dependent type>' contains-errors prefix '~' cannot overflow
            `-CallExpr 0x147827eb0 <col:40, col:57> '<dependent type>' contains-errors
              |-DeclRefExpr 0x147827e40 <col:40> 'int ()' Function 0x147827d88 'csum_unfold' 'int ()'
              `-UnaryOperator 0x147827e98 <col:52, col:53> '<dependent type>' contains-errors prefix '*' cannot overflow
                `-ImplicitCastExpr 0x147827e80 <col:53> '<dependent type>' contains-errors <LValueToRValue>
                  `-RecoveryExpr 0x147827e60 <col:53> '<dependent type>' contains-errors lvalue
