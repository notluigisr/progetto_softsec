TranslationUnitDecl 0x11d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d855bd0 '__int128'
|-TypedefDecl 0x11d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d855bf0 'unsigned __int128'
|-TypedefDecl 0x11e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x11d856580 '__NSConstantString_tag'
|-TypedefDecl 0x11e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d855d90 '__SVInt8_t'
|-TypedefDecl 0x11e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d855db0 '__SVInt16_t'
|-TypedefDecl 0x11e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d855dd0 '__SVInt32_t'
|-TypedefDecl 0x11e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d855df0 '__SVInt64_t'
|-TypedefDecl 0x11e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d855e10 '__SVUint8_t'
|-TypedefDecl 0x11e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d855e30 '__SVUint16_t'
|-TypedefDecl 0x11e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d855e50 '__SVUint32_t'
|-TypedefDecl 0x11e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d855e70 '__SVUint64_t'
|-TypedefDecl 0x11e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d855e90 '__SVFloat16_t'
|-TypedefDecl 0x11e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d856390 '__SVBool_t'
|-TypedefDecl 0x11e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d8563f0 '__SVCount_t'
|-TypedefDecl 0x11e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
|-TypedefDecl 0x11e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e00dbb0 'char *'
|   `-BuiltinType 0x11d8556b0 'char'
|-FunctionDecl 0x11e00de88 <dataset_diviso_filec/func13345_vuln.c:1:1, line:26:1> line:1:1 invalid bilinear_box_make_weights 'int (int *, double)'
| |-ParmVarDecl 0x11e00dd28 <col:28, col:51> col:51 referenced invalid dim 'int *'
| |-ParmVarDecl 0x11e00dda8 <line:2:7, col:30> col:30 used scale 'double'
| `-CompoundStmt 0x11e02bdf0 <line:3:1, line:26:1>
|   |-DeclStmt 0x11e027768 <line:4:3, col:31>
|   | `-VarDecl 0x11e00df58 <col:3, col:30> col:7 used n 'int' cinit
|   |   `-ImplicitCastExpr 0x11e027750 <col:11, col:30> 'int' <FloatingToIntegral>
|   |     `-CallExpr 0x11e027728 <col:11, col:30> 'double'
|   |       |-ImplicitCastExpr 0x11e027710 <col:11> 'double (*)(double)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x11e0275f0 <col:11> 'double (double)' Function 0x11e027430 'ceil' 'double (double)'
|   |       `-BinaryOperator 0x11e0276c0 <col:17, col:27> 'double' '+'
|   |         |-BinaryOperator 0x11e027680 <col:17, col:19> 'double' '/'
|   |         | |-ImplicitCastExpr 0x11e027668 <col:17> 'double' <IntegralToFloating>
|   |         | | `-IntegerLiteral 0x11e027610 <col:17> 'int' 1
|   |         | `-ImplicitCastExpr 0x11e027650 <col:19> 'double' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x11e027630 <col:19> 'double' lvalue ParmVar 0x11e00dda8 'scale' 'double'
|   |         `-FloatingLiteral 0x11e0276a0 <col:27> 'double' 3.000000e+00
|   |-DeclStmt 0x11e027b50 <line:5:3, col:70>
|   | `-VarDecl 0x11e0277c8 <col:3, col:69> col:11 used pixel_weights 'double *' cinit
|   |   `-CallExpr 0x11e027b20 <col:27, col:69> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x11e027990 <col:27> 'int ()' Function 0x11e0278d8 'g_malloc_n' 'int ()'
|   |     |-BinaryOperator 0x11e027b00 <col:39, col:57> '<dependent type>' contains-errors '*'
|   |     | |-UnaryExprOrTypeTraitExpr 0x11e027ac0 <col:39, col:53> 'unsigned long' sizeof 'double'
|   |     | `-RecoveryExpr 0x11e027ae0 <col:57> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x11e027a20 <col:68> 'int' lvalue Var 0x11e00df58 'n' 'int'
|   |-DeclStmt 0x11e027be8 <line:6:3, col:11>
|   | `-VarDecl 0x11e027b80 <col:3, col:10> col:10 used w 'double'
|   |-DeclStmt 0x11e027d18 <line:7:3, col:16>
|   | |-VarDecl 0x11e027c18 <col:3, col:7> col:7 used offset 'int'
|   | `-VarDecl 0x11e027c98 <col:3, col:15> col:15 used i 'int'
|   |-BinaryOperator 0x11e027df8 <line:9:3, col:18> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x11e027d78 <col:3, col:8> '<dependent type>' contains-errors lvalue ->offset
|   | | `-RecoveryExpr 0x11e027d50 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x11e027d30 <col:3> 'int *' lvalue ParmVar 0x11e00dd28 'dim' 'int *'
|   | `-UnaryOperator 0x11e027de0 <col:17, col:18> 'double' prefix '-'
|   |   `-FloatingLiteral 0x11e027dc0 <col:18> 'double' 1.000000e+00
|   |-BinaryOperator 0x11e027ec8 <line:10:3, col:12> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x11e027e60 <col:3, col:8> '<dependent type>' contains-errors lvalue ->n
|   | | `-RecoveryExpr 0x11e027e38 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x11e027e18 <col:3> 'int *' lvalue ParmVar 0x11e00dd28 'dim' 'int *'
|   | `-DeclRefExpr 0x11e027ea8 <col:12> 'int' lvalue Var 0x11e00df58 'n' 'int'
|   |-BinaryOperator 0x11e027f98 <line:11:3, col:18> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x11e027f30 <col:3, col:8> '<dependent type>' contains-errors lvalue ->weights
|   | | `-RecoveryExpr 0x11e027f08 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x11e027ee8 <col:3> 'int *' lvalue ParmVar 0x11e00dd28 'dim' 'int *'
|   | `-DeclRefExpr 0x11e027f78 <col:18> 'double *' contains-errors lvalue Var 0x11e0277c8 'pixel_weights' 'double *'
|   `-ForStmt 0x11e02bdb8 <line:13:3, line:25:5>
|     |-BinaryOperator 0x11e027ff8 <line:13:8, col:17> 'int' '='
|     | |-DeclRefExpr 0x11e027fb8 <col:8> 'int' lvalue Var 0x11e027c18 'offset' 'int'
|     | `-IntegerLiteral 0x11e027fd8 <col:17> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x11e028090 <col:20, col:29> 'int' contains-errors '<'
|     | |-DeclRefExpr 0x11e028018 <col:20> 'int' lvalue Var 0x11e027c18 'offset' 'int'
|     | `-RecoveryExpr 0x11e028070 <col:29> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x11e0280d0 <col:40, col:46> 'int' postfix '++'
|     | `-DeclRefExpr 0x11e0280b0 <col:40> 'int' lvalue Var 0x11e027c18 'offset' 'int'
|     `-CompoundStmt 0x11e02bd90 <line:14:5, line:25:5>
|       |-DeclStmt 0x11e028308 <line:15:7, col:44>
|       | `-VarDecl 0x11e028100 <col:7, col:35> col:14 used x 'double' cinit
|       |   `-BinaryOperator 0x11e0282e8 <col:18, col:35> '<dependent type>' contains-errors '/'
|       |     |-CStyleCastExpr 0x11e0282a0 <col:18, col:26> 'double' <IntegralToFloating>
|       |     | `-ImplicitCastExpr 0x11e028288 <col:26> 'int' <LValueToRValue> part_of_explicit_cast
|       |     |   `-DeclRefExpr 0x11e028168 <col:26> 'int' lvalue Var 0x11e027c18 'offset' 'int'
|       |     `-RecoveryExpr 0x11e0282c8 <col:35> '<dependent type>' contains-errors lvalue
|       |-DeclStmt 0x11e02b488 <line:16:7, col:31>
|       | `-VarDecl 0x11e028338 <col:7, col:26> col:14 used a 'double' cinit
|       |   `-BinaryOperator 0x11e02b468 <col:18, col:26> 'double' contains-errors '+'
|       |     |-ImplicitCastExpr 0x11e02b450 <col:18> 'double' contains-errors <LValueToRValue>
|       |     | `-DeclRefExpr 0x11e0283a0 <col:18> 'double' contains-errors lvalue Var 0x11e028100 'x' 'double'
|       |     `-BinaryOperator 0x11e02b430 <col:22, col:26> 'double' '/'
|       |       |-ImplicitCastExpr 0x11e02b418 <col:22> 'double' <IntegralToFloating>
|       |       | `-IntegerLiteral 0x11e0283c0 <col:22> 'int' 1
|       |       `-ImplicitCastExpr 0x11e02b400 <col:26> 'double' <LValueToRValue>
|       |         `-DeclRefExpr 0x11e0283e0 <col:26> 'double' lvalue ParmVar 0x11e00dda8 'scale' 'double'
|       `-ForStmt 0x11e02bd58 <line:18:7, line:24:9>
|         |-BinaryOperator 0x11e02b4e0 <line:18:12, col:16> 'int' '='
|         | |-DeclRefExpr 0x11e02b4a0 <col:12> 'int' lvalue Var 0x11e027c98 'i' 'int'
|         | `-IntegerLiteral 0x11e02b4c0 <col:16> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x11e02b570 <col:19, col:23> 'int' '<'
|         | |-ImplicitCastExpr 0x11e02b540 <col:19> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x11e02b500 <col:19> 'int' lvalue Var 0x11e027c98 'i' 'int'
|         | `-ImplicitCastExpr 0x11e02b558 <col:23> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x11e02b520 <col:23> 'int' lvalue Var 0x11e00df58 'n' 'int'
|         |-UnaryOperator 0x11e02b5b0 <col:26, col:27> 'int' postfix '++'
|         | `-DeclRefExpr 0x11e02b590 <col:26> 'int' lvalue Var 0x11e027c98 'i' 'int'
|         `-CompoundStmt 0x11e02bd30 <line:19:9, line:24:9>
|           |-BinaryOperator 0x11e02b950 <line:20:11, col:57> 'double' contains-errors '='
|           | |-DeclRefExpr 0x11e02b5c8 <col:11> 'double' lvalue Var 0x11e027b80 'w' 'double'
|           | `-ImplicitCastExpr 0x11e02b938 <col:16, col:57> 'double' contains-errors <IntegralToFloating>
|           |   `-CallExpr 0x11e02b908 <col:16, col:57> 'int' contains-errors
|           |     |-ImplicitCastExpr 0x11e02b8f0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|           |     | `-DeclRefExpr 0x11e02b6c8 <col:16> 'int ()' Function 0x11e02b610 'linear_box_half' 'int ()'
|           |     |-BinaryOperator 0x11e02b7b0 <col:33, col:43> 'double' contains-errors '-'
|           |     | |-BinaryOperator 0x11e02b758 <col:33, col:39> 'double' '+'
|           |     | | |-FloatingLiteral 0x11e02b6e8 <col:33> 'double' 5.000000e-01
|           |     | | `-ImplicitCastExpr 0x11e02b740 <col:39> 'double' <IntegralToFloating>
|           |     | |   `-ImplicitCastExpr 0x11e02b728 <col:39> 'int' <LValueToRValue>
|           |     | |     `-DeclRefExpr 0x11e02b708 <col:39> 'int' lvalue Var 0x11e027c98 'i' 'int'
|           |     | `-ImplicitCastExpr 0x11e02b798 <col:43> 'double' contains-errors <LValueToRValue>
|           |     |   `-DeclRefExpr 0x11e02b778 <col:43> 'double' contains-errors lvalue Var 0x11e028338 'a' 'double'
|           |     `-BinaryOperator 0x11e02b898 <col:46, col:56> 'double' contains-errors '-'
|           |       |-BinaryOperator 0x11e02b840 <col:46, col:52> 'double' '+'
|           |       | |-FloatingLiteral 0x11e02b7d0 <col:46> 'double' 5.000000e-01
|           |       | `-ImplicitCastExpr 0x11e02b828 <col:52> 'double' <IntegralToFloating>
|           |       |   `-ImplicitCastExpr 0x11e02b810 <col:52> 'int' <LValueToRValue>
|           |       |     `-DeclRefExpr 0x11e02b7f0 <col:52> 'int' lvalue Var 0x11e027c98 'i' 'int'
|           |       `-ImplicitCastExpr 0x11e02b880 <col:56> 'double' contains-errors <LValueToRValue>
|           |         `-DeclRefExpr 0x11e02b860 <col:56> 'double' contains-errors lvalue Var 0x11e028100 'x' 'double'
|           |-CompoundAssignOperator 0x11e02bbe0 <line:21:11, col:57> 'double' contains-errors '+=' ComputeLHSTy='double' ComputeResultTy='double'
|           | |-DeclRefExpr 0x11e02b970 <col:11> 'double' lvalue Var 0x11e027b80 'w' 'double'
|           | `-ImplicitCastExpr 0x11e02bbc8 <col:16, col:57> 'double' contains-errors <IntegralToFloating>
|           |   `-CallExpr 0x11e02bb98 <col:16, col:57> 'int' contains-errors
|           |     |-ImplicitCastExpr 0x11e02bb80 <col:16> 'int (*)()' <FunctionToPointerDecay>
|           |     | `-DeclRefExpr 0x11e02b990 <col:16> 'int ()' Function 0x11e02b610 'linear_box_half' 'int ()'
|           |     |-BinaryOperator 0x11e02ba78 <col:33, col:43> 'double' contains-errors '-'
|           |     | |-BinaryOperator 0x11e02ba08 <col:33, col:39> 'double' contains-errors '+'
|           |     | | |-FloatingLiteral 0x11e02b9b0 <col:33> 'double' 1.500000e+00
|           |     | | `-ImplicitCastExpr 0x11e02b9f0 <col:39> 'double' contains-errors <LValueToRValue>
|           |     | |   `-DeclRefExpr 0x11e02b9d0 <col:39> 'double' contains-errors lvalue Var 0x11e028100 'x' 'double'
|           |     | `-ImplicitCastExpr 0x11e02ba60 <col:43> 'double' <IntegralToFloating>
|           |     |   `-ImplicitCastExpr 0x11e02ba48 <col:43> 'int' <LValueToRValue>
|           |     |     `-DeclRefExpr 0x11e02ba28 <col:43> 'int' lvalue Var 0x11e027c98 'i' 'int'
|           |     `-BinaryOperator 0x11e02bb60 <col:46, col:56> 'double' contains-errors '-'
|           |       |-BinaryOperator 0x11e02baf0 <col:46, col:52> 'double' contains-errors '+'
|           |       | |-FloatingLiteral 0x11e02ba98 <col:46> 'double' 1.500000e+00
|           |       | `-ImplicitCastExpr 0x11e02bad8 <col:52> 'double' contains-errors <LValueToRValue>
|           |       |   `-DeclRefExpr 0x11e02bab8 <col:52> 'double' contains-errors lvalue Var 0x11e028338 'a' 'double'
|           |       `-ImplicitCastExpr 0x11e02bb48 <col:56> 'double' <IntegralToFloating>
|           |         `-ImplicitCastExpr 0x11e02bb30 <col:56> 'int' <LValueToRValue>
|           |           `-DeclRefExpr 0x11e02bb10 <col:56> 'int' lvalue Var 0x11e027c98 'i' 'int'
|           `-BinaryOperator 0x11e02bd10 <line:23:11, col:36> 'double' contains-errors '='
|             |-UnaryOperator 0x11e02bc68 <col:11, col:28> 'double' contains-errors lvalue prefix '*' cannot overflow
|             | `-ParenExpr 0x11e02bc48 <col:12, col:28> 'double *' contains-errors
|             |   `-UnaryOperator 0x11e02bc30 <col:13, col:26> 'double *' contains-errors postfix '++'
|             |     `-DeclRefExpr 0x11e02bc10 <col:13> 'double *' contains-errors lvalue Var 0x11e0277c8 'pixel_weights' 'double *'
|             `-BinaryOperator 0x11e02bcf0 <col:32, col:36> 'double' '*'
|               |-ImplicitCastExpr 0x11e02bcc0 <col:32> 'double' <LValueToRValue>
|               | `-DeclRefExpr 0x11e02bc80 <col:32> 'double' lvalue Var 0x11e027b80 'w' 'double'
|               `-ImplicitCastExpr 0x11e02bcd8 <col:36> 'double' <LValueToRValue>
|                 `-DeclRefExpr 0x11e02bca0 <col:36> 'double' lvalue ParmVar 0x11e00dda8 'scale' 'double'
`-FunctionDecl 0x11e027430 <line:4:11> col:11 implicit used ceil 'double (double)' extern
  |-ParmVarDecl 0x11e027530 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x11e0274d8 <<invalid sloc>> Implicit 1052
  |-NoThrowAttr 0x11e0275a0 <col:11> Implicit
  `-ConstAttr 0x11e0275c8 <col:11> Implicit
