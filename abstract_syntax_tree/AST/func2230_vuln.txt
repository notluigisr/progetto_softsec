TranslationUnitDecl 0x14d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d855bd0 '__int128'
|-TypedefDecl 0x14d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d855bf0 'unsigned __int128'
|-TypedefDecl 0x14e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14d856580 '__NSConstantString_tag'
|-TypedefDecl 0x14e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d855d90 '__SVInt8_t'
|-TypedefDecl 0x14e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d855db0 '__SVInt16_t'
|-TypedefDecl 0x14e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d855dd0 '__SVInt32_t'
|-TypedefDecl 0x14e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d855df0 '__SVInt64_t'
|-TypedefDecl 0x14e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d855e10 '__SVUint8_t'
|-TypedefDecl 0x14e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d855e30 '__SVUint16_t'
|-TypedefDecl 0x14e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d855e50 '__SVUint32_t'
|-TypedefDecl 0x14e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d855e70 '__SVUint64_t'
|-TypedefDecl 0x14e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d855e90 '__SVFloat16_t'
|-TypedefDecl 0x14e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d856390 '__SVBool_t'
|-TypedefDecl 0x14e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d8563f0 '__SVCount_t'
|-TypedefDecl 0x14e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e00dbb0 'char *'
|   `-BuiltinType 0x14d8556b0 'char'
|-TypedefDecl 0x14e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e00dbb0 'char *'
|   `-BuiltinType 0x14d8556b0 'char'
`-FunctionDecl 0x14e026748 <dataset_diviso_filec/func2230_vuln.c:1:1, line:27:1> line:1:5 fb_cmap_to_user 'int (const struct fb_cmap *, struct fb_cmap_user *)'
  |-ParmVarDecl 0x14e00e248 <col:21, col:43> col:43 used from 'const struct fb_cmap *'
  |-ParmVarDecl 0x14e026628 <col:49, col:70> col:70 used to 'struct fb_cmap_user *'
  `-CompoundStmt 0x14d925120 <line:2:1, line:27:1>
    |-DeclStmt 0x14e0269a0 <line:3:2, col:28>
    | |-VarDecl 0x14e026860 <col:2, col:14> col:6 used tooff 'int' cinit
    | | `-IntegerLiteral 0x14e0268c8 <col:14> 'int' 0
    | `-VarDecl 0x14e026900 <col:2, col:27> col:17 used fromoff 'int' cinit
    |   `-IntegerLiteral 0x14e026968 <col:27> 'int' 0
    |-DeclStmt 0x14e026a38 <line:4:2, col:10>
    | `-VarDecl 0x14e0269d0 <col:2, col:6> col:6 used size 'int'
    |-IfStmt 0x14e026d70 <line:6:2, line:9:29> has_else
    | |-BinaryOperator 0x14e026b10 <line:6:6, col:24> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x14e026a88 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14e026a50 <col:6> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'
    | | `-RecoveryExpr 0x14e026ae8 <col:18, col:24> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14e026ab0 <col:18> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'
    | |-BinaryOperator 0x14e026c30 <line:7:3, col:31> 'int' contains-errors '='
    | | |-DeclRefExpr 0x14e026b30 <col:3> 'int' lvalue Var 0x14e026900 'fromoff' 'int'
    | | `-BinaryOperator 0x14e026c10 <col:13, col:31> '<dependent type>' contains-errors '-'
    | |   |-RecoveryExpr 0x14e026b88 <col:13, col:17> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14e026b50 <col:13> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'
    | |   `-RecoveryExpr 0x14e026be8 <col:25, col:31> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14e026bb0 <col:25> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'
    | `-BinaryOperator 0x14e026d50 <line:9:3, col:29> 'int' contains-errors '='
    |   |-DeclRefExpr 0x14e026c50 <col:3> 'int' lvalue Var 0x14e026860 'tooff' 'int'
    |   `-BinaryOperator 0x14e026d30 <col:11, col:29> '<dependent type>' contains-errors '-'
    |     |-RecoveryExpr 0x14e026ca8 <col:11, col:17> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x14e026c70 <col:11> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'
    |     `-RecoveryExpr 0x14e026d08 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14e026cd0 <col:25> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'
    |-BinaryOperator 0x14e026e60 <line:10:2, col:19> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e026da0 <col:2> 'int' lvalue Var 0x14e0269d0 'size' 'int'
    | `-BinaryOperator 0x14e026e40 <col:9, col:19> '<dependent type>' contains-errors '-'
    |   |-RecoveryExpr 0x14e026df8 <col:9, col:13> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14e026dc0 <col:9> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'
    |   `-DeclRefExpr 0x14e026e20 <col:19> 'int' lvalue Var 0x14e026860 'tooff' 'int'
    |-IfStmt 0x14e0270d8 <line:11:2, line:12:22>
    | |-BinaryOperator 0x14e026fd8 <line:11:6, col:39> 'int' contains-errors '>'
    | | |-ImplicitCastExpr 0x14e026fc0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e026e80 <col:6> 'int' lvalue Var 0x14e0269d0 'size' 'int'
    | | `-CStyleCastExpr 0x14e026f98 <col:13, col:39> 'int' contains-errors <Dependent>
    | |   `-ParenExpr 0x14e026f78 <col:19, col:39> '<dependent type>' contains-errors
    | |     `-BinaryOperator 0x14e026f20 <col:20, col:32> '<dependent type>' contains-errors '-'
    | |       |-RecoveryExpr 0x14e026ed8 <col:20, col:26> '<dependent type>' contains-errors lvalue
    | |       | `-DeclRefExpr 0x14e026ea0 <col:20> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'
    | |       `-DeclRefExpr 0x14e026f00 <col:32> 'int' lvalue Var 0x14e026900 'fromoff' 'int'
    | `-BinaryOperator 0x14e0270b8 <line:12:3, col:22> 'int' contains-errors '='
    |   |-DeclRefExpr 0x14e026ff8 <col:3> 'int' lvalue Var 0x14e0269d0 'size' 'int'
    |   `-BinaryOperator 0x14e027098 <col:10, col:22> '<dependent type>' contains-errors '-'
    |     |-RecoveryExpr 0x14e027050 <col:10, col:16> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x14e027018 <col:10> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'
    |     `-DeclRefExpr 0x14e027078 <col:22> 'int' lvalue Var 0x14e026900 'fromoff' 'int'
    |-IfStmt 0x14e027230 <line:13:2, line:14:11>
    | |-BinaryOperator 0x14e027150 <line:13:6, col:14> 'int' '<='
    | | |-ImplicitCastExpr 0x14e027138 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e0270f8 <col:6> 'int' lvalue Var 0x14e0269d0 'size' 'int'
    | | `-IntegerLiteral 0x14e027118 <col:14> 'int' 0
    | `-ReturnStmt 0x14e027220 <line:14:3, col:11>
    |   `-UnaryOperator 0x14e027208 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14e0271f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14e0271d0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d924a00 <line:17:2, line:18:11>
    | |-CallExpr 0x14e027520 <line:17:6, col:57> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14e0273a0 <col:6> 'int ()' Function 0x14e0272e8 'copy_to_user' 'int ()'
    | | |-BinaryOperator 0x14e027440 <col:19, col:27> '<dependent type>' contains-errors '+'
    | | | |-RecoveryExpr 0x14e0273f8 <col:19, col:23> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x14e0273c0 <col:19> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'
    | | | `-DeclRefExpr 0x14e027420 <col:27> 'int' lvalue Var 0x14e026860 'tooff' 'int'
    | | |-BinaryOperator 0x14e0274e0 <col:34, col:44> '<dependent type>' contains-errors '+'
    | | | |-RecoveryExpr 0x14e027498 <col:34, col:40> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x14e027460 <col:34> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'
    | | | `-DeclRefExpr 0x14e0274c0 <col:44> 'int' lvalue Var 0x14e026900 'fromoff' 'int'
    | | `-DeclRefExpr 0x14e027500 <col:53> 'int' lvalue Var 0x14e0269d0 'size' 'int'
    | `-ReturnStmt 0x14e0275f0 <line:18:3, col:11>
    |   `-UnaryOperator 0x14e0275d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14e0275c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14e0275a0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d924c80 <line:19:2, line:20:11>
    | |-CallExpr 0x14d924ba0 <line:19:6, col:61> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14d924a20 <col:6> 'int ()' Function 0x14e0272e8 'copy_to_user' 'int ()'
    | | |-BinaryOperator 0x14d924ac0 <col:19, col:29> '<dependent type>' contains-errors '+'
    | | | |-RecoveryExpr 0x14d924a78 <col:19, col:23> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x14d924a40 <col:19> 'struct fb_cmap_user *' lvalue ParmVar 0x14e026628 'to' 'struct fb_cmap_user *'
    | | | `-DeclRefExpr 0x14d924aa0 <col:29> 'int' lvalue Var 0x14e026860 'tooff' 'int'
    | | |-BinaryOperator 0x14d924b60 <col:36, col:48> '<dependent type>' contains-errors '+'
    | | | |-RecoveryExpr 0x14d924b18 <col:36, col:42> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x14d924ae0 <col:36> 'const struct fb_cmap *' lvalue ParmVar 0x14e00e248 'from' 'const struct fb_cmap *'
    | | | `-DeclRefExpr 0x14d924b40 <col:48> 'int' lvalue Var 0x14e026900 'fromoff' 'int'
    | | `-DeclRefExpr 0x14d924b80 <col:57> 'int' lvalue Var 0x14e0269d0 'size' 'int'
    | `-ReturnStmt 0x14d924c70 <line:20:3, col:11>
    |   `-UnaryOperator 0x14d924c58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14d924c40 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14d924c20 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14d925110 <line:26:2, col:9>
      `-IntegerLiteral 0x14d9250f0 <col:9> 'int' 0
