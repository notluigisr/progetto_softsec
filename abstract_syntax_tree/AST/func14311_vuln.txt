TranslationUnitDecl 0x14f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14f855bd0 '__int128'
|-TypedefDecl 0x14f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14f855bf0 'unsigned __int128'
|-TypedefDecl 0x14f926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f926000 'struct __NSConstantString_tag'
|   `-Record 0x14f856580 '__NSConstantString_tag'
|-TypedefDecl 0x14f926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14f855d90 '__SVInt8_t'
|-TypedefDecl 0x14f926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14f855db0 '__SVInt16_t'
|-TypedefDecl 0x14f926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14f855dd0 '__SVInt32_t'
|-TypedefDecl 0x14f9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14f855df0 '__SVInt64_t'
|-TypedefDecl 0x14f926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14f855e10 '__SVUint8_t'
|-TypedefDecl 0x14f9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14f855e30 '__SVUint16_t'
|-TypedefDecl 0x14f926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14f855e50 '__SVUint32_t'
|-TypedefDecl 0x14f926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14f855e70 '__SVUint64_t'
|-TypedefDecl 0x14f9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14f855e90 '__SVFloat16_t'
|-TypedefDecl 0x14f926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14f9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14f926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14f926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14f9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14f926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14f9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14f926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14f926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14f9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14f927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14f927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14f927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14f856390 '__SVBool_t'
|-TypedefDecl 0x14f927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14f8563f0 '__SVCount_t'
|-TypedefDecl 0x14f927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f927fb0 'char *'
|   `-BuiltinType 0x14f8556b0 'char'
|-TypedefDecl 0x14f928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f927fb0 'char *'
|   `-BuiltinType 0x14f8556b0 'char'
|-FunctionDecl 0x14f928408 <dataset_diviso_filec/func14311_vuln.c:1:1, line:30:1> line:1:1 invalid add_header_value 'int (int, const char *, int, const char *, int)'
| |-ParmVarDecl 0x14f9280f0 <col:18, col:24> col:24 invalid hh 'int'
| |-ParmVarDecl 0x14f928170 <col:28, col:40> col:40 used key 'const char *'
| |-ParmVarDecl 0x14f9281f0 <col:45, col:49> col:49 used klen 'int'
| |-ParmVarDecl 0x14f928270 <col:55, col:67> col:67 used val 'const char *'
| |-ParmVarDecl 0x14f9282f0 <col:72, col:76> col:76 used vlen 'int'
| `-CompoundStmt 0x14f945ef0 <col:82, line:30:1>
|   `-IfStmt 0x14f945ec0 <line:2:5, line:29:5> has_else
|     |-RecoveryExpr 0x14f941cc0 <line:2:9, col:105> '_Bool' contains-errors
|     |-CompoundStmt 0x14f942190 <col:108, line:4:5>
|     | `-CallExpr 0x14f942158 <line:3:2, col:58> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x14f941e40 <col:2> 'int ()' Function 0x14f941d88 'rb_hash_aset' 'int ()'
|     |   |-RecoveryExpr 0x14f941e60 <col:15> '<dependent type>' contains-errors lvalue
|     |   |-RecoveryExpr 0x14f9420c0 <col:19> '<dependent type>' contains-errors lvalue
|     |   `-CallExpr 0x14f9420f8 <col:37, col:57> 'int'
|     |     |-ImplicitCastExpr 0x14f9420e0 <col:37> 'int (*)()' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x14f941f78 <col:37> 'int ()' Function 0x14f941ec0 'rb_str_new' 'int ()'
|     |     |-ImplicitCastExpr 0x14f942128 <col:48> 'const char *' <LValueToRValue>
|     |     | `-DeclRefExpr 0x14f941f98 <col:48> 'const char *' lvalue ParmVar 0x14f928270 'val' 'const char *'
|     |     `-ImplicitCastExpr 0x14f942140 <col:53> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x14f941fb8 <col:53> 'int' lvalue ParmVar 0x14f9282f0 'vlen' 'int'
|     `-IfStmt 0x14f945e90 <line:4:12, line:29:5> has_else
|       |-RecoveryExpr 0x14f9422b0 <line:4:16, col:118> '_Bool' contains-errors
|       |-CompoundStmt 0x14f942508 <col:121, line:6:5>
|       | `-CallExpr 0x14f9424d0 <line:5:2, col:60> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x14f9422d0 <col:2> 'int ()' Function 0x14f941d88 'rb_hash_aset' 'int ()'
|       |   |-RecoveryExpr 0x14f9422f0 <col:15> '<dependent type>' contains-errors lvalue
|       |   |-RecoveryExpr 0x14f942438 <col:19> '<dependent type>' contains-errors lvalue
|       |   `-CallExpr 0x14f942470 <col:39, col:59> 'int'
|       |     |-ImplicitCastExpr 0x14f942458 <col:39> 'int (*)()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x14f942328 <col:39> 'int ()' Function 0x14f941ec0 'rb_str_new' 'int ()'
|       |     |-ImplicitCastExpr 0x14f9424a0 <col:50> 'const char *' <LValueToRValue>
|       |     | `-DeclRefExpr 0x14f942348 <col:50> 'const char *' lvalue ParmVar 0x14f928270 'val' 'const char *'
|       |     `-ImplicitCastExpr 0x14f9424b8 <col:55> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x14f942368 <col:55> 'int' lvalue ParmVar 0x14f9282f0 'vlen' 'int'
|       `-CompoundStmt 0x14f945e30 <line:6:12, line:29:5>
|         |-DeclStmt 0x14f942628 <line:7:2, col:18>
|         | `-VarDecl 0x14f9425c0 <col:2, col:17> col:8 used hkey 'char[1024]'
|         |-DeclStmt 0x14f9426f8 <line:8:2, col:17>
|         | `-VarDecl 0x14f942658 <col:2, col:13> col:9 used k 'char *' cinit
|         |   `-ImplicitCastExpr 0x14f9426e0 <col:13> 'char *' <ArrayToPointerDecay>
|         |     `-DeclRefExpr 0x14f9426c0 <col:13> 'char[1024]' lvalue Var 0x14f9425c0 'hkey' 'char[1024]'
|         |-DeclStmt 0x14f943078 <line:9:2, col:45>
|         | `-VarDecl 0x14f942728 <col:2, col:17> col:17 invalid sval 'volatile int'
|         |-CallExpr 0x14f9433c8 <line:11:2, col:20> 'char *'
|         | |-ImplicitCastExpr 0x14f9433b0 <col:2> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x14f9432b0 <col:2> 'char *(char *, const char *)' Function 0x14f9430d0 'strcpy' 'char *(char *, const char *)'
|         | |-ImplicitCastExpr 0x14f9433f8 <col:9> 'char *' <ArrayToPointerDecay>
|         | | `-DeclRefExpr 0x14f9432d0 <col:9> 'char[1024]' lvalue Var 0x14f9425c0 'hkey' 'char[1024]'
|         | `-ImplicitCastExpr 0x14f943428 <col:15> 'const char *' <NoOp>
|         |   `-ImplicitCastExpr 0x14f943410 <col:15> 'char *' <ArrayToPointerDecay>
|         |     `-StringLiteral 0x14f943330 <col:15> 'char[4]' lvalue "STR"
|         |-BinaryOperator 0x14f9434d8 <line:12:2, col:13> 'char *' '='
|         | |-DeclRefExpr 0x14f943440 <col:2> 'char *' lvalue Var 0x14f942658 'k' 'char *'
|         | `-BinaryOperator 0x14f9434b8 <col:6, col:13> 'char *' '+'
|         |   |-ImplicitCastExpr 0x14f9434a0 <col:6> 'char *' <ArrayToPointerDecay>
|         |   | `-DeclRefExpr 0x14f943460 <col:6> 'char[1024]' lvalue Var 0x14f9425c0 'hkey' 'char[1024]'
|         |   `-IntegerLiteral 0x14f943480 <col:13> 'int' 5
|         |-IfStmt 0x14f9437b0 <line:13:2, line:15:2>
|         | |-BinaryOperator 0x14f943668 <line:13:6, col:33> 'int' '<='
|         | | |-CStyleCastExpr 0x14f943608 <col:6, col:28> 'int' <IntegralCast>
|         | | | `-ParenExpr 0x14f9435e8 <col:11, col:28> 'unsigned long'
|         | | |   `-BinaryOperator 0x14f943590 <col:12, col:27> 'unsigned long' '-'
|         | | |     |-UnaryExprOrTypeTraitExpr 0x14f943538 <col:12, col:23> 'unsigned long' sizeof
|         | | |     | `-ParenExpr 0x14f943518 <col:18, col:23> 'char[1024]' lvalue
|         | | |     |   `-DeclRefExpr 0x14f9434f8 <col:19> 'char[1024]' lvalue Var 0x14f9425c0 'hkey' 'char[1024]' non_odr_use_unevaluated
|         | | |     `-ImplicitCastExpr 0x14f943578 <col:27> 'unsigned long' <IntegralCast>
|         | | |       `-IntegerLiteral 0x14f943558 <col:27> 'int' 5
|         | | `-ImplicitCastExpr 0x14f943650 <col:33> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x14f943630 <col:33> 'int' lvalue ParmVar 0x14f9281f0 'klen' 'int'
|         | `-CompoundStmt 0x14f943798 <col:39, line:15:2>
|         |   `-BinaryOperator 0x14f943778 <line:14:6, col:28> 'int' '='
|         |     |-DeclRefExpr 0x14f943688 <col:6> 'int' lvalue ParmVar 0x14f9281f0 'klen' 'int'
|         |     `-ImplicitCastExpr 0x14f943760 <col:13, col:28> 'int' <IntegralCast>
|         |       `-BinaryOperator 0x14f943740 <col:13, col:28> 'unsigned long' '-'
|         |         |-UnaryExprOrTypeTraitExpr 0x14f9436e8 <col:13, col:24> 'unsigned long' sizeof
|         |         | `-ParenExpr 0x14f9436c8 <col:19, col:24> 'char[1024]' lvalue
|         |         |   `-DeclRefExpr 0x14f9436a8 <col:20> 'char[1024]' lvalue Var 0x14f9425c0 'hkey' 'char[1024]' non_odr_use_unevaluated
|         |         `-ImplicitCastExpr 0x14f943728 <col:28> 'unsigned long' <IntegralCast>
|         |           `-IntegerLiteral 0x14f943708 <col:28> 'int' 6
|         |-CallExpr 0x14f943b78 <line:16:2, col:22> 'char *'
|         | |-ImplicitCastExpr 0x14f943b60 <col:2> 'char *(*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x14f943a68 <col:2> 'char *(char *, const char *, unsigned long)' Function 0x14f943818 'strncpy' 'char *(char *, const char *, unsigned long)'
|         | |-ImplicitCastExpr 0x14f943bb0 <col:10> 'char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x14f943a88 <col:10> 'char *' lvalue Var 0x14f942658 'k' 'char *'
|         | |-ImplicitCastExpr 0x14f943bc8 <col:13> 'const char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x14f943aa8 <col:13> 'const char *' lvalue ParmVar 0x14f928170 'key' 'const char *'
|         | `-ImplicitCastExpr 0x14f943bf8 <col:18> 'unsigned long' <IntegralCast>
|         |   `-ImplicitCastExpr 0x14f943be0 <col:18> 'int' <LValueToRValue>
|         |     `-DeclRefExpr 0x14f943ac8 <col:18> 'int' lvalue ParmVar 0x14f9281f0 'klen' 'int'
|         |-BinaryOperator 0x14f943d10 <line:17:2, col:19> 'char' '='
|         | |-ArraySubscriptExpr 0x14f943cc0 <col:2, col:15> 'char' lvalue
|         | | |-ImplicitCastExpr 0x14f943ca8 <col:2> 'char *' <ArrayToPointerDecay>
|         | | | `-DeclRefExpr 0x14f943c10 <col:2> 'char[1024]' lvalue Var 0x14f9425c0 'hkey' 'char[1024]'
|         | | `-BinaryOperator 0x14f943c88 <col:7, col:14> 'int' '+'
|         | |   |-ImplicitCastExpr 0x14f943c70 <col:7> 'int' <LValueToRValue>
|         | |   | `-DeclRefExpr 0x14f943c30 <col:7> 'int' lvalue ParmVar 0x14f9281f0 'klen' 'int'
|         | |   `-IntegerLiteral 0x14f943c50 <col:14> 'int' 5
|         | `-ImplicitCastExpr 0x14f943cf8 <col:19> 'char' <IntegralCast>
|         |   `-CharacterLiteral 0x14f943ce0 <col:19> 'int' 0
|         |-ForStmt 0x14f945c48 <line:21:2, line:27:2>
|         | |-BinaryOperator 0x14f943dc8 <line:21:7, col:18> 'char *' '='
|         | | |-DeclRefExpr 0x14f943d30 <col:7> 'char *' lvalue Var 0x14f942658 'k' 'char *'
|         | | `-BinaryOperator 0x14f943da8 <col:11, col:18> 'char *' '+'
|         | |   |-ImplicitCastExpr 0x14f943d90 <col:11> 'char *' <ArrayToPointerDecay>
|         | |   | `-DeclRefExpr 0x14f943d50 <col:11> 'char[1024]' lvalue Var 0x14f9425c0 'hkey' 'char[1024]'
|         | |   `-IntegerLiteral 0x14f943d70 <col:18> 'int' 5
|         | |-<<<NULL>>>
|         | |-BinaryOperator 0x14f943e80 <col:21, col:30> 'int' '!='
|         | | |-CharacterLiteral 0x14f943de8 <col:21> 'int' 0
|         | | `-ImplicitCastExpr 0x14f943e68 <col:29, col:30> 'int' <IntegralCast>
|         | |   `-ImplicitCastExpr 0x14f943e50 <col:29, col:30> 'char' <LValueToRValue>
|         | |     `-UnaryOperator 0x14f943e38 <col:29, col:30> 'char' lvalue prefix '*' cannot overflow
|         | |       `-ImplicitCastExpr 0x14f943e20 <col:30> 'char *' <LValueToRValue>
|         | |         `-DeclRefExpr 0x14f943e00 <col:30> 'char *' lvalue Var 0x14f942658 'k' 'char *'
|         | |-UnaryOperator 0x14f943ec0 <col:33, col:34> 'char *' postfix '++'
|         | | `-DeclRefExpr 0x14f943ea0 <col:33> 'char *' lvalue Var 0x14f942658 'k' 'char *'
|         | `-CompoundStmt 0x14f945c30 <col:38, line:27:2>
|         |   `-IfStmt 0x14f945c00 <line:22:6, line:26:6> has_else
|         |     |-BinaryOperator 0x14f943f70 <line:22:10, col:18> 'int' '=='
|         |     | |-CharacterLiteral 0x14f943ed8 <col:10> 'int' 45
|         |     | `-ImplicitCastExpr 0x14f943f58 <col:17, col:18> 'int' <IntegralCast>
|         |     |   `-ImplicitCastExpr 0x14f943f40 <col:17, col:18> 'char' <LValueToRValue>
|         |     |     `-UnaryOperator 0x14f943f28 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|         |     |       `-ImplicitCastExpr 0x14f943f10 <col:18> 'char *' <LValueToRValue>
|         |     |         `-DeclRefExpr 0x14f943ef0 <col:18> 'char *' lvalue Var 0x14f942658 'k' 'char *'
|         |     |-CompoundStmt 0x14f945838 <col:21, line:24:6>
|         |     | `-BinaryOperator 0x14f945818 <line:23:3, col:8> 'char' '='
|         |     |   |-UnaryOperator 0x14f943fc8 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|         |     |   | `-ImplicitCastExpr 0x14f943fb0 <col:4> 'char *' <LValueToRValue>
|         |     |   |   `-DeclRefExpr 0x14f943f90 <col:4> 'char *' lvalue Var 0x14f942658 'k' 'char *'
|         |     |   `-ImplicitCastExpr 0x14f945800 <col:8> 'char' <IntegralCast>
|         |     |     `-CharacterLiteral 0x14f943fe0 <col:8> 'int' 95
|         |     `-CompoundStmt 0x14f945be8 <line:24:13, line:26:6>
|         |       `-BinaryOperator 0x14f945bc8 <line:25:3, col:18> 'char' '='
|         |         |-UnaryOperator 0x14f945888 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|         |         | `-ImplicitCastExpr 0x14f945870 <col:4> 'char *' <LValueToRValue>
|         |         |   `-DeclRefExpr 0x14f945850 <col:4> 'char *' lvalue Var 0x14f942658 'k' 'char *'
|         |         `-ImplicitCastExpr 0x14f945bb0 <col:8, col:18> 'char' <IntegralCast>
|         |           `-CallExpr 0x14f945b58 <col:8, col:18> 'int'
|         |             |-ImplicitCastExpr 0x14f945b40 <col:8> 'int (*)(int)' <FunctionToPointerDecay>
|         |             | `-DeclRefExpr 0x14f945a98 <col:8> 'int (int)' Function 0x14f9458d8 'toupper' 'int (int)'
|         |             `-ImplicitCastExpr 0x14f945b98 <col:16, col:17> 'int' <IntegralCast>
|         |               `-ImplicitCastExpr 0x14f945b80 <col:16, col:17> 'char' <LValueToRValue>
|         |                 `-UnaryOperator 0x14f945af0 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
|         |                   `-ImplicitCastExpr 0x14f945ad8 <col:17> 'char *' <LValueToRValue>
|         |                     `-DeclRefExpr 0x14f945ab8 <col:17> 'char *' lvalue Var 0x14f942658 'k' 'char *'
|         `-CallExpr 0x14f945df8 <line:28:2, col:51> '<dependent type>' contains-errors
|           |-DeclRefExpr 0x14f945c80 <col:2> 'int ()' Function 0x14f941d88 'rb_hash_aset' 'int ()'
|           |-RecoveryExpr 0x14f945ca0 <col:15> '<dependent type>' contains-errors lvalue
|           |-CallExpr 0x14f945d90 <col:19, col:44> 'int'
|           | |-ImplicitCastExpr 0x14f945d78 <col:19> 'int (*)()' <FunctionToPointerDecay>
|           | | `-DeclRefExpr 0x14f945cc0 <col:19> 'int ()' Function 0x14f941ec0 'rb_str_new' 'int ()'
|           | |-ImplicitCastExpr 0x14f945dc0 <col:30> 'char *' <ArrayToPointerDecay>
|           | | `-DeclRefExpr 0x14f945ce0 <col:30> 'char[1024]' lvalue Var 0x14f9425c0 'hkey' 'char[1024]'
|           | `-BinaryOperator 0x14f945d58 <col:36, col:43> 'int' '+'
|           |   |-ImplicitCastExpr 0x14f945d40 <col:36> 'int' <LValueToRValue>
|           |   | `-DeclRefExpr 0x14f945d00 <col:36> 'int' lvalue ParmVar 0x14f9281f0 'klen' 'int'
|           |   `-IntegerLiteral 0x14f945d20 <col:43> 'int' 5
|           `-RecoveryExpr 0x14f945dd8 <col:47> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x14f9419e0 <line:2:50> col:50 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x14f941ae0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14f941b48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14f941bb0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14f941a88 <<invalid sloc>> Implicit 958
|-FunctionDecl 0x14f9430d0 <line:11:2> col:2 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x14f9431d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x14f943238 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14f943178 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x14f943818 <line:16:2> col:2 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x14f943918 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x14f943980 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14f9439e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14f9438c0 <<invalid sloc>> Implicit 886
`-FunctionDecl 0x14f9458d8 <line:25:8> col:8 implicit used toupper 'int (int)' extern
  |-ParmVarDecl 0x14f9459d8 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x14f945980 <<invalid sloc>> Implicit 933
  |-NoThrowAttr 0x14f945a48 <col:8> Implicit
  `-PureAttr 0x14f945a70 <col:8> Implicit
