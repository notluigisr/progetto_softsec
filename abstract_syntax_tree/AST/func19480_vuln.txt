TranslationUnitDecl 0x14e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e055bd0 '__int128'
|-TypedefDecl 0x14e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e055bf0 'unsigned __int128'
|-TypedefDecl 0x14e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14e056580 '__NSConstantString_tag'
|-TypedefDecl 0x14e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e055d90 '__SVInt8_t'
|-TypedefDecl 0x14e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e055db0 '__SVInt16_t'
|-TypedefDecl 0x14e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e055dd0 '__SVInt32_t'
|-TypedefDecl 0x14e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e055df0 '__SVInt64_t'
|-TypedefDecl 0x14e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e055e10 '__SVUint8_t'
|-TypedefDecl 0x14e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e055e30 '__SVUint16_t'
|-TypedefDecl 0x14e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e055e50 '__SVUint32_t'
|-TypedefDecl 0x14e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e055e70 '__SVUint64_t'
|-TypedefDecl 0x14e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e055e90 '__SVFloat16_t'
|-TypedefDecl 0x14e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e056390 '__SVBool_t'
|-TypedefDecl 0x14e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e0563f0 '__SVCount_t'
|-TypedefDecl 0x14e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e80dbb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-TypedefDecl 0x14e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e80dbb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
`-FunctionDecl 0x14e80de38 <dataset_diviso_filec/func19480_vuln.c:1:1, line:71:1> line:1:12 convert_case_filter 'int (int, void *)' static
  |-ParmVarDecl 0x14e80dcd8 <col:32, col:36> col:36 used c 'int'
  |-ParmVarDecl 0x14e80dd58 <col:39, col:45> col:45 used void_data 'void *'
  `-CompoundStmt 0x14e82b3a8 <line:2:1, line:71:1>
    |-DeclStmt 0x14e80e210 <line:3:2, col:73>
    | |-RecordDecl 0x14e80df38 <col:2, col:9> col:9 struct convert_case_data
    | `-VarDecl 0x14e80e0a8 <col:2, col:64> col:28 used data 'struct convert_case_data *' cinit
    |   `-CStyleCastExpr 0x14e80e1d0 <col:35, col:64> 'struct convert_case_data *' <BitCast>
    |     `-ImplicitCastExpr 0x14e80e1b8 <col:64> 'void *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x14e80e110 <col:64> 'void *' lvalue ParmVar 0x14e80dd58 'void_data' 'void *'
    |-DeclStmt 0x14e80e340 <line:4:2, col:17>
    | `-VarDecl 0x14e80e2d8 <col:2, col:16> col:11 used out 'unsigned int[3]'
    |-DeclStmt 0x14e827680 <line:5:2, col:17>
    | |-VarDecl 0x14e80e370 <col:2, col:11> col:11 used len 'unsigned int'
    | `-VarDecl 0x14e827600 <col:2, col:16> col:16 used i 'unsigned int'
    |-IfStmt 0x14e827ef0 <line:8:2, line:11:2>
    | |-CallExpr 0x14e8278a8 <line:8:6, col:29> 'int'
    | | |-ImplicitCastExpr 0x14e827890 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x14e8277c0 <col:6> 'int ()' Function 0x14e827708 'UNEXPECTED' 'int ()'
    | | `-BinaryOperator 0x14e827838 <col:17, col:21> 'int' '>'
    | |   |-ImplicitCastExpr 0x14e827820 <col:17> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14e8277e0 <col:17> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    | |   `-IntegerLiteral 0x14e827800 <col:21> 'int' 16777215
    | `-CompoundStmt 0x14e827ed0 <col:32, line:11:2>
    |   |-CallExpr 0x14e827e70 <line:9:3, col:61> '<dependent type>' contains-errors
    |   | |-ParenExpr 0x14e827dd0 <col:3, col:39> '<dependent type>' contains-errors
    |   | | `-UnaryOperator 0x14e827db8 <col:4, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x14e827da0 <col:5, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-CXXDependentScopeMemberExpr 0x14e827d58 <col:5, col:24> '<dependent type>' contains-errors lvalue ->filter_function
    |   | |       `-RecoveryExpr 0x14e827d30 <col:5, col:11> '<dependent type>' contains-errors lvalue
    |   | |         `-DeclRefExpr 0x14e8278d0 <col:5> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   | |-DeclRefExpr 0x14e827df0 <col:41> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   | `-RecoveryExpr 0x14e827e48 <col:44, col:50> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14e827e10 <col:44> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   `-ReturnStmt 0x14e827ec0 <line:10:3, col:10>
    |     `-IntegerLiteral 0x14e827ea0 <col:10> 'int' 0
    |-SwitchStmt 0x14e827f88 <line:13:2, line:65:2>
    | |-ImplicitCastExpr 0x14e827f70 <line:13:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x14e827f48 <col:10, col:16> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14e827f10 <col:10> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    | `-CompoundStmt 0x14e82af38 <col:27, line:65:2>
    |   |-BinaryOperator 0x14e828228 <line:15:4, col:60> 'unsigned int' contains-errors '='
    |   | |-ArraySubscriptExpr 0x14e828058 <col:4, col:9> 'unsigned int' lvalue
    |   | | |-ImplicitCastExpr 0x14e828040 <col:4> 'unsigned int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x14e827fc8 <col:4> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   | | `-IntegerLiteral 0x14e827fe8 <col:8> 'int' 0
    |   | `-CallExpr 0x14e8281f8 <col:13, col:60> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14e828158 <col:13> 'int ()' Function 0x14e8280a0 'php_unicode_toupper_simple' 'int ()'
    |   |   |-DeclRefExpr 0x14e828178 <col:40> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   |   `-RecoveryExpr 0x14e8281d0 <col:43, col:49> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14e828198 <col:43> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   |-BinaryOperator 0x14e8282a0 <line:16:4, col:10> 'unsigned int' '='
    |   | |-DeclRefExpr 0x14e828248 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | `-ImplicitCastExpr 0x14e828288 <col:10> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x14e828268 <col:10> 'int' 1
    |   |-BreakStmt 0x14e8282c0 <line:17:4>
    |   |-BinaryOperator 0x14e8284d8 <line:20:4, col:60> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x14e8282e0 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | `-CallExpr 0x14e8284a0 <col:10, col:60> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14e8283e0 <col:10> 'int ()' Function 0x14e828328 'php_unicode_toupper_full' 'int ()'
    |   |   |-DeclRefExpr 0x14e828400 <col:35> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   |   |-RecoveryExpr 0x14e828458 <col:38, col:44> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x14e828420 <col:38> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   |   `-DeclRefExpr 0x14e828480 <col:57> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   |-BreakStmt 0x14e8284f8 <line:21:4>
    |   |-BinaryOperator 0x14e122f88 <line:24:4, col:60> 'unsigned int' contains-errors '='
    |   | |-ArraySubscriptExpr 0x14e828570 <col:4, col:9> 'unsigned int' lvalue
    |   | | |-ImplicitCastExpr 0x14e828558 <col:4> 'unsigned int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x14e828518 <col:4> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   | | `-IntegerLiteral 0x14e828538 <col:8> 'int' 0
    |   | `-CallExpr 0x14e122f58 <col:13, col:60> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14e122eb8 <col:13> 'int ()' Function 0x14e122e00 'php_unicode_tolower_simple' 'int ()'
    |   |   |-DeclRefExpr 0x14e122ed8 <col:40> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   |   `-RecoveryExpr 0x14e122f30 <col:43, col:49> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14e122ef8 <col:43> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   |-BinaryOperator 0x14e123000 <line:25:4, col:10> 'unsigned int' '='
    |   | |-DeclRefExpr 0x14e122fa8 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | `-ImplicitCastExpr 0x14e122fe8 <col:10> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x14e122fc8 <col:10> 'int' 1
    |   |-BreakStmt 0x14e123020 <line:26:4>
    |   |-BinaryOperator 0x14e123238 <line:29:4, col:60> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x14e123040 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | `-CallExpr 0x14e123200 <col:10, col:60> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14e123140 <col:10> 'int ()' Function 0x14e123088 'php_unicode_tolower_full' 'int ()'
    |   |   |-DeclRefExpr 0x14e123160 <col:35> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   |   |-RecoveryExpr 0x14e1231b8 <col:38, col:44> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x14e123180 <col:38> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   |   `-DeclRefExpr 0x14e1231e0 <col:57> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   |-BreakStmt 0x14e123258 <line:30:4>
    |   |-BinaryOperator 0x14e123470 <line:33:4, col:59> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x14e123278 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | `-CallExpr 0x14e123438 <col:10, col:59> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14e123378 <col:10> 'int ()' Function 0x14e1232c0 'php_unicode_tofold_full' 'int ()'
    |   |   |-DeclRefExpr 0x14e123398 <col:34> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   |   |-RecoveryExpr 0x14e1233f0 <col:37, col:43> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x14e1233b8 <col:37> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   |   `-DeclRefExpr 0x14e123418 <col:56> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   |-BreakStmt 0x14e123490 <line:34:4>
    |   |-BinaryOperator 0x14e1236d8 <line:37:4, col:59> 'unsigned int' contains-errors '='
    |   | |-ArraySubscriptExpr 0x14e123508 <col:4, col:9> 'unsigned int' lvalue
    |   | | |-ImplicitCastExpr 0x14e1234f0 <col:4> 'unsigned int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x14e1234b0 <col:4> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   | | `-IntegerLiteral 0x14e1234d0 <col:8> 'int' 0
    |   | `-CallExpr 0x14e1236a8 <col:13, col:59> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14e123608 <col:13> 'int ()' Function 0x14e123550 'php_unicode_tofold_simple' 'int ()'
    |   |   |-DeclRefExpr 0x14e123628 <col:39> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   |   `-RecoveryExpr 0x14e123680 <col:42, col:48> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14e123648 <col:42> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   |-BinaryOperator 0x14e123750 <line:38:4, col:10> 'unsigned int' '='
    |   | |-DeclRefExpr 0x14e1236f8 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | `-ImplicitCastExpr 0x14e123738 <col:10> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x14e123718 <col:10> 'int' 1
    |   |-BreakStmt 0x14e123770 <line:39:4>
    |   |-CompoundStmt 0x14e82add8 <line:43:3, line:63:3>
    |   | |-IfStmt 0x14e82a9e0 <line:44:4, line:58:4> has_else
    |   | | |-RecoveryExpr 0x14e1237b0 <line:44:8, col:14> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x14e123778 <col:8> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   | | |-CompoundStmt 0x14e123bd8 <col:26, line:51:4>
    |   | | | `-IfStmt 0x14e123ba8 <line:45:5, line:50:5> has_else
    |   | | |   |-RecoveryExpr 0x14e123838 <line:45:9, col:28> '_Bool' contains-errors
    |   | | |   |-CompoundStmt 0x14e123a38 <col:59, line:48:5>
    |   | | |   | |-BinaryOperator 0x14e1239a0 <line:46:6, col:62> 'unsigned int' contains-errors '='
    |   | | |   | | |-ArraySubscriptExpr 0x14e1238b0 <col:6, col:11> 'unsigned int' lvalue
    |   | | |   | | | |-ImplicitCastExpr 0x14e123898 <col:6> 'unsigned int *' <ArrayToPointerDecay>
    |   | | |   | | | | `-DeclRefExpr 0x14e123858 <col:6> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   | | |   | | | `-IntegerLiteral 0x14e123878 <col:10> 'int' 0
    |   | | |   | | `-CallExpr 0x14e123970 <col:15, col:62> '<dependent type>' contains-errors
    |   | | |   | |   |-DeclRefExpr 0x14e1238d0 <col:15> 'int ()' Function 0x14e122e00 'php_unicode_tolower_simple' 'int ()'
    |   | | |   | |   |-DeclRefExpr 0x14e1238f0 <col:42> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   | | |   | |   `-RecoveryExpr 0x14e123948 <col:45, col:51> '<dependent type>' contains-errors lvalue
    |   | | |   | |     `-DeclRefExpr 0x14e123910 <col:45> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   | | |   | `-BinaryOperator 0x14e123a18 <line:47:6, col:12> 'unsigned int' '='
    |   | | |   |   |-DeclRefExpr 0x14e1239c0 <col:6> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | | |   |   `-ImplicitCastExpr 0x14e123a00 <col:12> 'unsigned int' <IntegralCast>
    |   | | |   |     `-IntegerLiteral 0x14e1239e0 <col:12> 'int' 1
    |   | | |   `-CompoundStmt 0x14e123b90 <line:48:12, line:50:5>
    |   | | |     `-BinaryOperator 0x14e123b70 <line:49:6, col:62> 'unsigned int' contains-errors '='
    |   | | |       |-DeclRefExpr 0x14e123a58 <col:6> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | | |       `-CallExpr 0x14e123b38 <col:12, col:62> '<dependent type>' contains-errors
    |   | | |         |-DeclRefExpr 0x14e123a78 <col:12> 'int ()' Function 0x14e123088 'php_unicode_tolower_full' 'int ()'
    |   | | |         |-DeclRefExpr 0x14e123a98 <col:37> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   | | |         |-RecoveryExpr 0x14e123af0 <col:40, col:46> '<dependent type>' contains-errors lvalue
    |   | | |         | `-DeclRefExpr 0x14e123ab8 <col:40> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   | | |         `-DeclRefExpr 0x14e123b18 <col:59> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   | | `-CompoundStmt 0x14e82a9c8 <line:51:11, line:58:4>
    |   | |   `-IfStmt 0x14e82a998 <line:52:5, line:57:5> has_else
    |   | |     |-RecoveryExpr 0x14e123c50 <line:52:9, col:28> '_Bool' contains-errors
    |   | |     |-CompoundStmt 0x14e82a748 <col:59, line:55:5>
    |   | |     | |-BinaryOperator 0x14e82a6b0 <line:53:6, col:62> 'unsigned int' contains-errors '='
    |   | |     | | |-ArraySubscriptExpr 0x14e123cc8 <col:6, col:11> 'unsigned int' lvalue
    |   | |     | | | |-ImplicitCastExpr 0x14e123cb0 <col:6> 'unsigned int *' <ArrayToPointerDecay>
    |   | |     | | | | `-DeclRefExpr 0x14e123c70 <col:6> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   | |     | | | `-IntegerLiteral 0x14e123c90 <col:10> 'int' 0
    |   | |     | | `-CallExpr 0x14e82a680 <col:15, col:62> '<dependent type>' contains-errors
    |   | |     | |   |-DeclRefExpr 0x14e123dc8 <col:15> 'int ()' Function 0x14e123d10 'php_unicode_totitle_simple' 'int ()'
    |   | |     | |   |-DeclRefExpr 0x14e82a600 <col:42> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   | |     | |   `-RecoveryExpr 0x14e82a658 <col:45, col:51> '<dependent type>' contains-errors lvalue
    |   | |     | |     `-DeclRefExpr 0x14e82a620 <col:45> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   | |     | `-BinaryOperator 0x14e82a728 <line:54:6, col:12> 'unsigned int' '='
    |   | |     |   |-DeclRefExpr 0x14e82a6d0 <col:6> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | |     |   `-ImplicitCastExpr 0x14e82a710 <col:12> 'unsigned int' <IntegralCast>
    |   | |     |     `-IntegerLiteral 0x14e82a6f0 <col:12> 'int' 1
    |   | |     `-CompoundStmt 0x14e82a980 <line:55:12, line:57:5>
    |   | |       `-BinaryOperator 0x14e82a960 <line:56:6, col:62> 'unsigned int' contains-errors '='
    |   | |         |-DeclRefExpr 0x14e82a768 <col:6> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    |   | |         `-CallExpr 0x14e82a928 <col:12, col:62> '<dependent type>' contains-errors
    |   | |           |-DeclRefExpr 0x14e82a868 <col:12> 'int ()' Function 0x14e82a7b0 'php_unicode_totitle_full' 'int ()'
    |   | |           |-DeclRefExpr 0x14e82a888 <col:37> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   | |           |-RecoveryExpr 0x14e82a8e0 <col:40, col:46> '<dependent type>' contains-errors lvalue
    |   | |           | `-DeclRefExpr 0x14e82a8a8 <col:40> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   | |           `-DeclRefExpr 0x14e82a908 <col:59> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |   | |-IfStmt 0x14e82adb0 <line:59:4, line:61:4>
    |   | | |-UnaryOperator 0x14e82ab88 <line:59:8, col:40> 'int' prefix '!' cannot overflow
    |   | | | `-CallExpr 0x14e82ab48 <col:9, col:40> 'int'
    |   | | |   |-ImplicitCastExpr 0x14e82ab30 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | |   | `-DeclRefExpr 0x14e82aaf0 <col:9> 'int ()' Function 0x14e82aa38 'php_unicode_is_case_ignorable' 'int ()'
    |   | | |   `-ImplicitCastExpr 0x14e82ab70 <col:39> 'int' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x14e82ab10 <col:39> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   | | `-CompoundStmt 0x14e82ad98 <col:43, line:61:4>
    |   | |   `-BinaryOperator 0x14e82ad78 <line:60:5, col:46> '<dependent type>' contains-errors '='
    |   | |     |-RecoveryExpr 0x14e82abd8 <col:5, col:11> '<dependent type>' contains-errors lvalue
    |   | |     | `-DeclRefExpr 0x14e82aba0 <col:5> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |   | |     `-CallExpr 0x14e82ad38 <col:24, col:46> 'int'
    |   | |       |-ImplicitCastExpr 0x14e82ad20 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |   | |       | `-DeclRefExpr 0x14e82ace0 <col:24> 'int ()' Function 0x14e82ac28 'php_unicode_is_cased' 'int ()'
    |   | |       `-ImplicitCastExpr 0x14e82ad60 <col:45> 'int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x14e82ad00 <col:45> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'
    |   | `-BreakStmt 0x14e82add0 <line:62:4>
    |   `-CallExpr 0x14e82af18 <line:64:3, col:29> 'int'
    |     `-ImplicitCastExpr 0x14e82af00 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x14e82aee0 <col:3> 'int ()' Function 0x14e82ae28 'EMPTY_SWITCH_DEFAULT_CASE' 'int ()'
    |-ForStmt 0x14e82b340 <line:67:2, line:69:2>
    | |-BinaryOperator 0x14e82b028 <line:67:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x14e82afd0 <col:7> 'unsigned int' lvalue Var 0x14e827600 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x14e82b010 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14e82aff0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14e82b0b8 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x14e82b088 <col:14> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e82b048 <col:14> 'unsigned int' lvalue Var 0x14e827600 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x14e82b0a0 <col:18> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14e82b068 <col:18> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'
    | |-UnaryOperator 0x14e82b0f8 <col:23, col:24> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x14e82b0d8 <col:23> 'unsigned int' lvalue Var 0x14e827600 'i' 'unsigned int'
    | `-CompoundStmt 0x14e82b328 <col:28, line:69:2>
    |   `-CallExpr 0x14e82b2f8 <line:68:3, col:66> '<dependent type>' contains-errors
    |     |-ParenExpr 0x14e82b1e8 <col:3, col:39> '<dependent type>' contains-errors
    |     | `-UnaryOperator 0x14e82b1d0 <col:4, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     |   `-ImplicitCastExpr 0x14e82b1b8 <col:5, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |     |     `-CXXDependentScopeMemberExpr 0x14e82b170 <col:5, col:24> '<dependent type>' contains-errors lvalue ->filter_function
    |     |       `-RecoveryExpr 0x14e82b148 <col:5, col:11> '<dependent type>' contains-errors lvalue
    |     |         `-DeclRefExpr 0x14e82b110 <col:5> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    |     |-ArraySubscriptExpr 0x14e82b278 <col:41, col:46> 'unsigned int' lvalue
    |     | |-ImplicitCastExpr 0x14e82b248 <col:41> 'unsigned int *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x14e82b208 <col:41> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'
    |     | `-ImplicitCastExpr 0x14e82b260 <col:45> 'unsigned int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x14e82b228 <col:45> 'unsigned int' lvalue Var 0x14e827600 'i' 'unsigned int'
    |     `-RecoveryExpr 0x14e82b2d0 <col:49, col:55> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14e82b298 <col:49> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'
    `-ReturnStmt 0x14e82b398 <line:70:2, col:9>
      `-IntegerLiteral 0x14e82b378 <col:9> 'int' 0
