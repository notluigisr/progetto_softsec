TranslationUnitDecl 0x135855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1358564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135855bd0 '__int128'
|-TypedefDecl 0x135856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135855bf0 'unsigned __int128'
|-TypedefDecl 0x13600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13600bc00 'struct __NSConstantString_tag'
|   `-Record 0x135856580 '__NSConstantString_tag'
|-TypedefDecl 0x13600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135855d90 '__SVInt8_t'
|-TypedefDecl 0x13600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135855db0 '__SVInt16_t'
|-TypedefDecl 0x13600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135855dd0 '__SVInt32_t'
|-TypedefDecl 0x13600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135855df0 '__SVInt64_t'
|-TypedefDecl 0x13600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135855e10 '__SVUint8_t'
|-TypedefDecl 0x13600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135855e30 '__SVUint16_t'
|-TypedefDecl 0x13600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135855e50 '__SVUint32_t'
|-TypedefDecl 0x13600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135855e70 '__SVUint64_t'
|-TypedefDecl 0x13600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135855e90 '__SVFloat16_t'
|-TypedefDecl 0x13600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1358560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1358560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1358560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1358561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1358561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1358561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1358562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1358562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1358562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135856390 '__SVBool_t'
|-TypedefDecl 0x13600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1358563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1358563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1358563f0 '__SVCount_t'
|-TypedefDecl 0x13600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13600dbb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-TypedefDecl 0x13600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13600dbb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-FunctionDecl 0x13600de38 <dataset_diviso_filec/func13001_vuln.c:1:1, line:27:1> line:1:14 ask_new_shell 'char *(char *, char *)' static
| |-ParmVarDecl 0x13600dcd8 <col:28, col:34> col:34 used question 'char *'
| |-ParmVarDecl 0x13600dd58 <col:44, col:50> col:50 used oldshell 'char *'
| `-CompoundStmt 0x13680b2d8 <line:2:1, line:27:1>
|   |-DeclStmt 0x13600dfb8 <line:3:2, col:9>
|   | `-VarDecl 0x13600df50 <col:2, col:6> col:6 used len 'int'
|   |-DeclStmt 0x13600e0a0 <line:4:2, col:18>
|   | `-VarDecl 0x13600dfe8 <col:2, col:14> col:8 used ans 'char *' cinit
|   |   `-RecoveryExpr 0x13600e080 <col:14> '<dependent type>' contains-errors lvalue
|   |-RecoveryExpr 0x13600e198 <line:8:2, col:17> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x13600e178 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x13600e158 <col:9> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x13600e0f0 <col:17> 'int' 0
|   |-IfStmt 0x13600e2d0 <line:10:2, line:11:14>
|   | |-UnaryOperator 0x13600e200 <line:10:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13600e1e8 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13600e1c8 <col:7> 'char *' lvalue ParmVar 0x13600dd58 'oldshell' 'char *'
|   | `-BinaryOperator 0x13600e2b0 <line:11:3, col:14> 'char *' '='
|   |   |-DeclRefExpr 0x13600e218 <col:3> 'char *' lvalue ParmVar 0x13600dd58 'oldshell' 'char *'
|   |   `-ImplicitCastExpr 0x13600e298 <col:14> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13600e280 <col:14> 'char[1]' lvalue ""
|   |-CallExpr 0x135923068 <line:12:2, col:34> 'int'
|   | |-ImplicitCastExpr 0x135923050 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x135922f38 <col:2> 'int (const char *, ...)' Function 0x135922d90 'printf' 'int (const char *, ...)'
|   | |-ImplicitCastExpr 0x1359230b8 <col:9> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1359230a0 <col:9> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x135922fa0 <col:9> 'char[4]' lvalue "STR"
|   | |-ImplicitCastExpr 0x1359230d0 <col:16> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x135922fc0 <col:16> 'char *' lvalue ParmVar 0x13600dcd8 'question' 'char *'
|   | `-ImplicitCastExpr 0x1359230e8 <col:26> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x135922fe0 <col:26> 'char *' lvalue ParmVar 0x13600dd58 'oldshell' 'char *'
|   |-CallExpr 0x135923298 <line:16:2, col:13> 'int'
|   | |-ImplicitCastExpr 0x135923280 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x135923210 <col:2> 'int ()' Function 0x135923158 'putchar' 'int ()'
|   | `-CharacterLiteral 0x135923230 <col:10> 'int' 32
|   |-CallExpr 0x135923420 <line:17:2, col:15> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1359233a0 <col:2> 'int ()' Function 0x1359232e8 'fflush' 'int ()'
|   | `-RecoveryExpr 0x135923400 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x135923770 <line:18:2, line:20:10>
|   | |-BinaryOperator 0x135923708 <line:18:6, col:37> 'int' contains-errors '<'
|   | | |-CallExpr 0x1359236d0 <col:6, col:33> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x135923528 <col:6> 'int ()' Function 0x135923470 'getline' 'int ()'
|   | | | |-UnaryOperator 0x1359235a0 <col:14, col:15> 'char **' contains-errors prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x135923548 <col:15> 'char *' contains-errors lvalue Var 0x13600dfe8 'ans' 'char *'
|   | | | |-UnaryOperator 0x135923698 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x135923678 <col:21> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x1359236b0 <col:28> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x135923638 <col:37> 'int' 0
|   | `-ReturnStmt 0x135923760 <line:20:3, col:10>
|   |   `-RecoveryExpr 0x135923740 <col:10> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x135923950 <line:22:2, col:40> 'int' contains-errors
|   | |-ImplicitCastExpr 0x135923938 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x135923870 <col:2> 'int ()' Function 0x1359237b8 'ltrim_whitespace' 'int ()'
|   | `-CStyleCastExpr 0x135923910 <col:19, col:37> 'unsigned char *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x1359238f8 <col:37> 'char *' contains-errors <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x135923890 <col:37> 'char *' contains-errors lvalue Var 0x13600dfe8 'ans' 'char *'
|   |-BinaryOperator 0x13680b190 <line:23:2, col:46> 'int' contains-errors '='
|   | |-DeclRefExpr 0x135923978 <col:2> 'int' lvalue Var 0x13600df50 'len' 'int'
|   | `-CallExpr 0x13680b168 <col:8, col:46> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x13680b150 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13680b0b8 <col:8> 'int ()' Function 0x13680b000 'rtrim_whitespace' 'int ()'
|   |   `-CStyleCastExpr 0x13680b128 <col:25, col:43> 'unsigned char *' contains-errors <BitCast>
|   |     `-ImplicitCastExpr 0x13680b110 <col:43> 'char *' contains-errors <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x13680b0d8 <col:43> 'char *' contains-errors lvalue Var 0x13600dfe8 'ans' 'char *'
|   |-IfStmt 0x13680b270 <line:24:2, line:25:10>
|   | |-BinaryOperator 0x13680b208 <line:24:6, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x13680b1f0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13680b1b0 <col:6> 'int' lvalue Var 0x13600df50 'len' 'int'
|   | | `-IntegerLiteral 0x13680b1d0 <col:13> 'int' 0
|   | `-ReturnStmt 0x13680b260 <line:25:3, col:10>
|   |   `-RecoveryExpr 0x13680b240 <col:10> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x13680b2c8 <line:26:2, col:9>
|     `-ImplicitCastExpr 0x13680b2b0 <col:9> 'char *' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x13680b290 <col:9> 'char *' contains-errors lvalue Var 0x13600dfe8 'ans' 'char *'
`-FunctionDecl 0x135922d90 <line:12:2> col:2 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x135922e90 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x135922e38 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x135922f00 <col:2> Implicit printf 1 2
