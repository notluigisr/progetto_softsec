TranslationUnitDecl 0x12e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e055bd0 '__int128'
|-TypedefDecl 0x12e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e055bf0 'unsigned __int128'
|-TypedefDecl 0x12e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12e056580 '__NSConstantString_tag'
|-TypedefDecl 0x12e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e055d90 '__SVInt8_t'
|-TypedefDecl 0x12e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e055db0 '__SVInt16_t'
|-TypedefDecl 0x12e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e055dd0 '__SVInt32_t'
|-TypedefDecl 0x12e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e055df0 '__SVInt64_t'
|-TypedefDecl 0x12e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e055e10 '__SVUint8_t'
|-TypedefDecl 0x12e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e055e30 '__SVUint16_t'
|-TypedefDecl 0x12e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e055e50 '__SVUint32_t'
|-TypedefDecl 0x12e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e055e70 '__SVUint64_t'
|-TypedefDecl 0x12e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e055e90 '__SVFloat16_t'
|-TypedefDecl 0x12e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e056390 '__SVBool_t'
|-TypedefDecl 0x12e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0563f0 '__SVCount_t'
|-TypedefDecl 0x12e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e80dbb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-TypedefDecl 0x12e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e80dbb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-FunctionDecl 0x12e80de38 <dataset_diviso_filec/func20767_vuln.c:1:1, line:79:1> line:1:5 options_cmdline 'int (char *, char *)'
| |-ParmVarDecl 0x12e80dcd8 <col:21, col:27> col:27 used arg1 'char *'
| |-ParmVarDecl 0x12e80dd58 <col:33, col:39> col:39 used arg2 'char *'
| `-CompoundStmt 0x12e82bf40 <col:45, line:79:1>
|   |-DeclStmt 0x12e80dfb8 <line:2:5, col:15>
|   | `-VarDecl 0x12e80df50 <col:5, col:11> col:11 used name 'char *'
|   |-IfStmt 0x12e82bb50 <line:8:5, line:53:5> has_else
|   | |-UnaryOperator 0x12e80e020 <line:8:8, col:9> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12e80e008 <col:9> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12e80dfe8 <col:9> 'char *' lvalue ParmVar 0x12e80dcd8 'arg1' 'char *'
|   | |-CompoundStmt 0x12e80e110 <col:15, line:20:5>
|   | | `-BinaryOperator 0x12e80e0d8 <line:9:9, line:18:13> 'char *' '='
|   | |   |-DeclRefExpr 0x12e80e038 <line:9:9> 'char *' lvalue Var 0x12e80df50 'name' 'char *'
|   | |   `-ImplicitCastExpr 0x12e80e0c0 <line:18:13> 'char *' <ArrayToPointerDecay>
|   | |     `-StringLiteral 0x12e80e0a0 <col:13> 'char[4]' lvalue "STR"
|   | `-IfStmt 0x12e82bb20 <line:20:12, line:53:5> has_else
|   |   |-UnaryOperator 0x12e8280e8 <line:20:15, col:38> 'int' prefix '!' cannot overflow
|   |   | `-CallExpr 0x12e828058 <col:16, col:38> 'int'
|   |   |   |-ImplicitCastExpr 0x12e828040 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12e827f80 <col:16> 'int (const char *, const char *)' Function 0x12e827da0 'strcasecmp' 'int (const char *, const char *)'
|   |   |   |-ImplicitCastExpr 0x12e8280a0 <col:27> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x12e828088 <col:27> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12e827fa0 <col:27> 'char *' lvalue ParmVar 0x12e80dcd8 'arg1' 'char *'
|   |   |   `-ImplicitCastExpr 0x12e8280d0 <col:33> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x12e8280b8 <col:33> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x12e827fc0 <col:33> 'char[4]' lvalue "STR"
|   |   |-CompoundStmt 0x12e828760 <col:41, line:25:5>
|   |   | |-CallExpr 0x12e828310 <line:21:9, col:55> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x12e828210 <col:9> 'int ()' Function 0x12e828158 'parse_global_option' 'int ()'
|   |   | | |-RecoveryExpr 0x12e8282b0 <col:29> '<dependent type>' contains-errors lvalue
|   |   | | |-RecoveryExpr 0x12e8282d0 <col:45> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x12e8282f0 <col:51> '<dependent type>' contains-errors lvalue
|   |   | |-CallExpr 0x12e828568 <line:22:9, col:62> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x12e828428 <col:9> 'int ()' Function 0x12e828370 'parse_service_option' 'int ()'
|   |   | | |-RecoveryExpr 0x12e8284e8 <col:30> '<dependent type>' contains-errors lvalue
|   |   | | |-RecoveryExpr 0x12e828508 <col:46> '<dependent type>' contains-errors lvalue
|   |   | | |-RecoveryExpr 0x12e828528 <col:52> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x12e828548 <col:58> '<dependent type>' contains-errors lvalue
|   |   | |-CallExpr 0x12e828708 <line:23:9, col:32> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x12e828688 <col:9> 'int ()' Function 0x12e8285d0 'log_flush' 'int ()'
|   |   | | `-RecoveryExpr 0x12e8286e8 <col:19> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x12e828750 <line:24:9, col:16>
|   |   |   `-IntegerLiteral 0x12e828730 <col:16> 'int' 2
|   |   `-IfStmt 0x12e82baf0 <line:25:12, line:53:5> has_else
|   |     |-UnaryOperator 0x12e8288c8 <line:25:15, col:38> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x12e828838 <col:16, col:38> 'int'
|   |     |   |-ImplicitCastExpr 0x12e828820 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x12e828790 <col:16> 'int (const char *, const char *)' Function 0x12e827da0 'strcasecmp' 'int (const char *, const char *)'
|   |     |   |-ImplicitCastExpr 0x12e828880 <col:27> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x12e828868 <col:27> 'char *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x12e8287b0 <col:27> 'char *' lvalue ParmVar 0x12e80dcd8 'arg1' 'char *'
|   |     |   `-ImplicitCastExpr 0x12e8288b0 <col:33> 'const char *' <NoOp>
|   |     |     `-ImplicitCastExpr 0x12e828898 <col:33> 'char *' <ArrayToPointerDecay>
|   |     |       `-StringLiteral 0x12e8287d0 <col:33> 'char[4]' lvalue "STR"
|   |     |-CompoundStmt 0x12e828a88 <col:41, line:30:5>
|   |     | |-CallExpr 0x12e8289e0 <line:26:9, col:59> '<dependent type>' contains-errors
|   |     | | |-DeclRefExpr 0x12e8288e0 <col:9> 'int ()' Function 0x12e828158 'parse_global_option' 'int ()'
|   |     | | |-RecoveryExpr 0x12e828980 <col:29> '<dependent type>' contains-errors lvalue
|   |     | | |-RecoveryExpr 0x12e8289a0 <col:49> '<dependent type>' contains-errors lvalue
|   |     | | `-RecoveryExpr 0x12e8289c0 <col:55> '<dependent type>' contains-errors lvalue
|   |     | `-ReturnStmt 0x12e828a78 <line:29:9, col:16>
|   |     |   `-IntegerLiteral 0x12e828a58 <col:16> 'int' 2
|   |     `-IfStmt 0x12e82bac0 <line:30:12, line:53:5> has_else
|   |       |-UnaryOperator 0x12e828be0 <line:30:15, col:38> 'int' prefix '!' cannot overflow
|   |       | `-CallExpr 0x12e828b50 <col:16, col:38> 'int'
|   |       |   |-ImplicitCastExpr 0x12e828b38 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x12e828aa8 <col:16> 'int (const char *, const char *)' Function 0x12e827da0 'strcasecmp' 'int (const char *, const char *)'
|   |       |   |-ImplicitCastExpr 0x12e828b98 <col:27> 'const char *' <NoOp>
|   |       |   | `-ImplicitCastExpr 0x12e828b80 <col:27> 'char *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x12e828ac8 <col:27> 'char *' lvalue ParmVar 0x12e80dcd8 'arg1' 'char *'
|   |       |   `-ImplicitCastExpr 0x12e828bc8 <col:33> 'const char *' <NoOp>
|   |       |     `-ImplicitCastExpr 0x12e828bb0 <col:33> 'char *' <ArrayToPointerDecay>
|   |       |       `-StringLiteral 0x12e828ae8 <col:33> 'char[4]' lvalue "STR"
|   |       |-CompoundStmt 0x12e82b1b8 <col:41, line:34:5>
|   |       | |-CallExpr 0x12e82b148 <line:31:9, col:30> 'int'
|   |       | | `-ImplicitCastExpr 0x12e82b130 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       | |   `-DeclRefExpr 0x12e82b0e0 <col:9> 'int ()' Function 0x12e82b028 'socket_options_print' 'int ()'
|   |       | `-ReturnStmt 0x12e82b1a8 <line:33:9, col:16>
|   |       |   `-IntegerLiteral 0x12e82b188 <col:16> 'int' 2
|   |       `-IfStmt 0x12e82ba90 <line:34:12, line:53:5> has_else
|   |         |-UnaryOperator 0x12e82b310 <line:34:15, col:38> 'int' prefix '!' cannot overflow
|   |         | `-CallExpr 0x12e82b280 <col:16, col:38> 'int'
|   |         |   |-ImplicitCastExpr 0x12e82b268 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |         |   | `-DeclRefExpr 0x12e82b1d8 <col:16> 'int (const char *, const char *)' Function 0x12e827da0 'strcasecmp' 'int (const char *, const char *)'
|   |         |   |-ImplicitCastExpr 0x12e82b2c8 <col:27> 'const char *' <NoOp>
|   |         |   | `-ImplicitCastExpr 0x12e82b2b0 <col:27> 'char *' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x12e82b1f8 <col:27> 'char *' lvalue ParmVar 0x12e80dcd8 'arg1' 'char *'
|   |         |   `-ImplicitCastExpr 0x12e82b2f8 <col:33> 'const char *' <NoOp>
|   |         |     `-ImplicitCastExpr 0x12e82b2e0 <col:33> 'char *' <ArrayToPointerDecay>
|   |         |       `-StringLiteral 0x12e82b218 <col:33> 'char[4]' lvalue "STR"
|   |         |-CompoundStmt 0x12e82b4b0 <col:41, line:38:5>
|   |         | |-CallExpr 0x12e82b440 <line:35:9, col:27> 'int'
|   |         | | `-ImplicitCastExpr 0x12e82b428 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |         | |   `-DeclRefExpr 0x12e82b408 <col:9> 'int ()' Function 0x12e82b350 'print_ssl_options' 'int ()'
|   |         | `-ReturnStmt 0x12e82b4a0 <line:37:9, col:16>
|   |         |   `-IntegerLiteral 0x12e82b480 <col:16> 'int' 2
|   |         `-IfStmt 0x12e82ba60 <line:40:5, line:53:5> has_else
|   |           |-UnaryOperator 0x12e82b608 <line:40:8, col:31> 'int' prefix '!' cannot overflow
|   |           | `-CallExpr 0x12e82b578 <col:9, col:31> 'int'
|   |           |   |-ImplicitCastExpr 0x12e82b560 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |           |   | `-DeclRefExpr 0x12e82b4d0 <col:9> 'int (const char *, const char *)' Function 0x12e827da0 'strcasecmp' 'int (const char *, const char *)'
|   |           |   |-ImplicitCastExpr 0x12e82b5c0 <col:20> 'const char *' <NoOp>
|   |           |   | `-ImplicitCastExpr 0x12e82b5a8 <col:20> 'char *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x12e82b4f0 <col:20> 'char *' lvalue ParmVar 0x12e80dcd8 'arg1' 'char *'
|   |           |   `-ImplicitCastExpr 0x12e82b5f0 <col:26> 'const char *' <NoOp>
|   |           |     `-ImplicitCastExpr 0x12e82b5d8 <col:26> 'char *' <ArrayToPointerDecay>
|   |           |       `-StringLiteral 0x12e82b510 <col:26> 'char[4]' lvalue "STR"
|   |           |-CompoundStmt 0x12e82b9b0 <col:34, line:48:5>
|   |           | |-IfStmt 0x12e82b918 <line:41:9, line:45:9>
|   |           | | |-UnaryOperator 0x12e82b658 <line:41:12, col:13> 'int' prefix '!' cannot overflow
|   |           | | | `-ImplicitCastExpr 0x12e82b640 <col:13> 'char *' <LValueToRValue>
|   |           | | |   `-DeclRefExpr 0x12e82b620 <col:13> 'char *' lvalue ParmVar 0x12e80dd58 'arg2' 'char *'
|   |           | | `-CompoundStmt 0x12e82b8f8 <col:19, line:45:9>
|   |           | |   |-CallExpr 0x12e82b8a8 <line:43:13, col:26> 'int'
|   |           | |   | `-ImplicitCastExpr 0x12e82b890 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |           | |   |   `-DeclRefExpr 0x12e82b870 <col:13> 'int ()' Function 0x12e82b7b8 'print_syntax' 'int ()'
|   |           | |   `-ReturnStmt 0x12e82b8e8 <line:44:13, col:20>
|   |           | |     `-IntegerLiteral 0x12e82b8c8 <col:20> 'int' 1
|   |           | `-BinaryOperator 0x12e82b990 <line:46:9, col:14> 'char *' '='
|   |           |   |-DeclRefExpr 0x12e82b938 <col:9> 'char *' lvalue Var 0x12e80df50 'name' 'char *'
|   |           |   `-ImplicitCastExpr 0x12e82b978 <col:14> 'char *' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x12e82b958 <col:14> 'char *' lvalue ParmVar 0x12e80dd58 'arg2' 'char *'
|   |           `-CompoundStmt 0x12e82ba48 <line:50:5, line:53:5>
|   |             `-BinaryOperator 0x12e82ba28 <line:51:9, col:14> 'char *' '='
|   |               |-DeclRefExpr 0x12e82b9d0 <col:9> 'char *' lvalue Var 0x12e80df50 'name' 'char *'
|   |               `-ImplicitCastExpr 0x12e82ba10 <col:14> 'char *' <LValueToRValue>
|   |                 `-DeclRefExpr 0x12e82b9f0 <col:14> 'char *' lvalue ParmVar 0x12e80dcd8 'arg1' 'char *'
|   `-IfStmt 0x12e82be10 <line:55:5, line:77:5> has_else
|     |-RecoveryExpr 0x12e82bb80 <line:55:8, col:14> '_Bool' contains-errors
|     |-CompoundStmt 0x12e82bd18 <col:25, line:74:5>
|     `-IfStmt 0x12e82bdf0 <col:12, line:77:5>
|       |-RecoveryExpr 0x12e82bd28 <line:74:15, col:21> '_Bool' contains-errors
|       `-CompoundStmt 0x12e82bde0 <col:30, line:77:5>
`-FunctionDecl 0x12e827da0 <line:20:16> col:16 implicit used strcasecmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x12e827ea0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12e827f08 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12e827e48 <<invalid sloc>> Implicit 957
