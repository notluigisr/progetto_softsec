TranslationUnitDecl 0x145855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1458564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145855bd0 '__int128'
|-TypedefDecl 0x145856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145855bf0 'unsigned __int128'
|-TypedefDecl 0x14600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14600bc00 'struct __NSConstantString_tag'
|   `-Record 0x145856580 '__NSConstantString_tag'
|-TypedefDecl 0x14600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145855d90 '__SVInt8_t'
|-TypedefDecl 0x14600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145855db0 '__SVInt16_t'
|-TypedefDecl 0x14600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145855dd0 '__SVInt32_t'
|-TypedefDecl 0x14600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145855df0 '__SVInt64_t'
|-TypedefDecl 0x14600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145855e10 '__SVUint8_t'
|-TypedefDecl 0x14600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145855e30 '__SVUint16_t'
|-TypedefDecl 0x14600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145855e50 '__SVUint32_t'
|-TypedefDecl 0x14600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145855e70 '__SVUint64_t'
|-TypedefDecl 0x14600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145855e90 '__SVFloat16_t'
|-TypedefDecl 0x14600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1458560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1458560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1458560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1458561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1458561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1458561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1458562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1458562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1458562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145856390 '__SVBool_t'
|-TypedefDecl 0x14600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1458563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1458563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1458563f0 '__SVCount_t'
|-TypedefDecl 0x14600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-TypedefDecl 0x14600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-FunctionDecl 0x146026818 <dataset_diviso_filec/func18001_vuln.c:1:1, line:59:1> line:1:12 do_i2c_crc 'int (struct cmd_tbl *, int, int, char *const *)' static
| |-ParmVarDecl 0x14600e248 <col:23, col:39> col:39 cmdtp 'struct cmd_tbl *'
| |-ParmVarDecl 0x14600e2c8 <col:46, col:50> col:50 flag 'int'
| |-ParmVarDecl 0x14600e348 <col:56, col:60> col:60 used argc 'int'
| |-ParmVarDecl 0x1460266c0 <line:2:9, col:26> col:21 used argv 'char *const *'
| `-CompoundStmt 0x145924d20 <line:3:1, line:59:1>
|   |-DeclStmt 0x1460269c0 <line:4:2, col:11>
|   | `-VarDecl 0x146026958 <col:2, col:7> col:7 used chip 'int'
|   |-DeclStmt 0x146026a58 <line:5:2, col:12>
|   | `-VarDecl 0x1460269f0 <col:2, col:8> col:8 used addr 'long'
|   |-DeclStmt 0x146026af0 <line:6:2, col:10>
|   | `-VarDecl 0x146026a88 <col:2, col:6> col:6 used alen 'int'
|   |-DeclStmt 0x146026b88 <line:7:2, col:11>
|   | `-VarDecl 0x146026b20 <col:2, col:6> col:6 used count 'int'
|   |-DeclStmt 0x146026c18 <line:8:2, col:12>
|   | `-VarDecl 0x146026bb0 <col:2, col:8> col:8 used byte 'char'
|   |-DeclStmt 0x146026cb0 <line:9:2, col:11>
|   | `-VarDecl 0x146026c48 <col:2, col:8> col:8 used crc 'long'
|   |-DeclStmt 0x146026d48 <line:10:2, col:11>
|   | `-VarDecl 0x146026ce0 <col:2, col:8> col:8 used err 'long'
|   |-DeclStmt 0x146026e00 <line:11:2, col:13>
|   | `-VarDecl 0x146026d78 <col:2, col:12> col:6 used ret 'int' cinit
|   |   `-IntegerLiteral 0x146026de0 <col:12> 'int' 0
|   |-IfStmt 0x146026ed8 <line:16:2, line:17:10>
|   | |-BinaryOperator 0x146026e70 <line:16:6, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x146026e58 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x146026e18 <col:6> 'int' lvalue ParmVar 0x14600e348 'argc' 'int'
|   | | `-IntegerLiteral 0x146026e38 <col:13> 'int' 4
|   | `-ReturnStmt 0x146026ec8 <line:17:3, col:10>
|   |   `-RecoveryExpr 0x146026ea8 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1460271f0 <line:20:2, col:30> 'int' contains-errors '='
|   | |-DeclRefExpr 0x146026ef8 <col:2> 'int' lvalue Var 0x146026958 'chip' 'int'
|   | `-CallExpr 0x1460271c0 <col:9, col:30> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x146027030 <col:9> 'int ()' Function 0x146026f78 'hextoul' 'int ()'
|   |   |-ArraySubscriptExpr 0x146027180 <col:17, col:23> 'char *const' lvalue
|   |   | |-ImplicitCastExpr 0x146027168 <col:17> 'char *const *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x146027050 <col:17> 'char *const *' lvalue ParmVar 0x1460266c0 'argv' 'char *const *'
|   |   | `-IntegerLiteral 0x146027070 <col:22> 'int' 1
|   |   `-RecoveryExpr 0x1460271a0 <col:26> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1460273f0 <line:23:2, col:30> 'long' contains-errors '='
|   | |-DeclRefExpr 0x146027210 <col:2> 'long' lvalue Var 0x1460269f0 'addr' 'long'
|   | `-CallExpr 0x1460273c0 <col:9, col:30> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x146027230 <col:9> 'int ()' Function 0x146026f78 'hextoul' 'int ()'
|   |   |-ArraySubscriptExpr 0x146027380 <col:17, col:23> 'char *const' lvalue
|   |   | |-ImplicitCastExpr 0x146027368 <col:17> 'char *const *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x146027250 <col:17> 'char *const *' lvalue ParmVar 0x1460266c0 'argv' 'char *const *'
|   |   | `-IntegerLiteral 0x146027270 <col:22> 'int' 2
|   |   `-RecoveryExpr 0x1460273a0 <col:26> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x145923ae0 <line:24:2, col:43> 'int' contains-errors '='
|   | |-DeclRefExpr 0x146027410 <col:2> 'int' lvalue Var 0x146026a88 'alen' 'int'
|   | `-CallExpr 0x145923ab0 <col:9, col:43> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x146027510 <col:9> 'int ()' Function 0x146027458 'get_alen' 'int ()'
|   |   |-ArraySubscriptExpr 0x145923a70 <col:18, col:24> 'char *const' lvalue
|   |   | |-ImplicitCastExpr 0x145923a58 <col:18> 'char *const *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x146027530 <col:18> 'char *const *' lvalue ParmVar 0x1460266c0 'argv' 'char *const *'
|   |   | `-IntegerLiteral 0x146027550 <col:23> 'int' 2
|   |   `-RecoveryExpr 0x145923a90 <col:27> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x145923bc0 <line:25:2, line:26:10>
|   | |-BinaryOperator 0x145923b58 <line:25:6, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x145923b40 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x145923b00 <col:6> 'int' lvalue Var 0x146026a88 'alen' 'int'
|   | | `-IntegerLiteral 0x145923b20 <col:13> 'int' 3
|   | `-ReturnStmt 0x145923bb0 <line:26:3, col:10>
|   |   `-RecoveryExpr 0x145923b90 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x145923dc0 <line:36:2, col:31> 'int' contains-errors '='
|   | |-DeclRefExpr 0x145923be0 <col:2> 'int' lvalue Var 0x146026b20 'count' 'int'
|   | `-CallExpr 0x145923d90 <col:10, col:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x145923c00 <col:10> 'int ()' Function 0x146026f78 'hextoul' 'int ()'
|   |   |-ArraySubscriptExpr 0x145923d50 <col:18, col:24> 'char *const' lvalue
|   |   | |-ImplicitCastExpr 0x145923d38 <col:18> 'char *const *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x145923c20 <col:18> 'char *const *' lvalue ParmVar 0x1460266c0 'argv' 'char *const *'
|   |   | `-IntegerLiteral 0x145923c40 <col:23> 'int' 3
|   |   `-RecoveryExpr 0x145923d70 <col:27> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1459241d8 <line:38:2, col:39> 'int'
|   | |-ImplicitCastExpr 0x1459241c0 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x145923fc8 <col:2> 'int (const char *, ...)' Function 0x145923e20 'printf' 'int (const char *, ...)'
|   | |-ImplicitCastExpr 0x145924228 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x145924210 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x145924030 <col:10> 'char[4]' lvalue "STR"
|   | |-ImplicitCastExpr 0x145924240 <col:17> 'long' <LValueToRValue>
|   | | `-DeclRefExpr 0x145924050 <col:17> 'long' lvalue Var 0x1460269f0 'addr' 'long'
|   | `-BinaryOperator 0x145924150 <col:23, col:38> 'long' '-'
|   |   |-BinaryOperator 0x1459240f8 <col:23, col:30> 'long' '+'
|   |   | |-ImplicitCastExpr 0x1459240b0 <col:23> 'long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x145924070 <col:23> 'long' lvalue Var 0x1460269f0 'addr' 'long'
|   |   | `-ImplicitCastExpr 0x1459240e0 <col:30> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1459240c8 <col:30> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x145924090 <col:30> 'int' lvalue Var 0x146026b20 'count' 'int'
|   |   `-ImplicitCastExpr 0x145924138 <col:38> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x145924118 <col:38> 'int' 1
|   |-BinaryOperator 0x1459242b0 <line:40:2, col:8> 'long' '='
|   | |-DeclRefExpr 0x145924258 <col:2> 'long' lvalue Var 0x146026c48 'crc' 'long'
|   | `-ImplicitCastExpr 0x145924298 <col:8> 'long' <IntegralCast>
|   |   `-IntegerLiteral 0x145924278 <col:8> 'int' 0
|   |-BinaryOperator 0x145924328 <line:41:2, col:8> 'long' '='
|   | |-DeclRefExpr 0x1459242d0 <col:2> 'long' lvalue Var 0x146026ce0 'err' 'long'
|   | `-ImplicitCastExpr 0x145924310 <col:8> 'long' <IntegralCast>
|   |   `-IntegerLiteral 0x1459242f0 <col:8> 'int' 0
|   |-WhileStmt 0x1459249c8 <line:42:2, line:52:2>
|   | |-BinaryOperator 0x1459243a0 <line:42:9, col:19> 'int' '>'
|   | | |-UnaryOperator 0x145924368 <col:9, col:14> 'int' postfix '--'
|   | | | `-DeclRefExpr 0x145924348 <col:9> 'int' lvalue Var 0x146026b20 'count' 'int'
|   | | `-IntegerLiteral 0x145924380 <col:19> 'int' 0
|   | `-CompoundStmt 0x145924998 <col:22, line:52:2>
|   |   |-BinaryOperator 0x145924678 <line:46:3, col:44> 'int' '='
|   |   | |-DeclRefExpr 0x1459243c0 <col:3> 'int' lvalue Var 0x146026d78 'ret' 'int'
|   |   | `-CallExpr 0x1459245e8 <col:9, col:44> 'int'
|   |   |   |-ImplicitCastExpr 0x1459245d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1459244c0 <col:9> 'int ()' Function 0x145924408 'i2c_read' 'int ()'
|   |   |   |-ImplicitCastExpr 0x145924630 <col:18> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1459244e0 <col:18> 'int' lvalue Var 0x146026958 'chip' 'int'
|   |   |   |-ImplicitCastExpr 0x145924648 <col:24> 'long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x145924500 <col:24> 'long' lvalue Var 0x1460269f0 'addr' 'long'
|   |   |   |-ImplicitCastExpr 0x145924660 <col:30> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x145924520 <col:30> 'int' lvalue Var 0x146026a88 'alen' 'int'
|   |   |   |-UnaryOperator 0x145924560 <col:36, col:37> 'char *' prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x145924540 <col:37> 'char' lvalue Var 0x146026bb0 'byte' 'char'
|   |   |   `-IntegerLiteral 0x145924578 <col:43> 'int' 1
|   |   |-IfStmt 0x145924708 <line:48:3, line:49:7>
|   |   | |-ImplicitCastExpr 0x1459246b8 <line:48:7> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x145924698 <col:7> 'int' lvalue Var 0x146026d78 'ret' 'int'
|   |   | `-UnaryOperator 0x1459246f0 <line:49:4, col:7> 'long' postfix '++'
|   |   |   `-DeclRefExpr 0x1459246d0 <col:4> 'long' lvalue Var 0x146026ce0 'err' 'long'
|   |   |-BinaryOperator 0x145924940 <line:50:3, col:28> 'long' '='
|   |   | |-DeclRefExpr 0x145924728 <col:3> 'long' lvalue Var 0x146026c48 'crc' 'long'
|   |   | `-ImplicitCastExpr 0x145924928 <col:9, col:28> 'long' <IntegralCast>
|   |   |   `-CallExpr 0x1459248d8 <col:9, col:28> 'int'
|   |   |     |-ImplicitCastExpr 0x1459248c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x145924828 <col:9> 'int ()' Function 0x145924770 'crc32' 'int ()'
|   |   |     |-ImplicitCastExpr 0x145924910 <col:15> 'long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x145924848 <col:15> 'long' lvalue Var 0x146026c48 'crc' 'long'
|   |   |     |-UnaryOperator 0x145924888 <col:20, col:21> 'char *' prefix '&' cannot overflow
|   |   |     | `-DeclRefExpr 0x145924868 <col:21> 'char' lvalue Var 0x146026bb0 'byte' 'char'
|   |   |     `-IntegerLiteral 0x1459248a0 <col:27> 'int' 1
|   |   `-UnaryOperator 0x145924980 <line:51:3, col:7> 'long' postfix '++'
|   |     `-DeclRefExpr 0x145924960 <col:3> 'long' lvalue Var 0x1460269f0 'addr' 'long'
|   |-IfStmt 0x145924cc0 <line:53:2, line:56:21> has_else
|   | |-BinaryOperator 0x145924a70 <line:53:6, col:12> 'int' '>'
|   | | |-ImplicitCastExpr 0x145924a40 <col:6> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x145924a00 <col:6> 'long' lvalue Var 0x146026ce0 'err' 'long'
|   | | `-ImplicitCastExpr 0x145924a58 <col:12> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x145924a20 <col:12> 'int' 0
|   | |-NullStmt 0x145924cb8 <line:54:3>
|   | `-CallExpr 0x145924c40 <line:56:3, col:21> 'int'
|   |   |-ImplicitCastExpr 0x145924c28 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x145924bb0 <col:3> 'int (const char *, ...)' Function 0x145923e20 'printf' 'int (const char *, ...)'
|   |   |-ImplicitCastExpr 0x145924c88 <col:11> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x145924c70 <col:11> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x145924bd0 <col:11> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x145924ca0 <col:18> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x145924bf0 <col:18> 'long' lvalue Var 0x146026c48 'crc' 'long'
|   `-ReturnStmt 0x145924d10 <line:58:2, col:9>
|     `-IntegerLiteral 0x145924cf0 <col:9> 'int' 0
`-FunctionDecl 0x145923e20 <line:38:2> col:2 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x145923f20 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x145923ec8 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x145923f90 <col:2> Implicit printf 1 2
