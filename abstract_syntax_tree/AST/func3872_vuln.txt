TranslationUnitDecl 0x105828208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1058290b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1058287d0 '__int128'
|-TypedefDecl 0x105829128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1058287f0 'unsigned __int128'
|-TypedefDecl 0x10700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10700bc00 'struct __NSConstantString_tag'
|   `-Record 0x105829180 '__NSConstantString_tag'
|-TypedefDecl 0x10700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x105828990 '__SVInt8_t'
|-TypedefDecl 0x10700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1058289b0 '__SVInt16_t'
|-TypedefDecl 0x10700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1058289d0 '__SVInt32_t'
|-TypedefDecl 0x10700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1058289f0 '__SVInt64_t'
|-TypedefDecl 0x10700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x105828a10 '__SVUint8_t'
|-TypedefDecl 0x10700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x105828a30 '__SVUint16_t'
|-TypedefDecl 0x10700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x105828a50 '__SVUint32_t'
|-TypedefDecl 0x10700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x105828a70 '__SVUint64_t'
|-TypedefDecl 0x10700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x105828a90 '__SVFloat16_t'
|-TypedefDecl 0x10700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x105828ab0 '__SVFloat32_t'
|-TypedefDecl 0x10700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x105828ad0 '__SVFloat64_t'
|-TypedefDecl 0x10700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x105828af0 '__SVBfloat16_t'
|-TypedefDecl 0x10700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x105828b10 '__clang_svint8x2_t'
|-TypedefDecl 0x10700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x105828b30 '__clang_svint16x2_t'
|-TypedefDecl 0x10700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x105828b50 '__clang_svint32x2_t'
|-TypedefDecl 0x10700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x105828b70 '__clang_svint64x2_t'
|-TypedefDecl 0x10700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x105828b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x105828bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x105828bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x105828bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x105828c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x105828c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x105828c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x105828c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x105828c90 '__clang_svint8x3_t'
|-TypedefDecl 0x10700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x105828cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x10700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x105828cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x10700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x105828cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x10700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x105828d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x10700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x105828d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x10700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x105828d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x10700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x105828d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x10700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x105828d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x105828db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x105828dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x105828df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x105828e10 '__clang_svint8x4_t'
|-TypedefDecl 0x10700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x105828e30 '__clang_svint16x4_t'
|-TypedefDecl 0x10700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x105828e50 '__clang_svint32x4_t'
|-TypedefDecl 0x10700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x105828e70 '__clang_svint64x4_t'
|-TypedefDecl 0x10700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x105828e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x10700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x105828eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x105828ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x105828ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x105828f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x105828f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x105828f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x105828f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x105828f90 '__SVBool_t'
|-TypedefDecl 0x10700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x105828fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x10700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x105828fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x10700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x105828ff0 '__SVCount_t'
|-TypedefDecl 0x10700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10700dbb0 'char *'
|   `-BuiltinType 0x1058282b0 'char'
|-TypedefDecl 0x10700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10700dbb0 'char *'
|   `-BuiltinType 0x1058282b0 'char'
|-FunctionDecl 0x10700de38 <dataset_diviso_filec/func3872_vuln.c:1:1, line:22:1> line:1:1 ZEND_METHOD 'int (int, int)'
| |-ParmVarDecl 0x10700dd58 <col:13> col:13 exception 'int'
| |-ParmVarDecl 0x10700dcd8 <col:24> col:24 getTraceAsString 'int'
| `-CompoundStmt 0x1058f6e08 <line:2:1, line:22:1>
|   |-DeclStmt 0x10700e140 <line:4:2, col:26>
|   | |-VarDecl 0x10700df80 <col:2, col:8> col:8 used res 'char *'
|   | |-VarDecl 0x10700e038 <col:2, col:15> col:15 used str 'char **'
|   | `-VarDecl 0x10700e0b8 <col:2, col:21> col:21 used s_tmp 'char *'
|   |-DeclStmt 0x10700e3a8 <line:5:2, col:43>
|   | |-VarDecl 0x10700e170 <col:2, col:16> col:6 used res_len 'int' cinit
|   | | `-IntegerLiteral 0x10700e1d8 <col:16> 'int' 0
|   | |-VarDecl 0x10700e248 <col:2, col:27> col:20 len 'int *' cinit
|   | | `-UnaryOperator 0x10700e2d0 <col:26, col:27> 'int *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x10700e2b0 <col:27> 'int' lvalue Var 0x10700e170 'res_len' 'int'
|   | `-VarDecl 0x10700e300 <col:2, col:42> col:36 used num 'int' cinit
|   |   `-IntegerLiteral 0x10700e368 <col:42> 'int' 0
|   |-BinaryOperator 0x1058f5850 <line:9:2, col:18> 'char *' '='
|   | |-DeclRefExpr 0x10700e3c0 <col:2> 'char *' lvalue Var 0x10700df80 'res' 'char *'
|   | `-ImplicitCastExpr 0x1058f5418 <col:8, col:18> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1058f53d8 <col:8, col:18> 'int'
|   |     |-ImplicitCastExpr 0x1058f53c0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1058f5310 <col:8> 'int ()' Function 0x1058f5258 'estrdup' 'int ()'
|   |     `-ImplicitCastExpr 0x1058f5400 <col:16> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1058f5370 <col:16> 'char[1]' lvalue ""
|   |-BinaryOperator 0x1058f58c8 <line:10:2, col:9> 'char **' '='
|   | |-DeclRefExpr 0x1058f5870 <col:2> 'char **' lvalue Var 0x10700e038 'str' 'char **'
|   | `-UnaryOperator 0x1058f58b0 <col:8, col:9> 'char **' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1058f5890 <col:9> 'char *' lvalue Var 0x10700df80 'res' 'char *'
|   |-BinaryOperator 0x1058f6160 <line:15:2, col:48> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1058f5e78 <col:2> 'char *' lvalue Var 0x10700e0b8 's_tmp' 'char *'
|   | `-CallExpr 0x1058f6138 <col:10, col:48> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1058f5f78 <col:10> 'int ()' Function 0x1058f5ec0 'emalloc' 'int ()'
|   |   `-BinaryOperator 0x1058f6118 <col:18, col:47> '<dependent type>' contains-errors '+'
|   |     |-BinaryOperator 0x1058f60f8 <col:18, col:43> '<dependent type>' contains-errors '+'
|   |     | |-BinaryOperator 0x1058f60d8 <col:18, col:22> '<dependent type>' contains-errors '+'
|   |     | | |-IntegerLiteral 0x1058f5f98 <col:18> 'int' 1
|   |     | | `-RecoveryExpr 0x1058f60b8 <col:22> '<dependent type>' contains-errors lvalue
|   |     | `-IntegerLiteral 0x1058f5ff0 <col:43> 'int' 7
|   |     `-IntegerLiteral 0x1058f6030 <col:47> 'int' 1
|   |-CallExpr 0x1058f6518 <line:16:2, col:27> 'int'
|   | |-ImplicitCastExpr 0x1058f6500 <col:2> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1058f6418 <col:2> 'int (char *, const char *, ...)' Function 0x1058f6200 'sprintf' 'int (char *, const char *, ...)'
|   | |-ImplicitCastExpr 0x1058f6550 <col:10> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1058f6438 <col:10> 'char *' lvalue Var 0x10700e0b8 's_tmp' 'char *'
|   | |-ImplicitCastExpr 0x1058f6580 <col:17> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1058f6568 <col:17> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1058f6458 <col:17> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x1058f6598 <col:24> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1058f6478 <col:24> 'int' lvalue Var 0x10700e300 'num' 'int'
|   |-CallExpr 0x1058f6988 <line:17:2, col:40> 'int'
|   | |-ImplicitCastExpr 0x1058f6970 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1058f6690 <col:2> 'int ()' Function 0x1058f65d8 'TRACE_APPEND_STRL' 'int ()'
|   | |-ImplicitCastExpr 0x1058f69b8 <col:20> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1058f66b0 <col:20> 'char *' lvalue Var 0x10700e0b8 's_tmp' 'char *'
|   | `-CallExpr 0x1058f6918 <col:27, col:39> 'unsigned long'
|   |   |-ImplicitCastExpr 0x1058f6900 <col:27> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1058f6878 <col:27> 'unsigned long (const char *)' Function 0x1058f6708 'strlen' 'unsigned long (const char *)'
|   |   `-ImplicitCastExpr 0x1058f6958 <col:34> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1058f6940 <col:34> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1058f6898 <col:34> 'char *' lvalue Var 0x10700e0b8 's_tmp' 'char *'
|   |-CallExpr 0x1058f6b08 <line:18:2, col:13> 'int'
|   | |-ImplicitCastExpr 0x1058f6af0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1058f6ab0 <col:2> 'int ()' Function 0x1058f69f8 'efree' 'int ()'
|   | `-ImplicitCastExpr 0x1058f6b30 <col:8> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1058f6ad0 <col:8> 'char *' lvalue Var 0x10700e0b8 's_tmp' 'char *'
|   |-BinaryOperator 0x1058f6c08 <line:20:2, col:17> 'char' '='
|   | |-ArraySubscriptExpr 0x1058f6bb8 <col:2, col:13> 'char' lvalue
|   | | |-ImplicitCastExpr 0x1058f6b88 <col:2> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1058f6b48 <col:2> 'char *' lvalue Var 0x10700df80 'res' 'char *'
|   | | `-ImplicitCastExpr 0x1058f6ba0 <col:6> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1058f6b68 <col:6> 'int' lvalue Var 0x10700e170 'res_len' 'int'
|   | `-ImplicitCastExpr 0x1058f6bf0 <col:17> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x1058f6bd8 <col:17> 'int' 0
|   `-CallExpr 0x1058f6da0 <line:21:2, col:32> 'int'
|     |-ImplicitCastExpr 0x1058f6d88 <col:2> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1058f6d08 <col:2> 'int ()' Function 0x1058f6c50 'RETURN_STRINGL' 'int ()'
|     |-ImplicitCastExpr 0x1058f6dd8 <col:17> 'char *' <LValueToRValue>
|     | `-DeclRefExpr 0x1058f6d28 <col:17> 'char *' lvalue Var 0x10700df80 'res' 'char *'
|     |-ImplicitCastExpr 0x1058f6df0 <col:22> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1058f6d48 <col:22> 'int' lvalue Var 0x10700e170 'res_len' 'int'
|     `-IntegerLiteral 0x1058f6d68 <col:31> 'int' 0
|-FunctionDecl 0x1058f6200 <line:16:2> col:2 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1058f6300 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1058f6368 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x1058f62a8 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x1058f63e0 <col:2> Implicit printf 2 3
`-FunctionDecl 0x1058f6708 <line:17:27> col:27 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x1058f6808 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1058f67b0 <<invalid sloc>> Implicit 902
