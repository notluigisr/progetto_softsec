TranslationUnitDecl 0x15a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a055bd0 '__int128'
|-TypedefDecl 0x15a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a055bf0 'unsigned __int128'
|-TypedefDecl 0x15a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x15a056580 '__NSConstantString_tag'
|-TypedefDecl 0x15a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a055d90 '__SVInt8_t'
|-TypedefDecl 0x15a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a055db0 '__SVInt16_t'
|-TypedefDecl 0x15a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a055dd0 '__SVInt32_t'
|-TypedefDecl 0x15a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a055df0 '__SVInt64_t'
|-TypedefDecl 0x15a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a055e10 '__SVUint8_t'
|-TypedefDecl 0x15a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a055e30 '__SVUint16_t'
|-TypedefDecl 0x15a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a055e50 '__SVUint32_t'
|-TypedefDecl 0x15a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a055e70 '__SVUint64_t'
|-TypedefDecl 0x15a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a055e90 '__SVFloat16_t'
|-TypedefDecl 0x15a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a056390 '__SVBool_t'
|-TypedefDecl 0x15a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a0563f0 '__SVCount_t'
|-TypedefDecl 0x15a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a80dbb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-TypedefDecl 0x15a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a80dbb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-FunctionDecl 0x15a80e090 <dataset_diviso_filec/func9682_vuln.c:1:1, line:28:1> line:1:13 invalid print_value 'void (int, int, const char *, const char *, const char *, int)' static
| |-ParmVarDecl 0x15a80dcd8 <col:25, col:29> col:29 used output 'int'
| |-ParmVarDecl 0x15a80dd58 <col:37, col:41> col:41 used num 'int'
| |-ParmVarDecl 0x15a80ddd8 <col:46, col:58> col:58 used devname 'const char *'
| |-ParmVarDecl 0x15a80de58 <line:2:4, col:16> col:16 used value 'const char *'
| |-ParmVarDecl 0x15a80ded8 <col:23, col:35> col:35 used name 'const char *'
| |-ParmVarDecl 0x15a80df70 <col:41, col:48> col:48 invalid valsz 'int'
| `-CompoundStmt 0x15a82a310 <line:3:1, line:28:1>
|   `-IfStmt 0x15a82a2e0 <line:4:2, line:27:2> has_else
|     |-BinaryOperator 0x15a80e1e0 <line:4:6, col:15> '<dependent type>' contains-errors '&'
|     | |-DeclRefExpr 0x15a80e168 <col:6> 'int' lvalue ParmVar 0x15a80dcd8 'output' 'int'
|     | `-RecoveryExpr 0x15a80e1c0 <col:15> '<dependent type>' contains-errors lvalue
|     |-CompoundStmt 0x15a827a00 <col:34, line:8:2>
|     | |-CallExpr 0x15a827820 <line:5:3, col:22> '<dependent type>' contains-errors
|     | | |-DeclRefExpr 0x15a80e360 <col:3> 'int ()' Function 0x15a80e2a8 'fputs' 'int ()'
|     | | |-DeclRefExpr 0x15a80e380 <col:9> 'const char *' lvalue ParmVar 0x15a80de58 'value' 'const char *'
|     | | `-RecoveryExpr 0x15a827800 <col:16> '<dependent type>' contains-errors lvalue
|     | `-CallExpr 0x15a8279d0 <line:6:3, col:21> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x15a827930 <col:3> 'int ()' Function 0x15a827878 'fputc' 'int ()'
|     |   |-CharacterLiteral 0x15a827950 <col:9> 'int' 10
|     |   `-RecoveryExpr 0x15a8279b0 <col:15> '<dependent type>' contains-errors lvalue
|     `-IfStmt 0x15a82a2b0 <line:8:9, line:27:2> has_else
|       |-BinaryOperator 0x15a827a98 <line:8:13, col:22> '<dependent type>' contains-errors '&'
|       | |-DeclRefExpr 0x15a827a20 <col:13> 'int' lvalue ParmVar 0x15a80dcd8 'output' 'int'
|       | `-RecoveryExpr 0x15a827a78 <col:22> '<dependent type>' contains-errors lvalue
|       |-CompoundStmt 0x15a827ca8 <col:40, line:11:2>
|       | `-CallExpr 0x15a827c48 <line:9:3, col:32> 'int'
|       |   |-ImplicitCastExpr 0x15a827c30 <col:3> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x15a827b98 <col:3> 'int ()' Function 0x15a827ae0 'print_udev_format' 'int ()'
|       |   |-ImplicitCastExpr 0x15a827c78 <col:21> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x15a827bb8 <col:21> 'const char *' lvalue ParmVar 0x15a80ded8 'name' 'const char *'
|       |   `-ImplicitCastExpr 0x15a827c90 <col:27> 'const char *' <LValueToRValue>
|       |     `-DeclRefExpr 0x15a827bd8 <col:27> 'const char *' lvalue ParmVar 0x15a80de58 'value' 'const char *'
|       `-IfStmt 0x15a82a280 <line:11:9, line:27:2> has_else
|         |-BinaryOperator 0x15a827d38 <line:11:13, col:22> '<dependent type>' contains-errors '&'
|         | |-DeclRefExpr 0x15a827cc0 <col:13> 'int' lvalue ParmVar 0x15a80dcd8 'output' 'int'
|         | `-RecoveryExpr 0x15a827d18 <col:22> '<dependent type>' contains-errors lvalue
|         |-CompoundStmt 0x15a829c98 <col:42, line:19:2>
|         | |-IfStmt 0x15a8285c0 <line:12:3, line:13:25>
|         | | |-BinaryOperator 0x15a827e08 <line:12:7, col:19> 'int' '&&'
|         | | | |-BinaryOperator 0x15a827db0 <col:7, col:14> 'int' '=='
|         | | | | |-ImplicitCastExpr 0x15a827d98 <col:7> 'int' <LValueToRValue>
|         | | | | | `-DeclRefExpr 0x15a827d58 <col:7> 'int' lvalue ParmVar 0x15a80dd58 'num' 'int'
|         | | | | `-IntegerLiteral 0x15a827d78 <col:14> 'int' 1
|         | | | `-ImplicitCastExpr 0x15a827df0 <col:19> 'const char *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x15a827dd0 <col:19> 'const char *' lvalue ParmVar 0x15a80ddd8 'devname' 'const char *'
|         | | `-CallExpr 0x15a828548 <line:13:4, col:25> 'int'
|         | |   |-ImplicitCastExpr 0x15a828530 <col:4> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|         | |   | `-DeclRefExpr 0x15a828438 <col:4> 'int (const char *, ...)' Function 0x15a828290 'printf' 'int (const char *, ...)'
|         | |   |-ImplicitCastExpr 0x15a828590 <col:11> 'const char *' <NoOp>
|         | |   | `-ImplicitCastExpr 0x15a828578 <col:11> 'char *' <ArrayToPointerDecay>
|         | |   |   `-StringLiteral 0x15a8284a0 <col:11> 'char[4]' lvalue "STR"
|         | |   `-ImplicitCastExpr 0x15a8285a8 <col:18> 'const char *' <LValueToRValue>
|         | |     `-DeclRefExpr 0x15a8284c0 <col:18> 'const char *' lvalue ParmVar 0x15a80ddd8 'devname' 'const char *'
|         | |-CallExpr 0x15a828688 <line:14:3, col:21> '<dependent type>' contains-errors
|         | | |-DeclRefExpr 0x15a8285e0 <col:3> 'int ()' Function 0x15a80e2a8 'fputs' 'int ()'
|         | | |-DeclRefExpr 0x15a828600 <col:9> 'const char *' lvalue ParmVar 0x15a80ded8 'name' 'const char *'
|         | | `-RecoveryExpr 0x15a828668 <col:15> '<dependent type>' contains-errors lvalue
|         | |-CallExpr 0x15a828760 <line:15:3, col:22> '<dependent type>' contains-errors
|         | | |-DeclRefExpr 0x15a8286b8 <col:3> 'int ()' Function 0x15a80e2a8 'fputs' 'int ()'
|         | | |-StringLiteral 0x15a8286d8 <col:9> 'char[4]' lvalue "STR"
|         | | `-RecoveryExpr 0x15a828740 <col:16> '<dependent type>' contains-errors lvalue
|         | |-CallExpr 0x15a829b88 <line:16:3, col:32> '<dependent type>' contains-errors
|         | | |-DeclRefExpr 0x15a829ab8 <col:3> 'int ()' Function 0x15a829a00 'safe_print' 'int ()'
|         | | |-DeclRefExpr 0x15a829ad8 <col:14> 'const char *' lvalue ParmVar 0x15a80de58 'value' 'const char *'
|         | | |-RecoveryExpr 0x15a829af8 <col:21> '<dependent type>' contains-errors lvalue
|         | | `-RecoveryExpr 0x15a829b68 <col:28> '<dependent type>' contains-errors lvalue
|         | `-CallExpr 0x15a829c68 <line:17:3, col:22> '<dependent type>' contains-errors
|         |   |-DeclRefExpr 0x15a829bc0 <col:3> 'int ()' Function 0x15a80e2a8 'fputs' 'int ()'
|         |   |-StringLiteral 0x15a829be0 <col:9> 'char[4]' lvalue "STR"
|         |   `-RecoveryExpr 0x15a829c48 <col:16> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x15a82a248 <line:19:9, line:27:2>
|           |-IfStmt 0x15a829ea8 <line:20:3, line:21:25>
|           | |-BinaryOperator 0x15a829d80 <line:20:7, col:19> 'int' '&&'
|           | | |-BinaryOperator 0x15a829d28 <col:7, col:14> 'int' '=='
|           | | | |-ImplicitCastExpr 0x15a829d10 <col:7> 'int' <LValueToRValue>
|           | | | | `-DeclRefExpr 0x15a829cd0 <col:7> 'int' lvalue ParmVar 0x15a80dd58 'num' 'int'
|           | | | `-IntegerLiteral 0x15a829cf0 <col:14> 'int' 1
|           | | `-ImplicitCastExpr 0x15a829d68 <col:19> 'const char *' <LValueToRValue>
|           | |   `-DeclRefExpr 0x15a829d48 <col:19> 'const char *' lvalue ParmVar 0x15a80ddd8 'devname' 'const char *'
|           | `-CallExpr 0x15a829e30 <line:21:4, col:25> 'int'
|           |   |-ImplicitCastExpr 0x15a829e18 <col:4> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|           |   | `-DeclRefExpr 0x15a829da0 <col:4> 'int (const char *, ...)' Function 0x15a828290 'printf' 'int (const char *, ...)'
|           |   |-ImplicitCastExpr 0x15a829e78 <col:11> 'const char *' <NoOp>
|           |   | `-ImplicitCastExpr 0x15a829e60 <col:11> 'char *' <ArrayToPointerDecay>
|           |   |   `-StringLiteral 0x15a829dc0 <col:11> 'char[4]' lvalue "STR"
|           |   `-ImplicitCastExpr 0x15a829e90 <col:18> 'const char *' <LValueToRValue>
|           |     `-DeclRefExpr 0x15a829de0 <col:18> 'const char *' lvalue ParmVar 0x15a80ddd8 'devname' 'const char *'
|           |-CallExpr 0x15a829f70 <line:22:3, col:22> '<dependent type>' contains-errors
|           | |-DeclRefExpr 0x15a829ec8 <col:3> 'int ()' Function 0x15a80e2a8 'fputs' 'int ()'
|           | |-StringLiteral 0x15a829ee8 <col:9> 'char[4]' lvalue "STR"
|           | `-RecoveryExpr 0x15a829f50 <col:16> '<dependent type>' contains-errors lvalue
|           |-CallExpr 0x15a82a048 <line:23:3, col:21> '<dependent type>' contains-errors
|           | |-DeclRefExpr 0x15a829fa0 <col:3> 'int ()' Function 0x15a80e2a8 'fputs' 'int ()'
|           | |-DeclRefExpr 0x15a829fc0 <col:9> 'const char *' lvalue ParmVar 0x15a80ded8 'name' 'const char *'
|           | `-RecoveryExpr 0x15a82a028 <col:15> '<dependent type>' contains-errors lvalue
|           |-CallExpr 0x15a82a120 <line:24:3, col:22> '<dependent type>' contains-errors
|           | |-DeclRefExpr 0x15a82a078 <col:3> 'int ()' Function 0x15a80e2a8 'fputs' 'int ()'
|           | |-StringLiteral 0x15a82a098 <col:9> 'char[4]' lvalue "STR"
|           | `-RecoveryExpr 0x15a82a100 <col:16> '<dependent type>' contains-errors lvalue
|           `-CallExpr 0x15a82a1d0 <line:25:3, col:33> '<dependent type>' contains-errors
|             |-DeclRefExpr 0x15a82a150 <col:3> 'int ()' Function 0x15a829a00 'safe_print' 'int ()'
|             |-DeclRefExpr 0x15a82a170 <col:14> 'const char *' lvalue ParmVar 0x15a80de58 'value' 'const char *'
|             |-RecoveryExpr 0x15a82a190 <col:21> '<dependent type>' contains-errors lvalue
|             `-StringLiteral 0x15a82a1b0 <col:28> 'char[4]' lvalue "STR"
`-FunctionDecl 0x15a828290 <line:13:4> col:4 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x15a828390 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x15a828338 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x15a828400 <col:4> Implicit printf 1 2
