TranslationUnitDecl 0x138055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1380564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x138055bd0 '__int128'
|-TypedefDecl 0x138056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x138055bf0 'unsigned __int128'
|-TypedefDecl 0x13000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13000bc00 'struct __NSConstantString_tag'
|   `-Record 0x138056580 '__NSConstantString_tag'
|-TypedefDecl 0x13000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x138055d90 '__SVInt8_t'
|-TypedefDecl 0x13000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x138055db0 '__SVInt16_t'
|-TypedefDecl 0x13000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x138055dd0 '__SVInt32_t'
|-TypedefDecl 0x13000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x138055df0 '__SVInt64_t'
|-TypedefDecl 0x13000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x138055e10 '__SVUint8_t'
|-TypedefDecl 0x13000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x138055e30 '__SVUint16_t'
|-TypedefDecl 0x13000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x138055e50 '__SVUint32_t'
|-TypedefDecl 0x13000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x138055e70 '__SVUint64_t'
|-TypedefDecl 0x13000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x138055e90 '__SVFloat16_t'
|-TypedefDecl 0x13000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x138055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x138055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x138055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x138055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x138055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x138055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x138055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x138055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x138055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x138055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x138055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x138056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x138056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x138056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x138056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x138056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1380560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1380560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1380560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x138056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x138056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x138056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x138056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x138056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1380561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1380561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1380561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x138056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x138056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x138056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x138056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x138056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1380562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1380562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1380562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x138056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x138056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x138056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x138056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x138056390 '__SVBool_t'
|-TypedefDecl 0x13000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1380563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1380563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1380563f0 '__SVCount_t'
|-TypedefDecl 0x13000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1380556b0 'char'
|-TypedefDecl 0x13000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13000dbb0 'char *'
|   `-BuiltinType 0x1380556b0 'char'
|-FunctionDecl 0x1300274d8 <dataset_diviso_filec/func13908_nonvuln.c:1:1, line:23:1> line:1:10 invalid cli_bcapi_entropy_buffer 'int (struct cli_bc_ctx *, int *, int)'
| |-ParmVarDecl 0x13000e268 <col:35, col:54> col:54 ctx 'struct cli_bc_ctx *'
| |-ParmVarDecl 0x13000e318 <col:60, col:69> col:69 invalid s 'int *'
| |-ParmVarDecl 0x13000e398 <col:72, col:80> col:80 invalid len 'int'
| `-CompoundStmt 0x130029c60 <line:2:1, line:23:1>
|   |-DeclStmt 0x130027618 <line:4:5, col:15>
|   | `-VarDecl 0x1300275b0 <col:5, col:14> col:14 used i 'unsigned int'
|   |-DeclStmt 0x1300276e8 <line:5:5, col:23>
|   | `-VarDecl 0x130027648 <col:5, col:22> col:12 used entropy 'double' cinit
|   |   `-ImplicitCastExpr 0x1300276d0 <col:22> 'double' <IntegralToFloating>
|   |     `-IntegerLiteral 0x1300276b0 <col:22> 'int' 0
|   |-DeclStmt 0x130027a48 <line:6:5, col:25>
|   | `-VarDecl 0x130027718 <col:5, col:24> col:12 used log2 'double' cinit
|   |   `-CallExpr 0x130027a08 <col:19, col:24> 'double'
|   |     |-ImplicitCastExpr 0x1300279f0 <col:19> 'double (*)(double)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x130027978 <col:19> 'double (double)' Function 0x1300277b8 'log' 'double (double)'
|   |     `-ImplicitCastExpr 0x130027a30 <col:23> 'double' <IntegralToFloating>
|   |       `-IntegerLiteral 0x130027998 <col:23> 'int' 2
|   |-IfStmt 0x130027b78 <line:8:5, line:9:10>
|   | |-BinaryOperator 0x130027b10 <line:8:9, col:22> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x130027a98 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x130027a80 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x130027a60 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x130027af0 <col:15, col:22> 'int' contains-errors '<='
|   | |   |-RecoveryExpr 0x130027ab0 <col:15> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x130027ad0 <col:22> 'int' 0
|   | `-ReturnStmt 0x130027b68 <line:9:2, col:10>
|   |   `-UnaryOperator 0x130027b50 <col:9, col:10> 'int' prefix '-'
|   |     `-IntegerLiteral 0x130027b30 <col:10> 'int' 1
|   |-ForStmt 0x130028058 <line:11:5, line:13:5>
|   | |-BinaryOperator 0x130027f00 <line:11:10, col:12> 'unsigned int' '='
|   | | |-DeclRefExpr 0x130027ea8 <col:10> 'unsigned int' lvalue Var 0x1300275b0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x130027ee8 <col:12> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x130027ec8 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x130027f60 <col:14, col:16> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x130027f20 <col:14> 'unsigned int' lvalue Var 0x1300275b0 'i' 'unsigned int'
|   | | `-RecoveryExpr 0x130027f40 <col:16> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x130027fa0 <col:20, col:21> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x130027f80 <col:20> 'unsigned int' lvalue Var 0x1300275b0 'i' 'unsigned int'
|   | `-CompoundStmt 0x130028048 <col:25, line:13:5>
|   |-ForStmt 0x130029b48 <line:14:5, line:20:5>
|   | |-BinaryOperator 0x1300280e8 <line:14:10, col:12> 'unsigned int' '='
|   | | |-DeclRefExpr 0x130028090 <col:10> 'unsigned int' lvalue Var 0x1300275b0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1300280d0 <col:12> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1300280b0 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x130028178 <col:14, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x130028148 <col:14> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x130028108 <col:14> 'unsigned int' lvalue Var 0x1300275b0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x130028160 <col:16> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x130028128 <col:16> 'int' 256
|   | |-UnaryOperator 0x1300281b8 <col:20, col:21> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x130028198 <col:20> 'unsigned int' lvalue Var 0x1300275b0 'i' 'unsigned int'
|   | `-CompoundStmt 0x130029b20 <col:25, line:20:5>
|   |   |-DeclStmt 0x130028250 <line:15:2, col:10>
|   |   | `-VarDecl 0x1300281e8 <col:2, col:9> col:9 used p 'double'
|   |   |-IfStmt 0x1300282c8 <line:16:2, line:17:6>
|   |   | |-RecoveryExpr 0x1300282a0 <line:16:6, col:18> '_Bool' contains-errors
|   |   | `-ContinueStmt 0x1300282c0 <line:17:6>
|   |   `-CompoundAssignOperator 0x130029af0 <line:19:2, col:23> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   |     |-DeclRefExpr 0x130028360 <col:2> 'double' lvalue Var 0x130027648 'entropy' 'double'
|   |     `-BinaryOperator 0x130029ad0 <col:13, col:23> 'double' '/'
|   |       |-BinaryOperator 0x130029a78 <col:13, col:21> 'double' '*'
|   |       | |-UnaryOperator 0x1300283b8 <col:13, col:14> 'double' prefix '-'
|   |       | | `-ImplicitCastExpr 0x1300283a0 <col:14> 'double' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x130028380 <col:14> 'double' lvalue Var 0x1300281e8 'p' 'double'
|   |       | `-CallExpr 0x130029a38 <col:16, col:21> 'double'
|   |       |   |-ImplicitCastExpr 0x130029a20 <col:16> 'double (*)(double)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1300283d0 <col:16> 'double (double)' Function 0x1300277b8 'log' 'double (double)'
|   |       |   `-ImplicitCastExpr 0x130029a60 <col:20> 'double' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x130029a00 <col:20> 'double' lvalue Var 0x1300281e8 'p' 'double'
|   |       `-ImplicitCastExpr 0x130029ab8 <col:23> 'double' <LValueToRValue>
|   |         `-DeclRefExpr 0x130029a98 <col:23> 'double' lvalue Var 0x130027718 'log2' 'double'
|   `-CompoundAssignOperator 0x130029c18 <line:21:5, col:19> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'
|     |-DeclRefExpr 0x130029b80 <col:5> 'double' lvalue Var 0x130027648 'entropy' 'double'
|     `-ImplicitCastExpr 0x130029c00 <col:16, col:19> 'double' <IntegralToFloating>
|       `-BinaryOperator 0x130029be0 <col:16, col:19> 'int' '<<'
|         |-IntegerLiteral 0x130029ba0 <col:16> 'int' 1
|         `-IntegerLiteral 0x130029bc0 <col:19> 'int' 26
|-FunctionDecl 0x1300277b8 <line:6:19> col:19 implicit used log 'double (double)' extern
| |-ParmVarDecl 0x1300278b8 <<invalid sloc>> <invalid sloc> 'double'
| |-BuiltinAttr 0x130027860 <<invalid sloc>> Implicit 1106
| |-ConstAttr 0x130027928 <col:19> Implicit
| `-NoThrowAttr 0x130027950 <col:19> Implicit
`-FunctionDecl 0x130027be8 <line:10:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x130027ce8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x130027d50 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x130027db8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x130027c90 <<invalid sloc>> Implicit 900
