TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x13780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13780bc00 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x13780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x13780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x13780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x13780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x13780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x13780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x13780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x13780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x13780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x13780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x13780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x13780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13780dbb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x13780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13780dbb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-FunctionDecl 0x13780e008 <dataset_diviso_filec/func548_vuln.c:1:1, line:72:1> line:1:1 invalid hostkey_method_ssh_ecdsa_init 'int (int *, const unsigned char *, int, void **)'
| |-ParmVarDecl 0x13780dd28 <col:31, col:49> col:49 invalid session 'int *'
| |-ParmVarDecl 0x13780ddd8 <line:2:27, col:48> col:48 used hostkey_data 'const unsigned char *'
| |-ParmVarDecl 0x13780de58 <line:3:27, col:34> col:34 invalid hostkey_data_len 'int'
| |-ParmVarDecl 0x13780df08 <line:4:27, col:34> col:34 used abstract 'void **'
| `-CompoundStmt 0x14080cf00 <line:5:1, line:72:1>
|   |-DeclStmt 0x13780e218 <line:7:5, col:31>
|   | |-VarDecl 0x13780e118 <col:5, col:26> col:26 used s 'const unsigned char *'
|   | `-VarDecl 0x13780e198 <col:5, col:30> col:30 used k 'const unsigned char *'
|   |-BinaryOperator 0x13780e378 <line:8:5, col:26> '<dependent type>' contains-errors ','
|   | |-BinaryOperator 0x13780e338 <col:5, col:17> '<dependent type>' contains-errors ','
|   | | |-UnaryExprOrTypeTraitExpr 0x13780e2f8 <col:5, col:12> 'unsigned long' contains-errors sizeof
|   | | | `-RecoveryExpr 0x13780e2d8 <col:12> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x13780e318 <col:17> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x13780e358 <col:26> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x140809038 <line:11:5, line:14:5>
|   | |-BinaryOperator 0x140808ce0 <line:11:8, col:29> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x140808c90 <col:8, col:20> 'int' contains-errors '!='
|   | | | |-DeclRefExpr 0x13780e398 <col:8> 'void **' lvalue ParmVar 0x13780df08 'abstract' 'void **'
|   | | | `-RecoveryExpr 0x140808c70 <col:20> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x140808cc8 <col:28, col:29> 'void *' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x140808cb0 <col:29> 'void **' <LValueToRValue>
|   | |     `-DeclRefExpr 0x140808c00 <col:29> 'void **' lvalue ParmVar 0x13780df08 'abstract' 'void **'
|   | `-CompoundStmt 0x140809018 <col:39, line:14:5>
|   |   |-CallExpr 0x140808ec0 <line:12:9, col:56> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x140808e60 <col:9> 'int ()' Function 0x140808da8 'hostkey_method_ssh_ecdsa_dtor' 'int ()'
|   |   | |-RecoveryExpr 0x140808e80 <col:39> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x140808ea0 <col:48> 'void **' lvalue ParmVar 0x13780df08 'abstract' 'void **'
|   |   `-BinaryOperator 0x140808ff8 <line:13:9, col:21> 'void *' contains-errors '='
|   |     |-UnaryOperator 0x140808fc0 <col:9, col:10> 'void *' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x140808fa8 <col:10> 'void **' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x140808ef0 <col:10> 'void **' lvalue ParmVar 0x13780df08 'abstract' 'void **'
|   |     `-RecoveryExpr 0x140808fd8 <col:21> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x140809100 <line:16:5, line:17:17>
|   | |-BinaryOperator 0x140809098 <line:16:8, col:27> 'int' contains-errors '<'
|   | | |-RecoveryExpr 0x140809058 <col:8> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x140809078 <col:27> 'int' 23
|   | `-ReturnStmt 0x1408090f0 <line:17:9, col:17>
|   |   `-UnaryOperator 0x1408090d8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1408090b8 <col:17> 'int' 1
|   |-BinaryOperator 0x140809178 <line:19:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x140809120 <col:5> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x140809160 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x140809140 <col:9> 'const unsigned char *' lvalue ParmVar 0x13780ddd8 'hostkey_data' 'const unsigned char *'
|   |-CompoundAssignOperator 0x140809388 <line:21:5, col:10> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x140809348 <col:5> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   | `-IntegerLiteral 0x140809368 <col:10> 'int' 4
|   |-IfStmt 0x140809498 <line:23:5, line:24:17>
|   | |-BinaryOperator 0x140809430 <line:23:8, col:15> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x140809410 <col:8> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x1408093d0 <col:15> 'int' 19
|   | `-ReturnStmt 0x140809488 <line:24:9, col:17>
|   |   `-UnaryOperator 0x140809470 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x140809450 <col:17> 'int' 1
|   |-IfStmt 0x14080c0b8 <line:26:5, line:37:5> has_else
|   | |-BinaryOperator 0x14080bbd0 <line:26:8, col:42> 'int' '=='
|   | | |-CallExpr 0x14080bb18 <col:8, col:37> 'int'
|   | | | |-ImplicitCastExpr 0x14080bb00 <col:8> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x140809b80 <col:8> 'int (const char *, const char *, unsigned long)' Function 0x140809930 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | | | |-ImplicitCastExpr 0x14080bb50 <col:16, col:25> 'const char *' <NoOp>
|   | | | | `-CStyleCastExpr 0x14080ba00 <col:16, col:25> 'char *' <BitCast>
|   | | | |   `-ImplicitCastExpr 0x140809bd8 <col:25> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | | | |     `-DeclRefExpr 0x140809ba0 <col:25> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x14080bb80 <col:28> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x14080bb68 <col:28> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x14080ba70 <col:28> 'char[4]' lvalue "STR"
|   | | | `-ImplicitCastExpr 0x14080bb98 <col:35> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x14080ba90 <col:35> 'int' 19
|   | | `-IntegerLiteral 0x14080bbb0 <col:42> 'int' 0
|   | |-CompoundStmt 0x14080bc08 <col:45, line:28:5>
|   | `-IfStmt 0x14080c088 <line:29:10, line:37:5> has_else
|   |   |-BinaryOperator 0x14080bdd8 <line:29:13, col:47> 'int' '=='
|   |   | |-CallExpr 0x14080bd20 <col:13, col:42> 'int'
|   |   | | |-ImplicitCastExpr 0x14080bd08 <col:13> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x14080bc18 <col:13> 'int (const char *, const char *, unsigned long)' Function 0x140809930 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   | | |-ImplicitCastExpr 0x14080bd58 <col:21, col:30> 'const char *' <NoOp>
|   |   | | | `-CStyleCastExpr 0x14080bc88 <col:21, col:30> 'char *' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x14080bc70 <col:30> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x14080bc38 <col:30> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   |   | | |-ImplicitCastExpr 0x14080bd88 <col:33> 'const char *' <NoOp>
|   |   | | | `-ImplicitCastExpr 0x14080bd70 <col:33> 'char *' <ArrayToPointerDecay>
|   |   | | |   `-StringLiteral 0x14080bcb0 <col:33> 'char[4]' lvalue "STR"
|   |   | | `-ImplicitCastExpr 0x14080bda0 <col:40> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x14080bcd0 <col:40> 'int' 19
|   |   | `-IntegerLiteral 0x14080bdb8 <col:47> 'int' 0
|   |   |-CompoundStmt 0x14080bdf8 <col:50, line:31:5>
|   |   `-IfStmt 0x14080c058 <line:32:10, line:37:5> has_else
|   |     |-BinaryOperator 0x14080bfc8 <line:32:13, col:47> 'int' '=='
|   |     | |-CallExpr 0x14080bf10 <col:13, col:42> 'int'
|   |     | | |-ImplicitCastExpr 0x14080bef8 <col:13> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x14080be08 <col:13> 'int (const char *, const char *, unsigned long)' Function 0x140809930 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |     | | |-ImplicitCastExpr 0x14080bf48 <col:21, col:30> 'const char *' <NoOp>
|   |     | | | `-CStyleCastExpr 0x14080be78 <col:21, col:30> 'char *' <BitCast>
|   |     | | |   `-ImplicitCastExpr 0x14080be60 <col:30> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     | | |     `-DeclRefExpr 0x14080be28 <col:30> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   |     | | |-ImplicitCastExpr 0x14080bf78 <col:33> 'const char *' <NoOp>
|   |     | | | `-ImplicitCastExpr 0x14080bf60 <col:33> 'char *' <ArrayToPointerDecay>
|   |     | | |   `-StringLiteral 0x14080bea0 <col:33> 'char[4]' lvalue "STR"
|   |     | | `-ImplicitCastExpr 0x14080bf90 <col:40> 'unsigned long' <IntegralCast>
|   |     | |   `-IntegerLiteral 0x14080bec0 <col:40> 'int' 19
|   |     | `-IntegerLiteral 0x14080bfa8 <col:47> 'int' 0
|   |     |-CompoundStmt 0x14080bfe8 <col:50, line:34:5>
|   |     `-CompoundStmt 0x14080c040 <line:35:10, line:37:5>
|   |       `-ReturnStmt 0x14080c030 <line:36:9, col:17>
|   |         `-UnaryOperator 0x14080c018 <col:16, col:17> 'int' prefix '-'
|   |           `-IntegerLiteral 0x14080bff8 <col:17> 'int' 1
|   |-CompoundAssignOperator 0x14080c128 <line:38:5, col:10> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x14080c0e8 <col:5> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   | `-IntegerLiteral 0x14080c108 <col:10> 'int' 19
|   |-CompoundAssignOperator 0x14080c230 <line:42:5, col:10> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x14080c1f0 <col:5> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   | `-IntegerLiteral 0x14080c210 <col:10> 'int' 4
|   |-IfStmt 0x14080c2e8 <line:44:5, line:45:17>
|   | |-RecoveryExpr 0x14080c280 <line:44:8, col:17> '_Bool' contains-errors
|   | `-ReturnStmt 0x14080c2d8 <line:45:9, col:17>
|   |   `-UnaryOperator 0x14080c2c0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x14080c2a0 <col:17> 'int' 1
|   |-IfStmt 0x14080ca78 <line:47:5, line:55:5> has_else
|   | |-RecoveryExpr 0x14080c4e8 <line:47:8, col:77> '_Bool' contains-errors
|   | |-CompoundStmt 0x14080c550 <col:80, line:49:5>
|   | | `-ReturnStmt 0x14080c540 <line:48:9, col:17>
|   | |   `-UnaryOperator 0x14080c528 <col:16, col:17> 'int' prefix '-'
|   | |     `-IntegerLiteral 0x14080c508 <col:17> 'int' 1
|   | `-IfStmt 0x14080ca48 <line:50:10, line:55:5> has_else
|   |   |-RecoveryExpr 0x14080c748 <line:50:13, col:82> '_Bool' contains-errors
|   |   |-CompoundStmt 0x14080c7b0 <col:85, line:52:5>
|   |   | `-ReturnStmt 0x14080c7a0 <line:51:9, col:17>
|   |   |   `-UnaryOperator 0x14080c788 <col:16, col:17> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x14080c768 <col:17> 'int' 1
|   |   `-IfStmt 0x14080ca28 <line:53:10, line:55:5>
|   |     |-RecoveryExpr 0x14080c9a8 <line:53:13, col:82> '_Bool' contains-errors
|   |     `-CompoundStmt 0x14080ca10 <col:85, line:55:5>
|   |       `-ReturnStmt 0x14080ca00 <line:54:9, col:17>
|   |         `-UnaryOperator 0x14080c9e8 <col:16, col:17> 'int' prefix '-'
|   |           `-IntegerLiteral 0x14080c9c8 <col:17> 'int' 1
|   |-CompoundAssignOperator 0x14080cae8 <line:57:5, col:10> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x14080caa8 <col:5> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   | `-IntegerLiteral 0x14080cac8 <col:10> 'int' 8
|   |-CompoundAssignOperator 0x14080cbf0 <line:61:5, col:10> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x14080cbb0 <col:5> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   | `-IntegerLiteral 0x14080cbd0 <col:10> 'int' 4
|   |-BinaryOperator 0x14080cc78 <line:63:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x14080cc20 <col:5> 'const unsigned char *' lvalue Var 0x13780e198 'k' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x14080cc60 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14080cc40 <col:9> 'const unsigned char *' lvalue Var 0x13780e118 's' 'const unsigned char *'
|   |-IfStmt 0x14080ce20 <line:65:5, line:66:17>
|   | |-RecoveryExpr 0x14080cdb8 <line:65:8, col:76> '_Bool' contains-errors
|   | `-ReturnStmt 0x14080ce10 <line:66:9, col:17>
|   |   `-UnaryOperator 0x14080cdf8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x14080cdd8 <col:17> 'int' 1
|   `-ReturnStmt 0x14080cef0 <line:71:5, col:12>
|     `-IntegerLiteral 0x14080ced0 <col:12> 'int' 0
`-FunctionDecl 0x140809930 <line:26:8> col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x140809a30 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x140809a98 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x140809b00 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1408099d8 <<invalid sloc>> Implicit 888
