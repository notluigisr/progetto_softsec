TranslationUnitDecl 0x124855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1248564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124855bd0 '__int128'
|-TypedefDecl 0x124856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124855bf0 'unsigned __int128'
|-TypedefDecl 0x12500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12500bc00 'struct __NSConstantString_tag'
|   `-Record 0x124856580 '__NSConstantString_tag'
|-TypedefDecl 0x12500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124855d90 '__SVInt8_t'
|-TypedefDecl 0x12500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124855db0 '__SVInt16_t'
|-TypedefDecl 0x12500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124855dd0 '__SVInt32_t'
|-TypedefDecl 0x12500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124855df0 '__SVInt64_t'
|-TypedefDecl 0x12500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124855e10 '__SVUint8_t'
|-TypedefDecl 0x12500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124855e30 '__SVUint16_t'
|-TypedefDecl 0x12500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124855e50 '__SVUint32_t'
|-TypedefDecl 0x12500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124855e70 '__SVUint64_t'
|-TypedefDecl 0x12500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124855e90 '__SVFloat16_t'
|-TypedefDecl 0x12500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1248560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1248560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1248560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1248561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1248561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1248561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1248562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1248562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1248562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124856390 '__SVBool_t'
|-TypedefDecl 0x12500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1248563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1248563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1248563f0 '__SVCount_t'
|-TypedefDecl 0x12500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12500dbb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-TypedefDecl 0x12500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12500dbb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
`-FunctionDecl 0x12500de88 <dataset_diviso_filec/func8185_vuln.c:1:1, line:44:1> line:1:5 invalid puff 'int (unsigned char *, int)'
  |-ParmVarDecl 0x12500dd08 <col:10, col:25> col:25 used dest 'unsigned char *'
  |-ParmVarDecl 0x12500dda0 <line:2:10, <invalid sloc>> col:15 invalid 'int'
  `-CompoundStmt 0x125808ec0 <line:5:1, line:44:1>
    |-DeclStmt 0x125027528 <line:6:5, col:19>
    | |-RecordDecl 0x12500df40 <col:5, col:12> col:12 struct state
    | `-VarDecl 0x12500e038 <col:5, col:18> col:18 referenced invalid s 'struct state'
    |-DeclStmt 0x125027658 <line:7:5, col:19>
    | |-VarDecl 0x125027558 <col:5, col:9> col:9 used last 'int'
    | `-VarDecl 0x1250275d8 <col:5, col:15> col:15 used type 'int'
    |-DeclStmt 0x1250276f0 <line:8:5, col:12>
    | `-VarDecl 0x125027688 <col:5, col:9> col:9 used err 'int'
    |-BinaryOperator 0x1250277b8 <line:11:5, col:13> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125027750 <col:5, col:7> '<dependent type>' contains-errors lvalue .out
    | | `-RecoveryExpr 0x125027728 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125027708 <col:5> 'struct state' lvalue Var 0x12500e038 's' 'struct state'
    | `-DeclRefExpr 0x125027798 <col:13> 'unsigned char *' lvalue ParmVar 0x12500dd08 'dest' 'unsigned char *'
    |-BinaryOperator 0x125027920 <line:12:5, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125027820 <col:5, col:7> '<dependent type>' contains-errors lvalue .outlen
    | | `-RecoveryExpr 0x1250277f8 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1250277d8 <col:5> 'struct state' lvalue Var 0x12500e038 's' 'struct state'
    | `-UnaryOperator 0x125027908 <col:16, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x1250278f0 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x1250278d0 <col:17> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1250279f0 <line:13:5, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125027988 <col:5, col:7> '<dependent type>' contains-errors lvalue .outcnt
    | | `-RecoveryExpr 0x125027960 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125027940 <col:5> 'struct state' lvalue Var 0x12500e038 's' 'struct state'
    | `-IntegerLiteral 0x1250279d0 <col:16> 'int' 0
    |-BinaryOperator 0x125027af8 <line:16:5, col:12> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125027a58 <col:5, col:7> '<dependent type>' contains-errors lvalue .in
    | | `-RecoveryExpr 0x125027a30 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125027a10 <col:5> 'struct state' lvalue Var 0x12500e038 's' 'struct state'
    | `-RecoveryExpr 0x125027ad8 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x125027c60 <line:17:5, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125027b60 <col:5, col:7> '<dependent type>' contains-errors lvalue .inlen
    | | `-RecoveryExpr 0x125027b38 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125027b18 <col:5> 'struct state' lvalue Var 0x12500e038 's' 'struct state'
    | `-UnaryOperator 0x125027c48 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x125027c30 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x125027c10 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x125027d30 <line:18:5, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125027cc8 <col:5, col:7> '<dependent type>' contains-errors lvalue .incnt
    | | `-RecoveryExpr 0x125027ca0 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125027c80 <col:5> 'struct state' lvalue Var 0x12500e038 's' 'struct state'
    | `-IntegerLiteral 0x125027d10 <col:15> 'int' 0
    |-BinaryOperator 0x125027e00 <line:19:5, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125027d98 <col:5, col:7> '<dependent type>' contains-errors lvalue .bitbuf
    | | `-RecoveryExpr 0x125027d70 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125027d50 <col:5> 'struct state' lvalue Var 0x12500e038 's' 'struct state'
    | `-IntegerLiteral 0x125027de0 <col:16> 'int' 0
    |-BinaryOperator 0x125027ed0 <line:20:5, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125027e68 <col:5, col:7> '<dependent type>' contains-errors lvalue .bitcnt
    | | `-RecoveryExpr 0x125027e40 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125027e20 <col:5> 'struct state' lvalue Var 0x12500e038 's' 'struct state'
    | `-IntegerLiteral 0x125027eb0 <col:16> 'int' 0
    |-IfStmt 0x125808b10 <line:23:5, line:36:5> has_else
    | |-BinaryOperator 0x1250281a0 <line:23:9, col:26> 'int' contains-errors '!='
    | | |-CallExpr 0x125028158 <col:9, col:21> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1250280d0 <col:9> 'int ()' Function 0x125027f98 'setjmp' 'int ()'
    | | | `-CXXDependentScopeMemberExpr 0x125028110 <col:16, col:18> '<dependent type>' contains-errors lvalue .env
    | | |   `-RecoveryExpr 0x1250280f0 <col:16> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x125028180 <col:26> 'int' 0
    | |-BinaryOperator 0x125028200 <line:24:9, col:15> 'int' '='
    | | |-DeclRefExpr 0x1250281c0 <col:9> 'int' lvalue Var 0x125027688 'err' 'int'
    | | `-IntegerLiteral 0x1250281e0 <col:15> 'int' 2
    | `-CompoundStmt 0x125808af8 <line:25:10, line:36:5>
    |   `-DoStmt 0x125808ad8 <line:27:9, line:35:23>
    |     |-CompoundStmt 0x125808a58 <line:27:12, line:35:9>
    |     | |-BinaryOperator 0x1250283c8 <line:28:13, col:30> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x125028220 <col:13> 'int' lvalue Var 0x125027558 'last' 'int'
    |     | | `-CallExpr 0x125028398 <col:20, col:30> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x125028320 <col:20> 'int ()' Function 0x125028268 'bits' 'int ()'
    |     | |   |-UnaryOperator 0x125028360 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |   | `-RecoveryExpr 0x125028340 <col:26> '<dependent type>' contains-errors lvalue
    |     | |   `-IntegerLiteral 0x125028378 <col:29> 'int' 1
    |     | |-BinaryOperator 0x1258082c8 <line:29:13, col:30> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x125808200 <col:13> 'int' lvalue Var 0x1250275d8 'type' 'int'
    |     | | `-CallExpr 0x125808298 <col:20, col:30> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x125808220 <col:20> 'int ()' Function 0x125028268 'bits' 'int ()'
    |     | |   |-UnaryOperator 0x125808260 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |   | `-RecoveryExpr 0x125808240 <col:26> '<dependent type>' contains-errors lvalue
    |     | |   `-IntegerLiteral 0x125808278 <col:29> 'int' 2
    |     | |-BinaryOperator 0x125808998 <line:30:13, line:33:24> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x1258082e8 <line:30:13> 'int' lvalue Var 0x125027688 'err' 'int'
    |     | | `-ConditionalOperator 0x125808968 <col:19, line:33:24> '<dependent type>' contains-errors
    |     | |   |-BinaryOperator 0x125808360 <line:30:19, col:27> 'int' '=='
    |     | |   | |-ImplicitCastExpr 0x125808348 <col:19> 'int' <LValueToRValue>
    |     | |   | | `-DeclRefExpr 0x125808308 <col:19> 'int' lvalue Var 0x1250275d8 'type' 'int'
    |     | |   | `-IntegerLiteral 0x125808328 <col:27> 'int' 0
    |     | |   |-CallExpr 0x1258084b8 <col:31, col:40> '<dependent type>' contains-errors
    |     | |   | |-DeclRefExpr 0x125808460 <col:31> 'int ()' Function 0x1258083a8 'stored' 'int ()'
    |     | |   | `-UnaryOperator 0x1258084a0 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |   |   `-RecoveryExpr 0x125808480 <col:39> '<dependent type>' contains-errors lvalue
    |     | |   `-ParenExpr 0x125808948 <line:31:19, line:33:24> '<dependent type>' contains-errors
    |     | |     `-ConditionalOperator 0x125808918 <line:31:20, line:33:23> '<dependent type>' contains-errors
    |     | |       |-BinaryOperator 0x125808538 <line:31:20, col:28> 'int' '=='
    |     | |       | |-ImplicitCastExpr 0x125808520 <col:20> 'int' <LValueToRValue>
    |     | |       | | `-DeclRefExpr 0x1258084e0 <col:20> 'int' lvalue Var 0x1250275d8 'type' 'int'
    |     | |       | `-IntegerLiteral 0x125808500 <col:28> 'int' 1
    |     | |       |-CallExpr 0x125808690 <col:32, col:40> '<dependent type>' contains-errors
    |     | |       | |-DeclRefExpr 0x125808638 <col:32> 'int ()' Function 0x125808580 'fixed' 'int ()'
    |     | |       | `-UnaryOperator 0x125808678 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |       |   `-RecoveryExpr 0x125808658 <col:39> '<dependent type>' contains-errors lvalue
    |     | |       `-ParenExpr 0x1258088f8 <line:32:20, line:33:23> '<dependent type>' contains-errors
    |     | |         `-ConditionalOperator 0x1258088c8 <line:32:21, line:33:22> '<dependent type>' contains-errors
    |     | |           |-BinaryOperator 0x125808710 <line:32:21, col:29> 'int' '=='
    |     | |           | |-ImplicitCastExpr 0x1258086f8 <col:21> 'int' <LValueToRValue>
    |     | |           | | `-DeclRefExpr 0x1258086b8 <col:21> 'int' lvalue Var 0x1250275d8 'type' 'int'
    |     | |           | `-IntegerLiteral 0x1258086d8 <col:29> 'int' 2
    |     | |           |-CallExpr 0x125808868 <col:33, col:43> '<dependent type>' contains-errors
    |     | |           | |-DeclRefExpr 0x125808810 <col:33> 'int ()' Function 0x125808758 'dynamic' 'int ()'
    |     | |           | `-UnaryOperator 0x125808850 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |           |   `-RecoveryExpr 0x125808830 <col:42> '<dependent type>' contains-errors lvalue
    |     | |           `-UnaryOperator 0x1258088b0 <line:33:21, col:22> 'int' prefix '-'
    |     | |             `-IntegerLiteral 0x125808890 <col:22> 'int' 1
    |     | `-IfStmt 0x125808a38 <line:34:13, col:27>
    |     |   |-BinaryOperator 0x125808a10 <col:17, col:24> 'int' '!='
    |     |   | |-ImplicitCastExpr 0x1258089f8 <col:17> 'int' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x1258089b8 <col:17> 'int' lvalue Var 0x125027688 'err' 'int'
    |     |   | `-IntegerLiteral 0x1258089d8 <col:24> 'int' 0
    |     |   `-BreakStmt 0x125808a30 <col:27>
    |     `-UnaryOperator 0x125808ac0 <line:35:18, col:19> 'int' prefix '!' cannot overflow
    |       `-ImplicitCastExpr 0x125808aa8 <col:19> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x125808a88 <col:19> 'int' lvalue Var 0x125027558 'last' 'int'
    |-IfStmt 0x125808e58 <line:39:5, line:42:5>
    | |-BinaryOperator 0x125808b98 <line:39:9, col:16> 'int' '<='
    | | |-ImplicitCastExpr 0x125808b80 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x125808b40 <col:9> 'int' lvalue Var 0x125027688 'err' 'int'
    | | `-IntegerLiteral 0x125808b60 <col:16> 'int' 0
    | `-CompoundStmt 0x125808e38 <col:19, line:42:5>
    |   |-BinaryOperator 0x125808cd8 <line:40:9, col:22> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x125808cc0 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x125808ca8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x125808c88 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x125808c20 <col:20, col:22> '<dependent type>' contains-errors lvalue .outcnt
    |   |   `-RecoveryExpr 0x125808c00 <col:20> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x125808e18 <line:41:9, col:24> '<dependent type>' contains-errors '='
    |     |-UnaryOperator 0x125808e00 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x125808de8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x125808dc8 <col:10> '<dependent type>' contains-errors lvalue
    |     `-CXXDependentScopeMemberExpr 0x125808d60 <col:22, col:24> '<dependent type>' contains-errors lvalue .incnt
    |       `-RecoveryExpr 0x125808d40 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x125808eb0 <line:43:5, col:12>
      `-ImplicitCastExpr 0x125808e98 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x125808e78 <col:12> 'int' lvalue Var 0x125027688 'err' 'int'
