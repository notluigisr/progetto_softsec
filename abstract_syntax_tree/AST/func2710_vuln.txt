TranslationUnitDecl 0x130055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130055bd0 '__int128'
|-TypedefDecl 0x130056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130055bf0 'unsigned __int128'
|-TypedefDecl 0x12800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12800bc00 'struct __NSConstantString_tag'
|   `-Record 0x130056580 '__NSConstantString_tag'
|-TypedefDecl 0x12800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130055d90 '__SVInt8_t'
|-TypedefDecl 0x12800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130055db0 '__SVInt16_t'
|-TypedefDecl 0x12800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130055dd0 '__SVInt32_t'
|-TypedefDecl 0x12800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130055df0 '__SVInt64_t'
|-TypedefDecl 0x12800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130055e10 '__SVUint8_t'
|-TypedefDecl 0x12800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130055e30 '__SVUint16_t'
|-TypedefDecl 0x12800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130055e50 '__SVUint32_t'
|-TypedefDecl 0x12800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130055e70 '__SVUint64_t'
|-TypedefDecl 0x12800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130055e90 '__SVFloat16_t'
|-TypedefDecl 0x12800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1300560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1300560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1300560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1300561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1300561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1300561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130056390 '__SVBool_t'
|-TypedefDecl 0x12800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300563f0 '__SVCount_t'
|-TypedefDecl 0x12800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-TypedefDecl 0x12800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
`-FunctionDecl 0x12800de58 <dataset_diviso_filec/func2710_vuln.c:1:1, line:34:1> line:1:1 invalid get_word_rgb_row 'int (int, int)'
  |-ParmVarDecl 0x12800dcf0 <col:18, col:33> col:33 invalid cinfo 'int'
  |-ParmVarDecl 0x12800dd70 <col:40, col:57> col:57 invalid sinfo 'int'
  `-CompoundStmt 0x128029390 <line:3:1, line:34:1>
    |-DeclStmt 0x12800df90 <line:5:3, col:24>
    | `-VarDecl 0x12800df28 <col:3, col:21> col:21 referenced invalid ptr 'int' register
    |-DeclStmt 0x12800e060 <line:6:3, col:29>
    | `-VarDecl 0x12800dff8 <col:3, col:20> col:20 referenced invalid bufferptr 'int *' register
    |-DeclStmt 0x12800e158 <line:7:3, col:46>
    | `-VarDecl 0x12800e090 <col:3, col:21> col:21 invalid rescale 'int *' register
    |-DeclStmt 0x12800e2b8 <line:9:3, col:39>
    | `-VarDecl 0x12800e188 <col:3, col:33> col:16 used maxval 'unsigned int' cinit
    |   `-CXXDependentScopeMemberExpr 0x12800e270 <col:25, col:33> '<dependent type>' contains-errors lvalue ->maxval
    |     `-RecoveryExpr 0x12800e250 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128027a18 <line:11:3, line:12:34>
    | |-UnaryOperator 0x128027848 <line:11:7, col:77> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x128027810 <col:8, col:77> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1280274b8 <col:8> 'int ()' Function 0x128027400 'ReadOK' 'int ()'
    | |   |-CXXDependentScopeMemberExpr 0x1280276f8 <col:15, col:27> '<dependent type>' contains-errors lvalue .input_file
    | |   | `-CXXDependentScopeMemberExpr 0x1280276b0 <col:15, col:23> '<dependent type>' contains-errors lvalue ->pub
    | |   |   `-RecoveryExpr 0x128027690 <col:15> '<dependent type>' contains-errors lvalue
    | |   |-CXXDependentScopeMemberExpr 0x128027760 <col:39, col:47> '<dependent type>' contains-errors lvalue ->iobuffer
    | |   | `-RecoveryExpr 0x128027740 <col:39> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x1280277c8 <col:57, col:65> '<dependent type>' contains-errors lvalue ->buffer_width
    | |     `-RecoveryExpr 0x1280277a8 <col:57> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x1280279e8 <line:12:5, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128027940 <col:5> 'int ()' Function 0x128027888 'ERREXIT' 'int ()'
    |   |-RecoveryExpr 0x128027960 <col:13> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1280279c8 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x128027c78 <line:14:3, col:23> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x128027b68 <col:3> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x128027b48 <col:3> 'int *' lvalue Var 0x12800dff8 'bufferptr' 'int *'
    | `-CXXDependentScopeMemberExpr 0x128027c30 <col:15, col:23> '<dependent type>' contains-errors lvalue ->iobuffer
    |   `-RecoveryExpr 0x128027c10 <col:15> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x128029328 <line:15:3, line:32:3>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x128027db0 <line:15:34, col:40> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x128027d90 <col:34> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x128027d50 <col:40> 'int' 0
    | |-<<<NULL>>>
    | `-CompoundStmt 0x1280292c8 <col:50, line:32:3>
    |   |-DeclStmt 0x128027e50 <line:16:5, col:31>
    |   | `-VarDecl 0x128027de8 <col:5, col:27> col:27 used temp 'unsigned int' register
    |   |-BinaryOperator 0x128028040 <line:17:5, col:34> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x128027e68 <col:5> 'unsigned int' lvalue Var 0x128027de8 'temp' 'unsigned int'
    |   | `-BinaryOperator 0x128028020 <col:13, col:34> '<dependent type>' contains-errors '<<'
    |   |   |-CallExpr 0x128027fd8 <col:13, col:29> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x128027f68 <col:13> 'int ()' Function 0x128027eb0 'UCH' 'int ()'
    |   |   | `-UnaryOperator 0x128027fc0 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   |   `-UnaryOperator 0x128027fa8 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |   |     `-RecoveryExpr 0x128027f88 <col:18> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x128028000 <col:34> 'int' 8
    |   |-CompoundAssignOperator 0x128028118 <line:18:5, col:29> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x128028060 <col:5> 'unsigned int' lvalue Var 0x128027de8 'temp' 'unsigned int'
    |   | `-CallExpr 0x1280280f0 <col:13, col:29> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x128028080 <col:13> 'int ()' Function 0x128027eb0 'UCH' 'int ()'
    |   |   `-UnaryOperator 0x1280280d8 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     `-UnaryOperator 0x1280280c0 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |       `-RecoveryExpr 0x1280280a0 <col:18> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x1280282f8 <line:21:5, col:26> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x128028250 <col:5, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x128028238 <col:6, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | |   `-RecoveryExpr 0x128028218 <col:6> '<dependent type>' contains-errors lvalue
    |   | `-ArraySubscriptExpr 0x1280282d8 <col:14, col:26> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x1280282a8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x128028268 <col:14> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x1280282c0 <col:22> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x128028288 <col:22> 'unsigned int' lvalue Var 0x128027de8 'temp' 'unsigned int'
    |   |-BinaryOperator 0x128028c20 <line:22:5, col:34> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x128028318 <col:5> 'unsigned int' lvalue Var 0x128027de8 'temp' 'unsigned int'
    |   | `-BinaryOperator 0x128028c00 <col:13, col:34> '<dependent type>' contains-errors '<<'
    |   |   |-CallExpr 0x1280283a8 <col:13, col:29> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x128028338 <col:13> 'int ()' Function 0x128027eb0 'UCH' 'int ()'
    |   |   | `-UnaryOperator 0x128028390 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   |   `-UnaryOperator 0x128028378 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |   |     `-RecoveryExpr 0x128028358 <col:18> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x1280283d0 <col:34> 'int' 8
    |   |-CompoundAssignOperator 0x128028cf8 <line:23:5, col:29> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x128028c40 <col:5> 'unsigned int' lvalue Var 0x128027de8 'temp' 'unsigned int'
    |   | `-CallExpr 0x128028cd0 <col:13, col:29> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x128028c60 <col:13> 'int ()' Function 0x128027eb0 'UCH' 'int ()'
    |   |   `-UnaryOperator 0x128028cb8 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     `-UnaryOperator 0x128028ca0 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |       `-RecoveryExpr 0x128028c80 <col:18> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x128028ed8 <line:26:5, col:26> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x128028e30 <col:5, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x128028e18 <col:6, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | |   `-RecoveryExpr 0x128028df8 <col:6> '<dependent type>' contains-errors lvalue
    |   | `-ArraySubscriptExpr 0x128028eb8 <col:14, col:26> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x128028e88 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x128028e48 <col:14> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x128028ea0 <col:22> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x128028e68 <col:22> 'unsigned int' lvalue Var 0x128027de8 'temp' 'unsigned int'
    |   |-BinaryOperator 0x128028ff0 <line:27:5, col:34> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x128028ef8 <col:5> 'unsigned int' lvalue Var 0x128027de8 'temp' 'unsigned int'
    |   | `-BinaryOperator 0x128028fd0 <col:13, col:34> '<dependent type>' contains-errors '<<'
    |   |   |-CallExpr 0x128028f88 <col:13, col:29> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x128028f18 <col:13> 'int ()' Function 0x128027eb0 'UCH' 'int ()'
    |   |   | `-UnaryOperator 0x128028f70 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   |   `-UnaryOperator 0x128028f58 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |   |     `-RecoveryExpr 0x128028f38 <col:18> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x128028fb0 <col:34> 'int' 8
    |   |-CompoundAssignOperator 0x1280290c8 <line:28:5, col:29> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x128029010 <col:5> 'unsigned int' lvalue Var 0x128027de8 'temp' 'unsigned int'
    |   | `-CallExpr 0x1280290a0 <col:13, col:29> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x128029030 <col:13> 'int ()' Function 0x128027eb0 'UCH' 'int ()'
    |   |   `-UnaryOperator 0x128029088 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     `-UnaryOperator 0x128029070 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |       `-RecoveryExpr 0x128029050 <col:18> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x1280292a8 <line:31:5, col:26> '<dependent type>' contains-errors '='
    |     |-UnaryOperator 0x128029200 <col:5, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | `-UnaryOperator 0x1280291e8 <col:6, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     |   `-RecoveryExpr 0x1280291c8 <col:6> '<dependent type>' contains-errors lvalue
    |     `-ArraySubscriptExpr 0x128029288 <col:14, col:26> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x128029258 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x128029218 <col:14> '<dependent type>' contains-errors lvalue
    |       `-ImplicitCastExpr 0x128029270 <col:22> 'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x128029238 <col:22> 'unsigned int' lvalue Var 0x128027de8 'temp' 'unsigned int'
    `-ReturnStmt 0x128029380 <line:33:3, col:10>
      `-IntegerLiteral 0x128029360 <col:10> 'int' 1
