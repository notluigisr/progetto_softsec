TranslationUnitDecl 0x13d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d855bd0 '__int128'
|-TypedefDecl 0x13d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d855bf0 'unsigned __int128'
|-TypedefDecl 0x13e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x13d856580 '__NSConstantString_tag'
|-TypedefDecl 0x13e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d855d90 '__SVInt8_t'
|-TypedefDecl 0x13e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d855db0 '__SVInt16_t'
|-TypedefDecl 0x13e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d855dd0 '__SVInt32_t'
|-TypedefDecl 0x13e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d855df0 '__SVInt64_t'
|-TypedefDecl 0x13e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d855e10 '__SVUint8_t'
|-TypedefDecl 0x13e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d855e30 '__SVUint16_t'
|-TypedefDecl 0x13e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d855e50 '__SVUint32_t'
|-TypedefDecl 0x13e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d855e70 '__SVUint64_t'
|-TypedefDecl 0x13e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d855e90 '__SVFloat16_t'
|-TypedefDecl 0x13e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d856390 '__SVBool_t'
|-TypedefDecl 0x13e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d8563f0 '__SVCount_t'
|-TypedefDecl 0x13e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e00dbb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-TypedefDecl 0x13e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e00dbb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-FunctionDecl 0x13e00dda8 <dataset_diviso_filec/func11776_vuln.c:2:1, line:45:24> line:2:1 PHP_MINFO_FUNCTION 'int (int)'
| |-ParmVarDecl 0x13e00dcd8 <col:20> col:20 mcrypt 'int'
| `-CompoundStmt 0x13e02a8b0 <line:3:1, line:45:24>
|   |-DeclStmt 0x13e00df50 <line:4:2, col:16>
|   | `-VarDecl 0x13e00dee8 <col:2, col:9> col:9 used modules 'char **'
|   |-DeclStmt 0x13e00e078 <line:5:2, col:24>
|   | `-VarDecl 0x13e00e010 <col:2, col:23> col:7 used mcrypt_api_no 'char[16]'
|   |-DeclStmt 0x13e00e1a8 <line:6:2, col:14>
|   | |-VarDecl 0x13e00e0a8 <col:2, col:6> col:6 used i 'int'
|   | `-VarDecl 0x13e00e128 <col:2, col:9> col:9 used count 'int'
|   |-BinaryOperator 0x13e0267a0 <line:10:2, col:62> 'char **' contains-errors '='
|   | |-DeclRefExpr 0x13e00e1d8 <col:2> 'char **' lvalue Var 0x13e00dee8 'modules' 'char **'
|   | `-CallExpr 0x13e026770 <col:12, col:62> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13e00e310 <col:12> 'int ()' Function 0x13e00e258 'mcrypt_list_algorithms' 'int ()'
|   |   |-CallExpr 0x13e026748 <col:35, col:53> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13e026610 <col:35> 'int ()' Function 0x13e00e358 'MCG' 'int ()'
|   |   | `-RecoveryExpr 0x13e026728 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x13e0266c0 <col:56, col:57> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x13e026670 <col:57> 'int' lvalue Var 0x13e00e128 'count' 'int'
|   |-IfStmt 0x13e026a80 <line:11:2, line:13:2>
|   | |-BinaryOperator 0x13e026818 <line:11:6, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x13e026800 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13e0267c0 <col:6> 'int' lvalue Var 0x13e00e128 'count' 'int'
|   | | `-IntegerLiteral 0x13e0267e0 <col:15> 'int' 0
|   | `-CompoundStmt 0x13e026a68 <col:18, line:13:2>
|   |   `-CallExpr 0x13e026a38 <line:12:3, col:33> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13e026918 <col:3> 'int ()' Function 0x13e026860 'smart_str_appends' 'int ()'
|   |     |-UnaryOperator 0x13e026a20 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x13e026a00 <col:22> '<dependent type>' contains-errors lvalue
|   |     `-StringLiteral 0x13e0269b0 <col:28> 'char[4]' lvalue "STR"
|   |-ForStmt 0x13e026f90 <line:14:2, line:17:2>
|   | |-BinaryOperator 0x13e026ae0 <line:14:7, col:11> 'int' '='
|   | | |-DeclRefExpr 0x13e026aa0 <col:7> 'int' lvalue Var 0x13e00e0a8 'i' 'int'
|   | | `-IntegerLiteral 0x13e026ac0 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13e026b70 <col:14, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x13e026b40 <col:14> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13e026b00 <col:14> 'int' lvalue Var 0x13e00e0a8 'i' 'int'
|   | | `-ImplicitCastExpr 0x13e026b58 <col:18> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13e026b20 <col:18> 'int' lvalue Var 0x13e00e128 'count' 'int'
|   | |-UnaryOperator 0x13e026bb0 <col:25, col:26> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13e026b90 <col:25> 'int' lvalue Var 0x13e00e0a8 'i' 'int'
|   | `-CompoundStmt 0x13e026f70 <col:30, line:17:2>
|   |   |-CallExpr 0x13e026d60 <line:15:3, col:38> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13e026bc8 <col:3> 'int ()' Function 0x13e026860 'smart_str_appends' 'int ()'
|   |   | |-UnaryOperator 0x13e026cf8 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x13e026cd8 <col:22> '<dependent type>' contains-errors lvalue
|   |   | `-ArraySubscriptExpr 0x13e026d40 <col:28, col:37> 'char *' lvalue
|   |   |   |-ImplicitCastExpr 0x13e026d10 <col:28> 'char **' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x13e026c18 <col:28> 'char **' lvalue Var 0x13e00dee8 'modules' 'char **'
|   |   |   `-ImplicitCastExpr 0x13e026d28 <col:36> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13e026c38 <col:36> 'int' lvalue Var 0x13e00e0a8 'i' 'int'
|   |   `-CallExpr 0x13e026f40 <line:16:3, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13e026e70 <col:3> 'int ()' Function 0x13e026db8 'smart_str_appendc' 'int ()'
|   |     |-UnaryOperator 0x13e026f28 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x13e026f08 <col:22> '<dependent type>' contains-errors lvalue
|   |     `-CharacterLiteral 0x13e026ec0 <col:28> 'int' 32
|   |-CallExpr 0x13e027158 <line:18:2, col:19> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13e0270a8 <col:2> 'int ()' Function 0x13e026ff0 'smart_str_0' 'int ()'
|   | `-UnaryOperator 0x13e027140 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x13e027120 <col:15> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13e027308 <line:19:2, col:30> 'int'
|   | |-ImplicitCastExpr 0x13e0272f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e027260 <col:2> 'int ()' Function 0x13e0271a8 'mcrypt_free_p' 'int ()'
|   | |-ImplicitCastExpr 0x13e027338 <col:16> 'char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x13e027280 <col:16> 'char **' lvalue Var 0x13e00dee8 'modules' 'char **'
|   | `-ImplicitCastExpr 0x13e027350 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x13e0272a0 <col:25> 'int' lvalue Var 0x13e00e128 'count' 'int'
|   |-BinaryOperator 0x13e029200 <line:21:2, col:52> 'char **' contains-errors '='
|   | |-DeclRefExpr 0x13e027368 <col:2> 'char **' lvalue Var 0x13e00dee8 'modules' 'char **'
|   | `-CallExpr 0x13e0275b8 <col:12, col:52> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13e027468 <col:12> 'int ()' Function 0x13e0273b0 'mcrypt_list_modes' 'int ()'
|   |   |-CallExpr 0x13e027590 <col:30, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13e027488 <col:30> 'int ()' Function 0x13e00e358 'MCG' 'int ()'
|   |   | `-RecoveryExpr 0x13e027570 <col:34> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x13e027508 <col:46, col:47> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x13e0274e8 <col:47> 'int' lvalue Var 0x13e00e128 'count' 'int'
|   |-IfStmt 0x13e0293b8 <line:22:2, line:24:2>
|   | |-BinaryOperator 0x13e029278 <line:22:6, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x13e029260 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13e029220 <col:6> 'int' lvalue Var 0x13e00e128 'count' 'int'
|   | | `-IntegerLiteral 0x13e029240 <col:15> 'int' 0
|   | `-CompoundStmt 0x13e0293a0 <col:18, line:24:2>
|   |   `-CallExpr 0x13e029370 <line:23:3, col:33> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13e029298 <col:3> 'int ()' Function 0x13e026860 'smart_str_appends' 'int ()'
|   |     |-UnaryOperator 0x13e029358 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x13e029338 <col:22> '<dependent type>' contains-errors lvalue
|   |     `-StringLiteral 0x13e0292e8 <col:28> 'char[4]' lvalue "STR"
|   |-ForStmt 0x13e0295f8 <line:25:2, line:28:2>
|   | |-BinaryOperator 0x13e029418 <line:25:7, col:11> 'int' '='
|   | | |-DeclRefExpr 0x13e0293d8 <col:7> 'int' lvalue Var 0x13e00e0a8 'i' 'int'
|   | | `-IntegerLiteral 0x13e0293f8 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13e0294a8 <col:14, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x13e029478 <col:14> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13e029438 <col:14> 'int' lvalue Var 0x13e00e0a8 'i' 'int'
|   | | `-ImplicitCastExpr 0x13e029490 <col:18> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13e029458 <col:18> 'int' lvalue Var 0x13e00e128 'count' 'int'
|   | |-UnaryOperator 0x13e0294e8 <col:25, col:26> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13e0294c8 <col:25> 'int' lvalue Var 0x13e00e0a8 'i' 'int'
|   | `-CompoundStmt 0x13e0295e8 <col:30, line:28:2>
|   |-CallExpr 0x13e0296c8 <line:30:2, col:31> 'int'
|   | |-ImplicitCastExpr 0x13e0296b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e029650 <col:2> 'int ()' Function 0x13e0271a8 'mcrypt_free_p' 'int ()'
|   | |-ImplicitCastExpr 0x13e0296f8 <col:17> 'char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x13e029670 <col:17> 'char **' lvalue Var 0x13e00dee8 'modules' 'char **'
|   | `-ImplicitCastExpr 0x13e029710 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x13e029690 <col:26> 'int' lvalue Var 0x13e00e128 'count' 'int'
|   |-CallExpr 0x13e029ba0 <line:34:2, col:29> 'int'
|   | `-ImplicitCastExpr 0x13e029b88 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x13e029b68 <col:2> 'int ()' Function 0x13e029ab0 'php_info_print_table_start' 'int ()'
|   |-CallExpr 0x13e029d18 <line:35:2, col:38> 'int'
|   | |-ImplicitCastExpr 0x13e029d00 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e029ca0 <col:2> 'int ()' Function 0x13e029be8 'php_info_print_table_header' 'int ()'
|   | |-IntegerLiteral 0x13e029cc0 <col:30> 'int' 2
|   | `-ImplicitCastExpr 0x13e029d48 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x13e029ce0 <col:33> 'char[4]' lvalue "STR"
|   |-CallExpr 0x13e029dd8 <line:36:2, col:38> 'int'
|   | |-ImplicitCastExpr 0x13e029dc0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e029d60 <col:2> 'int ()' Function 0x13e029be8 'php_info_print_table_header' 'int ()'
|   | |-IntegerLiteral 0x13e029d80 <col:30> 'int' 2
|   | `-ImplicitCastExpr 0x13e029e08 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x13e029da0 <col:33> 'char[4]' lvalue "STR"
|   |-CallExpr 0x13e029ff8 <line:38:2, col:50> 'int'
|   | |-ImplicitCastExpr 0x13e029fe0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e029f60 <col:2> 'int ()' Function 0x13e029e48 'php_info_print_table_row' 'int ()'
|   | |-IntegerLiteral 0x13e029f80 <col:27> 'int' 2
|   | |-ImplicitCastExpr 0x13e02a030 <col:30> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x13e029fa0 <col:30> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x13e02a048 <col:37> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x13e029fc0 <col:37> 'char[16]' lvalue Var 0x13e00e010 'mcrypt_api_no' 'char[16]'
|   |-CallExpr 0x13e02a758 <line:43:2, col:27> 'int'
|   | `-ImplicitCastExpr 0x13e02a740 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x13e02a720 <col:2> 'int ()' Function 0x13e02a668 'php_info_print_table_end' 'int ()'
|   `-CallExpr 0x13e02a890 <line:45:2, col:22> 'int'
|     `-ImplicitCastExpr 0x13e02a878 <col:2> 'int (*)()' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x13e02a858 <col:2> 'int ()' Function 0x13e02a7a0 'DISPLAY_INI_ENTRIES' 'int ()'
`-FunctionDecl 0x13e029780 <line:32:2> col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x13e029880 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x13e0298e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x13e029950 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x13e029828 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x13e0299d0 <col:2> Implicit printf 3 4
