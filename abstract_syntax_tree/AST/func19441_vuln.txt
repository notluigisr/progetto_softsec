TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10580bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10580dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10580dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x105827430 <dataset_diviso_filec/func19441_vuln.c:1:1, line:18:1> line:1:13 invalid tulip_copy_tx_buffers 'void (int *, struct tulip_descriptor *)' static
  |-ParmVarDecl 0x10580dd28 <col:35, col:47> col:47 referenced invalid s 'int *'
  |-ParmVarDecl 0x10580e318 <col:50, col:75> col:75 used desc 'struct tulip_descriptor *'
  `-CompoundStmt 0x1058281c8 <line:2:1, line:18:1>
    |-DeclStmt 0x105827618 <line:3:5, col:79>
    | `-VarDecl 0x105827500 <col:5, col:9> col:9 used len1 'int'
    |-DeclStmt 0x105827760 <line:4:5, col:79>
    | `-VarDecl 0x105827648 <col:5, col:9> col:9 used len2 'int'
    |-IfStmt 0x105827c60 <line:6:5, line:10:5>
    | |-ImplicitCastExpr 0x105827798 <line:6:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x105827778 <col:9> 'int' lvalue Var 0x105827500 'len1' 'int'
    | `-CompoundStmt 0x105827c40 <col:15, line:10:5>
    |   |-CallExpr 0x105827b20 <line:7:9, line:8:48> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x105827910 <line:7:9> 'int ()' Function 0x105827858 'pci_dma_read' 'int ()'
    |   | |-UnaryOperator 0x105827998 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x105827950 <col:23, col:26> '<dependent type>' contains-errors lvalue ->dev
    |   | |   `-RecoveryExpr 0x105827930 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x1058279e8 <col:31, col:37> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1058279b0 <col:31> 'struct tulip_descriptor *' lvalue ParmVar 0x10580e318 'desc' 'struct tulip_descriptor *'
    |   | |-BinaryOperator 0x105827ae0 <line:8:13, col:30> '<dependent type>' contains-errors '+'
    |   | | |-CXXDependentScopeMemberExpr 0x105827a30 <col:13, col:16> '<dependent type>' contains-errors lvalue ->tx_frame
    |   | | | `-RecoveryExpr 0x105827a10 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-CXXDependentScopeMemberExpr 0x105827a98 <col:27, col:30> '<dependent type>' contains-errors lvalue ->tx_frame_len
    |   | |   `-RecoveryExpr 0x105827a78 <col:27> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x105827b00 <col:44> 'int' lvalue Var 0x105827500 'len1' 'int'
    |   `-CompoundAssignOperator 0x105827c10 <line:9:9, col:28> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-CXXDependentScopeMemberExpr 0x105827ba8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->tx_frame_len
    |     | `-RecoveryExpr 0x105827b80 <col:9> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x105827b60 <col:9> 'int *' lvalue ParmVar 0x10580dd28 's' 'int *'
    |     `-DeclRefExpr 0x105827bf0 <col:28> 'int' lvalue Var 0x105827500 'len1' 'int'
    |-IfStmt 0x105828008 <line:12:5, line:16:5>
    | |-ImplicitCastExpr 0x105827ca0 <line:12:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x105827c80 <col:9> 'int' lvalue Var 0x105827648 'len2' 'int'
    | `-CompoundStmt 0x105827fe8 <col:15, line:16:5>
    |   |-CallExpr 0x105827ec8 <line:13:9, line:14:48> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x105827cb8 <line:13:9> 'int ()' Function 0x105827858 'pci_dma_read' 'int ()'
    |   | |-UnaryOperator 0x105827d40 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x105827cf8 <col:23, col:26> '<dependent type>' contains-errors lvalue ->dev
    |   | |   `-RecoveryExpr 0x105827cd8 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x105827d90 <col:31, col:37> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x105827d58 <col:31> 'struct tulip_descriptor *' lvalue ParmVar 0x10580e318 'desc' 'struct tulip_descriptor *'
    |   | |-BinaryOperator 0x105827e88 <line:14:13, col:30> '<dependent type>' contains-errors '+'
    |   | | |-CXXDependentScopeMemberExpr 0x105827dd8 <col:13, col:16> '<dependent type>' contains-errors lvalue ->tx_frame
    |   | | | `-RecoveryExpr 0x105827db8 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-CXXDependentScopeMemberExpr 0x105827e40 <col:27, col:30> '<dependent type>' contains-errors lvalue ->tx_frame_len
    |   | |   `-RecoveryExpr 0x105827e20 <col:27> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x105827ea8 <col:44> 'int' lvalue Var 0x105827648 'len2' 'int'
    |   `-CompoundAssignOperator 0x105827fb8 <line:15:9, col:28> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-CXXDependentScopeMemberExpr 0x105827f50 <col:9, col:12> '<dependent type>' contains-errors lvalue ->tx_frame_len
    |     | `-RecoveryExpr 0x105827f28 <col:9> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x105827f08 <col:9> 'int *' lvalue ParmVar 0x10580dd28 's' 'int *'
    |     `-DeclRefExpr 0x105827f98 <col:28> 'int' lvalue Var 0x105827648 'len2' 'int'
    `-BinaryOperator 0x1058281a8 <line:17:5, col:40> '<dependent type>' contains-errors '='
      |-RecoveryExpr 0x105828060 <col:5, col:11> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x105828028 <col:5> 'struct tulip_descriptor *' lvalue ParmVar 0x10580e318 'desc' 'struct tulip_descriptor *'
      `-ConditionalOperator 0x105828178 <col:20, col:40> 'int'
        |-ParenExpr 0x105828118 <col:20, col:32> 'int'
        | `-BinaryOperator 0x1058280f8 <col:21, col:28> 'int' '+'
        |   |-ImplicitCastExpr 0x1058280c8 <col:21> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x105828088 <col:21> 'int' lvalue Var 0x105827500 'len1' 'int'
        |   `-ImplicitCastExpr 0x1058280e0 <col:28> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x1058280a8 <col:28> 'int' lvalue Var 0x105827648 'len2' 'int'
        |-IntegerLiteral 0x105828138 <col:36> 'int' 0
        `-IntegerLiteral 0x105828158 <col:40> 'int' 2147483647
