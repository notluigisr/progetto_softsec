TranslationUnitDecl 0x128855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128855bd0 '__int128'
|-TypedefDecl 0x128856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128855bf0 'unsigned __int128'
|-TypedefDecl 0x128926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128926000 'struct __NSConstantString_tag'
|   `-Record 0x128856580 '__NSConstantString_tag'
|-TypedefDecl 0x128926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128855d90 '__SVInt8_t'
|-TypedefDecl 0x128926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128855db0 '__SVInt16_t'
|-TypedefDecl 0x128926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128855dd0 '__SVInt32_t'
|-TypedefDecl 0x1289263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128855df0 '__SVInt64_t'
|-TypedefDecl 0x128926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128855e10 '__SVUint8_t'
|-TypedefDecl 0x1289264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128855e30 '__SVUint16_t'
|-TypedefDecl 0x128926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128855e50 '__SVUint32_t'
|-TypedefDecl 0x128926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128855e70 '__SVUint64_t'
|-TypedefDecl 0x1289265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128855e90 '__SVFloat16_t'
|-TypedefDecl 0x128926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1289266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128855ed0 '__SVFloat64_t'
|-TypedefDecl 0x128926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1289267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1289268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1289269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128856090 '__clang_svint8x3_t'
|-TypedefDecl 0x128926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1288560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1288560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1288560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1288561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1288561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1289278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1288561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1289279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128856230 '__clang_svint16x4_t'
|-TypedefDecl 0x128927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128856250 '__clang_svint32x4_t'
|-TypedefDecl 0x128927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128856270 '__clang_svint64x4_t'
|-TypedefDecl 0x128927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1288562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1288562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1288562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128856390 '__SVBool_t'
|-TypedefDecl 0x128927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1288563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1288563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1288563f0 '__SVCount_t'
|-TypedefDecl 0x128927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128927fb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-TypedefDecl 0x128928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128927fb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
`-FunctionDecl 0x1289282a8 <dataset_diviso_filec/func22395_vuln.c:1:1, line:28:1> line:1:1 asn1_get_length 'int (unsigned char **, unsigned char *)'
  |-ParmVarDecl 0x128928140 <col:17, col:33> col:33 used buffer 'unsigned char **'
  |-ParmVarDecl 0x1289281c0 <line:2:3, col:18> col:18 used bufend 'unsigned char *'
  `-CompoundStmt 0x128942118 <line:3:1, line:28:1>
    |-DeclStmt 0x128928428 <line:4:3, col:18>
    | `-VarDecl 0x1289283c0 <col:3, col:12> col:12 used length 'unsigned int'
    |-BinaryOperator 0x128928510 <line:7:3, col:14> 'unsigned int' '='
    | |-DeclRefExpr 0x128928440 <col:3> 'unsigned int' lvalue Var 0x1289283c0 'length' 'unsigned int'
    | `-ImplicitCastExpr 0x1289284f8 <col:12, col:14> 'unsigned int' <IntegralCast>
    |   `-ImplicitCastExpr 0x1289284e0 <col:12, col:14> 'unsigned char' <LValueToRValue>
    |     `-UnaryOperator 0x1289284c8 <col:12, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x1289284b0 <col:13, col:14> 'unsigned char *' <LValueToRValue>
    |         `-UnaryOperator 0x128928498 <col:13, col:14> 'unsigned char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x128928480 <col:14> 'unsigned char **' <LValueToRValue>
    |             `-DeclRefExpr 0x128928460 <col:14> 'unsigned char **' lvalue ParmVar 0x128928140 'buffer' 'unsigned char **'
    |-UnaryOperator 0x1289285a0 <line:8:3, col:13> 'unsigned char *' postfix '++'
    | `-ParenExpr 0x128928580 <col:3, col:11> 'unsigned char *' lvalue
    |   `-UnaryOperator 0x128928568 <col:4, col:5> 'unsigned char *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x128928550 <col:5> 'unsigned char **' <LValueToRValue>
    |       `-DeclRefExpr 0x128928530 <col:5> 'unsigned char **' lvalue ParmVar 0x128928140 'buffer' 'unsigned char **'
    |-IfStmt 0x128942078 <line:10:3, line:25:3>
    | |-BinaryOperator 0x128928628 <line:10:7, col:16> 'unsigned int' '&'
    | | |-ImplicitCastExpr 0x1289285f8 <col:7> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1289285b8 <col:7> 'unsigned int' lvalue Var 0x1289283c0 'length' 'unsigned int'
    | | `-ImplicitCastExpr 0x128928610 <col:16> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1289285d8 <col:16> 'int' 128
    | `-CompoundStmt 0x128942050 <line:11:3, line:25:3>
    |   |-DeclStmt 0x1289286c8 <line:12:5, col:14>
    |   | `-VarDecl 0x128928660 <col:5, col:9> col:9 used count 'int'
    |   |-IfStmt 0x128941ba0 <line:15:5, line:19:5>
    |   | |-BinaryOperator 0x128941a38 <line:15:9, col:49> 'int' '>'
    |   | | |-ImplicitCastExpr 0x128941a20 <col:9, col:30> 'unsigned long' <IntegralCast>
    |   | | | `-ParenExpr 0x1289287c8 <col:9, col:30> 'int'
    |   | | |   `-BinaryOperator 0x1289287a8 <col:10, col:27> 'int' '='
    |   | | |     |-DeclRefExpr 0x1289286e0 <col:10> 'int' lvalue Var 0x128928660 'count' 'int'
    |   | | |     `-ImplicitCastExpr 0x128928790 <col:18, col:27> 'int' <IntegralCast>
    |   | | |       `-BinaryOperator 0x128928770 <col:18, col:27> 'unsigned int' '&'
    |   | | |         |-ImplicitCastExpr 0x128928740 <col:18> 'unsigned int' <LValueToRValue>
    |   | | |         | `-DeclRefExpr 0x128928700 <col:18> 'unsigned int' lvalue Var 0x1289283c0 'length' 'unsigned int'
    |   | | |         `-ImplicitCastExpr 0x128928758 <col:27> 'unsigned int' <IntegralCast>
    |   | | |           `-IntegerLiteral 0x128928720 <col:27> 'int' 127
    |   | | `-UnaryExprOrTypeTraitExpr 0x128941a00 <col:34, col:49> 'unsigned long' sizeof 'unsigned int'
    |   | `-CompoundStmt 0x128941b80 <line:16:5, line:19:5>
    |   |   |-CompoundAssignOperator 0x128941b00 <line:17:7, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |   |   | |-ParenExpr 0x128941aa8 <col:7, col:15> 'unsigned char *' lvalue
    |   |   | | `-UnaryOperator 0x128941a90 <col:8, col:9> 'unsigned char *' lvalue prefix '*' cannot overflow
    |   |   | |   `-ImplicitCastExpr 0x128941a78 <col:9> 'unsigned char **' <LValueToRValue>
    |   |   | |     `-DeclRefExpr 0x128941a58 <col:9> 'unsigned char **' lvalue ParmVar 0x128928140 'buffer' 'unsigned char **'
    |   |   | `-ImplicitCastExpr 0x128941ae8 <col:20> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x128941ac8 <col:20> 'int' lvalue Var 0x128928660 'count' 'int'
    |   |   `-ReturnStmt 0x128941b70 <line:18:7, col:16>
    |   |     `-ParenExpr 0x128941b50 <col:14, col:16> 'int'
    |   |       `-IntegerLiteral 0x128941b30 <col:15> 'int' 0
    |   `-ForStmt 0x128942018 <line:21:5, line:24:34>
    |     |-BinaryOperator 0x128941c18 <line:21:10, col:19> 'unsigned int' '='
    |     | |-DeclRefExpr 0x128941bc0 <col:10> 'unsigned int' lvalue Var 0x1289283c0 'length' 'unsigned int'
    |     | `-ImplicitCastExpr 0x128941c00 <col:19> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x128941be0 <col:19> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x128941d70 <line:22:3, col:26> 'int' '&&'
    |     | |-BinaryOperator 0x128941c90 <col:3, col:11> 'int' '>'
    |     | | |-ImplicitCastExpr 0x128941c78 <col:3> 'int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x128941c38 <col:3> 'int' lvalue Var 0x128928660 'count' 'int'
    |     | | `-IntegerLiteral 0x128941c58 <col:11> 'int' 0
    |     | `-BinaryOperator 0x128941d50 <col:16, col:26> 'int' '<'
    |     |   |-ImplicitCastExpr 0x128941d20 <col:16, col:17> 'unsigned char *' <LValueToRValue>
    |     |   | `-UnaryOperator 0x128941ce8 <col:16, col:17> 'unsigned char *' lvalue prefix '*' cannot overflow
    |     |   |   `-ImplicitCastExpr 0x128941cd0 <col:17> 'unsigned char **' <LValueToRValue>
    |     |   |     `-DeclRefExpr 0x128941cb0 <col:17> 'unsigned char **' lvalue ParmVar 0x128928140 'buffer' 'unsigned char **'
    |     |   `-ImplicitCastExpr 0x128941d38 <col:26> 'unsigned char *' <LValueToRValue>
    |     |     `-DeclRefExpr 0x128941d00 <col:26> 'unsigned char *' lvalue ParmVar 0x1289281c0 'bufend' 'unsigned char *'
    |     |-BinaryOperator 0x128941e50 <line:23:3, col:23> 'unsigned char *' ','
    |     | |-UnaryOperator 0x128941db0 <col:3, col:9> 'int' postfix '--'
    |     | | `-DeclRefExpr 0x128941d90 <col:3> 'int' lvalue Var 0x128928660 'count' 'int'
    |     | `-UnaryOperator 0x128941e38 <col:13, col:23> 'unsigned char *' postfix '++'
    |     |   `-ParenExpr 0x128941e18 <col:13, col:21> 'unsigned char *' lvalue
    |     |     `-UnaryOperator 0x128941e00 <col:14, col:15> 'unsigned char *' lvalue prefix '*' cannot overflow
    |     |       `-ImplicitCastExpr 0x128941de8 <col:15> 'unsigned char **' <LValueToRValue>
    |     |         `-DeclRefExpr 0x128941dc8 <col:15> 'unsigned char **' lvalue ParmVar 0x128928140 'buffer' 'unsigned char **'
    |     `-BinaryOperator 0x128941ff8 <line:24:7, col:34> 'unsigned int' '='
    |       |-DeclRefExpr 0x128941e70 <col:7> 'unsigned int' lvalue Var 0x1289283c0 'length' 'unsigned int'
    |       `-BinaryOperator 0x128941fd8 <col:16, col:34> 'unsigned int' '|'
    |         |-ParenExpr 0x128941f08 <col:16, col:28> 'unsigned int'
    |         | `-BinaryOperator 0x128941ee8 <col:17, col:27> 'unsigned int' '<<'
    |         |   |-ImplicitCastExpr 0x128941ed0 <col:17> 'unsigned int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x128941e90 <col:17> 'unsigned int' lvalue Var 0x1289283c0 'length' 'unsigned int'
    |         |   `-IntegerLiteral 0x128941eb0 <col:27> 'int' 8
    |         `-ImplicitCastExpr 0x128941fc0 <col:32, col:34> 'unsigned int' <IntegralCast>
    |           `-ImplicitCastExpr 0x128941fa8 <col:32, col:34> 'unsigned char' <LValueToRValue>
    |             `-UnaryOperator 0x128941f90 <col:32, col:34> 'unsigned char' lvalue prefix '*' cannot overflow
    |               `-ImplicitCastExpr 0x128941f78 <col:33, col:34> 'unsigned char *' <LValueToRValue>
    |                 `-UnaryOperator 0x128941f60 <col:33, col:34> 'unsigned char *' lvalue prefix '*' cannot overflow
    |                   `-ImplicitCastExpr 0x128941f48 <col:34> 'unsigned char **' <LValueToRValue>
    |                     `-DeclRefExpr 0x128941f28 <col:34> 'unsigned char **' lvalue ParmVar 0x128928140 'buffer' 'unsigned char **'
    `-ReturnStmt 0x128942108 <line:27:3, col:17>
      `-ImplicitCastExpr 0x1289420f0 <col:10, col:17> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x1289420d8 <col:10, col:17> 'unsigned int' <LValueToRValue>
          `-ParenExpr 0x1289420b8 <col:10, col:17> 'unsigned int' lvalue
            `-DeclRefExpr 0x128942098 <col:11> 'unsigned int' lvalue Var 0x1289283c0 'length' 'unsigned int'
