TranslationUnitDecl 0x14b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b855bd0 '__int128'
|-TypedefDecl 0x14b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b855bf0 'unsigned __int128'
|-TypedefDecl 0x14b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b926000 'struct __NSConstantString_tag'
|   `-Record 0x14b856580 '__NSConstantString_tag'
|-TypedefDecl 0x14b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b855d90 '__SVInt8_t'
|-TypedefDecl 0x14b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b855db0 '__SVInt16_t'
|-TypedefDecl 0x14b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b855dd0 '__SVInt32_t'
|-TypedefDecl 0x14b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b855df0 '__SVInt64_t'
|-TypedefDecl 0x14b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b855e10 '__SVUint8_t'
|-TypedefDecl 0x14b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b855e30 '__SVUint16_t'
|-TypedefDecl 0x14b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b855e50 '__SVUint32_t'
|-TypedefDecl 0x14b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b855e70 '__SVUint64_t'
|-TypedefDecl 0x14b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b855e90 '__SVFloat16_t'
|-TypedefDecl 0x14b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b856390 '__SVBool_t'
|-TypedefDecl 0x14b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b8563f0 '__SVCount_t'
|-TypedefDecl 0x14b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b927fb0 'char *'
|   `-BuiltinType 0x14b8556b0 'char'
|-TypedefDecl 0x14b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b927fb0 'char *'
|   `-BuiltinType 0x14b8556b0 'char'
|-FunctionDecl 0x14b9283a8 <dataset_diviso_filec/func22322_vuln.c:1:1, line:17:1> line:1:1 invalid set_text_distance 'int (int *, double, double, const int *)'
| |-ParmVarDecl 0x14b928128 <col:19, col:29> col:29 referenced invalid pdist 'int *'
| |-ParmVarDecl 0x14b9281a8 <col:36, col:43> col:43 used dx 'double'
| |-ParmVarDecl 0x14b928228 <col:47, col:54> col:54 used dy 'double'
| |-ParmVarDecl 0x14b9282a8 <col:58, col:75> col:75 invalid pmat 'const int *'
| `-CompoundStmt 0x14b9431c8 <line:2:1, line:17:1>
|   |-DeclStmt 0x14b928730 <line:3:5, col:66>
|   | `-VarDecl 0x14b928488 <col:5, col:65> col:9 used code 'int' cinit
|   |   `-CallExpr 0x14b9286f0 <col:16, col:65> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14b928650 <col:16> 'int ()' Function 0x14b928598 'gs_distance_transform_inverse' 'int ()'
|   |     |-DeclRefExpr 0x14b928670 <col:46> 'double' lvalue ParmVar 0x14b9281a8 'dx' 'double'
|   |     |-DeclRefExpr 0x14b928690 <col:50> 'double' lvalue ParmVar 0x14b928228 'dy' 'double'
|   |     |-RecoveryExpr 0x14b9286b0 <col:54> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x14b9286d0 <col:60> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14b9287c8 <line:4:5, col:19>
|   | `-VarDecl 0x14b928760 <col:5, col:12> col:12 used rounded 'double'
|   |-IfStmt 0x14b941ac8 <line:6:5, line:10:16> has_else
|   | |-BinaryOperator 0x14b941858 <line:6:9, col:17> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x14b9287e0 <col:9> 'int' contains-errors lvalue Var 0x14b928488 'code' 'int'
|   | | `-RecoveryExpr 0x14b941838 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x14b9419d0 <col:43, line:9:5>
|   | | `-BinaryOperator 0x14b9419b0 <line:8:9, col:31> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x14b9418c0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->x
|   | |   | `-RecoveryExpr 0x14b941898 <col:9> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x14b941878 <col:9> 'int *' lvalue ParmVar 0x14b928128 'pdist' 'int *'
|   | |   `-BinaryOperator 0x14b941990 <col:20, col:31> '<dependent type>' contains-errors '='
|   | |     |-CXXDependentScopeMemberExpr 0x14b941928 <col:20, col:27> '<dependent type>' contains-errors lvalue ->y
|   | |     | `-RecoveryExpr 0x14b941908 <col:20> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x14b941970 <col:31> 'int' 0
|   | `-IfStmt 0x14b941aa8 <line:9:12, line:10:16>
|   |   |-BinaryOperator 0x14b941a40 <line:9:16, col:23> 'int' contains-errors '<'
|   |   | |-ImplicitCastExpr 0x14b941a28 <col:16> 'int' contains-errors <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14b9419e8 <col:16> 'int' contains-errors lvalue Var 0x14b928488 'code' 'int'
|   |   | `-IntegerLiteral 0x14b941a08 <col:23> 'int' 0
|   |   `-ReturnStmt 0x14b941a98 <line:10:9, col:16>
|   |     `-ImplicitCastExpr 0x14b941a80 <col:16> 'int' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x14b941a60 <col:16> 'int' contains-errors lvalue Var 0x14b928488 'code' 'int'
|   |-IfStmt 0x14b942610 <line:12:5, line:13:20>
|   | |-BinaryOperator 0x14b942520 <line:12:9, col:62> 'int' contains-errors '<'
|   | | |-CallExpr 0x14b9424d8 <col:9, col:58> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14b942120 <col:9> 'double (double)' Function 0x14b941f60 'fabs' 'double (double)'
|   | | | `-BinaryOperator 0x14b9424b8 <col:14, col:57> '<dependent type>' contains-errors '-'
|   | | |   |-CXXDependentScopeMemberExpr 0x14b942160 <col:14, col:21> '<dependent type>' contains-errors lvalue ->x
|   | | |   | `-RecoveryExpr 0x14b942140 <col:14> '<dependent type>' contains-errors lvalue
|   | | |   `-ParenExpr 0x14b942498 <col:25, col:57> 'double' contains-errors
|   | | |     `-BinaryOperator 0x14b942478 <col:26, col:56> 'double' contains-errors '='
|   | | |       |-DeclRefExpr 0x14b9421a8 <col:26> 'double' lvalue Var 0x14b928760 'rounded' 'double'
|   | | |       `-CallExpr 0x14b942450 <col:36, col:56> '<dependent type>' contains-errors
|   | | |         |-DeclRefExpr 0x14b942388 <col:36> 'double (double)' Function 0x14b9421c8 'floor' 'double (double)'
|   | | |         `-BinaryOperator 0x14b942430 <col:42, col:53> '<dependent type>' contains-errors '+'
|   | | |           |-CXXDependentScopeMemberExpr 0x14b9423c8 <col:42, col:49> '<dependent type>' contains-errors lvalue ->x
|   | | |           | `-RecoveryExpr 0x14b9423a8 <col:42> '<dependent type>' contains-errors lvalue
|   | | |           `-FloatingLiteral 0x14b942410 <col:53> 'double' 5.000000e-01
|   | | `-FloatingLiteral 0x14b942500 <col:62> 'double' 5.000000e-04
|   | `-BinaryOperator 0x14b9425f0 <line:13:9, col:20> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x14b942588 <col:9, col:16> '<dependent type>' contains-errors lvalue ->x
|   |   | `-RecoveryExpr 0x14b942560 <col:9> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x14b942540 <col:9> 'int *' lvalue ParmVar 0x14b928128 'pdist' 'int *'
|   |   `-DeclRefExpr 0x14b9425d0 <col:20> 'double' lvalue Var 0x14b928760 'rounded' 'double'
|   |-IfStmt 0x14b943178 <line:14:5, line:15:20>
|   | |-BinaryOperator 0x14b943088 <line:14:9, col:62> 'int' contains-errors '<'
|   | | |-CallExpr 0x14b943040 <col:9, col:58> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14b942630 <col:9> 'double (double)' Function 0x14b941f60 'fabs' 'double (double)'
|   | | | `-BinaryOperator 0x14b943020 <col:14, col:57> '<dependent type>' contains-errors '-'
|   | | |   |-CXXDependentScopeMemberExpr 0x14b942670 <col:14, col:21> '<dependent type>' contains-errors lvalue ->y
|   | | |   | `-RecoveryExpr 0x14b942650 <col:14> '<dependent type>' contains-errors lvalue
|   | | |   `-ParenExpr 0x14b943000 <col:25, col:57> 'double' contains-errors
|   | | |     `-BinaryOperator 0x14b9427c8 <col:26, col:56> 'double' contains-errors '='
|   | | |       |-DeclRefExpr 0x14b9426b8 <col:26> 'double' lvalue Var 0x14b928760 'rounded' 'double'
|   | | |       `-CallExpr 0x14b9427a0 <col:36, col:56> '<dependent type>' contains-errors
|   | | |         |-DeclRefExpr 0x14b9426d8 <col:36> 'double (double)' Function 0x14b9421c8 'floor' 'double (double)'
|   | | |         `-BinaryOperator 0x14b942780 <col:42, col:53> '<dependent type>' contains-errors '+'
|   | | |           |-CXXDependentScopeMemberExpr 0x14b942718 <col:42, col:49> '<dependent type>' contains-errors lvalue ->y
|   | | |           | `-RecoveryExpr 0x14b9426f8 <col:42> '<dependent type>' contains-errors lvalue
|   | | |           `-FloatingLiteral 0x14b942760 <col:53> 'double' 5.000000e-01
|   | | `-FloatingLiteral 0x14b943068 <col:62> 'double' 5.000000e-04
|   | `-BinaryOperator 0x14b943158 <line:15:9, col:20> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x14b9430f0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->y
|   |   | `-RecoveryExpr 0x14b9430c8 <col:9> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x14b9430a8 <col:9> 'int *' lvalue ParmVar 0x14b928128 'pdist' 'int *'
|   |   `-DeclRefExpr 0x14b943138 <col:20> 'double' lvalue Var 0x14b928760 'rounded' 'double'
|   `-ReturnStmt 0x14b9431b8 <line:16:5, col:12>
|     `-IntegerLiteral 0x14b943198 <col:12> 'int' 0
|-FunctionDecl 0x14b941f60 <line:12:9> col:9 implicit used fabs 'double (double)' extern
| |-ParmVarDecl 0x14b942060 <<invalid sloc>> <invalid sloc> 'double'
| |-BuiltinAttr 0x14b942008 <<invalid sloc>> Implicit 1004
| |-NoThrowAttr 0x14b9420d0 <col:9> Implicit
| `-ConstAttr 0x14b9420f8 <col:9> Implicit
`-FunctionDecl 0x14b9421c8 <col:36> col:36 implicit used floor 'double (double)' extern
  |-ParmVarDecl 0x14b9422c8 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x14b942270 <<invalid sloc>> Implicit 1079
  |-NoThrowAttr 0x14b942338 <col:36> Implicit
  `-ConstAttr 0x14b942360 <col:36> Implicit
