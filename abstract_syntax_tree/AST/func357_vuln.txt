TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12a926630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a926400 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a926698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12a926700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12a926768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a9267d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12a926838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12a9268a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12a926908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12a926970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12a9269d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a926a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a926aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a926b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a926b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a926be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a926c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a926cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a926d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a926d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a926de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a926e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a926eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a926f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a926f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a926ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a927058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a9270c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a927128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a927190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a9271f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a927260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a9272c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a927330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a927398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a927c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a927c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a927cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a927d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a927da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a927e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a927e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a927ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a927f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a927fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a928010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a928078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a9280e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a928148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a9281b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a928218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12a928280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a9282e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a928350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12a9283f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a9283b0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12a928468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a9283b0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-FunctionDecl 0x12a940ed8 <dataset_diviso_filec/func357_vuln.c:1:1, line:48:1> line:1:12 rose_parse_ccitt 'int (unsigned char *, struct rose_facilities_struct *, int)' static
| |-ParmVarDecl 0x12a928508 <col:29, col:44> col:44 used p 'unsigned char *'
| |-ParmVarDecl 0x12a928af8 <col:47, col:78> col:78 used facilities 'struct rose_facilities_struct *'
| |-ParmVarDecl 0x12a928b78 <col:90, col:94> col:94 used len 'int'
| `-CompoundStmt 0x12a944740 <line:2:1, line:48:1>
|   |-DeclStmt 0x12a941130 <line:3:2, col:24>
|   | |-VarDecl 0x12a940ff8 <col:2, col:16> col:16 used l 'unsigned char'
|   | `-VarDecl 0x12a941078 <col:2, col:23> col:19 used n 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x12a941100 <col:23> 'unsigned char' <IntegralCast>
|   |     `-IntegerLiteral 0x12a9410e0 <col:23> 'int' 0
|   |-DeclStmt 0x12a941258 <line:4:2, col:19>
|   | `-VarDecl 0x12a9411f0 <col:2, col:18> col:7 used callsign 'char[11]'
|   |-DoStmt 0x12a9446c0 <line:6:2, line:45:32>
|   | |-CompoundStmt 0x12a944550 <line:6:5, line:45:2>
|   | | `-SwitchStmt 0x12a941330 <line:7:3, line:44:3>
|   | |   |-BinaryOperator 0x12a941310 <line:7:11, col:16> 'int' '&'
|   | |   | |-ImplicitCastExpr 0x12a9412f8 <col:11, col:12> 'int' <IntegralCast>
|   | |   | | `-ImplicitCastExpr 0x12a9412e0 <col:11, col:12> 'unsigned char' <LValueToRValue>
|   | |   | |   `-UnaryOperator 0x12a9412a8 <col:11, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   | |   | |     `-ImplicitCastExpr 0x12a941290 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   | |       `-DeclRefExpr 0x12a941270 <col:12> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |   | `-IntegerLiteral 0x12a9412c0 <col:16> 'int' 192
|   | |   `-CompoundStmt 0x12a9444a8 <col:22, line:44:3>
|   | |     |-CaseStmt 0x12a941390 <line:8:3, line:9:11>
|   | |     | |-ConstantExpr 0x12a941378 <line:8:8> 'int'
|   | |     | | `-IntegerLiteral 0x12a941358 <col:8> 'int' 0
|   | |     | `-CompoundAssignOperator 0x12a9413f8 <line:9:4, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |     |   |-DeclRefExpr 0x12a9413b8 <col:4> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     |   `-IntegerLiteral 0x12a9413d8 <col:11> 'int' 2
|   | |     |-CompoundAssignOperator 0x12a941468 <line:10:4, col:11> 'unsigned char' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x12a941428 <col:4> 'unsigned char' lvalue Var 0x12a941078 'n' 'unsigned char'
|   | |     | `-IntegerLiteral 0x12a941448 <col:11> 'int' 2
|   | |     |-CompoundAssignOperator 0x12a9414d8 <line:11:4, col:11> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x12a941498 <col:4> 'int' lvalue ParmVar 0x12a928b78 'len' 'int'
|   | |     | `-IntegerLiteral 0x12a9414b8 <col:11> 'int' 2
|   | |     |-BreakStmt 0x12a941508 <line:12:4>
|   | |     |-CaseStmt 0x12a941548 <line:14:3, line:15:11>
|   | |     | |-ConstantExpr 0x12a941530 <line:14:8> 'int'
|   | |     | | `-IntegerLiteral 0x12a941510 <col:8> 'int' 64
|   | |     | `-CompoundAssignOperator 0x12a9415b0 <line:15:4, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |     |   |-DeclRefExpr 0x12a941570 <col:4> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     |   `-IntegerLiteral 0x12a941590 <col:11> 'int' 3
|   | |     |-CompoundAssignOperator 0x12a941620 <line:16:4, col:11> 'unsigned char' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x12a9415e0 <col:4> 'unsigned char' lvalue Var 0x12a941078 'n' 'unsigned char'
|   | |     | `-IntegerLiteral 0x12a941600 <col:11> 'int' 3
|   | |     |-CompoundAssignOperator 0x12a941690 <line:17:4, col:11> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x12a941650 <col:4> 'int' lvalue ParmVar 0x12a928b78 'len' 'int'
|   | |     | `-IntegerLiteral 0x12a941670 <col:11> 'int' 3
|   | |     |-BreakStmt 0x12a9416c0 <line:18:4>
|   | |     |-CaseStmt 0x12a941700 <line:20:3, line:21:11>
|   | |     | |-ConstantExpr 0x12a9416e8 <line:20:8> 'int'
|   | |     | | `-IntegerLiteral 0x12a9416c8 <col:8> 'int' 128
|   | |     | `-CompoundAssignOperator 0x12a941768 <line:21:4, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |     |   |-DeclRefExpr 0x12a941728 <col:4> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     |   `-IntegerLiteral 0x12a941748 <col:11> 'int' 4
|   | |     |-CompoundAssignOperator 0x12a9417d8 <line:22:4, col:11> 'unsigned char' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x12a941798 <col:4> 'unsigned char' lvalue Var 0x12a941078 'n' 'unsigned char'
|   | |     | `-IntegerLiteral 0x12a9417b8 <col:11> 'int' 4
|   | |     |-CompoundAssignOperator 0x12a941848 <line:23:4, col:11> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x12a941808 <col:4> 'int' lvalue ParmVar 0x12a928b78 'len' 'int'
|   | |     | `-IntegerLiteral 0x12a941828 <col:11> 'int' 4
|   | |     |-BreakStmt 0x12a941878 <line:24:4>
|   | |     |-CaseStmt 0x12a9418b8 <line:26:3, line:27:11>
|   | |     | |-ConstantExpr 0x12a9418a0 <line:26:8> 'int'
|   | |     | | `-IntegerLiteral 0x12a941880 <col:8> 'int' 192
|   | |     | `-BinaryOperator 0x12a941990 <line:27:4, col:11> 'unsigned char' '='
|   | |     |   |-DeclRefExpr 0x12a9418e0 <col:4> 'unsigned char' lvalue Var 0x12a940ff8 'l' 'unsigned char'
|   | |     |   `-ImplicitCastExpr 0x12a941978 <col:8, col:11> 'unsigned char' <LValueToRValue>
|   | |     |     `-ArraySubscriptExpr 0x12a941958 <col:8, col:11> 'unsigned char' lvalue
|   | |     |       |-ImplicitCastExpr 0x12a941940 <col:8> 'unsigned char *' <LValueToRValue>
|   | |     |       | `-DeclRefExpr 0x12a941900 <col:8> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     |       `-IntegerLiteral 0x12a941920 <col:10> 'int' 1
|   | |     |-IfStmt 0x12a942bc8 <line:28:4, line:33:4>
|   | |     | |-BinaryOperator 0x12a941ad0 <line:28:8, col:14> 'int' contains-errors '=='
|   | |     | | |-UnaryOperator 0x12a941a98 <col:8, col:9> 'unsigned char' lvalue prefix '*' cannot overflow
|   | |     | | | `-ImplicitCastExpr 0x12a941a80 <col:9> 'unsigned char *' <LValueToRValue>
|   | |     | | |   `-DeclRefExpr 0x12a9419b0 <col:9> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     | | `-RecoveryExpr 0x12a941ab0 <col:14> '<dependent type>' contains-errors lvalue
|   | |     | `-CompoundStmt 0x12a942b98 <col:35, line:33:4>
|   | |     |   |-CallExpr 0x12a9425e0 <line:29:5, col:58> '<dependent type>' contains-errors
|   | |     |   | |-DeclRefExpr 0x12a941db8 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x12a941b68 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     |   | |-UnaryOperator 0x12a942440 <col:12, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     |   | | `-RecoveryExpr 0x12a942418 <col:13, col:25> '<dependent type>' contains-errors lvalue
|   | |     |   | |   `-DeclRefExpr 0x12a941dd8 <col:13> 'struct rose_facilities_struct *' lvalue ParmVar 0x12a928af8 'facilities' 'struct rose_facilities_struct *'
|   | |     |   | |-BinaryOperator 0x12a942588 <col:38, col:42> 'unsigned char *' '+'
|   | |     |   | | |-ImplicitCastExpr 0x12a942570 <col:38> 'unsigned char *' <LValueToRValue>
|   | |     |   | | | `-DeclRefExpr 0x12a942458 <col:38> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     |   | | `-IntegerLiteral 0x12a942478 <col:42> 'int' 7
|   | |     |   | `-RecoveryExpr 0x12a9425a8 <col:45> '<dependent type>' contains-errors lvalue
|   | |     |   |-CallExpr 0x12a9427c8 <line:30:5, col:38> 'void *'
|   | |     |   | |-ImplicitCastExpr 0x12a9427b0 <col:5> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |     |   | | `-DeclRefExpr 0x12a942618 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x12a941b68 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     |   | |-ImplicitCastExpr 0x12a942818 <col:12> 'void *' <BitCast>
|   | |     |   | | `-ImplicitCastExpr 0x12a942800 <col:12> 'char *' <ArrayToPointerDecay>
|   | |     |   | |   `-DeclRefExpr 0x12a942638 <col:12> 'char[11]' lvalue Var 0x12a9411f0 'callsign' 'char[11]'
|   | |     |   | |-ImplicitCastExpr 0x12a942830 <col:22, col:26> 'const void *' <BitCast>
|   | |     |   | | `-BinaryOperator 0x12a9426b0 <col:22, col:26> 'unsigned char *' '+'
|   | |     |   | |   |-ImplicitCastExpr 0x12a942698 <col:22> 'unsigned char *' <LValueToRValue>
|   | |     |   | |   | `-DeclRefExpr 0x12a942658 <col:22> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     |   | |   `-IntegerLiteral 0x12a942678 <col:26> 'int' 12
|   | |     |   | `-ImplicitCastExpr 0x12a942848 <col:32, col:36> 'unsigned long' <IntegralCast>
|   | |     |   |   `-BinaryOperator 0x12a942740 <col:32, col:36> 'int' '-'
|   | |     |   |     |-ImplicitCastExpr 0x12a942728 <col:32> 'int' <IntegralCast>
|   | |     |   |     | `-ImplicitCastExpr 0x12a942710 <col:32> 'unsigned char' <LValueToRValue>
|   | |     |   |     |   `-DeclRefExpr 0x12a9426d0 <col:32> 'unsigned char' lvalue Var 0x12a940ff8 'l' 'unsigned char'
|   | |     |   |     `-IntegerLiteral 0x12a9426f0 <col:36> 'int' 10
|   | |     |   |-BinaryOperator 0x12a942978 <line:31:5, col:24> 'char' '='
|   | |     |   | |-ArraySubscriptExpr 0x12a942928 <col:5, col:20> 'char' lvalue
|   | |     |   | | |-ImplicitCastExpr 0x12a942910 <col:5> 'char *' <ArrayToPointerDecay>
|   | |     |   | | | `-DeclRefExpr 0x12a942860 <col:5> 'char[11]' lvalue Var 0x12a9411f0 'callsign' 'char[11]'
|   | |     |   | | `-BinaryOperator 0x12a9428f0 <col:14, col:18> 'int' '-'
|   | |     |   | |   |-ImplicitCastExpr 0x12a9428d8 <col:14> 'int' <IntegralCast>
|   | |     |   | |   | `-ImplicitCastExpr 0x12a9428c0 <col:14> 'unsigned char' <LValueToRValue>
|   | |     |   | |   |   `-DeclRefExpr 0x12a942880 <col:14> 'unsigned char' lvalue Var 0x12a940ff8 'l' 'unsigned char'
|   | |     |   | |   `-IntegerLiteral 0x12a9428a0 <col:18> 'int' 10
|   | |     |   | `-ImplicitCastExpr 0x12a942960 <col:24> 'char' <IntegralCast>
|   | |     |   |   `-CharacterLiteral 0x12a942948 <col:24> 'int' 0
|   | |     |   `-CallExpr 0x12a942b68 <line:32:5, col:46> '<dependent type>' contains-errors
|   | |     |     |-DeclRefExpr 0x12a942ab0 <col:5> 'int ()' Function 0x12a9429f8 'asc2ax' 'int ()'
|   | |     |     |-UnaryOperator 0x12a942b30 <col:12, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     |     | `-RecoveryExpr 0x12a942b08 <col:13, col:25> '<dependent type>' contains-errors lvalue
|   | |     |     |   `-DeclRefExpr 0x12a942ad0 <col:13> 'struct rose_facilities_struct *' lvalue ParmVar 0x12a928af8 'facilities' 'struct rose_facilities_struct *'
|   | |     |     `-DeclRefExpr 0x12a942b48 <col:38> 'char[11]' lvalue Var 0x12a9411f0 'callsign' 'char[11]'
|   | |     |-IfStmt 0x12a9433c8 <line:34:4, line:39:4>
|   | |     | |-BinaryOperator 0x12a942cf0 <line:34:8, col:14> 'int' contains-errors '=='
|   | |     | | |-UnaryOperator 0x12a942cb8 <col:8, col:9> 'unsigned char' lvalue prefix '*' cannot overflow
|   | |     | | | `-ImplicitCastExpr 0x12a942ca0 <col:9> 'unsigned char *' <LValueToRValue>
|   | |     | | |   `-DeclRefExpr 0x12a942be8 <col:9> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     | | `-RecoveryExpr 0x12a942cd0 <col:14> '<dependent type>' contains-errors lvalue
|   | |     | `-CompoundStmt 0x12a943398 <col:34, line:39:4>
|   | |     |   |-CallExpr 0x12a942f30 <line:35:5, col:56> '<dependent type>' contains-errors
|   | |     |   | |-DeclRefExpr 0x12a942d10 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x12a941b68 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     |   | |-UnaryOperator 0x12a942d90 <col:12, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     |   | | `-RecoveryExpr 0x12a942d68 <col:13, col:25> '<dependent type>' contains-errors lvalue
|   | |     |   | |   `-DeclRefExpr 0x12a942d30 <col:13> 'struct rose_facilities_struct *' lvalue ParmVar 0x12a928af8 'facilities' 'struct rose_facilities_struct *'
|   | |     |   | |-BinaryOperator 0x12a942ed8 <col:36, col:40> 'unsigned char *' '+'
|   | |     |   | | |-ImplicitCastExpr 0x12a942ec0 <col:36> 'unsigned char *' <LValueToRValue>
|   | |     |   | | | `-DeclRefExpr 0x12a942da8 <col:36> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     |   | | `-IntegerLiteral 0x12a942dc8 <col:40> 'int' 7
|   | |     |   | `-RecoveryExpr 0x12a942ef8 <col:43> '<dependent type>' contains-errors lvalue
|   | |     |   |-CallExpr 0x12a9430e0 <line:36:5, col:36> 'void *'
|   | |     |   | |-ImplicitCastExpr 0x12a9430c8 <col:5> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |     |   | | `-DeclRefExpr 0x12a942f68 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x12a941b68 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     |   | |-ImplicitCastExpr 0x12a943130 <col:12> 'void *' <BitCast>
|   | |     |   | | `-ImplicitCastExpr 0x12a943118 <col:12> 'char *' <ArrayToPointerDecay>
|   | |     |   | |   `-DeclRefExpr 0x12a942f88 <col:12> 'char[11]' lvalue Var 0x12a9411f0 'callsign' 'char[11]'
|   | |     |   | |-ImplicitCastExpr 0x12a943148 <col:22, col:26> 'const void *' <BitCast>
|   | |     |   | | `-BinaryOperator 0x12a943000 <col:22, col:26> 'unsigned char *' '+'
|   | |     |   | |   |-ImplicitCastExpr 0x12a942fe8 <col:22> 'unsigned char *' <LValueToRValue>
|   | |     |   | |   | `-DeclRefExpr 0x12a942fa8 <col:22> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     |   | |   `-IntegerLiteral 0x12a942fc8 <col:26> 'int' 12
|   | |     |   | `-ImplicitCastExpr 0x12a943160 <col:30, col:34> 'unsigned long' <IntegralCast>
|   | |     |   |   `-BinaryOperator 0x12a943090 <col:30, col:34> 'int' '-'
|   | |     |   |     |-ImplicitCastExpr 0x12a943078 <col:30> 'int' <IntegralCast>
|   | |     |   |     | `-ImplicitCastExpr 0x12a943060 <col:30> 'unsigned char' <LValueToRValue>
|   | |     |   |     |   `-DeclRefExpr 0x12a943020 <col:30> 'unsigned char' lvalue Var 0x12a940ff8 'l' 'unsigned char'
|   | |     |   |     `-IntegerLiteral 0x12a943040 <col:34> 'int' 10
|   | |     |   |-BinaryOperator 0x12a943290 <line:37:5, col:24> 'char' '='
|   | |     |   | |-ArraySubscriptExpr 0x12a943240 <col:5, col:20> 'char' lvalue
|   | |     |   | | |-ImplicitCastExpr 0x12a943228 <col:5> 'char *' <ArrayToPointerDecay>
|   | |     |   | | | `-DeclRefExpr 0x12a943178 <col:5> 'char[11]' lvalue Var 0x12a9411f0 'callsign' 'char[11]'
|   | |     |   | | `-BinaryOperator 0x12a943208 <col:14, col:18> 'int' '-'
|   | |     |   | |   |-ImplicitCastExpr 0x12a9431f0 <col:14> 'int' <IntegralCast>
|   | |     |   | |   | `-ImplicitCastExpr 0x12a9431d8 <col:14> 'unsigned char' <LValueToRValue>
|   | |     |   | |   |   `-DeclRefExpr 0x12a943198 <col:14> 'unsigned char' lvalue Var 0x12a940ff8 'l' 'unsigned char'
|   | |     |   | |   `-IntegerLiteral 0x12a9431b8 <col:18> 'int' 10
|   | |     |   | `-ImplicitCastExpr 0x12a943278 <col:24> 'char' <IntegralCast>
|   | |     |   |   `-CharacterLiteral 0x12a943260 <col:24> 'int' 0
|   | |     |   `-CallExpr 0x12a943368 <line:38:5, col:44> '<dependent type>' contains-errors
|   | |     |     |-DeclRefExpr 0x12a9432b0 <col:5> 'int ()' Function 0x12a9429f8 'asc2ax' 'int ()'
|   | |     |     |-UnaryOperator 0x12a943330 <col:12, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     |     | `-RecoveryExpr 0x12a943308 <col:13, col:25> '<dependent type>' contains-errors lvalue
|   | |     |     |   `-DeclRefExpr 0x12a9432d0 <col:13> 'struct rose_facilities_struct *' lvalue ParmVar 0x12a928af8 'facilities' 'struct rose_facilities_struct *'
|   | |     |     `-DeclRefExpr 0x12a943348 <col:36> 'char[11]' lvalue Var 0x12a9411f0 'callsign' 'char[11]'
|   | |     |-CompoundAssignOperator 0x12a9442b0 <line:40:4, col:15> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |     | |-DeclRefExpr 0x12a944200 <col:4> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   | |     | `-BinaryOperator 0x12a944290 <col:11, col:15> 'int' '+'
|   | |     |   |-ImplicitCastExpr 0x12a944278 <col:11> 'int' <IntegralCast>
|   | |     |   | `-ImplicitCastExpr 0x12a944260 <col:11> 'unsigned char' <LValueToRValue>
|   | |     |   |   `-DeclRefExpr 0x12a944220 <col:11> 'unsigned char' lvalue Var 0x12a940ff8 'l' 'unsigned char'
|   | |     |   `-IntegerLiteral 0x12a944240 <col:15> 'int' 2
|   | |     |-CompoundAssignOperator 0x12a944390 <line:41:4, col:15> 'unsigned char' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x12a9442e0 <col:4> 'unsigned char' lvalue Var 0x12a941078 'n' 'unsigned char'
|   | |     | `-BinaryOperator 0x12a944370 <col:11, col:15> 'int' '+'
|   | |     |   |-ImplicitCastExpr 0x12a944358 <col:11> 'int' <IntegralCast>
|   | |     |   | `-ImplicitCastExpr 0x12a944340 <col:11> 'unsigned char' <LValueToRValue>
|   | |     |   |   `-DeclRefExpr 0x12a944300 <col:11> 'unsigned char' lvalue Var 0x12a940ff8 'l' 'unsigned char'
|   | |     |   `-IntegerLiteral 0x12a944320 <col:15> 'int' 2
|   | |     |-CompoundAssignOperator 0x12a944470 <line:42:4, col:15> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x12a9443c0 <col:4> 'int' lvalue ParmVar 0x12a928b78 'len' 'int'
|   | |     | `-BinaryOperator 0x12a944450 <col:11, col:15> 'int' '+'
|   | |     |   |-ImplicitCastExpr 0x12a944438 <col:11> 'int' <IntegralCast>
|   | |     |   | `-ImplicitCastExpr 0x12a944420 <col:11> 'unsigned char' <LValueToRValue>
|   | |     |   |   `-DeclRefExpr 0x12a9443e0 <col:11> 'unsigned char' lvalue Var 0x12a940ff8 'l' 'unsigned char'
|   | |     |   `-IntegerLiteral 0x12a944400 <col:15> 'int' 2
|   | |     `-BreakStmt 0x12a9444a0 <line:43:4>
|   | `-BinaryOperator 0x12a9446a0 <line:45:11, col:31> 'int' '&&'
|   |   |-BinaryOperator 0x12a944608 <col:11, col:17> 'int' '!='
|   |   | |-ImplicitCastExpr 0x12a9445f0 <col:11, col:12> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x12a9445d8 <col:11, col:12> 'unsigned char' <LValueToRValue>
|   |   | |   `-UnaryOperator 0x12a9445a0 <col:11, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x12a944588 <col:12> 'unsigned char *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x12a944568 <col:12> 'unsigned char *' lvalue ParmVar 0x12a928508 'p' 'unsigned char *'
|   |   | `-IntegerLiteral 0x12a9445b8 <col:17> 'int' 0
|   |   `-BinaryOperator 0x12a944680 <col:25, col:31> 'int' '>'
|   |     |-ImplicitCastExpr 0x12a944668 <col:25> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12a944628 <col:25> 'int' lvalue ParmVar 0x12a928b78 'len' 'int'
|   |     `-IntegerLiteral 0x12a944648 <col:31> 'int' 0
|   `-ReturnStmt 0x12a944730 <line:47:2, col:9>
|     `-ImplicitCastExpr 0x12a944718 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x12a944700 <col:9> 'unsigned char' <LValueToRValue>
|         `-DeclRefExpr 0x12a9446e0 <col:9> 'unsigned char' lvalue Var 0x12a941078 'n' 'unsigned char'
`-FunctionDecl 0x12a941b68 <line:29:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12a941c68 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12a941cd0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12a941d38 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12a941c10 <<invalid sloc>> Implicit 882
