TranslationUnitDecl 0x13e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e855bd0 '__int128'
|-TypedefDecl 0x13e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e855bf0 'unsigned __int128'
|-TypedefDecl 0x13f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x13e856580 '__NSConstantString_tag'
|-TypedefDecl 0x13f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e855d90 '__SVInt8_t'
|-TypedefDecl 0x13f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e855db0 '__SVInt16_t'
|-TypedefDecl 0x13f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e855dd0 '__SVInt32_t'
|-TypedefDecl 0x13f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e855df0 '__SVInt64_t'
|-TypedefDecl 0x13f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e855e10 '__SVUint8_t'
|-TypedefDecl 0x13f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e855e30 '__SVUint16_t'
|-TypedefDecl 0x13f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e855e50 '__SVUint32_t'
|-TypedefDecl 0x13f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e855e70 '__SVUint64_t'
|-TypedefDecl 0x13f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e855e90 '__SVFloat16_t'
|-TypedefDecl 0x13f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e856390 '__SVBool_t'
|-TypedefDecl 0x13f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e8563f0 '__SVCount_t'
|-TypedefDecl 0x13f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f00dbb0 'char *'
|   `-BuiltinType 0x13e8556b0 'char'
|-TypedefDecl 0x13f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f00dbb0 'char *'
|   `-BuiltinType 0x13e8556b0 'char'
|-FunctionDecl 0x13f027728 <dataset_diviso_filec/func24312_nonvuln.c:1:1, line:48:1> line:1:12 invalid php_zip_add_file 'int (struct zip *, const char *, int, char *, int, long, long)' static
| |-ParmVarDecl 0x13f00e248 <col:29, col:41> col:41 used za 'struct zip *'
| |-ParmVarDecl 0x13f00e2c8 <col:45, col:57> col:57 used filename 'const char *'
| |-ParmVarDecl 0x13f00e360 <col:67, col:74> col:74 invalid filename_len 'int'
| |-ParmVarDecl 0x13f027400 <line:2:2, col:8> col:8 used entry_name 'char *'
| |-ParmVarDecl 0x13f027480 <col:20, col:27> col:27 invalid entry_name_len 'int'
| |-ParmVarDecl 0x13f027500 <col:43, col:48> col:48 used offset_start 'long'
| |-ParmVarDecl 0x13f027580 <col:62, col:67> col:67 used offset_len 'long'
| `-CompoundStmt 0x13e922f90 <line:3:1, line:48:1>
|   |-DeclStmt 0x13f0279f8 <line:4:2, col:23>
|   | |-RecordDecl 0x13f027808 <col:2, col:9> col:9 struct zip_source
|   | `-VarDecl 0x13f027978 <col:2, col:21> col:21 used zs 'struct zip_source *'
|   |-DeclStmt 0x13f027a90 <line:5:2, col:13>
|   | `-VarDecl 0x13f027a28 <col:2, col:6> col:6 used cur_idx 'int'
|   |-DeclStmt 0x13f027b38 <line:6:2, col:32>
|   | `-VarDecl 0x13f027ad0 <col:2, col:7> col:7 invalid resolved_path 'char'
|   |-IfStmt 0x13f027dd8 <line:10:2, line:12:2>
|   | |-CallExpr 0x13f027d38 <line:10:6, col:40> 'int'
|   | | |-ImplicitCastExpr 0x13f027d20 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x13f027cb0 <col:6> 'int ()' Function 0x13f027bf8 'ZIP_OPENBASEDIR_CHECKPATH' 'int ()'
|   | | `-ImplicitCastExpr 0x13f027d60 <col:32> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13f027cd0 <col:32> 'const char *' lvalue ParmVar 0x13f00e2c8 'filename' 'const char *'
|   | `-CompoundStmt 0x13f027dc0 <col:43, line:12:2>
|   |   `-ReturnStmt 0x13f027db0 <line:11:3, col:11>
|   |     `-UnaryOperator 0x13f027d98 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13f027d78 <col:11> 'int' 1
|   |-IfStmt 0x13f027fb8 <line:14:2, line:16:2>
|   | |-RecoveryExpr 0x13f027f38 <line:14:6, col:56> '_Bool' contains-errors
|   | `-CompoundStmt 0x13f027fa0 <col:59, line:16:2>
|   |   `-ReturnStmt 0x13f027f90 <line:15:3, col:11>
|   |     `-UnaryOperator 0x13f027f78 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13f027f58 <col:11> 'int' 1
|   |-IfStmt 0x13f028bf0 <line:19:2, line:21:2>
|   | |-UnaryOperator 0x13f028b78 <line:19:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x13f028b50 <col:7, col:25> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x13f028ab8 <col:7> 'int ()' Function 0x13f028a00 'Z_BVAL' 'int ()'
|   | |   `-RecoveryExpr 0x13f028b30 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13f028bd8 <col:28, line:21:2>
|   |   `-ReturnStmt 0x13f028bc8 <line:20:3, col:11>
|   |     `-UnaryOperator 0x13f028bb0 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13f028b90 <col:11> 'int' 1
|   |-BinaryOperator 0x13f028df0 <line:23:2, col:66> 'struct zip_source *' contains-errors '='
|   | |-DeclRefExpr 0x13f028c10 <col:2> 'struct zip_source *' lvalue Var 0x13f027978 'zs' 'struct zip_source *'
|   | `-CallExpr 0x13f028db0 <col:7, col:66> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13f028d10 <col:7> 'int ()' Function 0x13f028c58 'zip_source_file' 'int ()'
|   |   |-DeclRefExpr 0x13f028d30 <col:23> 'struct zip *' lvalue ParmVar 0x13f00e248 'za' 'struct zip *'
|   |   |-RecoveryExpr 0x13f028d50 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x13f028d70 <col:42> 'long' lvalue ParmVar 0x13f027500 'offset_start' 'long'
|   |   `-DeclRefExpr 0x13f028d90 <col:56> 'long' lvalue ParmVar 0x13f027580 'offset_len' 'long'
|   |-IfStmt 0x13f028ec0 <line:24:2, line:26:2>
|   | |-UnaryOperator 0x13f028e48 <line:24:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13f028e30 <col:7> 'struct zip_source *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13f028e10 <col:7> 'struct zip_source *' lvalue Var 0x13f027978 'zs' 'struct zip_source *'
|   | `-CompoundStmt 0x13f028ea8 <col:11, line:26:2>
|   |   `-ReturnStmt 0x13f028e98 <line:25:3, col:11>
|   |     `-UnaryOperator 0x13f028e80 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13f028e60 <col:11> 'int' 1
|   |-BinaryOperator 0x13f029120 <line:28:2, col:59> 'int' '='
|   | |-DeclRefExpr 0x13f028ee0 <col:2> 'int' lvalue Var 0x13f027a28 'cur_idx' 'int'
|   | `-CallExpr 0x13f0290d0 <col:12, col:59> 'int'
|   |   |-ImplicitCastExpr 0x13f0290b8 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13f028fe0 <col:12> 'int ()' Function 0x13f028f28 'zip_name_locate' 'int ()'
|   |   |-ImplicitCastExpr 0x13f029108 <col:28> 'struct zip *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13f029000 <col:28> 'struct zip *' lvalue ParmVar 0x13f00e248 'za' 'struct zip *'
|   |   |-CStyleCastExpr 0x13f029070 <col:32, col:46> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x13f029058 <col:46> 'char *' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x13f029020 <col:46> 'char *' lvalue ParmVar 0x13f027400 'entry_name' 'char *'
|   |   `-IntegerLiteral 0x13f029098 <col:58> 'int' 0
|   |-IfStmt 0x13e922c38 <line:30:2, line:41:2> has_else
|   | |-BinaryOperator 0x13f029198 <line:30:6, col:14> 'int' '<'
|   | | |-ImplicitCastExpr 0x13f029180 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13f029140 <col:6> 'int' lvalue Var 0x13f027a28 'cur_idx' 'int'
|   | | `-IntegerLiteral 0x13f029160 <col:14> 'int' 0
|   | |-CompoundStmt 0x13f0295d8 <col:17, line:36:2>
|   | | |-IfStmt 0x13f029418 <line:32:3, line:34:3>
|   | | | |-CXXDependentScopeMemberExpr 0x13f029218 <line:32:7, col:17> '<dependent type>' contains-errors lvalue .str
|   | | | | `-RecoveryExpr 0x13f0291f0 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x13f0291b8 <col:7> 'struct zip *' lvalue ParmVar 0x13f00e248 'za' 'struct zip *'
|   | | | `-CompoundStmt 0x13f029400 <col:22, line:34:3>
|   | | |   `-CallExpr 0x13f0293d8 <line:33:4, col:30> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x13f029340 <col:4> 'int ()' Function 0x13f029288 '_zip_error_fini' 'int ()'
|   | | |     `-UnaryOperator 0x13f0293c0 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |       `-RecoveryExpr 0x13f029398 <col:21, col:25> '<dependent type>' contains-errors lvalue
|   | | |         `-DeclRefExpr 0x13f029360 <col:21> 'struct zip *' lvalue ParmVar 0x13f00e248 'za' 'struct zip *'
|   | | `-CallExpr 0x13f0295b0 <line:35:3, col:29> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x13f029518 <col:3> 'int ()' Function 0x13f029460 '_zip_error_init' 'int ()'
|   | |   `-UnaryOperator 0x13f029598 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     `-RecoveryExpr 0x13f029570 <col:20, col:24> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x13f029538 <col:20> 'struct zip *' lvalue ParmVar 0x13f00e248 'za' 'struct zip *'
|   | `-CompoundStmt 0x13e922c20 <line:36:9, line:41:2>
|   |   `-IfStmt 0x13e922c00 <line:37:3, line:40:3>
|   |     |-BinaryOperator 0x13f0297e8 <line:37:7, col:35> 'int' '=='
|   |     | |-CallExpr 0x13f029750 <col:7, col:29> 'int'
|   |     | | |-ImplicitCastExpr 0x13f029738 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x13f0296d8 <col:7> 'int ()' Function 0x13f029620 'zip_delete' 'int ()'
|   |     | | |-ImplicitCastExpr 0x13f029780 <col:18> 'struct zip *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x13f0296f8 <col:18> 'struct zip *' lvalue ParmVar 0x13f00e248 'za' 'struct zip *'
|   |     | | `-ImplicitCastExpr 0x13f029798 <col:22> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x13f029718 <col:22> 'int' lvalue Var 0x13f027a28 'cur_idx' 'int'
|   |     | `-UnaryOperator 0x13f0297d0 <col:34, col:35> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x13f0297b0 <col:35> 'int' 1
|   |     `-CompoundStmt 0x13f0299c8 <col:38, line:40:3>
|   |       |-CallExpr 0x13f029940 <line:38:4, col:22> 'int'
|   |       | |-ImplicitCastExpr 0x13f029928 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x13f0298e8 <col:4> 'int ()' Function 0x13f029830 'zip_source_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x13f029968 <col:20> 'struct zip_source *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13f029908 <col:20> 'struct zip_source *' lvalue Var 0x13f027978 'zs' 'struct zip_source *'
|   |       `-ReturnStmt 0x13f0299b8 <line:39:4, col:12>
|   |         `-UnaryOperator 0x13f0299a0 <col:11, col:12> 'int' prefix '-'
|   |           `-IntegerLiteral 0x13f029980 <col:12> 'int' 1
|   `-IfStmt 0x13e922f60 <line:43:2, line:47:2> has_else
|     |-BinaryOperator 0x13e922e98 <line:43:6, col:38> 'int' '=='
|     | |-CallExpr 0x13e922de0 <col:6, col:32> 'int'
|     | | |-ImplicitCastExpr 0x13e922dc8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x13e922d48 <col:6> 'int ()' Function 0x13e922c90 'zip_add' 'int ()'
|     | | |-ImplicitCastExpr 0x13e922e18 <col:14> 'struct zip *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x13e922d68 <col:14> 'struct zip *' lvalue ParmVar 0x13f00e248 'za' 'struct zip *'
|     | | |-ImplicitCastExpr 0x13e922e30 <col:18> 'char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x13e922d88 <col:18> 'char *' lvalue ParmVar 0x13f027400 'entry_name' 'char *'
|     | | `-ImplicitCastExpr 0x13e922e48 <col:30> 'struct zip_source *' <LValueToRValue>
|     | |   `-DeclRefExpr 0x13e922da8 <col:30> 'struct zip_source *' lvalue Var 0x13f027978 'zs' 'struct zip_source *'
|     | `-UnaryOperator 0x13e922e80 <col:37, col:38> 'int' prefix '-'
|     |   `-IntegerLiteral 0x13e922e60 <col:38> 'int' 1
|     |-CompoundStmt 0x13e922f00 <col:41, line:45:2>
|     | `-ReturnStmt 0x13e922ef0 <line:44:3, col:11>
|     |   `-UnaryOperator 0x13e922ed8 <col:10, col:11> 'int' prefix '-'
|     |     `-IntegerLiteral 0x13e922eb8 <col:11> 'int' 1
|     `-CompoundStmt 0x13e922f48 <line:45:9, line:47:2>
|       `-ReturnStmt 0x13e922f38 <line:46:3, col:10>
|         `-IntegerLiteral 0x13e922f18 <col:10> 'int' 1
`-FunctionDecl 0x13f028138 <line:18:26> col:26 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13f028238 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13f0281e0 <<invalid sloc>> Implicit 902
