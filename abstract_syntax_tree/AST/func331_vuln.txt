TranslationUnitDecl 0x133055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1330564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x133055bd0 '__int128'
|-TypedefDecl 0x133056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x133055bf0 'unsigned __int128'
|-TypedefDecl 0x133126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x133126000 'struct __NSConstantString_tag'
|   `-Record 0x133056580 '__NSConstantString_tag'
|-TypedefDecl 0x133126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x133055d90 '__SVInt8_t'
|-TypedefDecl 0x133126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x133055db0 '__SVInt16_t'
|-TypedefDecl 0x133126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x133055dd0 '__SVInt32_t'
|-TypedefDecl 0x1331263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x133055df0 '__SVInt64_t'
|-TypedefDecl 0x133126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x133055e10 '__SVUint8_t'
|-TypedefDecl 0x1331264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x133055e30 '__SVUint16_t'
|-TypedefDecl 0x133126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x133055e50 '__SVUint32_t'
|-TypedefDecl 0x133126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x133055e70 '__SVUint64_t'
|-TypedefDecl 0x1331265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x133055e90 '__SVFloat16_t'
|-TypedefDecl 0x133126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x133055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1331266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x133055ed0 '__SVFloat64_t'
|-TypedefDecl 0x133126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x133055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x133126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x133055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1331267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x133055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x133126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x133055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1331268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x133055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x133126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x133055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x133126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x133055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1331269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x133055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x133126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x133055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x133126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x133056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x133126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x133056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x133126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x133056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x133126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x133056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x133126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x133056090 '__clang_svint8x3_t'
|-TypedefDecl 0x133126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1330560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x133126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1330560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x133126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1330560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x133126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x133056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x133126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x133056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x133126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x133056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x133126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x133056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x133126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x133056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x133127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1330561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x133127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1330561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1331278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1330561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x133127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x133056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1331279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x133056230 '__clang_svint16x4_t'
|-TypedefDecl 0x133127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x133056250 '__clang_svint32x4_t'
|-TypedefDecl 0x133127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x133056270 '__clang_svint64x4_t'
|-TypedefDecl 0x133127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x133056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x133127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1330562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x133127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1330562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x133127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1330562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x133127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x133056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x133127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x133056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x133127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x133056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x133127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x133056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x133127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x133056390 '__SVBool_t'
|-TypedefDecl 0x133127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1330563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x133127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1330563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x133127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1330563f0 '__SVCount_t'
|-TypedefDecl 0x133127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x133127fb0 'char *'
|   `-BuiltinType 0x1330556b0 'char'
|-TypedefDecl 0x133128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x133127fb0 'char *'
|   `-BuiltinType 0x1330556b0 'char'
`-FunctionDecl 0x1331283a8 <dataset_diviso_filec/func331_vuln.c:1:1, line:21:1> line:1:5 diskutil_dd 'int (const char *, const char *, const int, const long long)'
  |-ParmVarDecl 0x1331280d8 <col:17, col:29> col:29 used in 'const char *'
  |-ParmVarDecl 0x133128158 <col:33, col:45> col:45 used out 'const char *'
  |-ParmVarDecl 0x1331281d8 <col:50, col:60> col:60 used bs 'const int'
  |-ParmVarDecl 0x133128258 <col:64, col:80> col:80 used count 'const long long'
  `-CompoundStmt 0x13380a6c0 <line:2:1, line:21:1>
    |-DeclStmt 0x133128588 <line:3:5, col:24>
    | `-VarDecl 0x1331284d0 <col:5, col:20> col:11 used output 'char *' cinit
    |   `-RecoveryExpr 0x133128568 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13380a2f0 <line:5:5, line:17:5>
    | |-BinaryOperator 0x133128610 <line:5:9, col:15> 'int' '&&'
    | | |-ImplicitCastExpr 0x1331285e0 <col:9> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1331285a0 <col:9> 'const char *' lvalue ParmVar 0x1331280d8 'in' 'const char *'
    | | `-ImplicitCastExpr 0x1331285f8 <col:15> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1331285c0 <col:15> 'const char *' lvalue ParmVar 0x133128158 'out' 'const char *'
    | `-CompoundStmt 0x13380a2c0 <col:20, line:17:5>
    |   |-CallExpr 0x133809a48 <line:6:9, col:26> 'int'
    |   | |-ImplicitCastExpr 0x133809a30 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x133128740 <col:9> 'int ()' Function 0x133128688 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x133809a78 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x1331287a0 <col:17> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x133809a90 <col:24> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1331287c0 <col:24> 'const char *' lvalue ParmVar 0x1331280d8 'in' 'const char *'
    |   |-CallExpr 0x133809b40 <line:7:9, col:34> 'int'
    |   | |-ImplicitCastExpr 0x133809b28 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x133809aa8 <col:9> 'int ()' Function 0x133128688 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x133809b78 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x133809ac8 <col:17> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x133809b90 <col:24> 'const char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x133809ae8 <col:24> 'const char *' lvalue ParmVar 0x133128158 'out' 'const char *'
    |   | `-ImplicitCastExpr 0x133809ba8 <col:29> 'long long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x133809b08 <col:29> 'const long long' lvalue ParmVar 0x133128258 'count' 'const long long'
    |   |-IfStmt 0x13380a110 <line:9:9, line:13:9>
    |   | |-UnaryOperator 0x133809e30 <line:9:13, col:14> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x133809e18 <col:14> 'char *' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x133809df8 <col:14> 'char *' contains-errors lvalue Var 0x1331284d0 'output' 'char *'
    |   | `-CompoundStmt 0x13380a0f0 <col:22, line:13:9>
    |   |   |-CallExpr 0x133809fa0 <line:10:13, col:31> 'int'
    |   |   | |-ImplicitCastExpr 0x133809f88 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x133809f28 <col:13> 'int ()' Function 0x133809e70 'LOGERROR' 'int ()'
    |   |   | |-ImplicitCastExpr 0x133809fd0 <col:22> 'char *' <ArrayToPointerDecay>
    |   |   | | `-StringLiteral 0x133809f48 <col:22> 'char[4]' lvalue "STR"
    |   |   | `-ImplicitCastExpr 0x133809fe8 <col:29> 'const char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x133809f68 <col:29> 'const char *' lvalue ParmVar 0x1331280d8 'in' 'const char *'
    |   |   `-CallExpr 0x13380a078 <line:11:13, col:32> 'int'
    |   |     |-ImplicitCastExpr 0x13380a060 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x13380a000 <col:13> 'int ()' Function 0x133809e70 'LOGERROR' 'int ()'
    |   |     |-ImplicitCastExpr 0x13380a0a8 <col:22> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x13380a020 <col:22> 'char[4]' lvalue "STR"
    |   |     `-ImplicitCastExpr 0x13380a0c0 <col:29> 'const char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x13380a040 <col:29> 'const char *' lvalue ParmVar 0x133128158 'out' 'const char *'
    |   `-CallExpr 0x13380a268 <line:15:9, col:25> 'int' contains-errors
    |     |-ImplicitCastExpr 0x13380a250 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13380a210 <col:9> 'int ()' Function 0x13380a158 'EUCA_FREE' 'int ()'
    |     `-ImplicitCastExpr 0x13380a290 <col:19> 'char *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x13380a230 <col:19> 'char *' contains-errors lvalue Var 0x1331284d0 'output' 'char *'
    `-CallExpr 0x13380a658 <line:19:5, col:35> 'int'
      |-ImplicitCastExpr 0x13380a640 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13380a3f0 <col:5> 'int ()' Function 0x13380a338 'LOGWARN' 'int ()'
      |-ImplicitCastExpr 0x13380a690 <col:13> 'char *' <ArrayToPointerDecay>
      | `-StringLiteral 0x13380a410 <col:13> 'char[4]' lvalue "STR"
      |-CallExpr 0x13380a568 <col:20, col:25> 'int'
      | |-ImplicitCastExpr 0x13380a550 <col:20> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x13380a510 <col:20> 'int ()' Function 0x13380a458 'SP' 'int ()'
      | `-ImplicitCastExpr 0x13380a590 <col:23> 'const char *' <LValueToRValue>
      |   `-DeclRefExpr 0x13380a530 <col:23> 'const char *' lvalue ParmVar 0x1331280d8 'in' 'const char *'
      `-CallExpr 0x13380a600 <col:28, col:34> 'int'
        |-ImplicitCastExpr 0x13380a5e8 <col:28> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x13380a5a8 <col:28> 'int ()' Function 0x13380a458 'SP' 'int ()'
        `-ImplicitCastExpr 0x13380a628 <col:31> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x13380a5c8 <col:31> 'const char *' lvalue ParmVar 0x133128158 'out' 'const char *'
