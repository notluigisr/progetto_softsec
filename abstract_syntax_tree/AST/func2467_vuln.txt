TranslationUnitDecl 0x147855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1478564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147855bd0 '__int128'
|-TypedefDecl 0x147856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147855bf0 'unsigned __int128'
|-TypedefDecl 0x147926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x147926000 'struct __NSConstantString_tag'
|   `-Record 0x147856580 '__NSConstantString_tag'
|-TypedefDecl 0x147926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147855d90 '__SVInt8_t'
|-TypedefDecl 0x147926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147855db0 '__SVInt16_t'
|-TypedefDecl 0x147926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147855dd0 '__SVInt32_t'
|-TypedefDecl 0x1479263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147855df0 '__SVInt64_t'
|-TypedefDecl 0x147926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147855e10 '__SVUint8_t'
|-TypedefDecl 0x1479264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147855e30 '__SVUint16_t'
|-TypedefDecl 0x147926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147855e50 '__SVUint32_t'
|-TypedefDecl 0x147926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147855e70 '__SVUint64_t'
|-TypedefDecl 0x1479265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147855e90 '__SVFloat16_t'
|-TypedefDecl 0x147926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1479266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147855ed0 '__SVFloat64_t'
|-TypedefDecl 0x147926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x147926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1479267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x147926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1479268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x147926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x147926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1479269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x147926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x147926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x147926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x147926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x147926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x147926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147856090 '__clang_svint8x3_t'
|-TypedefDecl 0x147926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1478560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x147926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1478560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x147926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1478560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x147926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x147926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x147926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x147926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x147926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x147927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1478561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x147927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1478561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1479278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1478561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x147927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1479279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147856230 '__clang_svint16x4_t'
|-TypedefDecl 0x147927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147856250 '__clang_svint32x4_t'
|-TypedefDecl 0x147927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147856270 '__clang_svint64x4_t'
|-TypedefDecl 0x147927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x147927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1478562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x147927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1478562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x147927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1478562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x147927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x147927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x147927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x147927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x147927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147856390 '__SVBool_t'
|-TypedefDecl 0x147927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1478563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x147927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1478563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x147927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1478563f0 '__SVCount_t'
|-TypedefDecl 0x147927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x147927fb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-TypedefDecl 0x147928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x147927fb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
`-FunctionDecl 0x147928310 <dataset_diviso_filec/func2467_vuln.c:1:1, line:7:2> line:1:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
  |-ParmVarDecl 0x147928128 <col:20, col:30> col:30 referenced invalid r 'int *'
  |-ParmVarDecl 0x1479281a8 <col:33, col:43> col:43 invalid a 'int *'
  |-ParmVarDecl 0x147928228 <col:46, col:56> col:56 invalid b 'int *'
  `-CompoundStmt 0x150009630 <line:2:2, line:7:2>
    |-BinaryOperator 0x147928798 <line:3:2, col:40> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x147928450 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x147928438 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x1479283f0 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1479283d0 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'
    | | `-IntegerLiteral 0x147928418 <col:4> 'int' 4
    | `-CallExpr 0x147928758 <col:7, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1479285d0 <col:7> 'int ()' Function 0x147928518 'bn_mul_words' 'int ()'
    |   |-UnaryOperator 0x147928688 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x147928668 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x147928648 <col:26, col:29> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x147928630 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1479285f0 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x147928610 <col:28> 'int' 0
    |   |-RecoveryExpr 0x1479286a0 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x1479286c0 <col:34> 'int' 4
    |   `-ArraySubscriptExpr 0x147928738 <col:36, col:39> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x147928720 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x1479286e0 <col:36> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x147928700 <col:38> 'int' 0
    |-BinaryOperator 0x150009100 <line:4:2, col:40> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x150008e38 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x150008e20 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x1479287d8 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1479287b8 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'
    | | `-IntegerLiteral 0x150008e00 <col:4> 'int' 5
    | `-CallExpr 0x1500090c0 <col:7, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x150008f38 <col:7> 'int ()' Function 0x150008e80 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x150008ff0 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x150008fd0 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x150008fb0 <col:26, col:29> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x150008f98 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x150008f58 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x150008f78 <col:28> 'int' 1
    |   |-RecoveryExpr 0x150009008 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x150009028 <col:34> 'int' 4
    |   `-ArraySubscriptExpr 0x1500090a0 <col:36, col:39> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x150009088 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x150009048 <col:36> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x150009068 <col:38> 'int' 1
    |-BinaryOperator 0x150009388 <line:5:2, col:40> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x1500091a0 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x150009188 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x150009140 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x150009120 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'
    | | `-IntegerLiteral 0x150009168 <col:4> 'int' 6
    | `-CallExpr 0x150009348 <col:7, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1500091c0 <col:7> 'int ()' Function 0x150008e80 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x150009278 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x150009258 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x150009238 <col:26, col:29> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x150009220 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1500091e0 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x150009200 <col:28> 'int' 2
    |   |-RecoveryExpr 0x150009290 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x1500092b0 <col:34> 'int' 4
    |   `-ArraySubscriptExpr 0x150009328 <col:36, col:39> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x150009310 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x1500092d0 <col:36> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1500092f0 <col:38> 'int' 2
    `-BinaryOperator 0x150009610 <line:6:2, col:40> '<dependent type>' contains-errors '='
      |-ArraySubscriptExpr 0x150009428 <col:2, col:5> '<dependent type>' contains-errors lvalue
      | |-ImplicitCastExpr 0x150009410 <col:2> '<dependent type>' contains-errors <LValueToRValue>
      | | `-RecoveryExpr 0x1500093c8 <col:2> '<dependent type>' contains-errors lvalue
      | |   `-DeclRefExpr 0x1500093a8 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'
      | `-IntegerLiteral 0x1500093f0 <col:4> 'int' 7
      `-CallExpr 0x1500095d0 <col:7, col:40> '<dependent type>' contains-errors
        |-DeclRefExpr 0x150009448 <col:7> 'int ()' Function 0x150008e80 'bn_mul_add_words' 'int ()'
        |-UnaryOperator 0x150009500 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
        | `-ParenExpr 0x1500094e0 <col:25, col:30> '<dependent type>' contains-errors lvalue
        |   `-ArraySubscriptExpr 0x1500094c0 <col:26, col:29> '<dependent type>' contains-errors lvalue
        |     |-ImplicitCastExpr 0x1500094a8 <col:26> '<dependent type>' contains-errors <LValueToRValue>
        |     | `-RecoveryExpr 0x150009468 <col:26> '<dependent type>' contains-errors lvalue
        |     `-IntegerLiteral 0x150009488 <col:28> 'int' 3
        |-RecoveryExpr 0x150009518 <col:32> '<dependent type>' contains-errors lvalue
        |-IntegerLiteral 0x150009538 <col:34> 'int' 4
        `-ArraySubscriptExpr 0x1500095b0 <col:36, col:39> '<dependent type>' contains-errors lvalue
          |-ImplicitCastExpr 0x150009598 <col:36> '<dependent type>' contains-errors <LValueToRValue>
          | `-RecoveryExpr 0x150009558 <col:36> '<dependent type>' contains-errors lvalue
          `-IntegerLiteral 0x150009578 <col:38> 'int' 3
