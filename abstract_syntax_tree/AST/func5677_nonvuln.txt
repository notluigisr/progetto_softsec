TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-FunctionDecl 0x13b826b68 <dataset_diviso_filec/func5677_nonvuln.c:1:1, line:72:1> line:1:1 check_compat_entry_size_and_hooks 'int (struct compat_arpt_entry *, struct xt_table_info *, unsigned int *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, const char *)'
| |-ParmVarDecl 0x13b80e248 <col:35, col:61> col:61 used e 'struct compat_arpt_entry *'
| |-ParmVarDecl 0x13b826628 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
| |-ParmVarDecl 0x13b8266d8 <line:3:7, col:21> col:21 used size 'unsigned int *'
| |-ParmVarDecl 0x13b826788 <line:4:7, col:28> col:28 used base 'const unsigned char *'
| |-ParmVarDecl 0x13b826808 <line:5:7, col:28> col:28 used limit 'const unsigned char *'
| |-ParmVarDecl 0x13b8268b8 <line:6:7, col:27> col:27 used hook_entries 'const unsigned int *'
| |-ParmVarDecl 0x13b826938 <line:7:7, col:27> col:27 used underflows 'const unsigned int *'
| |-ParmVarDecl 0x13b8269b8 <line:8:7, col:19> col:19 name 'const char *'
| `-CompoundStmt 0x13d009070 <line:9:1, line:72:1>
|   |-DeclStmt 0x13b826e88 <line:10:2, col:27>
|   | |-RecordDecl 0x13b826c98 <col:2, col:9> col:9 struct xt_entry_target
|   | `-VarDecl 0x13b826e08 <col:2, col:26> col:26 used t 'struct xt_entry_target *'
|   |-DeclStmt 0x13b827088 <line:11:2, col:26>
|   | |-RecordDecl 0x13b826ea0 <col:2, col:9> col:9 struct xt_target
|   | `-VarDecl 0x13b827008 <col:2, col:20> col:20 used target 'struct xt_target *'
|   |-DeclStmt 0x13b827120 <line:12:2, col:27>
|   | `-VarDecl 0x13b8270b8 <col:2, col:15> col:15 used entry_offset 'unsigned int'
|   |-DeclStmt 0x13b8272d8 <line:13:2, col:17>
|   | |-VarDecl 0x13b827150 <col:2, col:6> col:6 used ret 'int'
|   | |-VarDecl 0x13b8271d0 <col:2, col:11> col:11 used off 'int'
|   | `-VarDecl 0x13b827250 <col:2, col:16> col:16 used h 'int'
|   |-CallExpr 0x13b827508 <line:15:2, col:19> 'int'
|   | |-ImplicitCastExpr 0x13b8274f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13b827420 <col:2> 'int ()' Function 0x13b827368 'duprintf' 'int ()'
|   | |-ImplicitCastExpr 0x13b827538 <col:11> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x13b827480 <col:11> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x13b827550 <col:18> 'struct compat_arpt_entry *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13b8274a0 <col:18> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *'
|   |-IfStmt 0x13b829e90 <line:16:2, line:21:2>
|   | |-RecoveryExpr 0x13b829c90 <line:16:6, line:18:44> '_Bool' contains-errors
|   | `-CompoundStmt 0x13b829e70 <col:51, line:21:2>
|   |   |-CallExpr 0x13b829d48 <line:19:3, col:27> 'int'
|   |   | |-ImplicitCastExpr 0x13b829d30 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13b829cb0 <col:3> 'int ()' Function 0x13b827368 'duprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x13b829d80 <col:12> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x13b829cd0 <col:12> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x13b829d98 <col:19> 'struct compat_arpt_entry *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13b829cf0 <col:19> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *'
|   |   | `-ImplicitCastExpr 0x13b829db0 <col:22> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13b829d10 <col:22> 'const unsigned char *' lvalue ParmVar 0x13b826808 'limit' 'const unsigned char *'
|   |   `-ReturnStmt 0x13b829e60 <line:20:3, col:11>
|   |     `-UnaryOperator 0x13b829e48 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x13b829e30 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x13b829e10 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13b82a208 <line:23:2, line:28:2>
|   | |-RecoveryExpr 0x13b82a028 <line:23:6, line:24:45> '_Bool' contains-errors
|   | `-CompoundStmt 0x13b82a1e8 <col:48, line:28:2>
|   |   |-CallExpr 0x13b82a108 <line:25:3, line:26:22> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13b82a048 <line:25:3> 'int ()' Function 0x13b827368 'duprintf' 'int ()'
|   |   | |-StringLiteral 0x13b82a068 <col:12> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x13b82a088 <line:26:5> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *'
|   |   | `-RecoveryExpr 0x13b82a0e0 <col:8, col:11> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x13b82a0a8 <col:8> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *'
|   |   `-ReturnStmt 0x13b82a1d8 <line:27:3, col:11>
|   |     `-UnaryOperator 0x13b82a1c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x13b82a1a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x13b82a188 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13b82a558 <line:31:2, col:42> 'int' '='
|   | |-DeclRefExpr 0x13b82a228 <col:2> 'int' lvalue Var 0x13b827150 'ret' 'int'
|   | `-CallExpr 0x13b82a530 <col:8, col:42> 'int'
|   |   |-ImplicitCastExpr 0x13b82a518 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13b82a328 <col:8> 'int ()' Function 0x13b82a270 'check_entry' 'int ()'
|   |   `-CStyleCastExpr 0x13b82a4f0 <col:20, col:41> 'struct arpt_entry *' <BitCast>
|   |     `-ImplicitCastExpr 0x13b82a4d8 <col:41> 'struct compat_arpt_entry *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x13b82a3f0 <col:41> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *'
|   |-IfStmt 0x13b82a5f8 <line:32:2, line:33:10>
|   | |-ImplicitCastExpr 0x13b82a598 <line:32:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13b82a578 <col:6> 'int' lvalue Var 0x13b827150 'ret' 'int'
|   | `-ReturnStmt 0x13b82a5e8 <line:33:3, col:10>
|   |   `-ImplicitCastExpr 0x13b82a5d0 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13b82a5b0 <col:10> 'int' lvalue Var 0x13b827150 'ret' 'int'
|   |-BinaryOperator 0x13b82a7f8 <line:36:2, col:37> 'unsigned int' '='
|   | |-DeclRefExpr 0x13b82a6b0 <col:2> 'unsigned int' lvalue Var 0x13b8270b8 'entry_offset' 'unsigned int'
|   | `-ImplicitCastExpr 0x13b82a7e0 <col:17, col:37> 'unsigned int' <IntegralCast>
|   |   `-BinaryOperator 0x13b82a7c0 <col:17, col:37> 'long' '-'
|   |     |-CStyleCastExpr 0x13b82a720 <col:17, col:25> 'void *' <BitCast>
|   |     | `-ImplicitCastExpr 0x13b82a708 <col:25> 'struct compat_arpt_entry *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x13b82a6d0 <col:25> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *'
|   |     `-CStyleCastExpr 0x13b82a798 <col:29, col:37> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x13b82a780 <col:37> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x13b82a748 <col:37> 'const unsigned char *' lvalue ParmVar 0x13b826788 'base' 'const unsigned char *'
|   |-BinaryOperator 0x13b82a9c8 <line:38:2, col:30> 'struct xt_entry_target *' '='
|   | |-DeclRefExpr 0x13b82a818 <col:2> 'struct xt_entry_target *' lvalue Var 0x13b826e08 't' 'struct xt_entry_target *'
|   | `-ImplicitCastExpr 0x13b82a9b0 <col:6, col:30> 'struct xt_entry_target *' <IntegralToPointer>
|   |   `-CallExpr 0x13b82a970 <col:6, col:30> 'int'
|   |     |-ImplicitCastExpr 0x13b82a958 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b82a918 <col:6> 'int ()' Function 0x13b82a860 'compat_arpt_get_target' 'int ()'
|   |     `-ImplicitCastExpr 0x13b82a998 <col:29> 'struct compat_arpt_entry *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13b82a938 <col:29> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *'
|   |-BinaryOperator 0x13c8085c8 <line:39:2, line:40:24> 'struct xt_target *' contains-errors '='
|   | |-DeclRefExpr 0x13c808200 <line:39:2> 'struct xt_target *' lvalue Var 0x13b827008 'target' 'struct xt_target *'
|   | `-CallExpr 0x13c808590 <col:11, line:40:24> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13c808300 <line:39:11> 'int ()' Function 0x13c808248 'xt_request_find_target' 'int ()'
|   |   |-RecoveryExpr 0x13c808570 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CXXDependentScopeMemberExpr 0x13c8083e0 <col:47, col:57> '<dependent type>' contains-errors lvalue .name
|   |   | `-CXXDependentScopeMemberExpr 0x13c808398 <col:47, col:52> '<dependent type>' contains-errors lvalue .user
|   |   |   `-RecoveryExpr 0x13c808370 <col:47, col:50> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x13c808338 <col:47> 'struct xt_entry_target *' lvalue Var 0x13b826e08 't' 'struct xt_entry_target *'
|   |   `-CXXDependentScopeMemberExpr 0x13c8084d0 <line:40:6, col:16> '<dependent type>' contains-errors lvalue .revision
|   |     `-CXXDependentScopeMemberExpr 0x13c808488 <col:6, col:11> '<dependent type>' contains-errors lvalue .user
|   |       `-RecoveryExpr 0x13c808460 <col:6, col:9> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x13c808428 <col:6> 'struct xt_entry_target *' lvalue Var 0x13b826e08 't' 'struct xt_entry_target *'
|   |-IfStmt 0x13c808b08 <line:41:2, line:46:2>
|   | |-CallExpr 0x13c808720 <line:41:6, col:19> 'int'
|   | | |-ImplicitCastExpr 0x13c808708 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x13c8086c8 <col:6> 'int ()' Function 0x13c808610 'IS_ERR' 'int ()'
|   | | `-ImplicitCastExpr 0x13c808748 <col:13> 'struct xt_target *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13c8086e8 <col:13> 'struct xt_target *' lvalue Var 0x13b827008 'target' 'struct xt_target *'
|   | `-CompoundStmt 0x13c808ae0 <col:22, line:46:2>
|   |   |-CallExpr 0x13c808890 <line:42:3, line:43:19> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13c808760 <line:42:3> 'int ()' Function 0x13b827368 'duprintf' 'int ()'
|   |   | |-StringLiteral 0x13c808780 <col:12> 'char[4]' lvalue "STR"
|   |   | `-CXXDependentScopeMemberExpr 0x13c808848 <line:43:5, col:15> '<dependent type>' contains-errors lvalue .name
|   |   |   `-CXXDependentScopeMemberExpr 0x13c808800 <col:5, col:10> '<dependent type>' contains-errors lvalue .user
|   |   |     `-RecoveryExpr 0x13c8087d8 <col:5, col:8> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x13c8087a0 <col:5> 'struct xt_entry_target *' lvalue Var 0x13b826e08 't' 'struct xt_entry_target *'
|   |   |-BinaryOperator 0x13c808a58 <line:44:3, col:23> 'int' '='
|   |   | |-DeclRefExpr 0x13c8088c0 <col:3> 'int' lvalue Var 0x13b827150 'ret' 'int'
|   |   | `-CallExpr 0x13c808a18 <col:9, col:23> 'int'
|   |   |   |-ImplicitCastExpr 0x13c808a00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x13c8089c0 <col:9> 'int ()' Function 0x13c808908 'PTR_ERR' 'int ()'
|   |   |   `-ImplicitCastExpr 0x13c808a40 <col:17> 'struct xt_target *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13c8089e0 <col:17> 'struct xt_target *' lvalue Var 0x13b827008 'target' 'struct xt_target *'
|   |   `-GotoStmt 0x13c808ac8 <line:45:3, col:8> 'out' 0x13c808a78
|   |-BinaryOperator 0x13c808c38 <line:47:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13c808bd0 <col:2, col:14> '<dependent type>' contains-errors lvalue .target
|   | | `-CXXDependentScopeMemberExpr 0x13c808b88 <col:2, col:7> '<dependent type>' contains-errors lvalue .kernel
|   | |   `-RecoveryExpr 0x13c808b60 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x13c808b28 <col:2> 'struct xt_entry_target *' lvalue Var 0x13b826e08 't' 'struct xt_entry_target *'
|   | `-DeclRefExpr 0x13c808c18 <col:23> 'struct xt_target *' lvalue Var 0x13b827008 'target' 'struct xt_target *'
|   |-CompoundAssignOperator 0x13c808df0 <line:49:2, col:39> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x13c808c58 <col:2> 'int' lvalue Var 0x13b8271d0 'off' 'int'
|   | `-CallExpr 0x13c808db0 <col:9, col:39> 'int'
|   |   |-ImplicitCastExpr 0x13c808d98 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13c808d58 <col:9> 'int ()' Function 0x13c808ca0 'xt_compat_target_offset' 'int ()'
|   |   `-ImplicitCastExpr 0x13c808dd8 <col:33> 'struct xt_target *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13c808d78 <col:33> 'struct xt_target *' lvalue Var 0x13b827008 'target' 'struct xt_target *'
|   |-CompoundAssignOperator 0x13c808ec0 <line:50:2, col:11> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-UnaryOperator 0x13c808e58 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13c808e40 <col:3> 'unsigned int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13c808e20 <col:3> 'unsigned int *' lvalue ParmVar 0x13b8266d8 'size' 'unsigned int *'
|   | `-ImplicitCastExpr 0x13c808ea8 <col:11> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x13c808e90 <col:11> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13c808e70 <col:11> 'int' lvalue Var 0x13b8271d0 'off' 'int'
|   |-IfStmt 0x13c8090f0 <line:52:2, line:53:8>
|   | |-ImplicitCastExpr 0x13c809070 <line:52:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13c809050 <col:6> 'int' lvalue Var 0x13b827150 'ret' 'int'
|   | `-GotoStmt 0x13c8090d8 <line:53:3, col:8> 'release_target' 0x13c809088
|   |-CallExpr 0x13d008c80 <line:64:2, col:45> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13d008b28 <col:2> 'void *(void *, int, unsigned long)' Function 0x13d0088d8 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x13d008ba8 <col:9, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x13d008b80 <col:10, col:13> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13d008b48 <col:10> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *'
|   | |-IntegerLiteral 0x13d008bc0 <col:23> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x13d008c60 <col:26, col:44> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x13d008c40 <col:32, col:44> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x13d008c18 <col:33, col:36> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13d008be0 <col:33> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *' non_odr_use_unevaluated
|   |-BinaryOperator 0x13d008d38 <line:65:2, col:16> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x13d008cf0 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13d008cb8 <col:2> 'struct compat_arpt_entry *' lvalue ParmVar 0x13b80e248 'e' 'struct compat_arpt_entry *'
|   | `-IntegerLiteral 0x13d008d18 <col:16> 'int' 0
|   |-ReturnStmt 0x13d008d78 <line:66:2, col:9>
|   | `-IntegerLiteral 0x13d008d58 <col:9> 'int' 0
|   |-LabelStmt 0x13d008fe8 <line:68:1, line:69:35> 'release_target'
|   | `-CallExpr 0x13d008fc0 <col:2, col:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13d008e68 <col:2> 'int ()' Function 0x13d008db0 'module_put' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x13d008f78 <col:13, col:33> '<dependent type>' contains-errors lvalue ->me
|   |     `-CXXDependentScopeMemberExpr 0x13d008f30 <col:13, col:25> '<dependent type>' contains-errors lvalue .target
|   |       `-CXXDependentScopeMemberExpr 0x13d008ee8 <col:13, col:18> '<dependent type>' contains-errors lvalue .kernel
|   |         `-RecoveryExpr 0x13d008ec0 <col:13, col:16> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x13d008e88 <col:13> 'struct xt_entry_target *' lvalue Var 0x13b826e08 't' 'struct xt_entry_target *'
|   `-LabelStmt 0x13d009050 <line:70:1, line:71:9> 'out'
|     `-ReturnStmt 0x13d009040 <col:2, col:9>
|       `-ImplicitCastExpr 0x13d009028 <col:9> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x13d009008 <col:9> 'int' lvalue Var 0x13b827150 'ret' 'int'
`-FunctionDecl 0x13d0088d8 <line:64:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x13d0089d8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13d008a40 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x13d008aa8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13d008980 <<invalid sloc>> Implicit 900
