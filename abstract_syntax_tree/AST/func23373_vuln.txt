TranslationUnitDecl 0x135055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1350564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135055bd0 '__int128'
|-TypedefDecl 0x135056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135055bf0 'unsigned __int128'
|-TypedefDecl 0x13580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13580bc00 'struct __NSConstantString_tag'
|   `-Record 0x135056580 '__NSConstantString_tag'
|-TypedefDecl 0x13580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135055d90 '__SVInt8_t'
|-TypedefDecl 0x13580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135055db0 '__SVInt16_t'
|-TypedefDecl 0x13580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135055dd0 '__SVInt32_t'
|-TypedefDecl 0x13580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135055df0 '__SVInt64_t'
|-TypedefDecl 0x13580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135055e10 '__SVUint8_t'
|-TypedefDecl 0x13580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135055e30 '__SVUint16_t'
|-TypedefDecl 0x13580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135055e50 '__SVUint32_t'
|-TypedefDecl 0x13580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135055e70 '__SVUint64_t'
|-TypedefDecl 0x13580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135055e90 '__SVFloat16_t'
|-TypedefDecl 0x13580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1350560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1350560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1350560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1350561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1350561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1350561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1350562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1350562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1350562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135056390 '__SVBool_t'
|-TypedefDecl 0x13580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1350563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1350563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1350563f0 '__SVCount_t'
|-TypedefDecl 0x13580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13580dbb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
|-TypedefDecl 0x13580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13580dbb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
`-FunctionDecl 0x135122ed8 <dataset_diviso_filec/func23373_vuln.c:1:1, line:67:1> line:1:1 invalid ExprResolveBoolean 'int (struct xkb_context *, const int *, int *)'
  |-ParmVarDecl 0x13580e248 <col:20, col:40> col:40 used ctx 'struct xkb_context *'
  |-ParmVarDecl 0x13580e2e0 <col:45, col:60> col:60 invalid expr 'const int *'
  |-ParmVarDecl 0x13580e398 <line:2:20, col:26> col:26 invalid set_rtrn 'int *'
  `-CompoundStmt 0x135828698 <line:3:1, line:67:1>
    |-DeclStmt 0x135123018 <line:5:5, col:22>
    | `-VarDecl 0x135122fb0 <col:5, col:17> col:17 used ident 'const char *'
    `-SwitchStmt 0x1351230f8 <line:7:5, line:64:5>
      |-ImplicitCastExpr 0x1351230e0 <line:7:13, col:24> '<dependent type>' contains-errors <LValueToRValue>
      | `-CXXDependentScopeMemberExpr 0x135123098 <col:13, col:24> '<dependent type>' contains-errors lvalue .op
      |   `-CXXDependentScopeMemberExpr 0x135123050 <col:13, col:19> '<dependent type>' contains-errors lvalue ->expr
      |     `-RecoveryExpr 0x135123030 <col:13> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x135828628 <col:28, line:64:5>
        |-IfStmt 0x1351236a0 <line:9:9, line:14:9>
        | |-BinaryOperator 0x135123240 <line:9:13, col:38> 'int' contains-errors '!='
        | | |-CXXDependentScopeMemberExpr 0x1351231a0 <col:13, col:24> '<dependent type>' contains-errors lvalue .value_type
        | | | `-CXXDependentScopeMemberExpr 0x135123158 <col:13, col:19> '<dependent type>' contains-errors lvalue ->expr
        | | |   `-RecoveryExpr 0x135123138 <col:13> '<dependent type>' contains-errors lvalue
        | | `-RecoveryExpr 0x135123220 <col:38> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x135123688 <col:57, line:14:9>
        |   `-CallExpr 0x135123638 <line:10:13, line:12:69> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x1351233c0 <line:10:13> 'int ()' Function 0x135123308 'log_err' 'int ()'
        |     |-DeclRefExpr 0x1351233e0 <col:21> 'struct xkb_context *' lvalue ParmVar 0x13580e248 'ctx' 'struct xkb_context *'
        |     |-StringLiteral 0x135123440 <line:11:21> 'char[4]' lvalue "STR"
        |     `-CallExpr 0x135123610 <line:12:21, col:68> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x135123540 <col:21> 'int ()' Function 0x135123488 'expr_value_type_to_string' 'int ()'
        |       `-CXXDependentScopeMemberExpr 0x1351235c8 <col:47, col:58> '<dependent type>' contains-errors lvalue .value_type
        |         `-CXXDependentScopeMemberExpr 0x135123580 <col:47, col:53> '<dependent type>' contains-errors lvalue ->expr
        |           `-RecoveryExpr 0x135123560 <col:47> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x135123810 <line:15:9, col:35> '<dependent type>' contains-errors '='
        | |-UnaryOperator 0x1351237f8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
        | | `-ImplicitCastExpr 0x1351237e0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
        | |   `-RecoveryExpr 0x1351236c0 <col:10> '<dependent type>' contains-errors lvalue
        | `-CXXDependentScopeMemberExpr 0x135123778 <col:21, col:35> '<dependent type>' contains-errors lvalue .set
        |   `-CXXDependentScopeMemberExpr 0x135123730 <col:21, col:27> '<dependent type>' contains-errors lvalue ->boolean
        |     `-RecoveryExpr 0x135123710 <col:21> '<dependent type>' contains-errors lvalue
        |-ReturnStmt 0x135123868 <line:16:9, col:16>
        | `-RecoveryExpr 0x135123848 <col:16> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x135123ab0 <line:19:9, col:53> 'const char *' contains-errors '='
        | |-DeclRefExpr 0x135123890 <col:9> 'const char *' lvalue Var 0x135122fb0 'ident' 'const char *'
        | `-CallExpr 0x135123a80 <col:17, col:53> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x135123990 <col:17> 'int ()' Function 0x1351238d8 'xkb_atom_text' 'int ()'
        |   |-DeclRefExpr 0x1351239b0 <col:31> 'struct xkb_context *' lvalue ParmVar 0x13580e248 'ctx' 'struct xkb_context *'
        |   `-CXXDependentScopeMemberExpr 0x135123a38 <col:36, col:48> '<dependent type>' contains-errors lvalue .ident
        |     `-CXXDependentScopeMemberExpr 0x1351239f0 <col:36, col:42> '<dependent type>' contains-errors lvalue ->ident
        |       `-RecoveryExpr 0x1351239d0 <col:36> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x135827ab0 <line:20:9, line:33:9>
        | |-ImplicitCastExpr 0x135123af0 <line:20:13> 'const char *' <LValueToRValue>
        | | `-DeclRefExpr 0x135123ad0 <col:13> 'const char *' lvalue Var 0x135122fb0 'ident' 'const char *'
        | `-CompoundStmt 0x135827a98 <col:20, line:33:9>
        |   `-IfStmt 0x135827a68 <line:21:13, line:32:13> has_else
        |     |-BinaryOperator 0x1358274d8 <line:21:17, line:23:36> 'int' '||'
        |     | |-BinaryOperator 0x135123dd0 <line:21:17, line:22:36> 'int' '||'
        |     | | |-CallExpr 0x135123c98 <line:21:17, col:36> 'int'
        |     | | | |-ImplicitCastExpr 0x135123c80 <col:17> 'int (*)()' <FunctionToPointerDecay>
        |     | | | | `-DeclRefExpr 0x135123be8 <col:17> 'int ()' Function 0x135123b30 'istreq' 'int ()'
        |     | | | |-ImplicitCastExpr 0x135123cc8 <col:24> 'const char *' <LValueToRValue>
        |     | | | | `-DeclRefExpr 0x135123c08 <col:24> 'const char *' lvalue Var 0x135122fb0 'ident' 'const char *'
        |     | | | `-ImplicitCastExpr 0x135123ce0 <col:31> 'char *' <ArrayToPointerDecay>
        |     | | |   `-StringLiteral 0x135123c28 <col:31> 'char[4]' lvalue "STR"
        |     | | `-CallExpr 0x135123d70 <line:22:17, col:36> 'int'
        |     | |   |-ImplicitCastExpr 0x135123d58 <col:17> 'int (*)()' <FunctionToPointerDecay>
        |     | |   | `-DeclRefExpr 0x135123cf8 <col:17> 'int ()' Function 0x135123b30 'istreq' 'int ()'
        |     | |   |-ImplicitCastExpr 0x135123da0 <col:24> 'const char *' <LValueToRValue>
        |     | |   | `-DeclRefExpr 0x135123d18 <col:24> 'const char *' lvalue Var 0x135122fb0 'ident' 'const char *'
        |     | |   `-ImplicitCastExpr 0x135123db8 <col:31> 'char *' <ArrayToPointerDecay>
        |     | |     `-StringLiteral 0x135123d38 <col:31> 'char[4]' lvalue "STR"
        |     | `-CallExpr 0x135827478 <line:23:17, col:36> 'int'
        |     |   |-ImplicitCastExpr 0x135827460 <col:17> 'int (*)()' <FunctionToPointerDecay>
        |     |   | `-DeclRefExpr 0x135827400 <col:17> 'int ()' Function 0x135123b30 'istreq' 'int ()'
        |     |   |-ImplicitCastExpr 0x1358274a8 <col:24> 'const char *' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x135827420 <col:24> 'const char *' lvalue Var 0x135122fb0 'ident' 'const char *'
        |     |   `-ImplicitCastExpr 0x1358274c0 <col:31> 'char *' <ArrayToPointerDecay>
        |     |     `-StringLiteral 0x135827440 <col:31> 'char[4]' lvalue "STR"
        |     |-CompoundStmt 0x135827668 <col:39, line:26:13>
        |     | |-BinaryOperator 0x135827600 <line:24:17, col:29> '<dependent type>' contains-errors '='
        |     | | |-UnaryOperator 0x1358275c8 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
        |     | | | `-ImplicitCastExpr 0x1358275b0 <col:18> '<dependent type>' contains-errors <LValueToRValue>
        |     | | |   `-RecoveryExpr 0x1358274f8 <col:18> '<dependent type>' contains-errors lvalue
        |     | | `-RecoveryExpr 0x1358275e0 <col:29> '<dependent type>' contains-errors lvalue
        |     | `-ReturnStmt 0x135827658 <line:25:17, col:24>
        |     |   `-RecoveryExpr 0x135827638 <col:24> '<dependent type>' contains-errors lvalue
        |     `-IfStmt 0x135827a48 <line:27:18, line:32:13>
        |       |-BinaryOperator 0x135827930 <line:27:22, line:29:41> 'int' '||'
        |       | |-BinaryOperator 0x135827838 <line:27:22, line:28:41> 'int' '||'
        |       | | |-CallExpr 0x135827700 <line:27:22, col:41> 'int'
        |       | | | |-ImplicitCastExpr 0x1358276e8 <col:22> 'int (*)()' <FunctionToPointerDecay>
        |       | | | | `-DeclRefExpr 0x135827688 <col:22> 'int ()' Function 0x135123b30 'istreq' 'int ()'
        |       | | | |-ImplicitCastExpr 0x135827730 <col:29> 'const char *' <LValueToRValue>
        |       | | | | `-DeclRefExpr 0x1358276a8 <col:29> 'const char *' lvalue Var 0x135122fb0 'ident' 'const char *'
        |       | | | `-ImplicitCastExpr 0x135827748 <col:36> 'char *' <ArrayToPointerDecay>
        |       | | |   `-StringLiteral 0x1358276c8 <col:36> 'char[4]' lvalue "STR"
        |       | | `-CallExpr 0x1358277d8 <line:28:22, col:41> 'int'
        |       | |   |-ImplicitCastExpr 0x1358277c0 <col:22> 'int (*)()' <FunctionToPointerDecay>
        |       | |   | `-DeclRefExpr 0x135827760 <col:22> 'int ()' Function 0x135123b30 'istreq' 'int ()'
        |       | |   |-ImplicitCastExpr 0x135827808 <col:29> 'const char *' <LValueToRValue>
        |       | |   | `-DeclRefExpr 0x135827780 <col:29> 'const char *' lvalue Var 0x135122fb0 'ident' 'const char *'
        |       | |   `-ImplicitCastExpr 0x135827820 <col:36> 'char *' <ArrayToPointerDecay>
        |       | |     `-StringLiteral 0x1358277a0 <col:36> 'char[4]' lvalue "STR"
        |       | `-CallExpr 0x1358278d0 <line:29:22, col:41> 'int'
        |       |   |-ImplicitCastExpr 0x1358278b8 <col:22> 'int (*)()' <FunctionToPointerDecay>
        |       |   | `-DeclRefExpr 0x135827858 <col:22> 'int ()' Function 0x135123b30 'istreq' 'int ()'
        |       |   |-ImplicitCastExpr 0x135827900 <col:29> 'const char *' <LValueToRValue>
        |       |   | `-DeclRefExpr 0x135827878 <col:29> 'const char *' lvalue Var 0x135122fb0 'ident' 'const char *'
        |       |   `-ImplicitCastExpr 0x135827918 <col:36> 'char *' <ArrayToPointerDecay>
        |       |     `-StringLiteral 0x135827898 <col:36> 'char[4]' lvalue "STR"
        |       `-CompoundStmt 0x135827a30 <col:44, line:32:13>
        |         `-ReturnStmt 0x135827a20 <line:31:17, col:24>
        |           `-RecoveryExpr 0x135827a00 <col:24> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x135827b68 <line:34:9, col:34> 'int'
        | |-ImplicitCastExpr 0x135827b50 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x135827ad0 <col:9> 'int ()' Function 0x135123308 'log_err' 'int ()'
        | |-ImplicitCastExpr 0x135827ba0 <col:17> 'struct xkb_context *' <LValueToRValue>
        | | `-DeclRefExpr 0x135827af0 <col:17> 'struct xkb_context *' lvalue ParmVar 0x13580e248 'ctx' 'struct xkb_context *'
        | |-ImplicitCastExpr 0x135827bb8 <col:22> 'char *' <ArrayToPointerDecay>
        | | `-StringLiteral 0x135827b10 <col:22> 'char[4]' lvalue "STR"
        | `-ImplicitCastExpr 0x135827bd0 <col:29> 'const char *' <LValueToRValue>
        |   `-DeclRefExpr 0x135827b30 <col:29> 'const char *' lvalue Var 0x135122fb0 'ident' 'const char *'
        |-CallExpr 0x135827e88 <line:38:9, line:40:58> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135827be8 <line:38:9> 'int ()' Function 0x135123308 'log_err' 'int ()'
        | |-DeclRefExpr 0x135827c08 <col:17> 'struct xkb_context *' lvalue ParmVar 0x13580e248 'ctx' 'struct xkb_context *'
        | |-StringLiteral 0x135827c28 <col:22> 'char[4]' lvalue "STR"
        | |-CallExpr 0x135827d38 <line:39:17, col:59> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x135827c48 <col:17> 'int ()' Function 0x1351238d8 'xkb_atom_text' 'int ()'
        | | |-DeclRefExpr 0x135827c68 <col:31> 'struct xkb_context *' lvalue ParmVar 0x13580e248 'ctx' 'struct xkb_context *'
        | | `-CXXDependentScopeMemberExpr 0x135827cf0 <col:36, col:52> '<dependent type>' contains-errors lvalue .element
        | |   `-CXXDependentScopeMemberExpr 0x135827ca8 <col:36, col:42> '<dependent type>' contains-errors lvalue ->field_ref
        | |     `-RecoveryExpr 0x135827c88 <col:36> '<dependent type>' contains-errors lvalue
        | `-CallExpr 0x135827e58 <line:40:17, col:57> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x135827d68 <col:17> 'int ()' Function 0x1351238d8 'xkb_atom_text' 'int ()'
        |   |-DeclRefExpr 0x135827d88 <col:31> 'struct xkb_context *' lvalue ParmVar 0x13580e248 'ctx' 'struct xkb_context *'
        |   `-CXXDependentScopeMemberExpr 0x135827e10 <col:36, col:52> '<dependent type>' contains-errors lvalue .field
        |     `-CXXDependentScopeMemberExpr 0x135827dc8 <col:36, col:42> '<dependent type>' contains-errors lvalue ->field_ref
        |       `-RecoveryExpr 0x135827da8 <col:36> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x135828110 <line:46:9, line:47:27>
        | |-RecoveryExpr 0x135827f80 <line:46:13> '_Bool' contains-errors
        | `-BinaryOperator 0x1358280f0 <line:47:13, col:27> '<dependent type>' contains-errors '='
        |   |-UnaryOperator 0x135828090 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
        |   | `-ImplicitCastExpr 0x135828078 <col:14> '<dependent type>' contains-errors <LValueToRValue>
        |   |   `-RecoveryExpr 0x135827fa0 <col:14> '<dependent type>' contains-errors lvalue
        |   `-UnaryOperator 0x1358280d8 <col:25, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
        |     `-UnaryOperator 0x1358280c0 <col:26, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow
        |       `-ImplicitCastExpr 0x1358280a8 <col:27> '<dependent type>' contains-errors <LValueToRValue>
        |         `-RecoveryExpr 0x135827ff0 <col:27> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x135828368 <line:56:9, line:57:54> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x135828130 <line:56:9> 'int ()' Function 0x135123308 'log_err' 'int ()'
        | |-DeclRefExpr 0x135828150 <col:17> 'struct xkb_context *' lvalue ParmVar 0x13580e248 'ctx' 'struct xkb_context *'
        | |-StringLiteral 0x135828170 <col:22> 'char[4]' lvalue "STR"
        | `-CallExpr 0x135828340 <line:57:17, col:53> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x135828270 <col:17> 'int ()' Function 0x1358281b8 'expr_op_type_to_string' 'int ()'
        |   `-CXXDependentScopeMemberExpr 0x1358282f8 <col:40, col:51> '<dependent type>' contains-errors lvalue .op
        |     `-CXXDependentScopeMemberExpr 0x1358282b0 <col:40, col:46> '<dependent type>' contains-errors lvalue ->expr
        |       `-RecoveryExpr 0x135828290 <col:40> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x1358283a0 <line:58:9>
        |-DefaultStmt 0x135828600 <line:60:5, line:62:31>
        | `-CallExpr 0x1358285c8 <line:61:9, line:62:31> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x1358284b8 <line:61:9> 'int ()' Function 0x135828400 'log_wsgo' 'int ()'
        |   |-DeclRefExpr 0x1358284d8 <col:18> 'struct xkb_context *' lvalue ParmVar 0x13580e248 'ctx' 'struct xkb_context *'
        |   |-StringLiteral 0x1358284f8 <col:23> 'char[4]' lvalue "STR"
        |   `-CXXDependentScopeMemberExpr 0x135828580 <line:62:18, col:29> '<dependent type>' contains-errors lvalue .op
        |     `-CXXDependentScopeMemberExpr 0x135828538 <col:18, col:24> '<dependent type>' contains-errors lvalue ->expr
        |       `-RecoveryExpr 0x135828518 <col:18> '<dependent type>' contains-errors lvalue
        `-BreakStmt 0x135828620 <line:63:9>
