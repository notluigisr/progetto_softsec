TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x127926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x127926000 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x127926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x127926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x127926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x1279263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x127926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x1279264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x127926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x127926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x1279265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x127926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1279266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x127926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x127926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1279267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x127926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1279268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x127926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x127926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1279269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x127926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x127926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x127926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x127926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x127926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x127926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x127926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x127926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x127926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x127926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x127926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x127926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x127926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x127926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x127927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x127927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1279278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x127927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1279279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x127927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x127927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x127927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x127927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x127927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x127927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x127927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x127927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x127927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x127927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x127927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x127927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x127927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x127927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x127927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x127928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x127927fb0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-FunctionDecl 0x130008348 <dataset_diviso_filec/func8032_vuln.c:1:1, line:42:1> line:1:12 llc_ui_autobind 'int (struct socket *, struct sockaddr_llc *)' static
| |-ParmVarDecl 0x127928648 <col:28, col:43> col:43 used sock 'struct socket *'
| |-ParmVarDecl 0x130008228 <col:49, col:70> col:70 used addr 'struct sockaddr_llc *'
| `-CompoundStmt 0x13100a2e0 <line:2:1, line:42:1>
|   |-DeclStmt 0x130008698 <line:3:2, col:28>
|   | |-RecordDecl 0x130008448 <col:2, col:9> col:9 struct sock
|   | `-VarDecl 0x1300085b8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
|   |   `-RecoveryExpr 0x130008658 <col:20, col:26> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x130008620 <col:20> 'struct socket *' lvalue ParmVar 0x127928648 'sock' 'struct socket *'
|   |-DeclStmt 0x130008aa8 <line:4:2, col:35>
|   | |-RecordDecl 0x1300086b0 <col:2, col:9> col:9 struct llc_sock
|   | `-VarDecl 0x130008818 <col:2, col:34> col:19 used llc 'struct llc_sock *' cinit
|   |   `-ImplicitCastExpr 0x130008a78 <col:25, col:34> 'struct llc_sock *' contains-errors <IntegralToPointer>
|   |     `-CallExpr 0x130008a38 <col:25, col:34> 'int' contains-errors
|   |       |-ImplicitCastExpr 0x130008a20 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1300089b0 <col:25> 'int ()' Function 0x1300088f8 'llc_sk' 'int ()'
|   |       `-ImplicitCastExpr 0x130008a60 <col:32> 'struct sock *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x1300089d0 <col:32> 'struct sock *' contains-errors lvalue Var 0x1300085b8 'sk' 'struct sock *'
|   |-DeclStmt 0x130008ca8 <line:5:2, col:21>
|   | |-RecordDecl 0x130008ac0 <col:2, col:9> col:9 struct llc_sap
|   | `-VarDecl 0x130008c28 <col:2, col:18> col:18 used sap 'struct llc_sap *'
|   |-DeclStmt 0x130008dd8 <line:6:2, col:18>
|   | `-VarDecl 0x130008cd8 <col:2, col:12> col:6 used rc 'int' cinit
|   |   `-UnaryOperator 0x130008dc0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x130008da8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x130008d88 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x130009040 <line:8:2, line:9:8>
|   | |-UnaryOperator 0x130008fc0 <line:8:6, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x130008f90 <col:7, col:32> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x130008ed0 <col:7> 'int ()' Function 0x130008e18 'sock_flag' 'int ()'
|   | |   |-DeclRefExpr 0x130008ef0 <col:17> 'struct sock *' contains-errors lvalue Var 0x1300085b8 'sk' 'struct sock *'
|   | |   `-RecoveryExpr 0x130008f70 <col:21> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x130009028 <line:9:3, col:8> 'out' 0x130008fd8
|   |-IfStmt 0x1300091c8 <line:10:2, line:11:23>
|   | |-UnaryOperator 0x1300090d8 <line:10:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1300090c0 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x130009098 <col:7, col:13> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x130009060 <col:7> 'struct sockaddr_llc *' lvalue ParmVar 0x130008228 'addr' 'struct sockaddr_llc *'
|   | `-BinaryOperator 0x1300091a8 <line:11:3, col:23> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x130009128 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x1300090f0 <col:3> 'struct sockaddr_llc *' lvalue ParmVar 0x130008228 'addr' 'struct sockaddr_llc *'
|   |   `-RecoveryExpr 0x130009188 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x127940af0 <line:12:2, line:13:8>
|   | |-BinaryOperator 0x127940ab8 <line:12:6, col:27> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x127940a38 <col:6, col:12> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x127940a00 <col:6> 'struct sockaddr_llc *' lvalue ParmVar 0x130008228 'addr' 'struct sockaddr_llc *'
|   | | `-RecoveryExpr 0x127940a98 <col:27> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x127940ad8 <line:13:3, col:8> 'out' 0x130008fd8
|   |-BinaryOperator 0x127940be8 <line:14:2, col:8> 'int' contains-errors '='
|   | |-DeclRefExpr 0x127940b10 <col:2> 'int' contains-errors lvalue Var 0x130008cd8 'rc' 'int'
|   | `-UnaryOperator 0x127940bd0 <col:7, col:8> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x127940bb8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x127940b98 <col:8> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1279414e0 <line:15:2, line:22:3> has_else
|   | |-RecoveryExpr 0x127940c40 <line:15:6, col:10> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x127940c08 <col:6> 'struct sock *' contains-errors lvalue Var 0x1300085b8 'sk' 'struct sock *'
|   | |-CompoundStmt 0x1279412f8 <col:27, line:21:2>
|   | | |-BinaryOperator 0x127940f10 <line:16:3, col:61> '<dependent type>' contains-errors '='
|   | | | |-RecoveryExpr 0x127940ca0 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x127940c68 <col:3> 'struct llc_sock *' contains-errors lvalue Var 0x130008818 'llc' 'struct llc_sock *'
|   | | | `-CallExpr 0x127940ee0 <col:14, col:61> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x127940da8 <col:14> 'int ()' Function 0x127940cf0 'dev_get_by_index' 'int ()'
|   | | |   |-UnaryOperator 0x127940ec8 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   | `-RecoveryExpr 0x127940ea8 <col:32> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x127940e30 <col:42, col:46> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x127940df8 <col:42> 'struct sock *' contains-errors lvalue Var 0x1300085b8 'sk' 'struct sock *'
|   | | `-IfStmt 0x1279412d8 <line:17:3, line:20:3>
|   | |   |-BinaryOperator 0x1279410b8 <line:17:7, col:50> 'int' contains-errors '&&'
|   | |   | |-RecoveryExpr 0x127940f68 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   | |   | | `-DeclRefExpr 0x127940f30 <col:7> 'struct llc_sock *' contains-errors lvalue Var 0x130008818 'llc' 'struct llc_sock *'
|   | |   | `-BinaryOperator 0x127941098 <col:19, col:50> 'int' contains-errors '!='
|   | |   |   |-RecoveryExpr 0x127940fc8 <col:19, col:25> '<dependent type>' contains-errors lvalue
|   | |   |   | `-DeclRefExpr 0x127940f90 <col:19> 'struct sockaddr_llc *' lvalue ParmVar 0x130008228 'addr' 'struct sockaddr_llc *'
|   | |   |   `-CXXDependentScopeMemberExpr 0x127941050 <col:40, col:50> '<dependent type>' contains-errors lvalue ->type
|   | |   |     `-RecoveryExpr 0x127941028 <col:40, col:45> '<dependent type>' contains-errors lvalue
|   | |   |       `-DeclRefExpr 0x127940ff0 <col:40> 'struct llc_sock *' contains-errors lvalue Var 0x130008818 'llc' 'struct llc_sock *'
|   | |   `-CompoundStmt 0x1279412c0 <col:56, line:20:3>
|   | |     `-CallExpr 0x127941238 <line:18:4, col:20> '<dependent type>' contains-errors
|   | |       |-DeclRefExpr 0x1279411b8 <col:4> 'int ()' Function 0x127941100 'dev_put' 'int ()'
|   | |       `-RecoveryExpr 0x127941210 <col:12, col:17> '<dependent type>' contains-errors lvalue
|   | |         `-DeclRefExpr 0x1279411d8 <col:12> 'struct llc_sock *' contains-errors lvalue Var 0x130008818 'llc' 'struct llc_sock *'
|   | `-NullStmt 0x1279414d8 <line:22:3>
|   |-IfStmt 0x1279415b8 <line:23:2, line:24:8>
|   | |-UnaryOperator 0x127941588 <line:23:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x127941570 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x127941548 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x127941510 <col:7> 'struct llc_sock *' contains-errors lvalue Var 0x130008818 'llc' 'struct llc_sock *'
|   | `-GotoStmt 0x1279415a0 <line:24:3, col:8> 'out' 0x130008fd8
|   |-BinaryOperator 0x1279419b0 <line:27:2, col:36> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127941830 <col:2, col:13> '<dependent type>' contains-errors lvalue .lsap
|   | | `-RecoveryExpr 0x127941808 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1279417d0 <col:2> 'struct llc_sock *' contains-errors lvalue Var 0x130008818 'llc' 'struct llc_sock *'
|   | `-CallExpr 0x127941990 <col:20, col:36> 'int'
|   |   `-ImplicitCastExpr 0x127941978 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x127941958 <col:20> 'int ()' Function 0x1279418a0 'llc_ui_autoport' 'int ()'
|   |-IfStmt 0x1310096d0 <line:28:2, line:29:8>
|   | |-UnaryOperator 0x1310096a0 <line:28:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x131009688 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x131009640 <col:7, col:18> '<dependent type>' contains-errors lvalue .lsap
|   | |     `-RecoveryExpr 0x131009618 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x1279419d0 <col:7> 'struct llc_sock *' contains-errors lvalue Var 0x130008818 'llc' 'struct llc_sock *'
|   | `-GotoStmt 0x1310096b8 <line:29:3, col:8> 'out' 0x130008fd8
|   |-IfStmt 0x131009940 <line:32:2, line:33:8>
|   | |-UnaryOperator 0x131009910 <line:32:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1310098f8 <col:7> 'struct llc_sap *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1310098d8 <col:7> 'struct llc_sap *' lvalue Var 0x130008c28 'sap' 'struct llc_sap *'
|   | `-GotoStmt 0x131009928 <line:33:3, col:8> 'out' 0x130008fd8
|   |-CallExpr 0x131009f08 <line:35:2, col:44> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x131009d98 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x1310099d8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-UnaryOperator 0x131009e18 <col:9, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x131009df0 <col:10, col:15> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x131009db8 <col:10> 'struct llc_sock *' contains-errors lvalue Var 0x130008818 'llc' 'struct llc_sock *'
|   | |-DeclRefExpr 0x131009e30 <col:21> 'struct sockaddr_llc *' lvalue ParmVar 0x130008228 'addr' 'struct sockaddr_llc *'
|   | `-UnaryExprOrTypeTraitExpr 0x131009ed0 <col:27, col:43> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x131009eb0 <col:33, col:43> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x131009e88 <col:34, col:39> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x131009e50 <col:34> 'struct llc_sock *' contains-errors lvalue Var 0x130008818 'llc' 'struct llc_sock *' non_odr_use_unevaluated
|   |-CallExpr 0x13100a098 <line:37:2, col:28> 'int' contains-errors
|   | |-ImplicitCastExpr 0x13100a080 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13100a020 <col:2> 'int ()' Function 0x131009f68 'llc_sap_add_socket' 'int ()'
|   | |-ImplicitCastExpr 0x13100a0c8 <col:21> 'struct llc_sap *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13100a040 <col:21> 'struct llc_sap *' lvalue Var 0x130008c28 'sap' 'struct llc_sap *'
|   | `-ImplicitCastExpr 0x13100a0e0 <col:26> 'struct sock *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x13100a060 <col:26> 'struct sock *' contains-errors lvalue Var 0x1300085b8 'sk' 'struct sock *'
|   |-BinaryOperator 0x13100a258 <line:39:2, col:7> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13100a218 <col:2> 'int' contains-errors lvalue Var 0x130008cd8 'rc' 'int'
|   | `-IntegerLiteral 0x13100a238 <col:7> 'int' 0
|   `-LabelStmt 0x13100a2c0 <line:40:1, line:41:9> 'out'
|     `-ReturnStmt 0x13100a2b0 <col:2, col:9>
|       `-ImplicitCastExpr 0x13100a298 <col:9> 'int' contains-errors <LValueToRValue>
|         `-DeclRefExpr 0x13100a278 <col:9> 'int' contains-errors lvalue Var 0x130008cd8 'rc' 'int'
`-FunctionDecl 0x1310099d8 <line:34:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x131009ad8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x131009b40 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x131009ba8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x131009a80 <<invalid sloc>> Implicit 882
