TranslationUnitDecl 0x120855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1208564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120855bd0 '__int128'
|-TypedefDecl 0x120856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120855bf0 'unsigned __int128'
|-TypedefDecl 0x10580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10580bc00 'struct __NSConstantString_tag'
|   `-Record 0x120856580 '__NSConstantString_tag'
|-TypedefDecl 0x10580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120855d90 '__SVInt8_t'
|-TypedefDecl 0x10580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120855db0 '__SVInt16_t'
|-TypedefDecl 0x10580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120855dd0 '__SVInt32_t'
|-TypedefDecl 0x10580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120855df0 '__SVInt64_t'
|-TypedefDecl 0x10580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120855e10 '__SVUint8_t'
|-TypedefDecl 0x10580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120855e30 '__SVUint16_t'
|-TypedefDecl 0x10580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120855e50 '__SVUint32_t'
|-TypedefDecl 0x10580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120855e70 '__SVUint64_t'
|-TypedefDecl 0x10580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120855e90 '__SVFloat16_t'
|-TypedefDecl 0x10580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120855eb0 '__SVFloat32_t'
|-TypedefDecl 0x10580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120855ed0 '__SVFloat64_t'
|-TypedefDecl 0x10580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120856090 '__clang_svint8x3_t'
|-TypedefDecl 0x10580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1208560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1208560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1208560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1208561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1208561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1208561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120856210 '__clang_svint8x4_t'
|-TypedefDecl 0x10580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120856230 '__clang_svint16x4_t'
|-TypedefDecl 0x10580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120856250 '__clang_svint32x4_t'
|-TypedefDecl 0x10580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120856270 '__clang_svint64x4_t'
|-TypedefDecl 0x10580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1208562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1208562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1208562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120856390 '__SVBool_t'
|-TypedefDecl 0x10580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1208563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1208563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1208563f0 '__SVCount_t'
|-TypedefDecl 0x10580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10580dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-TypedefDecl 0x10580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10580dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-FunctionDecl 0x10580e358 <dataset_diviso_filec/func24143_nonvuln.c:1:1, line:71:1> line:1:12 map_lookup_elem 'int (union bpf_attr *)' static
| |-ParmVarDecl 0x10580e248 <col:28, col:44> col:44 used attr 'union bpf_attr *'
| `-CompoundStmt 0x1209261f8 <line:2:1, line:71:1>
|   |-DeclStmt 0x1058266c8 <line:3:2, col:14>
|   | `-VarDecl 0x105826660 <col:2, col:7> col:7 invalid __user 'void'
|   |-DeclStmt 0x105826758 <line:4:2, col:14>
|   | `-VarDecl 0x1058266f0 <col:2, col:7> col:7 invalid __user 'void'
|   |-DeclStmt 0x105826850 <line:5:2, col:24>
|   | `-VarDecl 0x105826788 <col:2, col:18> col:6 used ufd 'int' cinit
|   |   `-RecoveryExpr 0x105826828 <col:12, col:18> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1058267f0 <col:12> 'union bpf_attr *' lvalue ParmVar 0x10580e248 'attr' 'union bpf_attr *'
|   |-DeclStmt 0x105826a58 <line:6:2, col:21>
|   | |-RecordDecl 0x105826868 <col:2, col:9> col:9 struct bpf_map
|   | `-VarDecl 0x1058269d8 <col:2, col:18> col:18 used map 'struct bpf_map *'
|   |-DeclStmt 0x105826c10 <line:7:2, col:25>
|   | |-VarDecl 0x105826a88 <col:2, col:8> col:8 used key 'void *'
|   | |-VarDecl 0x105826b08 <col:2, col:14> col:14 used value 'void *'
|   | `-VarDecl 0x105826b88 <col:2, col:22> col:22 used ptr 'void *'
|   |-DeclStmt 0x105826db8 <line:9:2, col:13>
|   | |-RecordDecl 0x105826c40 <col:2, col:9> col:9 struct fd
|   | `-VarDecl 0x105826d38 <col:2, col:12> col:12 referenced invalid f 'struct fd'
|   |-DeclStmt 0x105826e50 <line:10:2, col:9>
|   | `-VarDecl 0x105826de8 <col:2, col:6> col:6 used err 'int'
|   |-IfStmt 0x1058270d0 <line:12:2, line:13:11>
|   | |-CallExpr 0x105827000 <line:12:6, col:36> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x105826f80 <col:6> 'int ()' Function 0x105826ec8 'CHECK_ATTR' 'int ()'
|   | | `-RecoveryExpr 0x105826fe0 <col:17> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1058270c0 <line:13:3, col:11>
|   |   `-UnaryOperator 0x1058270a8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x105827090 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x105827070 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1058272e8 <line:15:2, col:15> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x105827110 <col:2> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1058270f0 <col:2> 'struct fd' lvalue Var 0x105826d38 'f' 'struct fd'
|   | `-CallExpr 0x1058272a8 <col:6, col:15> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x105827290 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x105827218 <col:6> 'int ()' Function 0x105827160 'fdget' 'int ()'
|   |   `-ImplicitCastExpr 0x1058272d0 <col:12> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x105827238 <col:12> 'int' contains-errors lvalue Var 0x105826788 'ufd' 'int'
|   |-BinaryOperator 0x105827470 <line:16:2, col:23> 'struct bpf_map *' contains-errors '='
|   | |-DeclRefExpr 0x105827308 <col:2> 'struct bpf_map *' lvalue Var 0x1058269d8 'map' 'struct bpf_map *'
|   | `-CallExpr 0x105827448 <col:8, col:23> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x105827408 <col:8> 'int ()' Function 0x105827350 '__bpf_map_get' 'int ()'
|   |   `-RecoveryExpr 0x105827428 <col:22> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x120923da0 <line:17:2, line:18:21>
|   | |-CallExpr 0x1058275c8 <line:17:6, col:16> 'int'
|   | | |-ImplicitCastExpr 0x1058275b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x105827570 <col:6> 'int ()' Function 0x1058274b8 'IS_ERR' 'int ()'
|   | | `-ImplicitCastExpr 0x120923c00 <col:13> 'struct bpf_map *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x105827590 <col:13> 'struct bpf_map *' lvalue Var 0x1058269d8 'map' 'struct bpf_map *'
|   | `-ReturnStmt 0x120923d90 <line:18:3, col:21>
|   |   `-CallExpr 0x120923d50 <col:10, col:21> 'int'
|   |     |-ImplicitCastExpr 0x120923d38 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x120923cf8 <col:10> 'int ()' Function 0x120923c40 'PTR_ERR' 'int ()'
|   |     `-ImplicitCastExpr 0x120923d78 <col:18> 'struct bpf_map *' <LValueToRValue>
|   |       `-DeclRefExpr 0x120923d18 <col:18> 'struct bpf_map *' lvalue Var 0x1058269d8 'map' 'struct bpf_map *'
|   |-BinaryOperator 0x120923e98 <line:20:2, col:9> 'int' contains-errors '='
|   | |-DeclRefExpr 0x120923dc0 <col:2> 'int' lvalue Var 0x105826de8 'err' 'int'
|   | `-UnaryOperator 0x120923e80 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x120923e68 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x120923e48 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1209240f0 <line:21:2, col:39> 'void *' contains-errors '='
|   | |-DeclRefExpr 0x120923eb8 <col:2> 'void *' lvalue Var 0x105826a88 'key' 'void *'
|   | `-CallExpr 0x1209240c0 <col:8, col:39> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x120923fb8 <col:8> 'int ()' Function 0x120923f00 'kmalloc' 'int ()'
|   |   |-RecoveryExpr 0x120924010 <col:16, col:21> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x120923fd8 <col:16> 'struct bpf_map *' lvalue Var 0x1058269d8 'map' 'struct bpf_map *'
|   |   `-RecoveryExpr 0x1209240a0 <col:31> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1209241c8 <line:22:2, line:23:8>
|   | |-UnaryOperator 0x120924148 <line:22:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x120924130 <col:7> 'void *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x120924110 <col:7> 'void *' lvalue Var 0x105826a88 'key' 'void *'
|   | `-GotoStmt 0x1209241b0 <line:23:3, col:8> 'err_put' 0x120924160
|   |-BinaryOperator 0x1209242c0 <line:25:2, col:9> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1209241e8 <col:2> 'int' lvalue Var 0x105826de8 'err' 'int'
|   | `-UnaryOperator 0x1209242a8 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x120924290 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x120924270 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x120924508 <line:26:2, line:27:8>
|   | |-RecoveryExpr 0x120924480 <line:26:6, col:50> '_Bool' contains-errors
|   | `-GotoStmt 0x1209244f0 <line:27:3, col:8> 'free_key' 0x1209244a0
|   |-IfStmt 0x120924a38 <line:37:2, line:38:8>
|   | |-UnaryOperator 0x120924a08 <line:37:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1209249f0 <col:7> 'void *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1209249d0 <col:7> 'void *' lvalue Var 0x105826b08 'value' 'void *'
|   | `-GotoStmt 0x120924a20 <line:38:3, col:8> 'free_key' 0x1209244a0
|   |-IfStmt 0x120925ae8 <line:40:2, line:53:2> has_else
|   | |-RecoveryExpr 0x120924ab8 <line:40:6, col:23> '_Bool' contains-errors
|   | |-CompoundStmt 0x120924d18 <col:49, line:42:2>
|   | | `-BinaryOperator 0x120924cf8 <line:41:3, col:45> 'int' '='
|   | |   |-DeclRefExpr 0x120924ad8 <col:3> 'int' lvalue Var 0x105826de8 'err' 'int'
|   | |   `-CallExpr 0x120924c78 <col:9, col:45> 'int'
|   | |     |-ImplicitCastExpr 0x120924c60 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x120924bd8 <col:9> 'int ()' Function 0x120924b20 'bpf_percpu_hash_copy' 'int ()'
|   | |     |-ImplicitCastExpr 0x120924cb0 <col:30> 'struct bpf_map *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x120924c00 <col:30> 'struct bpf_map *' lvalue Var 0x1058269d8 'map' 'struct bpf_map *'
|   | |     |-ImplicitCastExpr 0x120924cc8 <col:35> 'void *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x120924c20 <col:35> 'void *' lvalue Var 0x105826a88 'key' 'void *'
|   | |     `-ImplicitCastExpr 0x120924ce0 <col:40> 'void *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x120924c40 <col:40> 'void *' lvalue Var 0x105826b08 'value' 'void *'
|   | `-IfStmt 0x120925ab8 <line:42:9, line:53:2> has_else
|   |   |-RecoveryExpr 0x120924d90 <line:42:13, col:30> '_Bool' contains-errors
|   |   |-CompoundStmt 0x120924fe8 <col:57, line:44:2>
|   |   | `-BinaryOperator 0x120924fc8 <line:43:3, col:46> 'int' '='
|   |   |   |-DeclRefExpr 0x120924db0 <col:3> 'int' lvalue Var 0x105826de8 'err' 'int'
|   |   |   `-CallExpr 0x120924f48 <col:9, col:46> 'int'
|   |   |     |-ImplicitCastExpr 0x120924f30 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x120924eb0 <col:9> 'int ()' Function 0x120924df8 'bpf_percpu_array_copy' 'int ()'
|   |   |     |-ImplicitCastExpr 0x120924f80 <col:31> 'struct bpf_map *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x120924ed0 <col:31> 'struct bpf_map *' lvalue Var 0x1058269d8 'map' 'struct bpf_map *'
|   |   |     |-ImplicitCastExpr 0x120924f98 <col:36> 'void *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x120924ef0 <col:36> 'void *' lvalue Var 0x105826a88 'key' 'void *'
|   |   |     `-ImplicitCastExpr 0x120924fb0 <col:41> 'void *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x120924f10 <col:41> 'void *' lvalue Var 0x105826b08 'value' 'void *'
|   |   `-IfStmt 0x120925a88 <line:44:9, line:53:2> has_else
|   |     |-RecoveryExpr 0x120925060 <line:44:13, col:30> '_Bool' contains-errors
|   |     |-CompoundStmt 0x1209252b8 <col:56, line:46:2>
|   |     | `-BinaryOperator 0x120925298 <line:45:3, col:42> 'int' '='
|   |     |   |-DeclRefExpr 0x120925080 <col:3> 'int' lvalue Var 0x105826de8 'err' 'int'
|   |     |   `-CallExpr 0x120925218 <col:9, col:42> 'int'
|   |     |     |-ImplicitCastExpr 0x120925200 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     |     | `-DeclRefExpr 0x120925180 <col:9> 'int ()' Function 0x1209250c8 'bpf_stackmap_copy' 'int ()'
|   |     |     |-ImplicitCastExpr 0x120925250 <col:27> 'struct bpf_map *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x1209251a0 <col:27> 'struct bpf_map *' lvalue Var 0x1058269d8 'map' 'struct bpf_map *'
|   |     |     |-ImplicitCastExpr 0x120925268 <col:32> 'void *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x1209251c0 <col:32> 'void *' lvalue Var 0x105826a88 'key' 'void *'
|   |     |     `-ImplicitCastExpr 0x120925280 <col:37> 'void *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x1209251e0 <col:37> 'void *' lvalue Var 0x105826b08 'value' 'void *'
|   |     `-CompoundStmt 0x120925a60 <line:46:9, line:53:2>
|   |       |-CallExpr 0x1209253e8 <line:47:3, col:17> 'int'
|   |       | `-ImplicitCastExpr 0x1209253d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |       |   `-DeclRefExpr 0x1209253b0 <col:3> 'int ()' Function 0x1209252f8 'rcu_read_lock' 'int ()'
|   |       |-BinaryOperator 0x120925540 <line:48:3, col:43> 'void *' contains-errors '='
|   |       | |-DeclRefExpr 0x120925408 <col:3> 'void *' lvalue Var 0x105826b88 'ptr' 'void *'
|   |       | `-CallExpr 0x120925510 <col:9, col:43> '<dependent type>' contains-errors
|   |       |   |-CXXDependentScopeMemberExpr 0x120925488 <col:9, col:19> '<dependent type>' contains-errors lvalue ->map_lookup_elem
|   |       |   | `-RecoveryExpr 0x120925460 <col:9, col:14> '<dependent type>' contains-errors lvalue
|   |       |   |   `-DeclRefExpr 0x120925428 <col:9> 'struct bpf_map *' lvalue Var 0x1058269d8 'map' 'struct bpf_map *'
|   |       |   |-DeclRefExpr 0x1209254d0 <col:35> 'struct bpf_map *' lvalue Var 0x1058269d8 'map' 'struct bpf_map *'
|   |       |   `-DeclRefExpr 0x1209254f0 <col:40> 'void *' lvalue Var 0x105826a88 'key' 'void *'
|   |       `-CallExpr 0x1209259e0 <line:51:3, col:19> 'int'
|   |         `-ImplicitCastExpr 0x1209259c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |           `-DeclRefExpr 0x1209259a8 <col:3> 'int ()' Function 0x1209258f0 'rcu_read_unlock' 'int ()'
|   |-IfStmt 0x120925bb8 <line:55:2, line:56:8>
|   | |-ImplicitCastExpr 0x120925b38 <line:55:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x120925b18 <col:6> 'int' lvalue Var 0x105826de8 'err' 'int'
|   | `-GotoStmt 0x120925ba0 <line:56:3, col:8> 'free_value' 0x120925b50
|   |-IfStmt 0x120925d78 <line:59:2, line:60:8>
|   | |-RecoveryExpr 0x120925d40 <line:59:6, col:49> '_Bool' contains-errors
|   | `-GotoStmt 0x120925d60 <line:60:3, col:8> 'free_value' 0x120925b50
|   |-BinaryOperator 0x120925dd8 <line:62:2, col:8> 'int' '='
|   | |-DeclRefExpr 0x120925d98 <col:2> 'int' lvalue Var 0x105826de8 'err' 'int'
|   | `-IntegerLiteral 0x120925db8 <col:8> 'int' 0
|   |-LabelStmt 0x120925f70 <line:64:1, line:65:13> 'free_value'
|   | `-CallExpr 0x120925f30 <col:2, col:13> 'int'
|   |   |-ImplicitCastExpr 0x120925f18 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x120925ed8 <col:2> 'int ()' Function 0x120925e20 'kfree' 'int ()'
|   |   `-ImplicitCastExpr 0x120925f58 <col:8> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x120925ef8 <col:8> 'void *' lvalue Var 0x105826b08 'value' 'void *'
|   |-LabelStmt 0x120926028 <line:66:1, line:67:11> 'free_key'
|   | `-CallExpr 0x120925fe8 <col:2, col:11> 'int'
|   |   |-ImplicitCastExpr 0x120925fd0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x120925f90 <col:2> 'int ()' Function 0x120925e20 'kfree' 'int ()'
|   |   `-ImplicitCastExpr 0x120926010 <col:8> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x120925fb0 <col:8> 'void *' lvalue Var 0x105826a88 'key' 'void *'
|   |-LabelStmt 0x120926190 <line:68:1, line:69:9> 'err_put'
|   | `-CallExpr 0x120926168 <col:2, col:9> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x120926128 <col:2> 'int ()' Function 0x120926070 'fdput' 'int ()'
|   |   `-RecoveryExpr 0x120926148 <col:8> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x1209261e8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x1209261d0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1209261b0 <col:9> 'int' lvalue Var 0x105826de8 'err' 'int'
`-FunctionDecl 0x120925618 <line:50:4> col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x120925718 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x120925780 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x1209257e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1209256c0 <<invalid sloc>> Implicit 882
