TranslationUnitDecl 0x12a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a055bd0 '__int128'
|-TypedefDecl 0x12a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a055bf0 'unsigned __int128'
|-TypedefDecl 0x12a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12a056580 '__NSConstantString_tag'
|-TypedefDecl 0x12a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a055d90 '__SVInt8_t'
|-TypedefDecl 0x12a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a055db0 '__SVInt16_t'
|-TypedefDecl 0x12a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a055dd0 '__SVInt32_t'
|-TypedefDecl 0x12a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a055df0 '__SVInt64_t'
|-TypedefDecl 0x12a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a055e10 '__SVUint8_t'
|-TypedefDecl 0x12a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a055e30 '__SVUint16_t'
|-TypedefDecl 0x12a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a055e50 '__SVUint32_t'
|-TypedefDecl 0x12a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a055e70 '__SVUint64_t'
|-TypedefDecl 0x12a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a055e90 '__SVFloat16_t'
|-TypedefDecl 0x12a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a056390 '__SVBool_t'
|-TypedefDecl 0x12a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a0563f0 '__SVCount_t'
|-TypedefDecl 0x12a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a80dbb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-TypedefDecl 0x12a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a80dbb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
`-FunctionDecl 0x12a80dd98 <dataset_diviso_filec/func4557_vuln.c:1:1, line:47:1> line:1:10 _gnutls_fips_mode_enabled 'unsigned int (void)'
  `-CompoundStmt 0x12a82a490 <line:2:1, line:47:1>
    |-DeclStmt 0x12a80dfd8 <line:3:1, col:22>
    | |-VarDecl 0x12a80dea0 <col:1, col:16> col:10 used f1p 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x12a80df28 <col:16> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x12a80df08 <col:16> 'int' 0
    | `-VarDecl 0x12a80df58 <col:1, col:19> col:19 used f2p 'unsigned int'
    |-DeclStmt 0x12a80e0a0 <line:5:1, col:14>
    | `-VarDecl 0x12a80e038 <col:1, col:13> col:13 used p 'const char *'
    |-IfStmt 0x12a80e1b0 <line:7:2, line:8:10>
    | |-BinaryOperator 0x12a80e148 <line:7:6, col:21> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x12a80e128 <col:6> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x12a80e0f0 <col:20, col:21> 'int' prefix '-'
    | |   `-IntegerLiteral 0x12a80e0d0 <col:21> 'int' 1
    | `-ReturnStmt 0x12a80e1a0 <line:8:3, col:10>
    |   `-RecoveryExpr 0x12a80e180 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a828250 <line:10:2, col:18> 'const char *' '='
    | |-DeclRefExpr 0x12a80e1d0 <col:2> 'const char *' lvalue Var 0x12a80e038 'p' 'const char *'
    | `-ImplicitCastExpr 0x12a827e18 <col:6, col:18> 'const char *' <IntegralToPointer>
    |   `-CallExpr 0x12a80e3c8 <col:6, col:18> 'int'
    |     |-ImplicitCastExpr 0x12a80e3b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12a80e300 <col:6> 'int ()' Function 0x12a80e248 'getenv' 'int ()'
    |     `-ImplicitCastExpr 0x12a827e00 <col:13> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x12a80e360 <col:13> 'char[4]' lvalue "STR"
    |-IfStmt 0x12a828528 <line:11:2, line:19:2>
    | |-ImplicitCastExpr 0x12a828290 <line:11:6> 'const char *' <LValueToRValue>
    | | `-DeclRefExpr 0x12a828270 <col:6> 'const char *' lvalue Var 0x12a80e038 'p' 'const char *'
    | `-CompoundStmt 0x12a828510 <col:9, line:19:2>
    |   `-ReturnStmt 0x12a828500 <line:18:3, col:10>
    |     `-RecoveryExpr 0x12a8284e0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a828ca0 <line:22:2, line:28:2>
    | |-BinaryOperator 0x12a828740 <line:22:6, col:12> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x12a828700 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12a828720 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a828c78 <col:18, line:28:2>
    |   |-BinaryOperator 0x12a828928 <line:23:3, col:17> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x12a828760 <col:3> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    |   | `-CallExpr 0x12a828900 <col:9, col:17> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12a828860 <col:9> 'int ()' Function 0x12a8287a8 'fgetc' 'int ()'
    |   |   `-RecoveryExpr 0x12a8288e0 <col:15> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x12a828aa8 <line:24:3, col:12> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a828a28 <col:3> 'int ()' Function 0x12a828970 'fclose' 'int ()'
    |   | `-RecoveryExpr 0x12a828a88 <col:10> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12a828c48 <line:26:3, line:27:14> has_else
    |     |-BinaryOperator 0x12a828b38 <line:26:7, col:14> 'int' '=='
    |     | |-ImplicitCastExpr 0x12a828b08 <col:7> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12a828ad0 <col:7> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    |     | `-ImplicitCastExpr 0x12a828b20 <col:14> 'unsigned int' <IntegralCast>
    |     |   `-CharacterLiteral 0x12a828af0 <col:14> 'int' 49
    |     |-BinaryOperator 0x12a828bb0 <col:19, col:25> 'unsigned int' '='
    |     | |-DeclRefExpr 0x12a828b58 <col:19> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    |     | `-ImplicitCastExpr 0x12a828b98 <col:25> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x12a828b78 <col:25> 'int' 1
    |     `-BinaryOperator 0x12a828c28 <line:27:8, col:14> 'unsigned int' '='
    |       |-DeclRefExpr 0x12a828bd0 <col:8> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    |       `-ImplicitCastExpr 0x12a828c10 <col:14> 'unsigned int' <IntegralCast>
    |         `-IntegerLiteral 0x12a828bf0 <col:14> 'int' 0
    |-IfStmt 0x12a82a2d0 <line:32:2, line:36:2>
    | |-BinaryOperator 0x12a82a100 <line:32:6, col:25> 'int' '&&'
    | | |-BinaryOperator 0x12a82a050 <col:6, col:13> 'int' '!='
    | | | |-ImplicitCastExpr 0x12a82a020 <col:6> 'unsigned int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12a828de0 <col:6> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    | | | `-ImplicitCastExpr 0x12a82a038 <col:13> 'unsigned int' <IntegralCast>
    | | |   `-IntegerLiteral 0x12a82a000 <col:13> 'int' 0
    | | `-BinaryOperator 0x12a82a0e0 <col:18, col:25> 'int' '!='
    | |   |-ImplicitCastExpr 0x12a82a0b0 <col:18> 'unsigned int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12a82a070 <col:18> 'unsigned int' lvalue Var 0x12a80df58 'f2p' 'unsigned int'
    | |   `-ImplicitCastExpr 0x12a82a0c8 <col:25> 'unsigned int' <IntegralCast>
    | |     `-IntegerLiteral 0x12a82a090 <col:25> 'int' 0
    | `-CompoundStmt 0x12a82a2b8 <col:28, line:36:2>
    |   `-CallExpr 0x12a82a258 <line:33:3, col:26> 'int'
    |     |-ImplicitCastExpr 0x12a82a240 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12a82a200 <col:3> 'int ()' Function 0x12a82a148 '_gnutls_debug_log' 'int ()'
    |     `-ImplicitCastExpr 0x12a82a280 <col:21> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x12a82a220 <col:21> 'char[4]' lvalue "STR"
    `-IfStmt 0x12a82a450 <line:38:2, line:43:2>
      |-BinaryOperator 0x12a82a360 <line:38:6, col:13> 'int' '!='
      | |-ImplicitCastExpr 0x12a82a330 <col:6> 'unsigned int' <LValueToRValue>
      | | `-DeclRefExpr 0x12a82a2f0 <col:6> 'unsigned int' lvalue Var 0x12a80df58 'f2p' 'unsigned int'
      | `-ImplicitCastExpr 0x12a82a348 <col:13> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x12a82a310 <col:13> 'int' 0
      `-CompoundStmt 0x12a82a438 <col:16, line:43:2>
        `-CallExpr 0x12a82a3d8 <line:40:3, col:26> 'int'
          |-ImplicitCastExpr 0x12a82a3c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x12a82a380 <col:3> 'int ()' Function 0x12a82a148 '_gnutls_debug_log' 'int ()'
          `-ImplicitCastExpr 0x12a82a400 <col:21> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x12a82a3a0 <col:21> 'char[4]' lvalue "STR"
