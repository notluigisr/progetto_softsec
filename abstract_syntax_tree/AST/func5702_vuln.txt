TranslationUnitDecl 0x152055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1520564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152055bd0 '__int128'
|-TypedefDecl 0x152056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152055bf0 'unsigned __int128'
|-TypedefDecl 0x15280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15280bc00 'struct __NSConstantString_tag'
|   `-Record 0x152056580 '__NSConstantString_tag'
|-TypedefDecl 0x15280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152055d90 '__SVInt8_t'
|-TypedefDecl 0x15280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152055db0 '__SVInt16_t'
|-TypedefDecl 0x15280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152055dd0 '__SVInt32_t'
|-TypedefDecl 0x15280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152055df0 '__SVInt64_t'
|-TypedefDecl 0x15280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152055e10 '__SVUint8_t'
|-TypedefDecl 0x15280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152055e30 '__SVUint16_t'
|-TypedefDecl 0x15280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152055e50 '__SVUint32_t'
|-TypedefDecl 0x15280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152055e70 '__SVUint64_t'
|-TypedefDecl 0x15280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152055e90 '__SVFloat16_t'
|-TypedefDecl 0x15280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1520560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1520560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1520560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1520561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1520561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1520561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1520562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1520562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1520562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152056390 '__SVBool_t'
|-TypedefDecl 0x15280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1520563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1520563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1520563f0 '__SVCount_t'
|-TypedefDecl 0x15280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-TypedefDecl 0x15280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-FunctionDecl 0x15280e198 <dataset_diviso_filec/func5702_vuln.c:1:1, line:55:1> line:1:1 invalid mswin_handle_fopen 'int (int *, const char *, const char *, int **, char *, int, int *)'
| |-ParmVarDecl 0x15280dd28 <col:20, col:35> col:35 invalid iodev 'int *'
| |-ParmVarDecl 0x15280dda8 <col:42, col:54> col:54 used fname 'const char *'
| |-ParmVarDecl 0x15280de28 <col:61, col:73> col:73 used access 'const char *'
| |-ParmVarDecl 0x15280dee0 <line:2:20, col:31> col:31 invalid pfile 'int **'
| |-ParmVarDecl 0x15280df60 <col:38, col:44> col:44 used rfname 'char *'
| |-ParmVarDecl 0x15280dfe0 <col:52, col:57> col:57 rnamelen 'int'
| |-ParmVarDecl 0x15280e060 <col:67, col:80> col:80 invalid mem 'int *'
| `-CompoundStmt 0x15282b588 <line:3:1, line:55:1>
|   |-DeclStmt 0x15280e2f8 <line:4:5, col:11>
|   | `-VarDecl 0x15280e290 <col:5, col:9> col:9 used fd 'int'
|   |-DeclStmt 0x15280e390 <line:5:5, col:15>
|   | `-VarDecl 0x15280e328 <col:5, col:10> col:10 used hfile 'long'
|   |-IfStmt 0x1528277a0 <line:9:5, line:10:16>
|   | |-BinaryOperator 0x152827738 <line:9:9, col:49> 'int' contains-errors '!='
|   | | |-CallExpr 0x1528276e0 <col:9, col:44> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x152827660 <col:9> 'int ()' Function 0x1528275a8 'gp_validate_path' 'int ()'
|   | | | |-RecoveryExpr 0x152827680 <col:26> '<dependent type>' contains-errors lvalue
|   | | | |-DeclRefExpr 0x1528276a0 <col:31> 'const char *' lvalue ParmVar 0x15280dda8 'fname' 'const char *'
|   | | | `-DeclRefExpr 0x1528276c0 <col:38> 'const char *' lvalue ParmVar 0x15280de28 'access' 'const char *'
|   | | `-IntegerLiteral 0x152827718 <col:49> 'int' 0
|   | `-ReturnStmt 0x152827790 <line:10:9, col:16>
|   |   `-RecoveryExpr 0x152827770 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1528278c8 <line:14:5, col:14> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x152827890 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x152827878 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1528277c0 <col:6> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x1528278a8 <col:14> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x152828090 <line:15:5, line:24:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x152827bd8 <line:15:30, col:56> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x152827b10 <col:30, col:36> 'int' contains-errors '!='
|   | | | |-RecoveryExpr 0x152827ad0 <col:30> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x152827af0 <col:36> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x152827bb8 <col:44, col:56> 'int' contains-errors '!='
|   | |   |-CXXDependentScopeMemberExpr 0x152827b50 <col:44, col:48> '<dependent type>' contains-errors lvalue ->next
|   | |   | `-RecoveryExpr 0x152827b30 <col:44> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x152827b98 <col:56> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x152827d18 <col:62, col:71> '<dependent type>' contains-errors '='
|   | | |-RecoveryExpr 0x152827c90 <col:62> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x152827cd0 <col:67, col:71> '<dependent type>' contains-errors lvalue ->next
|   | |   `-RecoveryExpr 0x152827cb0 <col:67> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x152828068 <line:16:5, line:24:5>
|   |   |-DeclStmt 0x152827dd8 <line:17:9, col:21>
|   |   | `-VarDecl 0x152827d50 <col:9, col:20> col:13 used code 'int' cinit
|   |   |   `-IntegerLiteral 0x152827db8 <col:20> 'int' 0
|   |   |-IfStmt 0x152827f70 <line:20:9, line:21:20>
|   |   | |-BinaryOperator 0x152827f08 <line:20:13, col:20> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x152827ef0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x152827eb0 <col:13> 'int' lvalue Var 0x152827d50 'code' 'int'
|   |   | | `-IntegerLiteral 0x152827ed0 <col:20> 'int' 0
|   |   | `-ReturnStmt 0x152827f60 <line:21:13, col:20>
|   |   |   `-ImplicitCastExpr 0x152827f48 <col:20> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x152827f28 <col:20> 'int' lvalue Var 0x152827d50 'code' 'int'
|   |   `-IfStmt 0x152828048 <line:22:9, line:23:20>
|   |     |-RecoveryExpr 0x152827fe0 <line:22:13, col:23> '_Bool' contains-errors
|   |     `-ReturnStmt 0x152828038 <line:23:13, col:20>
|   |       `-ImplicitCastExpr 0x152828020 <col:20> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x152828000 <col:20> 'int' lvalue Var 0x152827d50 'code' 'int'
|   |-BinaryOperator 0x152828280 <line:28:5, col:36> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x152828120 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x152828108 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1528280e8 <col:6> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x152828258 <col:14, col:36> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x152828218 <col:14> 'int ()' Function 0x152828160 'gp_file_FILE_alloc' 'int ()'
|   |   `-RecoveryExpr 0x152828238 <col:33> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x152828320 <line:29:5, line:31:5>
|   | |-RecoveryExpr 0x1528282f0 <line:29:9, col:19> '_Bool' contains-errors
|   | `-CompoundStmt 0x152828310 <col:25, line:31:5>
|   |-IfStmt 0x152829790 <line:33:5, line:36:5>
|   | |-RecoveryExpr 0x1528293e0 <line:33:9, col:49> '_Bool' contains-errors
|   | `-CompoundStmt 0x152829778 <col:71, line:36:5>
|   |   `-CallExpr 0x152829550 <line:34:9, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1528294e0 <col:9> 'int ()' Function 0x152829428 'gp_file_dealloc' 'int ()'
|   |     `-UnaryOperator 0x152829538 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x152829520 <col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x152829500 <col:26> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1528299b0 <line:39:5, col:40> 'int' '='
|   | |-DeclRefExpr 0x1528297b0 <col:5> 'int' lvalue Var 0x15280e290 'fd' 'int'
|   | `-CallExpr 0x152829980 <col:10, col:40> 'int'
|   |   |-ImplicitCastExpr 0x152829968 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1528298b0 <col:10> 'int ()' Function 0x1528297f8 '_open_osfhandle' 'int ()'
|   |   |-CStyleCastExpr 0x152829920 <col:26, col:32> 'long' <NoOp>
|   |   | `-ImplicitCastExpr 0x152829908 <col:32> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x1528298d0 <col:32> 'long' lvalue Var 0x15280e328 'hfile' 'long'
|   |   `-IntegerLiteral 0x152829948 <col:39> 'int' 0
|   |-IfStmt 0x152829b50 <line:40:5, line:43:5>
|   | |-BinaryOperator 0x152829a40 <line:40:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x152829a28 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1528299d0 <col:9> 'int' lvalue Var 0x15280e290 'fd' 'int'
|   | | `-UnaryOperator 0x152829a10 <col:15, col:16> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1528299f0 <col:16> 'int' 1
|   | `-CompoundStmt 0x152829b38 <col:19, line:43:5>
|   |   `-CallExpr 0x152829ad0 <line:41:9, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x152829a60 <col:9> 'int ()' Function 0x152829428 'gp_file_dealloc' 'int ()'
|   |     `-UnaryOperator 0x152829ab8 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x152829aa0 <col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x152829a80 <col:26> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x152829f78 <line:46:5, line:49:5>
|   | |-RecoveryExpr 0x152829eb8 <line:46:9, col:66> '_Bool' contains-errors
|   | `-CompoundStmt 0x152829f68 <col:69, line:49:5>
|   |-IfStmt 0x15282b538 <line:51:5, line:52:29>
|   | |-RecoveryExpr 0x152829fb8 <line:51:9, col:19> '_Bool' contains-errors
|   | `-CallExpr 0x15282b4d8 <line:52:9, col:29> 'char *'
|   |   |-ImplicitCastExpr 0x15282b4c0 <col:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15282b400 <col:9> 'char *(char *, const char *)' Function 0x15282a020 'strcpy' 'char *(char *, const char *)'
|   |   |-ImplicitCastExpr 0x15282b508 <col:16> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15282b420 <col:16> 'char *' lvalue ParmVar 0x15280df60 'rfname' 'char *'
|   |   `-ImplicitCastExpr 0x15282b520 <col:24> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15282b440 <col:24> 'const char *' lvalue ParmVar 0x15280dda8 'fname' 'const char *'
|   `-ReturnStmt 0x15282b578 <line:54:5, col:12>
|     `-IntegerLiteral 0x15282b558 <col:12> 'int' 0
`-FunctionDecl 0x15282a020 <line:52:9> col:9 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x15282a120 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x15282a188 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15282a0c8 <<invalid sloc>> Implicit 885
