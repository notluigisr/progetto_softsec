TranslationUnitDecl 0x151055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1510564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151055bd0 '__int128'
|-TypedefDecl 0x151056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151055bf0 'unsigned __int128'
|-TypedefDecl 0x15180be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15180bc00 'struct __NSConstantString_tag'
|   `-Record 0x151056580 '__NSConstantString_tag'
|-TypedefDecl 0x15180be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151055d90 '__SVInt8_t'
|-TypedefDecl 0x15180bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151055db0 '__SVInt16_t'
|-TypedefDecl 0x15180bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151055dd0 '__SVInt32_t'
|-TypedefDecl 0x15180bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151055df0 '__SVInt64_t'
|-TypedefDecl 0x15180c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151055e10 '__SVUint8_t'
|-TypedefDecl 0x15180c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151055e30 '__SVUint16_t'
|-TypedefDecl 0x15180c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151055e50 '__SVUint32_t'
|-TypedefDecl 0x15180c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151055e70 '__SVUint64_t'
|-TypedefDecl 0x15180c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151055e90 '__SVFloat16_t'
|-TypedefDecl 0x15180c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15180c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15180c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15180c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15180c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15180c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15180c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15180c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15180c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15180c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15180c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15180c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15180c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15180c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15180c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15180c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15180c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1510560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15180c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1510560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15180c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1510560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15180c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15180ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15180cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15180cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15180cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15180d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1510561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15180d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1510561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15180d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1510561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15180d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15180d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15180d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15180d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15180d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15180d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1510562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15180d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1510562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15180d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1510562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15180d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15180d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15180d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15180d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15180da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151056390 '__SVBool_t'
|-TypedefDecl 0x15180da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1510563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15180dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1510563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15180db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1510563f0 '__SVCount_t'
|-TypedefDecl 0x15180dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15180dbb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-TypedefDecl 0x15180dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15180dbb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-FunctionDecl 0x15180de58 <dataset_diviso_filec/func16756_vuln.c:1:1, line:23:1> line:1:1 invalid parsecolorchar 'int (int, int)'
| |-ParmVarDecl 0x15180dcf0 <col:16, col:22> col:22 referenced invalid arg 'int'
| |-ParmVarDecl 0x15180dd70 <col:27, col:31> col:31 used is_fg 'int'
| `-CompoundStmt 0x15182bb08 <line:2:1, line:23:1>
|   |-IfStmt 0x15182baa8 <line:3:5, line:21:33> has_else
|   | |-RecoveryExpr 0x15180dfa8 <line:3:9, col:22> '_Bool' contains-errors
|   | |-CompoundStmt 0x15182b8f8 <col:27, line:20:5>
|   | | |-DeclStmt 0x15180e048 <line:4:2, col:10>
|   | | | `-VarDecl 0x15180dfe0 <col:2, col:8> col:8 used ep 'char *'
|   | | `-IfStmt 0x15182b8c8 <line:6:2, line:19:2> has_else
|   | |   |-RecoveryExpr 0x151827bf0 <line:6:6, col:31> '_Bool' contains-errors
|   | |   |-CompoundStmt 0x15182b5c0 <col:34, line:15:2>
|   | |   | |-DeclStmt 0x151827e10 <line:7:6, col:32>
|   | |   | | |-VarDecl 0x151827c20 <col:6, col:17> col:11 used oc 'char' cinit
|   | |   | | | `-ImplicitCastExpr 0x151827cd8 <col:16, col:17> 'char' <LValueToRValue>
|   | |   | | |   `-UnaryOperator 0x151827cc0 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
|   | |   | | |     `-ImplicitCastExpr 0x151827ca8 <col:17> 'char *' <LValueToRValue>
|   | |   | | |       `-DeclRefExpr 0x151827c88 <col:17> 'char *' lvalue Var 0x15180dfe0 'ep' 'char *'
|   | |   | | |-VarDecl 0x151827d08 <col:6, col:22> col:22 used col 'char *'
|   | |   | | `-VarDecl 0x151827d88 <col:6, col:28> col:28 used coll 'char *'
|   | |   | |-BinaryOperator 0x151827ea8 <line:8:6, col:12> 'char' '='
|   | |   | | |-UnaryOperator 0x151827e60 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|   | |   | | | `-ImplicitCastExpr 0x151827e48 <col:7> 'char *' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x151827e28 <col:7> 'char *' lvalue Var 0x15180dfe0 'ep' 'char *'
|   | |   | | `-ImplicitCastExpr 0x151827e90 <col:12> 'char' <IntegralCast>
|   | |   | |   `-CharacterLiteral 0x151827e78 <col:12> 'int' 0
|   | |   | |-BinaryOperator 0x151828300 <line:10:6, col:59> 'char *' contains-errors '='
|   | |   | | |-DeclRefExpr 0x151827ec8 <col:6> 'char *' lvalue Var 0x151827d88 'coll' 'char *'
|   | |   | | `-BinaryOperator 0x1518282e0 <col:13, col:59> 'char *' contains-errors '='
|   | |   | |   |-DeclRefExpr 0x151827ee8 <col:13> 'char *' lvalue Var 0x151827d08 'col' 'char *'
|   | |   | |   `-CallExpr 0x151828298 <col:19, col:59> '<dependent type>' contains-errors
|   | |   | |     |-DeclRefExpr 0x151828060 <col:19> 'int ()' Function 0x151827fa8 'promptexpand' 'int ()'
|   | |   | |     |-CXXDependentScopeMemberExpr 0x1518281f0 <col:32, col:36> '<dependent type>' contains-errors lvalue ->fm
|   | |   | |     | `-RecoveryExpr 0x1518281d0 <col:32> '<dependent type>' contains-errors lvalue
|   | |   | |     |-IntegerLiteral 0x1518280e0 <col:40> 'int' 0
|   | |   | |     |-RecoveryExpr 0x151828238 <col:43> '<dependent type>' contains-errors lvalue
|   | |   | |     |-RecoveryExpr 0x151828258 <col:49> '<dependent type>' contains-errors lvalue
|   | |   | |     `-RecoveryExpr 0x151828278 <col:55> '<dependent type>' contains-errors lvalue
|   | |   | |-BinaryOperator 0x1518283a8 <line:11:6, col:12> 'char' '='
|   | |   | | |-UnaryOperator 0x151828358 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|   | |   | | | `-ImplicitCastExpr 0x151828340 <col:7> 'char *' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x151828320 <col:7> 'char *' lvalue Var 0x15180dfe0 'ep' 'char *'
|   | |   | | `-ImplicitCastExpr 0x151828390 <col:12> 'char' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x151828370 <col:12> 'char' lvalue Var 0x151827c20 'oc' 'char'
|   | |   | |-BinaryOperator 0x1518286c8 <line:12:6, col:55> '<dependent type>' contains-errors '='
|   | |   | | |-RecoveryExpr 0x1518283e8 <col:6> '<dependent type>' contains-errors lvalue
|   | |   | | | `-DeclRefExpr 0x1518283c8 <col:6> 'int' lvalue ParmVar 0x15180dcf0 'arg' 'int'
|   | |   | | `-CallExpr 0x151828678 <col:12, col:55> 'int'
|   | |   | |   |-ImplicitCastExpr 0x151828660 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | |   | |   | `-DeclRefExpr 0x1518284f0 <col:12> 'int ()' Function 0x151828438 'match_colour' 'int ()'
|   | |   | |   |-CStyleCastExpr 0x1518285c8 <col:25, col:41> 'const char **' <NoOp>
|   | |   | |   | `-UnaryOperator 0x151828560 <col:40, col:41> 'char **' prefix '&' cannot overflow
|   | |   | |   |   `-DeclRefExpr 0x151828510 <col:41> 'char *' lvalue Var 0x151827d88 'coll' 'char *'
|   | |   | |   |-ImplicitCastExpr 0x1518286b0 <col:47> 'int' <LValueToRValue>
|   | |   | |   | `-DeclRefExpr 0x1518285f0 <col:47> 'int' lvalue ParmVar 0x15180dd70 'is_fg' 'int'
|   | |   | |   `-IntegerLiteral 0x151828610 <col:54> 'int' 0
|   | |   | `-CallExpr 0x15182b548 <line:13:6, col:14> 'void'
|   | |   |   |-ImplicitCastExpr 0x15182b530 <col:6> 'void (*)(void *)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x15182b4a0 <col:6> 'void (void *)' Function 0x151828728 'free' 'void (void *)'
|   | |   |   `-ImplicitCastExpr 0x15182b588 <col:11> 'void *' <BitCast>
|   | |   |     `-ImplicitCastExpr 0x15182b570 <col:11> 'char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x15182b4c0 <col:11> 'char *' lvalue Var 0x151827d08 'col' 'char *'
|   | |   `-CompoundStmt 0x15182b8b8 <line:15:9, line:19:2>
|   | `-BinaryOperator 0x15182ba88 <line:21:2, col:33> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x15182b938 <col:2> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x15182b918 <col:2> 'int' lvalue ParmVar 0x15180dcf0 'arg' 'int'
|   |   `-CallExpr 0x15182ba50 <col:8, col:33> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15182b960 <col:8> 'int ()' Function 0x151828438 'match_colour' 'int ()'
|   |     |-RecoveryExpr 0x15182ba30 <col:21> '<dependent type>' contains-errors lvalue
|   |     |-IntegerLiteral 0x15182b998 <col:27> 'int' 1
|   |     `-RecoveryExpr 0x15182b9b8 <col:30> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x15182baf8 <line:22:5, col:12>
|     `-RecoveryExpr 0x15182bad8 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x151827910 <line:6:12> col:12 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x151827a10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x151827a78 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1518279b8 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x151828728 <line:13:6> col:6 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x15182b430 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1518287d0 <<invalid sloc>> Implicit 873
