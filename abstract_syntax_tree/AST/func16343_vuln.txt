TranslationUnitDecl 0x124055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1240564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124055bd0 '__int128'
|-TypedefDecl 0x124056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124055bf0 'unsigned __int128'
|-TypedefDecl 0x124126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x124126000 'struct __NSConstantString_tag'
|   `-Record 0x124056580 '__NSConstantString_tag'
|-TypedefDecl 0x124126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124055d90 '__SVInt8_t'
|-TypedefDecl 0x124126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124055db0 '__SVInt16_t'
|-TypedefDecl 0x124126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124055dd0 '__SVInt32_t'
|-TypedefDecl 0x1241263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124055df0 '__SVInt64_t'
|-TypedefDecl 0x124126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124055e10 '__SVUint8_t'
|-TypedefDecl 0x1241264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124055e30 '__SVUint16_t'
|-TypedefDecl 0x124126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124055e50 '__SVUint32_t'
|-TypedefDecl 0x124126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124055e70 '__SVUint64_t'
|-TypedefDecl 0x1241265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124055e90 '__SVFloat16_t'
|-TypedefDecl 0x124126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1241266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124055ed0 '__SVFloat64_t'
|-TypedefDecl 0x124126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x124126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1241267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x124126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1241268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x124126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x124126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1241269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x124126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x124126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x124126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x124126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x124126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x124126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124056090 '__clang_svint8x3_t'
|-TypedefDecl 0x124126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1240560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x124126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1240560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x124126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1240560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x124126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x124126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x124126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x124126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x124126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x124127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1240561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x124127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1240561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1241278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1240561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x124127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1241279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124056230 '__clang_svint16x4_t'
|-TypedefDecl 0x124127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124056250 '__clang_svint32x4_t'
|-TypedefDecl 0x124127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124056270 '__clang_svint64x4_t'
|-TypedefDecl 0x124127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x124127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1240562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x124127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1240562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x124127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1240562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x124127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x124127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x124127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x124127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x124127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124056390 '__SVBool_t'
|-TypedefDecl 0x124127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1240563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x124127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1240563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x124127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1240563f0 '__SVCount_t'
|-TypedefDecl 0x124127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x124127fb0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
|-TypedefDecl 0x124128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x124127fb0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
|-FunctionDecl 0x124140cc8 <dataset_diviso_filec/func16343_vuln.c:1:1, line:52:1> line:1:1 invalid h2_vfp_body 'int (struct vfp_ctx *, struct vfp_entry *, void *, int *)'
| |-ParmVarDecl 0x124128648 <col:13, col:29> col:29 used vc 'struct vfp_ctx *'
| |-ParmVarDecl 0x124140a28 <col:33, col:51> col:51 used vfe 'struct vfp_entry *'
| |-ParmVarDecl 0x124140aa8 <col:56, col:62> col:62 used ptr 'void *'
| |-ParmVarDecl 0x124140b78 <col:67, col:76> col:76 invalid lp 'int *'
| `-CompoundStmt 0x124808558 <line:2:1, line:52:1>
|   |-DeclStmt 0x124140f78 <line:3:2, col:19>
|   | |-RecordDecl 0x124140d90 <col:2, col:9> col:9 struct h2_req
|   | `-VarDecl 0x124140ef8 <col:2, col:17> col:17 used r2 'struct h2_req *'
|   |-DeclStmt 0x124141178 <line:4:2, col:20>
|   | |-RecordDecl 0x124140f90 <col:2, col:9> col:9 struct h2_sess
|   | `-VarDecl 0x1241410f8 <col:2, col:18> col:18 used h2 'struct h2_sess *'
|   |-DeclStmt 0x124141210 <line:5:2, col:12>
|   | `-VarDecl 0x1241411a8 <col:2, col:11> col:11 used l 'unsigned int'
|   |-DeclStmt 0x1241413e0 <line:6:2, col:33>
|   | |-EnumDecl 0x124141228 <col:2, col:7> col:7 vfp_status
|   | `-VarDecl 0x124141348 <col:2, col:18> col:18 referenced invalid retval 'enum vfp_status'
|   |-CallExpr 0x1241415f8 <line:8:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x124141550 <col:2> 'int ()' Function 0x124141498 'CHECK_OBJ_NOTNULL' 'int ()'
|   | |-DeclRefExpr 0x124141570 <col:20> 'struct vfp_ctx *' lvalue ParmVar 0x124128648 'vc' 'struct vfp_ctx *'
|   | `-RecoveryExpr 0x1241415d8 <col:24> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1241416d0 <line:9:2, col:40> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x124141628 <col:2> 'int ()' Function 0x124141498 'CHECK_OBJ_NOTNULL' 'int ()'
|   | |-DeclRefExpr 0x124141648 <col:20> 'struct vfp_entry *' lvalue ParmVar 0x124140a28 'vfe' 'struct vfp_entry *'
|   | `-RecoveryExpr 0x1241416b0 <col:25> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1241418f0 <line:10:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1241417e0 <col:2> 'int ()' Function 0x124141728 'CAST_OBJ_NOTNULL' 'int ()'
|   | |-DeclRefExpr 0x124141800 <col:19> 'struct h2_req *' lvalue Var 0x124140ef8 'r2' 'struct h2_req *'
|   | |-RecoveryExpr 0x124141858 <col:23, col:28> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x124141820 <col:23> 'struct vfp_entry *' lvalue ParmVar 0x124140a28 'vfe' 'struct vfp_entry *'
|   | `-RecoveryExpr 0x1241418d0 <col:35> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1241419a8 <line:11:2, col:11> 'struct h2_sess *' contains-errors '='
|   | |-DeclRefExpr 0x124141928 <col:2> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   | `-RecoveryExpr 0x124141980 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x124141948 <col:7> 'struct h2_req *' lvalue Var 0x124140ef8 'r2' 'struct h2_req *'
|   |-CallExpr 0x124142948 <line:13:2, col:8> 'int'
|   | |-ImplicitCastExpr 0x124142930 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1241428b8 <col:2> 'int ()' Function 0x124142800 'AN' 'int ()'
|   | `-ImplicitCastExpr 0x124142970 <col:5> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1241428d8 <col:5> 'void *' lvalue ParmVar 0x124140aa8 'ptr' 'void *'
|   |-CallExpr 0x1241429c8 <line:14:2, col:7> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x124142988 <col:2> 'int ()' Function 0x124142800 'AN' 'int ()'
|   | `-RecoveryExpr 0x1241429a8 <col:5> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x124142ab0 <line:15:2, col:7> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x1241429f0 <col:2> 'unsigned int' lvalue Var 0x1241411a8 'l' 'unsigned int'
|   | `-UnaryOperator 0x124142a98 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   `-ImplicitCastExpr 0x124142a80 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x124142a10 <col:7> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x124142b90 <line:16:2, col:8> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x124142b78 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x124142b60 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x124142ad0 <col:3> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x124142b20 <col:8> 'int' 0
|   |-CallExpr 0x124142d70 <line:18:2, col:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x124142c90 <col:2> 'int ()' Function 0x124142bd8 'Lck_Lock' 'int ()'
|   | `-UnaryOperator 0x124142d58 <col:11, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x124142d10 <col:12, col:22> '<dependent type>' contains-errors lvalue ->mtx
|   |     `-RecoveryExpr 0x124142ce8 <col:12, col:16> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x124142cb0 <col:12> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |-CallExpr 0x124142f98 <line:19:2, col:32> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x124142e78 <col:2> 'int ()' Function 0x124142dc0 'assert' 'int ()'
|   | `-BinaryOperator 0x124142f78 <col:10, col:23> 'int' contains-errors '=='
|   |   |-RecoveryExpr 0x124142ed0 <col:10, col:14> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x124142e98 <col:10> 'struct h2_req *' lvalue Var 0x124140ef8 'r2' 'struct h2_req *'
|   |   `-RecoveryExpr 0x124142f58 <col:23> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1241430e0 <line:20:2, col:23> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x124142ff8 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x124142fc0 <col:2> 'struct h2_req *' lvalue Var 0x124140ef8 'r2' 'struct h2_req *'
|   | `-UnaryOperator 0x1241430c8 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x124143080 <col:14, col:23> '<dependent type>' contains-errors lvalue ->cond
|   |     `-RecoveryExpr 0x124143058 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x124143020 <col:14> 'struct vfp_ctx *' lvalue ParmVar 0x124128648 'vc' 'struct vfp_ctx *'
|   |-WhileStmt 0x1241436c0 <line:21:2, line:22:47>
|   | |-BinaryOperator 0x124143300 <line:21:9, col:62> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x124143240 <col:9, col:44> 'int' contains-errors '&&'
|   | | | |-BinaryOperator 0x124143180 <col:9, col:25> 'int' contains-errors '!='
|   | | | | |-RecoveryExpr 0x124143138 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   | | | | | `-DeclRefExpr 0x124143100 <col:9> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   | | | | `-DeclRefExpr 0x124143160 <col:25> 'struct h2_req *' lvalue Var 0x124140ef8 'r2' 'struct h2_req *'
|   | | | `-BinaryOperator 0x124143220 <col:31, col:44> 'int' contains-errors '=='
|   | | |   |-RecoveryExpr 0x1241431d8 <col:31, col:35> '<dependent type>' contains-errors lvalue
|   | | |   | `-DeclRefExpr 0x1241431a0 <col:31> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   | | |   `-IntegerLiteral 0x124143200 <col:44> 'int' 0
|   | | `-BinaryOperator 0x1241432e0 <col:49, col:62> 'int' contains-errors '=='
|   | |   |-RecoveryExpr 0x124143298 <col:49, col:53> '<dependent type>' contains-errors lvalue
|   | |   | `-DeclRefExpr 0x124143260 <col:49> 'struct h2_req *' lvalue Var 0x124140ef8 'r2' 'struct h2_req *'
|   | |   `-IntegerLiteral 0x1241432c0 <col:62> 'int' 0
|   | `-CallExpr 0x124143698 <line:22:3, col:47> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x124143400 <col:3> 'int ()' Function 0x124143348 'AZ' 'int ()'
|   |   `-CallExpr 0x124143660 <col:6, col:46> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x124143500 <col:6> 'int ()' Function 0x124143448 'Lck_CondWait' 'int ()'
|   |     |-RecoveryExpr 0x124143558 <col:19, col:23> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x124143520 <col:19> 'struct h2_req *' lvalue Var 0x124140ef8 'r2' 'struct h2_req *'
|   |     |-UnaryOperator 0x124143628 <col:29, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-CXXDependentScopeMemberExpr 0x1241435e0 <col:30, col:40> '<dependent type>' contains-errors lvalue ->mtx
|   |     |   `-RecoveryExpr 0x1241435b8 <col:30, col:34> '<dependent type>' contains-errors lvalue
|   |     |     `-DeclRefExpr 0x124143580 <col:30> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |     `-IntegerLiteral 0x124143640 <col:45> 'int' 0
|   |-IfStmt 0x1248083d0 <line:24:2, line:49:2> has_else
|   | |-BinaryOperator 0x124144400 <line:24:6, col:23> 'int' contains-errors '||'
|   | | |-RecoveryExpr 0x124143778 <col:6, col:10> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x124143740 <col:6> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   | | `-RecoveryExpr 0x1241437d8 <col:19, col:23> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1241437a0 <col:19> 'struct h2_req *' lvalue Var 0x124140ef8 'r2' 'struct h2_req *'
|   | |-CompoundStmt 0x124144468 <col:30, line:26:2>
|   | `-CompoundStmt 0x124808388 <col:9, line:49:2>
|   |   |-CallExpr 0x124144538 <line:27:3, col:28> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x124144478 <col:3> 'int ()' Function 0x124142dc0 'assert' 'int ()'
|   |   | `-BinaryOperator 0x124144518 <col:10, col:26> 'int' contains-errors '=='
|   |   |   |-RecoveryExpr 0x1241444d0 <col:10, col:14> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x124144498 <col:10> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |   |   `-DeclRefExpr 0x1241444f8 <col:26> 'struct h2_req *' lvalue Var 0x124140ef8 'r2' 'struct h2_req *'
|   |   |-IfStmt 0x1241446a0 <line:28:3, line:29:12>
|   |   | |-BinaryOperator 0x1241445e0 <line:28:7, col:15> 'int' contains-errors '>'
|   |   | | |-DeclRefExpr 0x124144560 <col:7> 'unsigned int' lvalue Var 0x1241411a8 'l' 'unsigned int'
|   |   | | `-RecoveryExpr 0x1241445b8 <col:11, col:15> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x124144580 <col:11> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |   | `-BinaryOperator 0x124144680 <line:29:4, col:12> 'unsigned int' contains-errors '='
|   |   |   |-DeclRefExpr 0x124144600 <col:4> 'unsigned int' lvalue Var 0x1241411a8 'l' 'unsigned int'
|   |   |   `-RecoveryExpr 0x124144658 <col:8, col:12> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x124144620 <col:8> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |   |-IfStmt 0x124144ce0 <line:30:3, line:34:3>
|   |   | |-BinaryOperator 0x124144730 <line:30:7, col:11> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x124144700 <col:7> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1241446c0 <col:7> 'unsigned int' lvalue Var 0x1241411a8 'l' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x124144718 <col:11> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1241446e0 <col:11> 'int' 0
|   |   | `-CompoundStmt 0x124144cb8 <col:14, line:34:3>
|   |   |   |-CallExpr 0x124144b20 <line:31:4, col:31> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x124144a18 <col:4> 'void *(void *, const void *, unsigned long)' Function 0x1241447c8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   |   | |-DeclRefExpr 0x124144a38 <col:11> 'void *' lvalue ParmVar 0x124140aa8 'ptr' 'void *'
|   |   |   | |-RecoveryExpr 0x124144a90 <col:16, col:20> '<dependent type>' contains-errors lvalue
|   |   |   | | `-DeclRefExpr 0x124144a58 <col:16> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |   |   | `-DeclRefExpr 0x124144ab8 <col:30> 'unsigned int' lvalue Var 0x1241411a8 'l' 'unsigned int'
|   |   |   |-CompoundAssignOperator 0x124144bd8 <line:32:4, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   | |-RecoveryExpr 0x124144b90 <col:4, col:8> '<dependent type>' contains-errors lvalue
|   |   |   | | `-DeclRefExpr 0x124144b58 <col:4> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |   |   | `-DeclRefExpr 0x124144bb8 <col:20> 'unsigned int' lvalue Var 0x1241411a8 'l' 'unsigned int'
|   |   |   `-CompoundAssignOperator 0x124144c88 <line:33:4, col:19> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |     |-RecoveryExpr 0x124144c40 <col:4, col:8> '<dependent type>' contains-errors lvalue
|   |   |     | `-DeclRefExpr 0x124144c08 <col:4> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |   |     `-DeclRefExpr 0x124144c68 <col:19> 'unsigned int' lvalue Var 0x1241411a8 'l' 'unsigned int'
|   |   |-BinaryOperator 0x124144dc0 <line:35:3, col:9> '<dependent type>' contains-errors '='
|   |   | |-UnaryOperator 0x124144da8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x124144d90 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x124144d00 <col:4> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x124144d50 <col:9> 'unsigned int' lvalue Var 0x1241411a8 'l' 'unsigned int'
|   |   |-IfStmt 0x124145080 <line:36:3, line:40:3>
|   |   | |-BinaryOperator 0x124144e60 <line:36:7, col:21> 'int' contains-errors '>'
|   |   | | |-RecoveryExpr 0x124144e18 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x124144de0 <col:7> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |   | | `-IntegerLiteral 0x124144e40 <col:21> 'int' 0
|   |   | `-CompoundStmt 0x124145068 <col:24, line:40:3>
|   |   |   `-CallExpr 0x124145040 <line:38:4, col:29> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x124144f60 <col:4> 'int ()' Function 0x124144ea8 'Lck_Unlock' 'int ()'
|   |   |     `-UnaryOperator 0x124145028 <col:15, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |       `-CXXDependentScopeMemberExpr 0x124144fe0 <col:16, col:26> '<dependent type>' contains-errors lvalue ->mtx
|   |   |         `-RecoveryExpr 0x124144fb8 <col:16, col:20> '<dependent type>' contains-errors lvalue
|   |   |           `-DeclRefExpr 0x124144f80 <col:16> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |   |-IfStmt 0x1241452b0 <line:41:3, line:46:3>
|   |   | |-BinaryOperator 0x124145120 <line:41:7, col:22> 'int' contains-errors '=='
|   |   | | |-RecoveryExpr 0x1241450d8 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x1241450a0 <col:7> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |   | | `-IntegerLiteral 0x124145100 <col:22> 'int' 0
|   |   | `-CompoundStmt 0x124145298 <col:25, line:46:3>
|   |   |   `-IfStmt 0x124145278 <line:42:4, line:45:4>
|   |   |     |-RecoveryExpr 0x1241451a0 <line:42:8, col:24> '_Bool' contains-errors
|   |   |     `-CompoundStmt 0x124145268 <col:46, line:45:4>
|   |   `-CallExpr 0x124808360 <line:48:3, col:35> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x124145330 <col:3> 'int ()' Function 0x124143348 'AZ' 'int ()'
|   |     `-CallExpr 0x124808338 <col:6, col:34> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x1248082b8 <col:6> 'int ()' Function 0x124808200 'pthread_cond_signal' 'int ()'
|   |       `-RecoveryExpr 0x124808310 <col:26, col:30> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x1248082d8 <col:26> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   |-CallExpr 0x1248084e0 <line:50:2, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x124808400 <col:2> 'int ()' Function 0x124144ea8 'Lck_Unlock' 'int ()'
|   | `-UnaryOperator 0x1248084c8 <col:13, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x124808480 <col:14, col:24> '<dependent type>' contains-errors lvalue ->mtx
|   |     `-RecoveryExpr 0x124808458 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x124808420 <col:14> 'struct h2_sess *' lvalue Var 0x1241410f8 'h2' 'struct h2_sess *'
|   `-ReturnStmt 0x124808548 <line:51:2, col:16>
|     `-ParenExpr 0x124808528 <col:9, col:16> '<dependent type>' contains-errors lvalue
|       `-RecoveryExpr 0x124808508 <col:10> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x1241447c8 <line:31:4> col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1241448c8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x124144930 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x124144998 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x124144870 <<invalid sloc>> Implicit 882
