TranslationUnitDecl 0x12b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b055bd0 '__int128'
|-TypedefDecl 0x12b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b055bf0 'unsigned __int128'
|-TypedefDecl 0x12b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12b056580 '__NSConstantString_tag'
|-TypedefDecl 0x12b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b055d90 '__SVInt8_t'
|-TypedefDecl 0x12b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b055db0 '__SVInt16_t'
|-TypedefDecl 0x12b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b055dd0 '__SVInt32_t'
|-TypedefDecl 0x12b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b055df0 '__SVInt64_t'
|-TypedefDecl 0x12b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b055e10 '__SVUint8_t'
|-TypedefDecl 0x12b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b055e30 '__SVUint16_t'
|-TypedefDecl 0x12b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b055e50 '__SVUint32_t'
|-TypedefDecl 0x12b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b055e70 '__SVUint64_t'
|-TypedefDecl 0x12b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b055e90 '__SVFloat16_t'
|-TypedefDecl 0x12b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b056390 '__SVBool_t'
|-TypedefDecl 0x12b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b0563f0 '__SVCount_t'
|-TypedefDecl 0x12b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b80dbb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
|-TypedefDecl 0x12b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b80dbb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
`-FunctionDecl 0x12b8274d8 <dataset_diviso_filec/func9337_vuln.c:1:1, line:19:1> line:1:6 invalid asn1_read_ContextSimple 'int (struct asn1_data *, int, int *)'
  |-ParmVarDecl 0x12b80e268 <col:30, col:48> col:48 used data 'struct asn1_data *'
  |-ParmVarDecl 0x12b80e2e8 <col:54, col:62> col:62 invalid num 'int'
  |-ParmVarDecl 0x12b80e398 <col:67, col:78> col:78 invalid blob 'int *'
  `-CompoundStmt 0x12b82a0e8 <line:2:1, line:19:1>
    |-DeclStmt 0x12b827618 <line:3:2, col:9>
    | `-VarDecl 0x12b8275b0 <col:2, col:6> col:6 used len 'int'
    |-CallExpr 0x12b8277d0 <line:4:2, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b827790 <col:2> 'int ()' Function 0x12b8276d8 'ZERO_STRUCTP' 'int ()'
    | `-RecoveryExpr 0x12b8277b0 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b827c88 <line:6:2, col:31> 'int' '='
    | |-DeclRefExpr 0x12b827ac0 <col:2> 'int' lvalue Var 0x12b8275b0 'len' 'int'
    | `-CallExpr 0x12b827c48 <col:8, col:31> 'int'
    |   |-ImplicitCastExpr 0x12b827c30 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12b827bc0 <col:8> 'int ()' Function 0x12b827b08 'asn1_tag_remaining' 'int ()'
    |   `-ImplicitCastExpr 0x12b827c70 <col:27> 'struct asn1_data *' <LValueToRValue>
    |     `-DeclRefExpr 0x12b827be0 <col:27> 'struct asn1_data *' lvalue ParmVar 0x12b80e268 'data' 'struct asn1_data *'
    |-IfStmt 0x12b827e28 <line:7:2, line:10:2>
    | |-BinaryOperator 0x12b827d00 <line:7:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x12b827ce8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12b827ca8 <col:6> 'int' lvalue Var 0x12b8275b0 'len' 'int'
    | | `-IntegerLiteral 0x12b827cc8 <col:12> 'int' 0
    | `-CompoundStmt 0x12b827e10 <col:15, line:10:2>
    |   `-BinaryOperator 0x12b827dd8 <line:8:3, col:21> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x12b827d58 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x12b827d20 <col:3> 'struct asn1_data *' lvalue ParmVar 0x12b80e268 'data' 'struct asn1_data *'
    |     `-RecoveryExpr 0x12b827db8 <col:21> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b8280d0 <line:11:2, col:29> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x12b828068 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12b828050 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12b827e48 <col:3> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x12b8280a0 <col:10, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b827f78 <col:10> 'int ()' Function 0x12b827ec0 'data_blob' 'int ()'
    |   |-RecoveryExpr 0x12b828080 <col:20> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12b827fb0 <col:26> 'int' lvalue Var 0x12b8275b0 'len' 'int'
    |-IfStmt 0x12b829c70 <line:12:2, line:15:2>
    | |-BinaryOperator 0x12b828338 <line:12:6, col:32> 'int' contains-errors '&&'
    | | |-ParenExpr 0x12b8282c8 <col:6, col:15> 'int'
    | | | `-BinaryOperator 0x12b8282a8 <col:7, col:14> 'int' '!='
    | | |   |-ImplicitCastExpr 0x12b828290 <col:7> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x12b8280f0 <col:7> 'int' lvalue Var 0x12b8275b0 'len' 'int'
    | | |   `-IntegerLiteral 0x12b828110 <col:14> 'int' 0
    | | `-ParenExpr 0x12b828318 <col:20, col:32> '<dependent type>' contains-errors
    | |   `-UnaryOperator 0x12b828300 <col:21, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |     `-ImplicitCastExpr 0x12b8282e8 <col:22, col:28> '<dependent type>' contains-errors <LValueToRValue>
    | |       `-CXXDependentScopeMemberExpr 0x12b8281a8 <col:22, col:28> '<dependent type>' contains-errors lvalue ->data
    | |         `-RecoveryExpr 0x12b828188 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12b829c58 <col:35, line:15:2>
    |   `-BinaryOperator 0x12b829c20 <line:13:3, col:21> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x12b828390 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x12b828358 <col:3> 'struct asn1_data *' lvalue ParmVar 0x12b80e268 'data' 'struct asn1_data *'
    |     `-RecoveryExpr 0x12b829c00 <col:21> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12b829e38 <line:16:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b829d70 <col:2> 'int ()' Function 0x12b829cb8 'asn1_read' 'int ()'
    | |-DeclRefExpr 0x12b829d90 <col:12> 'struct asn1_data *' lvalue ParmVar 0x12b80e268 'data' 'struct asn1_data *'
    | |-CXXDependentScopeMemberExpr 0x12b829dd0 <col:18, col:24> '<dependent type>' contains-errors lvalue ->data
    | | `-RecoveryExpr 0x12b829db0 <col:18> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x12b829e18 <col:30> 'int' lvalue Var 0x12b8275b0 'len' 'int'
    |-CallExpr 0x12b829fa8 <line:17:2, col:19> 'int'
    | |-ImplicitCastExpr 0x12b829f90 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12b829f50 <col:2> 'int ()' Function 0x12b829e98 'asn1_end_tag' 'int ()'
    | `-ImplicitCastExpr 0x12b829fd0 <col:15> 'struct asn1_data *' <LValueToRValue>
    |   `-DeclRefExpr 0x12b829f70 <col:15> 'struct asn1_data *' lvalue ParmVar 0x12b80e268 'data' 'struct asn1_data *'
    `-ReturnStmt 0x12b82a0d8 <line:18:2, col:16>
      `-UnaryOperator 0x12b82a0c0 <col:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
        `-ImplicitCastExpr 0x12b82a0a8 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x12b82a020 <col:10, col:16> '<dependent type>' contains-errors lvalue
            `-DeclRefExpr 0x12b829fe8 <col:10> 'struct asn1_data *' lvalue ParmVar 0x12b80e268 'data' 'struct asn1_data *'
