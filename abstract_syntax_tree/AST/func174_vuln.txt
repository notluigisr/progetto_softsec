TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x128126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128126000 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x128126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x128126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x128126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x1281263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x128126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x1281264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x128126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x128126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x1281265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x128126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1281266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x128126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1281267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1281268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1281269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x128126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1281278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1281279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x128127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x128127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x128127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x128127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x128127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x128128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-FunctionDecl 0x128140b58 <dataset_diviso_filec/func174_vuln.c:1:1, line:32:1> line:1:12 snd_ctl_elem_user_tlv 'int (struct snd_kcontrol *, int, unsigned int, unsigned int)' static
| |-ParmVarDecl 0x128128648 <col:34, col:55> col:55 used kcontrol 'struct snd_kcontrol *'
| |-ParmVarDecl 0x1281286c8 <line:2:6, col:10> col:10 used op_flag 'int'
| |-ParmVarDecl 0x128128748 <line:3:6, col:19> col:19 used size 'unsigned int'
| |-ParmVarDecl 0x128140a00 <line:4:6, col:19> col:19 __user 'unsigned int'
| `-CompoundStmt 0x128143ad0 <line:5:1, line:32:1>
|   |-DeclStmt 0x128140eb8 <line:6:2, col:50>
|   | |-RecordDecl 0x128140c68 <col:2, col:9> col:9 struct user_element
|   | `-VarDecl 0x128140dd8 <col:2, col:38> col:23 used ue 'struct user_element *' cinit
|   |   `-RecoveryExpr 0x128140e78 <col:28, col:38> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x128140e40 <col:28> 'struct snd_kcontrol *' lvalue ParmVar 0x128128648 'kcontrol' 'struct snd_kcontrol *'
|   |-DeclStmt 0x128140f70 <line:7:2, col:16>
|   | `-VarDecl 0x128140ee8 <col:2, col:15> col:6 used change 'int' cinit
|   |   `-IntegerLiteral 0x128140f50 <col:15> 'int' 0
|   |-DeclStmt 0x128141008 <line:8:2, col:16>
|   | `-VarDecl 0x128140fa0 <col:2, col:8> col:8 used new_data 'void *'
|   |-IfStmt 0x128143a58 <line:10:2, line:30:2> has_else
|   | |-BinaryOperator 0x128141078 <line:10:6, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x128141060 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x128141020 <col:6> 'int' lvalue ParmVar 0x1281286c8 'op_flag' 'int'
|   | | `-IntegerLiteral 0x128141040 <col:16> 'int' 0
|   | |-CompoundStmt 0x128143498 <col:19, line:23:2>
|   | | |-IfStmt 0x128141228 <line:11:3, line:12:12>
|   | | | |-BinaryOperator 0x128141148 <line:11:7, col:21> 'int' '>'
|   | | | | |-ImplicitCastExpr 0x128141118 <col:7> 'unsigned int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x128141098 <col:7> 'unsigned int' lvalue ParmVar 0x128128748 'size' 'unsigned int'
|   | | | | `-ImplicitCastExpr 0x128141130 <col:14, col:21> 'unsigned int' <IntegralCast>
|   | | | |   `-BinaryOperator 0x1281410f8 <col:14, col:21> 'int' '*'
|   | | | |     |-IntegerLiteral 0x1281410b8 <col:14> 'int' 1024
|   | | | |     `-IntegerLiteral 0x1281410d8 <col:21> 'int' 128
|   | | | `-ReturnStmt 0x128141218 <line:12:4, col:12>
|   | | |   `-UnaryOperator 0x128141200 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1281411e8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   | | |       `-RecoveryExpr 0x1281411c8 <col:12> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x128141478 <line:14:3, col:35> 'void *' contains-errors '='
|   | | | |-DeclRefExpr 0x128141248 <col:3> 'void *' lvalue Var 0x128140fa0 'new_data' 'void *'
|   | | | `-CallExpr 0x128141448 <col:14, col:35> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x128141380 <col:14> 'int ()' Function 0x1281412c8 'memdup_user' 'int ()'
|   | | |   |-RecoveryExpr 0x128141428 <col:26> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x1281413b8 <col:31> 'unsigned int' lvalue ParmVar 0x128128748 'size' 'unsigned int'
|   | | |-IfStmt 0x1281417d0 <line:15:3, line:16:27>
|   | | | |-CallExpr 0x128141608 <line:15:7, col:22> 'int'
|   | | | | |-ImplicitCastExpr 0x1281415f0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x128141578 <col:7> 'int ()' Function 0x1281414c0 'IS_ERR' 'int ()'
|   | | | | `-ImplicitCastExpr 0x128141630 <col:14> 'void *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x128141598 <col:14> 'void *' lvalue Var 0x128140fa0 'new_data' 'void *'
|   | | | `-ReturnStmt 0x1281417c0 <line:16:4, col:27>
|   | | |   `-CallExpr 0x128141780 <col:11, col:27> 'int'
|   | | |     |-ImplicitCastExpr 0x128141768 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x128141728 <col:11> 'int ()' Function 0x128141670 'PTR_ERR' 'int ()'
|   | | |     `-ImplicitCastExpr 0x1281417a8 <col:19> 'void *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x128141748 <col:19> 'void *' lvalue Var 0x128140fa0 'new_data' 'void *'
|   | | |-BinaryOperator 0x1281418b0 <line:17:3, col:33> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x1281417f0 <col:3> 'int' lvalue Var 0x128140ee8 'change' 'int'
|   | | | `-BinaryOperator 0x128141890 <col:12, col:33> 'int' contains-errors '!='
|   | | |   |-RecoveryExpr 0x128141848 <col:12, col:16> '<dependent type>' contains-errors lvalue
|   | | |   | `-DeclRefExpr 0x128141810 <col:12> 'struct user_element *' contains-errors lvalue Var 0x128140dd8 'ue' 'struct user_element *'
|   | | |   `-DeclRefExpr 0x128141870 <col:33> 'unsigned int' lvalue ParmVar 0x128128748 'size' 'unsigned int'
|   | | |-IfStmt 0x1281431b0 <line:18:3, line:19:48>
|   | | | |-UnaryOperator 0x128141908 <line:18:7, col:8> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x1281418f0 <col:8> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1281418d0 <col:8> 'int' lvalue Var 0x128140ee8 'change' 'int'
|   | | | `-BinaryOperator 0x128143190 <line:19:4, col:48> 'int' contains-errors '='
|   | | |   |-DeclRefExpr 0x128141920 <col:4> 'int' lvalue Var 0x128140ee8 'change' 'int'
|   | | |   `-CallExpr 0x128143158 <col:13, col:48> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x128143050 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x128142e00 'memcmp' 'int (const void *, const void *, unsigned long)'
|   | | |     |-RecoveryExpr 0x1281430a8 <col:20, col:24> '<dependent type>' contains-errors lvalue
|   | | |     | `-DeclRefExpr 0x128143070 <col:20> 'struct user_element *' contains-errors lvalue Var 0x128140dd8 'ue' 'struct user_element *'
|   | | |     |-DeclRefExpr 0x1281430d0 <col:34> 'void *' lvalue Var 0x128140fa0 'new_data' 'void *'
|   | | |     `-DeclRefExpr 0x1281430f0 <col:44> 'unsigned int' lvalue ParmVar 0x128128748 'size' 'unsigned int'
|   | | |-CallExpr 0x128143330 <line:20:3, col:21> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x1281432b0 <col:3> 'int ()' Function 0x1281431f8 'kfree' 'int ()'
|   | | | `-RecoveryExpr 0x128143308 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x1281432d0 <col:9> 'struct user_element *' contains-errors lvalue Var 0x128140dd8 'ue' 'struct user_element *'
|   | | |-BinaryOperator 0x1281433d8 <line:21:3, col:18> '<dependent type>' contains-errors '='
|   | | | |-RecoveryExpr 0x128143390 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x128143358 <col:3> 'struct user_element *' contains-errors lvalue Var 0x128140dd8 'ue' 'struct user_element *'
|   | | | `-DeclRefExpr 0x1281433b8 <col:18> 'void *' lvalue Var 0x128140fa0 'new_data' 'void *'
|   | | `-BinaryOperator 0x128143478 <line:22:3, col:23> '<dependent type>' contains-errors '='
|   | |   |-RecoveryExpr 0x128143430 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   | |   | `-DeclRefExpr 0x1281433f8 <col:3> 'struct user_element *' contains-errors lvalue Var 0x128140dd8 'ue' 'struct user_element *'
|   | |   `-DeclRefExpr 0x128143458 <col:23> 'unsigned int' lvalue ParmVar 0x128128748 'size' 'unsigned int'
|   | `-CompoundStmt 0x128143a38 <line:23:9, line:30:2>
|   |   |-IfStmt 0x1281436d0 <line:24:3, line:25:12>
|   |   | |-BinaryOperator 0x128143608 <line:24:7, col:36> 'int' contains-errors '||'
|   |   | | |-UnaryOperator 0x128143560 <col:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x128143548 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   `-RecoveryExpr 0x128143520 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   |   | | |     `-DeclRefExpr 0x1281434e8 <col:9> 'struct user_element *' contains-errors lvalue Var 0x128140dd8 'ue' 'struct user_element *'
|   |   | | `-UnaryOperator 0x1281435f0 <col:30, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x1281435d8 <col:32, col:36> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     `-RecoveryExpr 0x1281435b0 <col:32, col:36> '<dependent type>' contains-errors lvalue
|   |   | |       `-DeclRefExpr 0x128143578 <col:32> 'struct user_element *' contains-errors lvalue Var 0x128140dd8 'ue' 'struct user_element *'
|   |   | `-ReturnStmt 0x1281436c0 <line:25:4, col:12>
|   |   |   `-UnaryOperator 0x1281436a8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |     `-ImplicitCastExpr 0x128143690 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-RecoveryExpr 0x128143670 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x128143838 <line:26:3, line:27:12>
|   |     |-BinaryOperator 0x128143770 <line:26:7, col:18> 'int' contains-errors '<'
|   |     | |-DeclRefExpr 0x1281436f0 <col:7> 'unsigned int' lvalue ParmVar 0x128128748 'size' 'unsigned int'
|   |     | `-RecoveryExpr 0x128143748 <col:14, col:18> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x128143710 <col:14> 'struct user_element *' contains-errors lvalue Var 0x128140dd8 'ue' 'struct user_element *'
|   |     `-ReturnStmt 0x128143828 <line:27:4, col:12>
|   |       `-UnaryOperator 0x128143810 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |         `-ImplicitCastExpr 0x1281437f8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |           `-RecoveryExpr 0x1281437d8 <col:12> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x128143ac0 <line:31:2, col:9>
|     `-ImplicitCastExpr 0x128143aa8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x128143a88 <col:9> 'int' lvalue Var 0x128140ee8 'change' 'int'
`-FunctionDecl 0x128142e00 <line:19:13> col:13 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x128142f00 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x128142f68 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x128142fd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x128142ea8 <<invalid sloc>> Implicit 883
