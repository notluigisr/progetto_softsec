TranslationUnitDecl 0x127855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127855bd0 '__int128'
|-TypedefDecl 0x127856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127855bf0 'unsigned __int128'
|-TypedefDecl 0x127926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x127926800 'struct __NSConstantString_tag'
|   `-Record 0x127856580 '__NSConstantString_tag'
|-TypedefDecl 0x127926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127855d90 '__SVInt8_t'
|-TypedefDecl 0x127926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127855db0 '__SVInt16_t'
|-TypedefDecl 0x127926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127855dd0 '__SVInt32_t'
|-TypedefDecl 0x127926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127855df0 '__SVInt64_t'
|-TypedefDecl 0x127926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127855e10 '__SVUint8_t'
|-TypedefDecl 0x127926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127855e30 '__SVUint16_t'
|-TypedefDecl 0x127926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127855e50 '__SVUint32_t'
|-TypedefDecl 0x127926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127855e70 '__SVUint64_t'
|-TypedefDecl 0x127926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127855e90 '__SVFloat16_t'
|-TypedefDecl 0x127926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127855eb0 '__SVFloat32_t'
|-TypedefDecl 0x127926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127855ed0 '__SVFloat64_t'
|-TypedefDecl 0x127926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x127926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x127926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x127927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1279270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x127927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x127927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1279271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x127927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1279272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x127927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x127927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1279273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x127927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1279274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1278560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x127927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1278560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x127927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1278560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1279275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x127927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1279276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x127927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x127927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x127928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1278561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x127928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1278561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1279280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1278561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x127928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1279281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127856230 '__clang_svint16x4_t'
|-TypedefDecl 0x127928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127856250 '__clang_svint32x4_t'
|-TypedefDecl 0x127928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1279282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x127928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1279283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x127928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x127928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1279284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x127928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1279285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x127928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127856390 '__SVBool_t'
|-TypedefDecl 0x127928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1279286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x127928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278563f0 '__SVCount_t'
|-TypedefDecl 0x1279287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1279287b0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-TypedefDecl 0x127928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1279287b0 'char *'
|   `-BuiltinType 0x1278556b0 'char'
|-FunctionDecl 0x127928b18 <dataset_diviso_filec/func24640_vuln.c:1:1, line:63:1> line:1:1 invalid tight_detect_smooth_image24 'int (int *, int, int)'
| |-ParmVarDecl 0x127928928 <col:29, col:39> col:39 invalid vs 'int *'
| |-ParmVarDecl 0x1279289a8 <col:43, col:47> col:47 used w 'int'
| |-ParmVarDecl 0x127928a28 <col:50, col:54> col:54 used h 'int'
| `-CompoundStmt 0x127946af0 <line:2:1, line:63:1>
|   |-DeclStmt 0x127928c58 <line:3:5, col:12>
|   | `-VarDecl 0x127928bf0 <col:5, col:9> col:9 used off 'int'
|   |-DeclStmt 0x127928e98 <line:4:5, col:20>
|   | |-VarDecl 0x127928c88 <col:5, col:9> col:9 used x 'int'
|   | |-VarDecl 0x127928d08 <col:5, col:12> col:12 used y 'int'
|   | |-VarDecl 0x127928d88 <col:5, col:15> col:15 used d 'int'
|   | `-VarDecl 0x127928e08 <col:5, col:18> col:18 used dx 'int'
|   |-DeclStmt 0x127928f30 <line:5:5, col:19>
|   | `-VarDecl 0x127928ec8 <col:5, col:18> col:18 used c 'unsigned int'
|   |-DeclStmt 0x127942068 <line:6:5, col:28>
|   | `-VarDecl 0x127942000 <col:5, col:27> col:18 used stats 'unsigned int[256]'
|   |-DeclStmt 0x127942120 <line:7:5, col:19>
|   | `-VarDecl 0x127942098 <col:5, col:18> col:9 used pixels 'int' cinit
|   |   `-IntegerLiteral 0x127942100 <col:18> 'int' 0
|   |-DeclStmt 0x1279422e8 <line:8:5, col:21>
|   | |-VarDecl 0x127942150 <col:5, col:9> col:9 used pix 'int'
|   | `-VarDecl 0x127942268 <col:5, col:20> col:14 used left 'int[3]'
|   |-DeclStmt 0x127942380 <line:9:5, col:24>
|   | `-VarDecl 0x127942318 <col:5, col:18> col:18 used errors 'unsigned int'
|   |-DeclStmt 0x127942548 <line:10:5, col:48>
|   | `-VarDecl 0x1279423e8 <col:5, col:42> col:20 used buf 'unsigned char *' cinit
|   |   `-CXXDependentScopeMemberExpr 0x127942500 <col:26, col:42> '<dependent type>' contains-errors lvalue .buffer
|   |     `-CXXDependentScopeMemberExpr 0x1279424b8 <col:26, col:36> '<dependent type>' contains-errors lvalue .tight
|   |       `-CXXDependentScopeMemberExpr 0x127942470 <col:26, col:30> '<dependent type>' contains-errors lvalue ->tight
|   |         `-RecoveryExpr 0x127942450 <col:26> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1279425e8 <line:13:5, col:15> 'int' contains-errors '='
|   | |-DeclRefExpr 0x127942560 <col:5> 'int' lvalue Var 0x127928bf0 'off' 'int'
|   | `-CXXDependentScopeMemberExpr 0x1279425a0 <col:11, col:15> '<dependent type>' contains-errors lvalue ->client_be
|   |   `-RecoveryExpr 0x127942580 <col:11> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x127942e28 <line:15:5, col:36> 'void *'
|   | |-ImplicitCastExpr 0x127942e10 <col:5> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x127942cd0 <col:5> 'void *(void *, int, unsigned long)' Function 0x127942a80 'memset' 'void *(void *, int, unsigned long)'
|   | |-ImplicitCastExpr 0x127942e78 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x127942e60 <col:12> 'unsigned int *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x127942cf0 <col:12> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]'
|   | |-IntegerLiteral 0x127942d10 <col:19> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x127942d70 <col:22, col:35> 'unsigned long' sizeof
|   |   `-ParenExpr 0x127942d50 <col:29, col:35> 'unsigned int[256]' lvalue
|   |     `-DeclRefExpr 0x127942d30 <col:30> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]' non_odr_use_unevaluated
|   |-ForStmt 0x127945350 <line:17:5, line:39:5>
|   | |-BinaryOperator 0x127942f50 <line:17:10, col:21> 'int' ','
|   | | |-BinaryOperator 0x127942ed0 <col:10, col:14> 'int' '='
|   | | | |-DeclRefExpr 0x127942e90 <col:10> 'int' lvalue Var 0x127928d08 'y' 'int'
|   | | | `-IntegerLiteral 0x127942eb0 <col:14> 'int' 0
|   | | `-BinaryOperator 0x127942f30 <col:17, col:21> 'int' '='
|   | |   |-DeclRefExpr 0x127942ef0 <col:17> 'int' lvalue Var 0x127928c88 'x' 'int'
|   | |   `-IntegerLiteral 0x127942f10 <col:21> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x127943890 <col:24, col:37> 'int' '&&'
|   | | |-BinaryOperator 0x127942fe0 <col:24, col:28> 'int' '<'
|   | | | |-ImplicitCastExpr 0x127942fb0 <col:24> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x127942f70 <col:24> 'int' lvalue Var 0x127928d08 'y' 'int'
|   | | | `-ImplicitCastExpr 0x127942fc8 <col:28> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x127942f90 <col:28> 'int' lvalue ParmVar 0x127928a28 'h' 'int'
|   | | `-BinaryOperator 0x127943870 <col:33, col:37> 'int' '<'
|   | |   |-ImplicitCastExpr 0x127943840 <col:33> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x127943800 <col:33> 'int' lvalue Var 0x127928c88 'x' 'int'
|   | |   `-ImplicitCastExpr 0x127943858 <col:37> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x127943820 <col:37> 'int' lvalue ParmVar 0x1279289a8 'w' 'int'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x127945330 <col:41, line:39:5>
|   |   |-ForStmt 0x127945028 <line:18:9, line:31:9>
|   |   | |-BinaryOperator 0x1279438f0 <line:18:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x1279438b0 <col:14> 'int' lvalue Var 0x127928d88 'd' 'int'
|   |   | | `-IntegerLiteral 0x1279438d0 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x127943d30 <col:21, col:46> 'int' contains-errors '&&'
|   |   | | |-BinaryOperator 0x127943c60 <col:21, col:29> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x127943c48 <col:21> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x127943910 <col:21> 'int' lvalue Var 0x127928d88 'd' 'int'
|   |   | | | `-BinaryOperator 0x127943c28 <col:25, col:29> 'int' '-'
|   |   | | |   |-ImplicitCastExpr 0x127943bf8 <col:25> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x127943930 <col:25> 'int' lvalue ParmVar 0x127928a28 'h' 'int'
|   |   | | |   `-ImplicitCastExpr 0x127943c10 <col:29> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x127943950 <col:29> 'int' lvalue Var 0x127928d08 'y' 'int'
|   |   | | `-BinaryOperator 0x127943d10 <col:34, col:46> 'int' contains-errors '<'
|   |   | |   |-DeclRefExpr 0x1279439f8 <col:34> 'int' lvalue Var 0x127928d88 'd' 'int'
|   |   | |   `-BinaryOperator 0x127943cf0 <col:38, col:46> '<dependent type>' contains-errors '-'
|   |   | |     |-BinaryOperator 0x127943cb0 <col:38, col:42> 'int' '-'
|   |   | |     | |-ImplicitCastExpr 0x127943c80 <col:38> 'int' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x127943a18 <col:38> 'int' lvalue ParmVar 0x1279289a8 'w' 'int'
|   |   | |     | `-ImplicitCastExpr 0x127943c98 <col:42> 'int' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x127943a38 <col:42> 'int' lvalue Var 0x127928c88 'x' 'int'
|   |   | |     `-RecoveryExpr 0x127943cd0 <col:46> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x127943d70 <line:19:14, col:15> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x127943d50 <col:14> 'int' lvalue Var 0x127928d88 'd' 'int'
|   |   | `-CompoundStmt 0x127945008 <col:19, line:31:9>
|   |   |   |-ForStmt 0x127944338 <line:20:13, line:22:13>
|   |   |   | |-BinaryOperator 0x127943de0 <line:20:18, col:22> 'unsigned int' '='
|   |   |   | | |-DeclRefExpr 0x127943d88 <col:18> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |   | | `-ImplicitCastExpr 0x127943dc8 <col:22> 'unsigned int' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x127943da8 <col:22> 'int' 0
|   |   |   | |-<<<NULL>>>
|   |   |   | |-BinaryOperator 0x127943e70 <col:25, col:29> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x127943e40 <col:25> 'unsigned int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x127943e00 <col:25> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |   | | `-ImplicitCastExpr 0x127943e58 <col:29> 'unsigned int' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x127943e20 <col:29> 'int' 3
|   |   |   | |-UnaryOperator 0x127943eb0 <col:32, col:33> 'unsigned int' postfix '++'
|   |   |   | | `-DeclRefExpr 0x127943e90 <col:32> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |   | `-CompoundStmt 0x127944320 <col:37, line:22:13>
|   |   |   |   `-BinaryOperator 0x127944300 <line:21:17, col:56> 'int' contains-errors '='
|   |   |   |     |-ArraySubscriptExpr 0x127943f38 <col:17, col:23> 'int' lvalue
|   |   |   |     | |-ImplicitCastExpr 0x127943f08 <col:17> 'int *' <ArrayToPointerDecay>
|   |   |   |     | | `-DeclRefExpr 0x127943ec8 <col:17> 'int[3]' lvalue Var 0x127942268 'left' 'int[3]'
|   |   |   |     | `-ImplicitCastExpr 0x127943f20 <col:22> 'unsigned int' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x127943ee8 <col:22> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |   |     `-BinaryOperator 0x1279442e0 <col:27, col:56> 'int' contains-errors '&'
|   |   |   |       |-ImplicitCastExpr 0x1279442c8 <col:27, col:52> 'int' contains-errors <IntegralCast>
|   |   |   |       | `-ImplicitCastExpr 0x1279442b0 <col:27, col:52> 'unsigned char' contains-errors <LValueToRValue>
|   |   |   |       |   `-ArraySubscriptExpr 0x127944270 <col:27, col:52> 'unsigned char' contains-errors lvalue
|   |   |   |       |     |-ImplicitCastExpr 0x127944258 <col:27> 'unsigned char *' contains-errors <LValueToRValue>
|   |   |   |       |     | `-DeclRefExpr 0x127943f58 <col:27> 'unsigned char *' contains-errors lvalue Var 0x1279423e8 'buf' 'unsigned char *'
|   |   |   |       |     `-BinaryOperator 0x127944238 <col:31, col:51> 'unsigned int' '+'
|   |   |   |       |       |-ImplicitCastExpr 0x127944220 <col:31, col:47> 'unsigned int' <IntegralCast>
|   |   |   |       |       | `-BinaryOperator 0x1279441c8 <col:31, col:47> 'int' '+'
|   |   |   |       |       |   |-BinaryOperator 0x127944170 <col:31, col:45> 'int' '*'
|   |   |   |       |       |   | |-ParenExpr 0x127944130 <col:31, col:43> 'int'
|   |   |   |       |       |   | | `-BinaryOperator 0x127944110 <col:32, col:42> 'int' '+'
|   |   |   |       |       |   | |   |-BinaryOperator 0x1279440b8 <col:32, col:40> 'int' '+'
|   |   |   |       |       |   | |   | |-BinaryOperator 0x127944060 <col:32, col:38> 'int' '*'
|   |   |   |       |       |   | |   | | |-ParenExpr 0x127944008 <col:32, col:36> 'int'
|   |   |   |       |       |   | |   | | | `-BinaryOperator 0x127943fe8 <col:33, col:35> 'int' '+'
|   |   |   |       |       |   | |   | | |   |-ImplicitCastExpr 0x127943fb8 <col:33> 'int' <LValueToRValue>
|   |   |   |       |       |   | |   | | |   | `-DeclRefExpr 0x127943f78 <col:33> 'int' lvalue Var 0x127928d08 'y' 'int'
|   |   |   |       |       |   | |   | | |   `-ImplicitCastExpr 0x127943fd0 <col:35> 'int' <LValueToRValue>
|   |   |   |       |       |   | |   | | |     `-DeclRefExpr 0x127943f98 <col:35> 'int' lvalue Var 0x127928d88 'd' 'int'
|   |   |   |       |       |   | |   | | `-ImplicitCastExpr 0x127944048 <col:38> 'int' <LValueToRValue>
|   |   |   |       |       |   | |   | |   `-DeclRefExpr 0x127944028 <col:38> 'int' lvalue ParmVar 0x1279289a8 'w' 'int'
|   |   |   |       |       |   | |   | `-ImplicitCastExpr 0x1279440a0 <col:40> 'int' <LValueToRValue>
|   |   |   |       |       |   | |   |   `-DeclRefExpr 0x127944080 <col:40> 'int' lvalue Var 0x127928c88 'x' 'int'
|   |   |   |       |       |   | |   `-ImplicitCastExpr 0x1279440f8 <col:42> 'int' <LValueToRValue>
|   |   |   |       |       |   | |     `-DeclRefExpr 0x1279440d8 <col:42> 'int' lvalue Var 0x127928d88 'd' 'int'
|   |   |   |       |       |   | `-IntegerLiteral 0x127944150 <col:45> 'int' 4
|   |   |   |       |       |   `-ImplicitCastExpr 0x1279441b0 <col:47> 'int' <LValueToRValue>
|   |   |   |       |       |     `-DeclRefExpr 0x127944190 <col:47> 'int' lvalue Var 0x127928bf0 'off' 'int'
|   |   |   |       |       `-ImplicitCastExpr 0x127944208 <col:51> 'unsigned int' <LValueToRValue>
|   |   |   |       |         `-DeclRefExpr 0x1279441e8 <col:51> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |   |       `-IntegerLiteral 0x127944290 <col:56> 'int' 255
|   |   |   `-ForStmt 0x127944fd0 <line:23:13, line:30:13>
|   |   |     |-BinaryOperator 0x1279443b0 <line:23:18, col:23> 'int' '='
|   |   |     | |-DeclRefExpr 0x127944370 <col:18> 'int' lvalue Var 0x127928e08 'dx' 'int'
|   |   |     | `-IntegerLiteral 0x127944390 <col:23> 'int' 1
|   |   |     |-<<<NULL>>>
|   |   |     |-BinaryOperator 0x127944448 <col:26, col:32> 'int' contains-errors '<='
|   |   |     | |-DeclRefExpr 0x1279443d0 <col:26> 'int' lvalue Var 0x127928e08 'dx' 'int'
|   |   |     | `-RecoveryExpr 0x127944428 <col:32> '<dependent type>' contains-errors lvalue
|   |   |     |-UnaryOperator 0x127944488 <col:63, col:65> 'int' postfix '++'
|   |   |     | `-DeclRefExpr 0x127944468 <col:63> 'int' lvalue Var 0x127928e08 'dx' 'int'
|   |   |     `-CompoundStmt 0x127944fb0 <col:69, line:30:13>
|   |   |       |-ForStmt 0x127944f40 <line:24:17, line:28:17>
|   |   |       | |-BinaryOperator 0x1279444f8 <line:24:22, col:26> 'unsigned int' '='
|   |   |       | | |-DeclRefExpr 0x1279444a0 <col:22> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |       | | `-ImplicitCastExpr 0x1279444e0 <col:26> 'unsigned int' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x1279444c0 <col:26> 'int' 0
|   |   |       | |-<<<NULL>>>
|   |   |       | |-BinaryOperator 0x127944588 <col:29, col:33> 'int' '<'
|   |   |       | | |-ImplicitCastExpr 0x127944558 <col:29> 'unsigned int' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x127944518 <col:29> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |       | | `-ImplicitCastExpr 0x127944570 <col:33> 'unsigned int' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x127944538 <col:33> 'int' 3
|   |   |       | |-UnaryOperator 0x1279445c8 <col:36, col:37> 'unsigned int' postfix '++'
|   |   |       | | `-DeclRefExpr 0x1279445a8 <col:36> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |       | `-CompoundStmt 0x127944f18 <col:41, line:28:17>
|   |   |       |   |-BinaryOperator 0x127944a08 <line:25:21, col:59> 'int' contains-errors '='
|   |   |       |   | |-DeclRefExpr 0x1279445e0 <col:21> 'int' lvalue Var 0x127942150 'pix' 'int'
|   |   |       |   | `-BinaryOperator 0x1279449e8 <col:27, col:59> 'int' contains-errors '&'
|   |   |       |   |   |-ImplicitCastExpr 0x1279449d0 <col:27, col:55> 'int' contains-errors <IntegralCast>
|   |   |       |   |   | `-ImplicitCastExpr 0x1279449b8 <col:27, col:55> 'unsigned char' contains-errors <LValueToRValue>
|   |   |       |   |   |   `-ArraySubscriptExpr 0x127944978 <col:27, col:55> 'unsigned char' contains-errors lvalue
|   |   |       |   |   |     |-ImplicitCastExpr 0x127944960 <col:27> 'unsigned char *' contains-errors <LValueToRValue>
|   |   |       |   |   |     | `-DeclRefExpr 0x127944600 <col:27> 'unsigned char *' contains-errors lvalue Var 0x1279423e8 'buf' 'unsigned char *'
|   |   |       |   |   |     `-BinaryOperator 0x127944940 <col:31, col:54> 'unsigned int' '+'
|   |   |       |   |   |       |-ImplicitCastExpr 0x127944928 <col:31, col:50> 'unsigned int' <IntegralCast>
|   |   |       |   |   |       | `-BinaryOperator 0x1279448d0 <col:31, col:50> 'int' '+'
|   |   |       |   |   |       |   |-BinaryOperator 0x127944878 <col:31, col:48> 'int' '*'
|   |   |       |   |   |       |   | |-ParenExpr 0x127944838 <col:31, col:46> 'int'
|   |   |       |   |   |       |   | | `-BinaryOperator 0x127944818 <col:32, col:44> 'int' '+'
|   |   |       |   |   |       |   | |   |-BinaryOperator 0x1279447b8 <col:32, col:42> 'int' '+'
|   |   |       |   |   |       |   | |   | |-BinaryOperator 0x127944760 <col:32, col:40> 'int' '+'
|   |   |       |   |   |       |   | |   | | |-BinaryOperator 0x127944708 <col:32, col:38> 'int' '*'
|   |   |       |   |   |       |   | |   | | | |-ParenExpr 0x1279446b0 <col:32, col:36> 'int'
|   |   |       |   |   |       |   | |   | | | | `-BinaryOperator 0x127944690 <col:33, col:35> 'int' '+'
|   |   |       |   |   |       |   | |   | | | |   |-ImplicitCastExpr 0x127944660 <col:33> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   | | | |   | `-DeclRefExpr 0x127944620 <col:33> 'int' lvalue Var 0x127928d08 'y' 'int'
|   |   |       |   |   |       |   | |   | | | |   `-ImplicitCastExpr 0x127944678 <col:35> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   | | | |     `-DeclRefExpr 0x127944640 <col:35> 'int' lvalue Var 0x127928d88 'd' 'int'
|   |   |       |   |   |       |   | |   | | | `-ImplicitCastExpr 0x1279446f0 <col:38> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   | | |   `-DeclRefExpr 0x1279446d0 <col:38> 'int' lvalue ParmVar 0x1279289a8 'w' 'int'
|   |   |       |   |   |       |   | |   | | `-ImplicitCastExpr 0x127944748 <col:40> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   | |   `-DeclRefExpr 0x127944728 <col:40> 'int' lvalue Var 0x127928c88 'x' 'int'
|   |   |       |   |   |       |   | |   | `-ImplicitCastExpr 0x1279447a0 <col:42> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |   |   `-DeclRefExpr 0x127944780 <col:42> 'int' lvalue Var 0x127928d88 'd' 'int'
|   |   |       |   |   |       |   | |   `-ImplicitCastExpr 0x127944800 <col:44> 'int' <LValueToRValue>
|   |   |       |   |   |       |   | |     `-DeclRefExpr 0x1279447d8 <col:44> 'int' lvalue Var 0x127928e08 'dx' 'int'
|   |   |       |   |   |       |   | `-IntegerLiteral 0x127944858 <col:48> 'int' 4
|   |   |       |   |   |       |   `-ImplicitCastExpr 0x1279448b8 <col:50> 'int' <LValueToRValue>
|   |   |       |   |   |       |     `-DeclRefExpr 0x127944898 <col:50> 'int' lvalue Var 0x127928bf0 'off' 'int'
|   |   |       |   |   |       `-ImplicitCastExpr 0x127944910 <col:54> 'unsigned int' <LValueToRValue>
|   |   |       |   |   |         `-DeclRefExpr 0x1279448f0 <col:54> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |       |   |   `-IntegerLiteral 0x127944998 <col:59> 'int' 255
|   |   |       |   |-UnaryOperator 0x127944e18 <line:26:21, col:46> 'unsigned int' postfix '++'
|   |   |       |   | `-ArraySubscriptExpr 0x127944df8 <col:21, col:45> 'unsigned int' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x127944de0 <col:21> 'unsigned int *' <ArrayToPointerDecay>
|   |   |       |   |   | `-DeclRefExpr 0x127944a28 <col:21> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]'
|   |   |       |   |   `-CallExpr 0x127944db8 <col:27, col:44> 'int'
|   |   |       |   |     |-ImplicitCastExpr 0x127944da0 <col:27> 'int (*)(int)' <FunctionToPointerDecay>
|   |   |       |   |     | `-DeclRefExpr 0x127944c48 <col:27> 'int (int)' Function 0x127944a88 'abs' 'int (int)'
|   |   |       |   |     `-BinaryOperator 0x127944d48 <col:31, col:43> 'int' '-'
|   |   |       |   |       |-ImplicitCastExpr 0x127944d18 <col:31> 'int' <LValueToRValue>
|   |   |       |   |       | `-DeclRefExpr 0x127944c68 <col:31> 'int' lvalue Var 0x127942150 'pix' 'int'
|   |   |       |   |       `-ImplicitCastExpr 0x127944d30 <col:37, col:43> 'int' <LValueToRValue>
|   |   |       |   |         `-ArraySubscriptExpr 0x127944cf8 <col:37, col:43> 'int' lvalue
|   |   |       |   |           |-ImplicitCastExpr 0x127944cc8 <col:37> 'int *' <ArrayToPointerDecay>
|   |   |       |   |           | `-DeclRefExpr 0x127944c88 <col:37> 'int[3]' lvalue Var 0x127942268 'left' 'int[3]'
|   |   |       |   |           `-ImplicitCastExpr 0x127944ce0 <col:42> 'unsigned int' <LValueToRValue>
|   |   |       |   |             `-DeclRefExpr 0x127944ca8 <col:42> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |       |   `-BinaryOperator 0x127944ef8 <line:27:21, col:31> 'int' '='
|   |   |       |     |-ArraySubscriptExpr 0x127944ea0 <col:21, col:27> 'int' lvalue
|   |   |       |     | |-ImplicitCastExpr 0x127944e70 <col:21> 'int *' <ArrayToPointerDecay>
|   |   |       |     | | `-DeclRefExpr 0x127944e30 <col:21> 'int[3]' lvalue Var 0x127942268 'left' 'int[3]'
|   |   |       |     | `-ImplicitCastExpr 0x127944e88 <col:26> 'unsigned int' <LValueToRValue>
|   |   |       |     |   `-DeclRefExpr 0x127944e50 <col:26> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |       |     `-ImplicitCastExpr 0x127944ee0 <col:31> 'int' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x127944ec0 <col:31> 'int' lvalue Var 0x127942150 'pix' 'int'
|   |   |       `-UnaryOperator 0x127944f98 <line:29:17, col:23> 'int' postfix '++'
|   |   |         `-DeclRefExpr 0x127944f78 <col:17> 'int' lvalue Var 0x127942098 'pixels' 'int'
|   |   `-IfStmt 0x127945300 <line:32:9, line:38:9> has_else
|   |     |-BinaryOperator 0x1279450d0 <line:32:13, col:17> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1279450a0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x127945060 <col:13> 'int' lvalue ParmVar 0x1279289a8 'w' 'int'
|   |     | `-ImplicitCastExpr 0x1279450b8 <col:17> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x127945080 <col:17> 'int' lvalue ParmVar 0x127928a28 'h' 'int'
|   |     |-CompoundStmt 0x1279451d8 <col:20, line:35:9>
|   |     | |-CompoundAssignOperator 0x127945148 <line:33:13, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | | |-DeclRefExpr 0x1279450f0 <col:13> 'int' lvalue Var 0x127928c88 'x' 'int'
|   |     | | `-ImplicitCastExpr 0x127945130 <col:18> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x127945110 <col:18> 'int' lvalue ParmVar 0x127928a28 'h' 'int'
|   |     | `-BinaryOperator 0x1279451b8 <line:34:13, col:17> 'int' '='
|   |     |   |-DeclRefExpr 0x127945178 <col:13> 'int' lvalue Var 0x127928d08 'y' 'int'
|   |     |   `-IntegerLiteral 0x127945198 <col:17> 'int' 0
|   |     `-CompoundStmt 0x1279452e0 <line:35:16, line:38:9>
|   |       |-BinaryOperator 0x127945238 <line:36:13, col:17> 'int' '='
|   |       | |-DeclRefExpr 0x1279451f8 <col:13> 'int' lvalue Var 0x127928c88 'x' 'int'
|   |       | `-IntegerLiteral 0x127945218 <col:17> 'int' 0
|   |       `-CompoundAssignOperator 0x1279452b0 <line:37:13, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-DeclRefExpr 0x127945258 <col:13> 'int' lvalue Var 0x127928d08 'y' 'int'
|   |         `-ImplicitCastExpr 0x127945298 <col:18> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x127945278 <col:18> 'int' lvalue ParmVar 0x1279289a8 'w' 'int'
|   |-IfStmt 0x127945448 <line:41:5, line:43:5>
|   | |-BinaryOperator 0x1279453e0 <line:41:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x1279453c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x127945388 <col:9> 'int' lvalue Var 0x127942098 'pixels' 'int'
|   | | `-IntegerLiteral 0x1279453a8 <col:19> 'int' 0
|   | `-CompoundStmt 0x127945430 <col:22, line:43:5>
|   |   `-ReturnStmt 0x127945420 <line:42:9, col:16>
|   |     `-IntegerLiteral 0x127945400 <col:16> 'int' 0
|   |-IfStmt 0x127945660 <line:46:5, line:48:5>
|   | |-BinaryOperator 0x1279455f8 <line:46:9, col:35> 'int' '>='
|   | | |-BinaryOperator 0x1279455a0 <col:9, col:25> 'unsigned int' '/'
|   | | | |-BinaryOperator 0x127945530 <col:9, col:20> 'unsigned int' '*'
|   | | | | |-ImplicitCastExpr 0x127945500 <col:9, col:16> 'unsigned int' <LValueToRValue>
|   | | | | | `-ArraySubscriptExpr 0x1279454c0 <col:9, col:16> 'unsigned int' lvalue
|   | | | | |   |-ImplicitCastExpr 0x1279454a8 <col:9> 'unsigned int *' <ArrayToPointerDecay>
|   | | | | |   | `-DeclRefExpr 0x127945468 <col:9> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]'
|   | | | | |   `-IntegerLiteral 0x127945488 <col:15> 'int' 0
|   | | | | `-ImplicitCastExpr 0x127945518 <col:20> 'unsigned int' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x1279454e0 <col:20> 'int' 33
|   | | | `-ImplicitCastExpr 0x127945588 <col:25> 'unsigned int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x127945570 <col:25> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x127945550 <col:25> 'int' lvalue Var 0x127942098 'pixels' 'int'
|   | | `-ImplicitCastExpr 0x1279455e0 <col:35> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1279455c0 <col:35> 'int' 95
|   | `-CompoundStmt 0x127945648 <col:39, line:48:5>
|   |   `-ReturnStmt 0x127945638 <line:47:9, col:16>
|   |     `-IntegerLiteral 0x127945618 <col:16> 'int' 0
|   |-BinaryOperator 0x1279456d8 <line:50:5, col:14> 'unsigned int' '='
|   | |-DeclRefExpr 0x127945680 <col:5> 'unsigned int' lvalue Var 0x127942318 'errors' 'unsigned int'
|   | `-ImplicitCastExpr 0x1279456c0 <col:14> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1279456a0 <col:14> 'int' 0
|   |-ForStmt 0x1279465c8 <line:51:5, line:56:5>
|   | |-BinaryOperator 0x127945750 <line:51:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x1279456f8 <col:10> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   | | `-ImplicitCastExpr 0x127945738 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x127945718 <col:14> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1279457e0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1279457b0 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x127945770 <col:17> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1279457c8 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x127945790 <col:21> 'int' 8
|   | |-UnaryOperator 0x127946020 <col:24, col:25> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x127946000 <col:24> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   | `-CompoundStmt 0x1279465a8 <col:29, line:56:5>
|   |   |-CompoundAssignOperator 0x1279461d0 <line:52:9, col:36> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x127946038 <col:9> 'unsigned int' lvalue Var 0x127942318 'errors' 'unsigned int'
|   |   | `-BinaryOperator 0x1279461b0 <col:19, col:36> 'unsigned int' '*'
|   |   |   |-ImplicitCastExpr 0x127946198 <col:19, col:26> 'unsigned int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x1279460c8 <col:19, col:26> 'unsigned int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x127946098 <col:19> 'unsigned int *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x127946058 <col:19> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]'
|   |   |   |   `-ImplicitCastExpr 0x1279460b0 <col:25> 'unsigned int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x127946078 <col:25> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |   `-ParenExpr 0x127946178 <col:30, col:36> 'unsigned int'
|   |   |     `-BinaryOperator 0x127946158 <col:31, col:35> 'unsigned int' '*'
|   |   |       |-ImplicitCastExpr 0x127946128 <col:31> 'unsigned int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x1279460e8 <col:31> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   |       `-ImplicitCastExpr 0x127946140 <col:35> 'unsigned int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x127946108 <col:35> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |   `-IfStmt 0x127946588 <line:53:9, line:55:9>
|   |     |-BinaryOperator 0x127946520 <line:53:13, col:54> 'int' '||'
|   |     | |-BinaryOperator 0x1279462e0 <col:13, col:25> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x1279462b0 <col:13, col:20> 'unsigned int' <LValueToRValue>
|   |     | | | `-ArraySubscriptExpr 0x127946270 <col:13, col:20> 'unsigned int' lvalue
|   |     | | |   |-ImplicitCastExpr 0x127946240 <col:13> 'unsigned int *' <ArrayToPointerDecay>
|   |     | | |   | `-DeclRefExpr 0x127946200 <col:13> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]'
|   |     | | |   `-ImplicitCastExpr 0x127946258 <col:19> 'unsigned int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x127946220 <col:19> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |     | | `-ImplicitCastExpr 0x1279462c8 <col:25> 'unsigned int' <IntegralCast>
|   |     | |   `-IntegerLiteral 0x127946290 <col:25> 'int' 0
|   |     | `-BinaryOperator 0x127946500 <col:30, col:54> 'int' '>'
|   |     |   |-ImplicitCastExpr 0x1279464e8 <col:30, col:37> 'unsigned int' <LValueToRValue>
|   |     |   | `-ArraySubscriptExpr 0x127946370 <col:30, col:37> 'unsigned int' lvalue
|   |     |   |   |-ImplicitCastExpr 0x127946340 <col:30> 'unsigned int *' <ArrayToPointerDecay>
|   |     |   |   | `-DeclRefExpr 0x127946300 <col:30> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]'
|   |     |   |   `-ImplicitCastExpr 0x127946358 <col:36> 'unsigned int' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x127946320 <col:36> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |     |   `-BinaryOperator 0x1279464c8 <col:41, col:54> 'unsigned int' '*'
|   |     |     |-ImplicitCastExpr 0x127946498 <col:41, col:50> 'unsigned int' <LValueToRValue>
|   |     |     | `-ArraySubscriptExpr 0x127946458 <col:41, col:50> 'unsigned int' lvalue
|   |     |     |   |-ImplicitCastExpr 0x127946440 <col:41> 'unsigned int *' <ArrayToPointerDecay>
|   |     |     |   | `-DeclRefExpr 0x127946390 <col:41> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]'
|   |     |     |   `-BinaryOperator 0x127946420 <col:47, col:49> 'unsigned int' '-'
|   |     |     |     |-ImplicitCastExpr 0x1279463f0 <col:47> 'unsigned int' <LValueToRValue>
|   |     |     |     | `-DeclRefExpr 0x1279463b0 <col:47> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |     |     |     `-ImplicitCastExpr 0x127946408 <col:49> 'unsigned int' <IntegralCast>
|   |     |     |       `-IntegerLiteral 0x1279463d0 <col:49> 'int' 1
|   |     |     `-ImplicitCastExpr 0x1279464b0 <col:54> 'unsigned int' <IntegralCast>
|   |     |       `-IntegerLiteral 0x127946478 <col:54> 'int' 2
|   |     `-CompoundStmt 0x127946570 <col:57, line:55:9>
|   |       `-ReturnStmt 0x127946560 <line:54:13, col:20>
|   |         `-IntegerLiteral 0x127946540 <col:20> 'int' 0
|   |-ForStmt 0x1279468a8 <line:57:5, line:59:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x127946670 <line:57:12, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x127946640 <col:12> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x127946600 <col:12> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   | | `-ImplicitCastExpr 0x127946658 <col:16> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x127946620 <col:16> 'int' 256
|   | |-UnaryOperator 0x1279466b0 <col:21, col:22> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x127946690 <col:21> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   | `-CompoundStmt 0x127946890 <col:26, line:59:5>
|   |   `-CompoundAssignOperator 0x127946860 <line:58:9, col:36> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x1279466c8 <col:9> 'unsigned int' lvalue Var 0x127942318 'errors' 'unsigned int'
|   |     `-BinaryOperator 0x127946840 <col:19, col:36> 'unsigned int' '*'
|   |       |-ImplicitCastExpr 0x127946828 <col:19, col:26> 'unsigned int' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x127946758 <col:19, col:26> 'unsigned int' lvalue
|   |       |   |-ImplicitCastExpr 0x127946728 <col:19> 'unsigned int *' <ArrayToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1279466e8 <col:19> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]'
|   |       |   `-ImplicitCastExpr 0x127946740 <col:25> 'unsigned int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x127946708 <col:25> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |       `-ParenExpr 0x127946808 <col:30, col:36> 'unsigned int'
|   |         `-BinaryOperator 0x1279467e8 <col:31, col:35> 'unsigned int' '*'
|   |           |-ImplicitCastExpr 0x1279467b8 <col:31> 'unsigned int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x127946778 <col:31> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |           `-ImplicitCastExpr 0x1279467d0 <col:35> 'unsigned int' <LValueToRValue>
|   |             `-DeclRefExpr 0x127946798 <col:35> 'unsigned int' lvalue Var 0x127928ec8 'c' 'unsigned int'
|   |-CompoundAssignOperator 0x127946a60 <line:60:5, col:37> 'unsigned int' '/=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1279468e0 <col:5> 'unsigned int' lvalue Var 0x127942318 'errors' 'unsigned int'
|   | `-ParenExpr 0x127946a40 <col:15, col:37> 'unsigned int'
|   |   `-BinaryOperator 0x127946a20 <col:16, col:36> 'unsigned int' '-'
|   |     |-ImplicitCastExpr 0x127946a08 <col:16, col:25> 'unsigned int' <IntegralCast>
|   |     | `-BinaryOperator 0x127946958 <col:16, col:25> 'int' '*'
|   |     |   |-ImplicitCastExpr 0x127946940 <col:16> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x127946900 <col:16> 'int' lvalue Var 0x127942098 'pixels' 'int'
|   |     |   `-IntegerLiteral 0x127946920 <col:25> 'int' 3
|   |     `-ImplicitCastExpr 0x1279469f0 <col:29, col:36> 'unsigned int' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1279469d0 <col:29, col:36> 'unsigned int' lvalue
|   |         |-ImplicitCastExpr 0x1279469b8 <col:29> 'unsigned int *' <ArrayToPointerDecay>
|   |         | `-DeclRefExpr 0x127946978 <col:29> 'unsigned int[256]' lvalue Var 0x127942000 'stats' 'unsigned int[256]'
|   |         `-IntegerLiteral 0x127946998 <col:35> 'int' 0
|   `-ReturnStmt 0x127946ae0 <line:62:5, col:12>
|     `-ImplicitCastExpr 0x127946ac8 <col:12> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x127946ab0 <col:12> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x127946a90 <col:12> 'unsigned int' lvalue Var 0x127942318 'errors' 'unsigned int'
|-FunctionDecl 0x127942a80 <line:15:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x127942b80 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x127942be8 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x127942c50 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x127942b28 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x127944a88 <line:26:27> col:27 implicit used abs 'int (int)' extern
  |-ParmVarDecl 0x127944b88 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x127944b30 <<invalid sloc>> Implicit 998
  |-NoThrowAttr 0x127944bf8 <col:27> Implicit
  `-ConstAttr 0x127944c20 <col:27> Implicit
