TranslationUnitDecl 0x12a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a055bd0 '__int128'
|-TypedefDecl 0x12a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a055bf0 'unsigned __int128'
|-TypedefDecl 0x12a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a126000 'struct __NSConstantString_tag'
|   `-Record 0x12a056580 '__NSConstantString_tag'
|-TypedefDecl 0x12a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a055d90 '__SVInt8_t'
|-TypedefDecl 0x12a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a055db0 '__SVInt16_t'
|-TypedefDecl 0x12a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a055dd0 '__SVInt32_t'
|-TypedefDecl 0x12a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a055df0 '__SVInt64_t'
|-TypedefDecl 0x12a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a055e10 '__SVUint8_t'
|-TypedefDecl 0x12a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a055e30 '__SVUint16_t'
|-TypedefDecl 0x12a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a055e50 '__SVUint32_t'
|-TypedefDecl 0x12a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a055e70 '__SVUint64_t'
|-TypedefDecl 0x12a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a055e90 '__SVFloat16_t'
|-TypedefDecl 0x12a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a056390 '__SVBool_t'
|-TypedefDecl 0x12a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a0563f0 '__SVCount_t'
|-TypedefDecl 0x12a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a127fb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-TypedefDecl 0x12a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a127fb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-FunctionDecl 0x12a128280 <dataset_diviso_filec/func5392_nonvuln.c:1:1, line:59:1> line:1:6 invalid ReadReal 'void (int *, int)'
| |-ParmVarDecl 0x12a128128 <col:15, col:23> col:23 referenced invalid it8 'int *'
| |-ParmVarDecl 0x12a1281a8 <col:28, col:32> col:32 inum 'int'
| `-CompoundStmt 0x12a143f60 <line:2:1, line:59:1>
|   |-WhileStmt 0x12a1426e8 <line:5:5, line:9:5>
|   | |-CallExpr 0x12a1422a8 <line:5:12, col:27> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x12a142220 <col:12> 'int (int)' Function 0x12a142060 'isdigit' 'int (int)'
|   | | `-CXXDependentScopeMemberExpr 0x12a142260 <col:20, col:25> '<dependent type>' contains-errors lvalue ->ch
|   | |   `-RecoveryExpr 0x12a142240 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12a1426c8 <col:30, line:9:5>
|   |   |-BinaryOperator 0x12a1424e8 <line:7:9, col:54> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x12a142318 <col:9, col:14> '<dependent type>' contains-errors lvalue ->dnum
|   |   | | `-RecoveryExpr 0x12a1422f0 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x12a1422d0 <col:9> 'int *' lvalue ParmVar 0x12a128128 'it8' 'int *'
|   |   | `-BinaryOperator 0x12a1424c8 <col:21, col:54> '<dependent type>' contains-errors '+'
|   |   |   |-BinaryOperator 0x12a1423e8 <col:21, col:33> '<dependent type>' contains-errors '*'
|   |   |   | |-CXXDependentScopeMemberExpr 0x12a142380 <col:21, col:26> '<dependent type>' contains-errors lvalue ->dnum
|   |   |   | | `-RecoveryExpr 0x12a142360 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   | `-FloatingLiteral 0x12a1423c8 <col:33> 'double' 1.000000e+01
|   |   |   `-ParenExpr 0x12a1424a8 <col:40, col:54> '<dependent type>' contains-errors
|   |   |     `-BinaryOperator 0x12a142488 <col:41, col:51> '<dependent type>' contains-errors '-'
|   |   |       |-CXXDependentScopeMemberExpr 0x12a142428 <col:41, col:46> '<dependent type>' contains-errors lvalue ->ch
|   |   |       | `-RecoveryExpr 0x12a142408 <col:41> '<dependent type>' contains-errors lvalue
|   |   |       `-CharacterLiteral 0x12a142470 <col:51> 'int' 48
|   |   `-CallExpr 0x12a1426a0 <line:8:9, col:19> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12a142660 <col:9> 'int ()' Function 0x12a1425a8 'NextCh' 'int ()'
|   |     `-RecoveryExpr 0x12a142680 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12a143050 <line:11:5, line:26:5>
|   | |-BinaryOperator 0x12a142788 <line:11:9, col:20> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x12a142728 <col:9, col:14> '<dependent type>' contains-errors lvalue ->ch
|   | | | `-RecoveryExpr 0x12a142708 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-CharacterLiteral 0x12a142770 <col:20> 'int' 46
|   | `-CompoundStmt 0x12a143020 <col:25, line:26:5>
|   |   |-DeclStmt 0x12a142848 <line:14:9, col:21>
|   |   | `-VarDecl 0x12a1427c0 <col:9, col:20> col:13 used prec 'int' cinit
|   |   |   `-IntegerLiteral 0x12a142828 <col:20> 'int' 0
|   |   |-CallExpr 0x12a1428a0 <line:16:9, col:19> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12a142860 <col:9> 'int ()' Function 0x12a1425a8 'NextCh' 'int ()'
|   |   | `-RecoveryExpr 0x12a142880 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-WhileStmt 0x12a142c00 <line:18:9, line:23:9>
|   |   | |-CallExpr 0x12a142950 <line:18:16, col:31> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x12a1428c8 <col:16> 'int (int)' Function 0x12a142060 'isdigit' 'int (int)'
|   |   | | `-CXXDependentScopeMemberExpr 0x12a142908 <col:24, col:29> '<dependent type>' contains-errors lvalue ->ch
|   |   | |   `-RecoveryExpr 0x12a1428e8 <col:24> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x12a142be0 <col:34, line:23:9>
|   |   |   |-UnaryOperator 0x12a142b60 <line:21:13, col:17> 'int' postfix '++'
|   |   |   | `-DeclRefExpr 0x12a142b40 <col:13> 'int' lvalue Var 0x12a1427c0 'prec' 'int'
|   |   |   `-CallExpr 0x12a142bb8 <line:22:13, col:23> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12a142b78 <col:13> 'int ()' Function 0x12a1425a8 'NextCh' 'int ()'
|   |   |     `-RecoveryExpr 0x12a142b98 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x12a143000 <line:25:9, col:53> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x12a142c68 <col:9, col:14> '<dependent type>' contains-errors lvalue ->dnum
|   |     | `-RecoveryExpr 0x12a142c40 <col:9> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x12a142c20 <col:9> 'int *' lvalue ParmVar 0x12a128128 'it8' 'int *'
|   |     `-BinaryOperator 0x12a142fc8 <col:21, col:53> '<dependent type>' contains-errors '+'
|   |       |-CXXDependentScopeMemberExpr 0x12a142cd0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->dnum
|   |       | `-RecoveryExpr 0x12a142cb0 <col:21> '<dependent type>' contains-errors lvalue
|   |       `-ParenExpr 0x12a142fa8 <col:33, col:53> 'int'
|   |         `-BinaryOperator 0x12a142f88 <col:34, col:52> 'int' '/'
|   |           |-ImplicitCastExpr 0x12a142f70 <col:34> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x12a142ef8 <col:34> 'int' lvalue Var 0x12a1427c0 'prec' 'int'
|   |           `-CallExpr 0x12a142f30 <col:41, col:52> 'int'
|   |             |-ImplicitCastExpr 0x12a142f18 <col:41> 'int (*)()' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x12a142e10 <col:41> 'int ()' Function 0x12a142d58 'xpow10' 'int ()'
|   |             `-ImplicitCastExpr 0x12a142f58 <col:48> 'int' <LValueToRValue>
|   |               `-DeclRefExpr 0x12a142e30 <col:48> 'int' lvalue Var 0x12a1427c0 'prec' 'int'
|   `-IfStmt 0x12a143f40 <line:29:5, line:58:5>
|     |-BinaryOperator 0x12a1432f8 <line:29:9, col:29> 'int' contains-errors '=='
|     | |-CallExpr 0x12a1432b8 <col:9, col:24> '<dependent type>' contains-errors
|     | | |-DeclRefExpr 0x12a143230 <col:9> 'int (int)' Function 0x12a143070 'toupper' 'int (int)'
|     | | `-CXXDependentScopeMemberExpr 0x12a143270 <col:17, col:22> '<dependent type>' contains-errors lvalue ->ch
|     | |   `-RecoveryExpr 0x12a143250 <col:17> '<dependent type>' contains-errors lvalue
|     | `-CharacterLiteral 0x12a1432e0 <col:29> 'int' 69
|     `-CompoundStmt 0x12a143ee8 <col:34, line:58:5>
|       |-DeclStmt 0x12a143398 <line:31:9, col:14>
|       | `-VarDecl 0x12a143330 <col:9, col:13> col:13 used e 'int'
|       |-DeclStmt 0x12a143430 <line:32:9, col:16>
|       | `-VarDecl 0x12a1433c8 <col:9, col:13> col:13 used sgn 'int'
|       |-CallExpr 0x12a143488 <line:34:9, col:19> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x12a143448 <col:9> 'int ()' Function 0x12a1425a8 'NextCh' 'int ()'
|       | `-RecoveryExpr 0x12a143468 <col:16> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x12a1434f0 <col:22, col:28> 'int' '='
|       | |-DeclRefExpr 0x12a1434b0 <col:22> 'int' lvalue Var 0x12a1433c8 'sgn' 'int'
|       | `-IntegerLiteral 0x12a1434d0 <col:28> 'int' 1
|       |-IfStmt 0x12a143870 <line:36:9, line:45:13> has_else
|       | |-BinaryOperator 0x12a143590 <line:36:13, col:24> 'int' contains-errors '=='
|       | | |-CXXDependentScopeMemberExpr 0x12a143530 <col:13, col:18> '<dependent type>' contains-errors lvalue ->ch
|       | | | `-RecoveryExpr 0x12a143510 <col:13> '<dependent type>' contains-errors lvalue
|       | | `-CharacterLiteral 0x12a143578 <col:24> 'int' 45
|       | |-CompoundStmt 0x12a143690 <col:29, line:39:9>
|       | | |-BinaryOperator 0x12a143608 <line:38:13, col:20> 'int' '='
|       | | | |-DeclRefExpr 0x12a1435b0 <col:13> 'int' lvalue Var 0x12a1433c8 'sgn' 'int'
|       | | | `-UnaryOperator 0x12a1435f0 <col:19, col:20> 'int' prefix '-'
|       | | |   `-IntegerLiteral 0x12a1435d0 <col:20> 'int' 1
|       | | `-CallExpr 0x12a143668 <col:23, col:33> '<dependent type>' contains-errors
|       | |   |-DeclRefExpr 0x12a143628 <col:23> 'int ()' Function 0x12a1425a8 'NextCh' 'int ()'
|       | |   `-RecoveryExpr 0x12a143648 <col:30> '<dependent type>' contains-errors lvalue
|       | `-IfStmt 0x12a143850 <line:41:13, line:45:13>
|       |   |-BinaryOperator 0x12a143730 <line:41:17, col:28> 'int' contains-errors '=='
|       |   | |-CXXDependentScopeMemberExpr 0x12a1436d0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->ch
|       |   | | `-RecoveryExpr 0x12a1436b0 <col:17> '<dependent type>' contains-errors lvalue
|       |   | `-CharacterLiteral 0x12a143718 <col:28> 'int' 43
|       |   `-CompoundStmt 0x12a143830 <col:33, line:45:13>
|       |     |-BinaryOperator 0x12a1437a8 <line:43:17, col:24> 'int' '='
|       |     | |-DeclRefExpr 0x12a143750 <col:17> 'int' lvalue Var 0x12a1433c8 'sgn' 'int'
|       |     | `-UnaryOperator 0x12a143790 <col:23, col:24> 'int' prefix '+' cannot overflow
|       |     |   `-IntegerLiteral 0x12a143770 <col:24> 'int' 1
|       |     `-CallExpr 0x12a143808 <line:44:17, col:27> '<dependent type>' contains-errors
|       |       |-DeclRefExpr 0x12a1437c8 <col:17> 'int ()' Function 0x12a1425a8 'NextCh' 'int ()'
|       |       `-RecoveryExpr 0x12a1437e8 <col:24> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x12a1438e0 <line:47:13, col:17> 'int' '='
|       | |-DeclRefExpr 0x12a1438a0 <col:13> 'int' lvalue Var 0x12a143330 'e' 'int'
|       | `-IntegerLiteral 0x12a1438c0 <col:17> 'int' 0
|       |-WhileStmt 0x12a143c28 <line:48:13, line:54:13>
|       | |-CallExpr 0x12a143988 <line:48:20, col:35> '<dependent type>' contains-errors
|       | | |-DeclRefExpr 0x12a143900 <col:20> 'int (int)' Function 0x12a142060 'isdigit' 'int (int)'
|       | | `-CXXDependentScopeMemberExpr 0x12a143940 <col:28, col:33> '<dependent type>' contains-errors lvalue ->ch
|       | |   `-RecoveryExpr 0x12a143920 <col:28> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x12a143c08 <col:38, line:54:13>
|       |   |-IfStmt 0x12a143b80 <line:50:17, line:51:48>
|       |   | |-RecoveryExpr 0x12a1439c8 <line:50:21, col:50> '_Bool' contains-errors
|       |   | `-BinaryOperator 0x12a143b60 <line:51:21, col:48> 'int' contains-errors '='
|       |   |   |-DeclRefExpr 0x12a1439e8 <col:21> 'int' lvalue Var 0x12a143330 'e' 'int'
|       |   |   `-BinaryOperator 0x12a143b40 <col:25, col:48> '<dependent type>' contains-errors '+'
|       |   |     |-BinaryOperator 0x12a143a60 <col:25, col:29> 'int' '*'
|       |   |     | |-ImplicitCastExpr 0x12a143a48 <col:25> 'int' <LValueToRValue>
|       |   |     | | `-DeclRefExpr 0x12a143a08 <col:25> 'int' lvalue Var 0x12a143330 'e' 'int'
|       |   |     | `-IntegerLiteral 0x12a143a28 <col:29> 'int' 10
|       |   |     `-ParenExpr 0x12a143b20 <col:34, col:48> '<dependent type>' contains-errors
|       |   |       `-BinaryOperator 0x12a143b00 <col:35, col:45> '<dependent type>' contains-errors '-'
|       |   |         |-CXXDependentScopeMemberExpr 0x12a143aa0 <col:35, col:40> '<dependent type>' contains-errors lvalue ->ch
|       |   |         | `-RecoveryExpr 0x12a143a80 <col:35> '<dependent type>' contains-errors lvalue
|       |   |         `-CharacterLiteral 0x12a143ae8 <col:45> 'int' 48
|       |   `-CallExpr 0x12a143be0 <line:53:17, col:27> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x12a143ba0 <col:17> 'int ()' Function 0x12a1425a8 'NextCh' 'int ()'
|       |     `-RecoveryExpr 0x12a143bc0 <col:24> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x12a143cf8 <line:56:13, col:21> 'int' '='
|       | |-DeclRefExpr 0x12a143c48 <col:13> 'int' lvalue Var 0x12a143330 'e' 'int'
|       | `-BinaryOperator 0x12a143cd8 <col:17, col:21> 'int' '*'
|       |   |-ImplicitCastExpr 0x12a143ca8 <col:17> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x12a143c68 <col:17> 'int' lvalue Var 0x12a1433c8 'sgn' 'int'
|       |   `-ImplicitCastExpr 0x12a143cc0 <col:21> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x12a143c88 <col:21> 'int' lvalue Var 0x12a143330 'e' 'int'
|       `-BinaryOperator 0x12a143ec8 <line:57:13, col:49> '<dependent type>' contains-errors '='
|         |-CXXDependentScopeMemberExpr 0x12a143d60 <col:13, col:20> '<dependent type>' contains-errors lvalue ->dnum
|         | `-RecoveryExpr 0x12a143d38 <col:13> '<dependent type>' contains-errors lvalue
|         |   `-DeclRefExpr 0x12a143d18 <col:13> 'int *' lvalue ParmVar 0x12a128128 'it8' 'int *'
|         `-BinaryOperator 0x12a143ea8 <col:27, col:49> '<dependent type>' contains-errors '*'
|           |-CXXDependentScopeMemberExpr 0x12a143dc8 <col:27, col:34> '<dependent type>' contains-errors lvalue ->dnum
|           | `-RecoveryExpr 0x12a143da8 <col:27> '<dependent type>' contains-errors lvalue
|           `-CallExpr 0x12a143e68 <col:41, col:49> 'int'
|             |-ImplicitCastExpr 0x12a143e50 <col:41> 'int (*)()' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x12a143e10 <col:41> 'int ()' Function 0x12a142d58 'xpow10' 'int ()'
|             `-ImplicitCastExpr 0x12a143e90 <col:48> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x12a143e30 <col:48> 'int' lvalue Var 0x12a143330 'e' 'int'
|-FunctionDecl 0x12a142060 <line:5:12> col:12 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x12a142160 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x12a142108 <<invalid sloc>> Implicit 924
| |-NoThrowAttr 0x12a1421d0 <col:12> Implicit
| `-PureAttr 0x12a1421f8 <col:12> Implicit
`-FunctionDecl 0x12a143070 <line:29:9> col:9 implicit used toupper 'int (int)' extern
  |-ParmVarDecl 0x12a143170 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x12a143118 <<invalid sloc>> Implicit 933
  |-NoThrowAttr 0x12a1431e0 <col:9> Implicit
  `-PureAttr 0x12a143208 <col:9> Implicit
