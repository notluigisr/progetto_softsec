TranslationUnitDecl 0x136055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1360564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136055bd0 '__int128'
|-TypedefDecl 0x136056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136055bf0 'unsigned __int128'
|-TypedefDecl 0x13680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13680bc00 'struct __NSConstantString_tag'
|   `-Record 0x136056580 '__NSConstantString_tag'
|-TypedefDecl 0x13680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136055d90 '__SVInt8_t'
|-TypedefDecl 0x13680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136055db0 '__SVInt16_t'
|-TypedefDecl 0x13680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136055dd0 '__SVInt32_t'
|-TypedefDecl 0x13680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136055df0 '__SVInt64_t'
|-TypedefDecl 0x13680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136055e10 '__SVUint8_t'
|-TypedefDecl 0x13680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136055e30 '__SVUint16_t'
|-TypedefDecl 0x13680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136055e50 '__SVUint32_t'
|-TypedefDecl 0x13680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136055e70 '__SVUint64_t'
|-TypedefDecl 0x13680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136055e90 '__SVFloat16_t'
|-TypedefDecl 0x13680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1360560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1360560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1360560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1360561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1360561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1360561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1360562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1360562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1360562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136056390 '__SVBool_t'
|-TypedefDecl 0x13680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1360563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1360563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1360563f0 '__SVCount_t'
|-TypedefDecl 0x13680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13680dbb0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
|-TypedefDecl 0x13680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13680dbb0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
`-FunctionDecl 0x13682b758 <dataset_diviso_filec/func1197_vuln.c:1:1, line:64:1> line:1:12 invalid fallocate_chunk 'int (struct inode *, int, int, int)' static
  |-ParmVarDecl 0x13680e248 <col:28, col:42> col:42 used inode 'struct inode *'
  |-ParmVarDecl 0x13680e2e0 <col:49, col:56> col:56 referenced invalid offset 'int'
  |-ParmVarDecl 0x13680e360 <col:64, col:71> col:71 invalid len 'int'
  |-ParmVarDecl 0x13682b600 <line:2:7, col:11> col:11 used mode 'int'
  `-CompoundStmt 0x1361240c8 <line:3:1, line:64:1>
    |-DeclStmt 0x13682bc48 <line:4:2, col:39>
    | |-RecordDecl 0x13682b820 <col:2, col:9> col:9 struct gfs2_inode
    | `-VarDecl 0x13682b988 <col:2, col:38> col:21 used ip 'struct gfs2_inode *' cinit
    |   `-ImplicitCastExpr 0x13682bc18 <col:26, col:38> 'struct gfs2_inode *' <IntegralToPointer>
    |     `-CallExpr 0x13682bbd8 <col:26, col:38> 'int'
    |       |-ImplicitCastExpr 0x13682bbc0 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13682bb50 <col:26> 'int ()' Function 0x13682ba98 'GFS2_I' 'int ()'
    |       `-ImplicitCastExpr 0x13682bc00 <col:33> 'struct inode *' <LValueToRValue>
    |         `-DeclRefExpr 0x13682bb70 <col:33> 'struct inode *' lvalue ParmVar 0x13680e248 'inode' 'struct inode *'
    |-DeclStmt 0x13682be48 <line:5:2, col:26>
    | |-RecordDecl 0x13682bc60 <col:2, col:9> col:9 struct buffer_head
    | `-VarDecl 0x13682bdc8 <col:2, col:22> col:22 used dibh 'struct buffer_head *'
    |-DeclStmt 0x13682bee0 <line:6:2, col:11>
    | `-VarDecl 0x13682be78 <col:2, col:6> col:6 used error 'int'
    |-DeclStmt 0x13682c070 <line:8:2, col:55>
    | `-VarDecl 0x13682bf10 <col:2, col:40> col:15 used start_offset 'unsigned int' cinit
    |   `-BinaryOperator 0x13682c050 <col:30, col:40> '<dependent type>' contains-errors '&'
    |     |-RecoveryExpr 0x13682bf78 <col:30> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x13682c038 <col:39, col:40> '<dependent type>' contains-errors prefix '~' cannot overflow
    |       `-ImplicitCastExpr 0x13682c020 <col:40> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x13682c000 <col:40> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13682c278 <line:11:2, col:19>
    | |-RecordDecl 0x13682c088 <col:2, col:9> col:9 struct page
    | `-VarDecl 0x13682c1f8 <col:2, col:15> col:15 used page 'struct page *'
    |-DeclStmt 0x13682c468 <line:12:2, col:61>
    | `-VarDecl 0x13682c2a8 <col:2, col:46> col:15 used end_offset 'unsigned int' cinit
    |   `-BinaryOperator 0x13682c448 <col:28, col:46> '<dependent type>' contains-errors '&'
    |     |-ParenExpr 0x13682c370 <col:28, col:41> '<dependent type>' contains-errors
    |     | `-BinaryOperator 0x13682c350 <col:29, col:38> '<dependent type>' contains-errors '+'
    |     |   |-RecoveryExpr 0x13682c310 <col:29> '<dependent type>' contains-errors lvalue
    |     |   `-RecoveryExpr 0x13682c330 <col:38> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x13682c430 <col:45, col:46> '<dependent type>' contains-errors prefix '~' cannot overflow
    |       `-ImplicitCastExpr 0x13682c418 <col:46> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x13682c3f8 <col:46> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13682c598 <line:13:2, col:23>
    | |-VarDecl 0x13682c498 <col:2, col:15> col:15 used from 'unsigned int'
    | `-VarDecl 0x13682c518 <col:2, col:21> col:21 used to 'unsigned int'
    |-IfStmt 0x13682d098 <line:15:2, line:16:16>
    | |-UnaryOperator 0x13682c5e8 <line:15:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13682c5d0 <col:7> 'unsigned int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x13682c5b0 <col:7> 'unsigned int' contains-errors lvalue Var 0x13682c2a8 'end_offset' 'unsigned int'
    | `-BinaryOperator 0x13682d078 <line:16:3, col:16> 'unsigned int' contains-errors '='
    |   |-DeclRefExpr 0x13682d000 <col:3> 'unsigned int' contains-errors lvalue Var 0x13682c2a8 'end_offset' 'unsigned int'
    |   `-RecoveryExpr 0x13682d058 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13682d2f8 <line:18:2, col:42> 'int' '='
    | |-DeclRefExpr 0x13682d0b8 <col:2> 'int' lvalue Var 0x13682be78 'error' 'int'
    | `-CallExpr 0x13682d2b0 <col:10, col:42> 'int'
    |   |-ImplicitCastExpr 0x13682d298 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13682d1b8 <col:10> 'int ()' Function 0x13682d100 'gfs2_meta_inode_buffer' 'int ()'
    |   |-ImplicitCastExpr 0x13682d2e0 <col:33> 'struct gfs2_inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13682d1d8 <col:33> 'struct gfs2_inode *' lvalue Var 0x13682b988 'ip' 'struct gfs2_inode *'
    |   `-UnaryOperator 0x13682d280 <col:37, col:38> 'struct buffer_head **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x13682d1f8 <col:38> 'struct buffer_head *' lvalue Var 0x13682bdc8 'dibh' 'struct buffer_head *'
    |-IfStmt 0x13682d4f8 <line:19:2, line:20:8>
    | |-CallExpr 0x13682d450 <line:19:6, col:20> 'int'
    | | |-ImplicitCastExpr 0x13682d438 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13682d3f8 <col:6> 'int ()' Function 0x13682d340 'unlikely' 'int ()'
    | | `-ImplicitCastExpr 0x13682d478 <col:15> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13682d418 <col:15> 'int' lvalue Var 0x13682be78 'error' 'int'
    | `-GotoStmt 0x13682d4e0 <line:20:3, col:8> 'out' 0x13682d490
    |-CallExpr 0x13682d6b8 <line:22:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13682d5f8 <col:2> 'int ()' Function 0x13682d540 'gfs2_trans_add_bh' 'int ()'
    | |-RecoveryExpr 0x13682d650 <col:20, col:24> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13682d618 <col:20> 'struct gfs2_inode *' lvalue Var 0x13682b988 'ip' 'struct gfs2_inode *'
    | |-DeclRefExpr 0x13682d678 <col:30> 'struct buffer_head *' lvalue Var 0x13682bdc8 'dibh' 'struct buffer_head *'
    | `-IntegerLiteral 0x13682d698 <col:36> 'int' 1
    |-IfStmt 0x13682db70 <line:24:2, line:28:2>
    | |-CallExpr 0x13682d828 <line:24:6, col:24> 'int'
    | | |-ImplicitCastExpr 0x13682d810 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13682d7d0 <col:6> 'int ()' Function 0x13682d718 'gfs2_is_stuffed' 'int ()'
    | | `-ImplicitCastExpr 0x13682d850 <col:22> 'struct gfs2_inode *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13682d7f0 <col:22> 'struct gfs2_inode *' lvalue Var 0x13682b988 'ip' 'struct gfs2_inode *'
    | `-CompoundStmt 0x13682db50 <col:27, line:28:2>
    |   |-BinaryOperator 0x13682da60 <line:25:3, col:39> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13682d868 <col:3> 'int' lvalue Var 0x13682be78 'error' 'int'
    |   | `-CallExpr 0x13682da30 <col:11, col:39> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13682d968 <col:11> 'int ()' Function 0x13682d8b0 'gfs2_unstuff_dinode' 'int ()'
    |   |   |-DeclRefExpr 0x13682d988 <col:31> 'struct gfs2_inode *' lvalue Var 0x13682b988 'ip' 'struct gfs2_inode *'
    |   |   `-RecoveryExpr 0x13682da10 <col:35> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x13682db30 <line:26:3, line:27:9>
    |     |-CallExpr 0x13682dad8 <line:26:7, col:21> 'int'
    |     | |-ImplicitCastExpr 0x13682dac0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x13682da80 <col:7> 'int ()' Function 0x13682d340 'unlikely' 'int ()'
    |     | `-ImplicitCastExpr 0x13682db00 <col:16> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13682daa0 <col:16> 'int' lvalue Var 0x13682be78 'error' 'int'
    |     `-GotoStmt 0x13682db18 <line:27:4, col:9> 'out' 0x13682d490
    |-BinaryOperator 0x13682dcc0 <line:31:2, col:20> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13682dbc8 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13682dba8 <col:2> 'int' lvalue ParmVar 0x13680e2e0 'offset' 'int'
    | `-BinaryOperator 0x13682dca0 <col:11, col:20> '<dependent type>' contains-errors '<<'
    |   |-RecoveryExpr 0x13682dc60 <col:11> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x13682dc80 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13682dd38 <line:32:2, col:9> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x13682dce0 <col:2> 'unsigned int' lvalue Var 0x13682c498 'from' 'unsigned int'
    | `-ImplicitCastExpr 0x13682dd20 <col:9> 'unsigned int' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x13682dd00 <col:9> 'unsigned int' contains-errors lvalue Var 0x13682bf10 'start_offset' 'unsigned int'
    |-WhileStmt 0x136123d50 <line:34:2, line:56:2>
    | |-RecoveryExpr 0x13682dd78 <line:34:9, col:17> '_Bool' contains-errors
    | `-CompoundStmt 0x136123d00 <col:22, line:56:2>
    |   |-IfStmt 0x136123218 <line:37:3, line:40:3>
    |   | |-CallExpr 0x13682dfa0 <line:37:7, col:21> 'int'
    |   | | |-ImplicitCastExpr 0x13682df88 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x13682df18 <col:7> 'int ()' Function 0x13682d340 'unlikely' 'int ()'
    |   | | `-UnaryOperator 0x13682df70 <col:16, col:17> 'int' prefix '!' cannot overflow
    |   | |   `-ImplicitCastExpr 0x13682df58 <col:17> 'struct page *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x13682df38 <col:17> 'struct page *' lvalue Var 0x13682c1f8 'page' 'struct page *'
    |   | `-CompoundStmt 0x136123200 <col:24, line:40:3>
    |   |   `-GotoStmt 0x13682dfe8 <line:39:4, col:9> 'out' 0x13682d490
    |   |-IfStmt 0x1361232d0 <line:42:3, line:43:9>
    |   | |-RecoveryExpr 0x136123238 <line:42:7, col:15> '_Bool' contains-errors
    |   | `-BinaryOperator 0x1361232b0 <line:43:4, col:9> 'unsigned int' contains-errors '='
    |   |   |-DeclRefExpr 0x136123258 <col:4> 'unsigned int' lvalue Var 0x13682c518 'to' 'unsigned int'
    |   |   `-ImplicitCastExpr 0x136123298 <col:9> 'unsigned int' contains-errors <LValueToRValue>
    |   |     `-DeclRefExpr 0x136123278 <col:9> 'unsigned int' contains-errors lvalue Var 0x13682c2a8 'end_offset' 'unsigned int'
    |   |-BinaryOperator 0x136123548 <line:44:3, col:50> 'int' '='
    |   | |-DeclRefExpr 0x1361232f0 <col:3> 'int' lvalue Var 0x13682be78 'error' 'int'
    |   | `-CallExpr 0x1361234a8 <col:11, col:50> 'int'
    |   |   |-ImplicitCastExpr 0x136123490 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1361233f0 <col:11> 'int ()' Function 0x136123338 'write_empty_blocks' 'int ()'
    |   |   |-ImplicitCastExpr 0x1361234e8 <col:30> 'struct page *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x136123410 <col:30> 'struct page *' lvalue Var 0x13682c1f8 'page' 'struct page *'
    |   |   |-ImplicitCastExpr 0x136123500 <col:36> 'unsigned int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x136123430 <col:36> 'unsigned int' lvalue Var 0x13682c498 'from' 'unsigned int'
    |   |   |-ImplicitCastExpr 0x136123518 <col:42> 'unsigned int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x136123450 <col:42> 'unsigned int' lvalue Var 0x13682c518 'to' 'unsigned int'
    |   |   `-ImplicitCastExpr 0x136123530 <col:46> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x136123470 <col:46> 'int' lvalue ParmVar 0x13682b600 'mode' 'int'
    |   |-IfStmt 0x1361238c0 <line:45:3, line:48:3>
    |   | |-RecoveryExpr 0x1361236d8 <line:45:7, line:46:35> '_Bool' contains-errors
    |   | `-CompoundStmt 0x1361238a8 <col:38, line:48:3>
    |   |   `-CallExpr 0x136123878 <line:47:4, col:35> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1361237d8 <col:4> 'int ()' Function 0x136123720 'i_size_write' 'int ()'
    |   |     |-DeclRefExpr 0x1361237f8 <col:17> 'struct inode *' lvalue ParmVar 0x13680e248 'inode' 'struct inode *'
    |   |     `-BinaryOperator 0x136123858 <col:24, col:33> '<dependent type>' contains-errors '+'
    |   |       |-RecoveryExpr 0x136123818 <col:24> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x136123838 <col:33> 'unsigned int' lvalue Var 0x13682c518 'to' 'unsigned int'
    |   |-CallExpr 0x136123a18 <line:49:3, col:19> 'int'
    |   | |-ImplicitCastExpr 0x136123a00 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1361239c0 <col:3> 'int ()' Function 0x136123908 'unlock_page' 'int ()'
    |   | `-ImplicitCastExpr 0x136123a40 <col:15> 'struct page *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1361239e0 <col:15> 'struct page *' lvalue Var 0x13682c1f8 'page' 'struct page *'
    |   |-CallExpr 0x136123b90 <line:50:3, col:26> 'int'
    |   | |-ImplicitCastExpr 0x136123b78 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x136123b38 <col:3> 'int ()' Function 0x136123a80 'page_cache_release' 'int ()'
    |   | `-ImplicitCastExpr 0x136123bb8 <col:22> 'struct page *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x136123b58 <col:22> 'struct page *' lvalue Var 0x13682c1f8 'page' 'struct page *'
    |   |-IfStmt 0x136123c20 <line:51:3, line:52:9>
    |   | |-ImplicitCastExpr 0x136123bf0 <line:51:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x136123bd0 <col:7> 'int' lvalue Var 0x13682be78 'error' 'int'
    |   | `-GotoStmt 0x136123c08 <line:52:4, col:9> 'out' 0x13682d490
    |   `-BinaryOperator 0x136123ce0 <line:55:3, col:10> 'unsigned int' '='
    |     |-DeclRefExpr 0x136123c88 <col:3> 'unsigned int' lvalue Var 0x13682c498 'from' 'unsigned int'
    |     `-ImplicitCastExpr 0x136123cc8 <col:10> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x136123ca8 <col:10> 'int' 0
    |-CallExpr 0x136123ea8 <line:58:2, col:24> 'int'
    | |-ImplicitCastExpr 0x136123e90 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x136123e50 <col:2> 'int ()' Function 0x136123d98 'mark_inode_dirty' 'int ()'
    | `-ImplicitCastExpr 0x136123ed0 <col:19> 'struct inode *' <LValueToRValue>
    |   `-DeclRefExpr 0x136123e70 <col:19> 'struct inode *' lvalue ParmVar 0x13680e248 'inode' 'struct inode *'
    |-CallExpr 0x136124020 <line:60:2, col:13> 'int'
    | |-ImplicitCastExpr 0x136124008 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x136123fc8 <col:2> 'int ()' Function 0x136123f10 'brelse' 'int ()'
    | `-ImplicitCastExpr 0x136124048 <col:9> 'struct buffer_head *' <LValueToRValue>
    |   `-DeclRefExpr 0x136123fe8 <col:9> 'struct buffer_head *' lvalue Var 0x13682bdc8 'dibh' 'struct buffer_head *'
    `-LabelStmt 0x1361240a8 <line:62:1, line:63:9> 'out'
      `-ReturnStmt 0x136124098 <col:2, col:9>
        `-ImplicitCastExpr 0x136124080 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x136124060 <col:9> 'int' lvalue Var 0x13682be78 'error' 'int'
