TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d126000 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d127fb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d127fb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-FunctionDecl 0x12d128758 <dataset_diviso_filec/func7574_nonvuln.c:1:1, line:44:1> line:1:12 snd_c400_create_effect_vol_ctls 'int (struct usb_mixer_interface *)' static
| |-ParmVarDecl 0x12d128648 <col:44, col:72> col:72 used mixer 'struct usb_mixer_interface *'
| `-CompoundStmt 0x12d143bc8 <line:2:1, line:44:1>
|   |-DeclStmt 0x12d140b58 <line:3:2, col:15>
|   | `-VarDecl 0x12d140af0 <col:2, col:14> col:7 used name 'char[64]'
|   |-DeclStmt 0x12d140bf0 <line:4:2, col:20>
|   | `-VarDecl 0x12d140b88 <col:2, col:15> col:15 used cmask 'unsigned int'
|   |-DeclStmt 0x12d140d20 <line:5:2, col:15>
|   | |-VarDecl 0x12d140c20 <col:2, col:6> col:6 used chan 'int'
|   | `-VarDecl 0x12d140ca0 <col:2, col:12> col:12 used err 'int'
|   |-DeclStmt 0x12d140dd8 <line:6:2, col:18>
|   | `-VarDecl 0x12d140d50 <col:2, col:17> col:6 used num_outs 'int' cinit
|   |   `-IntegerLiteral 0x12d140db8 <col:17> 'int' 0
|   |-DeclStmt 0x12d140e90 <line:7:2, col:17>
|   | `-VarDecl 0x12d140e08 <col:2, col:16> col:6 used num_ins 'int' cinit
|   |   `-IntegerLiteral 0x12d140e70 <col:16> 'int' 0
|   |-DeclStmt 0x12d140f60 <line:9:2, col:30>
|   | `-VarDecl 0x12d140ec0 <col:2, col:26> col:21 used id 'const unsigned int' cinit
|   |   `-ImplicitCastExpr 0x12d140f48 <col:26> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x12d140f28 <col:26> 'int' 66
|   |-DeclStmt 0x12d141048 <line:10:2, col:36>
|   | `-VarDecl 0x12d140f90 <col:2, col:23> col:12 used val_type 'const int' cinit
|   |   `-RecoveryExpr 0x12d141028 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12d141100 <line:11:2, col:23>
|   | `-VarDecl 0x12d141078 <col:2, col:22> col:12 used control 'const int' cinit
|   |   `-IntegerLiteral 0x12d1410e0 <col:22> 'int' 1
|   |-SwitchStmt 0x12d1411d8 <line:13:2, line:22:2>
|   | |-ImplicitCastExpr 0x12d1411c0 <line:13:10, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-CXXDependentScopeMemberExpr 0x12d141178 <col:10, col:23> '<dependent type>' contains-errors lvalue ->usb_id
|   | |   `-RecoveryExpr 0x12d141150 <col:10, col:17> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12d141118 <col:10> 'struct usb_mixer_interface *' lvalue ParmVar 0x12d128648 'mixer' 'struct usb_mixer_interface *'
|   | `-CompoundStmt 0x12d141670 <col:31, line:22:2>
|   |   |-CaseStmt 0x12d1413e8 <line:14:2, line:15:14>
|   |   | |-CallExpr 0x12d1413b8 <line:14:7, col:28> 'int'
|   |   | | |-ImplicitCastExpr 0x12d1413a0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x12d141310 <col:7> 'int ()' Function 0x12d141258 'USB_ID' 'int ()'
|   |   | | |-IntegerLiteral 0x12d141330 <col:14> 'int' 1891
|   |   | | `-IntegerLiteral 0x12d141350 <col:22> 'int' 8240
|   |   | `-BinaryOperator 0x12d141450 <line:15:3, col:14> 'int' '='
|   |   |   |-DeclRefExpr 0x12d141410 <col:3> 'int' lvalue Var 0x12d140d50 'num_outs' 'int'
|   |   |   `-IntegerLiteral 0x12d141430 <col:14> 'int' 6
|   |   |-BinaryOperator 0x12d1414b0 <line:16:3, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x12d141470 <col:3> 'int' lvalue Var 0x12d140e08 'num_ins' 'int'
|   |   | `-IntegerLiteral 0x12d141490 <col:13> 'int' 4
|   |   |-BreakStmt 0x12d1414d0 <line:17:3>
|   |   |-CaseStmt 0x12d141580 <line:18:2, line:19:14>
|   |   | |-CallExpr 0x12d141550 <line:18:7, col:28> 'int'
|   |   | | |-ImplicitCastExpr 0x12d141538 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x12d1414d8 <col:7> 'int ()' Function 0x12d141258 'USB_ID' 'int ()'
|   |   | | |-IntegerLiteral 0x12d1414f8 <col:14> 'int' 1891
|   |   | | `-IntegerLiteral 0x12d141518 <col:22> 'int' 8241
|   |   | `-BinaryOperator 0x12d1415e8 <line:19:3, col:14> 'int' '='
|   |   |   |-DeclRefExpr 0x12d1415a8 <col:3> 'int' lvalue Var 0x12d140d50 'num_outs' 'int'
|   |   |   `-IntegerLiteral 0x12d1415c8 <col:14> 'int' 8
|   |   |-BinaryOperator 0x12d141648 <line:20:3, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x12d141608 <col:3> 'int' lvalue Var 0x12d140e08 'num_ins' 'int'
|   |   | `-IntegerLiteral 0x12d141628 <col:13> 'int' 6
|   |   `-BreakStmt 0x12d141668 <line:21:3>
|   |-ForStmt 0x12d143b60 <line:24:2, line:41:2>
|   | |-BinaryOperator 0x12d1416f0 <line:24:7, col:14> 'int' '='
|   | | |-DeclRefExpr 0x12d1416b0 <col:7> 'int' lvalue Var 0x12d140c20 'chan' 'int'
|   | | `-IntegerLiteral 0x12d1416d0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12d1417d8 <col:17, col:35> 'int' '<'
|   | | |-ImplicitCastExpr 0x12d1417c0 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12d141710 <col:17> 'int' lvalue Var 0x12d140c20 'chan' 'int'
|   | | `-BinaryOperator 0x12d1417a0 <col:24, col:35> 'int' '+'
|   | |   |-ImplicitCastExpr 0x12d141770 <col:24> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x12d141730 <col:24> 'int' lvalue Var 0x12d140d50 'num_outs' 'int'
|   | |   `-ImplicitCastExpr 0x12d141788 <col:35> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12d141750 <col:35> 'int' lvalue Var 0x12d140e08 'num_ins' 'int'
|   | |-UnaryOperator 0x12d141818 <col:44, col:48> 'int' postfix '++'
|   | | `-DeclRefExpr 0x12d1417f8 <col:44> 'int' lvalue Var 0x12d140c20 'chan' 'int'
|   | `-CompoundStmt 0x12d143b30 <col:52, line:41:2>
|   |   |-IfStmt 0x12d1434d0 <line:25:3, line:33:3> has_else
|   |   | |-BinaryOperator 0x12d1418a0 <line:25:7, col:14> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x12d141870 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12d141830 <col:7> 'int' lvalue Var 0x12d140c20 'chan' 'int'
|   |   | | `-ImplicitCastExpr 0x12d141888 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12d141850 <col:14> 'int' lvalue Var 0x12d140d50 'num_outs' 'int'
|   |   | |-CompoundStmt 0x12d143240 <col:24, line:29:3>
|   |   | | `-CallExpr 0x12d1431b8 <line:26:4, line:28:13> 'int'
|   |   | |   |-ImplicitCastExpr 0x12d1431a0 <line:26:4> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x12d142fb8 <col:4> 'int (char *, unsigned long, const char *, ...)' Function 0x12d141910 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   | |   |-ImplicitCastExpr 0x12d1431f8 <col:13> 'char *' <ArrayToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x12d142fd8 <col:13> 'char[64]' lvalue Var 0x12d140af0 'name' 'char[64]'
|   |   | |   |-UnaryExprOrTypeTraitExpr 0x12d143038 <col:19, col:30> 'unsigned long' sizeof
|   |   | |   | `-ParenExpr 0x12d143018 <col:25, col:30> 'char[64]' lvalue
|   |   | |   |   `-DeclRefExpr 0x12d142ff8 <col:26> 'char[64]' lvalue Var 0x12d140af0 'name' 'char[64]' non_odr_use_unevaluated
|   |   | |   |-ImplicitCastExpr 0x12d143228 <line:27:5> 'const char *' <NoOp>
|   |   | |   | `-ImplicitCastExpr 0x12d143210 <col:5> 'char *' <ArrayToPointerDecay>
|   |   | |   |   `-StringLiteral 0x12d1430a0 <col:5> 'char[4]' lvalue "STR"
|   |   | |   `-BinaryOperator 0x12d143118 <line:28:5, col:12> 'int' '+'
|   |   | |     |-ImplicitCastExpr 0x12d143100 <col:5> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x12d1430c0 <col:5> 'int' lvalue Var 0x12d140c20 'chan' 'int'
|   |   | |     `-IntegerLiteral 0x12d1430e0 <col:12> 'int' 1
|   |   | `-CompoundStmt 0x12d1434b8 <line:29:10, line:33:3>
|   |   |   `-CallExpr 0x12d143430 <line:30:4, line:32:24> 'int'
|   |   |     |-ImplicitCastExpr 0x12d143418 <line:30:4> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12d143258 <col:4> 'int (char *, unsigned long, const char *, ...)' Function 0x12d141910 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   |     |-ImplicitCastExpr 0x12d143470 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12d143278 <col:13> 'char[64]' lvalue Var 0x12d140af0 'name' 'char[64]'
|   |   |     |-UnaryExprOrTypeTraitExpr 0x12d1432d8 <col:19, col:30> 'unsigned long' sizeof
|   |   |     | `-ParenExpr 0x12d1432b8 <col:25, col:30> 'char[64]' lvalue
|   |   |     |   `-DeclRefExpr 0x12d143298 <col:26> 'char[64]' lvalue Var 0x12d140af0 'name' 'char[64]' non_odr_use_unevaluated
|   |   |     |-ImplicitCastExpr 0x12d1434a0 <line:31:5> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x12d143488 <col:5> 'char *' <ArrayToPointerDecay>
|   |   |     |   `-StringLiteral 0x12d1432f8 <col:5> 'char[4]' lvalue "STR"
|   |   |     `-BinaryOperator 0x12d1433c8 <line:32:5, col:23> 'int' '+'
|   |   |       |-BinaryOperator 0x12d143388 <col:5, col:12> 'int' '-'
|   |   |       | |-ImplicitCastExpr 0x12d143358 <col:5> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x12d143318 <col:5> 'int' lvalue Var 0x12d140c20 'chan' 'int'
|   |   |       | `-ImplicitCastExpr 0x12d143370 <col:12> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x12d143338 <col:12> 'int' lvalue Var 0x12d140d50 'num_outs' 'int'
|   |   |       `-IntegerLiteral 0x12d1433a8 <col:23> 'int' 1
|   |   |-BinaryOperator 0x12d1436f8 <line:35:3, col:43> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x12d143500 <col:3> 'unsigned int' lvalue Var 0x12d140b88 'cmask' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x12d1436e0 <col:11, col:43> 'unsigned int' <IntegralCast>
|   |   |   `-ConditionalOperator 0x12d1436b0 <col:11, col:43> 'int'
|   |   |     |-ParenExpr 0x12d143598 <col:11, col:21> 'int'
|   |   |     | `-BinaryOperator 0x12d143578 <col:12, col:20> 'int' '=='
|   |   |     |   |-ImplicitCastExpr 0x12d143560 <col:12> 'int' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x12d143520 <col:12> 'int' lvalue Var 0x12d140c20 'chan' 'int'
|   |   |     |   `-IntegerLiteral 0x12d143540 <col:20> 'int' 0
|   |   |     |-IntegerLiteral 0x12d1435b8 <col:25> 'int' 0
|   |   |     `-BinaryOperator 0x12d143690 <col:29, col:43> 'int' '<<'
|   |   |       |-IntegerLiteral 0x12d1435d8 <col:29> 'int' 1
|   |   |       `-ParenExpr 0x12d143670 <col:34, col:43> 'int'
|   |   |         `-BinaryOperator 0x12d143650 <col:35, col:42> 'int' '-'
|   |   |           |-ImplicitCastExpr 0x12d143638 <col:35> 'int' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x12d1435f8 <col:35> 'int' lvalue Var 0x12d140c20 'chan' 'int'
|   |   |           `-IntegerLiteral 0x12d143618 <col:42> 'int' 1
|   |   |-BinaryOperator 0x12d143a30 <line:36:3, line:38:29> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x12d143718 <line:36:3> 'int' lvalue Var 0x12d140ca0 'err' 'int'
|   |   | `-CallExpr 0x12d1439d8 <col:9, line:38:29> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12d143818 <line:36:9> 'int ()' Function 0x12d143760 'snd_create_std_mono_ctl' 'int ()'
|   |   |   |-DeclRefExpr 0x12d143838 <col:33> 'struct usb_mixer_interface *' lvalue ParmVar 0x12d128648 'mixer' 'struct usb_mixer_interface *'
|   |   |   |-DeclRefExpr 0x12d143858 <col:40> 'const unsigned int' lvalue Var 0x12d140ec0 'id' 'const unsigned int'
|   |   |   |-DeclRefExpr 0x12d143878 <col:44> 'const int' lvalue Var 0x12d141078 'control' 'const int'
|   |   |   |-DeclRefExpr 0x12d143898 <line:37:7> 'unsigned int' lvalue Var 0x12d140b88 'cmask' 'unsigned int'
|   |   |   |-DeclRefExpr 0x12d1438b8 <col:14> 'const int' contains-errors lvalue Var 0x12d140f90 'val_type' 'const int'
|   |   |   |-DeclRefExpr 0x12d1438d8 <col:24> 'char[64]' lvalue Var 0x12d140af0 'name' 'char[64]'
|   |   |   `-UnaryOperator 0x12d1439c0 <line:38:7, col:8> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-RecoveryExpr 0x12d1439a0 <col:8> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x12d143b10 <line:39:3, line:40:11>
|   |     |-BinaryOperator 0x12d143aa8 <line:39:7, col:13> 'int' '<'
|   |     | |-ImplicitCastExpr 0x12d143a90 <col:7> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12d143a50 <col:7> 'int' lvalue Var 0x12d140ca0 'err' 'int'
|   |     | `-IntegerLiteral 0x12d143a70 <col:13> 'int' 0
|   |     `-ReturnStmt 0x12d143b00 <line:40:4, col:11>
|   |       `-ImplicitCastExpr 0x12d143ae8 <col:11> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x12d143ac8 <col:11> 'int' lvalue Var 0x12d140ca0 'err' 'int'
|   `-ReturnStmt 0x12d143bb8 <line:43:2, col:9>
|     `-IntegerLiteral 0x12d143b98 <col:9> 'int' 0
`-FunctionDecl 0x12d141910 <line:26:4> col:4 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x12d142e30 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x12d142e98 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x12d142f00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x12d1419b8 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x12d142f80 <col:4> Implicit printf 3 4
