TranslationUnitDecl 0x13d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d055bd0 '__int128'
|-TypedefDecl 0x13d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d055bf0 'unsigned __int128'
|-TypedefDecl 0x13d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13d056580 '__NSConstantString_tag'
|-TypedefDecl 0x13d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d055d90 '__SVInt8_t'
|-TypedefDecl 0x13d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d055db0 '__SVInt16_t'
|-TypedefDecl 0x13d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d055dd0 '__SVInt32_t'
|-TypedefDecl 0x13d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d055df0 '__SVInt64_t'
|-TypedefDecl 0x13d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d055e10 '__SVUint8_t'
|-TypedefDecl 0x13d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d055e30 '__SVUint16_t'
|-TypedefDecl 0x13d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d055e50 '__SVUint32_t'
|-TypedefDecl 0x13d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d055e70 '__SVUint64_t'
|-TypedefDecl 0x13d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d055e90 '__SVFloat16_t'
|-TypedefDecl 0x13d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d056390 '__SVBool_t'
|-TypedefDecl 0x13d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0563f0 '__SVCount_t'
|-TypedefDecl 0x13d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d80dbb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-TypedefDecl 0x13d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d80dbb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-FunctionDecl 0x13d80df18 <dataset_diviso_filec/func16837_vuln.c:1:1, line:25:1> line:1:37 invalid ModPlug_SampleName 'int (int *, unsigned int, char *)'
| |-ParmVarDecl 0x13d80dd28 <col:56, col:69> col:69 invalid file 'int *'
| |-ParmVarDecl 0x13d80dda8 <col:75, col:88> col:88 used qual 'unsigned int'
| |-ParmVarDecl 0x13d80de28 <col:94, col:100> col:100 used buff 'char *'
| `-CompoundStmt 0x13d122ac8 <line:2:1, line:25:1>
|   |-DeclStmt 0x13d80e058 <line:3:2, col:17>
|   | `-VarDecl 0x13d80dff0 <col:2, col:14> col:14 used str 'const char *'
|   |-DeclStmt 0x13d80e0f0 <line:4:2, col:21>
|   | `-VarDecl 0x13d80e088 <col:2, col:15> col:15 used retval 'unsigned int'
|   |-UnaryExprOrTypeTraitExpr 0x13d80e160 <line:5:2, col:9> 'unsigned long' sizeof
|   | `-DeclRefExpr 0x13d80e140 <col:9> 'unsigned int' lvalue Var 0x13d80e088 'retval' 'unsigned int' non_odr_use_unevaluated
|   |-IfStmt 0x13d80e200 <line:6:2, col:19>
|   | |-UnaryOperator 0x13d80e1b8 <col:5, col:6> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13d80e1a0 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13d80e180 <col:6> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13d80e1f0 <col:12, col:19>
|   |   `-IntegerLiteral 0x13d80e1d0 <col:19> 'int' 0
|   |-BinaryOperator 0x13e808908 <line:7:2, col:55> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x13d80e220 <col:2> 'const char *' lvalue Var 0x13d80dff0 'str' 'const char *'
|   | `-CallExpr 0x13e8088d8 <col:8, col:55> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13d80e3a0 <col:8> 'int ()' Function 0x13d80e2e8 'openmpt_module_get_sample_name' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x13e808800 <col:39, col:45> '<dependent type>' contains-errors lvalue ->mod
|   |   | `-RecoveryExpr 0x13d80e3c0 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x13e8088b8 <col:49, col:54> 'unsigned int' '-'
|   |     |-ImplicitCastExpr 0x13e808888 <col:49> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13e808848 <col:49> 'unsigned int' lvalue ParmVar 0x13d80dda8 'qual' 'unsigned int'
|   |     `-ImplicitCastExpr 0x13e8088a0 <col:54> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x13e808868 <col:54> 'int' 1
|   |-IfStmt 0x13e808ad8 <line:8:2, line:13:2>
|   | |-UnaryOperator 0x13e808960 <line:8:5, col:6> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13e808948 <col:6> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13e808928 <col:6> 'const char *' lvalue Var 0x13d80dff0 'str' 'const char *'
|   | `-CompoundStmt 0x13e808ab8 <col:10, line:13:2>
|   |   |-IfStmt 0x13e808a68 <line:9:3, line:11:3>
|   |   | |-ImplicitCastExpr 0x13e808998 <line:9:6> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13e808978 <col:6> 'char *' lvalue ParmVar 0x13d80de28 'buff' 'char *'
|   |   | `-CompoundStmt 0x13e808a50 <col:11, line:11:3>
|   |   |   `-BinaryOperator 0x13e808a30 <line:10:4, col:12> 'char' '='
|   |   |     |-UnaryOperator 0x13e8089e8 <col:4, col:5> 'char' lvalue prefix '*' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x13e8089d0 <col:5> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x13e8089b0 <col:5> 'char *' lvalue ParmVar 0x13d80de28 'buff' 'char *'
|   |   |     `-ImplicitCastExpr 0x13e808a18 <col:12> 'char' <IntegralCast>
|   |   |       `-CharacterLiteral 0x13e808a00 <col:12> 'int' 0
|   |   `-ReturnStmt 0x13e808aa8 <line:12:3, col:10>
|   |     `-IntegerLiteral 0x13e808a88 <col:10> 'int' 0
|   |-BinaryOperator 0x13e8091f0 <line:14:2, col:24> 'unsigned int' '='
|   | |-DeclRefExpr 0x13e808af8 <col:2> 'unsigned int' lvalue Var 0x13d80e088 'retval' 'unsigned int'
|   | `-ImplicitCastExpr 0x13e8091d8 <col:14, col:24> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x13e809198 <col:14, col:24> 'unsigned long'
|   |     |-ImplicitCastExpr 0x13e809180 <col:14> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13e8090f0 <col:14> 'unsigned long (const char *)' Function 0x13e808f80 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x13e8091c0 <col:21> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13e809110 <col:21> 'const char *' lvalue Var 0x13d80dff0 'str' 'const char *'
|   |-IfStmt 0x13e8093f0 <line:15:2, line:17:2>
|   | |-BinaryOperator 0x13e8092c0 <line:15:5, col:16> 'int' contains-errors '>='
|   | | |-RecoveryExpr 0x13e809280 <col:5> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x13e8092a0 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13e8093d8 <col:24, line:17:2>
|   |   `-BinaryOperator 0x13e8093b8 <line:16:3, col:23> 'unsigned int' contains-errors '='
|   |     |-DeclRefExpr 0x13e8092e0 <col:3> 'unsigned int' lvalue Var 0x13d80e088 'retval' 'unsigned int'
|   |     `-BinaryOperator 0x13e809398 <col:15, col:23> '<dependent type>' contains-errors '-'
|   |       |-RecoveryExpr 0x13e809378 <col:15> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x13e809318 <col:23> 'int' 1
|   |-IfStmt 0x13d122898 <line:19:2, line:22:2>
|   | |-ImplicitCastExpr 0x13e809480 <line:19:5> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13e809460 <col:5> 'char *' lvalue ParmVar 0x13d80de28 'buff' 'char *'
|   | `-CompoundStmt 0x13d122878 <col:10, line:22:2>
|   |   |-CallExpr 0x13d1226e8 <line:20:3, col:27> 'void *'
|   |   | |-ImplicitCastExpr 0x13d1226d0 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13e809768 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13e809518 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x13d122738 <col:10> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x13d122720 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13e809788 <col:10> 'char *' lvalue ParmVar 0x13d80de28 'buff' 'char *'
|   |   | |-ImplicitCastExpr 0x13d122768 <col:15> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x13d122750 <col:15> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13e8097a8 <col:15> 'const char *' lvalue Var 0x13d80dff0 'str' 'const char *'
|   |   | `-ImplicitCastExpr 0x13d122780 <col:19, col:26> 'unsigned long' <IntegralCast>
|   |   |   `-BinaryOperator 0x13d122650 <col:19, col:26> 'unsigned int' '+'
|   |   |     |-ImplicitCastExpr 0x13d122620 <col:19> 'unsigned int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x13e8097c8 <col:19> 'unsigned int' lvalue Var 0x13d80e088 'retval' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x13d122638 <col:26> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x13d122600 <col:26> 'int' 1
|   |   `-BinaryOperator 0x13d122858 <line:21:3, col:18> 'char' '='
|   |     |-ArraySubscriptExpr 0x13d122808 <col:3, col:14> 'char' lvalue
|   |     | |-ImplicitCastExpr 0x13d1227d8 <col:3> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13d122798 <col:3> 'char *' lvalue ParmVar 0x13d80de28 'buff' 'char *'
|   |     | `-ImplicitCastExpr 0x13d1227f0 <col:8> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x13d1227b8 <col:8> 'unsigned int' lvalue Var 0x13d80e088 'retval' 'unsigned int'
|   |     `-ImplicitCastExpr 0x13d122840 <col:18> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x13d122828 <col:18> 'int' 0
|   |-CallExpr 0x13d122a28 <line:23:2, col:25> 'int'
|   | |-ImplicitCastExpr 0x13d122a10 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13d122998 <col:2> 'int ()' Function 0x13d1228e0 'openmpt_free_string' 'int ()'
|   | `-ImplicitCastExpr 0x13d122a50 <col:22> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13d1229b8 <col:22> 'const char *' lvalue Var 0x13d80dff0 'str' 'const char *'
|   `-ReturnStmt 0x13d122ab8 <line:24:2, col:9>
|     `-ImplicitCastExpr 0x13d122aa0 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x13d122a88 <col:9> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x13d122a68 <col:9> 'unsigned int' lvalue Var 0x13d80e088 'retval' 'unsigned int'
|-FunctionDecl 0x13e808f80 <line:14:14> col:14 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13e809080 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13e809028 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x13e809518 <line:20:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13e809618 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13e809680 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13e8096e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13e8095c0 <<invalid sloc>> Implicit 882
