TranslationUnitDecl 0x123840e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x123841cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1238413d0 '__int128'
|-TypedefDecl 0x123841d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1238413f0 'unsigned __int128'
|-TypedefDecl 0x123912230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x123912000 'struct __NSConstantString_tag'
|   `-Record 0x123841d80 '__NSConstantString_tag'
|-TypedefDecl 0x123912298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123841590 '__SVInt8_t'
|-TypedefDecl 0x123912300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1238415b0 '__SVInt16_t'
|-TypedefDecl 0x123912368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1238415d0 '__SVInt32_t'
|-TypedefDecl 0x1239123d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1238415f0 '__SVInt64_t'
|-TypedefDecl 0x123912438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123841610 '__SVUint8_t'
|-TypedefDecl 0x1239124a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123841630 '__SVUint16_t'
|-TypedefDecl 0x123912508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123841650 '__SVUint32_t'
|-TypedefDecl 0x123912570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123841670 '__SVUint64_t'
|-TypedefDecl 0x1239125d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123841690 '__SVFloat16_t'
|-TypedefDecl 0x123912640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1238416b0 '__SVFloat32_t'
|-TypedefDecl 0x1239126a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1238416d0 '__SVFloat64_t'
|-TypedefDecl 0x123912710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1238416f0 '__SVBfloat16_t'
|-TypedefDecl 0x123912778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123841710 '__clang_svint8x2_t'
|-TypedefDecl 0x1239127e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123841730 '__clang_svint16x2_t'
|-TypedefDecl 0x123912848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123841750 '__clang_svint32x2_t'
|-TypedefDecl 0x1239128b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123841770 '__clang_svint64x2_t'
|-TypedefDecl 0x123912918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123841790 '__clang_svuint8x2_t'
|-TypedefDecl 0x123912980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1238417b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1239129e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1238417d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x123912a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1238417f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x123912ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123841810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x123912b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123841830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x123912b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123841850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x123912bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123841870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x123912c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123841890 '__clang_svint8x3_t'
|-TypedefDecl 0x123912cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1238418b0 '__clang_svint16x3_t'
|-TypedefDecl 0x123912d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1238418d0 '__clang_svint32x3_t'
|-TypedefDecl 0x123912d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1238418f0 '__clang_svint64x3_t'
|-TypedefDecl 0x123912df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123841910 '__clang_svuint8x3_t'
|-TypedefDecl 0x123912e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123841930 '__clang_svuint16x3_t'
|-TypedefDecl 0x123912ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123841950 '__clang_svuint32x3_t'
|-TypedefDecl 0x123912f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123841970 '__clang_svuint64x3_t'
|-TypedefDecl 0x123912f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123841990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123913800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1238419b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123913868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1238419d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1239138d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1238419f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123913938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123841a10 '__clang_svint8x4_t'
|-TypedefDecl 0x1239139a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123841a30 '__clang_svint16x4_t'
|-TypedefDecl 0x123913a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123841a50 '__clang_svint32x4_t'
|-TypedefDecl 0x123913a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123841a70 '__clang_svint64x4_t'
|-TypedefDecl 0x123913ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123841a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x123913b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x123841ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x123913ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x123841ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123913c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x123841af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123913c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123841b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x123913ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123841b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123913d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123841b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x123913db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123841b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123913e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123841b90 '__SVBool_t'
|-TypedefDecl 0x123913e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x123841bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x123913ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x123841bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x123913f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x123841bf0 '__SVCount_t'
|-TypedefDecl 0x123913ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x123913fb0 'char *'
|   `-BuiltinType 0x123840eb0 'char'
|-TypedefDecl 0x123914068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x123913fb0 'char *'
|   `-BuiltinType 0x123840eb0 'char'
|-FunctionDecl 0x123030008 <dataset_diviso_filec/func2184_vuln.c:1:1, line:79:1> line:1:1 invalid auth_read_binary 'int (struct sc_card *, unsigned int, unsigned char *, int, unsigned long)'
| |-ParmVarDecl 0x123914648 <col:18, col:34> col:34 used card 'struct sc_card *'
| |-ParmVarDecl 0x1239146c8 <col:40, col:53> col:53 used offset 'unsigned int'
| |-ParmVarDecl 0x123914778 <line:2:3, col:18> col:18 used buf 'unsigned char *'
| |-ParmVarDecl 0x12302fe18 <col:23, col:30> col:30 invalid count 'int'
| |-ParmVarDecl 0x12302fe98 <col:37, col:51> col:51 used flags 'unsigned long'
| `-CompoundStmt 0x12391f3a0 <line:3:1, line:79:1>
|   |-DeclStmt 0x123030158 <line:4:2, col:8>
|   | `-VarDecl 0x1230300f0 <col:2, col:6> col:6 used rv 'int'
|   |-DeclStmt 0x123030300 <line:5:2, col:31>
|   | |-RecordDecl 0x123030170 <col:2, col:9> col:9 struct sc_pkcs15_bignum
|   | `-VarDecl 0x123030280 <col:2, col:26> col:26 referenced invalid bn 'int'
|   |-DeclStmt 0x1230303d0 <line:6:2, col:27>
|   | `-VarDecl 0x123030330 <col:2, col:23> col:17 used out 'unsigned char *' cinit
|   |   `-RecoveryExpr 0x1230303b0 <col:23> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x123030628 <line:7:2, col:15> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1230305c0 <col:2, col:8> '<dependent type>' contains-errors lvalue .data
|   | | `-ArraySubscriptExpr 0x1230305a0 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x123030588 <col:2> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x123030408 <col:2> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x1230303e8 <col:2> 'int' lvalue Var 0x123030280 'bn' 'int'
|   | |   `-IntegerLiteral 0x123030430 <col:5> 'int' 0
|   | `-RecoveryExpr 0x123030608 <col:15> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x123030888 <line:8:2, col:15> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x123030820 <col:2, col:8> '<dependent type>' contains-errors lvalue .data
|   | | `-ArraySubscriptExpr 0x123030800 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x1230307e8 <col:2> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x123030668 <col:2> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x123030648 <col:2> 'int' lvalue Var 0x123030280 'bn' 'int'
|   | |   `-IntegerLiteral 0x123030690 <col:5> 'int' 1
|   | `-RecoveryExpr 0x123030868 <col:15> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x123030a80 <line:10:2, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123030a00 <col:2> 'int ()' Function 0x123030948 'LOG_FUNC_CALLED' 'int ()'
|   | `-RecoveryExpr 0x123030a58 <col:18, col:24> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x123030a20 <col:18> 'struct sc_card *' lvalue ParmVar 0x123914648 'card' 'struct sc_card *'
|   |-CallExpr 0x123030cd0 <line:11:2, line:13:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123030b88 <line:11:2> 'int ()' Function 0x123030ad0 'sc_log' 'int ()'
|   | |-RecoveryExpr 0x123030be0 <col:9, col:15> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x123030ba8 <col:9> 'struct sc_card *' lvalue ParmVar 0x123914648 'card' 'struct sc_card *'
|   | |-StringLiteral 0x123030c50 <line:12:9> 'char[4]' lvalue "STR"
|   | |-DeclRefExpr 0x123030c70 <line:13:9> 'unsigned int' lvalue ParmVar 0x1239146c8 'offset' 'unsigned int'
|   | |-RecoveryExpr 0x123030c90 <col:17> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x123030cb0 <col:24> 'unsigned long' lvalue ParmVar 0x12302fe98 'flags' 'unsigned long'
|   |-CallExpr 0x123919bb8 <line:14:2, line:15:57> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123030d18 <line:14:2> 'int ()' Function 0x123030ad0 'sc_log' 'int ()'
|   | |-RecoveryExpr 0x123030d70 <col:9, col:15> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x123030d38 <col:9> 'struct sc_card *' lvalue ParmVar 0x123914648 'card' 'struct sc_card *'
|   | |-StringLiteral 0x123030d98 <col:19> 'char[4]' lvalue "STR"
|   | |-CXXDependentScopeMemberExpr 0x123919b08 <line:15:4, col:21> '<dependent type>' contains-errors lvalue ->magic
|   | | `-RecoveryExpr 0x123919ae8 <col:4> '<dependent type>' contains-errors lvalue
|   | `-CXXDependentScopeMemberExpr 0x123919b70 <col:28, col:45> '<dependent type>' contains-errors lvalue ->ef_structure
|   |   `-RecoveryExpr 0x123919b50 <col:28> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x123919ec8 <line:17:2, line:18:60>
|   | |-BinaryOperator 0x123919c80 <line:17:6, col:16> 'unsigned int' '&'
|   | | |-ImplicitCastExpr 0x123919c50 <col:6> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x123919bf8 <col:6> 'unsigned int' lvalue ParmVar 0x1239146c8 'offset' 'unsigned int'
|   | | `-ImplicitCastExpr 0x123919c68 <col:15, col:16> 'unsigned int' <IntegralCast>
|   | |   `-UnaryOperator 0x123919c38 <col:15, col:16> 'int' prefix '~' cannot overflow
|   | |     `-IntegerLiteral 0x123919c18 <col:16> 'int' 32767
|   | `-CallExpr 0x123919e90 <line:18:3, col:60> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x123919d80 <col:3> 'int ()' Function 0x123919cc8 'LOG_TEST_RET' 'int ()'
|   |   |-RecoveryExpr 0x123919dd8 <col:16, col:22> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x123919da0 <col:16> 'struct sc_card *' lvalue ParmVar 0x123914648 'card' 'struct sc_card *'
|   |   |-RecoveryExpr 0x123919e70 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x123919e18 <col:55> 'char[4]' lvalue "STR"
|   |-IfStmt 0x12391ecb8 <line:20:2, line:71:2> has_else
|   | |-BinaryOperator 0x12391a188 <line:20:6, line:21:37> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x12391a0c0 <line:20:6, col:30> 'int' contains-errors '=='
|   | | | |-CXXDependentScopeMemberExpr 0x12391a058 <col:6, col:23> '<dependent type>' contains-errors lvalue ->magic
|   | | | | `-RecoveryExpr 0x12391a038 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x12391a0a0 <col:30> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x12391a168 <line:21:4, col:37> 'int' contains-errors '=='
|   | |   |-CXXDependentScopeMemberExpr 0x12391a100 <col:4, col:21> '<dependent type>' contains-errors lvalue ->ef_structure
|   | |   | `-RecoveryExpr 0x12391a0e0 <col:4> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x12391a148 <col:37> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x12391eb50 <col:75, line:68:2>
|   | | |-DeclStmt 0x12391a228 <line:22:3, col:9>
|   | | | `-VarDecl 0x12391a1c0 <col:3, col:7> col:7 used jj 'int'
|   | | |-DeclStmt 0x12391a350 <line:23:3, col:26>
|   | | | `-VarDecl 0x12391a2e8 <col:3, col:25> col:17 used resp 'unsigned char[256]'
|   | | |-DeclStmt 0x12391a4e8 <line:25:3, col:34>
|   | | | |-RecordDecl 0x12391a368 <col:3, col:10> col:10 struct sc_pkcs15_pubkey_rsa
|   | | | `-VarDecl 0x12391a468 <col:3, col:31> col:31 referenced invalid key 'struct sc_pkcs15_pubkey_rsa'
|   | | |-CallExpr 0x12391a7a0 <line:30:3, col:36> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12391a6e0 <col:3> 'int ()' Function 0x123919cc8 'LOG_TEST_RET' 'int ()'
|   | | | |-RecoveryExpr 0x12391a738 <col:16, col:22> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x12391a700 <col:16> 'struct sc_card *' lvalue ParmVar 0x123914648 'card' 'struct sc_card *'
|   | | | |-DeclRefExpr 0x12391a760 <col:27> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | | | `-StringLiteral 0x12391a780 <col:31> 'char[4]' lvalue "STR"
|   | | |-ForStmt 0x12391ca60 <line:32:3, line:33:4>
|   | | | |-BinaryOperator 0x12391a818 <line:32:8, col:11> 'int' '='
|   | | | | |-DeclRefExpr 0x12391a7d8 <col:8> 'int' lvalue Var 0x12391a1c0 'jj' 'int'
|   | | | | `-IntegerLiteral 0x12391a7f8 <col:11> 'int' 0
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x12391ca00 <col:14, col:35> 'int' '&&'
|   | | | | |-BinaryOperator 0x12391a8a8 <col:14, col:17> 'int' '<'
|   | | | | | |-ImplicitCastExpr 0x12391a878 <col:14> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x12391a838 <col:14> 'int' lvalue Var 0x12391a1c0 'jj' 'int'
|   | | | | | `-ImplicitCastExpr 0x12391a890 <col:17> 'int' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x12391a858 <col:17> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | | | | `-BinaryOperator 0x12391a9e0 <col:23, col:35> 'int' '=='
|   | | | |   |-ImplicitCastExpr 0x12391a9c8 <col:23, col:32> 'int' <IntegralCast>
|   | | | |   | `-ImplicitCastExpr 0x12391a9b0 <col:23, col:32> 'unsigned char' <LValueToRValue>
|   | | | |   |   `-UnaryOperator 0x12391a978 <col:23, col:32> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | | |   |     `-ParenExpr 0x12391a958 <col:24, col:32> 'unsigned char *'
|   | | | |   |       `-BinaryOperator 0x12391a938 <col:25, col:30> 'unsigned char *' '+'
|   | | | |   |         |-ImplicitCastExpr 0x12391a908 <col:25> 'unsigned char *' <ArrayToPointerDecay>
|   | | | |   |         | `-DeclRefExpr 0x12391a8c8 <col:25> 'unsigned char[256]' lvalue Var 0x12391a2e8 'resp' 'unsigned char[256]'
|   | | | |   |         `-ImplicitCastExpr 0x12391a920 <col:30> 'int' <LValueToRValue>
|   | | | |   |           `-DeclRefExpr 0x12391a8e8 <col:30> 'int' lvalue Var 0x12391a1c0 'jj' 'int'
|   | | | |   `-IntegerLiteral 0x12391a990 <col:35> 'int' 0
|   | | | |-UnaryOperator 0x12391ca40 <col:38, col:40> 'int' postfix '++'
|   | | | | `-DeclRefExpr 0x12391ca20 <col:38> 'int' lvalue Var 0x12391a1c0 'jj' 'int'
|   | | | `-NullStmt 0x12391ca58 <line:33:4>
|   | | |-BinaryOperator 0x12391cf48 <line:35:3, col:33> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x12391cb38 <col:3, col:9> '<dependent type>' contains-errors lvalue .data
|   | | | | `-ArraySubscriptExpr 0x12391cb18 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x12391cb00 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-RecoveryExpr 0x12391cab8 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   |   `-DeclRefExpr 0x12391ca98 <col:3> 'int' lvalue Var 0x123030280 'bn' 'int'
|   | | | |   `-IntegerLiteral 0x12391cae0 <col:6> 'int' 0
|   | | | `-CallExpr 0x12391cee8 <col:16, col:33> 'void *'
|   | | |   |-ImplicitCastExpr 0x12391ced0 <col:16> 'void *(*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x12391cdd0 <col:16> 'void *(unsigned long, unsigned long)' Function 0x12391cbc0 'calloc' 'void *(unsigned long, unsigned long)'
|   | | |   |-ImplicitCastExpr 0x12391cf18 <col:23> 'unsigned long' <IntegralCast>
|   | | |   | `-IntegerLiteral 0x12391cdf0 <col:23> 'int' 1
|   | | |   `-ImplicitCastExpr 0x12391cf30 <col:26, col:31> 'unsigned long' <IntegralCast>
|   | | |     `-BinaryOperator 0x12391ce80 <col:26, col:31> 'int' '-'
|   | | |       |-ImplicitCastExpr 0x12391ce50 <col:26> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x12391ce10 <col:26> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | | |       `-ImplicitCastExpr 0x12391ce68 <col:31> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x12391ce30 <col:31> 'int' lvalue Var 0x12391a1c0 'jj' 'int'
|   | | |-IfStmt 0x12391d0f8 <line:36:3, line:39:3>
|   | | | |-UnaryOperator 0x12391d040 <line:36:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x12391d028 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   `-CXXDependentScopeMemberExpr 0x12391cfe0 <col:8, col:14> '<dependent type>' contains-errors lvalue .data
|   | | | |     `-ArraySubscriptExpr 0x12391cfc0 <col:8, col:12> '<dependent type>' contains-errors lvalue
|   | | | |       |-ImplicitCastExpr 0x12391cfa8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |       | `-RecoveryExpr 0x12391cf68 <col:8> '<dependent type>' contains-errors lvalue
|   | | | |       `-IntegerLiteral 0x12391cf88 <col:11> 'int' 0
|   | | | `-CompoundStmt 0x12391d0e0 <col:20, line:39:3>
|   | | |   `-GotoStmt 0x12391d0c8 <line:38:4, col:9> 'err' 0x12391d078
|   | | |-BinaryOperator 0x12391d290 <line:40:3, col:20> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x12391d1b8 <col:3, col:9> '<dependent type>' contains-errors lvalue .len
|   | | | | `-ArraySubscriptExpr 0x12391d198 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x12391d180 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-RecoveryExpr 0x12391d138 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   |   `-DeclRefExpr 0x12391d118 <col:3> 'int' lvalue Var 0x123030280 'bn' 'int'
|   | | | |   `-IntegerLiteral 0x12391d160 <col:6> 'int' 0
|   | | | `-BinaryOperator 0x12391d270 <col:15, col:20> 'int' '-'
|   | | |   |-ImplicitCastExpr 0x12391d240 <col:15> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x12391d200 <col:15> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | | |   `-ImplicitCastExpr 0x12391d258 <col:20> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x12391d220 <col:20> 'int' lvalue Var 0x12391a1c0 'jj' 'int'
|   | | |-CallExpr 0x12391d790 <line:41:3, col:40> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12391d578 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x12391d328 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | | |-CXXDependentScopeMemberExpr 0x12391d610 <col:10, col:16> '<dependent type>' contains-errors lvalue .data
|   | | | | `-ArraySubscriptExpr 0x12391d5f0 <col:10, col:14> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x12391d5d8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-RecoveryExpr 0x12391d598 <col:10> '<dependent type>' contains-errors lvalue
|   | | | |   `-IntegerLiteral 0x12391d5b8 <col:13> 'int' 0
|   | | | |-BinaryOperator 0x12391d6c8 <col:22, col:29> 'unsigned char *' '+'
|   | | | | |-ImplicitCastExpr 0x12391d698 <col:22> 'unsigned char *' <ArrayToPointerDecay>
|   | | | | | `-DeclRefExpr 0x12391d658 <col:22> 'unsigned char[256]' lvalue Var 0x12391a2e8 'resp' 'unsigned char[256]'
|   | | | | `-ImplicitCastExpr 0x12391d6b0 <col:29> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x12391d678 <col:29> 'int' lvalue Var 0x12391a1c0 'jj' 'int'
|   | | | `-BinaryOperator 0x12391d758 <col:33, col:38> 'int' '-'
|   | | |   |-ImplicitCastExpr 0x12391d728 <col:33> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x12391d6e8 <col:33> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | | |   `-ImplicitCastExpr 0x12391d740 <col:38> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x12391d708 <col:38> 'int' lvalue Var 0x12391a1c0 'jj' 'int'
|   | | |-CallExpr 0x12391da20 <line:45:3, col:41> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12391d948 <col:3> 'int ()' Function 0x12391d890 'LOG_TEST_GOTO_ERR' 'int ()'
|   | | | |-RecoveryExpr 0x12391d9a0 <col:21, col:27> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x12391d968 <col:21> 'struct sc_card *' lvalue ParmVar 0x123914648 'card' 'struct sc_card *'
|   | | | |-DeclRefExpr 0x12391d9c8 <col:32> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | | | `-StringLiteral 0x12391da00 <col:36> 'char[4]' lvalue "STR"
|   | | |-BinaryOperator 0x12391dc48 <line:47:3, col:28> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x12391daf8 <col:3, col:9> '<dependent type>' contains-errors lvalue .data
|   | | | | `-ArraySubscriptExpr 0x12391dad8 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x12391dac0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-RecoveryExpr 0x12391da78 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   |   `-DeclRefExpr 0x12391da58 <col:3> 'int' lvalue Var 0x123030280 'bn' 'int'
|   | | | |   `-IntegerLiteral 0x12391daa0 <col:6> 'int' 1
|   | | | `-CallExpr 0x12391dbd0 <col:16, col:28> 'void *'
|   | | |   |-ImplicitCastExpr 0x12391dbb8 <col:16> 'void *(*)(unsigned long, unsigned long)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x12391db40 <col:16> 'void *(unsigned long, unsigned long)' Function 0x12391cbc0 'calloc' 'void *(unsigned long, unsigned long)'
|   | | |   |-ImplicitCastExpr 0x12391dc00 <col:23> 'unsigned long' <IntegralCast>
|   | | |   | `-IntegerLiteral 0x12391db60 <col:23> 'int' 1
|   | | |   `-ImplicitCastExpr 0x12391dc30 <col:26> 'unsigned long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x12391dc18 <col:26> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x12391db80 <col:26> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | | |-IfStmt 0x12391dda8 <line:48:3, line:51:3>
|   | | | |-UnaryOperator 0x12391dd40 <line:48:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x12391dd28 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   `-CXXDependentScopeMemberExpr 0x12391dce0 <col:8, col:14> '<dependent type>' contains-errors lvalue .data
|   | | | |     `-ArraySubscriptExpr 0x12391dcc0 <col:8, col:12> '<dependent type>' contains-errors lvalue
|   | | | |       |-ImplicitCastExpr 0x12391dca8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |       | `-RecoveryExpr 0x12391dc68 <col:8> '<dependent type>' contains-errors lvalue
|   | | | |       `-IntegerLiteral 0x12391dc88 <col:11> 'int' 1
|   | | | `-CompoundStmt 0x12391dd90 <col:20, line:51:3>
|   | | |   `-GotoStmt 0x12391dd78 <line:50:4, col:9> 'err' 0x12391d078
|   | | |-BinaryOperator 0x12391ded0 <line:52:3, col:15> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x12391de68 <col:3, col:9> '<dependent type>' contains-errors lvalue .len
|   | | | | `-ArraySubscriptExpr 0x12391de48 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x12391de30 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-RecoveryExpr 0x12391dde8 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   |   `-DeclRefExpr 0x12391ddc8 <col:3> 'int' lvalue Var 0x123030280 'bn' 'int'
|   | | | |   `-IntegerLiteral 0x12391de10 <col:6> 'int' 1
|   | | | `-DeclRefExpr 0x12391deb0 <col:15> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | | |-CallExpr 0x12391e058 <line:53:3, col:30> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12391def0 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x12391d328 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | | |-CXXDependentScopeMemberExpr 0x12391df88 <col:10, col:16> '<dependent type>' contains-errors lvalue .data
|   | | | | `-ArraySubscriptExpr 0x12391df68 <col:10, col:14> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x12391df50 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-RecoveryExpr 0x12391df10 <col:10> '<dependent type>' contains-errors lvalue
|   | | | |   `-IntegerLiteral 0x12391df30 <col:13> 'int' 1
|   | | | |-DeclRefExpr 0x12391dfd0 <col:22> 'unsigned char[256]' lvalue Var 0x12391a2e8 'resp' 'unsigned char[256]'
|   | | | `-DeclRefExpr 0x12391dff0 <col:28> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | | |-BinaryOperator 0x12391e198 <line:55:3, col:22> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x12391e0d8 <col:3, col:7> '<dependent type>' contains-errors lvalue .exponent
|   | | | | `-RecoveryExpr 0x12391e0b0 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x12391e090 <col:3> 'struct sc_pkcs15_pubkey_rsa' lvalue Var 0x12391a468 'key' 'struct sc_pkcs15_pubkey_rsa'
|   | | | `-ArraySubscriptExpr 0x12391e178 <col:18, col:22> '<dependent type>' contains-errors lvalue
|   | | |   |-ImplicitCastExpr 0x12391e160 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | `-RecoveryExpr 0x12391e120 <col:18> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x12391e140 <col:21> 'int' 0
|   | | |-BinaryOperator 0x12391e2c0 <line:56:3, col:21> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x12391e200 <col:3, col:7> '<dependent type>' contains-errors lvalue .modulus
|   | | | | `-RecoveryExpr 0x12391e1d8 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x12391e1b8 <col:3> 'struct sc_pkcs15_pubkey_rsa' lvalue Var 0x12391a468 'key' 'struct sc_pkcs15_pubkey_rsa'
|   | | | `-ArraySubscriptExpr 0x12391e2a0 <col:17, col:21> '<dependent type>' contains-errors lvalue
|   | | |   |-ImplicitCastExpr 0x12391e288 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | `-RecoveryExpr 0x12391e248 <col:17> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x12391e268 <col:20> 'int' 1
|   | | `-IfStmt 0x12391eb20 <line:58:3, line:67:3> has_else
|   | |   |-RecoveryExpr 0x12391e4e8 <line:58:7, col:66> '_Bool' contains-errors
|   | |   |-CompoundStmt 0x12391e620 <col:69, line:61:3>
|   | |   | `-CallExpr 0x12391e5e8 <line:60:4, col:42> '<dependent type>' contains-errors
|   | |   |   |-DeclRefExpr 0x12391e528 <col:4> 'int ()' Function 0x12391d890 'LOG_TEST_GOTO_ERR' 'int ()'
|   | |   |   |-RecoveryExpr 0x12391e580 <col:22, col:28> '<dependent type>' contains-errors lvalue
|   | |   |   | `-DeclRefExpr 0x12391e548 <col:22> 'struct sc_card *' lvalue ParmVar 0x123914648 'card' 'struct sc_card *'
|   | |   |   |-DeclRefExpr 0x12391e5a8 <col:33> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | |   |   `-StringLiteral 0x12391e5c8 <col:37> 'char[4]' lvalue "STR"
|   | |   `-CompoundStmt 0x12391eb00 <line:62:8, line:67:3>
|   | |     |-CallExpr 0x12391e848 <line:64:4, col:32> 'void *' contains-errors
|   | |     | |-ImplicitCastExpr 0x12391e830 <col:4> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x12391e6d8 <col:4> 'void *(void *, const void *, unsigned long)' Function 0x12391d328 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     | |-ImplicitCastExpr 0x12391e898 <col:11> 'void *' <BitCast>
|   | |     | | `-ImplicitCastExpr 0x12391e880 <col:11> 'unsigned char *' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x12391e6f8 <col:11> 'unsigned char *' lvalue ParmVar 0x123914778 'buf' 'unsigned char *'
|   | |     | |-ImplicitCastExpr 0x12391e8b0 <col:16, col:22> 'const void *' contains-errors <BitCast>
|   | |     | | `-BinaryOperator 0x12391e788 <col:16, col:22> 'unsigned char *' contains-errors '+'
|   | |     | |   |-ImplicitCastExpr 0x12391e758 <col:16> 'unsigned char *' contains-errors <LValueToRValue>
|   | |     | |   | `-DeclRefExpr 0x12391e718 <col:16> 'unsigned char *' contains-errors lvalue Var 0x123030330 'out' 'unsigned char *'
|   | |     | |   `-ImplicitCastExpr 0x12391e770 <col:22> 'unsigned int' <LValueToRValue>
|   | |     | |     `-DeclRefExpr 0x12391e738 <col:22> 'unsigned int' lvalue ParmVar 0x1239146c8 'offset' 'unsigned int'
|   | |     | `-ImplicitCastExpr 0x12391e8e0 <col:30> 'unsigned long' <IntegralCast>
|   | |     |   `-ImplicitCastExpr 0x12391e8c8 <col:30> 'int' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x12391e7a8 <col:30> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | |     `-CallExpr 0x12391eac0 <line:66:4, col:40> '<dependent type>' contains-errors
|   | |       |-DeclRefExpr 0x12391e9d8 <col:4> 'int ()' Function 0x12391e920 'sc_log_hex' 'int ()'
|   | |       |-RecoveryExpr 0x12391ea38 <col:15, col:21> '<dependent type>' contains-errors lvalue
|   | |       | `-DeclRefExpr 0x12391ea00 <col:15> 'struct sc_card *' lvalue ParmVar 0x123914648 'card' 'struct sc_card *'
|   | |       |-StringLiteral 0x12391ea60 <col:26> 'char[4]' lvalue "STR"
|   | |       |-DeclRefExpr 0x12391ea80 <col:33> 'unsigned char *' lvalue ParmVar 0x123914778 'buf' 'unsigned char *'
|   | |       `-DeclRefExpr 0x12391eaa0 <col:38> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|   | `-CompoundStmt 0x12391eca8 <line:69:7, line:71:2>
|   |-LabelStmt 0x12391efb8 <line:73:1, line:74:17> 'err'
|   | `-CallExpr 0x12391ef90 <col:2, col:17> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12391ee98 <col:2> 'void (void *)' Function 0x12391ed28 'free' 'void (void *)'
|   |   `-CXXDependentScopeMemberExpr 0x12391ef30 <col:7, col:13> '<dependent type>' contains-errors lvalue .data
|   |     `-ArraySubscriptExpr 0x12391ef10 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |       |-ImplicitCastExpr 0x12391eef8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |       | `-RecoveryExpr 0x12391eeb8 <col:7> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x12391eed8 <col:10> 'int' 0
|   |-CallExpr 0x12391f0d0 <line:75:2, col:17> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12391efd8 <col:2> 'void (void *)' Function 0x12391ed28 'free' 'void (void *)'
|   | `-CXXDependentScopeMemberExpr 0x12391f070 <col:7, col:13> '<dependent type>' contains-errors lvalue .data
|   |   `-ArraySubscriptExpr 0x12391f050 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x12391f038 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-RecoveryExpr 0x12391eff8 <col:7> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x12391f018 <col:10> 'int' 1
|   |-CallExpr 0x12391f198 <line:76:2, col:10> 'void' contains-errors
|   | |-ImplicitCastExpr 0x12391f180 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12391f0f8 <col:2> 'void (void *)' Function 0x12391ed28 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x12391f1d8 <col:7> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x12391f1c0 <col:7> 'unsigned char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x12391f118 <col:7> 'unsigned char *' contains-errors lvalue Var 0x123030330 'out' 'unsigned char *'
|   `-CallExpr 0x12391f370 <line:78:2, col:31> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x12391f2d0 <col:2> 'int ()' Function 0x12391f218 'LOG_FUNC_RETURN' 'int ()'
|     |-RecoveryExpr 0x12391f328 <col:18, col:24> '<dependent type>' contains-errors lvalue
|     | `-DeclRefExpr 0x12391f2f0 <col:18> 'struct sc_card *' lvalue ParmVar 0x123914648 'card' 'struct sc_card *'
|     `-DeclRefExpr 0x12391f350 <col:29> 'int' lvalue Var 0x1230300f0 'rv' 'int'
|-FunctionDecl 0x12391cbc0 <line:35:16> col:16 implicit used calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x12391ccc0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x12391cd28 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x12391cc68 <<invalid sloc>> Implicit 868
| `-AllocSizeAttr 0x12391cda0 <col:16> Implicit 1 2
|-FunctionDecl 0x12391d328 <line:41:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x12391d428 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12391d490 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12391d4f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12391d3d0 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x12391ed28 <line:74:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12391ee28 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12391edd0 <<invalid sloc>> Implicit 873
