TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x12700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12700bc00 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x12700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x12700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x12700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x12700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x12700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x12700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x12700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x12700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x12700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x12700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x12700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x12700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x12700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-FunctionDecl 0x12700de88 <dataset_diviso_filec/func16543_vuln.c:1:1, line:59:1> line:1:1 invalid ppm_load_read_header 'int (int *, int *)'
| |-ParmVarDecl 0x12700dd28 <col:22, col:34> col:34 invalid fp 'int *'
| |-ParmVarDecl 0x12700dda8 <line:2:22, col:34> col:34 referenced invalid img 'int *'
| `-CompoundStmt 0x127029938 <line:3:1, line:59:1>
|   |-DeclStmt 0x12700dfc0 <line:5:5, col:15>
|   | `-VarDecl 0x12700df58 <col:5, col:12> col:12 used ptr 'char *'
|   |-DeclStmt 0x12700e068 <line:7:5, col:36>
|   | `-VarDecl 0x12700e000 <col:5, col:12> col:12 invalid header 'char'
|   |-DeclStmt 0x12700e100 <line:8:5, col:18>
|   | `-VarDecl 0x12700e098 <col:5, col:12> col:12 used maxval 'int'
|   |-CallExpr 0x12700e340 <line:11:5, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12700e270 <col:5> 'int ()' Function 0x12700e1b8 'fgets' 'int ()'
|   | |-RecoveryExpr 0x12700e290 <col:12> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x12700e320 <col:19> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12700e2c8 <col:36> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1270278a0 <line:13:5, line:19:7>
|   | |-RecoveryExpr 0x127027628 <line:13:9, line:15:33> '_Bool' contains-errors
|   | `-CompoundStmt 0x127027880 <line:16:7, line:19:7>
|   |   |-CallExpr 0x1270277f8 <line:17:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1270277e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x127027728 <col:9> 'int ()' Function 0x127027670 'g_warning' 'int ()'
|   |   | `-ImplicitCastExpr 0x127027820 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x127027790 <col:20> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x127027870 <line:18:9, col:16>
|   |     `-RecoveryExpr 0x127027850 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1270279c8 <line:21:5, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127027908 <col:5, col:10> '<dependent type>' contains-errors lvalue ->type
|   | | `-RecoveryExpr 0x1270278e0 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1270278c0 <col:5> 'int *' lvalue ParmVar 0x12700dda8 'img' 'int *'
|   | `-ArraySubscriptExpr 0x1270279a8 <col:17, col:25> '<dependent type>' contains-errors lvalue
|   |   |-ImplicitCastExpr 0x127027990 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-RecoveryExpr 0x127027950 <col:17> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x127027970 <col:24> 'int' 1
|   |-CallExpr 0x127027ab8 <line:24:5, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1270279e8 <col:5> 'int ()' Function 0x12700e1b8 'fgets' 'int ()'
|   | |-RecoveryExpr 0x127027a08 <col:12> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x127027a98 <col:19> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x127027a40 <col:36> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x127027cc0 <line:25:5, line:28:7>
|   | |-BinaryOperator 0x127027b80 <line:25:11, col:24> 'int' contains-errors '=='
|   | | |-ArraySubscriptExpr 0x127027b48 <col:11, col:19> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x127027b30 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | `-RecoveryExpr 0x127027af0 <col:11> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x127027b10 <col:18> 'int' 0
|   | | `-CharacterLiteral 0x127027b68 <col:24> 'int' 35
|   | `-CompoundStmt 0x127027ca8 <line:26:7, line:28:7>
|   |   `-CallExpr 0x127027c70 <line:27:9, col:42> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x127027ba0 <col:9> 'int ()' Function 0x12700e1b8 'fgets' 'int ()'
|   |     |-RecoveryExpr 0x127027bc0 <col:16> '<dependent type>' contains-errors lvalue
|   |     |-RecoveryExpr 0x127027c50 <col:23> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x127027bf8 <col:40> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x127028d68 <line:31:5, col:40> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127027d28 <col:5, col:10> '<dependent type>' contains-errors lvalue ->width
|   | | `-RecoveryExpr 0x127027d00 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x127027ce0 <col:5> 'int *' lvalue ParmVar 0x12700dda8 'img' 'int *'
|   | `-CallExpr 0x127028d30 <col:19, col:40> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x127028c80 <col:19> 'long (const char *, char **, int)' Function 0x127028210 'strtol' 'long (const char *, char **, int)'
|   |   |-RecoveryExpr 0x127028ca0 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x127028ce0 <col:34, col:35> 'char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x127028cc0 <col:35> 'char *' lvalue Var 0x12700df58 'ptr' 'char *'
|   |   `-IntegerLiteral 0x127028cf8 <col:39> 'int' 0
|   |-BinaryOperator 0x127028f90 <line:32:5, col:28> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127028dd0 <col:5, col:10> '<dependent type>' contains-errors lvalue ->height
|   | | `-RecoveryExpr 0x127028da8 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x127028d88 <col:5> 'int *' lvalue ParmVar 0x12700dda8 'img' 'int *'
|   | `-CallExpr 0x127028f50 <col:19, col:28> 'int'
|   |   |-ImplicitCastExpr 0x127028f38 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x127028ef8 <col:19> 'int ()' Function 0x127028e40 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x127028f78 <col:25> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x127028f18 <col:25> 'char *' lvalue Var 0x12700df58 'ptr' 'char *'
|   |-BinaryOperator 0x1270291c8 <line:33:5, col:50> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127028ff8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->numsamples
|   | | `-RecoveryExpr 0x127028fd0 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x127028fb0 <col:5> 'int *' lvalue ParmVar 0x12700dda8 'img' 'int *'
|   | `-BinaryOperator 0x1270291a8 <col:23, col:50> '<dependent type>' contains-errors '*'
|   |   |-BinaryOperator 0x127029110 <col:23, col:41> '<dependent type>' contains-errors '*'
|   |   | |-CXXDependentScopeMemberExpr 0x127029060 <col:23, col:28> '<dependent type>' contains-errors lvalue ->width
|   |   | | `-RecoveryExpr 0x127029040 <col:23> '<dependent type>' contains-errors lvalue
|   |   | `-CXXDependentScopeMemberExpr 0x1270290c8 <col:36, col:41> '<dependent type>' contains-errors lvalue ->height
|   |   |   `-RecoveryExpr 0x1270290a8 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x127029188 <col:50> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1270292b8 <line:35:5, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1270291e8 <col:5> 'int ()' Function 0x12700e1b8 'fgets' 'int ()'
|   | |-RecoveryExpr 0x127029208 <col:12> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x127029298 <col:19> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x127029240 <col:36> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1270293f8 <line:36:5, col:35> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1270292f0 <col:5> 'int' lvalue Var 0x12700e098 'maxval' 'int'
|   | `-CallExpr 0x1270293c0 <col:14, col:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x127029310 <col:14> 'long (const char *, char **, int)' Function 0x127028210 'strtol' 'long (const char *, char **, int)'
|   |   |-RecoveryExpr 0x127029330 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x127029370 <col:29, col:30> 'char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x127029350 <col:30> 'char *' lvalue Var 0x12700df58 'ptr' 'char *'
|   |   `-IntegerLiteral 0x127029388 <col:34> 'int' 0
|   |-IfStmt 0x127029618 <line:38:5, line:42:7>
|   | |-BinaryOperator 0x127029548 <line:38:9, col:44> 'int' '&&'
|   | | |-ParenExpr 0x127029490 <col:9, col:23> 'int'
|   | | | `-BinaryOperator 0x127029470 <col:10, col:20> 'int' '!='
|   | | |   |-ImplicitCastExpr 0x127029458 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x127029418 <col:10> 'int' lvalue Var 0x12700e098 'maxval' 'int'
|   | | |   `-IntegerLiteral 0x127029438 <col:20> 'int' 255
|   | | `-ParenExpr 0x127029528 <col:28, col:44> 'int'
|   | |   `-BinaryOperator 0x127029508 <col:29, col:39> 'int' '!='
|   | |     |-ImplicitCastExpr 0x1270294f0 <col:29> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1270294b0 <col:29> 'int' lvalue Var 0x12700e098 'maxval' 'int'
|   | |     `-IntegerLiteral 0x1270294d0 <col:39> 'int' 65535
|   | `-CompoundStmt 0x127029600 <line:39:7, line:42:7>
|   |   `-CallExpr 0x1270295c0 <line:40:9, col:25> 'int'
|   |     |-ImplicitCastExpr 0x1270295a8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x127029568 <col:9> 'int ()' Function 0x127027670 'g_warning' 'int ()'
|   |     `-ImplicitCastExpr 0x1270295e8 <col:20> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x127029588 <col:20> 'char[4]' lvalue "STR"
|   `-SwitchStmt 0x127029670 <line:44:3, line:56:5>
|     |-ImplicitCastExpr 0x127029658 <line:44:11> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x127029638 <col:11> 'int' lvalue Var 0x12700e098 'maxval' 'int'
|     `-CompoundStmt 0x127029900 <line:45:5, line:56:5>
|       |-CaseStmt 0x1270296d0 <line:46:5, <invalid sloc>>
|       | |-ConstantExpr 0x1270296b8 <col:10> 'int'
|       | | `-IntegerLiteral 0x127029698 <col:10> 'int' 255
|       | `-NullStmt 0x127029788 <<invalid sloc>>
|       |-BreakStmt 0x127029790 <line:48:7>
|       |-CaseStmt 0x1270297d0 <line:50:5, <invalid sloc>>
|       | |-ConstantExpr 0x1270297b8 <col:10> 'int'
|       | | `-IntegerLiteral 0x127029798 <col:10> 'int' 65535
|       | `-NullStmt 0x127029888 <<invalid sloc>>
|       |-BreakStmt 0x127029890 <line:52:7>
|       `-DefaultStmt 0x1270298e0 <line:54:5, col:12>
|         `-NullStmt 0x1270298d8 <col:12>
`-FunctionDecl 0x127028210 <line:31:19> col:19 implicit used strtol 'long (const char *, char **, int)' extern
  |-ParmVarDecl 0x127028310 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x127028378 <<invalid sloc>> <invalid sloc> 'char **'
  |-ParmVarDecl 0x127028c00 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1270282b8 <<invalid sloc>> Implicit 877
