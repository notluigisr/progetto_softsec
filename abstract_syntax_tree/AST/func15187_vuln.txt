TranslationUnitDecl 0x141054408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1410552b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1410549d0 '__int128'
|-TypedefDecl 0x141055328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1410549f0 'unsigned __int128'
|-TypedefDecl 0x142832e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x142832c00 'struct __NSConstantString_tag'
|   `-Record 0x141055380 '__NSConstantString_tag'
|-TypedefDecl 0x142832e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x141054b90 '__SVInt8_t'
|-TypedefDecl 0x142832f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x141054bb0 '__SVInt16_t'
|-TypedefDecl 0x142832f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x141054bd0 '__SVInt32_t'
|-TypedefDecl 0x142832fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x141054bf0 '__SVInt64_t'
|-TypedefDecl 0x142833038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x141054c10 '__SVUint8_t'
|-TypedefDecl 0x1428330a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x141054c30 '__SVUint16_t'
|-TypedefDecl 0x142833108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x141054c50 '__SVUint32_t'
|-TypedefDecl 0x142833170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x141054c70 '__SVUint64_t'
|-TypedefDecl 0x1428331d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x141054c90 '__SVFloat16_t'
|-TypedefDecl 0x142833240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x141054cb0 '__SVFloat32_t'
|-TypedefDecl 0x1428332a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x141054cd0 '__SVFloat64_t'
|-TypedefDecl 0x142833310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x141054cf0 '__SVBfloat16_t'
|-TypedefDecl 0x142833378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x141054d10 '__clang_svint8x2_t'
|-TypedefDecl 0x1428333e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x141054d30 '__clang_svint16x2_t'
|-TypedefDecl 0x142833448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x141054d50 '__clang_svint32x2_t'
|-TypedefDecl 0x1428334b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x141054d70 '__clang_svint64x2_t'
|-TypedefDecl 0x142833518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x141054d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x142833580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x141054db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1428335e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x141054dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x142833650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x141054df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1428336b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x141054e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x142833720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x141054e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x142833788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x141054e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1428337f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x141054e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x142833858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x141054e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1428338c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x141054eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x142833928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x141054ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x142833990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x141054ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1428339f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x141054f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x142833a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x141054f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x142833ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x141054f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x142833b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x141054f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x142833b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x141054f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x142834400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x141054fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x142834468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x141054fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1428344d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x141054ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x142834538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x141055010 '__clang_svint8x4_t'
|-TypedefDecl 0x1428345a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x141055030 '__clang_svint16x4_t'
|-TypedefDecl 0x142834608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x141055050 '__clang_svint32x4_t'
|-TypedefDecl 0x142834670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x141055070 '__clang_svint64x4_t'
|-TypedefDecl 0x1428346d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x141055090 '__clang_svuint8x4_t'
|-TypedefDecl 0x142834740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1410550b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1428347a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1410550d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x142834810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1410550f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x142834878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x141055110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1428348e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x141055130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x142834948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x141055150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1428349b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x141055170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x142834a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x141055190 '__SVBool_t'
|-TypedefDecl 0x142834a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1410551b0 '__clang_svboolx2_t'
|-TypedefDecl 0x142834ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1410551d0 '__clang_svboolx4_t'
|-TypedefDecl 0x142834b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1410551f0 '__SVCount_t'
|-TypedefDecl 0x142834bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x142834bb0 'char *'
|   `-BuiltinType 0x1410544b0 'char'
|-TypedefDecl 0x142834c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x142834bb0 'char *'
|   `-BuiltinType 0x1410544b0 'char'
`-FunctionDecl 0x142834e88 <dataset_diviso_filec/func15187_vuln.c:1:1, line:40:1> line:1:1 invalid ga_concat_shorten_esc 'int (int *, char *)'
  |-ParmVarDecl 0x142834d28 <col:23, col:33> col:33 invalid gap 'int *'
  |-ParmVarDecl 0x142834da8 <col:38, col:46> col:46 used str 'char *'
  `-CompoundStmt 0x1410bf800 <line:2:1, line:40:1>
    |-DeclStmt 0x142834fc0 <line:3:5, col:15>
    | `-VarDecl 0x142834f58 <col:5, col:14> col:14 used p 'char *'
    |-DeclStmt 0x142835058 <line:4:5, col:15>
    | `-VarDecl 0x142834ff0 <col:5, col:14> col:14 used s 'char *'
    |-DeclStmt 0x1428350f0 <line:5:5, col:14>
    | `-VarDecl 0x142835088 <col:5, col:13> col:13 used c 'int'
    |-DeclStmt 0x142835188 <line:6:5, col:17>
    | `-VarDecl 0x142835120 <col:5, col:13> col:13 used clen 'int'
    |-DeclStmt 0x142835230 <line:7:5, col:27>
    | `-VarDecl 0x1428351c8 <col:5, col:13> col:13 invalid buf 'char'
    |-DeclStmt 0x1428352c8 <line:8:5, col:21>
    | `-VarDecl 0x142835260 <col:5, col:13> col:13 used same_len 'int'
    |-IfStmt 0x14284d760 <line:10:5, line:14:5>
    | |-BinaryOperator 0x142835358 <line:10:9, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x1428352e0 <col:9> 'char *' lvalue ParmVar 0x142834da8 'str' 'char *'
    | | `-RecoveryExpr 0x142835338 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14284d748 <line:11:5, line:14:5>
    |   `-ReturnStmt 0x14284d738 <line:13:2>
    `-ForStmt 0x1410bf7c8 <line:16:5, line:39:5>
      |-BinaryOperator 0x14284d7d8 <line:16:10, col:14> 'char *' '='
      | |-DeclRefExpr 0x14284d780 <col:10> 'char *' lvalue Var 0x142834f58 'p' 'char *'
      | `-ImplicitCastExpr 0x14284d7c0 <col:14> 'char *' <LValueToRValue>
      |   `-DeclRefExpr 0x14284d7a0 <col:14> 'char *' lvalue ParmVar 0x142834da8 'str' 'char *'
      |-<<<NULL>>>
      |-BinaryOperator 0x14284d900 <col:19, col:25> 'int' contains-errors '!='
      | |-UnaryOperator 0x14284d8c8 <col:19, col:20> 'char' lvalue prefix '*' cannot overflow
      | | `-ImplicitCastExpr 0x14284d8b0 <col:20> 'char *' <LValueToRValue>
      | |   `-DeclRefExpr 0x14284d7f8 <col:20> 'char *' lvalue Var 0x142834f58 'p' 'char *'
      | `-RecoveryExpr 0x14284d8e0 <col:25> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14284d940 <col:30, col:32> 'char *' prefix '++'
      | `-DeclRefExpr 0x14284d920 <col:32> 'char *' lvalue Var 0x142834f58 'p' 'char *'
      `-CompoundStmt 0x1410bf788 <line:17:5, line:39:5>
        |-BinaryOperator 0x14284d998 <line:18:2, col:13> 'int' '='
        | |-DeclRefExpr 0x14284d958 <col:2> 'int' lvalue Var 0x142835260 'same_len' 'int'
        | `-IntegerLiteral 0x14284d978 <col:13> 'int' 1
        |-BinaryOperator 0x14284da10 <line:19:2, col:6> 'char *' '='
        | |-DeclRefExpr 0x14284d9b8 <col:2> 'char *' lvalue Var 0x142834ff0 's' 'char *'
        | `-ImplicitCastExpr 0x14284d9f8 <col:6> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x14284d9d8 <col:6> 'char *' lvalue Var 0x142834f58 'p' 'char *'
        |-BinaryOperator 0x14284dc30 <line:20:2, col:24> 'int' '='
        | |-DeclRefExpr 0x14284da30 <col:2> 'int' lvalue Var 0x142835088 'c' 'int'
        | `-CallExpr 0x14284dc08 <col:6, col:24> 'int'
        |   |-ImplicitCastExpr 0x14284dbf0 <col:6> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x14284db30 <col:6> 'int ()' Function 0x14284da78 'mb_ptr2char_adv' 'int ()'
        |   `-UnaryOperator 0x14284dba0 <col:22, col:23> 'char **' prefix '&' cannot overflow
        |     `-DeclRefExpr 0x14284db50 <col:23> 'char *' lvalue Var 0x142834ff0 's' 'char *'
        |-BinaryOperator 0x14284dd18 <line:21:2, col:13> 'int' '='
        | |-DeclRefExpr 0x14284dc50 <col:2> 'int' lvalue Var 0x142835120 'clen' 'int'
        | `-ImplicitCastExpr 0x14284dd00 <col:9, col:13> 'int' <IntegralCast>
        |   `-BinaryOperator 0x14284dce0 <col:9, col:13> 'long' '-'
        |     |-ImplicitCastExpr 0x14284dcb0 <col:9> 'char *' <LValueToRValue>
        |     | `-DeclRefExpr 0x14284dc70 <col:9> 'char *' lvalue Var 0x142834ff0 's' 'char *'
        |     `-ImplicitCastExpr 0x14284dcc8 <col:13> 'char *' <LValueToRValue>
        |       `-DeclRefExpr 0x14284dc90 <col:13> 'char *' lvalue Var 0x142834f58 'p' 'char *'
        |-WhileStmt 0x14284e1e0 <line:22:2, line:26:2>
        | |-BinaryOperator 0x14284e0e0 <line:22:9, col:40> 'int' contains-errors '&&'
        | | |-BinaryOperator 0x14284e030 <col:9, col:15> 'int' contains-errors '!='
        | | | |-UnaryOperator 0x14284dff8 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
        | | | | `-ImplicitCastExpr 0x14284dfe0 <col:10> 'char *' <LValueToRValue>
        | | | |   `-DeclRefExpr 0x14284dd38 <col:10> 'char *' lvalue Var 0x142834ff0 's' 'char *'
        | | | `-RecoveryExpr 0x14284e010 <col:15> '<dependent type>' contains-errors lvalue
        | | `-BinaryOperator 0x14284e0c0 <col:22, col:40> 'int' '=='
        | |   |-ImplicitCastExpr 0x14284e0a8 <col:22> 'int' <LValueToRValue>
        | |   | `-DeclRefExpr 0x14284ddc0 <col:22> 'int' lvalue Var 0x142835088 'c' 'int'
        | |   `-CallExpr 0x14284e068 <col:27, col:40> 'int'
        | |     |-ImplicitCastExpr 0x14284e050 <col:27> 'int (*)()' <FunctionToPointerDecay>
        | |     | `-DeclRefExpr 0x14284dec0 <col:27> 'int ()' Function 0x14284de08 'mb_ptr2char' 'int ()'
        | |     `-ImplicitCastExpr 0x14284e090 <col:39> 'char *' <LValueToRValue>
        | |       `-DeclRefExpr 0x14284dee0 <col:39> 'char *' lvalue Var 0x142834ff0 's' 'char *'
        | `-CompoundStmt 0x14284e1c0 <line:23:2, line:26:2>
        |   |-UnaryOperator 0x14284e120 <line:24:6, col:8> 'int' prefix '++'
        |   | `-DeclRefExpr 0x14284e100 <col:8> 'int' lvalue Var 0x142835260 'same_len' 'int'
        |   `-CompoundAssignOperator 0x14284e190 <line:25:6, col:11> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
        |     |-DeclRefExpr 0x14284e138 <col:6> 'char *' lvalue Var 0x142834ff0 's' 'char *'
        |     `-ImplicitCastExpr 0x14284e178 <col:11> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x14284e158 <col:11> 'int' lvalue Var 0x142835120 'clen' 'int'
        `-IfStmt 0x1410bf758 <line:27:2, line:38:32> has_else
          |-BinaryOperator 0x14284e258 <line:27:6, col:17> 'int' '>'
          | |-ImplicitCastExpr 0x14284e240 <col:6> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x14284e200 <col:6> 'int' lvalue Var 0x142835260 'same_len' 'int'
          | `-IntegerLiteral 0x14284e220 <col:17> 'int' 20
          |-CompoundStmt 0x1410bf678 <line:28:2, line:36:2>
          | |-CallExpr 0x14284e430 <line:30:6, col:32> '<dependent type>' contains-errors
          | | |-DeclRefExpr 0x14284e3b0 <col:6> 'int ()' Function 0x14284e2f8 'ga_concat_esc' 'int ()'
          | | |-RecoveryExpr 0x14284e3d0 <col:20> '<dependent type>' contains-errors lvalue
          | | |-DeclRefExpr 0x14284e3f0 <col:25> 'char *' lvalue Var 0x142834f58 'p' 'char *'
          | | `-DeclRefExpr 0x14284e410 <col:28> 'int' lvalue Var 0x142835120 'clen' 'int'
          | |-CallExpr 0x1410bf550 <line:33:6, col:24> '<dependent type>' contains-errors
          | | |-DeclRefExpr 0x1410bf4f0 <col:6> 'int ()' Function 0x14284d628 'ga_concat' 'int ()'
          | | |-RecoveryExpr 0x1410bf510 <col:16> '<dependent type>' contains-errors lvalue
          | | `-RecoveryExpr 0x1410bf530 <col:21> '<dependent type>' contains-errors lvalue
          | `-BinaryOperator 0x1410bf658 <line:35:6, col:14> 'char *' '='
          |   |-DeclRefExpr 0x1410bf5c0 <col:6> 'char *' lvalue Var 0x142834f58 'p' 'char *'
          |   `-BinaryOperator 0x1410bf638 <col:10, col:14> 'char *' '-'
          |     |-ImplicitCastExpr 0x1410bf620 <col:10> 'char *' <LValueToRValue>
          |     | `-DeclRefExpr 0x1410bf5e0 <col:10> 'char *' lvalue Var 0x142834ff0 's' 'char *'
          |     `-IntegerLiteral 0x1410bf600 <col:14> 'int' 1
          `-CallExpr 0x1410bf720 <line:38:6, col:32> '<dependent type>' contains-errors
            |-DeclRefExpr 0x1410bf6a0 <col:6> 'int ()' Function 0x14284e2f8 'ga_concat_esc' 'int ()'
            |-RecoveryExpr 0x1410bf6c0 <col:20> '<dependent type>' contains-errors lvalue
            |-DeclRefExpr 0x1410bf6e0 <col:25> 'char *' lvalue Var 0x142834f58 'p' 'char *'
            `-DeclRefExpr 0x1410bf700 <col:28> 'int' lvalue Var 0x142835120 'clen' 'int'
