TranslationUnitDecl 0x138855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1388564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x138855bd0 '__int128'
|-TypedefDecl 0x138856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x138855bf0 'unsigned __int128'
|-TypedefDecl 0x139028c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x139028a00 'struct __NSConstantString_tag'
|   `-Record 0x138856580 '__NSConstantString_tag'
|-TypedefDecl 0x139028c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x138855d90 '__SVInt8_t'
|-TypedefDecl 0x139028d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x138855db0 '__SVInt16_t'
|-TypedefDecl 0x139028d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x138855dd0 '__SVInt32_t'
|-TypedefDecl 0x139028dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x138855df0 '__SVInt64_t'
|-TypedefDecl 0x139028e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x138855e10 '__SVUint8_t'
|-TypedefDecl 0x139028ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x138855e30 '__SVUint16_t'
|-TypedefDecl 0x139028f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x138855e50 '__SVUint32_t'
|-TypedefDecl 0x139028f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x138855e70 '__SVUint64_t'
|-TypedefDecl 0x139028fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x138855e90 '__SVFloat16_t'
|-TypedefDecl 0x139029040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x138855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1390290a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x138855ed0 '__SVFloat64_t'
|-TypedefDecl 0x139029110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x138855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x139029178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x138855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1390291e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x138855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x139029248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x138855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1390292b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x138855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x139029318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x138855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x139029380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x138855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1390293e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x138855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x139029450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x138855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1390294b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x138856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x139029520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x138856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x139029588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x138856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1390295f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x138856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x139029658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x138856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1390296c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1388560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x139029728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1388560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x139029790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1388560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1390297f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x138856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x139029860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x138856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1390298c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x138856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x139029930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x138856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x139029998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x138856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13902a200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1388561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13902a268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1388561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13902a2d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1388561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13902a338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x138856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13902a3a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x138856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13902a408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x138856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13902a470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x138856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13902a4d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x138856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13902a540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1388562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13902a5a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1388562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13902a610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1388562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13902a678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x138856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13902a6e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x138856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13902a748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x138856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13902a7b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x138856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13902a818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x138856390 '__SVBool_t'
|-TypedefDecl 0x13902a880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1388563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13902a8e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1388563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13902a950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1388563f0 '__SVCount_t'
|-TypedefDecl 0x13902a9f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13902a9b0 'char *'
|   `-BuiltinType 0x1388556b0 'char'
|-TypedefDecl 0x13902aa68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13902a9b0 'char *'
|   `-BuiltinType 0x1388556b0 'char'
`-FunctionDecl 0x13902abf0 <dataset_diviso_filec/func12776_nonvuln.c:1:1, line:54:1> line:1:13 invalid pcnet_update_irq 'void (int *)' static
  |-ParmVarDecl 0x13902ab28 <col:30, col:42> col:42 referenced invalid s 'int *'
  `-CompoundStmt 0x139046118 <line:2:1, line:54:1>
    |-DeclStmt 0x13902ad40 <line:3:5, col:16>
    | `-VarDecl 0x13902acb8 <col:5, col:15> col:9 used isr 'int' cinit
    |   `-IntegerLiteral 0x13902ad20 <col:15> 'int' 0
    |-CompoundAssignOperator 0x13902ae78 <line:4:5, col:19> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-ArraySubscriptExpr 0x13902ae20 <col:5, col:13> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x13902ae08 <col:5, col:8> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x13902ada0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->csr
    | | |   `-RecoveryExpr 0x13902ad78 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x13902ad58 <col:5> 'int *' lvalue ParmVar 0x13902ab28 's' 'int *'
    | | `-IntegerLiteral 0x13902ade8 <col:12> 'int' 0
    | `-UnaryOperator 0x13902ae60 <col:18, col:19> 'int' prefix '~' cannot overflow
    |   `-IntegerLiteral 0x13902ae40 <col:19> 'int' 128
    |-IfStmt 0x1390449d0 <line:7:5, line:28:5>
    | |-BinaryOperator 0x139044650 <line:7:9, line:9:47> 'int' contains-errors '||'
    | | |-BinaryOperator 0x1390443b0 <line:7:9, line:8:48> 'int' contains-errors '||'
    | | | |-ParenExpr 0x13902b0d8 <line:7:9, col:43> '<dependent type>' contains-errors
    | | | | `-BinaryOperator 0x13902b0b8 <col:10, col:37> '<dependent type>' contains-errors '&'
    | | | |   |-ParenExpr 0x13902b078 <col:10, col:33> '<dependent type>' contains-errors
    | | | |   | `-BinaryOperator 0x13902b058 <col:11, col:32> '<dependent type>' contains-errors '&'
    | | | |   |   |-ArraySubscriptExpr 0x13902af48 <col:11, col:19> '<dependent type>' contains-errors lvalue
    | | | |   |   | |-ImplicitCastExpr 0x13902af30 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   |   | | `-CXXDependentScopeMemberExpr 0x13902aec8 <col:11, col:14> '<dependent type>' contains-errors lvalue ->csr
    | | | |   |   | |   `-RecoveryExpr 0x13902aea8 <col:11> '<dependent type>' contains-errors lvalue
    | | | |   |   | `-IntegerLiteral 0x13902af10 <col:18> 'int' 0
    | | | |   |   `-UnaryOperator 0x13902b040 <col:23, col:32> '<dependent type>' contains-errors prefix '~' cannot overflow
    | | | |   |     `-ImplicitCastExpr 0x13902b028 <col:24, col:32> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   |       `-ArraySubscriptExpr 0x13902b008 <col:24, col:32> '<dependent type>' contains-errors lvalue
    | | | |   |         |-ImplicitCastExpr 0x13902aff0 <col:24, col:27> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   |         | `-CXXDependentScopeMemberExpr 0x13902af88 <col:24, col:27> '<dependent type>' contains-errors lvalue ->csr
    | | | |   |         |   `-RecoveryExpr 0x13902af68 <col:24> '<dependent type>' contains-errors lvalue
    | | | |   |         `-IntegerLiteral 0x13902afd0 <col:31> 'int' 3
    | | | |   `-IntegerLiteral 0x13902b098 <col:37> 'int' 24320
    | | | `-ParenExpr 0x139044390 <line:8:9, col:48> '<dependent type>' contains-errors
    | | |   `-BinaryOperator 0x139044370 <col:10, col:42> '<dependent type>' contains-errors '&'
    | | |     |-ParenExpr 0x139044330 <col:10, col:38> '<dependent type>' contains-errors
    | | |     | `-BinaryOperator 0x139044310 <col:11, col:37> '<dependent type>' contains-errors '&'
    | | |     |   |-ParenExpr 0x139044200 <col:11, col:24> '<dependent type>' contains-errors
    | | |     |   | `-BinaryOperator 0x13902b1d8 <col:12, col:23> '<dependent type>' contains-errors '>>'
    | | |     |   |   |-ArraySubscriptExpr 0x13902b198 <col:12, col:20> '<dependent type>' contains-errors lvalue
    | | |     |   |   | |-ImplicitCastExpr 0x13902b180 <col:12, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | | |     |   |   | | `-CXXDependentScopeMemberExpr 0x13902b118 <col:12, col:15> '<dependent type>' contains-errors lvalue ->csr
    | | |     |   |   | |   `-RecoveryExpr 0x13902b0f8 <col:12> '<dependent type>' contains-errors lvalue
    | | |     |   |   | `-IntegerLiteral 0x13902b160 <col:19> 'int' 4
    | | |     |   |   `-IntegerLiteral 0x13902b1b8 <col:23> 'int' 1
    | | |     |   `-UnaryOperator 0x1390442f8 <col:28, col:37> '<dependent type>' contains-errors prefix '~' cannot overflow
    | | |     |     `-ImplicitCastExpr 0x1390442e0 <col:29, col:37> '<dependent type>' contains-errors <LValueToRValue>
    | | |     |       `-ArraySubscriptExpr 0x1390442c0 <col:29, col:37> '<dependent type>' contains-errors lvalue
    | | |     |         |-ImplicitCastExpr 0x1390442a8 <col:29, col:32> '<dependent type>' contains-errors <LValueToRValue>
    | | |     |         | `-CXXDependentScopeMemberExpr 0x139044240 <col:29, col:32> '<dependent type>' contains-errors lvalue ->csr
    | | |     |         |   `-RecoveryExpr 0x139044220 <col:29> '<dependent type>' contains-errors lvalue
    | | |     |         `-IntegerLiteral 0x139044288 <col:36> 'int' 4
    | | |     `-IntegerLiteral 0x139044350 <col:42> 'int' 277
    | | `-ParenExpr 0x139044630 <line:9:9, col:47> '<dependent type>' contains-errors
    | |   `-BinaryOperator 0x139044610 <col:10, col:41> '<dependent type>' contains-errors '&'
    | |     |-ParenExpr 0x1390445d0 <col:10, col:37> '<dependent type>' contains-errors
    | |     | `-BinaryOperator 0x1390445b0 <col:11, col:36> '<dependent type>' contains-errors '&'
    | |     |   |-ParenExpr 0x1390444d0 <col:11, col:24> '<dependent type>' contains-errors
    | |     |   | `-BinaryOperator 0x1390444b0 <col:12, col:23> '<dependent type>' contains-errors '>>'
    | |     |   |   |-ArraySubscriptExpr 0x139044470 <col:12, col:20> '<dependent type>' contains-errors lvalue
    | |     |   |   | |-ImplicitCastExpr 0x139044458 <col:12, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |     |   |   | | `-CXXDependentScopeMemberExpr 0x1390443f0 <col:12, col:15> '<dependent type>' contains-errors lvalue ->csr
    | |     |   |   | |   `-RecoveryExpr 0x1390443d0 <col:12> '<dependent type>' contains-errors lvalue
    | |     |   |   | `-IntegerLiteral 0x139044438 <col:19> 'int' 5
    | |     |   |   `-IntegerLiteral 0x139044490 <col:23> 'int' 1
    | |     |   `-ArraySubscriptExpr 0x139044590 <col:28, col:36> '<dependent type>' contains-errors lvalue
    | |     |     |-ImplicitCastExpr 0x139044578 <col:28, col:31> '<dependent type>' contains-errors <LValueToRValue>
    | |     |     | `-CXXDependentScopeMemberExpr 0x139044510 <col:28, col:31> '<dependent type>' contains-errors lvalue ->csr
    | |     |     |   `-RecoveryExpr 0x1390444f0 <col:28> '<dependent type>' contains-errors lvalue
    | |     |     `-IntegerLiteral 0x139044558 <col:35> 'int' 5
    | |     `-IntegerLiteral 0x1390445f0 <col:41> 'int' 72
    | `-CompoundStmt 0x1390449b0 <line:24:5, line:28:5>
    |   |-BinaryOperator 0x139044858 <line:26:9, col:25> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x139044670 <col:9> 'int' lvalue Var 0x13902acb8 'isr' 'int'
    |   | `-CallExpr 0x139044830 <col:15, col:25> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1390447f0 <col:15> 'int ()' Function 0x139044738 'CSR_INEA' 'int ()'
    |   |   `-RecoveryExpr 0x139044810 <col:24> '<dependent type>' contains-errors lvalue
    |   `-CompoundAssignOperator 0x139044980 <line:27:9, col:22> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-ArraySubscriptExpr 0x139044940 <col:9, col:17> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x139044928 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x1390448c0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->csr
    |     | |   `-RecoveryExpr 0x139044898 <col:9> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x139044878 <col:9> 'int *' lvalue ParmVar 0x13902ab28 's' 'int *'
    |     | `-IntegerLiteral 0x139044908 <col:16> 'int' 0
    |     `-IntegerLiteral 0x139044960 <col:22> 'int' 128
    |-IfStmt 0x139045168 <line:30:5, line:36:5>
    | |-BinaryOperator 0x139044ba8 <line:30:9, col:45> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x139044b28 <col:9, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-UnaryOperator 0x139044b10 <col:10, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   `-ParenExpr 0x139044af0 <col:11, col:30> '<dependent type>' contains-errors
    | | |     `-BinaryOperator 0x139044ad0 <col:12, col:24> '<dependent type>' contains-errors '&'
    | | |       |-ArraySubscriptExpr 0x139044a90 <col:12, col:20> '<dependent type>' contains-errors lvalue
    | | |       | |-ImplicitCastExpr 0x139044a78 <col:12, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | | |       | | `-CXXDependentScopeMemberExpr 0x139044a10 <col:12, col:15> '<dependent type>' contains-errors lvalue ->csr
    | | |       | |   `-RecoveryExpr 0x1390449f0 <col:12> '<dependent type>' contains-errors lvalue
    | | |       | `-IntegerLiteral 0x139044a58 <col:19> 'int' 4
    | | |       `-IntegerLiteral 0x139044ab0 <col:24> 'int' 128
    | | `-CallExpr 0x139044b80 <col:35, col:45> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x139044b40 <col:35> 'int ()' Function 0x139044738 'CSR_INEA' 'int ()'
    | |   `-RecoveryExpr 0x139044b60 <col:44> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139045130 <col:48, line:36:5>
    |   |-CompoundAssignOperator 0x139044ce8 <line:31:9, col:23> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-ArraySubscriptExpr 0x139044c90 <col:9, col:17> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x139044c78 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x139044c10 <col:9, col:12> '<dependent type>' contains-errors lvalue ->csr
    |   | | |   `-RecoveryExpr 0x139044be8 <col:9> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x139044bc8 <col:9> 'int *' lvalue ParmVar 0x13902ab28 's' 'int *'
    |   | | `-IntegerLiteral 0x139044c58 <col:16> 'int' 4
    |   | `-UnaryOperator 0x139044cd0 <col:22, col:23> 'int' prefix '~' cannot overflow
    |   |   `-IntegerLiteral 0x139044cb0 <col:23> 'int' 128
    |   |-CompoundAssignOperator 0x139044e20 <line:32:9, col:22> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-ArraySubscriptExpr 0x139044de0 <col:9, col:17> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x139044dc8 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x139044d60 <col:9, col:12> '<dependent type>' contains-errors lvalue ->csr
    |   | | |   `-RecoveryExpr 0x139044d38 <col:9> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x139044d18 <col:9> 'int *' lvalue ParmVar 0x13902ab28 's' 'int *'
    |   | | `-IntegerLiteral 0x139044da8 <col:16> 'int' 4
    |   | `-IntegerLiteral 0x139044e00 <col:22> 'int' 64
    |   |-CompoundAssignOperator 0x139044f58 <line:33:9, col:22> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-ArraySubscriptExpr 0x139044f18 <col:9, col:17> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x139044f00 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x139044e98 <col:9, col:12> '<dependent type>' contains-errors lvalue ->csr
    |   | | |   `-RecoveryExpr 0x139044e70 <col:9> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x139044e50 <col:9> 'int *' lvalue ParmVar 0x13902ab28 's' 'int *'
    |   | | `-IntegerLiteral 0x139044ee0 <col:16> 'int' 0
    |   | `-IntegerLiteral 0x139044f38 <col:22> 'int' 128
    |   |-BinaryOperator 0x139044fc8 <line:34:9, col:15> 'int' '='
    |   | |-DeclRefExpr 0x139044f88 <col:9> 'int' lvalue Var 0x13902acb8 'isr' 'int'
    |   | `-IntegerLiteral 0x139044fa8 <col:15> 'int' 1
    |   `-CallExpr 0x139045108 <line:35:9, col:31> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1390450c8 <col:9> 'int ()' Function 0x139045010 'trace_pcnet_user_int' 'int ()'
    |     `-RecoveryExpr 0x1390450e8 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x139045bb0 <line:39:5, line:47:5>
    | |-BinaryOperator 0x1390459d8 <line:39:9, col:40> '<dependent type>' contains-errors '&'
    | | |-ParenExpr 0x139045998 <col:9, col:36> '<dependent type>' contains-errors
    | | | `-BinaryOperator 0x139045978 <col:10, col:35> '<dependent type>' contains-errors '&'
    | | |   |-ParenExpr 0x139045898 <col:10, col:23> '<dependent type>' contains-errors
    | | |   | `-BinaryOperator 0x139045878 <col:11, col:22> '<dependent type>' contains-errors '>>'
    | | |   |   |-ArraySubscriptExpr 0x139045838 <col:11, col:19> '<dependent type>' contains-errors lvalue
    | | |   |   | |-ImplicitCastExpr 0x139045820 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | |   |   | | `-CXXDependentScopeMemberExpr 0x1390451a8 <col:11, col:14> '<dependent type>' contains-errors lvalue ->csr
    | | |   |   | |   `-RecoveryExpr 0x139045188 <col:11> '<dependent type>' contains-errors lvalue
    | | |   |   | `-IntegerLiteral 0x139045800 <col:18> 'int' 5
    | | |   |   `-IntegerLiteral 0x139045858 <col:22> 'int' 1
    | | |   `-ArraySubscriptExpr 0x139045958 <col:27, col:35> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x139045940 <col:27, col:30> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x1390458d8 <col:27, col:30> '<dependent type>' contains-errors lvalue ->csr
    | | |     |   `-RecoveryExpr 0x1390458b8 <col:27> '<dependent type>' contains-errors lvalue
    | | |     `-IntegerLiteral 0x139045920 <col:34> 'int' 5
    | | `-IntegerLiteral 0x1390459b8 <col:40> 'int' 1280
    | `-CompoundStmt 0x139045b90 <line:44:5, line:47:5>
    |   |-BinaryOperator 0x139045a38 <line:45:9, col:15> 'int' '='
    |   | |-DeclRefExpr 0x1390459f8 <col:9> 'int' lvalue Var 0x13902acb8 'isr' 'int'
    |   | `-IntegerLiteral 0x139045a18 <col:15> 'int' 1
    |   `-CompoundAssignOperator 0x139045b60 <line:46:9, col:22> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-ArraySubscriptExpr 0x139045b20 <col:9, col:17> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x139045b08 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x139045aa0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->csr
    |     | |   `-RecoveryExpr 0x139045a78 <col:9> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x139045a58 <col:9> 'int *' lvalue ParmVar 0x13902ab28 's' 'int *'
    |     | `-IntegerLiteral 0x139045ae8 <col:16> 'int' 0
    |     `-IntegerLiteral 0x139045b40 <col:22> 'int' 128
    |-IfStmt 0x139045e70 <line:49:5, line:51:5>
    | |-BinaryOperator 0x139045c58 <line:49:9, col:19> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x139045bd0 <col:9> 'int' lvalue Var 0x13902acb8 'isr' 'int'
    | | `-CXXDependentScopeMemberExpr 0x139045c10 <col:16, col:19> '<dependent type>' contains-errors lvalue ->isr
    | |   `-RecoveryExpr 0x139045bf0 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139045e58 <col:24, line:51:5>
    |   `-CallExpr 0x139045e20 <line:50:9, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x139045d58 <col:9> 'int ()' Function 0x139045ca0 'trace_pcnet_isr_change' 'int ()'
    |     |-RecoveryExpr 0x139045d78 <col:32> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x139045d98 <col:35> 'int' lvalue Var 0x13902acb8 'isr' 'int'
    |     `-CXXDependentScopeMemberExpr 0x139045dd8 <col:40, col:43> '<dependent type>' contains-errors lvalue ->isr
    |       `-RecoveryExpr 0x139045db8 <col:40> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x139046018 <line:52:5, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139045f70 <col:5> 'int ()' Function 0x139045eb8 'qemu_set_irq' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x139045fb0 <col:18, col:21> '<dependent type>' contains-errors lvalue ->irq
    | | `-RecoveryExpr 0x139045f90 <col:18> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x139045ff8 <col:26> 'int' lvalue Var 0x13902acb8 'isr' 'int'
    `-BinaryOperator 0x1390460f8 <line:53:5, col:14> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x139046090 <col:5, col:8> '<dependent type>' contains-errors lvalue ->isr
      | `-RecoveryExpr 0x139046068 <col:5> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x139046048 <col:5> 'int *' lvalue ParmVar 0x13902ab28 's' 'int *'
      `-DeclRefExpr 0x1390460d8 <col:14> 'int' lvalue Var 0x13902acb8 'isr' 'int'
