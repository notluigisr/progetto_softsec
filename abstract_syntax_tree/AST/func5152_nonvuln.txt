TranslationUnitDecl 0x159055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1590564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x159055bd0 '__int128'
|-TypedefDecl 0x159056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x159055bf0 'unsigned __int128'
|-TypedefDecl 0x159126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x159126a00 'struct __NSConstantString_tag'
|   `-Record 0x159056580 '__NSConstantString_tag'
|-TypedefDecl 0x159126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x159055d90 '__SVInt8_t'
|-TypedefDecl 0x159126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x159055db0 '__SVInt16_t'
|-TypedefDecl 0x159126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x159055dd0 '__SVInt32_t'
|-TypedefDecl 0x159126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x159055df0 '__SVInt64_t'
|-TypedefDecl 0x159126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x159055e10 '__SVUint8_t'
|-TypedefDecl 0x159126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x159055e30 '__SVUint16_t'
|-TypedefDecl 0x159126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x159055e50 '__SVUint32_t'
|-TypedefDecl 0x159126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x159055e70 '__SVUint64_t'
|-TypedefDecl 0x159126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x159055e90 '__SVFloat16_t'
|-TypedefDecl 0x159127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x159055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1591270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x159055ed0 '__SVFloat64_t'
|-TypedefDecl 0x159127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x159055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x159127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x159055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1591271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x159055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x159127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x159055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1591272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x159055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x159127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x159055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x159127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x159055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1591273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x159055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x159127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x159055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1591274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x159056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x159127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x159056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x159127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x159056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1591275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x159056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x159127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x159056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1591276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1590560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x159127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1590560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x159127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1590560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1591277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x159056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x159127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x159056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1591278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x159056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x159127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x159056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x159127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x159056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x159128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1590561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x159128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1590561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1591282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1590561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x159128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x159056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1591283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x159056230 '__clang_svint16x4_t'
|-TypedefDecl 0x159128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x159056250 '__clang_svint32x4_t'
|-TypedefDecl 0x159128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x159056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1591284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x159056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x159128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1590562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1591285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1590562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x159128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1590562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x159128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x159056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1591286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x159056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x159128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x159056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1591287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x159056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x159128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x159056390 '__SVBool_t'
|-TypedefDecl 0x159128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1590563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1591288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1590563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x159128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1590563f0 '__SVCount_t'
|-TypedefDecl 0x1591289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1591289b0 'char *'
|   `-BuiltinType 0x1590556b0 'char'
|-TypedefDecl 0x159128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1591289b0 'char *'
|   `-BuiltinType 0x1590556b0 'char'
|-FunctionDecl 0x159128ef8 <dataset_diviso_filec/func5152_nonvuln.c:1:1, line:88:1> line:1:5 invalid gnutls_x509_crt_get_crl_dist_points 'int (int, unsigned int, void *, int *, unsigned int *, unsigned int *)'
| |-ParmVarDecl 0x159128af0 <col:41, col:59> col:59 invalid cert 'int'
| |-ParmVarDecl 0x159128b70 <line:2:5, col:18> col:18 used seq 'unsigned int'
| |-ParmVarDecl 0x159128bf0 <col:23, col:29> col:29 used ret 'void *'
| |-ParmVarDecl 0x159128ca8 <col:34, col:43> col:43 invalid ret_size 'int *'
| |-ParmVarDecl 0x159128d58 <line:3:5, col:19> col:19 used reason_flags 'unsigned int *'
| |-ParmVarDecl 0x159128dd8 <col:33, col:47> col:47 used critical 'unsigned int *'
| `-CompoundStmt 0x15980a900 <line:4:1, line:88:1>
|   |-DeclStmt 0x159129050 <line:5:5, col:15>
|   | `-VarDecl 0x159128fe8 <col:5, col:9> col:9 used result 'int'
|   |-DeclStmt 0x159129178 <line:8:5, col:19>
|   | `-VarDecl 0x159129110 <col:5, col:18> col:10 used name 'char[128]'
|   |-DeclStmt 0x159142268 <line:9:5, col:12>
|   | `-VarDecl 0x159142200 <col:5, col:9> col:9 used len 'int'
|   |-DeclStmt 0x159142310 <line:10:5, col:29>
|   | `-VarDecl 0x1591422a8 <col:5, col:10> col:10 invalid num 'char'
|   |-IfStmt 0x159142610 <line:14:5, line:17:5>
|   | |-BinaryOperator 0x1591423a0 <line:14:9, col:17> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x159142328 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x159142380 <col:17> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1591425f0 <col:23, line:17:5>
|   |   |-CallExpr 0x159142588 <line:15:2, col:16> 'int'
|   |   | `-ImplicitCastExpr 0x159142570 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x159142520 <col:2> 'int ()' Function 0x159142468 'gnutls_assert' 'int ()'
|   |   `-ReturnStmt 0x1591425e0 <line:16:2, col:9>
|   |     `-RecoveryExpr 0x1591425c0 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x159142ec0 <line:19:5, line:22:14> has_else
|   | |-ImplicitCastExpr 0x159142650 <line:19:9> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x159142630 <col:9> 'void *' lvalue ParmVar 0x159128bf0 'ret' 'void *'
|   | |-CallExpr 0x159142df8 <line:20:2, col:26> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x159142d30 <col:2> 'void *(void *, int, unsigned long)' Function 0x159142ae0 'memset' 'void *(void *, int, unsigned long)'
|   | | |-DeclRefExpr 0x159142d50 <col:9> 'void *' lvalue ParmVar 0x159128bf0 'ret' 'void *'
|   | | |-IntegerLiteral 0x159142d70 <col:14> 'int' 0
|   | | `-UnaryOperator 0x159142dc8 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x159142db0 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x159142d90 <col:18> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x159142ea0 <line:22:2, col:14> '<dependent type>' contains-errors '='
|   |   |-UnaryOperator 0x159142e68 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x159142e50 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   `-RecoveryExpr 0x159142e30 <col:3> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x159142e80 <col:14> 'int' 0
|   |-IfStmt 0x159142fd0 <line:24:5, line:25:18>
|   | |-ImplicitCastExpr 0x159142f10 <line:24:9> 'unsigned int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x159142ef0 <col:9> 'unsigned int *' lvalue ParmVar 0x159128d58 'reason_flags' 'unsigned int *'
|   | `-BinaryOperator 0x159142fb0 <line:25:2, col:18> 'unsigned int' '='
|   |   |-UnaryOperator 0x159142f60 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x159142f48 <col:3> 'unsigned int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x159142f28 <col:3> 'unsigned int *' lvalue ParmVar 0x159128d58 'reason_flags' 'unsigned int *'
|   |   `-ImplicitCastExpr 0x159142f98 <col:18> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x159142f78 <col:18> 'int' 0
|   |-BinaryOperator 0x1598088e8 <line:27:5, line:29:20> 'int' contains-errors '='
|   | |-DeclRefExpr 0x159142ff0 <line:27:5> 'int' lvalue Var 0x159128fe8 'result' 'int'
|   | `-CallExpr 0x1598088a0 <line:28:2, line:29:20> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1591430f0 <line:28:2> 'int ()' Function 0x159143038 '_gnutls_x509_crt_get_extension' 'int ()'
|   |   |-RecoveryExpr 0x159143110 <col:33> '<dependent type>' contains-errors lvalue
|   |   |-StringLiteral 0x159143170 <col:39> 'char[4]' lvalue "STR"
|   |   |-IntegerLiteral 0x159143190 <col:46> 'int' 0
|   |   |-UnaryOperator 0x159808888 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x159808868 <col:50> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1591431e0 <line:29:12> 'unsigned int *' lvalue ParmVar 0x159128dd8 'critical' 'unsigned int *'
|   |-IfStmt 0x1598089e0 <line:30:5, line:32:5>
|   | |-BinaryOperator 0x159808960 <line:30:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x159808948 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x159808908 <col:9> 'int' lvalue Var 0x159128fe8 'result' 'int'
|   | | `-IntegerLiteral 0x159808928 <col:18> 'int' 0
|   | `-CompoundStmt 0x1598089c8 <col:21, line:32:5>
|   |   `-ReturnStmt 0x1598089b8 <line:31:2, col:9>
|   |     `-ImplicitCastExpr 0x1598089a0 <col:9> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x159808980 <col:9> 'int' lvalue Var 0x159128fe8 'result' 'int'
|   |-IfStmt 0x159808d68 <line:34:5, line:37:5>
|   | |-BinaryOperator 0x159808c88 <line:34:9, col:54> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x159808bc0 <col:9, col:29> 'int' contains-errors '=='
|   | | | |-CXXDependentScopeMemberExpr 0x159808b78 <col:9, col:21> '<dependent type>' contains-errors lvalue .size
|   | | | | `-RecoveryExpr 0x159808b58 <col:9> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x159808a60 <col:29> 'int' 0
|   | | `-BinaryOperator 0x159808c68 <col:34, col:54> 'int' contains-errors '=='
|   | |   |-CXXDependentScopeMemberExpr 0x159808c00 <col:34, col:46> '<dependent type>' contains-errors lvalue .data
|   | |   | `-RecoveryExpr 0x159808be0 <col:34> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x159808c48 <col:54> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x159808d48 <col:60, line:37:5>
|   |   |-CallExpr 0x159808ce0 <line:35:2, col:16> 'int'
|   |   | `-ImplicitCastExpr 0x159808cc8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x159808ca8 <col:2> 'int ()' Function 0x159142468 'gnutls_assert' 'int ()'
|   |   `-ReturnStmt 0x159808d38 <line:36:2, col:9>
|   |     `-RecoveryExpr 0x159808d18 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x159809340 <line:41:5, line:45:5>
|   | |-RecoveryExpr 0x159809020 <line:41:9, col:19> '_Bool' contains-errors
|   | `-CompoundStmt 0x159809320 <col:33, line:45:5>
|   |   |-CallExpr 0x159809078 <line:42:2, col:16> 'int'
|   |   | `-ImplicitCastExpr 0x159809060 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x159809040 <col:2> 'int ()' Function 0x159142468 'gnutls_assert' 'int ()'
|   |   `-ReturnStmt 0x159809310 <line:44:2, col:31>
|   |     `-CallExpr 0x1598092d0 <col:9, col:31> 'int'
|   |       |-ImplicitCastExpr 0x1598092b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x159809278 <col:9> 'int ()' Function 0x1598091c0 '_gnutls_asn2err' 'int ()'
|   |       `-ImplicitCastExpr 0x1598092f8 <col:25> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x159809298 <col:25> 'int' lvalue Var 0x159128fe8 'result' 'int'
|   |-IfStmt 0x159809700 <line:51:5, line:55:5>
|   | |-RecoveryExpr 0x1598094c0 <line:51:9, col:19> '_Bool' contains-errors
|   | `-CompoundStmt 0x1598096e0 <col:33, line:55:5>
|   |   |-CallExpr 0x159809518 <line:52:2, col:16> 'int'
|   |   | `-ImplicitCastExpr 0x159809500 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x1598094e0 <col:2> 'int ()' Function 0x159142468 'gnutls_assert' 'int ()'
|   |   `-ReturnStmt 0x1598096d0 <line:54:2, col:31>
|   |     `-CallExpr 0x159809690 <col:9, col:31> 'int'
|   |       |-ImplicitCastExpr 0x159809678 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x159809638 <col:9> 'int ()' Function 0x1598091c0 '_gnutls_asn2err' 'int ()'
|   |       `-ImplicitCastExpr 0x1598096b8 <col:25> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x159809658 <col:25> 'int' lvalue Var 0x159128fe8 'result' 'int'
|   |-CallExpr 0x159809cd8 <line:58:5, col:46> 'int'
|   | |-ImplicitCastExpr 0x159809cc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x159809c00 <col:5> 'int ()' Function 0x159809748 '_gnutls_str_cpy' 'int ()'
|   | |-ImplicitCastExpr 0x159809d10 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x159809c20 <col:21> 'char[128]' lvalue Var 0x159129110 'name' 'char[128]'
|   | |-UnaryExprOrTypeTraitExpr 0x159809c80 <col:27, col:38> 'unsigned long' sizeof
|   | | `-ParenExpr 0x159809c60 <col:33, col:38> 'char[128]' lvalue
|   | |   `-DeclRefExpr 0x159809c40 <col:34> 'char[128]' lvalue Var 0x159129110 'name' 'char[128]' non_odr_use_unevaluated
|   | `-ImplicitCastExpr 0x159809d28 <col:41> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x159809ca0 <col:41> 'char[4]' lvalue "STR"
|   |-IfStmt 0x159809fd8 <line:61:5, line:64:5>
|   | |-BinaryOperator 0x159809f38 <line:61:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x159809f20 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x159809ee0 <col:9> 'int' lvalue Var 0x159128fe8 'result' 'int'
|   | | `-IntegerLiteral 0x159809f00 <col:18> 'int' 0
|   | `-CompoundStmt 0x159809fc0 <col:21, line:64:5>
|   |   `-ReturnStmt 0x159809fb0 <line:63:2, col:9>
|   |     `-ImplicitCastExpr 0x159809f98 <col:9> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x159809f78 <col:9> 'int' lvalue Var 0x159128fe8 'result' 'int'
|   `-IfStmt 0x15980a8e0 <line:70:5, line:85:5>
|     |-ImplicitCastExpr 0x15980a038 <line:70:9> 'unsigned int *' <LValueToRValue>
|     | `-DeclRefExpr 0x15980a018 <col:9> 'unsigned int *' lvalue ParmVar 0x159128d58 'reason_flags' 'unsigned int *'
|     `-CompoundStmt 0x15980a8b0 <col:23, line:85:5>
|       |-CallExpr 0x15980a128 <line:71:2, col:43> 'int'
|       | |-ImplicitCastExpr 0x15980a110 <col:2> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x15980a050 <col:2> 'int ()' Function 0x159809748 '_gnutls_str_cpy' 'int ()'
|       | |-ImplicitCastExpr 0x15980a160 <col:18> 'char *' <ArrayToPointerDecay>
|       | | `-DeclRefExpr 0x15980a070 <col:18> 'char[128]' lvalue Var 0x159129110 'name' 'char[128]'
|       | |-UnaryExprOrTypeTraitExpr 0x15980a0d0 <col:24, col:35> 'unsigned long' sizeof
|       | | `-ParenExpr 0x15980a0b0 <col:30, col:35> 'char[128]' lvalue
|       | |   `-DeclRefExpr 0x15980a090 <col:31> 'char[128]' lvalue Var 0x159129110 'name' 'char[128]' non_odr_use_unevaluated
|       | `-ImplicitCastExpr 0x15980a178 <col:38> 'char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x15980a0f0 <col:38> 'char[4]' lvalue "STR"
|       |-CallExpr 0x15980a330 <line:72:2, col:41> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x15980a270 <col:2> 'int ()' Function 0x15980a1b8 '_gnutls_str_cat' 'int ()'
|       | |-DeclRefExpr 0x15980a290 <col:18> 'char[128]' lvalue Var 0x159129110 'name' 'char[128]'
|       | |-UnaryExprOrTypeTraitExpr 0x15980a2f0 <col:24, col:35> 'unsigned long' sizeof
|       | | `-ParenExpr 0x15980a2d0 <col:30, col:35> 'char[128]' lvalue
|       | |   `-DeclRefExpr 0x15980a2b0 <col:31> 'char[128]' lvalue Var 0x159129110 'name' 'char[128]' non_odr_use_unevaluated
|       | `-RecoveryExpr 0x15980a310 <col:38> '<dependent type>' contains-errors lvalue
|       |-CallExpr 0x15980a440 <line:73:2, col:43> 'int'
|       | |-ImplicitCastExpr 0x15980a428 <col:2> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x15980a368 <col:2> 'int ()' Function 0x15980a1b8 '_gnutls_str_cat' 'int ()'
|       | |-ImplicitCastExpr 0x15980a478 <col:18> 'char *' <ArrayToPointerDecay>
|       | | `-DeclRefExpr 0x15980a388 <col:18> 'char[128]' lvalue Var 0x159129110 'name' 'char[128]'
|       | |-UnaryExprOrTypeTraitExpr 0x15980a3e8 <col:24, col:35> 'unsigned long' sizeof
|       | | `-ParenExpr 0x15980a3c8 <col:30, col:35> 'char[128]' lvalue
|       | |   `-DeclRefExpr 0x15980a3a8 <col:31> 'char[128]' lvalue Var 0x159129110 'name' 'char[128]' non_odr_use_unevaluated
|       | `-ImplicitCastExpr 0x15980a490 <col:38> 'char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x15980a408 <col:38> 'char[4]' lvalue "STR"
|       `-IfStmt 0x15980a7e0 <line:78:2, line:82:2>
|         |-RecoveryExpr 0x15980a680 <line:78:6, col:50> '_Bool' contains-errors
|         `-CompoundStmt 0x15980a7c0 <col:64, line:82:2>
|           |-CallExpr 0x15980a6d8 <line:79:6, col:20> 'int'
|           | `-ImplicitCastExpr 0x15980a6c0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|           |   `-DeclRefExpr 0x15980a6a0 <col:6> 'int ()' Function 0x159142468 'gnutls_assert' 'int ()'
|           `-ReturnStmt 0x15980a7b0 <line:81:6, col:35>
|             `-CallExpr 0x15980a770 <col:13, col:35> 'int'
|               |-ImplicitCastExpr 0x15980a758 <col:13> 'int (*)()' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x15980a718 <col:13> 'int ()' Function 0x1598091c0 '_gnutls_asn2err' 'int ()'
|               `-ImplicitCastExpr 0x15980a798 <col:29> 'int' <LValueToRValue>
|                 `-DeclRefExpr 0x15980a738 <col:29> 'int' lvalue Var 0x159128fe8 'result' 'int'
`-FunctionDecl 0x159142ae0 <line:20:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x159142be0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x159142c48 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x159142cb0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x159142b88 <<invalid sloc>> Implicit 900
