TranslationUnitDecl 0x133030208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1330310b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1330307d0 '__int128'
|-TypedefDecl 0x133031128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1330307f0 'unsigned __int128'
|-TypedefDecl 0x133100e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x133100c00 'struct __NSConstantString_tag'
|   `-Record 0x133031180 '__NSConstantString_tag'
|-TypedefDecl 0x133100e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x133030990 '__SVInt8_t'
|-TypedefDecl 0x133100f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1330309b0 '__SVInt16_t'
|-TypedefDecl 0x133100f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1330309d0 '__SVInt32_t'
|-TypedefDecl 0x133100fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1330309f0 '__SVInt64_t'
|-TypedefDecl 0x133101038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x133030a10 '__SVUint8_t'
|-TypedefDecl 0x1331010a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x133030a30 '__SVUint16_t'
|-TypedefDecl 0x133101108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x133030a50 '__SVUint32_t'
|-TypedefDecl 0x133101170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x133030a70 '__SVUint64_t'
|-TypedefDecl 0x1331011d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x133030a90 '__SVFloat16_t'
|-TypedefDecl 0x133101240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x133030ab0 '__SVFloat32_t'
|-TypedefDecl 0x1331012a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x133030ad0 '__SVFloat64_t'
|-TypedefDecl 0x133101310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x133030af0 '__SVBfloat16_t'
|-TypedefDecl 0x133101378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x133030b10 '__clang_svint8x2_t'
|-TypedefDecl 0x1331013e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x133030b30 '__clang_svint16x2_t'
|-TypedefDecl 0x133101448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x133030b50 '__clang_svint32x2_t'
|-TypedefDecl 0x1331014b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x133030b70 '__clang_svint64x2_t'
|-TypedefDecl 0x133101518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x133030b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x133101580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x133030bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1331015e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x133030bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x133101650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x133030bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1331016b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x133030c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x133101720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x133030c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x133101788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x133030c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1331017f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x133030c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x133101858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x133030c90 '__clang_svint8x3_t'
|-TypedefDecl 0x1331018c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x133030cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x133101928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x133030cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x133101990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x133030cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x1331019f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x133030d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x133101a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x133030d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x133101ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x133030d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x133101b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x133030d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x133101b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x133030d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x133102400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x133030db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x133102468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x133030dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1331024d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x133030df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x133102538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x133030e10 '__clang_svint8x4_t'
|-TypedefDecl 0x1331025a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x133030e30 '__clang_svint16x4_t'
|-TypedefDecl 0x133102608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x133030e50 '__clang_svint32x4_t'
|-TypedefDecl 0x133102670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x133030e70 '__clang_svint64x4_t'
|-TypedefDecl 0x1331026d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x133030e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x133102740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x133030eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1331027a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x133030ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x133102810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x133030ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x133102878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x133030f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1331028e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x133030f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x133102948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x133030f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1331029b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x133030f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x133102a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x133030f90 '__SVBool_t'
|-TypedefDecl 0x133102a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x133030fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x133102ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x133030fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x133102b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x133030ff0 '__SVCount_t'
|-TypedefDecl 0x133102bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x133102bb0 'char *'
|   `-BuiltinType 0x1330302b0 'char'
|-TypedefDecl 0x133102c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x133102bb0 'char *'
|   `-BuiltinType 0x1330302b0 'char'
|-FunctionDecl 0x133102e88 <dataset_diviso_filec/func9466_nonvuln.c:1:1, line:55:1> line:1:5 invalid ssh_scp_response 'int (int, char **)'
| |-ParmVarDecl 0x133102cf0 <col:22, col:30> col:30 referenced invalid scp 'int'
| |-ParmVarDecl 0x133102da8 <col:35, col:42> col:42 used response 'char **'
| `-CompoundStmt 0x131833360 <line:2:1, line:55:1>
|   |-DeclStmt 0x133102fc0 <line:3:5, col:23>
|   | `-VarDecl 0x133102f58 <col:5, col:19> col:19 used code 'unsigned char'
|   |-DeclStmt 0x133103058 <line:4:5, col:11>
|   | `-VarDecl 0x133102ff0 <col:5, col:9> col:9 used rc 'int'
|   |-DeclStmt 0x133103260 <line:5:5, col:24>
|   | `-VarDecl 0x133103110 <col:5, col:23> col:10 used msg 'char[128]' cinit
|   |   `-InitListExpr 0x1331031f0 <col:21, col:23> 'char[128]'
|   |     |-array_filler: ImplicitValueInitExpr 0x133103250 <<invalid sloc>> 'char'
|   |     `-ImplicitCastExpr 0x133103230 <col:22> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x133103178 <col:22> 'int' 0
|   |-IfStmt 0x133103370 <line:7:5, line:9:5>
|   | |-BinaryOperator 0x1331032f0 <line:7:9, col:16> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x133103278 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1331032d0 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x133103358 <col:22, line:9:5>
|   |   `-ReturnStmt 0x133103348 <line:8:9, col:16>
|   |     `-RecoveryExpr 0x133103328 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13310c888 <line:11:5, col:52> 'int' contains-errors '='
|   | |-DeclRefExpr 0x133103390 <col:5> 'int' lvalue Var 0x133102ff0 'rc' 'int'
|   | `-CallExpr 0x13310c848 <col:10, col:52> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13310c710 <col:10> 'int ()' Function 0x13310c658 'ssh_channel_read' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x13310c750 <col:27, col:32> '<dependent type>' contains-errors lvalue ->channel
|   |   | `-RecoveryExpr 0x13310c730 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x13310c7f0 <col:41, col:42> 'unsigned char *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x13310c798 <col:42> 'unsigned char' lvalue Var 0x133102f58 'code' 'unsigned char'
|   |   |-IntegerLiteral 0x13310c808 <col:48> 'int' 1
|   |   `-IntegerLiteral 0x13310c828 <col:51> 'int' 0
|   |-IfStmt 0x13310c9a0 <line:12:5, line:14:5>
|   | |-BinaryOperator 0x13310c920 <line:12:9, col:15> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x13310c8a8 <col:9> 'int' lvalue Var 0x133102ff0 'rc' 'int'
|   | | `-RecoveryExpr 0x13310c900 <col:15> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13310c988 <col:26, line:14:5>
|   |   `-ReturnStmt 0x13310c978 <line:13:9, col:16>
|   |     `-RecoveryExpr 0x13310c958 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13310ca98 <line:16:5, line:18:5>
|   | |-BinaryOperator 0x13310ca30 <line:16:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x13310ca18 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x13310ca00 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13310c9c0 <col:9> 'unsigned char' lvalue Var 0x133102f58 'code' 'unsigned char'
|   | | `-IntegerLiteral 0x13310c9e0 <col:17> 'int' 0
|   | `-CompoundStmt 0x13310ca80 <col:20, line:18:5>
|   |   `-ReturnStmt 0x13310ca70 <line:17:9, col:16>
|   |     `-IntegerLiteral 0x13310ca50 <col:16> 'int' 0
|   |-IfStmt 0x13310cf68 <line:20:5, line:25:5>
|   | |-BinaryOperator 0x13310cb28 <line:20:9, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x13310cb10 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x13310caf8 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13310cab8 <col:9> 'unsigned char' lvalue Var 0x133102f58 'code' 'unsigned char'
|   | | `-IntegerLiteral 0x13310cad8 <col:16> 'int' 2
|   | `-CompoundStmt 0x13310cf40 <col:19, line:25:5>
|   |   |-CallExpr 0x13310cdb0 <line:21:9, line:22:34> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13310cc28 <line:21:9> 'int ()' Function 0x13310cb70 'ssh_set_error' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x13310cc68 <col:23, col:28> '<dependent type>' contains-errors lvalue ->session
|   |   | | `-RecoveryExpr 0x13310cc48 <col:23> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x13310cd90 <col:37> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x13310cd10 <line:22:23> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x13310cd30 <col:30> 'unsigned char' lvalue Var 0x133102f58 'code' 'unsigned char'
|   |   |-BinaryOperator 0x13310ced8 <line:23:9, col:22> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x13310ce38 <col:9, col:14> '<dependent type>' contains-errors lvalue ->state
|   |   | | `-RecoveryExpr 0x13310ce10 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x13310cdf0 <col:9> 'int' lvalue ParmVar 0x133102cf0 'scp' 'int'
|   |   | `-RecoveryExpr 0x13310ceb8 <col:22> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x13310cf30 <line:24:9, col:16>
|   |     `-RecoveryExpr 0x13310cf10 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13310d180 <line:27:5, col:51> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13310cf88 <col:5> 'int' lvalue Var 0x133102ff0 'rc' 'int'
|   | `-CallExpr 0x13310d148 <col:10, col:51> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13310d088 <col:10> 'int ()' Function 0x13310cfd0 'ssh_scp_read_string' 'int ()'
|   |   |-RecoveryExpr 0x13310d0a8 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x13310d0c8 <col:35> 'char[128]' lvalue Var 0x133103110 'msg' 'char[128]'
|   |   `-UnaryExprOrTypeTraitExpr 0x13310d128 <col:40, col:50> 'unsigned long' sizeof
|   |     `-ParenExpr 0x13310d108 <col:46, col:50> 'char[128]' lvalue
|   |       `-DeclRefExpr 0x13310d0e8 <col:47> 'char[128]' lvalue Var 0x133103110 'msg' 'char[128]' non_odr_use_unevaluated
|   |-IfStmt 0x13310d298 <line:28:5, line:30:5>
|   | |-BinaryOperator 0x13310d218 <line:28:9, col:15> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x13310d1a0 <col:9> 'int' lvalue Var 0x133102ff0 'rc' 'int'
|   | | `-RecoveryExpr 0x13310d1f8 <col:15> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13310d280 <col:26, line:30:5>
|   |   `-ReturnStmt 0x13310d270 <line:29:9, col:16>
|   |     `-ImplicitCastExpr 0x13310d258 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x13310d238 <col:16> 'int' lvalue Var 0x133102ff0 'rc' 'int'
|   |-IfStmt 0x131832ec8 <line:33:5, line:42:5>
|   | |-BinaryOperator 0x13310d328 <line:33:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x13310d310 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x13310d2f8 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13310d2b8 <col:9> 'unsigned char' lvalue Var 0x133102f58 'code' 'unsigned char'
|   | | `-IntegerLiteral 0x13310d2d8 <col:17> 'int' 1
|   | `-CompoundStmt 0x131832e98 <col:20, line:42:5>
|   |   |-CallExpr 0x13310d488 <line:34:9, line:35:33> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13310d348 <line:34:9> 'int ()' Function 0x13310cb70 'ssh_set_error' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x13310d388 <col:23, col:28> '<dependent type>' contains-errors lvalue ->session
|   |   | | `-RecoveryExpr 0x13310d368 <col:23> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x13310d468 <col:37> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x13310d3e8 <line:35:23> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x13310d408 <col:30> 'char[128]' lvalue Var 0x133103110 'msg' 'char[128]'
|   |   |-CallExpr 0x131832678 <line:36:9, line:37:27> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13310d5a8 <line:36:9> 'int ()' Function 0x13310d4f0 'SSH_LOG' 'int ()'
|   |   | |-RecoveryExpr 0x131832658 <col:17> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x13310d5e0 <line:37:17> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x131832600 <col:24> 'char[128]' lvalue Var 0x133103110 'msg' 'char[128]'
|   |   |-IfStmt 0x131832e48 <line:38:9, line:40:9>
|   |   | |-ImplicitCastExpr 0x1318326d0 <line:38:13> 'char **' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1318326b0 <col:13> 'char **' lvalue ParmVar 0x133102da8 'response' 'char **'
|   |   | `-CompoundStmt 0x131832e30 <col:23, line:40:9>
|   |   |   `-BinaryOperator 0x131832e10 <line:39:13, col:35> 'char *' '='
|   |   |     |-UnaryOperator 0x131832720 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x131832708 <col:14> 'char **' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1318326e8 <col:14> 'char **' lvalue ParmVar 0x133102da8 'response' 'char **'
|   |   |     `-CallExpr 0x131832db8 <col:25, col:35> 'char *'
|   |   |       |-ImplicitCastExpr 0x131832da0 <col:25> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x131832d10 <col:25> 'char *(const char *)' Function 0x131832ba0 'strdup' 'char *(const char *)'
|   |   |       `-ImplicitCastExpr 0x131832df8 <col:32> 'const char *' <NoOp>
|   |   |         `-ImplicitCastExpr 0x131832de0 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |           `-DeclRefExpr 0x131832d30 <col:32> 'char[128]' lvalue Var 0x133103110 'msg' 'char[128]'
|   |   `-ReturnStmt 0x131832e88 <line:41:9, col:16>
|   |     `-IntegerLiteral 0x131832e68 <col:16> 'int' 1
|   |-IfStmt 0x1318332f8 <line:44:5, line:51:5>
|   | |-BinaryOperator 0x131832f58 <line:44:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x131832f40 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x131832f28 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x131832ee8 <col:9> 'unsigned char' lvalue Var 0x133102f58 'code' 'unsigned char'
|   | | `-IntegerLiteral 0x131832f08 <col:17> 'int' 2
|   | `-CompoundStmt 0x1318332d0 <col:20, line:51:5>
|   |   |-CallExpr 0x1318330b8 <line:45:9, line:46:33> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x131832f78 <line:45:9> 'int ()' Function 0x13310cb70 'ssh_set_error' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x131832fb8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->session
|   |   | | `-RecoveryExpr 0x131832f98 <col:23> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x131833098 <col:37> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x131833018 <line:46:23> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x131833038 <col:30> 'char[128]' lvalue Var 0x133103110 'msg' 'char[128]'
|   |   |-IfStmt 0x131833280 <line:47:9, line:49:9>
|   |   | |-ImplicitCastExpr 0x131833118 <line:47:13> 'char **' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1318330f8 <col:13> 'char **' lvalue ParmVar 0x133102da8 'response' 'char **'
|   |   | `-CompoundStmt 0x131833268 <col:23, line:49:9>
|   |   |   `-BinaryOperator 0x131833248 <line:48:13, col:35> 'char *' '='
|   |   |     |-UnaryOperator 0x131833168 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x131833150 <col:14> 'char **' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x131833130 <col:14> 'char **' lvalue ParmVar 0x133102da8 'response' 'char **'
|   |   |     `-CallExpr 0x1318331f0 <col:25, col:35> 'char *'
|   |   |       |-ImplicitCastExpr 0x1318331d8 <col:25> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x131833180 <col:25> 'char *(const char *)' Function 0x131832ba0 'strdup' 'char *(const char *)'
|   |   |       `-ImplicitCastExpr 0x131833230 <col:32> 'const char *' <NoOp>
|   |   |         `-ImplicitCastExpr 0x131833218 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |           `-DeclRefExpr 0x1318331a0 <col:32> 'char[128]' lvalue Var 0x133103110 'msg' 'char[128]'
|   |   `-ReturnStmt 0x1318332c0 <line:50:9, col:16>
|   |     `-IntegerLiteral 0x1318332a0 <col:16> 'int' 2
|   `-ReturnStmt 0x131833350 <line:54:5, col:12>
|     `-RecoveryExpr 0x131833330 <col:12> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x131832ba0 <line:39:25> col:25 implicit used strdup 'char *(const char *)' extern
  |-ParmVarDecl 0x131832ca0 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x131832c48 <<invalid sloc>> Implicit 950
