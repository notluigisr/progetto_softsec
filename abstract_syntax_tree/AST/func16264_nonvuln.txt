TranslationUnitDecl 0x148055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1480564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148055bd0 '__int128'
|-TypedefDecl 0x148056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148055bf0 'unsigned __int128'
|-TypedefDecl 0x148126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x148126000 'struct __NSConstantString_tag'
|   `-Record 0x148056580 '__NSConstantString_tag'
|-TypedefDecl 0x148126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148055d90 '__SVInt8_t'
|-TypedefDecl 0x148126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148055db0 '__SVInt16_t'
|-TypedefDecl 0x148126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148055dd0 '__SVInt32_t'
|-TypedefDecl 0x1481263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148055df0 '__SVInt64_t'
|-TypedefDecl 0x148126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148055e10 '__SVUint8_t'
|-TypedefDecl 0x1481264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148055e30 '__SVUint16_t'
|-TypedefDecl 0x148126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148055e50 '__SVUint32_t'
|-TypedefDecl 0x148126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148055e70 '__SVUint64_t'
|-TypedefDecl 0x1481265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148055e90 '__SVFloat16_t'
|-TypedefDecl 0x148126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1481266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148055ed0 '__SVFloat64_t'
|-TypedefDecl 0x148126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x148126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1481267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x148126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1481268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x148126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x148126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1481269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x148126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x148126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x148126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x148126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x148126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x148126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148056090 '__clang_svint8x3_t'
|-TypedefDecl 0x148126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1480560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x148126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1480560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x148126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1480560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x148126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x148126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x148126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x148126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x148126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x148127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1480561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x148127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1480561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1481278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1480561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x148127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1481279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148056230 '__clang_svint16x4_t'
|-TypedefDecl 0x148127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148056250 '__clang_svint32x4_t'
|-TypedefDecl 0x148127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148056270 '__clang_svint64x4_t'
|-TypedefDecl 0x148127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x148127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1480562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x148127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1480562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x148127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1480562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x148127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x148127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x148127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x148127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x148127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148056390 '__SVBool_t'
|-TypedefDecl 0x148127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1480563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x148127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1480563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x148127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1480563f0 '__SVCount_t'
|-TypedefDecl 0x148127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x148127fb0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
|-TypedefDecl 0x148128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x148127fb0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
`-FunctionDecl 0x1481283a8 <dataset_diviso_filec/func16264_nonvuln.c:1:1, line:28:1> line:1:1 invalid compile_tree_empty_check 'int (int *, int *, int, int *)'
  |-ParmVarDecl 0x148128128 <col:26, col:32> col:32 invalid node 'int *'
  |-ParmVarDecl 0x1481281a8 <col:38, col:47> col:47 referenced invalid reg 'int *'
  |-ParmVarDecl 0x148128228 <col:52, col:56> col:56 used empty_info 'int'
  |-ParmVarDecl 0x1481282a8 <col:68, col:77> col:77 invalid env 'int *'
  `-CompoundStmt 0x1481419f8 <line:2:1, line:28:1>
    |-DeclStmt 0x1481284f0 <line:3:3, col:8>
    | `-VarDecl 0x148128488 <col:3, col:7> col:7 used r 'int'
    |-DeclStmt 0x1481285f0 <line:4:3, col:49>
    | `-VarDecl 0x148128520 <col:3, col:35> col:7 used saved_num_null_check 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x1481285a8 <col:30, col:35> '<dependent type>' contains-errors lvalue ->num_null_check
    |     `-RecoveryExpr 0x148128588 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140809be8 <line:6:3, line:11:3>
    | |-BinaryOperator 0x148128680 <line:6:7, col:21> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x148128608 <col:7> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'
    | | `-RecoveryExpr 0x148128660 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x140809bb8 <col:40, line:11:3>
    |   |-BinaryOperator 0x1408097b0 <line:7:5, col:41> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1481286a0 <col:5> 'int' lvalue Var 0x148128488 'r' 'int'
    |   | `-CallExpr 0x140809780 <col:9, col:41> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1408096b8 <col:9> 'int ()' Function 0x140809600 'add_op' 'int ()'
    |   |   |-RecoveryExpr 0x1408096d8 <col:16> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x140809760 <col:21> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x140809890 <line:8:5, col:24>
    |   | |-BinaryOperator 0x140809828 <col:9, col:14> 'int' '!='
    |   | | |-ImplicitCastExpr 0x140809810 <col:9> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1408097d0 <col:9> 'int' lvalue Var 0x148128488 'r' 'int'
    |   | | `-IntegerLiteral 0x1408097f0 <col:14> 'int' 0
    |   | `-ReturnStmt 0x140809880 <col:17, col:24>
    |   |   `-ImplicitCastExpr 0x140809868 <col:24> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x140809848 <col:24> 'int' lvalue Var 0x148128488 'r' 'int'
    |   |-BinaryOperator 0x140809af0 <line:9:5, col:44> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x140809a40 <col:5, col:33> '<dependent type>' contains-errors lvalue .mem
    |   | | `-CXXDependentScopeMemberExpr 0x1408099f8 <col:5, col:15> '<dependent type>' contains-errors lvalue ->empty_check_start
    |   | |   `-CallExpr 0x1408099d0 <col:5, col:12> '<dependent type>' contains-errors
    |   | |     |-DeclRefExpr 0x140809990 <col:5> 'int ()' Function 0x1408098d8 'COP' 'int ()'
    |   | |     `-RecoveryExpr 0x1408099b0 <col:9> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x140809aa8 <col:39, col:44> '<dependent type>' contains-errors lvalue ->num_null_check
    |   |   `-RecoveryExpr 0x140809a88 <col:39> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x140809ba0 <line:10:5, col:24> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x140809b58 <col:5, col:10> '<dependent type>' contains-errors lvalue ->num_null_check
    |       `-RecoveryExpr 0x140809b30 <col:5> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x140809b10 <col:5> 'int *' lvalue ParmVar 0x1481281a8 'reg' 'int *'
    |-BinaryOperator 0x140809dc0 <line:13:3, col:34> 'int' contains-errors '='
    | |-DeclRefExpr 0x140809c08 <col:3> 'int' lvalue Var 0x148128488 'r' 'int'
    | `-CallExpr 0x140809d88 <col:7, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x140809d08 <col:7> 'int ()' Function 0x140809c50 'compile_tree' 'int ()'
    |   |-RecoveryExpr 0x140809d28 <col:20> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x140809d48 <col:26> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x140809d68 <col:31> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140809ea0 <line:14:3, col:22>
    | |-BinaryOperator 0x140809e38 <col:7, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x140809e20 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x140809de0 <col:7> 'int' lvalue Var 0x148128488 'r' 'int'
    | | `-IntegerLiteral 0x140809e00 <col:12> 'int' 0
    | `-ReturnStmt 0x140809e90 <col:15, col:22>
    |   `-ImplicitCastExpr 0x140809e78 <col:22> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x140809e58 <col:22> 'int' lvalue Var 0x148128488 'r' 'int'
    |-IfStmt 0x148141990 <line:16:3, line:26:3>
    | |-BinaryOperator 0x140809f38 <line:16:7, col:21> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x140809ec0 <col:7> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'
    | | `-RecoveryExpr 0x140809f18 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148141968 <col:40, line:26:3>
    |   |-IfStmt 0x14080a518 <line:17:5, line:22:52> has_else
    |   | |-BinaryOperator 0x140809fd0 <line:17:9, col:23> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x140809f58 <col:9> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'
    |   | | `-RecoveryExpr 0x140809fb0 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x14080a108 <line:18:7, col:41> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x140809ff0 <col:7> 'int' lvalue Var 0x148128488 'r' 'int'
    |   | | `-CallExpr 0x14080a0d8 <col:11, col:41> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x14080a010 <col:11> 'int ()' Function 0x140809600 'add_op' 'int ()'
    |   | |   |-RecoveryExpr 0x14080a030 <col:18> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x14080a0b8 <col:23> '<dependent type>' contains-errors lvalue
    |   | `-IfStmt 0x14080a4e8 <line:19:10, line:22:52> has_else
    |   |   |-BinaryOperator 0x14080a1a0 <line:19:14, col:28> 'int' contains-errors '=='
    |   |   | |-DeclRefExpr 0x14080a128 <col:14> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'
    |   |   | `-RecoveryExpr 0x14080a180 <col:28> '<dependent type>' contains-errors lvalue
    |   |   |-BinaryOperator 0x14080a2d8 <line:20:7, col:47> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x14080a1c0 <col:7> 'int' lvalue Var 0x148128488 'r' 'int'
    |   |   | `-CallExpr 0x14080a2a8 <col:11, col:47> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x14080a1e0 <col:11> 'int ()' Function 0x140809600 'add_op' 'int ()'
    |   |   |   |-RecoveryExpr 0x14080a200 <col:18> '<dependent type>' contains-errors lvalue
    |   |   |   `-RecoveryExpr 0x14080a288 <col:23> '<dependent type>' contains-errors lvalue
    |   |   `-IfStmt 0x14080a4c8 <line:21:10, line:22:52>
    |   |     |-BinaryOperator 0x14080a370 <line:21:14, col:28> 'int' contains-errors '=='
    |   |     | |-DeclRefExpr 0x14080a2f8 <col:14> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'
    |   |     | `-RecoveryExpr 0x14080a350 <col:28> '<dependent type>' contains-errors lvalue
    |   |     `-BinaryOperator 0x14080a4a8 <line:22:7, col:52> 'int' contains-errors '='
    |   |       |-DeclRefExpr 0x14080a390 <col:7> 'int' lvalue Var 0x148128488 'r' 'int'
    |   |       `-CallExpr 0x14080a478 <col:11, col:52> '<dependent type>' contains-errors
    |   |         |-DeclRefExpr 0x14080a3b0 <col:11> 'int ()' Function 0x140809600 'add_op' 'int ()'
    |   |         |-RecoveryExpr 0x14080a3d0 <col:18> '<dependent type>' contains-errors lvalue
    |   |         `-RecoveryExpr 0x14080a458 <col:23> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x148141810 <line:24:5, col:24>
    |   | |-BinaryOperator 0x14080a5a0 <col:9, col:14> 'int' '!='
    |   | | |-ImplicitCastExpr 0x14080a588 <col:9> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14080a548 <col:9> 'int' lvalue Var 0x148128488 'r' 'int'
    |   | | `-IntegerLiteral 0x14080a568 <col:14> 'int' 0
    |   | `-ReturnStmt 0x148141800 <col:17, col:24>
    |   |   `-ImplicitCastExpr 0x14080a5e0 <col:24> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14080a5c0 <col:24> 'int' lvalue Var 0x148128488 'r' 'int'
    |   `-BinaryOperator 0x148141948 <line:25:5, col:37> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x1481418e0 <col:5, col:31> '<dependent type>' contains-errors lvalue .mem
    |     | `-CXXDependentScopeMemberExpr 0x148141898 <col:5, col:15> '<dependent type>' contains-errors lvalue ->empty_check_end
    |     |   `-CallExpr 0x148141870 <col:5, col:12> '<dependent type>' contains-errors
    |     |     |-DeclRefExpr 0x148141830 <col:5> 'int ()' Function 0x1408098d8 'COP' 'int ()'
    |     |     `-RecoveryExpr 0x148141850 <col:9> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x148141928 <col:37> 'int' contains-errors lvalue Var 0x148128520 'saved_num_null_check' 'int'
    `-ReturnStmt 0x1481419e8 <line:27:3, col:10>
      `-ImplicitCastExpr 0x1481419d0 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1481419b0 <col:10> 'int' lvalue Var 0x148128488 'r' 'int'
