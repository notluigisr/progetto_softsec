TranslationUnitDecl 0x15a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a855bd0 '__int128'
|-TypedefDecl 0x15a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a855bf0 'unsigned __int128'
|-TypedefDecl 0x15b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x15a856580 '__NSConstantString_tag'
|-TypedefDecl 0x15b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a855d90 '__SVInt8_t'
|-TypedefDecl 0x15b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a855db0 '__SVInt16_t'
|-TypedefDecl 0x15b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a855dd0 '__SVInt32_t'
|-TypedefDecl 0x15b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a855df0 '__SVInt64_t'
|-TypedefDecl 0x15b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a855e10 '__SVUint8_t'
|-TypedefDecl 0x15b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a855e30 '__SVUint16_t'
|-TypedefDecl 0x15b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a855e50 '__SVUint32_t'
|-TypedefDecl 0x15b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a855e70 '__SVUint64_t'
|-TypedefDecl 0x15b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a855e90 '__SVFloat16_t'
|-TypedefDecl 0x15b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a856390 '__SVBool_t'
|-TypedefDecl 0x15b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a8563f0 '__SVCount_t'
|-TypedefDecl 0x15b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b00dbb0 'char *'
|   `-BuiltinType 0x15a8556b0 'char'
|-TypedefDecl 0x15b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b00dbb0 'char *'
|   `-BuiltinType 0x15a8556b0 'char'
`-FunctionDecl 0x15b00ddd0 <dataset_diviso_filec/func10577_nonvuln.c:1:1, line:7:1> line:1:20 AffineArgsToCoefficients 'void (double *)' static inline
  |-ParmVarDecl 0x15b00dd08 <col:45, col:53> col:53 used affine 'double *'
  `-CompoundStmt 0x15b026b50 <line:2:1, line:7:1>
    |-DeclStmt 0x15b00dfe0 <line:4:3, col:16>
    | `-VarDecl 0x15b00df78 <col:3, col:15> col:10 used tmp 'double[4]'
    |-BinaryOperator 0x15b00e100 <line:5:3, col:18> 'double' '='
    | |-ArraySubscriptExpr 0x15b00e050 <col:3, col:8> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b00e038 <col:3> 'double *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x15b00dff8 <col:3> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    | | `-IntegerLiteral 0x15b00e018 <col:7> 'int' 0
    | `-ImplicitCastExpr 0x15b00e0e8 <col:10, col:18> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b00e0c8 <col:10, col:18> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b00e0b0 <col:10> 'double *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b00e070 <col:10> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    |     `-IntegerLiteral 0x15b00e090 <col:17> 'int' 1
    |-BinaryOperator 0x15b00e228 <col:21, col:36> 'double' '='
    | |-ArraySubscriptExpr 0x15b00e178 <col:21, col:26> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b00e160 <col:21> 'double *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x15b00e120 <col:21> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    | | `-IntegerLiteral 0x15b00e140 <col:25> 'int' 1
    | `-ImplicitCastExpr 0x15b00e210 <col:28, col:36> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b00e1f0 <col:28, col:36> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b00e1d8 <col:28> 'double *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b00e198 <col:28> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    |     `-IntegerLiteral 0x15b00e1b8 <col:35> 'int' 2
    |-BinaryOperator 0x15b00e350 <col:39, col:54> 'double' '='
    | |-ArraySubscriptExpr 0x15b00e2a0 <col:39, col:44> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b00e288 <col:39> 'double *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x15b00e248 <col:39> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    | | `-IntegerLiteral 0x15b00e268 <col:43> 'int' 2
    | `-ImplicitCastExpr 0x15b00e338 <col:46, col:54> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b00e318 <col:46, col:54> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b00e300 <col:46> 'double *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b00e2c0 <col:46> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    |     `-IntegerLiteral 0x15b00e2e0 <col:53> 'int' 3
    |-BinaryOperator 0x15b026690 <col:57, col:72> 'double' '='
    | |-ArraySubscriptExpr 0x15b00e3c8 <col:57, col:62> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b00e3b0 <col:57> 'double *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x15b00e370 <col:57> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    | | `-IntegerLiteral 0x15b00e390 <col:61> 'int' 3
    | `-ImplicitCastExpr 0x15b026678 <col:64, col:72> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b026658 <col:64, col:72> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b026640 <col:64> 'double *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b026600 <col:64> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    |     `-IntegerLiteral 0x15b026620 <col:71> 'int' 4
    |-BinaryOperator 0x15b0267b8 <line:6:3, col:18> 'double' '='
    | |-ArraySubscriptExpr 0x15b026708 <col:3, col:11> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b0266f0 <col:3> 'double *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b0266b0 <col:3> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    | | `-IntegerLiteral 0x15b0266d0 <col:10> 'int' 3
    | `-ImplicitCastExpr 0x15b0267a0 <col:13, col:18> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b026780 <col:13, col:18> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b026768 <col:13> 'double *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x15b026728 <col:13> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    |     `-IntegerLiteral 0x15b026748 <col:17> 'int' 0
    |-BinaryOperator 0x15b0268e0 <col:21, col:36> 'double' '='
    | |-ArraySubscriptExpr 0x15b026830 <col:21, col:29> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b026818 <col:21> 'double *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b0267d8 <col:21> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    | | `-IntegerLiteral 0x15b0267f8 <col:28> 'int' 1
    | `-ImplicitCastExpr 0x15b0268c8 <col:31, col:36> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b0268a8 <col:31, col:36> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b026890 <col:31> 'double *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x15b026850 <col:31> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    |     `-IntegerLiteral 0x15b026870 <col:35> 'int' 1
    |-BinaryOperator 0x15b026a08 <col:39, col:54> 'double' '='
    | |-ArraySubscriptExpr 0x15b026958 <col:39, col:47> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b026940 <col:39> 'double *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b026900 <col:39> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    | | `-IntegerLiteral 0x15b026920 <col:46> 'int' 4
    | `-ImplicitCastExpr 0x15b0269f0 <col:49, col:54> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b0269d0 <col:49, col:54> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b0269b8 <col:49> 'double *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x15b026978 <col:49> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    |     `-IntegerLiteral 0x15b026998 <col:53> 'int' 2
    `-BinaryOperator 0x15b026b30 <col:57, col:72> 'double' '='
      |-ArraySubscriptExpr 0x15b026a80 <col:57, col:65> 'double' lvalue
      | |-ImplicitCastExpr 0x15b026a68 <col:57> 'double *' <LValueToRValue>
      | | `-DeclRefExpr 0x15b026a28 <col:57> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
      | `-IntegerLiteral 0x15b026a48 <col:64> 'int' 2
      `-ImplicitCastExpr 0x15b026b18 <col:67, col:72> 'double' <LValueToRValue>
        `-ArraySubscriptExpr 0x15b026af8 <col:67, col:72> 'double' lvalue
          |-ImplicitCastExpr 0x15b026ae0 <col:67> 'double *' <ArrayToPointerDecay>
          | `-DeclRefExpr 0x15b026aa0 <col:67> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
          `-IntegerLiteral 0x15b026ac0 <col:71> 'int' 3
