TranslationUnitDecl 0x144855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1448564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144855bd0 '__int128'
|-TypedefDecl 0x144856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144855bf0 'unsigned __int128'
|-TypedefDecl 0x14500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14500bc00 'struct __NSConstantString_tag'
|   `-Record 0x144856580 '__NSConstantString_tag'
|-TypedefDecl 0x14500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144855d90 '__SVInt8_t'
|-TypedefDecl 0x14500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144855db0 '__SVInt16_t'
|-TypedefDecl 0x14500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144855dd0 '__SVInt32_t'
|-TypedefDecl 0x14500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144855df0 '__SVInt64_t'
|-TypedefDecl 0x14500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144855e10 '__SVUint8_t'
|-TypedefDecl 0x14500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144855e30 '__SVUint16_t'
|-TypedefDecl 0x14500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144855e50 '__SVUint32_t'
|-TypedefDecl 0x14500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144855e70 '__SVUint64_t'
|-TypedefDecl 0x14500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144855e90 '__SVFloat16_t'
|-TypedefDecl 0x14500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1448560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1448560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1448560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1448561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1448561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1448561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1448562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1448562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1448562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144856390 '__SVBool_t'
|-TypedefDecl 0x14500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1448563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1448563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1448563f0 '__SVCount_t'
|-TypedefDecl 0x14500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
|-TypedefDecl 0x14500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
`-FunctionDecl 0x14500e0c8 <dataset_diviso_filec/func1845_vuln.c:1:1, line:38:1> line:1:20 invalid parse_query 'int (int *, int *, const int *, const int *, const int *, int *)' static
  |-ParmVarDecl 0x14500dd28 <col:32, col:53> col:53 referenced invalid q 'int *'
  |-ParmVarDecl 0x14500dda8 <col:56, col:67> col:67 invalid pool 'int *'
  |-ParmVarDecl 0x14500de28 <line:2:11, col:29> col:29 invalid pkt 'const int *'
  |-ParmVarDecl 0x14500dea8 <col:34, col:52> col:52 invalid start 'const int *'
  |-ParmVarDecl 0x14500df28 <line:3:11, col:29> col:29 invalid max 'const int *'
  |-ParmVarDecl 0x14500dfa8 <col:34, col:39> col:39 used parsed_len 'int *'
  `-CompoundStmt 0x14502aaf8 <line:4:1, line:38:1>
    |-DeclStmt 0x14500e240 <line:5:5, col:32>
    | `-VarDecl 0x14500e1b8 <col:5, col:23> col:23 referenced invalid p 'const int *'
    |-DeclStmt 0x14500e370 <line:6:5, col:32>
    | |-VarDecl 0x14500e270 <col:5, col:9> col:9 used name_len 'int'
    | `-VarDecl 0x14500e2f0 <col:5, col:19> col:19 used name_part_len 'int'
    |-IfStmt 0x145027738 <line:11:5, line:12:9>
    | |-BinaryOperator 0x1450276d0 <line:11:9, col:19> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x145027690 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1450276b0 <col:19> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x145027728 <line:12:2, col:9>
    |   `-RecoveryExpr 0x145027708 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x145027a38 <line:15:5, col:57> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1450277e8 <col:5, col:13> '<dependent type>' contains-errors lvalue .ptr
    | | `-CXXDependentScopeMemberExpr 0x1450277a0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->name
    | |   `-RecoveryExpr 0x145027778 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x145027758 <col:5> 'int *' lvalue ParmVar 0x14500dd28 'q' 'int *'
    | `-CStyleCastExpr 0x145027a10 <col:19, col:57> 'char *' contains-errors <Dependent>
    |   `-CallExpr 0x1450279c8 <col:27, col:57> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x145027910 <col:27> 'int ()' Function 0x145027858 'pj_pool_alloc' 'int ()'
    |     |-RecoveryExpr 0x145027930 <col:41> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x1450279a8 <col:47, col:56> 'int' '+'
    |       |-ImplicitCastExpr 0x145027990 <col:47> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x145027950 <col:47> 'int' lvalue Var 0x14500e270 'name_len' 'int'
    |       `-IntegerLiteral 0x145027970 <col:56> 'int' 4
    |-BinaryOperator 0x145027b50 <line:16:5, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x145027ae8 <col:5, col:13> '<dependent type>' contains-errors lvalue .slen
    | | `-CXXDependentScopeMemberExpr 0x145027aa0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->name
    | |   `-RecoveryExpr 0x145027a78 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x145027a58 <col:5> 'int *' lvalue ParmVar 0x14500dd28 'q' 'int *'
    | `-IntegerLiteral 0x145027b30 <col:20> 'int' 0
    |-IfStmt 0x145027eb0 <line:20:5, line:21:9>
    | |-BinaryOperator 0x145027e48 <line:20:9, col:19> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x145027e08 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x145027e28 <col:19> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x145027ea0 <line:21:2, col:9>
    |   `-RecoveryExpr 0x145027e80 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x145027f98 <line:23:5, col:31> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x145027ef0 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x145027ed0 <col:5> 'const int *' lvalue Var 0x14500e1b8 'p' 'const int *'
    | `-ParenExpr 0x145027f78 <col:9, col:31> '<dependent type>' contains-errors
    |   `-BinaryOperator 0x145027f58 <col:10, col:18> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x145027f18 <col:10> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x145027f38 <col:18> 'int' lvalue Var 0x14500e2f0 'name_part_len' 'int'
    |-CallExpr 0x145028178 <line:26:5, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145028098 <col:5> 'int ()' Function 0x145027fe0 'pj_memcpy' 'int ()'
    | |-UnaryOperator 0x145028120 <col:15, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x1450280d8 <col:16, col:19> '<dependent type>' contains-errors lvalue ->type
    | |   `-RecoveryExpr 0x1450280b8 <col:16> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x145028138 <col:25> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x145028158 <col:28> 'int' 2
    |-BinaryOperator 0x1450283d0 <line:27:5, col:31> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1450281f8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->type
    | | `-RecoveryExpr 0x1450281d0 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1450281b0 <col:5> 'int *' lvalue ParmVar 0x14500dd28 'q' 'int *'
    | `-CallExpr 0x1450283a8 <col:15, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x145028320 <col:15> 'int ()' Function 0x145028268 'pj_ntohs' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x145028360 <col:24, col:27> '<dependent type>' contains-errors lvalue ->type
    |     `-RecoveryExpr 0x145028340 <col:24> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x14502a668 <line:28:5, col:10> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x14502a620 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14502a600 <col:5> 'const int *' lvalue Var 0x14500e1b8 'p' 'const int *'
    | `-IntegerLiteral 0x14502a648 <col:10> 'int' 2
    |-CallExpr 0x14502a778 <line:31:5, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14502a698 <col:5> 'int ()' Function 0x145027fe0 'pj_memcpy' 'int ()'
    | |-UnaryOperator 0x14502a720 <col:15, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x14502a6d8 <col:16, col:19> '<dependent type>' contains-errors lvalue ->dnsclass
    | |   `-RecoveryExpr 0x14502a6b8 <col:16> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x14502a738 <col:29> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14502a758 <col:32> 'int' 2
    |-BinaryOperator 0x14502a8f0 <line:32:5, col:39> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14502a7f8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->dnsclass
    | | `-RecoveryExpr 0x14502a7d0 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14502a7b0 <col:5> 'int *' lvalue ParmVar 0x14500dd28 'q' 'int *'
    | `-CallExpr 0x14502a8c8 <col:19, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14502a840 <col:19> 'int ()' Function 0x145028268 'pj_ntohs' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x14502a880 <col:28, col:31> '<dependent type>' contains-errors lvalue ->dnsclass
    |     `-RecoveryExpr 0x14502a860 <col:28> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x14502a978 <line:33:5, col:10> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x14502a930 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14502a910 <col:5> 'const int *' lvalue Var 0x14500e1b8 'p' 'const int *'
    | `-IntegerLiteral 0x14502a958 <col:10> 'int' 2
    `-BinaryOperator 0x14502aad8 <line:35:5, col:34> 'int' contains-errors '='
      |-UnaryOperator 0x14502a9e0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x14502a9c8 <col:6> 'int *' <LValueToRValue>
      |   `-DeclRefExpr 0x14502a9a8 <col:6> 'int *' lvalue ParmVar 0x14500dfa8 'parsed_len' 'int *'
      `-CStyleCastExpr 0x14502aab0 <col:19, col:34> 'int' contains-errors <Dependent>
        `-ParenExpr 0x14502aa90 <col:24, col:34> '<dependent type>' contains-errors
          `-BinaryOperator 0x14502aa38 <col:25, col:29> '<dependent type>' contains-errors '-'
            |-RecoveryExpr 0x14502a9f8 <col:25> '<dependent type>' contains-errors lvalue
            `-RecoveryExpr 0x14502aa18 <col:29> '<dependent type>' contains-errors lvalue
