TranslationUnitDecl 0x140055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1400564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x140055bd0 '__int128'
|-TypedefDecl 0x140056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x140055bf0 'unsigned __int128'
|-TypedefDecl 0x140126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x140126000 'struct __NSConstantString_tag'
|   `-Record 0x140056580 '__NSConstantString_tag'
|-TypedefDecl 0x140126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140055d90 '__SVInt8_t'
|-TypedefDecl 0x140126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x140055db0 '__SVInt16_t'
|-TypedefDecl 0x140126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x140055dd0 '__SVInt32_t'
|-TypedefDecl 0x1401263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x140055df0 '__SVInt64_t'
|-TypedefDecl 0x140126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140055e10 '__SVUint8_t'
|-TypedefDecl 0x1401264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140055e30 '__SVUint16_t'
|-TypedefDecl 0x140126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140055e50 '__SVUint32_t'
|-TypedefDecl 0x140126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140055e70 '__SVUint64_t'
|-TypedefDecl 0x1401265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140055e90 '__SVFloat16_t'
|-TypedefDecl 0x140126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x140055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1401266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x140055ed0 '__SVFloat64_t'
|-TypedefDecl 0x140126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x140055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x140126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1401267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x140126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1401268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x140126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x140126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x140055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1401269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x140055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x140126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x140055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x140126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x140126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x140126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x140126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x140126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140056090 '__clang_svint8x3_t'
|-TypedefDecl 0x140126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1400560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x140126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1400560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x140126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1400560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x140126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x140126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x140126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x140126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x140126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x140127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1400561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x140127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1400561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1401278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1400561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x140127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1401279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140056230 '__clang_svint16x4_t'
|-TypedefDecl 0x140127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140056250 '__clang_svint32x4_t'
|-TypedefDecl 0x140127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140056270 '__clang_svint64x4_t'
|-TypedefDecl 0x140127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x140127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1400562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x140127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1400562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x140127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1400562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x140127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x140127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x140127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x140127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x140127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140056390 '__SVBool_t'
|-TypedefDecl 0x140127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1400563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x140127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1400563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x140127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1400563f0 '__SVCount_t'
|-TypedefDecl 0x140127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x140127fb0 'char *'
|   `-BuiltinType 0x1400556b0 'char'
|-TypedefDecl 0x140128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x140127fb0 'char *'
|   `-BuiltinType 0x1400556b0 'char'
`-FunctionDecl 0x138808af8 <dataset_diviso_filec/func24034_nonvuln.c:1:1, line:29:1> line:1:1 invalid iter_fill_rtt 'int (struct iter_env *, struct module_env *, int *, int, int, int, struct delegpt *, int *, struct sock_list *, int *)'
  |-ParmVarDecl 0x140128648 <col:15, col:32> col:32 used iter_env 'struct iter_env *'
  |-ParmVarDecl 0x138808228 <col:42, col:61> col:61 used env 'struct module_env *'
  |-ParmVarDecl 0x1388082f8 <line:2:2, col:11> col:11 invalid name 'int *'
  |-ParmVarDecl 0x138808378 <col:17, col:24> col:24 invalid namelen 'int'
  |-ParmVarDecl 0x1388083f8 <col:33, col:42> col:42 invalid qtype 'int'
  |-ParmVarDecl 0x138808478 <col:49, col:56> col:56 invalid now 'int'
  |-ParmVarDecl 0x138808648 <line:3:2, col:18> col:18 used dp 'struct delegpt *'
  |-ParmVarDecl 0x1388086c8 <col:22, col:27> col:27 used best_rtt 'int *'
  |-ParmVarDecl 0x138808898 <col:37, col:55> col:55 used blacklist 'struct sock_list *'
  |-ParmVarDecl 0x138808918 <line:4:2, col:10> col:10 invalid num_suitable_results 'int *'
  `-CompoundStmt 0x13880b1f0 <line:5:1, line:29:1>
    |-DeclStmt 0x138808c90 <line:6:2, col:16>
    | `-VarDecl 0x138808c08 <col:2, col:15> col:6 used got_it 'int' cinit
    |   `-IntegerLiteral 0x138808c70 <col:15> 'int' 0
    |-DeclStmt 0x138808e98 <line:7:2, col:24>
    | |-RecordDecl 0x138808ca8 <col:2, col:9> col:9 struct delegpt_addr
    | `-VarDecl 0x138808e18 <col:2, col:23> col:23 used a 'struct delegpt_addr *'
    |-BinaryOperator 0x138808f20 <line:8:2, col:26> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x138808ee8 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x138808ed0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x138808eb0 <col:3> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x138808f00 <col:26> 'int' 0
    |-IfStmt 0x138808fd0 <line:10:2, line:11:10>
    | |-RecoveryExpr 0x138808f78 <line:10:5, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x138808f40 <col:5> 'struct delegpt *' lvalue ParmVar 0x138808648 'dp' 'struct delegpt *'
    | `-ReturnStmt 0x138808fc0 <line:11:3, col:10>
    |   `-IntegerLiteral 0x138808fa0 <col:10> 'int' 0
    |-ForStmt 0x13880b170 <line:12:2, line:27:2>
    | |-BinaryOperator 0x138809070 <line:12:6, col:12> 'struct delegpt_addr *' contains-errors '='
    | | |-DeclRefExpr 0x138808ff0 <col:6> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    | | `-RecoveryExpr 0x138809048 <col:8, col:12> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x138809010 <col:8> 'struct delegpt *' lvalue ParmVar 0x138808648 'dp' 'struct delegpt *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x1388090b0 <col:25> 'struct delegpt_addr *' <LValueToRValue>
    | | `-DeclRefExpr 0x138809090 <col:25> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    | |-BinaryOperator 0x138809148 <col:28, col:35> 'struct delegpt_addr *' contains-errors '='
    | | |-DeclRefExpr 0x1388090c8 <col:28> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    | | `-RecoveryExpr 0x138809120 <col:32, col:35> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1388090e8 <col:32> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    | `-CompoundStmt 0x13880b150 <col:48, line:27:2>
    |   |-BinaryOperator 0x13880a8b8 <line:13:3, line:14:32> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x1388091a0 <line:13:3, col:6> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x138809168 <col:3> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    |   | `-CallExpr 0x13880a860 <col:16, line:14:32> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13880a760 <line:13:16> 'int ()' Function 0x13880a6a8 'iter_filter_unsuitable' 'int ()'
    |   |   |-DeclRefExpr 0x13880a780 <col:39> 'struct iter_env *' lvalue ParmVar 0x140128648 'iter_env' 'struct iter_env *'
    |   |   |-DeclRefExpr 0x13880a7a0 <col:49> 'struct module_env *' lvalue ParmVar 0x138808228 'env' 'struct module_env *'
    |   |   |-RecoveryExpr 0x13880a7c0 <line:14:4> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x13880a7e0 <col:10> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x13880a800 <col:19> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x13880a820 <col:26> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13880a840 <col:31> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    |   `-IfStmt 0x13880b130 <line:15:3, line:26:3>
    |     |-BinaryOperator 0x13880a970 <line:15:6, col:21> 'int' contains-errors '!='
    |     | |-RecoveryExpr 0x13880a910 <col:6, col:9> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x13880a8d8 <col:6> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    |     | `-UnaryOperator 0x13880a958 <col:20, col:21> 'int' prefix '-'
    |     |   `-IntegerLiteral 0x13880a938 <col:21> 'int' 1
    |     `-CompoundStmt 0x13880b108 <col:24, line:26:3>
    |       |-IfStmt 0x13880acb8 <line:16:4, line:17:19>
    |       | |-CallExpr 0x13880ab88 <line:16:7, col:53> '<dependent type>' contains-errors
    |       | | |-DeclRefExpr 0x13880aa70 <col:7> 'int ()' Function 0x13880a9b8 'sock_list_find' 'int ()'
    |       | | |-DeclRefExpr 0x13880aa90 <col:22> 'struct sock_list *' lvalue ParmVar 0x138808898 'blacklist' 'struct sock_list *'
    |       | | |-UnaryOperator 0x13880ab10 <col:33, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | | | `-RecoveryExpr 0x13880aae8 <col:34, col:37> '<dependent type>' contains-errors lvalue
    |       | | |   `-DeclRefExpr 0x13880aab0 <col:34> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    |       | | `-RecoveryExpr 0x13880ab60 <col:43, col:46> '<dependent type>' contains-errors lvalue
    |       | |   `-DeclRefExpr 0x13880ab28 <col:43> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    |       | `-CompoundAssignOperator 0x13880ac88 <line:17:5, col:19> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |   |-RecoveryExpr 0x13880abf8 <col:5, col:8> '<dependent type>' contains-errors lvalue
    |       |   | `-DeclRefExpr 0x13880abc0 <col:5> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    |       |   `-RecoveryExpr 0x13880ac68 <col:19> '<dependent type>' contains-errors lvalue
    |       |-IfStmt 0x13880b050 <line:19:4, line:24:4> has_else
    |       | |-UnaryOperator 0x13880ad10 <line:19:7, col:8> 'int' prefix '!' cannot overflow
    |       | | `-ImplicitCastExpr 0x13880acf8 <col:8> 'int' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x13880acd8 <col:8> 'int' lvalue Var 0x138808c08 'got_it' 'int'
    |       | |-CompoundStmt 0x13880ae58 <col:16, line:22:4>
    |       | | |-BinaryOperator 0x13880add8 <line:20:5, col:20> 'int' contains-errors '='
    |       | | | |-UnaryOperator 0x13880ad60 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    |       | | | | `-ImplicitCastExpr 0x13880ad48 <col:6> 'int *' <LValueToRValue>
    |       | | | |   `-DeclRefExpr 0x13880ad28 <col:6> 'int *' lvalue ParmVar 0x1388086c8 'best_rtt' 'int *'
    |       | | | `-RecoveryExpr 0x13880adb0 <col:17, col:20> '<dependent type>' contains-errors lvalue
    |       | | |   `-DeclRefExpr 0x13880ad78 <col:17> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    |       | | `-BinaryOperator 0x13880ae38 <line:21:5, col:14> 'int' '='
    |       | |   |-DeclRefExpr 0x13880adf8 <col:5> 'int' lvalue Var 0x138808c08 'got_it' 'int'
    |       | |   `-IntegerLiteral 0x13880ae18 <col:14> 'int' 1
    |       | `-IfStmt 0x13880b030 <line:22:11, line:24:4>
    |       |   |-BinaryOperator 0x13880af28 <line:22:14, col:28> 'int' contains-errors '<'
    |       |   | |-RecoveryExpr 0x13880aeb0 <col:14, col:17> '<dependent type>' contains-errors lvalue
    |       |   | | `-DeclRefExpr 0x13880ae78 <col:14> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    |       |   | `-UnaryOperator 0x13880af10 <col:27, col:28> 'int' lvalue prefix '*' cannot overflow
    |       |   |   `-ImplicitCastExpr 0x13880aef8 <col:28> 'int *' <LValueToRValue>
    |       |   |     `-DeclRefExpr 0x13880aed8 <col:28> 'int *' lvalue ParmVar 0x1388086c8 'best_rtt' 'int *'
    |       |   `-CompoundStmt 0x13880b018 <col:38, line:24:4>
    |       |     `-BinaryOperator 0x13880aff8 <line:23:5, col:20> 'int' contains-errors '='
    |       |       |-UnaryOperator 0x13880af80 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    |       |       | `-ImplicitCastExpr 0x13880af68 <col:6> 'int *' <LValueToRValue>
    |       |       |   `-DeclRefExpr 0x13880af48 <col:6> 'int *' lvalue ParmVar 0x1388086c8 'best_rtt' 'int *'
    |       |       `-RecoveryExpr 0x13880afd0 <col:17, col:20> '<dependent type>' contains-errors lvalue
    |       |         `-DeclRefExpr 0x13880af98 <col:17> 'struct delegpt_addr *' lvalue Var 0x138808e18 'a' 'struct delegpt_addr *'
    |       `-UnaryOperator 0x13880b0f0 <line:25:4, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    |         `-ParenExpr 0x13880b0d0 <col:4, col:26> '<dependent type>' contains-errors
    |           `-UnaryOperator 0x13880b0b8 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    |             `-ImplicitCastExpr 0x13880b0a0 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    |               `-RecoveryExpr 0x13880b080 <col:6> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13880b1e0 <line:28:2, col:9>
      `-ImplicitCastExpr 0x13880b1c8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13880b1a8 <col:9> 'int' lvalue Var 0x138808c08 'got_it' 'int'
