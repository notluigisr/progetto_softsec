TranslationUnitDecl 0x134855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1348564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x134855bd0 '__int128'
|-TypedefDecl 0x134856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x134855bf0 'unsigned __int128'
|-TypedefDecl 0x134926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x134926800 'struct __NSConstantString_tag'
|   `-Record 0x134856580 '__NSConstantString_tag'
|-TypedefDecl 0x134926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134855d90 '__SVInt8_t'
|-TypedefDecl 0x134926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134855db0 '__SVInt16_t'
|-TypedefDecl 0x134926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134855dd0 '__SVInt32_t'
|-TypedefDecl 0x134926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134855df0 '__SVInt64_t'
|-TypedefDecl 0x134926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134855e10 '__SVUint8_t'
|-TypedefDecl 0x134926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134855e30 '__SVUint16_t'
|-TypedefDecl 0x134926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134855e50 '__SVUint32_t'
|-TypedefDecl 0x134926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134855e70 '__SVUint64_t'
|-TypedefDecl 0x134926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134855e90 '__SVFloat16_t'
|-TypedefDecl 0x134926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134855eb0 '__SVFloat32_t'
|-TypedefDecl 0x134926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134855ed0 '__SVFloat64_t'
|-TypedefDecl 0x134926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x134926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x134926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x134927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1349270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x134927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x134927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1349271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x134927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1349272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x134927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x134927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1349273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x134927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1349274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1348560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x134927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1348560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x134927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1348560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1349275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x134927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1349276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x134927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x134927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x134928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1348561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x134928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1348561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1349280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1348561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x134928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1349281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134856230 '__clang_svint16x4_t'
|-TypedefDecl 0x134928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134856250 '__clang_svint32x4_t'
|-TypedefDecl 0x134928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1349282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x134928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1348562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1349283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1348562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x134928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1348562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x134928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1349284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x134928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1349285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x134928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134856390 '__SVBool_t'
|-TypedefDecl 0x134928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1348563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1349286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1348563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x134928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1348563f0 '__SVCount_t'
|-TypedefDecl 0x1349287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1349287b0 'char *'
|   `-BuiltinType 0x1348556b0 'char'
|-TypedefDecl 0x134928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1349287b0 'char *'
|   `-BuiltinType 0x1348556b0 'char'
|-FunctionDecl 0x134928a88 <dataset_diviso_filec/func23498_vuln.c:1:1, line:60:1> line:1:12 invalid read_tfra 'int (int *, int *)' static
| |-ParmVarDecl 0x134928928 <col:22, col:34> col:34 referenced invalid mov 'int *'
| |-ParmVarDecl 0x1349289a8 <col:39, col:52> col:52 invalid f 'int *'
| `-CompoundStmt 0x134946500 <line:2:1, line:60:1>
|   |-DeclStmt 0x134942440 <line:4:5, col:35>
|   | |-VarDecl 0x134942230 <col:5, col:9> col:9 used version 'int'
|   | |-VarDecl 0x1349422b0 <col:5, col:18> col:18 used fieldlength 'int'
|   | |-VarDecl 0x134942330 <col:5, col:31> col:31 used i 'int'
|   | `-VarDecl 0x1349423b0 <col:5, col:34> col:34 used j 'int'
|   |-DeclStmt 0x1349424d8 <line:7:5, col:14>
|   | `-VarDecl 0x134942470 <col:5, col:11> col:11 used tmp 'void *'
|   |-IfStmt 0x134942910 <line:9:5, line:11:5>
|   | |-BinaryOperator 0x1349428a8 <line:9:9, col:51> 'int' contains-errors '!='
|   | | |-CallExpr 0x134942690 <col:9, col:20> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x134942650 <col:9> 'int ()' Function 0x134942598 'avio_rb32' 'int ()'
|   | | | `-RecoveryExpr 0x134942670 <col:19> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x134942868 <col:25, col:51> 'int'
|   | |   |-ImplicitCastExpr 0x134942850 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x134942798 <col:25> 'int ()' Function 0x1349426e0 'MKBETAG' 'int ()'
|   | |   |-CharacterLiteral 0x1349427b8 <col:33> 'int' 116
|   | |   |-CharacterLiteral 0x1349427d0 <col:38> 'int' 102
|   | |   |-CharacterLiteral 0x1349427e8 <col:43> 'int' 114
|   | |   `-CharacterLiteral 0x134942800 <col:48> 'int' 97
|   | `-CompoundStmt 0x1349428f8 <col:54, line:11:5>
|   |   `-ReturnStmt 0x1349428e8 <line:10:9, col:16>
|   |     `-IntegerLiteral 0x1349428c8 <col:16> 'int' 1
|   |-CallExpr 0x134942b68 <line:12:5, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x134942a10 <col:5> 'int ()' Function 0x134942958 'av_log' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x134942a50 <col:12, col:17> '<dependent type>' contains-errors lvalue ->fc
|   | | `-RecoveryExpr 0x134942a30 <col:12> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x134942b48 <col:21> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x134942af0 <col:37> 'char[4]' lvalue "STR"
|   |-IfStmt 0x134942f10 <line:14:5, line:16:5>
|   | |-UnaryOperator 0x134942d48 <line:14:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x134942d30 <col:10> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x134942cd8 <col:10> 'char *(const char *, int)' Function 0x134942000 'index' 'char *(const char *, int)'
|   | `-CompoundStmt 0x134942ef8 <col:17, line:16:5>
|   |   `-ReturnStmt 0x134942ee8 <line:15:9, col:30>
|   |     `-CallExpr 0x134942ec0 <col:16, col:30> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x134942e40 <col:16> 'int ()' Function 0x134942d88 'AVERROR' 'int ()'
|   |       `-RecoveryExpr 0x134942ea0 <col:24> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x134944a00 <line:21:5, line:24:5>
|   | |-UnaryOperator 0x134944838 <line:21:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x134944820 <col:10> 'void *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x134944800 <col:10> 'void *' lvalue Var 0x134942470 'tmp' 'void *'
|   | `-CompoundStmt 0x1349449e8 <col:15, line:24:5>
|   |   `-CallExpr 0x1349449a0 <line:22:9, col:24> 'int'
|   |     |-ImplicitCastExpr 0x134944988 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x134944930 <col:9> 'int ()' Function 0x134944878 'av_freep' 'int ()'
|   |     `-UnaryOperator 0x134944970 <col:18, col:19> 'char *(*)(const char *, int)' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x134944950 <col:19> 'char *(const char *, int)' Function 0x134942000 'index' 'char *(const char *, int)'
|   |-BinaryOperator 0x134944ad0 <line:25:5, col:32> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x134944a68 <col:5, col:10> '<dependent type>' contains-errors lvalue ->fragment_index_data
|   | | `-RecoveryExpr 0x134944a40 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x134944a20 <col:5> 'int *' lvalue ParmVar 0x134928928 'mov' 'int *'
|   | `-DeclRefExpr 0x134944ab0 <col:32> 'void *' lvalue Var 0x134942470 'tmp' 'void *'
|   |-BinaryOperator 0x134944c58 <line:26:5, col:61> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x134944c18 <col:5, col:57> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x134944c00 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x134944b38 <col:5, col:10> '<dependent type>' contains-errors lvalue ->fragment_index_data
|   | | |   `-RecoveryExpr 0x134944b10 <col:5> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x134944af0 <col:5> 'int *' lvalue ParmVar 0x134928928 'mov' 'int *'
|   | | `-UnaryOperator 0x134944be8 <col:30, col:55> '<dependent type>' contains-errors postfix '++' cannot overflow
|   | |   `-CXXDependentScopeMemberExpr 0x134944ba0 <col:30, col:35> '<dependent type>' contains-errors lvalue ->fragment_index_count
|   | |     `-RecoveryExpr 0x134944b80 <col:30> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x134944c38 <col:61> 'char *(const char *, int)' Function 0x134942000 'index' 'char *(const char *, int)'
|   |-BinaryOperator 0x134944de0 <line:28:5, col:24> 'int' contains-errors '='
|   | |-DeclRefExpr 0x134944c78 <col:5> 'int' lvalue Var 0x134942230 'version' 'int'
|   | `-CallExpr 0x134944db8 <col:15, col:24> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x134944d78 <col:15> 'int ()' Function 0x134944cc0 'avio_r8' 'int ()'
|   |   `-RecoveryExpr 0x134944d98 <col:23> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x134944f20 <line:29:5, col:16> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x134944ee0 <col:5> 'int ()' Function 0x134944e28 'avio_rb24' 'int ()'
|   | `-RecoveryExpr 0x134944f00 <col:15> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x134944ff8 <line:30:5, col:34> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x134944f68 <col:5, col:12> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x134944f48 <col:5> 'char *(const char *, int)' Function 0x134942000 'index' 'char *(const char *, int)'
|   | `-CallExpr 0x134944fd0 <col:23, col:34> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x134944f90 <col:23> 'int ()' Function 0x134942598 'avio_rb32' 'int ()'
|   |   `-RecoveryExpr 0x134944fb0 <col:33> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1349450a0 <line:31:5, col:30> 'int' contains-errors '='
|   | |-DeclRefExpr 0x134945018 <col:5> 'int' lvalue Var 0x1349422b0 'fieldlength' 'int'
|   | `-CallExpr 0x134945078 <col:19, col:30> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x134945038 <col:19> 'int ()' Function 0x134942598 'avio_rb32' 'int ()'
|   |   `-RecoveryExpr 0x134945058 <col:29> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x134945170 <line:32:5, col:36> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x1349450e0 <col:5, col:12> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1349450c0 <col:5> 'char *(const char *, int)' Function 0x134942000 'index' 'char *(const char *, int)'
|   | `-CallExpr 0x134945148 <col:25, col:36> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x134945108 <col:25> 'int ()' Function 0x134942598 'avio_rb32' 'int ()'
|   |   `-RecoveryExpr 0x134945128 <col:35> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x134945458 <line:35:5, line:38:5>
|   | |-UnaryOperator 0x134945380 <line:35:9, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x134945368 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x134945340 <col:10, col:17> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x134945320 <col:10> 'char *(const char *, int)' Function 0x134942000 'index' 'char *(const char *, int)'
|   | `-CompoundStmt 0x134945440 <col:24, line:38:5>
|   |   `-BinaryOperator 0x134945400 <line:36:9, col:29> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x1349453b8 <col:9, col:16> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x134945398 <col:9> 'char *(const char *, int)' Function 0x134942000 'index' 'char *(const char *, int)'
|   |     `-IntegerLiteral 0x1349453e0 <col:29> 'int' 0
|   |-ForStmt 0x134946378 <line:39:5, line:56:5>
|   | |-BinaryOperator 0x1349454b8 <line:39:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x134945478 <col:10> 'int' lvalue Var 0x134942330 'i' 'int'
|   | | `-IntegerLiteral 0x134945498 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x134945540 <col:17, col:28> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x1349454d8 <col:17> 'int' lvalue Var 0x134942330 'i' 'int'
|   | | `-RecoveryExpr 0x134945518 <col:21, col:28> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1349454f8 <col:21> 'char *(const char *, int)' Function 0x134942000 'index' 'char *(const char *, int)'
|   | |-UnaryOperator 0x134945580 <col:40, col:41> 'int' postfix '++'
|   | | `-DeclRefExpr 0x134945560 <col:40> 'int' lvalue Var 0x134942330 'i' 'int'
|   | `-CompoundStmt 0x134946348 <col:45, line:56:5>
|   |   |-IfStmt 0x1349458c0 <line:41:9, line:47:9> has_else
|   |   | |-BinaryOperator 0x134945600 <line:41:13, col:24> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1349455d8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x134945598 <col:13> 'int' lvalue Var 0x134942230 'version' 'int'
|   |   | | `-IntegerLiteral 0x1349455b8 <col:24> 'int' 1
|   |   | |-CompoundStmt 0x1349457d0 <col:27, line:44:9>
|   |   | `-CompoundStmt 0x1349458b0 <col:16, line:47:9>
|   |   |-ForStmt 0x134945d80 <line:50:9, line:51:22>
|   |   | |-BinaryOperator 0x134945b30 <line:50:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x134945af0 <col:14> 'int' lvalue Var 0x1349423b0 'j' 'int'
|   |   | | `-IntegerLiteral 0x134945b10 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x134945cc0 <col:21, col:52> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x134945ca8 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x134945b50 <col:21> 'int' lvalue Var 0x1349423b0 'j' 'int'
|   |   | | `-BinaryOperator 0x134945c88 <col:25, col:52> 'int' '+'
|   |   | |   |-ParenExpr 0x134945c48 <col:25, col:48> 'int'
|   |   | |   | `-BinaryOperator 0x134945c28 <col:26, col:47> 'int' '&'
|   |   | |   |   |-ParenExpr 0x134945be8 <col:26, col:43> 'int'
|   |   | |   |   | `-BinaryOperator 0x134945bc8 <col:27, col:42> 'int' '>>'
|   |   | |   |   |   |-ImplicitCastExpr 0x134945bb0 <col:27> 'int' <LValueToRValue>
|   |   | |   |   |   | `-DeclRefExpr 0x134945b70 <col:27> 'int' lvalue Var 0x1349422b0 'fieldlength' 'int'
|   |   | |   |   |   `-IntegerLiteral 0x134945b90 <col:42> 'int' 4
|   |   | |   |   `-IntegerLiteral 0x134945c08 <col:47> 'int' 3
|   |   | |   `-IntegerLiteral 0x134945c68 <col:52> 'int' 1
|   |   | |-UnaryOperator 0x134945d00 <col:55, col:56> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x134945ce0 <col:55> 'int' lvalue Var 0x1349423b0 'j' 'int'
|   |   | `-CallExpr 0x134945d58 <line:51:13, col:22> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x134945d18 <col:13> 'int ()' Function 0x134944cc0 'avio_r8' 'int ()'
|   |   |   `-RecoveryExpr 0x134945d38 <col:21> '<dependent type>' contains-errors lvalue
|   |   |-ForStmt 0x134946048 <line:52:9, line:53:22>
|   |   | |-BinaryOperator 0x134945df8 <line:52:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x134945db8 <col:14> 'int' lvalue Var 0x1349423b0 'j' 'int'
|   |   | | `-IntegerLiteral 0x134945dd8 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x134945f88 <col:21, col:52> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x134945f70 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x134945e18 <col:21> 'int' lvalue Var 0x1349423b0 'j' 'int'
|   |   | | `-BinaryOperator 0x134945f50 <col:25, col:52> 'int' '+'
|   |   | |   |-ParenExpr 0x134945f10 <col:25, col:48> 'int'
|   |   | |   | `-BinaryOperator 0x134945ef0 <col:26, col:47> 'int' '&'
|   |   | |   |   |-ParenExpr 0x134945eb0 <col:26, col:43> 'int'
|   |   | |   |   | `-BinaryOperator 0x134945e90 <col:27, col:42> 'int' '>>'
|   |   | |   |   |   |-ImplicitCastExpr 0x134945e78 <col:27> 'int' <LValueToRValue>
|   |   | |   |   |   | `-DeclRefExpr 0x134945e38 <col:27> 'int' lvalue Var 0x1349422b0 'fieldlength' 'int'
|   |   | |   |   |   `-IntegerLiteral 0x134945e58 <col:42> 'int' 2
|   |   | |   |   `-IntegerLiteral 0x134945ed0 <col:47> 'int' 3
|   |   | |   `-IntegerLiteral 0x134945f30 <col:52> 'int' 1
|   |   | |-UnaryOperator 0x134945fc8 <col:55, col:56> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x134945fa8 <col:55> 'int' lvalue Var 0x1349423b0 'j' 'int'
|   |   | `-CallExpr 0x134946020 <line:53:13, col:22> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x134945fe0 <col:13> 'int ()' Function 0x134944cc0 'avio_r8' 'int ()'
|   |   |   `-RecoveryExpr 0x134946000 <col:21> '<dependent type>' contains-errors lvalue
|   |   `-ForStmt 0x134946310 <line:54:9, line:55:22>
|   |     |-BinaryOperator 0x1349460c0 <line:54:14, col:18> 'int' '='
|   |     | |-DeclRefExpr 0x134946080 <col:14> 'int' lvalue Var 0x1349423b0 'j' 'int'
|   |     | `-IntegerLiteral 0x1349460a0 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x134946250 <col:21, col:52> 'int' '<'
|   |     | |-ImplicitCastExpr 0x134946238 <col:21> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1349460e0 <col:21> 'int' lvalue Var 0x1349423b0 'j' 'int'
|   |     | `-BinaryOperator 0x134946218 <col:25, col:52> 'int' '+'
|   |     |   |-ParenExpr 0x1349461d8 <col:25, col:48> 'int'
|   |     |   | `-BinaryOperator 0x1349461b8 <col:26, col:47> 'int' '&'
|   |     |   |   |-ParenExpr 0x134946178 <col:26, col:43> 'int'
|   |     |   |   | `-BinaryOperator 0x134946158 <col:27, col:42> 'int' '>>'
|   |     |   |   |   |-ImplicitCastExpr 0x134946140 <col:27> 'int' <LValueToRValue>
|   |     |   |   |   | `-DeclRefExpr 0x134946100 <col:27> 'int' lvalue Var 0x1349422b0 'fieldlength' 'int'
|   |     |   |   |   `-IntegerLiteral 0x134946120 <col:42> 'int' 0
|   |     |   |   `-IntegerLiteral 0x134946198 <col:47> 'int' 3
|   |     |   `-IntegerLiteral 0x1349461f8 <col:52> 'int' 1
|   |     |-UnaryOperator 0x134946290 <col:55, col:56> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x134946270 <col:55> 'int' lvalue Var 0x1349423b0 'j' 'int'
|   |     `-CallExpr 0x1349462e8 <line:55:13, col:22> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x1349462a8 <col:13> 'int ()' Function 0x134944cc0 'avio_r8' 'int ()'
|   |       `-RecoveryExpr 0x1349462c8 <col:21> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x1349464f0 <line:59:5, col:12>
|     `-IntegerLiteral 0x1349464d0 <col:12> 'int' 0
`-FunctionDecl 0x134942000 <line:3:23> col:23 implicit used index 'char *(const char *, int)' extern
  |-ParmVarDecl 0x134942100 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x134942168 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1349420a8 <<invalid sloc>> Implicit 952
