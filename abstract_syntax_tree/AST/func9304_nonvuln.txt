TranslationUnitDecl 0x130055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130055bd0 '__int128'
|-TypedefDecl 0x130056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130055bf0 'unsigned __int128'
|-TypedefDecl 0x130126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130126000 'struct __NSConstantString_tag'
|   `-Record 0x130056580 '__NSConstantString_tag'
|-TypedefDecl 0x130126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130055d90 '__SVInt8_t'
|-TypedefDecl 0x130126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130055db0 '__SVInt16_t'
|-TypedefDecl 0x130126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130055dd0 '__SVInt32_t'
|-TypedefDecl 0x1301263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130055df0 '__SVInt64_t'
|-TypedefDecl 0x130126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130055e10 '__SVUint8_t'
|-TypedefDecl 0x1301264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130055e30 '__SVUint16_t'
|-TypedefDecl 0x130126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130055e50 '__SVUint32_t'
|-TypedefDecl 0x130126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130055e70 '__SVUint64_t'
|-TypedefDecl 0x1301265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130055e90 '__SVFloat16_t'
|-TypedefDecl 0x130126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1301266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130055ed0 '__SVFloat64_t'
|-TypedefDecl 0x130126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x130126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1301267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x130126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1301268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x130126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x130126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1301269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x130126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x130126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130056090 '__clang_svint8x3_t'
|-TypedefDecl 0x130126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1300560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x130126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1300560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x130126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1300560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x130126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x130126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x130126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x130126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x130126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x130127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1300561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x130127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1300561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1301278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1300561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x130127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1301279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130056230 '__clang_svint16x4_t'
|-TypedefDecl 0x130127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130056250 '__clang_svint32x4_t'
|-TypedefDecl 0x130127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130056270 '__clang_svint64x4_t'
|-TypedefDecl 0x130127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x130127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x130127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x130127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x130127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x130127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x130127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x130127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x130127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130056390 '__SVBool_t'
|-TypedefDecl 0x130127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x130127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x130127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300563f0 '__SVCount_t'
|-TypedefDecl 0x130127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x130127fb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-TypedefDecl 0x130128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x130127fb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-FunctionDecl 0x1301281a8 <dataset_diviso_filec/func9304_nonvuln.c:1:1, line:42:1> line:1:14 check_tasm_directive 'char *(char *)' static
| |-ParmVarDecl 0x1301280d8 <col:35, col:41> col:41 used line 'char *'
| `-CompoundStmt 0x130144bf8 <line:2:1, line:42:1>
|   |-DeclStmt 0x1301284d8 <line:4:5, col:35>
|   | |-VarDecl 0x1301282d0 <col:5, col:11> col:11 used p 'char *'
|   | |-VarDecl 0x130128350 <col:5, col:15> col:15 used q 'char *'
|   | |-VarDecl 0x1301283d0 <col:5, col:19> col:19 used oldline 'char *'
|   | `-VarDecl 0x130128448 <col:5, col:28> col:28 used oldchar 'char'
|   |-BinaryOperator 0x130141b30 <line:6:5, col:30> 'char *' '='
|   | |-DeclRefExpr 0x1301284f0 <col:5> 'char *' lvalue Var 0x1301282d0 'p' 'char *'
|   | `-ImplicitCastExpr 0x1301286e8 <col:9, col:30> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1301286a8 <col:9, col:30> 'int'
|   |     |-ImplicitCastExpr 0x130128690 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x130128620 <col:9> 'int ()' Function 0x130128568 'nasm_skip_spaces' 'int ()'
|   |     `-ImplicitCastExpr 0x1301286d0 <col:26> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x130128640 <col:26> 'char *' lvalue ParmVar 0x1301280d8 'line' 'char *'
|   |-BinaryOperator 0x130141e78 <line:11:5, col:25> 'char *' '='
|   | |-DeclRefExpr 0x130141cc8 <col:5> 'char *' lvalue Var 0x130128350 'q' 'char *'
|   | `-ImplicitCastExpr 0x130141e60 <col:9, col:25> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x130141e20 <col:9, col:25> 'int'
|   |     |-ImplicitCastExpr 0x130141e08 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x130141dc8 <col:9> 'int ()' Function 0x130141d10 'nasm_skip_word' 'int ()'
|   |     `-ImplicitCastExpr 0x130141e48 <col:24> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x130141de8 <col:24> 'char *' lvalue Var 0x1301282d0 'p' 'char *'
|   |-IfStmt 0x130144b90 <line:13:5, line:40:5>
|   | |-RecoveryExpr 0x130141f40 <line:13:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x130144b78 <col:14, line:40:5>
|   |   `-WhileStmt 0x130144b18 <line:16:9, line:38:9>
|   |     |-BinaryOperator 0x130142100 <line:16:16, col:24> 'int' contains-errors '>'
|   |     | |-BinaryOperator 0x1301420e0 <col:16, col:20> '<dependent type>' contains-errors '-'
|   |     | | |-RecoveryExpr 0x1301420a0 <col:16> '<dependent type>' contains-errors lvalue
|   |     | | `-RecoveryExpr 0x1301420c0 <col:20> '<dependent type>' contains-errors lvalue
|   |     | `-IntegerLiteral 0x130142060 <col:24> 'int' 1
|   |     `-CompoundStmt 0x130144b00 <col:27, line:38:9>
|   |       `-IfStmt 0x130144ad0 <line:19:13, line:37:17> has_else
|   |         |-RecoveryExpr 0x1301422d0 <line:19:17, col:22> '_Bool' contains-errors
|   |         |-CompoundStmt 0x130144a10 <col:25, line:34:13>
|   |         | |-BinaryOperator 0x130142628 <line:23:17, col:27> 'char *' '='
|   |         | | |-DeclRefExpr 0x1301425d0 <col:17> 'char *' lvalue Var 0x1301283d0 'oldline' 'char *'
|   |         | | `-ImplicitCastExpr 0x130142610 <col:27> 'char *' <LValueToRValue>
|   |         | |   `-DeclRefExpr 0x1301425f0 <col:27> 'char *' lvalue ParmVar 0x1301280d8 'line' 'char *'
|   |         | |-BinaryOperator 0x130144030 <line:25:17, col:27> 'char' '='
|   |         | | |-ArraySubscriptExpr 0x1301427e0 <col:17, col:23> 'char' lvalue
|   |         | | | |-ImplicitCastExpr 0x1301427c8 <col:17> 'char *' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x130142788 <col:17> 'char *' lvalue ParmVar 0x1301280d8 'line' 'char *'
|   |         | | | `-IntegerLiteral 0x1301427a8 <col:22> 'int' 0
|   |         | | `-ImplicitCastExpr 0x130144018 <col:27> 'char' <IntegralCast>
|   |         | |   `-CharacterLiteral 0x130144000 <col:27> 'int' 37
|   |         | |-IfStmt 0x130144820 <line:26:17, line:31:17> has_else
|   |         | | |-RecoveryExpr 0x130144050 <line:26:21, col:26> '_Bool' contains-errors
|   |         | | |-CompoundStmt 0x130144458 <col:37, line:29:17>
|   |         | | | `-CallExpr 0x1301443f8 <line:28:21, col:43> 'char *'
|   |         | | |   |-ImplicitCastExpr 0x1301443e0 <col:21> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |         | | |   | `-DeclRefExpr 0x130144290 <col:21> 'char *(char *, const char *)' Function 0x1301440b0 'strcpy' 'char *(char *, const char *)'
|   |         | | |   |-BinaryOperator 0x130144308 <col:28, col:35> 'char *' '+'
|   |         | | |   | |-ImplicitCastExpr 0x1301442f0 <col:28> 'char *' <LValueToRValue>
|   |         | | |   | | `-DeclRefExpr 0x1301442b0 <col:28> 'char *' lvalue ParmVar 0x1301280d8 'line' 'char *'
|   |         | | |   | `-IntegerLiteral 0x1301442d0 <col:35> 'int' 1
|   |         | | |   `-ImplicitCastExpr 0x130144440 <col:38> 'const char *' <NoOp>
|   |         | | |     `-ImplicitCastExpr 0x130144428 <col:38> 'char *' <ArrayToPointerDecay>
|   |         | | |       `-StringLiteral 0x130144370 <col:38> 'char[4]' lvalue "STR"
|   |         | | `-CompoundStmt 0x130144810 <line:29:24, line:31:17>
|   |         | |-CallExpr 0x130144988 <line:32:17, col:34> 'int'
|   |         | | |-ImplicitCastExpr 0x130144970 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |         | | | `-DeclRefExpr 0x130144930 <col:17> 'int ()' Function 0x130144878 'nasm_free' 'int ()'
|   |         | | `-ImplicitCastExpr 0x1301449b0 <col:27> 'char *' <LValueToRValue>
|   |         | |   `-DeclRefExpr 0x130144950 <col:27> 'char *' lvalue Var 0x1301283d0 'oldline' 'char *'
|   |         | `-ReturnStmt 0x130144a00 <line:33:17, col:24>
|   |         |   `-ImplicitCastExpr 0x1301449e8 <col:24> 'char *' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x1301449c8 <col:24> 'char *' lvalue ParmVar 0x1301280d8 'line' 'char *'
|   |         `-IfStmt 0x130144aa0 <line:34:20, line:37:17> has_else
|   |           |-RecoveryExpr 0x130144a68 <line:34:24, col:28> '_Bool' contains-errors
|   |           |-CompoundStmt 0x130144a88 <col:31, line:36:13>
|   |           `-NullStmt 0x130144a98 <line:37:17>
|   `-ReturnStmt 0x130144be8 <line:41:5, col:12>
|     `-ImplicitCastExpr 0x130144bd0 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x130144bb0 <col:12> 'char *' lvalue ParmVar 0x1301280d8 'line' 'char *'
|-FunctionDecl 0x130142368 <line:22:23> col:23 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x130142468 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x130142410 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1301440b0 <line:28:21> col:21 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1301441b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x130144218 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x130144158 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x1301444e8 <line:30:21> col:21 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1301445e8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x130144650 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x1301446b8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x130144590 <<invalid sloc>> Implicit 882
