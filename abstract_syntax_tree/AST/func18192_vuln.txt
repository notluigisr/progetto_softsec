TranslationUnitDecl 0x15b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b855bd0 '__int128'
|-TypedefDecl 0x15b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b855bf0 'unsigned __int128'
|-TypedefDecl 0x15b926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b926800 'struct __NSConstantString_tag'
|   `-Record 0x15b856580 '__NSConstantString_tag'
|-TypedefDecl 0x15b926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b855d90 '__SVInt8_t'
|-TypedefDecl 0x15b926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b855db0 '__SVInt16_t'
|-TypedefDecl 0x15b926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b855dd0 '__SVInt32_t'
|-TypedefDecl 0x15b926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b855df0 '__SVInt64_t'
|-TypedefDecl 0x15b926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b855e10 '__SVUint8_t'
|-TypedefDecl 0x15b926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b855e30 '__SVUint16_t'
|-TypedefDecl 0x15b926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b855e50 '__SVUint32_t'
|-TypedefDecl 0x15b926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b855e70 '__SVUint64_t'
|-TypedefDecl 0x15b926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b855e90 '__SVFloat16_t'
|-TypedefDecl 0x15b926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b856390 '__SVBool_t'
|-TypedefDecl 0x15b928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b8563f0 '__SVCount_t'
|-TypedefDecl 0x15b9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b9287b0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
|-TypedefDecl 0x15b928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b9287b0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
`-FunctionDecl 0x15b941998 <dataset_diviso_filec/func18192_vuln.c:1:1, line:74:1> line:1:12 ovl_copy_up_locked 'int (struct dentry *, struct dentry *, struct dentry *, struct path *, struct kstat *, struct iattr *, const char *)' static
  |-ParmVarDecl 0x15b928e48 <col:31, col:46> col:46 used workdir 'struct dentry *'
  |-ParmVarDecl 0x15b928f38 <col:55, col:70> col:70 used upperdir 'struct dentry *'
  |-ParmVarDecl 0x15b941200 <line:2:10, col:25> col:25 used dentry 'struct dentry *'
  |-ParmVarDecl 0x15b9413d8 <col:33, col:46> col:46 used lowerpath 'struct path *'
  |-ParmVarDecl 0x15b9415a8 <line:3:10, col:24> col:24 used stat 'struct kstat *'
  |-ParmVarDecl 0x15b941778 <col:30, col:44> col:44 used attr 'struct iattr *'
  |-ParmVarDecl 0x15b9417f8 <line:4:10, col:22> col:22 used link 'const char *'
  `-CompoundStmt 0x15b94ac98 <line:5:1, line:74:1>
    |-DeclStmt 0x15b941d08 <line:6:2, col:39>
    | |-RecordDecl 0x15b941ac0 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x15b941c28 <col:2, col:32> col:16 used wdir 'struct inode *' cinit
    |   `-RecoveryExpr 0x15b941cc8 <col:23, col:32> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15b941c90 <col:23> 'struct dentry *' lvalue ParmVar 0x15b928e48 'workdir' 'struct dentry *'
    |-DeclStmt 0x15b941e70 <line:7:2, col:40>
    | `-VarDecl 0x15b941da8 <col:2, col:33> col:16 used udir 'struct inode *' cinit
    |   `-RecoveryExpr 0x15b941e48 <col:23, col:33> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15b941e10 <col:23> 'struct dentry *' lvalue ParmVar 0x15b928f38 'upperdir' 'struct dentry *'
    |-DeclStmt 0x15b941f68 <line:8:2, col:33>
    | `-VarDecl 0x15b941eb0 <col:2, col:29> col:17 used newdentry 'struct dentry *' cinit
    |   `-RecoveryExpr 0x15b941f48 <col:29> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15b942048 <line:9:2, col:29>
    | `-VarDecl 0x15b941fa8 <col:2, col:25> col:17 used upper 'struct dentry *' cinit
    |   `-RecoveryExpr 0x15b942028 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15b9420e0 <line:11:2, col:9>
    | `-VarDecl 0x15b942078 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x15b9473e0 <line:13:2, col:45> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x15b9420f8 <col:2> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    | `-ImplicitCastExpr 0x15b9473c8 <col:14, col:45> 'struct dentry *' <IntegralToPointer>
    |   `-CallExpr 0x15b947368 <col:14, col:45> 'int'
    |     |-ImplicitCastExpr 0x15b947350 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b9472b8 <col:14> 'int ()' Function 0x15b947200 'ovl_lookup_temp' 'int ()'
    |     |-ImplicitCastExpr 0x15b947398 <col:30> 'struct dentry *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b9472d8 <col:30> 'struct dentry *' lvalue ParmVar 0x15b928e48 'workdir' 'struct dentry *'
    |     `-ImplicitCastExpr 0x15b9473b0 <col:39> 'struct dentry *' <LValueToRValue>
    |       `-DeclRefExpr 0x15b9472f8 <col:39> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'
    |-BinaryOperator 0x15b947598 <line:14:2, col:25> 'int' contains-errors '='
    | |-DeclRefExpr 0x15b947400 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-CallExpr 0x15b947558 <col:8, col:25> 'int' contains-errors
    |   |-ImplicitCastExpr 0x15b947540 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15b947500 <col:8> 'int ()' Function 0x15b947448 'PTR_ERR' 'int ()'
    |   `-ImplicitCastExpr 0x15b947580 <col:16> 'struct dentry *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x15b947520 <col:16> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |-IfStmt 0x15b947798 <line:15:2, line:16:8>
    | |-CallExpr 0x15b9476f0 <line:15:6, col:22> 'int' contains-errors
    | | |-ImplicitCastExpr 0x15b9476d8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15b947698 <col:6> 'int ()' Function 0x15b9475e0 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x15b947718 <col:13> 'struct dentry *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x15b9476b8 <col:13> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    | `-GotoStmt 0x15b947780 <line:16:3, col:8> 'out' 0x15b947730
    |-BinaryOperator 0x15b947a80 <line:18:2, line:19:29> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x15b9477b8 <line:18:2> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'
    | `-CallExpr 0x15b947a48 <col:10, line:19:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15b9478b8 <line:18:10> 'int ()' Function 0x15b947800 'lookup_one_len' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x15b947938 <col:25, col:40> '<dependent type>' contains-errors lvalue .name
    |   | `-RecoveryExpr 0x15b947910 <col:25, col:33> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15b9478d8 <col:25> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'
    |   |-DeclRefExpr 0x15b947980 <col:46> 'struct dentry *' lvalue ParmVar 0x15b928f38 'upperdir' 'struct dentry *'
    |   `-CXXDependentScopeMemberExpr 0x15b947a00 <line:19:11, col:26> '<dependent type>' contains-errors lvalue .len
    |     `-RecoveryExpr 0x15b9479d8 <col:11, col:19> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x15b9479a0 <col:11> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'
    |-BinaryOperator 0x15b947b58 <line:20:2, col:21> 'int' contains-errors '='
    | |-DeclRefExpr 0x15b947aa0 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-CallExpr 0x15b947b18 <col:8, col:21> 'int' contains-errors
    |   |-ImplicitCastExpr 0x15b947b00 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15b947ac0 <col:8> 'int ()' Function 0x15b947448 'PTR_ERR' 'int ()'
    |   `-ImplicitCastExpr 0x15b947b40 <col:16> 'struct dentry *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x15b947ae0 <col:16> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'
    |-IfStmt 0x15b947c78 <line:21:2, line:22:8>
    | |-CallExpr 0x15b947bd0 <line:21:6, col:18> 'int' contains-errors
    | | |-ImplicitCastExpr 0x15b947bb8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15b947b78 <col:6> 'int ()' Function 0x15b9475e0 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x15b947bf8 <col:13> 'struct dentry *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x15b947b98 <col:13> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'
    | `-GotoStmt 0x15b947c60 <line:22:3, col:8> 'out1' 0x15b947c10
    |-CompoundAssignOperator 0x15b947d60 <line:25:2, col:16> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x15b947cd0 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15b947c98 <col:2> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'
    | `-RecoveryExpr 0x15b947d40 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15b948060 <line:26:2, col:63> 'int' contains-errors '='
    | |-DeclRefExpr 0x15b947d90 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-CallExpr 0x15b948010 <col:8, col:63> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15b947e90 <col:8> 'int ()' Function 0x15b947dd8 'ovl_create_real' 'int ()'
    |   |-DeclRefExpr 0x15b947eb0 <col:24> 'struct inode *' contains-errors lvalue Var 0x15b941c28 'wdir' 'struct inode *'
    |   |-DeclRefExpr 0x15b947ed0 <col:30> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |   |-DeclRefExpr 0x15b947ef0 <col:41> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'
    |   |-DeclRefExpr 0x15b947f10 <col:47> 'const char *' lvalue ParmVar 0x15b9417f8 'link' 'const char *'
    |   |-RecoveryExpr 0x15b947fd0 <col:53> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x15b947ff0 <col:59> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15b948138 <line:27:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x15b9480b8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15b948080 <col:2> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'
    | `-RecoveryExpr 0x15b948118 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15b948c00 <line:28:2, line:29:8>
    | |-ImplicitCastExpr 0x15b948178 <line:28:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15b948158 <col:6> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-GotoStmt 0x15b9481e0 <line:29:3, col:8> 'out2' 0x15b948190
    |-IfStmt 0x15b949568 <line:31:2, line:40:2>
    | |-CallExpr 0x15b948d80 <line:31:6, col:24> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x15b948d00 <col:6> 'int ()' Function 0x15b948c48 'S_ISREG' 'int ()'
    | | `-RecoveryExpr 0x15b948d58 <col:14, col:20> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15b948d20 <col:14> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'
    | `-CompoundStmt 0x15b949530 <col:27, line:40:2>
    |   |-DeclStmt 0x15b948e68 <line:32:3, col:24>
    |   | `-VarDecl 0x15b948e00 <col:3, col:15> col:15 referenced invalid upperpath 'struct path'
    |   |-CallExpr 0x15b948fd8 <line:33:3, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15b948f60 <col:3> 'int ()' Function 0x15b948ea8 'ovl_path_upper' 'int ()'
    |   | |-DeclRefExpr 0x15b948f80 <col:18> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'
    |   | `-UnaryOperator 0x15b948fc0 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x15b948fa0 <col:27> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x15b949220 <line:35:3, col:22> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x15b9491b8 <col:3, col:13> '<dependent type>' contains-errors lvalue .dentry
    |   | | `-RecoveryExpr 0x15b949190 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x15b949170 <col:3> 'struct path' lvalue Var 0x15b948e00 'upperpath' 'struct path'
    |   | `-DeclRefExpr 0x15b949200 <col:22> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |   |-BinaryOperator 0x15b949450 <line:37:3, col:59> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x15b949240 <col:3> 'int' lvalue Var 0x15b942078 'err' 'int'
    |   | `-CallExpr 0x15b949418 <col:9, col:59> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15b949340 <col:9> 'int ()' Function 0x15b949288 'ovl_copy_up_data' 'int ()'
    |   |   |-DeclRefExpr 0x15b949360 <col:26> 'struct path *' lvalue ParmVar 0x15b9413d8 'lowerpath' 'struct path *'
    |   |   |-UnaryOperator 0x15b9493a0 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x15b949380 <col:38> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x15b9493f0 <col:49, col:55> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x15b9493b8 <col:49> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'
    |   `-IfStmt 0x15b949510 <line:38:3, line:39:9>
    |     |-ImplicitCastExpr 0x15b949490 <line:38:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b949470 <col:7> 'int' lvalue Var 0x15b942078 'err' 'int'
    |     `-GotoStmt 0x15b9494f8 <line:39:4, col:9> 'out_cleanup' 0x15b9494a8
    |-BinaryOperator 0x15b949758 <line:42:2, col:51> 'int' contains-errors '='
    | |-DeclRefExpr 0x15b949588 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-CallExpr 0x15b949728 <col:8, col:51> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15b949688 <col:8> 'int ()' Function 0x15b9495d0 'ovl_copy_xattr' 'int ()'
    |   |-RecoveryExpr 0x15b9496e0 <col:23, col:34> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x15b9496a8 <col:23> 'struct path *' lvalue ParmVar 0x15b9413d8 'lowerpath' 'struct path *'
    |   `-DeclRefExpr 0x15b949708 <col:42> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |-IfStmt 0x15b9497c8 <line:43:2, line:44:8>
    | |-ImplicitCastExpr 0x15b949798 <line:43:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15b949778 <col:6> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-GotoStmt 0x15b9497b0 <line:44:3, col:8> 'out_cleanup' 0x15b9494a8
    |-CallExpr 0x15b9499a8 <line:46:2, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15b9498c8 <col:2> 'int ()' Function 0x15b949810 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x15b949990 <col:13, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x15b949948 <col:14, col:34> '<dependent type>' contains-errors lvalue ->i_mutex
    |     `-RecoveryExpr 0x15b949920 <col:14, col:25> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x15b9498e8 <col:14> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |-BinaryOperator 0x15b949ba8 <line:47:2, col:36> 'int' contains-errors '='
    | |-DeclRefExpr 0x15b9499d0 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-CallExpr 0x15b949b48 <col:8, col:36> 'int' contains-errors
    |   |-ImplicitCastExpr 0x15b949b30 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15b949ad0 <col:8> 'int ()' Function 0x15b949a18 'ovl_set_attr' 'int ()'
    |   |-ImplicitCastExpr 0x15b949b78 <col:21> 'struct dentry *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x15b949af0 <col:21> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |   `-ImplicitCastExpr 0x15b949b90 <col:32> 'struct kstat *' <LValueToRValue>
    |     `-DeclRefExpr 0x15b949b10 <col:32> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'
    |-CallExpr 0x15b949f90 <line:50:2, col:43> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15b949eb0 <col:2> 'int ()' Function 0x15b949df8 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x15b949f78 <col:15, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x15b949f30 <col:16, col:36> '<dependent type>' contains-errors lvalue ->i_mutex
    |     `-RecoveryExpr 0x15b949f08 <col:16, col:27> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x15b949ed0 <col:16> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |-IfStmt 0x15b94a008 <line:51:2, line:52:8>
    | |-ImplicitCastExpr 0x15b949fd8 <line:51:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15b949fb8 <col:6> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-GotoStmt 0x15b949ff0 <line:52:3, col:8> 'out_cleanup' 0x15b9494a8
    |-BinaryOperator 0x15b94a2a8 <line:54:2, col:53> 'int' contains-errors '='
    | |-DeclRefExpr 0x15b94a028 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-CallExpr 0x15b94a200 <col:8, col:53> 'int' contains-errors
    |   |-ImplicitCastExpr 0x15b94a1e8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15b94a128 <col:8> 'int ()' Function 0x15b94a070 'ovl_do_rename' 'int ()'
    |   |-ImplicitCastExpr 0x15b94a248 <col:22> 'struct inode *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x15b94a148 <col:22> 'struct inode *' contains-errors lvalue Var 0x15b941c28 'wdir' 'struct inode *'
    |   |-ImplicitCastExpr 0x15b94a260 <col:28> 'struct dentry *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x15b94a168 <col:28> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |   |-ImplicitCastExpr 0x15b94a278 <col:39> 'struct inode *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x15b94a188 <col:39> 'struct inode *' contains-errors lvalue Var 0x15b941da8 'udir' 'struct inode *'
    |   |-ImplicitCastExpr 0x15b94a290 <col:45> 'struct dentry *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x15b94a1a8 <col:45> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'
    |   `-IntegerLiteral 0x15b94a1c8 <col:52> 'int' 0
    |-IfStmt 0x15b94a318 <line:55:2, line:56:8>
    | |-ImplicitCastExpr 0x15b94a2e8 <line:55:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15b94a2c8 <col:6> 'int' lvalue Var 0x15b942078 'err' 'int'
    | `-GotoStmt 0x15b94a300 <line:56:3, col:8> 'out_cleanup' 0x15b9494a8
    |-CallExpr 0x15b94a490 <line:58:2, col:37> 'int' contains-errors
    | |-ImplicitCastExpr 0x15b94a478 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15b94a418 <col:2> 'int ()' Function 0x15b94a360 'ovl_dentry_update' 'int ()'
    | |-ImplicitCastExpr 0x15b94a4c0 <col:20> 'struct dentry *' <LValueToRValue>
    | | `-DeclRefExpr 0x15b94a438 <col:20> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'
    | `-ImplicitCastExpr 0x15b94a4d8 <col:28> 'struct dentry *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x15b94a458 <col:28> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |-LabelStmt 0x15b94a948 <line:64:1, line:65:12> 'out2'
    | `-CallExpr 0x15b94a908 <col:2, col:12> 'int' contains-errors
    |   |-ImplicitCastExpr 0x15b94a8f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15b94a8b0 <col:2> 'int ()' Function 0x15b94a7f8 'dput' 'int ()'
    |   `-ImplicitCastExpr 0x15b94a930 <col:7> 'struct dentry *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x15b94a8d0 <col:7> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'
    |-LabelStmt 0x15b94aa00 <line:66:1, line:67:16> 'out1'
    | `-CallExpr 0x15b94a9c0 <col:2, col:16> 'int' contains-errors
    |   |-ImplicitCastExpr 0x15b94a9a8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15b94a968 <col:2> 'int ()' Function 0x15b94a7f8 'dput' 'int ()'
    |   `-ImplicitCastExpr 0x15b94a9e8 <col:7> 'struct dentry *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x15b94a988 <col:7> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    |-LabelStmt 0x15b94aa68 <line:68:1, line:69:9> 'out'
    | `-ReturnStmt 0x15b94aa58 <col:2, col:9>
    |   `-ImplicitCastExpr 0x15b94aa40 <col:9> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x15b94aa20 <col:9> 'int' lvalue Var 0x15b942078 'err' 'int'
    |-LabelStmt 0x15b94ac60 <line:71:1, line:72:29> 'out_cleanup'
    | `-CallExpr 0x15b94ac00 <col:2, col:29> 'int' contains-errors
    |   |-ImplicitCastExpr 0x15b94abc8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15b94ab68 <col:2> 'int ()' Function 0x15b94aab0 'ovl_cleanup' 'int ()'
    |   |-ImplicitCastExpr 0x15b94ac30 <col:14> 'struct inode *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x15b94ab88 <col:14> 'struct inode *' contains-errors lvalue Var 0x15b941c28 'wdir' 'struct inode *'
    |   `-ImplicitCastExpr 0x15b94ac48 <col:20> 'struct dentry *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x15b94aba8 <col:20> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'
    `-GotoStmt 0x15b94ac80 <line:73:2, col:7> 'out' 0x15b947730
