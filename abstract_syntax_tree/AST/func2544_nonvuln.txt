TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x128126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128126000 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x128126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x128126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x128126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x1281263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x128126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x1281264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x128126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x128126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x1281265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x128126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1281266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x128126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1281267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1281268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1281269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x128126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1281278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1281279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x128127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x128127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x128127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x128127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x128127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x128128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-FunctionDecl 0x128128758 <dataset_diviso_filec/func2544_nonvuln.c:1:1, line:59:1> line:1:1 referenced sort_dir_list 'int (struct fixup_entry *)'
| |-ParmVarDecl 0x128128648 <col:15, col:35> col:35 used p 'struct fixup_entry *'
| `-CompoundStmt 0x1038094d0 <line:2:1, line:59:1>
|   |-DeclStmt 0x128140c80 <line:3:2, col:31>
|   | |-VarDecl 0x128140ad8 <col:2, col:22> col:22 used a 'struct fixup_entry *'
|   | |-VarDecl 0x128140b68 <col:2, col:26> col:26 used b 'struct fixup_entry *'
|   | `-VarDecl 0x128140bf8 <col:2, col:30> col:30 used t 'struct fixup_entry *'
|   |-IfStmt 0x128140eb8 <line:8:2, line:9:12>
|   | |-BinaryOperator 0x128140e18 <line:8:6, col:17> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x128140d98 <col:6, col:9> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x128140d60 <col:6> 'struct fixup_entry *' lvalue ParmVar 0x128128648 'p' 'struct fixup_entry *'
|   | | `-RecoveryExpr 0x128140df8 <col:17> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x128140ea8 <line:9:3, col:12>
|   |   `-ImplicitCastExpr 0x128140e90 <col:10, col:12> 'int' <PointerToIntegral>
|   |     `-ImplicitCastExpr 0x128140e78 <col:10, col:12> 'struct fixup_entry *' <LValueToRValue>
|   |       `-ParenExpr 0x128140e58 <col:10, col:12> 'struct fixup_entry *' lvalue
|   |         `-DeclRefExpr 0x128140e38 <col:11> 'struct fixup_entry *' lvalue ParmVar 0x128128648 'p' 'struct fixup_entry *'
|   |-BinaryOperator 0x128140f30 <line:12:2, col:6> 'struct fixup_entry *' '='
|   | |-DeclRefExpr 0x128140ed8 <col:2> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   | `-ImplicitCastExpr 0x128140f18 <col:6> 'struct fixup_entry *' <LValueToRValue>
|   |   `-DeclRefExpr 0x128140ef8 <col:6> 'struct fixup_entry *' lvalue ParmVar 0x128128648 'p' 'struct fixup_entry *'
|   |-BinaryOperator 0x128141018 <line:13:2, col:15> 'struct fixup_entry *' contains-errors '='
|   | |-DeclRefExpr 0x128140f50 <col:2> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   | `-CXXDependentScopeMemberExpr 0x128140fd0 <col:6, col:15> '<dependent type>' contains-errors lvalue ->next
|   |   `-RecoveryExpr 0x128140fa8 <col:6, col:9> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x128140f70 <col:6> 'struct fixup_entry *' lvalue ParmVar 0x128128648 'p' 'struct fixup_entry *'
|   |-WhileStmt 0x128141390 <line:14:2, line:20:2>
|   | |-BinaryOperator 0x1281410b0 <line:14:9, col:14> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x128141038 <col:9> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   | | `-RecoveryExpr 0x128141090 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x128141368 <col:20, line:20:2>
|   |   |-BinaryOperator 0x128141150 <line:16:3, col:10> 'struct fixup_entry *' contains-errors '='
|   |   | |-DeclRefExpr 0x1281410d0 <col:3> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |   | `-RecoveryExpr 0x128141128 <col:7, col:10> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x1281410f0 <col:7> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |   |-IfStmt 0x1281412a8 <line:17:3, line:18:11>
|   |   | |-BinaryOperator 0x1281411e8 <line:17:7, col:12> 'int' contains-errors '!='
|   |   | | |-DeclRefExpr 0x128141170 <col:7> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |   | | `-RecoveryExpr 0x1281411c8 <col:12> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x128141288 <line:18:4, col:11> 'struct fixup_entry *' contains-errors '='
|   |   |   |-DeclRefExpr 0x128141208 <col:4> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |   |   `-RecoveryExpr 0x128141260 <col:8, col:11> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x128141228 <col:8> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |   `-BinaryOperator 0x128141348 <line:19:3, col:10> 'struct fixup_entry *' contains-errors '='
|   |     |-DeclRefExpr 0x1281412c8 <col:3> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |     `-RecoveryExpr 0x128141320 <col:7, col:10> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x1281412e8 <col:7> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |-BinaryOperator 0x128141430 <line:22:2, col:9> 'struct fixup_entry *' contains-errors '='
|   | |-DeclRefExpr 0x1281413b0 <col:2> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   | `-RecoveryExpr 0x128141408 <col:6, col:9> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1281413d0 <col:6> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |-BinaryOperator 0x128141508 <line:23:2, col:12> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x128141488 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x128141450 <col:2> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   | `-RecoveryExpr 0x1281414e8 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x128141580 <line:24:2, col:6> 'struct fixup_entry *' '='
|   | |-DeclRefExpr 0x128141528 <col:2> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   | `-ImplicitCastExpr 0x128141568 <col:6> 'struct fixup_entry *' <LValueToRValue>
|   |   `-DeclRefExpr 0x128141548 <col:6> 'struct fixup_entry *' lvalue ParmVar 0x128128648 'p' 'struct fixup_entry *'
|   |-BinaryOperator 0x1281416d0 <line:27:2, col:21> 'struct fixup_entry *' '='
|   | |-DeclRefExpr 0x1281415a0 <col:2> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   | `-ImplicitCastExpr 0x1281416b8 <col:6, col:21> 'struct fixup_entry *' <IntegralToPointer>
|   |   `-CallExpr 0x128141678 <col:6, col:21> 'int'
|   |     |-ImplicitCastExpr 0x128141660 <col:6> 'int (*)(struct fixup_entry *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1281415c0 <col:6> 'int (struct fixup_entry *)' Function 0x128128758 'sort_dir_list' 'int (struct fixup_entry *)'
|   |     `-ImplicitCastExpr 0x1281416a0 <col:20> 'struct fixup_entry *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1281415e0 <col:20> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |-BinaryOperator 0x1281417c0 <line:28:2, col:21> 'struct fixup_entry *' '='
|   | |-DeclRefExpr 0x1281416f0 <col:2> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   | `-ImplicitCastExpr 0x1281417a8 <col:6, col:21> 'struct fixup_entry *' <IntegralToPointer>
|   |   `-CallExpr 0x128141768 <col:6, col:21> 'int'
|   |     |-ImplicitCastExpr 0x128141750 <col:6> 'int (*)(struct fixup_entry *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x128141710 <col:6> 'int (struct fixup_entry *)' Function 0x128128758 'sort_dir_list' 'int (struct fixup_entry *)'
|   |     `-ImplicitCastExpr 0x128141790 <col:20> 'struct fixup_entry *' <LValueToRValue>
|   |       `-DeclRefExpr 0x128141730 <col:20> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   |-IfStmt 0x103808c70 <line:32:2, line:38:2> has_else
|   | |-BinaryOperator 0x103808960 <line:32:6, col:33> 'int' contains-errors '>'
|   | | |-CallExpr 0x103808910 <col:6, col:29> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x103808800 <col:6> 'int (const char *, const char *)' Function 0x128141820 'strcmp' 'int (const char *, const char *)'
|   | | | |-RecoveryExpr 0x103808858 <col:13, col:16> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x103808820 <col:13> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   | | | `-RecoveryExpr 0x1038088b8 <col:22, col:25> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x103808880 <col:22> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   | | `-IntegerLiteral 0x103808940 <col:33> 'int' 0
|   | |-CompoundStmt 0x103808ad8 <col:36, line:35:2>
|   | | |-BinaryOperator 0x103808a18 <line:33:3, col:11> 'struct fixup_entry *' '='
|   | | | |-DeclRefExpr 0x103808980 <col:3> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   | | | `-BinaryOperator 0x1038089f8 <col:7, col:11> 'struct fixup_entry *' '='
|   | | |   |-DeclRefExpr 0x1038089a0 <col:7> 'struct fixup_entry *' lvalue ParmVar 0x128128648 'p' 'struct fixup_entry *'
|   | | |   `-ImplicitCastExpr 0x1038089e0 <col:11> 'struct fixup_entry *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1038089c0 <col:11> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   | | `-BinaryOperator 0x103808ab8 <line:34:3, col:10> 'struct fixup_entry *' contains-errors '='
|   | |   |-DeclRefExpr 0x103808a38 <col:3> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   | |   `-RecoveryExpr 0x103808a90 <col:7, col:10> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x103808a58 <col:7> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   | `-CompoundStmt 0x103808c50 <line:35:9, line:38:2>
|   |   |-BinaryOperator 0x103808b90 <line:36:3, col:11> 'struct fixup_entry *' '='
|   |   | |-DeclRefExpr 0x103808af8 <col:3> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |   | `-BinaryOperator 0x103808b70 <col:7, col:11> 'struct fixup_entry *' '='
|   |   |   |-DeclRefExpr 0x103808b18 <col:7> 'struct fixup_entry *' lvalue ParmVar 0x128128648 'p' 'struct fixup_entry *'
|   |   |   `-ImplicitCastExpr 0x103808b58 <col:11> 'struct fixup_entry *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x103808b38 <col:11> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   |   `-BinaryOperator 0x103808c30 <line:37:3, col:10> 'struct fixup_entry *' contains-errors '='
|   |     |-DeclRefExpr 0x103808bb0 <col:3> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   |     `-RecoveryExpr 0x103808c08 <col:7, col:10> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x103808bd0 <col:7> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   |-WhileStmt 0x103809230 <line:41:2, line:50:2>
|   | |-RecoveryExpr 0x103808ce0 <line:41:9, col:27> '_Bool' contains-errors
|   | `-CompoundStmt 0x103809210 <col:33, line:50:2>
|   |   |-IfStmt 0x103809140 <line:42:3, line:48:3> has_else
|   |   | |-BinaryOperator 0x103808e60 <line:42:7, col:34> 'int' contains-errors '>'
|   |   | | |-CallExpr 0x103808e10 <col:7, col:30> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x103808d00 <col:7> 'int (const char *, const char *)' Function 0x128141820 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-RecoveryExpr 0x103808d58 <col:14, col:17> '<dependent type>' contains-errors lvalue
|   |   | | | | `-DeclRefExpr 0x103808d20 <col:14> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |   | | | `-RecoveryExpr 0x103808db8 <col:23, col:26> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x103808d80 <col:23> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   |   | | `-IntegerLiteral 0x103808e40 <col:34> 'int' 0
|   |   | |-CompoundStmt 0x103808fc0 <col:37, line:45:3>
|   |   | | |-BinaryOperator 0x103808f00 <line:43:4, col:14> '<dependent type>' contains-errors '='
|   |   | | | |-RecoveryExpr 0x103808eb8 <col:4, col:7> '<dependent type>' contains-errors lvalue
|   |   | | | | `-DeclRefExpr 0x103808e80 <col:4> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |   | | | `-DeclRefExpr 0x103808ee0 <col:14> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |   | | `-BinaryOperator 0x103808fa0 <line:44:4, col:11> 'struct fixup_entry *' contains-errors '='
|   |   | |   |-DeclRefExpr 0x103808f20 <col:4> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |   | |   `-RecoveryExpr 0x103808f78 <col:8, col:11> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x103808f40 <col:8> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |   | `-CompoundStmt 0x103809120 <line:45:10, line:48:3>
|   |   |   |-BinaryOperator 0x103809060 <line:46:4, col:14> '<dependent type>' contains-errors '='
|   |   |   | |-RecoveryExpr 0x103809018 <col:4, col:7> '<dependent type>' contains-errors lvalue
|   |   |   | | `-DeclRefExpr 0x103808fe0 <col:4> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |   |   | `-DeclRefExpr 0x103809040 <col:14> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   |   |   `-BinaryOperator 0x103809100 <line:47:4, col:11> 'struct fixup_entry *' contains-errors '='
|   |   |     |-DeclRefExpr 0x103809080 <col:4> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   |   |     `-RecoveryExpr 0x1038090d8 <col:8, col:11> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x1038090a0 <col:8> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   |   `-BinaryOperator 0x1038091f0 <line:49:3, col:10> 'struct fixup_entry *' contains-errors '='
|   |     |-DeclRefExpr 0x103809170 <col:3> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |     `-RecoveryExpr 0x1038091c8 <col:7, col:10> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x103809190 <col:7> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |-IfStmt 0x103809330 <line:53:2, line:54:13>
|   | |-RecoveryExpr 0x103809270 <line:53:6, col:11> '_Bool' contains-errors
|   | `-BinaryOperator 0x103809310 <line:54:3, col:13> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x1038092c8 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x103809290 <col:3> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |   `-DeclRefExpr 0x1038092f0 <col:13> 'struct fixup_entry *' lvalue Var 0x128140ad8 'a' 'struct fixup_entry *'
|   |-IfStmt 0x103809430 <line:55:2, line:56:13>
|   | |-RecoveryExpr 0x103809370 <line:55:6, col:11> '_Bool' contains-errors
|   | `-BinaryOperator 0x103809410 <line:56:3, col:13> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x1038093c8 <col:3, col:6> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x103809390 <col:3> 'struct fixup_entry *' lvalue Var 0x128140bf8 't' 'struct fixup_entry *'
|   |   `-DeclRefExpr 0x1038093f0 <col:13> 'struct fixup_entry *' lvalue Var 0x128140b68 'b' 'struct fixup_entry *'
|   `-ReturnStmt 0x1038094c0 <line:58:2, col:11>
|     `-ImplicitCastExpr 0x1038094a8 <col:9, col:11> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x103809490 <col:9, col:11> 'struct fixup_entry *' <LValueToRValue>
|         `-ParenExpr 0x103809470 <col:9, col:11> 'struct fixup_entry *' lvalue
|           `-DeclRefExpr 0x103809450 <col:10> 'struct fixup_entry *' lvalue ParmVar 0x128128648 'p' 'struct fixup_entry *'
`-FunctionDecl 0x128141820 <line:32:6> col:6 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x128141920 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x128141988 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1281418c8 <<invalid sloc>> Implicit 887
