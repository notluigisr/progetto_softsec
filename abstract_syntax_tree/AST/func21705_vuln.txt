TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b00dbb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b00dbb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-FunctionDecl 0x12b00e108 <dataset_diviso_filec/func21705_vuln.c:1:1, line:28:1> line:1:1 asn1_get_octet_der 'int (const unsigned char *, int, int *, unsigned char *, int, int *)'
| |-ParmVarDecl 0x12b00dd08 <col:21, col:42> col:42 used der 'const unsigned char *'
| |-ParmVarDecl 0x12b00dd88 <col:47, col:51> col:51 used der_len 'int'
| |-ParmVarDecl 0x12b00de38 <line:2:7, col:12> col:12 used ret_len 'int *'
| |-ParmVarDecl 0x12b00dee8 <col:21, col:36> col:36 used str 'unsigned char *'
| |-ParmVarDecl 0x12b00df68 <col:41, col:45> col:45 used str_size 'int'
| |-ParmVarDecl 0x12b00dfe8 <line:3:7, col:12> col:12 used str_len 'int *'
| `-CompoundStmt 0x12b0280c0 <line:4:1, line:28:1>
|   |-DeclStmt 0x12b00e2c8 <line:5:3, col:18>
|   | `-VarDecl 0x12b00e240 <col:3, col:17> col:7 used len_len 'int' cinit
|   |   `-IntegerLiteral 0x12b00e2a8 <col:17> 'int' 0
|   |-IfStmt 0x12b00e3b8 <line:7:3, line:8:12>
|   | |-BinaryOperator 0x12b00e338 <line:7:7, col:18> 'int' '<='
|   | | |-ImplicitCastExpr 0x12b00e320 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12b00e2e0 <col:7> 'int' lvalue ParmVar 0x12b00dd88 'der_len' 'int'
|   | | `-IntegerLiteral 0x12b00e300 <col:18> 'int' 0
|   | `-ReturnStmt 0x12b00e3a8 <line:8:5, col:12>
|   |   `-RecoveryExpr 0x12b00e388 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12b026890 <line:11:3, col:57> 'int' '='
|   | |-UnaryOperator 0x12b026618 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12b026600 <col:4> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12b00e3d8 <col:4> 'int *' lvalue ParmVar 0x12b00dfe8 'str_len' 'int *'
|   | `-CallExpr 0x12b026828 <col:14, col:57> 'int'
|   |   |-ImplicitCastExpr 0x12b026810 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12b026740 <col:14> 'int ()' Function 0x12b026688 'asn1_get_length_der' 'int ()'
|   |   |-ImplicitCastExpr 0x12b026860 <col:35> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12b026760 <col:35> 'const unsigned char *' lvalue ParmVar 0x12b00dd08 'der' 'const unsigned char *'
|   |   |-ImplicitCastExpr 0x12b026878 <col:40> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12b026780 <col:40> 'int' lvalue ParmVar 0x12b00dd88 'der_len' 'int'
|   |   `-UnaryOperator 0x12b0267c0 <col:49, col:50> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x12b0267a0 <col:50> 'int' lvalue Var 0x12b00e240 'len_len' 'int'
|   |-IfStmt 0x12b0269a0 <line:13:3, line:14:12>
|   | |-BinaryOperator 0x12b026938 <line:13:7, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x12b026920 <col:7, col:8> 'int' <LValueToRValue>
|   | | | `-UnaryOperator 0x12b0268e8 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x12b0268d0 <col:8> 'int *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x12b0268b0 <col:8> 'int *' lvalue ParmVar 0x12b00dfe8 'str_len' 'int *'
|   | | `-IntegerLiteral 0x12b026900 <col:18> 'int' 0
|   | `-ReturnStmt 0x12b026990 <line:14:5, col:12>
|   |   `-RecoveryExpr 0x12b026970 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12b026ad0 <line:16:3, col:25> 'int' '='
|   | |-UnaryOperator 0x12b0269f8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12b0269e0 <col:4> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12b0269c0 <col:4> 'int *' lvalue ParmVar 0x12b00de38 'ret_len' 'int *'
|   | `-BinaryOperator 0x12b026ab0 <col:14, col:25> 'int' '+'
|   |   |-ImplicitCastExpr 0x12b026a80 <col:14, col:15> 'int' <LValueToRValue>
|   |   | `-UnaryOperator 0x12b026a48 <col:14, col:15> 'int' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x12b026a30 <col:15> 'int *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12b026a10 <col:15> 'int *' lvalue ParmVar 0x12b00dfe8 'str_len' 'int *'
|   |   `-ImplicitCastExpr 0x12b026a98 <col:25> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12b026a60 <col:25> 'int' lvalue Var 0x12b00e240 'len_len' 'int'
|   |-IfStmt 0x12b028048 <line:17:3, line:25:5> has_else
|   | |-BinaryOperator 0x12b026b90 <line:17:7, col:20> 'int' '>='
|   | | |-ImplicitCastExpr 0x12b026b60 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12b026af0 <col:7> 'int' lvalue ParmVar 0x12b00df68 'str_size' 'int'
|   | | `-ImplicitCastExpr 0x12b026b78 <col:19, col:20> 'int' <LValueToRValue>
|   | |   `-UnaryOperator 0x12b026b48 <col:19, col:20> 'int' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x12b026b30 <col:20> 'int *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x12b026b10 <col:20> 'int *' lvalue ParmVar 0x12b00dfe8 'str_len' 'int *'
|   | |-CompoundStmt 0x12b0275b8 <line:18:5, line:21:5>
|   | | `-IfStmt 0x12b027598 <line:19:7, line:20:45>
|   | |   |-BinaryOperator 0x12b026c38 <line:19:11, col:22> 'int' '>'
|   | |   | |-ImplicitCastExpr 0x12b026c20 <col:11, col:12> 'int' <LValueToRValue>
|   | |   | | `-UnaryOperator 0x12b026be8 <col:11, col:12> 'int' lvalue prefix '*' cannot overflow
|   | |   | |   `-ImplicitCastExpr 0x12b026bd0 <col:12> 'int *' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x12b026bb0 <col:12> 'int *' lvalue ParmVar 0x12b00dfe8 'str_len' 'int *'
|   | |   | `-IntegerLiteral 0x12b026c00 <col:22> 'int' 0
|   | |   `-CallExpr 0x12b0274e8 <line:20:9, col:45> 'void *'
|   | |     |-ImplicitCastExpr 0x12b0274d0 <col:9> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x12b027350 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x12b027100 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     |-ImplicitCastExpr 0x12b027538 <col:17> 'void *' <BitCast>
|   | |     | `-ImplicitCastExpr 0x12b027520 <col:17> 'unsigned char *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x12b027370 <col:17> 'unsigned char *' lvalue ParmVar 0x12b00dee8 'str' 'unsigned char *'
|   | |     |-ImplicitCastExpr 0x12b027550 <col:22, col:28> 'const void *' <BitCast>
|   | |     | `-BinaryOperator 0x12b027400 <col:22, col:28> 'const unsigned char *' '+'
|   | |     |   |-ImplicitCastExpr 0x12b0273d0 <col:22> 'const unsigned char *' <LValueToRValue>
|   | |     |   | `-DeclRefExpr 0x12b027390 <col:22> 'const unsigned char *' lvalue ParmVar 0x12b00dd08 'der' 'const unsigned char *'
|   | |     |   `-ImplicitCastExpr 0x12b0273e8 <col:28> 'int' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x12b0273b0 <col:28> 'int' lvalue Var 0x12b00e240 'len_len' 'int'
|   | |     `-ImplicitCastExpr 0x12b027580 <col:37, col:38> 'unsigned long' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x12b027568 <col:37, col:38> 'int' <LValueToRValue>
|   | |         `-UnaryOperator 0x12b027458 <col:37, col:38> 'int' lvalue prefix '*' cannot overflow
|   | |           `-ImplicitCastExpr 0x12b027440 <col:38> 'int *' <LValueToRValue>
|   | |             `-DeclRefExpr 0x12b027420 <col:38> 'int *' lvalue ParmVar 0x12b00dfe8 'str_len' 'int *'
|   | `-CompoundStmt 0x12b028030 <line:23:5, line:25:5>
|   |   `-ReturnStmt 0x12b028020 <line:24:7, col:14>
|   |     `-RecoveryExpr 0x12b028000 <col:14> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12b0280b0 <line:27:3, col:10>
|     `-RecoveryExpr 0x12b028090 <col:10> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x12b027100 <line:20:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12b027200 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12b027268 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12b0272d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12b0271a8 <<invalid sloc>> Implicit 882
