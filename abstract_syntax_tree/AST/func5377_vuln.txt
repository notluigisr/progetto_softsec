TranslationUnitDecl 0x136055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1360564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136055bd0 '__int128'
|-TypedefDecl 0x136056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136055bf0 'unsigned __int128'
|-TypedefDecl 0x136126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x136126800 'struct __NSConstantString_tag'
|   `-Record 0x136056580 '__NSConstantString_tag'
|-TypedefDecl 0x136126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136055d90 '__SVInt8_t'
|-TypedefDecl 0x136126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136055db0 '__SVInt16_t'
|-TypedefDecl 0x136126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136055dd0 '__SVInt32_t'
|-TypedefDecl 0x136126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136055df0 '__SVInt64_t'
|-TypedefDecl 0x136126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136055e10 '__SVUint8_t'
|-TypedefDecl 0x136126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136055e30 '__SVUint16_t'
|-TypedefDecl 0x136126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136055e50 '__SVUint32_t'
|-TypedefDecl 0x136126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136055e70 '__SVUint64_t'
|-TypedefDecl 0x136126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136055e90 '__SVFloat16_t'
|-TypedefDecl 0x136126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136055eb0 '__SVFloat32_t'
|-TypedefDecl 0x136126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136055ed0 '__SVFloat64_t'
|-TypedefDecl 0x136126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x136126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x136126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x136127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1361270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x136127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x136127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1361271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x136127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1361272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x136127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x136127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1361273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x136127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1361274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1360560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x136127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1360560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x136127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1360560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1361275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x136127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1361276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x136127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x136127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x136128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1360561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x136128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1360561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1361280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1360561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x136128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1361281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136056230 '__clang_svint16x4_t'
|-TypedefDecl 0x136128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136056250 '__clang_svint32x4_t'
|-TypedefDecl 0x136128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1361282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x136128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1360562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1361283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1360562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x136128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1360562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x136128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1361284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x136128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1361285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x136128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136056390 '__SVBool_t'
|-TypedefDecl 0x136128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1360563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1361286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1360563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x136128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1360563f0 '__SVCount_t'
|-TypedefDecl 0x1361287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1361287b0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
|-TypedefDecl 0x136128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1361287b0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
`-FunctionDecl 0x136128c38 <dataset_diviso_filec/func5377_vuln.c:1:1, line:71:1> line:1:12 invalid ras_putdatastd 'int (int *, int *, int *, int, int *)' static
  |-ParmVarDecl 0x136128928 <col:27, col:41> col:41 invalid out 'int *'
  |-ParmVarDecl 0x1361289a8 <col:46, col:57> col:57 referenced invalid hdr 'int *'
  |-ParmVarDecl 0x136128a28 <col:62, col:75> col:75 invalid image 'int *'
  |-ParmVarDecl 0x136128aa8 <col:83, col:87> col:87 used numcmpts 'int'
  |-ParmVarDecl 0x136128b28 <col:97, col:102> col:102 used cmpts 'int *'
  `-CompoundStmt 0x13680d598 <line:2:1, line:71:1>
    |-DeclStmt 0x136128d88 <line:3:2, col:13>
    | `-VarDecl 0x136128d20 <col:2, col:6> col:6 used rowsize 'int'
    |-DeclStmt 0x136128e20 <line:4:2, col:9>
    | `-VarDecl 0x136128db8 <col:2, col:6> col:6 used pad 'int'
    |-DeclStmt 0x136128eb8 <line:5:2, col:16>
    | `-VarDecl 0x136128e50 <col:2, col:15> col:15 used z 'unsigned int'
    |-DeclStmt 0x136128f50 <line:6:2, col:8>
    | `-VarDecl 0x136128ee8 <col:2, col:6> col:6 used nz 'int'
    |-DeclStmt 0x136128fe8 <line:7:2, col:7>
    | `-VarDecl 0x136128f80 <col:2, col:6> col:6 used c 'int'
    |-DeclStmt 0x136808880 <line:8:2, col:7>
    | `-VarDecl 0x136808818 <col:2, col:6> col:6 used x 'int'
    |-DeclStmt 0x136808918 <line:9:2, col:7>
    | `-VarDecl 0x1368088b0 <col:2, col:6> col:6 used y 'int'
    |-DeclStmt 0x1368089b0 <line:10:2, col:7>
    | `-VarDecl 0x136808948 <col:2, col:6> col:6 used v 'int'
    |-DeclStmt 0x136808a80 <line:12:2, col:7>
    | `-VarDecl 0x136808a18 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x136809168 <line:14:2, line:17:2>
    | |-BinaryOperator 0x136808ad8 <line:14:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x136808a98 <col:7> 'int' lvalue Var 0x136808a18 'i' 'int'
    | | `-IntegerLiteral 0x136808ab8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x136808b68 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x136808b38 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x136808af8 <col:14> 'int' lvalue Var 0x136808a18 'i' 'int'
    | | `-ImplicitCastExpr 0x136808b50 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x136808b18 <col:18> 'int' lvalue ParmVar 0x136128aa8 'numcmpts' 'int'
    | |-UnaryOperator 0x136808ba8 <col:28, col:30> 'int' prefix '++'
    | | `-DeclRefExpr 0x136808b88 <col:30> 'int' lvalue Var 0x136808a18 'i' 'int'
    | `-CompoundStmt 0x136809158 <col:33, line:17:2>
    |-BinaryOperator 0x136809308 <line:19:2, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x1368091a0 <col:2> 'int' lvalue Var 0x136128d20 'rowsize' 'int'
    | `-CallExpr 0x1368092e0 <col:12, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1368092a0 <col:12> 'int ()' Function 0x1368091e8 'RAS_ROWSIZE' 'int ()'
    |   `-RecoveryExpr 0x1368092c0 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x136809518 <line:20:2, col:50> 'int' contains-errors '='
    | |-DeclRefExpr 0x136809328 <col:2> 'int' lvalue Var 0x136128db8 'pad' 'int'
    | `-BinaryOperator 0x1368094f8 <col:8, col:50> '<dependent type>' contains-errors '-'
    |   |-DeclRefExpr 0x136809348 <col:8> 'int' lvalue Var 0x136128d20 'rowsize' 'int'
    |   `-BinaryOperator 0x1368094d8 <col:18, col:50> '<dependent type>' contains-errors '/'
    |     |-ParenExpr 0x136809498 <col:18, col:46> '<dependent type>' contains-errors
    |     | `-BinaryOperator 0x136809478 <col:19, col:45> '<dependent type>' contains-errors '+'
    |     |   |-BinaryOperator 0x136809438 <col:19, col:37> '<dependent type>' contains-errors '*'
    |     |   | |-CXXDependentScopeMemberExpr 0x136809388 <col:19, col:24> '<dependent type>' contains-errors lvalue ->width
    |     |   | | `-RecoveryExpr 0x136809368 <col:19> '<dependent type>' contains-errors lvalue
    |     |   | `-CXXDependentScopeMemberExpr 0x1368093f0 <col:32, col:37> '<dependent type>' contains-errors lvalue ->depth
    |     |   |   `-RecoveryExpr 0x1368093d0 <col:32> '<dependent type>' contains-errors lvalue
    |     |   `-IntegerLiteral 0x136809458 <col:45> 'int' 7
    |     `-IntegerLiteral 0x1368094b8 <col:50> 'int' 8
    |-BinaryOperator 0x136809670 <line:22:2, col:30> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136809580 <col:2, col:7> '<dependent type>' contains-errors lvalue ->length
    | | `-RecoveryExpr 0x136809558 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136809538 <col:2> 'int *' lvalue ParmVar 0x1361289a8 'hdr' 'int *'
    | `-BinaryOperator 0x136809650 <col:16, col:30> '<dependent type>' contains-errors '*'
    |   |-CXXDependentScopeMemberExpr 0x1368095e8 <col:16, col:21> '<dependent type>' contains-errors lvalue ->height
    |   | `-RecoveryExpr 0x1368095c8 <col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x136809630 <col:30> 'int' lvalue Var 0x136128d20 'rowsize' 'int'
    |-ForStmt 0x13680d2a0 <line:24:2, line:64:2>
    | |-BinaryOperator 0x1368096d0 <line:24:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x136809690 <col:7> 'int' lvalue Var 0x1368088b0 'y' 'int'
    | | `-IntegerLiteral 0x1368096b0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x136809778 <col:14, col:23> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1368096f0 <col:14> 'int' lvalue Var 0x1368088b0 'y' 'int'
    | | `-CXXDependentScopeMemberExpr 0x136809730 <col:18, col:23> '<dependent type>' contains-errors lvalue ->height
    | |   `-RecoveryExpr 0x136809710 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1368097b8 <col:31, col:32> 'int' postfix '++'
    | | `-DeclRefExpr 0x136809798 <col:31> 'int' lvalue Var 0x1368088b0 'y' 'int'
    | `-CompoundStmt 0x13680d260 <col:36, line:64:2>
    |   |-ForStmt 0x13680b270 <line:25:3, line:30:3>
    |   | |-BinaryOperator 0x13680ae20 <line:25:8, col:12> 'int' '='
    |   | | |-DeclRefExpr 0x1368097d0 <col:8> 'int' lvalue Var 0x136808a18 'i' 'int'
    |   | | `-IntegerLiteral 0x13680ae00 <col:12> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x13680aeb0 <col:15, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x13680ae80 <col:15> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13680ae40 <col:15> 'int' lvalue Var 0x136808a18 'i' 'int'
    |   | | `-ImplicitCastExpr 0x13680ae98 <col:19> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13680ae60 <col:19> 'int' lvalue ParmVar 0x136128aa8 'numcmpts' 'int'
    |   | |-UnaryOperator 0x13680aef0 <col:29, col:31> 'int' prefix '++'
    |   | | `-DeclRefExpr 0x13680aed0 <col:31> 'int' lvalue Var 0x136808a18 'i' 'int'
    |   | `-CompoundStmt 0x13680b258 <col:34, line:30:3>
    |   |   `-IfStmt 0x13680b238 <line:26:4, line:29:4>
    |   |     |-RecoveryExpr 0x13680b1b8 <line:26:8, line:27:40> '_Bool' contains-errors
    |   |     `-CompoundStmt 0x13680b220 <col:43, line:29:4>
    |   |       `-ReturnStmt 0x13680b210 <line:28:5, col:13>
    |   |         `-UnaryOperator 0x13680b1f8 <col:12, col:13> 'int' prefix '-'
    |   |           `-IntegerLiteral 0x13680b1d8 <col:13> 'int' 1
    |   |-BinaryOperator 0x13680b300 <line:31:3, col:7> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13680b2a8 <col:3> 'unsigned int' lvalue Var 0x136128e50 'z' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13680b2e8 <col:7> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13680b2c8 <col:7> 'int' 0
    |   |-BinaryOperator 0x13680b360 <line:32:3, col:8> 'int' '='
    |   | |-DeclRefExpr 0x13680b320 <col:3> 'int' lvalue Var 0x136128ee8 'nz' 'int'
    |   | `-IntegerLiteral 0x13680b340 <col:8> 'int' 0
    |   |-ForStmt 0x13680cc28 <line:33:3, line:52:3>
    |   | |-BinaryOperator 0x13680b3c0 <line:33:8, col:12> 'int' '='
    |   | | |-DeclRefExpr 0x13680b380 <col:8> 'int' lvalue Var 0x136808818 'x' 'int'
    |   | | `-IntegerLiteral 0x13680b3a0 <col:12> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x13680b468 <col:15, col:24> 'int' contains-errors '<'
    |   | | |-DeclRefExpr 0x13680b3e0 <col:15> 'int' lvalue Var 0x136808818 'x' 'int'
    |   | | `-CXXDependentScopeMemberExpr 0x13680b420 <col:19, col:24> '<dependent type>' contains-errors lvalue ->width
    |   | |   `-RecoveryExpr 0x13680b400 <col:19> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x13680b4a8 <col:31, col:32> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x13680b488 <col:31> 'int' lvalue Var 0x136808818 'x' 'int'
    |   | `-CompoundStmt 0x13680cbf0 <col:36, line:52:3>
    |   |   |-CompoundAssignOperator 0x13680b548 <line:34:4, col:15> 'unsigned int' contains-errors '<<=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   | |-DeclRefExpr 0x13680b4c0 <col:4> 'unsigned int' lvalue Var 0x136128e50 'z' 'unsigned int'
    |   |   | `-CXXDependentScopeMemberExpr 0x13680b500 <col:10, col:15> '<dependent type>' contains-errors lvalue ->depth
    |   |   |   `-RecoveryExpr 0x13680b4e0 <col:10> '<dependent type>' contains-errors lvalue
    |   |   |-IfStmt 0x13680bc98 <line:35:4, line:41:4> has_else
    |   |   | |-CallExpr 0x13680b698 <line:35:8, col:21> '<dependent type>' contains-errors
    |   |   | | |-DeclRefExpr 0x13680b658 <col:8> 'int ()' Function 0x13680b5a0 'RAS_ISRGB' 'int ()'
    |   |   | | `-RecoveryExpr 0x13680b678 <col:18> '<dependent type>' contains-errors lvalue
    |   |   | |-CompoundStmt 0x13680bbf8 <col:24, line:39:4>
    |   |   | `-CompoundStmt 0x13680bc88 <col:11, line:41:4>
    |   |   |-CompoundAssignOperator 0x13680c4d0 <line:42:4, col:32> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   | |-DeclRefExpr 0x13680bcc8 <col:4> 'unsigned int' lvalue Var 0x136128e50 'z' 'unsigned int'
    |   |   | `-BinaryOperator 0x13680c4b0 <col:9, col:32> '<dependent type>' contains-errors '&'
    |   |   |   |-DeclRefExpr 0x13680bce8 <col:9> 'int' lvalue Var 0x136808948 'v' 'int'
    |   |   |   `-CallExpr 0x13680c488 <col:13, col:32> '<dependent type>' contains-errors
    |   |   |     |-DeclRefExpr 0x13680c400 <col:13> 'int ()' Function 0x13680bd30 'RAS_ONES' 'int ()'
    |   |   |     `-CXXDependentScopeMemberExpr 0x13680c440 <col:22, col:27> '<dependent type>' contains-errors lvalue ->depth
    |   |   |       `-RecoveryExpr 0x13680c420 <col:22> '<dependent type>' contains-errors lvalue
    |   |   |-CompoundAssignOperator 0x13680c588 <line:43:4, col:15> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   | |-DeclRefExpr 0x13680c500 <col:4> 'int' lvalue Var 0x136128ee8 'nz' 'int'
    |   |   | `-CXXDependentScopeMemberExpr 0x13680c540 <col:10, col:15> '<dependent type>' contains-errors lvalue ->depth
    |   |   |   `-RecoveryExpr 0x13680c520 <col:10> '<dependent type>' contains-errors lvalue
    |   |   `-WhileStmt 0x13680cbd0 <line:44:4, line:51:4>
    |   |     |-BinaryOperator 0x13680c610 <line:44:11, col:17> 'int' '>='
    |   |     | |-ImplicitCastExpr 0x13680c5f8 <col:11> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x13680c5b8 <col:11> 'int' lvalue Var 0x136128ee8 'nz' 'int'
    |   |     | `-IntegerLiteral 0x13680c5d8 <col:17> 'int' 8
    |   |     `-CompoundStmt 0x13680cba0 <col:20, line:51:4>
    |   |       |-BinaryOperator 0x13680c7d0 <line:45:5, col:27> 'int' '='
    |   |       | |-DeclRefExpr 0x13680c630 <col:5> 'int' lvalue Var 0x136128f80 'c' 'int'
    |   |       | `-ImplicitCastExpr 0x13680c7b8 <col:9, col:27> 'int' <IntegralCast>
    |   |       |   `-BinaryOperator 0x13680c798 <col:9, col:27> 'unsigned int' '&'
    |   |       |     |-ParenExpr 0x13680c740 <col:9, col:23> 'unsigned int'
    |   |       |     | `-BinaryOperator 0x13680c720 <col:10, col:22> 'unsigned int' '>>'
    |   |       |     |   |-ImplicitCastExpr 0x13680c708 <col:10> 'unsigned int' <LValueToRValue>
    |   |       |     |   | `-DeclRefExpr 0x13680c650 <col:10> 'unsigned int' lvalue Var 0x136128e50 'z' 'unsigned int'
    |   |       |     |   `-ParenExpr 0x13680c6e8 <col:15, col:22> 'int'
    |   |       |     |     `-BinaryOperator 0x13680c6c8 <col:16, col:21> 'int' '-'
    |   |       |     |       |-ImplicitCastExpr 0x13680c6b0 <col:16> 'int' <LValueToRValue>
    |   |       |     |       | `-DeclRefExpr 0x13680c670 <col:16> 'int' lvalue Var 0x136128ee8 'nz' 'int'
    |   |       |     |       `-IntegerLiteral 0x13680c690 <col:21> 'int' 8
    |   |       |     `-ImplicitCastExpr 0x13680c780 <col:27> 'unsigned int' <IntegralCast>
    |   |       |       `-IntegerLiteral 0x13680c760 <col:27> 'int' 255
    |   |       |-IfStmt 0x13680c9e0 <line:46:5, line:48:5>
    |   |       | |-RecoveryExpr 0x13680c960 <line:46:9, col:36> '_Bool' contains-errors
    |   |       | `-CompoundStmt 0x13680c9c8 <col:41, line:48:5>
    |   |       |   `-ReturnStmt 0x13680c9b8 <line:47:6, col:14>
    |   |       |     `-UnaryOperator 0x13680c9a0 <col:13, col:14> 'int' prefix '-'
    |   |       |       `-IntegerLiteral 0x13680c980 <col:14> 'int' 1
    |   |       |-CompoundAssignOperator 0x13680ca40 <line:49:5, col:11> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |       | |-DeclRefExpr 0x13680ca00 <col:5> 'int' lvalue Var 0x136128ee8 'nz' 'int'
    |   |       | `-IntegerLiteral 0x13680ca20 <col:11> 'int' 8
    |   |       `-CompoundAssignOperator 0x13680cb70 <line:50:5, col:21> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   |         |-DeclRefExpr 0x13680ca70 <col:5> 'unsigned int' lvalue Var 0x136128e50 'z' 'unsigned int'
    |   |         `-ImplicitCastExpr 0x13680cb58 <col:10, col:21> 'unsigned int' <IntegralCast>
    |   |           `-CallExpr 0x13680cb18 <col:10, col:21> 'int'
    |   |             |-ImplicitCastExpr 0x13680cb00 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |             | `-DeclRefExpr 0x13680ca90 <col:10> 'int ()' Function 0x13680bd30 'RAS_ONES' 'int ()'
    |   |             `-ImplicitCastExpr 0x13680cb40 <col:19> 'int' <LValueToRValue>
    |   |               `-DeclRefExpr 0x13680cab0 <col:19> 'int' lvalue Var 0x136128ee8 'nz' 'int'
    |   |-IfStmt 0x13680d060 <line:53:3, line:58:3>
    |   | |-BinaryOperator 0x13680ccb8 <line:53:7, col:12> 'int' '>'
    |   | | |-ImplicitCastExpr 0x13680cca0 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13680cc60 <col:7> 'int' lvalue Var 0x136128ee8 'nz' 'int'
    |   | | `-IntegerLiteral 0x13680cc80 <col:12> 'int' 0
    |   | `-CompoundStmt 0x13680d040 <col:15, line:58:3>
    |   |   |-BinaryOperator 0x13680cef0 <line:54:4, col:37> 'int' '='
    |   |   | |-DeclRefExpr 0x13680ccd8 <col:4> 'int' lvalue Var 0x136128f80 'c' 'int'
    |   |   | `-ImplicitCastExpr 0x13680ced8 <col:8, col:37> 'int' <IntegralCast>
    |   |   |   `-BinaryOperator 0x13680ceb8 <col:8, col:37> 'unsigned int' '&'
    |   |   |     |-ParenExpr 0x13680cde8 <col:8, col:22> 'unsigned int'
    |   |   |     | `-BinaryOperator 0x13680cdc8 <col:9, col:21> 'unsigned int' '>>'
    |   |   |     |   |-ImplicitCastExpr 0x13680cdb0 <col:9> 'unsigned int' <LValueToRValue>
    |   |   |     |   | `-DeclRefExpr 0x13680ccf8 <col:9> 'unsigned int' lvalue Var 0x136128e50 'z' 'unsigned int'
    |   |   |     |   `-ParenExpr 0x13680cd90 <col:14, col:21> 'int'
    |   |   |     |     `-BinaryOperator 0x13680cd70 <col:15, col:19> 'int' '-'
    |   |   |     |       |-IntegerLiteral 0x13680cd18 <col:15> 'int' 8
    |   |   |     |       `-ImplicitCastExpr 0x13680cd58 <col:19> 'int' <LValueToRValue>
    |   |   |     |         `-DeclRefExpr 0x13680cd38 <col:19> 'int' lvalue Var 0x136128ee8 'nz' 'int'
    |   |   |     `-ImplicitCastExpr 0x13680cea0 <col:26, col:37> 'unsigned int' <IntegralCast>
    |   |   |       `-CallExpr 0x13680ce60 <col:26, col:37> 'int'
    |   |   |         |-ImplicitCastExpr 0x13680ce48 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |   |   |         | `-DeclRefExpr 0x13680ce08 <col:26> 'int ()' Function 0x13680bd30 'RAS_ONES' 'int ()'
    |   |   |         `-ImplicitCastExpr 0x13680ce88 <col:35> 'int' <LValueToRValue>
    |   |   |           `-DeclRefExpr 0x13680ce28 <col:35> 'int' lvalue Var 0x136128ee8 'nz' 'int'
    |   |   `-IfStmt 0x13680d020 <line:55:4, line:57:4>
    |   |     |-RecoveryExpr 0x13680cfa0 <line:55:8, col:35> '_Bool' contains-errors
    |   |     `-CompoundStmt 0x13680d008 <col:40, line:57:4>
    |   |       `-ReturnStmt 0x13680cff8 <line:56:5, col:13>
    |   |         `-UnaryOperator 0x13680cfe0 <col:12, col:13> 'int' prefix '-'
    |   |           `-IntegerLiteral 0x13680cfc0 <col:13> 'int' 1
    |   `-IfStmt 0x13680d240 <line:59:3, line:63:3>
    |     |-BinaryOperator 0x13680d0d8 <line:59:7, col:13> 'int' '%'
    |     | |-ImplicitCastExpr 0x13680d0c0 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x13680d080 <col:7> 'int' lvalue Var 0x136128db8 'pad' 'int'
    |     | `-IntegerLiteral 0x13680d0a0 <col:13> 'int' 2
    |     `-CompoundStmt 0x13680d228 <col:16, line:63:3>
    |       `-IfStmt 0x13680d208 <line:60:4, line:62:4>
    |         |-RecoveryExpr 0x13680d188 <line:60:8, col:35> '_Bool' contains-errors
    |         `-CompoundStmt 0x13680d1f0 <col:40, line:62:4>
    |           `-ReturnStmt 0x13680d1e0 <line:61:5, col:13>
    |             `-UnaryOperator 0x13680d1c8 <col:12, col:13> 'int' prefix '-'
    |               `-IntegerLiteral 0x13680d1a8 <col:13> 'int' 1
    |-ForStmt 0x13680d530 <line:66:2, line:68:2>
    | |-BinaryOperator 0x13680d318 <line:66:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x13680d2d8 <col:7> 'int' lvalue Var 0x136808a18 'i' 'int'
    | | `-IntegerLiteral 0x13680d2f8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13680d3a8 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x13680d378 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13680d338 <col:14> 'int' lvalue Var 0x136808a18 'i' 'int'
    | | `-ImplicitCastExpr 0x13680d390 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13680d358 <col:18> 'int' lvalue ParmVar 0x136128aa8 'numcmpts' 'int'
    | |-UnaryOperator 0x13680d3e8 <col:28, col:30> 'int' prefix '++'
    | | `-DeclRefExpr 0x13680d3c8 <col:30> 'int' lvalue Var 0x136808a18 'i' 'int'
    | `-CompoundStmt 0x13680d520 <col:33, line:68:2>
    `-ReturnStmt 0x13680d588 <line:70:2, col:9>
      `-IntegerLiteral 0x13680d568 <col:9> 'int' 0
