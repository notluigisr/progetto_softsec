TranslationUnitDecl 0x143831208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1438320b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1438317d0 '__int128'
|-TypedefDecl 0x143832128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1438317f0 'unsigned __int128'
|-TypedefDecl 0x143901e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x143901c00 'struct __NSConstantString_tag'
|   `-Record 0x143832180 '__NSConstantString_tag'
|-TypedefDecl 0x143901e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x143831990 '__SVInt8_t'
|-TypedefDecl 0x143901f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1438319b0 '__SVInt16_t'
|-TypedefDecl 0x143901f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1438319d0 '__SVInt32_t'
|-TypedefDecl 0x143901fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1438319f0 '__SVInt64_t'
|-TypedefDecl 0x143902038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x143831a10 '__SVUint8_t'
|-TypedefDecl 0x1439020a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x143831a30 '__SVUint16_t'
|-TypedefDecl 0x143902108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x143831a50 '__SVUint32_t'
|-TypedefDecl 0x143902170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x143831a70 '__SVUint64_t'
|-TypedefDecl 0x1439021d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x143831a90 '__SVFloat16_t'
|-TypedefDecl 0x143902240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x143831ab0 '__SVFloat32_t'
|-TypedefDecl 0x1439022a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x143831ad0 '__SVFloat64_t'
|-TypedefDecl 0x143902310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x143831af0 '__SVBfloat16_t'
|-TypedefDecl 0x143902378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x143831b10 '__clang_svint8x2_t'
|-TypedefDecl 0x1439023e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x143831b30 '__clang_svint16x2_t'
|-TypedefDecl 0x143902448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x143831b50 '__clang_svint32x2_t'
|-TypedefDecl 0x1439024b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x143831b70 '__clang_svint64x2_t'
|-TypedefDecl 0x143902518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x143831b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x143902580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x143831bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1439025e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x143831bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x143902650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x143831bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1439026b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x143831c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x143902720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x143831c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x143902788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x143831c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1439027f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x143831c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x143902858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x143831c90 '__clang_svint8x3_t'
|-TypedefDecl 0x1439028c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x143831cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x143902928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x143831cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x143902990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x143831cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x1439029f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x143831d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x143902a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x143831d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x143902ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x143831d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x143902b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x143831d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x143902b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x143831d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x143903400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x143831db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x143903468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x143831dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1439034d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x143831df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x143903538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x143831e10 '__clang_svint8x4_t'
|-TypedefDecl 0x1439035a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x143831e30 '__clang_svint16x4_t'
|-TypedefDecl 0x143903608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x143831e50 '__clang_svint32x4_t'
|-TypedefDecl 0x143903670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x143831e70 '__clang_svint64x4_t'
|-TypedefDecl 0x1439036d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x143831e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x143903740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x143831eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1439037a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x143831ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x143903810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x143831ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x143903878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x143831f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1439038e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x143831f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x143903948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x143831f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1439039b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x143831f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x143903a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x143831f90 '__SVBool_t'
|-TypedefDecl 0x143903a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x143831fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x143903ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x143831fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x143903b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x143831ff0 '__SVCount_t'
|-TypedefDecl 0x143903bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x143903bb0 'char *'
|   `-BuiltinType 0x1438312b0 'char'
|-TypedefDecl 0x143903c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x143903bb0 'char *'
|   `-BuiltinType 0x1438312b0 'char'
`-FunctionDecl 0x143903e38 <dataset_diviso_filec/func23891_vuln.c:1:1, line:40:1> line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x143903d58 <col:12> col:12 SplFileObject 'int'
  |-ParmVarDecl 0x143903cd8 <col:27> col:27 fputcsv 'int'
  `-CompoundStmt 0x142013f30 <line:2:1, line:40:1>
    |-DeclStmt 0x14391c8c8 <line:4:2, col:113>
    | |-VarDecl 0x143903f90 <col:2, col:34> col:7 used delimiter 'char' cinit
    | | `-CXXDependentScopeMemberExpr 0x143904198 <col:19, col:34> '<dependent type>' contains-errors lvalue .delimiter
    | |   `-CXXDependentScopeMemberExpr 0x143904150 <col:19, col:29> '<dependent type>' contains-errors lvalue .file
    | |     `-CXXDependentScopeMemberExpr 0x143904108 <col:19, col:27> '<dependent type>' contains-errors lvalue ->u
    | |       `-RecoveryExpr 0x1439040e8 <col:19> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x1439041f0 <col:2, col:72> col:45 used enclosure 'char' cinit
    | | `-CXXDependentScopeMemberExpr 0x14391c600 <col:57, col:72> '<dependent type>' contains-errors lvalue .enclosure
    | |   `-CXXDependentScopeMemberExpr 0x1439043b0 <col:57, col:67> '<dependent type>' contains-errors lvalue .file
    | |     `-CXXDependentScopeMemberExpr 0x143904368 <col:57, col:65> '<dependent type>' contains-errors lvalue ->u
    | |       `-RecoveryExpr 0x143904348 <col:57> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x14391c658 <col:2, col:107> col:83 used escape 'char' cinit
    |   `-CXXDependentScopeMemberExpr 0x14391c860 <col:92, col:107> '<dependent type>' contains-errors lvalue .escape
    |     `-CXXDependentScopeMemberExpr 0x14391c818 <col:92, col:102> '<dependent type>' contains-errors lvalue .file
    |       `-CXXDependentScopeMemberExpr 0x14391c7d0 <col:92, col:100> '<dependent type>' contains-errors lvalue ->u
    |         `-RecoveryExpr 0x14391c7b0 <col:92> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14391cb28 <line:5:2, col:48>
    | |-VarDecl 0x14391c8f8 <col:2, col:16> col:8 used delim 'char *' cinit
    | | `-RecoveryExpr 0x14391c978 <col:16> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x14391c9b0 <col:2, col:31> col:23 used enclo 'char *' cinit
    | | `-RecoveryExpr 0x14391ca30 <col:31> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x14391ca68 <col:2, col:44> col:38 used esc 'char *' cinit
    |   `-RecoveryExpr 0x14391cae8 <col:44> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14391cdc8 <line:6:2, col:44>
    | |-VarDecl 0x14391cb58 <col:2, col:14> col:6 used d_len 'int' cinit
    | | `-IntegerLiteral 0x14391cbc0 <col:14> 'int' 0
    | |-VarDecl 0x14391cbf8 <col:2, col:25> col:17 used e_len 'int' cinit
    | | `-IntegerLiteral 0x14391cc60 <col:25> 'int' 0
    | |-VarDecl 0x14391cc98 <col:2, col:38> col:28 used esc_len 'int' cinit
    | | `-IntegerLiteral 0x14391cd00 <col:38> 'int' 0
    | `-VarDecl 0x14391cd38 <col:2, col:41> col:41 used ret 'int'
    `-IfStmt 0x142013f10 <line:9:2, line:39:2>
      |-RecoveryExpr 0x14391d0c0 <line:9:6, col:122> '_Bool' contains-errors
      `-CompoundStmt 0x142013ef0 <col:131, line:39:2>
        |-SwitchStmt 0x14391d138 <line:10:3, line:36:3>
        | |-CallExpr 0x14391d118 <line:10:10, col:24> 'int'
        | | `-ImplicitCastExpr 0x14391d100 <col:10> 'int (*)()' <FunctionToPointerDecay>
        | |   `-DeclRefExpr 0x14391d0e0 <col:10> 'int ()' Function 0x14391cf68 'ZEND_NUM_ARGS' 'int ()'
        | `-CompoundStmt 0x142013bb0 <line:11:3, line:36:3>
        |   |-CaseStmt 0x14391d198 <line:12:3, line:16:4>
        |   | |-ConstantExpr 0x14391d180 <line:12:8> 'int'
        |   | | `-IntegerLiteral 0x14391d160 <col:8> 'int' 4
        |   | `-IfStmt 0x14391d3b0 <line:13:4, line:16:4>
        |   |   |-BinaryOperator 0x14391d218 <line:13:8, col:19> 'int' '!='
        |   |   | |-ImplicitCastExpr 0x14391d200 <col:8> 'int' <LValueToRValue>
        |   |   | | `-DeclRefExpr 0x14391d1c0 <col:8> 'int' lvalue Var 0x14391cc98 'esc_len' 'int'
        |   |   | `-IntegerLiteral 0x14391d1e0 <col:19> 'int' 1
        |   |   `-CompoundStmt 0x14391d3a0 <col:22, line:16:4>
        |   |-BinaryOperator 0x14391d480 <line:17:4, col:18> 'char' contains-errors '='
        |   | |-DeclRefExpr 0x14391d3d0 <col:4> 'char' contains-errors lvalue Var 0x14391c658 'escape' 'char'
        |   | `-ImplicitCastExpr 0x14391d468 <col:13, col:18> 'char' contains-errors <LValueToRValue>
        |   |   `-ArraySubscriptExpr 0x14391d448 <col:13, col:18> 'char' contains-errors lvalue
        |   |     |-ImplicitCastExpr 0x14391d430 <col:13> 'char *' contains-errors <LValueToRValue>
        |   |     | `-DeclRefExpr 0x14391d3f0 <col:13> 'char *' contains-errors lvalue Var 0x14391ca68 'esc' 'char *'
        |   |     `-IntegerLiteral 0x14391d410 <col:17> 'int' 0
        |   |-CaseStmt 0x14391d4d8 <line:19:3, line:23:4>
        |   | |-ConstantExpr 0x14391d4c0 <line:19:8> 'int'
        |   | | `-IntegerLiteral 0x14391d4a0 <col:8> 'int' 3
        |   | `-IfStmt 0x14391d5c8 <line:20:4, line:23:4>
        |   |   |-BinaryOperator 0x14391d558 <line:20:8, col:17> 'int' '!='
        |   |   | |-ImplicitCastExpr 0x14391d540 <col:8> 'int' <LValueToRValue>
        |   |   | | `-DeclRefExpr 0x14391d500 <col:8> 'int' lvalue Var 0x14391cbf8 'e_len' 'int'
        |   |   | `-IntegerLiteral 0x14391d520 <col:17> 'int' 1
        |   |   `-CompoundStmt 0x14391d5b8 <col:20, line:23:4>
        |   |-BinaryOperator 0x1420138b0 <line:24:4, col:23> 'char' contains-errors '='
        |   | |-DeclRefExpr 0x142013800 <col:4> 'char' contains-errors lvalue Var 0x1439041f0 'enclosure' 'char'
        |   | `-ImplicitCastExpr 0x142013898 <col:16, col:23> 'char' contains-errors <LValueToRValue>
        |   |   `-ArraySubscriptExpr 0x142013878 <col:16, col:23> 'char' contains-errors lvalue
        |   |     |-ImplicitCastExpr 0x142013860 <col:16> 'char *' contains-errors <LValueToRValue>
        |   |     | `-DeclRefExpr 0x142013820 <col:16> 'char *' contains-errors lvalue Var 0x14391c9b0 'enclo' 'char *'
        |   |     `-IntegerLiteral 0x142013840 <col:22> 'int' 0
        |   |-CaseStmt 0x142013908 <line:26:3, line:30:4>
        |   | |-ConstantExpr 0x1420138f0 <line:26:8> 'int'
        |   | | `-IntegerLiteral 0x1420138d0 <col:8> 'int' 2
        |   | `-IfStmt 0x1420139f8 <line:27:4, line:30:4>
        |   |   |-BinaryOperator 0x142013988 <line:27:8, col:17> 'int' '!='
        |   |   | |-ImplicitCastExpr 0x142013970 <col:8> 'int' <LValueToRValue>
        |   |   | | `-DeclRefExpr 0x142013930 <col:8> 'int' lvalue Var 0x14391cb58 'd_len' 'int'
        |   |   | `-IntegerLiteral 0x142013950 <col:17> 'int' 1
        |   |   `-CompoundStmt 0x1420139e8 <col:20, line:30:4>
        |   |-BinaryOperator 0x142013ac8 <line:31:4, col:23> 'char' contains-errors '='
        |   | |-DeclRefExpr 0x142013a18 <col:4> 'char' contains-errors lvalue Var 0x143903f90 'delimiter' 'char'
        |   | `-ImplicitCastExpr 0x142013ab0 <col:16, col:23> 'char' contains-errors <LValueToRValue>
        |   |   `-ArraySubscriptExpr 0x142013a90 <col:16, col:23> 'char' contains-errors lvalue
        |   |     |-ImplicitCastExpr 0x142013a78 <col:16> 'char *' contains-errors <LValueToRValue>
        |   |     | `-DeclRefExpr 0x142013a38 <col:16> 'char *' contains-errors lvalue Var 0x14391c8f8 'delim' 'char *'
        |   |     `-IntegerLiteral 0x142013a58 <col:22> 'int' 0
        |   `-CaseStmt 0x142013b20 <line:33:3, line:35:4>
        |     |-ConstantExpr 0x142013b08 <line:33:8> 'int'
        |     | `-IntegerLiteral 0x142013ae8 <col:8> 'int' 1
        |     `-CaseStmt 0x142013b80 <line:34:3, line:35:4>
        |       |-ConstantExpr 0x142013b68 <line:34:8> 'int'
        |       | `-IntegerLiteral 0x142013b48 <col:8> 'int' 0
        |       `-BreakStmt 0x142013ba8 <line:35:4>
        `-CallExpr 0x142013eb0 <line:38:3, col:18> 'int'
          |-ImplicitCastExpr 0x142013e98 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x142013e58 <col:3> 'int ()' Function 0x142013da0 'RETURN_LONG' 'int ()'
          `-ImplicitCastExpr 0x142013ed8 <col:15> 'int' <LValueToRValue>
            `-DeclRefExpr 0x142013e78 <col:15> 'int' lvalue Var 0x14391cd38 'ret' 'int'
