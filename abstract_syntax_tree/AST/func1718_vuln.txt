TranslationUnitDecl 0x157055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1570564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157055bd0 '__int128'
|-TypedefDecl 0x157056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157055bf0 'unsigned __int128'
|-TypedefDecl 0x15780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15780bc00 'struct __NSConstantString_tag'
|   `-Record 0x157056580 '__NSConstantString_tag'
|-TypedefDecl 0x15780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157055d90 '__SVInt8_t'
|-TypedefDecl 0x15780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157055db0 '__SVInt16_t'
|-TypedefDecl 0x15780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157055dd0 '__SVInt32_t'
|-TypedefDecl 0x15780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157055df0 '__SVInt64_t'
|-TypedefDecl 0x15780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157055e10 '__SVUint8_t'
|-TypedefDecl 0x15780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157055e30 '__SVUint16_t'
|-TypedefDecl 0x15780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157055e50 '__SVUint32_t'
|-TypedefDecl 0x15780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157055e70 '__SVUint64_t'
|-TypedefDecl 0x15780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157055e90 '__SVFloat16_t'
|-TypedefDecl 0x15780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1570560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1570560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1570560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1570561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1570561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1570561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1570562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1570562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1570562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157056390 '__SVBool_t'
|-TypedefDecl 0x15780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1570563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1570563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1570563f0 '__SVCount_t'
|-TypedefDecl 0x15780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
|-TypedefDecl 0x15780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
`-FunctionDecl 0x15782b7d8 <dataset_diviso_filec/func1718_vuln.c:1:1, line:35:1> line:1:1 invalid isofs_export_encode_fh 'int (struct inode *, int *, int *, struct inode *)'
  |-ParmVarDecl 0x15780e248 <col:24, col:38> col:38 used inode 'struct inode *'
  |-ParmVarDecl 0x15780e318 <line:2:10, col:17> col:17 referenced invalid fh32 'int *'
  |-ParmVarDecl 0x15780e398 <line:3:10, col:15> col:15 used max_len 'int *'
  |-ParmVarDecl 0x15782b688 <line:4:10, col:24> col:24 used parent 'struct inode *'
  `-CompoundStmt 0x1608093f8 <line:5:1, line:35:1>
    |-DeclStmt 0x15782bcc8 <line:6:2, col:45>
    | |-RecordDecl 0x15782b8a0 <col:2, col:9> col:9 struct iso_inode_info
    | `-VarDecl 0x15782ba08 <col:2, col:44> col:26 used ei 'struct iso_inode_info *' cinit
    |   `-ImplicitCastExpr 0x15782bc98 <col:31, col:44> 'struct iso_inode_info *' <IntegralToPointer>
    |     `-CallExpr 0x15782bc58 <col:31, col:44> 'int'
    |       |-ImplicitCastExpr 0x15782bc40 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x15782bbd0 <col:31> 'int ()' Function 0x15782bb18 'ISOFS_I' 'int ()'
    |       `-ImplicitCastExpr 0x15782bc80 <col:39> 'struct inode *' <LValueToRValue>
    |         `-DeclRefExpr 0x15782bbf0 <col:39> 'struct inode *' lvalue ParmVar 0x15780e248 'inode' 'struct inode *'
    |-DeclStmt 0x15782bdc8 <line:7:2, col:20>
    | `-VarDecl 0x15782bcf8 <col:2, col:13> col:6 used len 'int' cinit
    |   `-ImplicitCastExpr 0x15782bdb0 <col:12, col:13> 'int' <LValueToRValue>
    |     `-UnaryOperator 0x15782bd98 <col:12, col:13> 'int' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x15782bd80 <col:13> 'int *' <LValueToRValue>
    |         `-DeclRefExpr 0x15782bd60 <col:13> 'int *' lvalue ParmVar 0x15780e398 'max_len' 'int *'
    |-DeclStmt 0x15782be80 <line:8:2, col:14>
    | `-VarDecl 0x15782bdf8 <col:2, col:13> col:6 used type 'int' cinit
    |   `-IntegerLiteral 0x15782be60 <col:13> 'int' 1
    |-IfStmt 0x15782c230 <line:12:2, line:18:2> has_else
    | |-BinaryOperator 0x15782bfb8 <line:12:6, col:24> 'int' '&&'
    | | |-ImplicitCastExpr 0x15782bfa0 <col:6> 'struct inode *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15782bee8 <col:6> 'struct inode *' lvalue ParmVar 0x15782b688 'parent' 'struct inode *'
    | | `-ParenExpr 0x15782bf80 <col:16, col:24> 'int'
    | |   `-BinaryOperator 0x15782bf60 <col:17, col:23> 'int' '<'
    | |     |-ImplicitCastExpr 0x15782bf48 <col:17> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x15782bf08 <col:17> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    | |     `-IntegerLiteral 0x15782bf28 <col:23> 'int' 5
    | |-CompoundStmt 0x15782c098 <col:27, line:15:2>
    | | |-BinaryOperator 0x15782c048 <line:13:3, col:14> 'int' '='
    | | | |-UnaryOperator 0x15782c010 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x15782bff8 <col:4> 'int *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x15782bfd8 <col:4> 'int *' lvalue ParmVar 0x15780e398 'max_len' 'int *'
    | | | `-IntegerLiteral 0x15782c028 <col:14> 'int' 5
    | | `-ReturnStmt 0x15782c088 <line:14:3, col:10>
    | |   `-IntegerLiteral 0x15782c068 <col:10> 'int' 255
    | `-IfStmt 0x15782c210 <line:15:9, line:18:2>
    |   |-BinaryOperator 0x15782c110 <line:15:13, col:19> 'int' '<'
    |   | |-ImplicitCastExpr 0x15782c0f8 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15782c0b8 <col:13> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    |   | `-IntegerLiteral 0x15782c0d8 <col:19> 'int' 3
    |   `-CompoundStmt 0x15782c1f0 <col:22, line:18:2>
    |     |-BinaryOperator 0x15782c1a0 <line:16:3, col:14> 'int' '='
    |     | |-UnaryOperator 0x15782c168 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |     | | `-ImplicitCastExpr 0x15782c150 <col:4> 'int *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x15782c130 <col:4> 'int *' lvalue ParmVar 0x15780e398 'max_len' 'int *'
    |     | `-IntegerLiteral 0x15782c180 <col:14> 'int' 3
    |     `-ReturnStmt 0x15782c1e0 <line:17:3, col:10>
    |       `-IntegerLiteral 0x15782c1c0 <col:10> 'int' 255
    |-BinaryOperator 0x15782c2a0 <line:20:2, col:8> 'int' '='
    | |-DeclRefExpr 0x15782c260 <col:2> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    | `-IntegerLiteral 0x15782c280 <col:8> 'int' 3
    |-BinaryOperator 0x15782c3c0 <line:21:2, col:16> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x15782c340 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x15782c328 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x15782c2e0 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x15782c2c0 <col:2> 'int *' lvalue ParmVar 0x15780e318 'fh32' 'int *'
    | | `-IntegerLiteral 0x15782c308 <col:7> 'int' 0
    | `-RecoveryExpr 0x15782c398 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15782c360 <col:12> 'struct iso_inode_info *' lvalue Var 0x15782ba08 'ei' 'struct iso_inode_info *'
    |-BinaryOperator 0x15782c518 <line:23:2, col:19> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x15782c498 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x15782c480 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x15782c438 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x15782c418 <col:2> 'int *' lvalue ParmVar 0x15780e318 'fh32' 'int *'
    | | `-IntegerLiteral 0x15782c460 <col:7> 'int' 2
    | `-RecoveryExpr 0x15782c4f0 <col:12, col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15782c4b8 <col:12> 'struct inode *' lvalue ParmVar 0x15780e248 'inode' 'struct inode *'
    |-IfStmt 0x1608092e8 <line:24:2, line:32:2>
    | |-ImplicitCastExpr 0x15782c558 <line:24:6> 'struct inode *' <LValueToRValue>
    | | `-DeclRefExpr 0x15782c538 <col:6> 'struct inode *' lvalue ParmVar 0x15782b688 'parent' 'struct inode *'
    | `-CompoundStmt 0x1608092a8 <col:14, line:32:2>
    |   |-DeclStmt 0x160808e68 <line:25:3, col:33>
    |   | `-VarDecl 0x160808e00 <col:3, col:26> col:26 used eparent 'struct iso_inode_info *'
    |   |-BinaryOperator 0x160808f50 <line:26:3, col:27> 'struct iso_inode_info *' '='
    |   | |-DeclRefExpr 0x160808e80 <col:3> 'struct iso_inode_info *' lvalue Var 0x160808e00 'eparent' 'struct iso_inode_info *'
    |   | `-ImplicitCastExpr 0x160808f38 <col:13, col:27> 'struct iso_inode_info *' <IntegralToPointer>
    |   |   `-CallExpr 0x160808ef8 <col:13, col:27> 'int'
    |   |     |-ImplicitCastExpr 0x160808ee0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x160808ea0 <col:13> 'int ()' Function 0x15782bb18 'ISOFS_I' 'int ()'
    |   |     `-ImplicitCastExpr 0x160808f20 <col:21> 'struct inode *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x160808ec0 <col:21> 'struct inode *' lvalue ParmVar 0x15782b688 'parent' 'struct inode *'
    |   |-BinaryOperator 0x160809070 <line:27:3, col:22> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x160808ff0 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x160808fd8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x160808f90 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x160808f70 <col:3> 'int *' lvalue ParmVar 0x15780e318 'fh32' 'int *'
    |   | | `-IntegerLiteral 0x160808fb8 <col:8> 'int' 3
    |   | `-RecoveryExpr 0x160809048 <col:13, col:22> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x160809010 <col:13> 'struct iso_inode_info *' lvalue Var 0x160808e00 'eparent' 'struct iso_inode_info *'
    |   |-BinaryOperator 0x1608091c8 <line:29:3, col:21> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x160809148 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x160809130 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x1608090e8 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x1608090c8 <col:3> 'int *' lvalue ParmVar 0x15780e318 'fh32' 'int *'
    |   | | `-IntegerLiteral 0x160809110 <col:8> 'int' 4
    |   | `-RecoveryExpr 0x1608091a0 <col:13, col:21> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x160809168 <col:13> 'struct inode *' lvalue ParmVar 0x15782b688 'parent' 'struct inode *'
    |   |-BinaryOperator 0x160809228 <line:30:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x1608091e8 <col:3> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    |   | `-IntegerLiteral 0x160809208 <col:9> 'int' 5
    |   `-BinaryOperator 0x160809288 <line:31:3, col:10> 'int' '='
    |     |-DeclRefExpr 0x160809248 <col:3> 'int' lvalue Var 0x15782bdf8 'type' 'int'
    |     `-IntegerLiteral 0x160809268 <col:10> 'int' 2
    |-BinaryOperator 0x160809390 <line:33:2, col:13> 'int' '='
    | |-UnaryOperator 0x160809340 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x160809328 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x160809308 <col:3> 'int *' lvalue ParmVar 0x15780e398 'max_len' 'int *'
    | `-ImplicitCastExpr 0x160809378 <col:13> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x160809358 <col:13> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    `-ReturnStmt 0x1608093e8 <line:34:2, col:9>
      `-ImplicitCastExpr 0x1608093d0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1608093b0 <col:9> 'int' lvalue Var 0x15782bdf8 'type' 'int'
