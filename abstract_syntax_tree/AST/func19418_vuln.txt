TranslationUnitDecl 0x12c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c055bd0 '__int128'
|-TypedefDecl 0x12c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c055bf0 'unsigned __int128'
|-TypedefDecl 0x12c126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c126000 'struct __NSConstantString_tag'
|   `-Record 0x12c056580 '__NSConstantString_tag'
|-TypedefDecl 0x12c126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c055d90 '__SVInt8_t'
|-TypedefDecl 0x12c126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c055db0 '__SVInt16_t'
|-TypedefDecl 0x12c126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c055dd0 '__SVInt32_t'
|-TypedefDecl 0x12c1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c055df0 '__SVInt64_t'
|-TypedefDecl 0x12c126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c055e10 '__SVUint8_t'
|-TypedefDecl 0x12c1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c055e30 '__SVUint16_t'
|-TypedefDecl 0x12c126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c055e50 '__SVUint32_t'
|-TypedefDecl 0x12c126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c055e70 '__SVUint64_t'
|-TypedefDecl 0x12c1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c055e90 '__SVFloat16_t'
|-TypedefDecl 0x12c126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c056390 '__SVBool_t'
|-TypedefDecl 0x12c127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c0563f0 '__SVCount_t'
|-TypedefDecl 0x12c127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c127fb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-TypedefDecl 0x12c128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c127fb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-FunctionDecl 0x12c128238 <dataset_diviso_filec/func19418_vuln.c:1:1, line:52:1> line:1:12 lockState 'int (const char *, int)' static
| |-ParmVarDecl 0x12c1280d8 <col:22, col:34> col:34 used stateFilename 'const char *'
| |-ParmVarDecl 0x12c128158 <col:49, col:53> col:53 used skip_state_lock 'int'
| `-CompoundStmt 0x12c80ba90 <line:2:1, line:52:1>
|   |-DeclStmt 0x12c1283b8 <line:3:5, col:15>
|   | `-VarDecl 0x12c128350 <col:5, col:9> col:9 used lockFd 'int'
|   |-IfStmt 0x12c140e00 <line:5:5, line:7:5>
|   | |-UnaryOperator 0x12c140da0 <line:5:9, col:37> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x12c140d28 <col:10, col:37> 'int'
|   | |   |-ImplicitCastExpr 0x12c140d10 <col:10> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12c140c10 <col:10> 'int (const char *, const char *)' Function 0x12c140a30 'strcmp' 'int (const char *, const char *)'
|   | |   |-ImplicitCastExpr 0x12c140d58 <col:17> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x12c140c30 <col:17> 'const char *' lvalue ParmVar 0x12c1280d8 'stateFilename' 'const char *'
|   | |   `-ImplicitCastExpr 0x12c140d88 <col:32> 'const char *' <NoOp>
|   | |     `-ImplicitCastExpr 0x12c140d70 <col:32> 'char *' <ArrayToPointerDecay>
|   | |       `-StringLiteral 0x12c140c90 <col:32> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x12c140de8 <col:40, line:7:5>
|   |   `-ReturnStmt 0x12c140dd8 <line:6:9, col:16>
|   |     `-IntegerLiteral 0x12c140db8 <col:16> 'int' 0
|   |-BinaryOperator 0x12c1410e0 <line:9:5, col:52> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12c140e20 <col:5> 'int' lvalue Var 0x12c128350 'lockFd' 'int'
|   | `-CallExpr 0x12c1410b0 <col:14, col:52> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12c140f70 <col:14> 'int ()' Function 0x12c140eb8 'open' 'int ()'
|   |   |-DeclRefExpr 0x12c140f90 <col:19> 'const char *' lvalue ParmVar 0x12c1280d8 'stateFilename' 'const char *'
|   |   `-BinaryOperator 0x12c141090 <col:34, col:43> '<dependent type>' contains-errors '|'
|   |     |-RecoveryExpr 0x12c141050 <col:34> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x12c141070 <col:43> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12c80b360 <line:10:5, line:28:5>
|   | |-BinaryOperator 0x12c141170 <line:10:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x12c141158 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c141100 <col:9> 'int' lvalue Var 0x12c128350 'lockFd' 'int'
|   | | `-UnaryOperator 0x12c141140 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x12c141120 <col:20> 'int' 1
|   | `-CompoundStmt 0x12c80b348 <col:23, line:28:5>
|   |   `-IfStmt 0x12c80b318 <line:11:9, line:27:9> has_else
|   |     |-BinaryOperator 0x12c141220 <line:11:13, col:22> 'int' contains-errors '=='
|   |     | |-RecoveryExpr 0x12c1411e0 <col:13> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x12c141200 <col:22> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x12c80b0b0 <col:30, line:23:9>
|   |     | |-CallExpr 0x12c1413f0 <line:12:13, line:13:34> '<dependent type>' contains-errors
|   |     | | |-DeclRefExpr 0x12c141320 <line:12:13> 'int ()' Function 0x12c141268 'message' 'int ()'
|   |     | | |-RecoveryExpr 0x12c1413d0 <col:21> '<dependent type>' contains-errors lvalue
|   |     | | |-StringLiteral 0x12c141358 <col:33> 'char[4]' lvalue "STR"
|   |     | | `-DeclRefExpr 0x12c141378 <line:13:21> 'const char *' lvalue ParmVar 0x12c1280d8 'stateFilename' 'const char *'
|   |     | |-BinaryOperator 0x12c1417e0 <line:16:13, line:17:64> 'int' contains-errors '='
|   |     | | |-DeclRefExpr 0x12c141428 <line:16:13> 'int' lvalue Var 0x12c128350 'lockFd' 'int'
|   |     | | `-CallExpr 0x12c1417a8 <col:22, line:17:64> '<dependent type>' contains-errors
|   |     | |   |-DeclRefExpr 0x12c141448 <line:16:22> 'int ()' Function 0x12c140eb8 'open' 'int ()'
|   |     | |   |-DeclRefExpr 0x12c141468 <col:27> 'const char *' lvalue ParmVar 0x12c1280d8 'stateFilename' 'const char *'
|   |     | |   |-BinaryOperator 0x12c1416a8 <col:42, col:61> '<dependent type>' contains-errors '|'
|   |     | |   | |-BinaryOperator 0x12c141668 <col:42, col:52> '<dependent type>' contains-errors '|'
|   |     | |   | | |-RecoveryExpr 0x12c141628 <col:42> '<dependent type>' contains-errors lvalue
|   |     | |   | | `-RecoveryExpr 0x12c141648 <col:52> '<dependent type>' contains-errors lvalue
|   |     | |   | `-RecoveryExpr 0x12c141688 <col:61> '<dependent type>' contains-errors lvalue
|   |     | |   `-BinaryOperator 0x12c141788 <line:17:27, col:57> '<dependent type>' contains-errors '|'
|   |     | |     |-BinaryOperator 0x12c141748 <col:27, col:47> '<dependent type>' contains-errors '|'
|   |     | |     | |-BinaryOperator 0x12c141708 <col:27, col:37> '<dependent type>' contains-errors '|'
|   |     | |     | | |-RecoveryExpr 0x12c1416c8 <col:27> '<dependent type>' contains-errors lvalue
|   |     | |     | | `-RecoveryExpr 0x12c1416e8 <col:37> '<dependent type>' contains-errors lvalue
|   |     | |     | `-RecoveryExpr 0x12c141728 <col:47> '<dependent type>' contains-errors lvalue
|   |     | |     `-RecoveryExpr 0x12c141768 <col:57> '<dependent type>' contains-errors lvalue
|   |     | `-IfStmt 0x12c80b090 <line:18:13, line:22:13>
|   |     |   |-BinaryOperator 0x12c141870 <line:18:17, col:28> 'int' '=='
|   |     |   | |-ImplicitCastExpr 0x12c141858 <col:17> 'int' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x12c141800 <col:17> 'int' lvalue Var 0x12c128350 'lockFd' 'int'
|   |     |   | `-UnaryOperator 0x12c141840 <col:27, col:28> 'int' prefix '-'
|   |     |   |   `-IntegerLiteral 0x12c141820 <col:28> 'int' 1
|   |     |   `-CompoundStmt 0x12c80b070 <col:31, line:22:13>
|   |     |     |-CallExpr 0x12c80b000 <line:19:17, line:20:55> '<dependent type>' contains-errors
|   |     |     | |-DeclRefExpr 0x12c141890 <line:19:17> 'int ()' Function 0x12c141268 'message' 'int ()'
|   |     |     | |-RecoveryExpr 0x12c80af80 <col:25> '<dependent type>' contains-errors lvalue
|   |     |     | |-StringLiteral 0x12c1418c8 <col:37> 'char[4]' lvalue "STR"
|   |     |     | |-DeclRefExpr 0x12c1418e8 <line:20:25> 'const char *' lvalue ParmVar 0x12c1280d8 'stateFilename' 'const char *'
|   |     |     | `-CallExpr 0x12c80afd8 <col:40, col:54> '<dependent type>' contains-errors
|   |     |     |   |-DeclRefExpr 0x12c80aec8 <col:40> 'char *(int)' Function 0x12c141948 'strerror' 'char *(int)'
|   |     |     |   `-RecoveryExpr 0x12c80afa0 <col:49> '<dependent type>' contains-errors lvalue
|   |     |     `-ReturnStmt 0x12c80b060 <line:21:17, col:24>
|   |     |       `-IntegerLiteral 0x12c80b040 <col:24> 'int' 1
|   |     `-CompoundStmt 0x12c80b2f8 <line:23:16, line:27:9>
|   |       |-CallExpr 0x12c80b288 <line:24:13, line:25:51> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x12c80b0d8 <line:24:13> 'int ()' Function 0x12c141268 'message' 'int ()'
|   |       | |-RecoveryExpr 0x12c80b208 <col:21> '<dependent type>' contains-errors lvalue
|   |       | |-StringLiteral 0x12c80b110 <col:33> 'char[4]' lvalue "STR"
|   |       | |-DeclRefExpr 0x12c80b130 <line:25:21> 'const char *' lvalue ParmVar 0x12c1280d8 'stateFilename' 'const char *'
|   |       | `-CallExpr 0x12c80b260 <col:36, col:50> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x12c80b150 <col:36> 'char *(int)' Function 0x12c141948 'strerror' 'char *(int)'
|   |       |   `-RecoveryExpr 0x12c80b228 <col:45> '<dependent type>' contains-errors lvalue
|   |       `-ReturnStmt 0x12c80b2e8 <line:26:13, col:20>
|   |         `-IntegerLiteral 0x12c80b2c8 <col:20> 'int' 1
|   |-IfStmt 0x12c80b618 <line:30:5, line:35:5>
|   | |-ImplicitCastExpr 0x12c80b3a0 <line:30:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12c80b380 <col:9> 'int' lvalue ParmVar 0x12c128158 'skip_state_lock' 'int'
|   | `-CompoundStmt 0x12c80b5f8 <col:26, line:35:5>
|   |   |-CallExpr 0x12c80b588 <line:33:9, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x12c80b570 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12c80b4f8 <col:9> 'int ()' Function 0x12c80b440 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x12c80b5b0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12c80b518 <col:15> 'int' lvalue Var 0x12c128350 'lockFd' 'int'
|   |   `-ReturnStmt 0x12c80b5e8 <line:34:9, col:16>
|   |     `-IntegerLiteral 0x12c80b5c8 <col:16> 'int' 0
|   |-IfStmt 0x12c80ba40 <line:37:5, line:48:5>
|   | |-RecoveryExpr 0x12c80b790 <line:37:9, col:46> '_Bool' contains-errors
|   | `-CompoundStmt 0x12c80ba18 <col:49, line:48:5>
|   |   |-IfStmt 0x12c80b920 <line:38:9, line:45:9> has_else
|   |   | |-RecoveryExpr 0x12c80b7b0 <line:38:13, col:22> '_Bool' contains-errors
|   |   | |-CompoundStmt 0x12c80b880 <col:35, line:42:9>
|   |   | `-CompoundStmt 0x12c80b910 <col:16, line:45:9>
|   |   |-CallExpr 0x12c80b9a8 <line:46:9, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x12c80b990 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12c80b950 <col:9> 'int ()' Function 0x12c80b440 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x12c80b9d0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12c80b970 <col:15> 'int' lvalue Var 0x12c128350 'lockFd' 'int'
|   |   `-ReturnStmt 0x12c80ba08 <line:47:9, col:16>
|   |     `-IntegerLiteral 0x12c80b9e8 <col:16> 'int' 1
|   `-ReturnStmt 0x12c80ba80 <line:51:5, col:12>
|     `-IntegerLiteral 0x12c80ba60 <col:12> 'int' 0
|-FunctionDecl 0x12c140a30 <line:5:10> col:10 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x12c140b30 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12c140b98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12c140ad8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x12c141948 <line:20:40> col:40 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x12c80ae58 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12c80ae00 <<invalid sloc>> Implicit 901
