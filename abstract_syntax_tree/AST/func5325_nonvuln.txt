TranslationUnitDecl 0x15b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b855bd0 '__int128'
|-TypedefDecl 0x15b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b855bf0 'unsigned __int128'
|-TypedefDecl 0x15b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b926000 'struct __NSConstantString_tag'
|   `-Record 0x15b856580 '__NSConstantString_tag'
|-TypedefDecl 0x15b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b855d90 '__SVInt8_t'
|-TypedefDecl 0x15b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b855db0 '__SVInt16_t'
|-TypedefDecl 0x15b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b855dd0 '__SVInt32_t'
|-TypedefDecl 0x15b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b855df0 '__SVInt64_t'
|-TypedefDecl 0x15b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b855e10 '__SVUint8_t'
|-TypedefDecl 0x15b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b855e30 '__SVUint16_t'
|-TypedefDecl 0x15b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b855e50 '__SVUint32_t'
|-TypedefDecl 0x15b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b855e70 '__SVUint64_t'
|-TypedefDecl 0x15b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b855e90 '__SVFloat16_t'
|-TypedefDecl 0x15b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b856390 '__SVBool_t'
|-TypedefDecl 0x15b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b8563f0 '__SVCount_t'
|-TypedefDecl 0x15b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b927fb0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
|-TypedefDecl 0x15b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b927fb0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
|-FunctionDecl 0x15b928288 <dataset_diviso_filec/func5325_nonvuln.c:1:1, line:27:1> line:1:5 invalid ff_update_duplicate_context 'int (int *, int *)'
| |-ParmVarDecl 0x15b928128 <col:33, col:49> col:49 referenced invalid dst 'int *'
| |-ParmVarDecl 0x15b9281a8 <col:54, col:70> col:70 invalid src 'int *'
| `-CompoundStmt 0x15b943a30 <line:2:1, line:27:1>
|   |-DeclStmt 0x15b928458 <line:4:5, col:15>
|   | |-VarDecl 0x15b928358 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x15b9283d8 <col:5, col:12> col:12 used ret 'int'
|   |-CallExpr 0x15b9286a8 <line:7:5, col:39> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b9285d0 <col:5> 'int ()' Function 0x15b928518 'backup_duplicate_context' 'int ()'
|   | |-UnaryOperator 0x15b928690 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x15b928670 <col:31> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x15b928620 <col:36> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x15b941f30 <line:9:5, col:39> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b941e58 <col:5> 'int ()' Function 0x15b928518 'backup_duplicate_context' 'int ()'
|   | |-RecoveryExpr 0x15b941e78 <col:30> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x15b941f18 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x15b941ef8 <col:36> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x15b942298 <line:10:5, line:12:5>
|   | |-BinaryOperator 0x15b941fa0 <line:10:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x15b941f60 <col:10> 'int' lvalue Var 0x15b928358 'i' 'int'
|   | | `-IntegerLiteral 0x15b941f80 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15b942018 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x15b942000 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b941fc0 <col:17> 'int' lvalue Var 0x15b928358 'i' 'int'
|   | | `-IntegerLiteral 0x15b941fe0 <col:21> 'int' 12
|   | |-UnaryOperator 0x15b942058 <col:25, col:26> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15b942038 <col:25> 'int' lvalue Var 0x15b928358 'i' 'int'
|   | `-CompoundStmt 0x15b942280 <col:30, line:12:5>
|   |   `-BinaryOperator 0x15b942260 <line:11:9, col:40> '<dependent type>' contains-errors '='
|   |     |-ArraySubscriptExpr 0x15b942150 <col:9, col:23> '<dependent type>' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x15b942120 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | `-CXXDependentScopeMemberExpr 0x15b9420b8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->pblocks
|   |     | |   `-RecoveryExpr 0x15b942090 <col:9> '<dependent type>' contains-errors lvalue
|   |     | |     `-DeclRefExpr 0x15b942070 <col:9> 'int *' lvalue ParmVar 0x15b928128 'dst' 'int *'
|   |     | `-ImplicitCastExpr 0x15b942138 <col:22> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x15b942100 <col:22> 'int' lvalue Var 0x15b928358 'i' 'int'
|   |     `-UnaryOperator 0x15b942248 <col:27, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-ArraySubscriptExpr 0x15b942228 <col:28, col:40> '<dependent type>' contains-errors lvalue
|   |         |-ImplicitCastExpr 0x15b9421f8 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |         | `-CXXDependentScopeMemberExpr 0x15b942190 <col:28, col:33> '<dependent type>' contains-errors lvalue ->block
|   |         |   `-RecoveryExpr 0x15b942170 <col:28> '<dependent type>' contains-errors lvalue
|   |         `-ImplicitCastExpr 0x15b942210 <col:39> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x15b9421d8 <col:39> 'int' lvalue Var 0x15b928358 'i' 'int'
|   |-IfStmt 0x15b943230 <line:13:5, line:16:5>
|   | |-BinaryOperator 0x15b942568 <line:13:9, col:47> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x15b942338 <col:9, col:21> '<dependent type>' contains-errors lvalue ->codec_tag
|   | | | `-CXXDependentScopeMemberExpr 0x15b9422f0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->avctx
|   | | |   `-RecoveryExpr 0x15b9422d0 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x15b942528 <col:34, col:47> 'int'
|   | |   |-ImplicitCastExpr 0x15b942510 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x15b942460 <col:34> 'int ()' Function 0x15b9423a8 'AV_RL32' 'int ()'
|   | |   `-ImplicitCastExpr 0x15b942550 <col:42> 'char *' <ArrayToPointerDecay>
|   | |     `-StringLiteral 0x15b9424c0 <col:42> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x15b943220 <col:50, line:16:5>
|   |-IfStmt 0x15b9439e0 <line:17:5, line:23:5>
|   | |-BinaryOperator 0x15b9436e0 <line:17:9, line:19:68> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x15b943318 <line:17:9, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x15b943300 <col:10, col:18> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-CXXDependentScopeMemberExpr 0x15b9432b8 <col:10, col:18> '<dependent type>' contains-errors lvalue .edge_emu_buffer
|   | | |     `-CXXDependentScopeMemberExpr 0x15b943270 <col:10, col:15> '<dependent type>' contains-errors lvalue ->sc
|   | | |       `-RecoveryExpr 0x15b943250 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x15b9436c0 <line:18:9, line:19:68> 'int' contains-errors '<'
|   | |   |-ParenExpr 0x15b943680 <line:18:9, line:19:64> 'int' contains-errors
|   | |   | `-BinaryOperator 0x15b943660 <line:18:10, line:19:63> 'int' contains-errors '='
|   | |   |   |-DeclRefExpr 0x15b943330 <line:18:10> 'int' lvalue Var 0x15b9283d8 'ret' 'int'
|   | |   |   `-CallExpr 0x15b943620 <col:16, line:19:63> '<dependent type>' contains-errors
|   | |   |     |-DeclRefExpr 0x15b943430 <line:18:16> 'int ()' Function 0x15b943378 'ff_mpeg_framesize_alloc' 'int ()'
|   | |   |     |-CXXDependentScopeMemberExpr 0x15b943470 <col:40, col:45> '<dependent type>' contains-errors lvalue ->avctx
|   | |   |     | `-RecoveryExpr 0x15b943450 <col:40> '<dependent type>' contains-errors lvalue
|   | |   |     |-UnaryOperator 0x15b943520 <col:52, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   |     | `-CXXDependentScopeMemberExpr 0x15b9434d8 <col:53, col:58> '<dependent type>' contains-errors lvalue ->me
|   | |   |     |   `-RecoveryExpr 0x15b9434b8 <col:53> '<dependent type>' contains-errors lvalue
|   | |   |     |-UnaryOperator 0x15b9435a0 <line:19:40, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   |     | `-CXXDependentScopeMemberExpr 0x15b943558 <col:41, col:46> '<dependent type>' contains-errors lvalue ->sc
|   | |   |     |   `-RecoveryExpr 0x15b943538 <col:41> '<dependent type>' contains-errors lvalue
|   | |   |     `-CXXDependentScopeMemberExpr 0x15b9435d8 <col:50, col:55> '<dependent type>' contains-errors lvalue ->linesize
|   | |   |       `-RecoveryExpr 0x15b9435b8 <col:50> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x15b9436a0 <col:68> 'int' 0
|   | `-CompoundStmt 0x15b9439c0 <col:71, line:23:5>
|   |   |-CallExpr 0x15b943940 <line:20:9, line:21:21> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15b9437e0 <line:20:9> 'int ()' Function 0x15b943728 'av_log' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x15b943820 <col:16, col:21> '<dependent type>' contains-errors lvalue ->avctx
|   |   | | `-RecoveryExpr 0x15b943800 <col:16> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x15b943920 <col:28> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x15b9438c0 <col:42, line:21:16> 'char[7]' lvalue "STRSTR"
|   |   `-ReturnStmt 0x15b9439b0 <line:22:9, col:16>
|   |     `-ImplicitCastExpr 0x15b943998 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x15b943978 <col:16> 'int' lvalue Var 0x15b9283d8 'ret' 'int'
|   `-ReturnStmt 0x15b943a20 <line:26:5, col:12>
|     `-IntegerLiteral 0x15b943a00 <col:12> 'int' 0
`-FunctionDecl 0x15b941b90 <line:8:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x15b941c90 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x15b941cf8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x15b941d60 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15b941c38 <<invalid sloc>> Implicit 882
