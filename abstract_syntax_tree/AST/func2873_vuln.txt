TranslationUnitDecl 0x158055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1580564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158055bd0 '__int128'
|-TypedefDecl 0x158056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158055bf0 'unsigned __int128'
|-TypedefDecl 0x158127230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x158127000 'struct __NSConstantString_tag'
|   `-Record 0x158056580 '__NSConstantString_tag'
|-TypedefDecl 0x158127298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158055d90 '__SVInt8_t'
|-TypedefDecl 0x158127300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158055db0 '__SVInt16_t'
|-TypedefDecl 0x158127368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158055dd0 '__SVInt32_t'
|-TypedefDecl 0x1581273d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158055df0 '__SVInt64_t'
|-TypedefDecl 0x158127438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158055e10 '__SVUint8_t'
|-TypedefDecl 0x1581274a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158055e30 '__SVUint16_t'
|-TypedefDecl 0x158127508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158055e50 '__SVUint32_t'
|-TypedefDecl 0x158127570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158055e70 '__SVUint64_t'
|-TypedefDecl 0x1581275d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158055e90 '__SVFloat16_t'
|-TypedefDecl 0x158127640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1581276a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158055ed0 '__SVFloat64_t'
|-TypedefDecl 0x158127710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x158127778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1581277e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x158127848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1581278b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x158127918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x158127980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1581279e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x158127a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x158127ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x158127b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x158127b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x158127bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x158127c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158056090 '__clang_svint8x3_t'
|-TypedefDecl 0x158127cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1580560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x158127d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1580560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x158127d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1580560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x158127df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x158127e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x158127ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x158127f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x158127f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x158128800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1580561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x158128868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1580561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1581288d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1580561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x158128938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1581289a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158056230 '__clang_svint16x4_t'
|-TypedefDecl 0x158128a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158056250 '__clang_svint32x4_t'
|-TypedefDecl 0x158128a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158056270 '__clang_svint64x4_t'
|-TypedefDecl 0x158128ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x158128b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1580562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x158128ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1580562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x158128c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1580562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x158128c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x158128ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x158128d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x158128db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x158128e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158056390 '__SVBool_t'
|-TypedefDecl 0x158128e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1580563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x158128ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1580563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x158128f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1580563f0 '__SVCount_t'
|-TypedefDecl 0x158128ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x158128fb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
|-TypedefDecl 0x158129068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x158128fb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
`-FunctionDecl 0x1581295e8 <dataset_diviso_filec/func2873_vuln.c:1:1, line:71:1> line:1:14 invalid EvalHybridPerChannel 'int (int *, int *, int *, int *, const int *, const int *, const int *, int *)'
  |-ParmVarDecl 0x158129128 <col:35, col:50> col:50 invalid context 'int *'
  |-ParmVarDecl 0x1581291a8 <col:59, col:71> col:71 invalid node 'int *'
  |-ParmVarDecl 0x158129228 <line:2:35, col:62> col:62 invalid params 'int *'
  |-ParmVarDecl 0x1581292a8 <line:3:35, col:43> col:43 invalid data 'int *'
  |-ParmVarDecl 0x158129328 <col:49, col:69> col:69 invalid input 'const int *'
  |-ParmVarDecl 0x1581293a8 <line:4:35, col:55> col:55 invalid filter 'const int *'
  |-ParmVarDecl 0x158129428 <line:5:35, col:55> col:55 invalid bias 'const int *'
  |-ParmVarDecl 0x1581294a8 <line:6:35, col:49> col:49 invalid output 'int *'
  `-CompoundStmt 0x158144080 <col:57, line:71:1>
    |-DeclStmt 0x1581297e8 <line:7:3, col:53>
    | |-VarDecl 0x1581296e8 <col:3, col:9> col:9 used output_activation_min 'float'
    | `-VarDecl 0x158129768 <col:3, col:32> col:32 used output_activation_max 'float'
    |-CallExpr 0x158142a90 <line:8:3, line:9:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x158142960 <line:8:3> 'int ()' Function 0x1581428a8 'CalculateActivationRange' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x1581429a0 <col:28, col:36> '<dependent type>' contains-errors lvalue ->activation
    | | `-RecoveryExpr 0x158142980 <col:28> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x158142a40 <col:48, col:49> 'float *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x1581429e8 <col:49> 'float' lvalue Var 0x1581296e8 'output_activation_min' 'float'
    | `-UnaryOperator 0x158142a78 <line:9:28, col:29> 'float *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x158142a58 <col:29> 'float' lvalue Var 0x158129768 'output_activation_max' 'float'
    |-DeclStmt 0x158142cb8 <line:10:3, col:51>
    | `-VarDecl 0x158142ae0 <col:3, col:50> col:13 used batch_size 'const int' cinit
    |   `-CallExpr 0x158142c88 <col:26, col:50> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x158142c28 <col:26> 'int ()' Function 0x158142b70 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x158142c48 <col:42> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x158142c68 <col:49> 'int' 0
    |-CallExpr 0x158142e68 <line:11:3, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x158142db0 <col:3> 'int ()' Function 0x158142cf8 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x158142dd0 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x158142e48 <col:27, col:41> 'int' contains-errors '!='
    |   |-ImplicitCastExpr 0x158142e30 <col:27> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x158142df0 <col:27> 'const int' contains-errors lvalue Var 0x158142ae0 'batch_size' 'const int'
    |   `-IntegerLiteral 0x158142e10 <col:41> 'int' 0
    |-DeclStmt 0x1581430a0 <line:12:3, col:57>
    | `-VarDecl 0x158142eb0 <col:3, col:47> col:13 used input_size 'const int' cinit
    |   `-BinaryOperator 0x158143080 <col:26, col:47> '<dependent type>' contains-errors '/'
    |     |-CallExpr 0x158143038 <col:26, col:43> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x158142ff8 <col:26> 'int ()' Function 0x158142f40 'NumElements' 'int ()'
    |     | `-RecoveryExpr 0x158143018 <col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x158143060 <col:47> 'const int' contains-errors lvalue Var 0x158142ae0 'batch_size' 'const int'
    |-CallExpr 0x1581434b0 <line:14:3, line:16:55> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1581431b0 <line:14:3> 'int ()' Function 0x1581430f8 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x1581431d0 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x158143470 <line:15:21, line:16:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1581432d0 <line:15:21> 'int ()' Function 0x158143218 'GetTemporarySafe' 'int ()'
    |   |-RecoveryExpr 0x1581432f0 <col:38> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x158143310 <col:47> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x158143350 <col:53, col:59> '<dependent type>' contains-errors lvalue ->input_quantized_index
    |   | `-RecoveryExpr 0x158143330 <col:53> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x158143458 <line:16:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x158143438 <col:39> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x158143680 <line:22:3, col:76>
    | `-VarDecl 0x158143618 <col:3, col:10> col:10 scaling_factors_ptr 'float *'
    |-ForStmt 0x158143aa8 <line:29:3, line:35:3>
    | |-DeclStmt 0x158143888 <line:29:8, col:17>
    | | `-VarDecl 0x158143800 <col:8, col:16> col:12 used b 'int' cinit
    | |   `-IntegerLiteral 0x158143868 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x158143910 <col:19, col:23> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x1581438e0 <col:19> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1581438a0 <col:19> 'int' lvalue Var 0x158143800 'b' 'int'
    | | `-ImplicitCastExpr 0x1581438f8 <col:23> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x1581438c0 <col:23> 'const int' contains-errors lvalue Var 0x158142ae0 'batch_size' 'const int'
    | |-UnaryOperator 0x158143950 <col:35, col:37> 'int' prefix '++'
    | | `-DeclRefExpr 0x158143930 <col:37> 'int' lvalue Var 0x158143800 'b' 'int'
    | `-CompoundStmt 0x158143a90 <col:40, line:35:3>
    |   `-DeclStmt 0x158143a78 <line:30:5, col:38>
    |     `-VarDecl 0x158143980 <col:5, col:28> col:15 offset 'const int' cinit
    |       `-BinaryOperator 0x158143a58 <col:24, col:28> 'int' contains-errors '*'
    |         |-ImplicitCastExpr 0x158143a28 <col:24> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x1581439e8 <col:24> 'int' lvalue Var 0x158143800 'b' 'int'
    |         `-ImplicitCastExpr 0x158143a40 <col:28> 'int' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x158143a08 <col:28> 'const int' contains-errors lvalue Var 0x158142eb0 'input_size' 'const int'
    |-DeclStmt 0x158143ff8 <line:50:3, line:51:79>
    | `-VarDecl 0x158143ec0 <line:50:3, col:15> col:15 affine_quantization 'const int *' auto
    `-IfStmt 0x158144050 <line:52:3, line:68:3> has_else
      |-RecoveryExpr 0x158144010 <line:52:7, col:22> '_Bool' contains-errors
      |-CompoundStmt 0x158144030 <col:34, line:60:3>
      `-CompoundStmt 0x158144040 <col:10, line:68:3>
