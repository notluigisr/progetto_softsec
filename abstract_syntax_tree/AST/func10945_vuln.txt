TranslationUnitDecl 0x131831408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1318322b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1318319d0 '__int128'
|-TypedefDecl 0x131832328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1318319f0 'unsigned __int128'
|-TypedefDecl 0x131902a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x131902800 'struct __NSConstantString_tag'
|   `-Record 0x131832380 '__NSConstantString_tag'
|-TypedefDecl 0x131902a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x131831b90 '__SVInt8_t'
|-TypedefDecl 0x131902b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x131831bb0 '__SVInt16_t'
|-TypedefDecl 0x131902b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x131831bd0 '__SVInt32_t'
|-TypedefDecl 0x131902bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x131831bf0 '__SVInt64_t'
|-TypedefDecl 0x131902c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x131831c10 '__SVUint8_t'
|-TypedefDecl 0x131902ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x131831c30 '__SVUint16_t'
|-TypedefDecl 0x131902d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x131831c50 '__SVUint32_t'
|-TypedefDecl 0x131902d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x131831c70 '__SVUint64_t'
|-TypedefDecl 0x131902dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x131831c90 '__SVFloat16_t'
|-TypedefDecl 0x131902e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x131831cb0 '__SVFloat32_t'
|-TypedefDecl 0x131902ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x131831cd0 '__SVFloat64_t'
|-TypedefDecl 0x131902f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x131831cf0 '__SVBfloat16_t'
|-TypedefDecl 0x131902f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x131831d10 '__clang_svint8x2_t'
|-TypedefDecl 0x131902fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x131831d30 '__clang_svint16x2_t'
|-TypedefDecl 0x131903048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x131831d50 '__clang_svint32x2_t'
|-TypedefDecl 0x1319030b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x131831d70 '__clang_svint64x2_t'
|-TypedefDecl 0x131903118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x131831d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x131903180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x131831db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1319031e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x131831dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x131903250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x131831df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1319032b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x131831e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x131903320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x131831e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x131903388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x131831e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1319033f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x131831e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x131903458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x131831e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1319034c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x131831eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x131903528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x131831ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x131903590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x131831ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1319035f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x131831f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x131903660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x131831f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1319036c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x131831f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x131903730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x131831f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x131903798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x131831f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x131904000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x131831fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x131904068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x131831fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1319040d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x131831ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x131904138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x131832010 '__clang_svint8x4_t'
|-TypedefDecl 0x1319041a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x131832030 '__clang_svint16x4_t'
|-TypedefDecl 0x131904208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x131832050 '__clang_svint32x4_t'
|-TypedefDecl 0x131904270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x131832070 '__clang_svint64x4_t'
|-TypedefDecl 0x1319042d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x131832090 '__clang_svuint8x4_t'
|-TypedefDecl 0x131904340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1318320b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1319043a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1318320d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x131904410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1318320f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x131904478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x131832110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1319044e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x131832130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x131904548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x131832150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1319045b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x131832170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x131904618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x131832190 '__SVBool_t'
|-TypedefDecl 0x131904680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1318321b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1319046e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1318321d0 '__clang_svboolx4_t'
|-TypedefDecl 0x131904750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1318321f0 '__SVCount_t'
|-TypedefDecl 0x1319047f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1319047b0 'char *'
|   `-BuiltinType 0x1318314b0 'char'
|-TypedefDecl 0x131904868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1319047b0 'char *'
|   `-BuiltinType 0x1318314b0 'char'
|-FunctionDecl 0x132808238 <dataset_diviso_filec/func10945_vuln.c:1:1, line:61:1> line:1:1 invalid chpass_principal_2_svc 'int (int *, struct svc_req *)'
| |-ParmVarDecl 0x131904928 <col:24, col:36> col:36 invalid arg 'int *'
| |-ParmVarDecl 0x131904f18 <col:41, col:57> col:57 used rqstp 'struct svc_req *'
| `-CompoundStmt 0x13280cfb0 <line:2:1, line:61:1>
|   |-DeclStmt 0x132808370 <line:3:5, col:40>
|   | `-VarDecl 0x132808308 <col:5, col:37> col:37 referenced invalid ret 'int' static
|   |-DeclStmt 0x132808408 <line:4:5, col:47>
|   | `-VarDecl 0x1328083a0 <col:5, col:38> col:38 used prime_arg 'char *'
|   |-DeclStmt 0x1328084d8 <line:9:5, col:51>
|   | `-VarDecl 0x132808438 <col:5, col:47> col:38 used errmsg 'const char *' cinit
|   |   `-RecoveryExpr 0x1328084b8 <col:47> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x132808710 <line:11:5, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x132808650 <col:5> 'int ()' Function 0x132808598 'xdr_free' 'int ()'
|   | |-RecoveryExpr 0x1328086f0 <col:14> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x1328086a8 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x132808688 <col:32> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x132808a40 <line:13:5, line:14:14>
|   | |-RecoveryExpr 0x1328089b8 <line:13:9, col:72> '_Bool' contains-errors
|   | `-GotoStmt 0x132808a28 <line:14:9, col:14> 'exit_func' 0x1328089d8
|   |-IfStmt 0x132808c30 <line:16:5, line:17:14>
|   | |-RecoveryExpr 0x132808bf8 <line:16:9, col:49> '_Bool' contains-errors
|   | `-GotoStmt 0x132808c18 <line:17:9, col:14> 'exit_func' 0x1328089d8
|   |-BinaryOperator 0x132808dc8 <line:19:5, col:31> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x132808c98 <col:5, col:9> '<dependent type>' contains-errors lvalue .api_version
|   | | `-RecoveryExpr 0x132808c70 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x132808c50 <col:5> 'int' lvalue Var 0x132808308 'ret' 'int'
|   | `-CXXDependentScopeMemberExpr 0x132808d80 <col:23, col:31> '<dependent type>' contains-errors lvalue ->api_version
|   |   `-RecoveryExpr 0x132808d60 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13280b000 <line:21:5, line:24:5>
|   | |-BinaryOperator 0x132809088 <line:21:9, col:63> 'int' contains-errors '<'
|   | | |-CallExpr 0x132809050 <col:9, col:59> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x132808ec8 <col:9> 'int ()' Function 0x132808e10 'setup_gss_names' 'int ()'
|   | | | |-DeclRefExpr 0x132808ee8 <col:25> 'struct svc_req *' lvalue ParmVar 0x131904f18 'rqstp' 'struct svc_req *'
|   | | | |-UnaryOperator 0x132809000 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x132808fe0 <col:33> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x132809038 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x132809018 <col:47> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x132808fa0 <col:63> 'int' 0
|   | `-CompoundStmt 0x1328091c8 <col:66, line:24:5>
|   |   |-BinaryOperator 0x132809190 <line:22:9, col:20> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x1328090f0 <col:9, col:13> '<dependent type>' contains-errors lvalue .code
|   |   | | `-RecoveryExpr 0x1328090c8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1328090a8 <col:9> 'int' lvalue Var 0x132808308 'ret' 'int'
|   |   | `-RecoveryExpr 0x132809170 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x1328091b0 <line:23:9, col:14> 'exit_func' 0x1328089d8
|   |-IfStmt 0x13280b3f0 <line:25:5, line:28:5>
|   | |-CallExpr 0x13280b2f8 <line:25:9, col:66> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13280b100 <col:9> 'int ()' Function 0x13280b048 'krb5_unparse_name' 'int ()'
|   | | |-CXXDependentScopeMemberExpr 0x13280b2b0 <col:27, col:35> '<dependent type>' contains-errors lvalue ->context
|   | | | `-RecoveryExpr 0x13280b290 <col:27> '<dependent type>' contains-errors lvalue
|   | | |-CXXDependentScopeMemberExpr 0x13280b1a0 <col:44, col:49> '<dependent type>' contains-errors lvalue ->princ
|   | | | `-RecoveryExpr 0x13280b180 <col:44> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x13280b240 <col:56, col:57> 'char **' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x13280b1e8 <col:57> 'char *' lvalue Var 0x1328083a0 'prime_arg' 'char *'
|   | `-CompoundStmt 0x13280b3d8 <col:69, line:28:5>
|   |   `-GotoStmt 0x13280b3c0 <line:27:9, col:14> 'exit_func' 0x1328089d8
|   |-IfStmt 0x13280c480 <line:30:5, line:42:5> has_else
|   | |-RecoveryExpr 0x13280b720 <line:30:9, col:63> '_Bool' contains-errors
|   | |-CompoundStmt 0x13280b9c0 <col:66, line:33:5>
|   | `-IfStmt 0x13280c450 <col:12, line:42:5> has_else
|   |   |-RecoveryExpr 0x13280bd80 <line:33:16, line:35:65> '_Bool' contains-errors
|   |   |-CompoundStmt 0x13280c200 <col:68, line:38:5>
|   |   `-CompoundStmt 0x13280c440 <col:12, line:42:5>
|   |-IfStmt 0x13280ca58 <line:44:5, line:53:5>
|   | |-RecoveryExpr 0x13280c518 <line:44:9, col:21> '_Bool' contains-errors
|   | `-CompoundStmt 0x13280ca48 <col:42, line:53:5>
|   |-CallExpr 0x13280ccc8 <line:55:5, col:19> 'void'
|   | |-ImplicitCastExpr 0x13280ccb0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13280cc28 <col:5> 'void (void *)' Function 0x13280cab8 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x13280cd08 <col:10> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x13280ccf0 <col:10> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13280cc48 <col:10> 'char *' lvalue Var 0x1328083a0 'prime_arg' 'char *'
|   |-LabelStmt 0x13280cf48 <line:58:1, col:10> 'exit_func'
|   | `-NullStmt 0x13280cf40 <col:10>
|   `-ReturnStmt 0x13280cfa0 <line:60:5, col:13>
|     `-UnaryOperator 0x13280cf88 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|       `-RecoveryExpr 0x13280cf68 <col:13> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13280cab8 <line:55:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13280cbb8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13280cb60 <<invalid sloc>> Implicit 873
