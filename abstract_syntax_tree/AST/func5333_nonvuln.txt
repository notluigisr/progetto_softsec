TranslationUnitDecl 0x146855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1468564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x146855bd0 '__int128'
|-TypedefDecl 0x146856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x146855bf0 'unsigned __int128'
|-TypedefDecl 0x146926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x146926000 'struct __NSConstantString_tag'
|   `-Record 0x146856580 '__NSConstantString_tag'
|-TypedefDecl 0x146926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146855d90 '__SVInt8_t'
|-TypedefDecl 0x146926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x146855db0 '__SVInt16_t'
|-TypedefDecl 0x146926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x146855dd0 '__SVInt32_t'
|-TypedefDecl 0x1469263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x146855df0 '__SVInt64_t'
|-TypedefDecl 0x146926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146855e10 '__SVUint8_t'
|-TypedefDecl 0x1469264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146855e30 '__SVUint16_t'
|-TypedefDecl 0x146926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146855e50 '__SVUint32_t'
|-TypedefDecl 0x146926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146855e70 '__SVUint64_t'
|-TypedefDecl 0x1469265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146855e90 '__SVFloat16_t'
|-TypedefDecl 0x146926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1469266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146855ed0 '__SVFloat64_t'
|-TypedefDecl 0x146926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x146926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1469267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x146926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1469268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x146926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x146926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1469269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x146926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x146926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x146926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x146926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x146926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x146926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146856090 '__clang_svint8x3_t'
|-TypedefDecl 0x146926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1468560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x146926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1468560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x146926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1468560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x146926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x146926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x146926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x146926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x146926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x146927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1468561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x146927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1468561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1469278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1468561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x146927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1469279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146856230 '__clang_svint16x4_t'
|-TypedefDecl 0x146927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146856250 '__clang_svint32x4_t'
|-TypedefDecl 0x146927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146856270 '__clang_svint64x4_t'
|-TypedefDecl 0x146927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x146927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1468562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x146927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1468562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x146927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1468562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x146927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x146927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x146927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x146927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x146927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146856390 '__SVBool_t'
|-TypedefDecl 0x146927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1468563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x146927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1468563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x146927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1468563f0 '__SVCount_t'
|-TypedefDecl 0x146927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x146927fb0 'char *'
|   `-BuiltinType 0x1468556b0 'char'
|-TypedefDecl 0x146928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x146927fb0 'char *'
|   `-BuiltinType 0x1468556b0 'char'
|-FunctionDecl 0x146940cc8 <dataset_diviso_filec/func5333_nonvuln.c:1:1, line:55:1> line:1:12 referenced do_insert_tree 'int (struct qtree_mem_dqinfo *, struct dquot *, int *, int)' static
| |-ParmVarDecl 0x146928648 <col:27, col:52> col:52 used info 'struct qtree_mem_dqinfo *'
| |-ParmVarDecl 0x146940a28 <col:58, col:72> col:72 used dquot 'struct dquot *'
| |-ParmVarDecl 0x146940af8 <line:2:6, col:12> col:12 used treeblk 'int *'
| |-ParmVarDecl 0x146940b78 <col:21, col:25> col:25 used depth 'int'
| `-CompoundStmt 0x146946a50 <line:3:1, line:55:1>
|   |-DeclStmt 0x146941088 <line:4:2, col:52>
|   | `-VarDecl 0x146940df0 <col:2, col:51> col:8 used buf 'char *' cinit
|   |   `-CallExpr 0x146941058 <col:14, col:51> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x146940f70 <col:14> 'int ()' Function 0x146940eb8 'kmalloc' 'int ()'
|   |     |-RecoveryExpr 0x146940fc8 <col:22, col:28> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x146940f90 <col:22> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   |     `-RecoveryExpr 0x146941038 <col:43> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1469412a0 <line:5:2, col:37>
|   | |-VarDecl 0x1469410b8 <col:2, col:12> col:6 used ret 'int' cinit
|   | | `-IntegerLiteral 0x146941120 <col:12> 'int' 0
|   | |-VarDecl 0x146941158 <col:2, col:24> col:15 used newson 'int' cinit
|   | | `-IntegerLiteral 0x1469411c0 <col:24> 'int' 0
|   | `-VarDecl 0x1469411f8 <col:2, col:36> col:27 used newact 'int' cinit
|   |   `-IntegerLiteral 0x146941260 <col:36> 'int' 0
|   |-DeclStmt 0x146941370 <line:7:2, col:13>
|   | `-VarDecl 0x146941308 <col:2, col:7> col:7 used newblk 'int'
|   |-IfStmt 0x146941480 <line:9:2, line:10:11>
|   | |-UnaryOperator 0x1469413c0 <line:9:6, col:7> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1469413a8 <col:7> 'char *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x146941388 <col:7> 'char *' contains-errors lvalue Var 0x146940df0 'buf' 'char *'
|   | `-ReturnStmt 0x146941470 <line:10:3, col:11>
|   |   `-UnaryOperator 0x146941458 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x146941440 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x146941420 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1470094b8 <line:11:2, line:25:2> has_else
|   | |-UnaryOperator 0x146941508 <line:11:6, col:8> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1469414f0 <col:7, col:8> 'int' <LValueToRValue>
|   | |   `-UnaryOperator 0x1469414d8 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x1469414c0 <col:8> 'int *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1469414a0 <col:8> 'int *' lvalue ParmVar 0x146940af8 'treeblk' 'int *'
|   | |-CompoundStmt 0x147008ed8 <col:17, line:18:2>
|   | | |-BinaryOperator 0x1469416e8 <line:12:3, col:28> 'int' '='
|   | | | |-DeclRefExpr 0x146941520 <col:3> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   | | | `-CallExpr 0x1469416a8 <col:9, col:28> 'int'
|   | | |   |-ImplicitCastExpr 0x146941690 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x146941620 <col:9> 'int ()' Function 0x146941568 'get_free_dqblk' 'int ()'
|   | | |   `-ImplicitCastExpr 0x1469416d0 <col:24> 'struct qtree_mem_dqinfo *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x146941640 <col:24> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   | | |-IfStmt 0x1469417e8 <line:13:3, line:14:9>
|   | | | |-BinaryOperator 0x146941760 <line:13:7, col:13> 'int' '<'
|   | | | | |-ImplicitCastExpr 0x146941748 <col:7> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x146941708 <col:7> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   | | | | `-IntegerLiteral 0x146941728 <col:13> 'int' 0
|   | | | `-GotoStmt 0x1469417d0 <line:14:4, col:9> 'out_buf' 0x146941780
|   | | |-BinaryOperator 0x146941890 <line:15:3, col:14> 'int' '='
|   | | | |-UnaryOperator 0x146941840 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x146941828 <col:4> 'int *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x146941808 <col:4> 'int *' lvalue ParmVar 0x146940af8 'treeblk' 'int *'
|   | | | `-ImplicitCastExpr 0x146941878 <col:14> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x146941858 <col:14> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   | | |-CallExpr 0x147008e40 <line:16:3, col:37> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x147008d50 <col:3> 'void *(void *, int, unsigned long)' Function 0x1469418f8 'memset' 'void *(void *, int, unsigned long)'
|   | | | |-DeclRefExpr 0x147008d70 <col:10> 'char *' contains-errors lvalue Var 0x146940df0 'buf' 'char *'
|   | | | |-IntegerLiteral 0x147008d90 <col:15> 'int' 0
|   | | | `-RecoveryExpr 0x147008de8 <col:18, col:24> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x147008db0 <col:18> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   | | `-BinaryOperator 0x147008eb8 <line:17:3, col:12> 'int' '='
|   | |   |-DeclRefExpr 0x147008e78 <col:3> 'int' lvalue Var 0x1469411f8 'newact' 'int'
|   | |   `-IntegerLiteral 0x147008e98 <col:12> 'int' 1
|   | `-CompoundStmt 0x147009498 <line:18:9, line:25:2>
|   |   |-BinaryOperator 0x147009158 <line:19:3, col:37> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x147008f10 <col:3> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   |   | `-CallExpr 0x1470090d8 <col:9, col:37> 'int' contains-errors
|   |   |   |-ImplicitCastExpr 0x1470090c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x147009010 <col:9> 'int ()' Function 0x147008f58 'read_blk' 'int ()'
|   |   |   |-ImplicitCastExpr 0x147009110 <col:18> 'struct qtree_mem_dqinfo *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x147009030 <col:18> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   |   |   |-ImplicitCastExpr 0x147009128 <col:24, col:25> 'int' <LValueToRValue>
|   |   |   | `-UnaryOperator 0x147009088 <col:24, col:25> 'int' lvalue prefix '*' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x147009070 <col:25> 'int *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x147009050 <col:25> 'int *' lvalue ParmVar 0x146940af8 'treeblk' 'int *'
|   |   |   `-ImplicitCastExpr 0x147009140 <col:34> 'char *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1470090a0 <col:34> 'char *' contains-errors lvalue Var 0x146940df0 'buf' 'char *'
|   |   `-IfStmt 0x147009478 <line:20:3, line:24:3>
|   |     |-BinaryOperator 0x1470091d0 <line:20:7, col:13> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1470091b8 <col:7> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x147009178 <col:7> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   |     | `-IntegerLiteral 0x147009198 <col:13> 'int' 0
|   |     `-CompoundStmt 0x147009458 <col:16, line:24:3>
|   |       |-CallExpr 0x147009408 <line:21:4, line:22:24> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x1470092d0 <line:21:4> 'int ()' Function 0x147009218 'quota_error' 'int ()'
|   |       | |-RecoveryExpr 0x147009328 <col:16, col:23> '<dependent type>' contains-errors lvalue
|   |       | | `-DeclRefExpr 0x1470092f0 <col:16> 'struct dquot *' lvalue ParmVar 0x146940a28 'dquot' 'struct dquot *'
|   |       | |-StringLiteral 0x147009390 <col:30, line:22:9> 'char[7]' lvalue "STRSTR"
|   |       | `-UnaryOperator 0x1470093f0 <col:16, col:17> 'int' lvalue prefix '*' cannot overflow
|   |       |   `-ImplicitCastExpr 0x1470093d8 <col:17> 'int *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x1470093b8 <col:17> 'int *' lvalue ParmVar 0x146940af8 'treeblk' 'int *'
|   |       `-GotoStmt 0x147009440 <line:23:4, col:9> 'out_buf' 0x146941780
|   |-BinaryOperator 0x1470098b0 <line:27:2, col:64> 'int' contains-errors '='
|   | |-DeclRefExpr 0x147009520 <col:2> 'int' lvalue Var 0x146941308 'newblk' 'int'
|   | `-CallExpr 0x147009888 <col:11, col:64> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x147009620 <col:11> 'int ()' Function 0x147009568 'le32_to_cpu' 'int ()'
|   |   `-ArraySubscriptExpr 0x147009868 <col:23, col:63> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x147009850 <col:23> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x147009830 <col:23> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   |     `-CallExpr 0x1470097f8 <col:27, col:62> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x147009738 <col:27> 'int ()' Function 0x147009680 'get_index' 'int ()'
|   |       |-DeclRefExpr 0x147009758 <col:37> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   |       |-RecoveryExpr 0x1470097b0 <col:43, col:50> '<dependent type>' contains-errors lvalue
|   |       | `-DeclRefExpr 0x147009778 <col:43> 'struct dquot *' lvalue ParmVar 0x146940a28 'dquot' 'struct dquot *'
|   |       `-DeclRefExpr 0x1470097d8 <col:57> 'int' lvalue ParmVar 0x146940b78 'depth' 'int'
|   |-IfStmt 0x147009980 <line:28:2, line:29:12>
|   | |-UnaryOperator 0x147009908 <line:28:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1470098f0 <col:7> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1470098d0 <col:7> 'int' lvalue Var 0x146941308 'newblk' 'int'
|   | `-BinaryOperator 0x147009960 <line:29:3, col:12> 'int' '='
|   |   |-DeclRefExpr 0x147009920 <col:3> 'int' lvalue Var 0x146941158 'newson' 'int'
|   |   `-IntegerLiteral 0x147009940 <col:12> 'int' 1
|   |-IfStmt 0x146945f20 <line:30:2, line:44:2> has_else
|   | |-BinaryOperator 0x147009a60 <line:30:6, col:39> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x1470099a0 <col:6> 'int' lvalue ParmVar 0x146940b78 'depth' 'int'
|   | | `-BinaryOperator 0x147009a40 <col:15, col:39> '<dependent type>' contains-errors '-'
|   | |   |-RecoveryExpr 0x1470099f8 <col:15, col:21> '<dependent type>' contains-errors lvalue
|   | |   | `-DeclRefExpr 0x1470099c0 <col:15> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   | |   `-IntegerLiteral 0x147009a20 <col:39> 'int' 1
|   | |-CompoundStmt 0x146945cb8 <col:42, line:42:2>
|   | | `-BinaryOperator 0x146945c98 <line:41:3, col:47> 'int' '='
|   | |   |-DeclRefExpr 0x147009a80 <col:3> 'int' lvalue Var 0x146941308 'newblk' 'int'
|   | |   `-CallExpr 0x146945c30 <col:12, col:47> 'int'
|   | |     |-ImplicitCastExpr 0x146945c18 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x147009b80 <col:12> 'int ()' Function 0x147009ac8 'find_free_dqentry' 'int ()'
|   | |     |-ImplicitCastExpr 0x146945c68 <col:30> 'struct qtree_mem_dqinfo *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x147009ba0 <col:30> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   | |     |-ImplicitCastExpr 0x146945c80 <col:36> 'struct dquot *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x147009bc0 <col:36> 'struct dquot *' lvalue ParmVar 0x146940a28 'dquot' 'struct dquot *'
|   | |     `-UnaryOperator 0x146945c00 <col:43, col:44> 'int *' prefix '&' cannot overflow
|   | |       `-DeclRefExpr 0x147009be0 <col:44> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   | `-CompoundStmt 0x146945f08 <line:42:9, line:44:2>
|   |   `-BinaryOperator 0x146945ee8 <line:43:3, col:53> 'int' '='
|   |     |-DeclRefExpr 0x146945cd0 <col:3> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   |     `-CallExpr 0x146945e78 <col:9, col:53> 'int'
|   |       |-ImplicitCastExpr 0x146945e60 <col:9> 'int (*)(struct qtree_mem_dqinfo *, struct dquot *, int *, int)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x146945cf0 <col:9> 'int (struct qtree_mem_dqinfo *, struct dquot *, int *, int)' Function 0x146940cc8 'do_insert_tree' 'int (struct qtree_mem_dqinfo *, struct dquot *, int *, int)'
|   |       |-ImplicitCastExpr 0x146945eb8 <col:24> 'struct qtree_mem_dqinfo *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x146945d10 <col:24> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   |       |-ImplicitCastExpr 0x146945ed0 <col:30> 'struct dquot *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x146945d30 <col:30> 'struct dquot *' lvalue ParmVar 0x146940a28 'dquot' 'struct dquot *'
|   |       |-UnaryOperator 0x146945d70 <col:37, col:38> 'int *' prefix '&' cannot overflow
|   |       | `-DeclRefExpr 0x146945d50 <col:38> 'int' lvalue Var 0x146941308 'newblk' 'int'
|   |       `-BinaryOperator 0x146945de0 <col:46, col:52> 'int' '+'
|   |         |-ImplicitCastExpr 0x146945dc8 <col:46> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x146945d88 <col:46> 'int' lvalue ParmVar 0x146940b78 'depth' 'int'
|   |         `-IntegerLiteral 0x146945da8 <col:52> 'int' 1
|   |-IfStmt 0x146946840 <line:45:2, line:51:2> has_else
|   | |-BinaryOperator 0x146946000 <line:45:6, col:23> 'int' '&&'
|   | | |-ImplicitCastExpr 0x146945fe8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x146945f50 <col:6> 'int' lvalue Var 0x146941158 'newson' 'int'
|   | | `-BinaryOperator 0x146945fc8 <col:16, col:23> 'int' '>='
|   | |   |-ImplicitCastExpr 0x146945fb0 <col:16> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x146945f70 <col:16> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   | |   `-IntegerLiteral 0x146945f90 <col:23> 'int' 0
|   | |-CompoundStmt 0x1469464f8 <col:26, line:49:2>
|   | | `-BinaryOperator 0x1469464d8 <line:48:3, col:38> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x146946290 <col:3> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   | |   `-CallExpr 0x146946458 <col:9, col:38> 'int' contains-errors
|   | |     |-ImplicitCastExpr 0x146946440 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x146946390 <col:9> 'int ()' Function 0x1469462d8 'write_blk' 'int ()'
|   | |     |-ImplicitCastExpr 0x146946490 <col:19> 'struct qtree_mem_dqinfo *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1469463b0 <col:19> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   | |     |-ImplicitCastExpr 0x1469464a8 <col:25, col:26> 'int' <LValueToRValue>
|   | |     | `-UnaryOperator 0x146946408 <col:25, col:26> 'int' lvalue prefix '*' cannot overflow
|   | |     |   `-ImplicitCastExpr 0x1469463f0 <col:26> 'int *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x1469463d0 <col:26> 'int *' lvalue ParmVar 0x146940af8 'treeblk' 'int *'
|   | |     `-ImplicitCastExpr 0x1469464c0 <col:35> 'char *' contains-errors <LValueToRValue>
|   | |       `-DeclRefExpr 0x146946420 <col:35> 'char *' contains-errors lvalue Var 0x146940df0 'buf' 'char *'
|   | `-IfStmt 0x146946820 <line:49:9, line:51:2>
|   |   |-BinaryOperator 0x1469465c0 <line:49:13, col:29> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x1469465a8 <col:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x146946510 <col:13> 'int' lvalue Var 0x1469411f8 'newact' 'int'
|   |   | `-BinaryOperator 0x146946588 <col:23, col:29> 'int' '<'
|   |   |   |-ImplicitCastExpr 0x146946570 <col:23> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x146946530 <col:23> 'int' lvalue Var 0x1469410b8 'ret' 'int'
|   |   |   `-IntegerLiteral 0x146946550 <col:29> 'int' 0
|   |   `-CompoundStmt 0x146946808 <col:32, line:51:2>
|   |     `-CallExpr 0x146946788 <line:50:3, col:37> 'int' contains-errors
|   |       |-ImplicitCastExpr 0x146946770 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1469466c0 <col:3> 'int ()' Function 0x146946608 'put_free_dqblk' 'int ()'
|   |       |-ImplicitCastExpr 0x1469467c0 <col:18> 'struct qtree_mem_dqinfo *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1469466e0 <col:18> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x146928648 'info' 'struct qtree_mem_dqinfo *'
|   |       |-ImplicitCastExpr 0x1469467d8 <col:24> 'char *' contains-errors <LValueToRValue>
|   |       | `-DeclRefExpr 0x146946700 <col:24> 'char *' contains-errors lvalue Var 0x146940df0 'buf' 'char *'
|   |       `-ImplicitCastExpr 0x1469467f0 <col:29, col:30> 'int' <LValueToRValue>
|   |         `-UnaryOperator 0x146946758 <col:29, col:30> 'int' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x146946740 <col:30> 'int *' <LValueToRValue>
|   |             `-DeclRefExpr 0x146946720 <col:30> 'int *' lvalue ParmVar 0x146940af8 'treeblk' 'int *'
|   |-LabelStmt 0x1469469e8 <line:52:1, line:53:11> 'out_buf'
|   | `-CallExpr 0x1469469a8 <col:2, col:11> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x146946990 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x146946950 <col:2> 'int ()' Function 0x146946898 'kfree' 'int ()'
|   |   `-ImplicitCastExpr 0x1469469d0 <col:8> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x146946970 <col:8> 'char *' contains-errors lvalue Var 0x146940df0 'buf' 'char *'
|   `-ReturnStmt 0x146946a40 <line:54:2, col:9>
|     `-ImplicitCastExpr 0x146946a28 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x146946a08 <col:9> 'int' lvalue Var 0x1469410b8 'ret' 'int'
`-FunctionDecl 0x1469418f8 <line:16:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x147008c00 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x147008c68 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x147008cd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1469419a0 <<invalid sloc>> Implicit 900
