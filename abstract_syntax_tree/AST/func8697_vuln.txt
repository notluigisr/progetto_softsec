TranslationUnitDecl 0x12e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e855bd0 '__int128'
|-TypedefDecl 0x12e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e855bf0 'unsigned __int128'
|-TypedefDecl 0x12e926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e926000 'struct __NSConstantString_tag'
|   `-Record 0x12e856580 '__NSConstantString_tag'
|-TypedefDecl 0x12e926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e855d90 '__SVInt8_t'
|-TypedefDecl 0x12e926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e855db0 '__SVInt16_t'
|-TypedefDecl 0x12e926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e855dd0 '__SVInt32_t'
|-TypedefDecl 0x12e9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e855df0 '__SVInt64_t'
|-TypedefDecl 0x12e926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e855e10 '__SVUint8_t'
|-TypedefDecl 0x12e9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e855e30 '__SVUint16_t'
|-TypedefDecl 0x12e926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e855e50 '__SVUint32_t'
|-TypedefDecl 0x12e926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e855e70 '__SVUint64_t'
|-TypedefDecl 0x12e9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e855e90 '__SVFloat16_t'
|-TypedefDecl 0x12e926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e856390 '__SVBool_t'
|-TypedefDecl 0x12e927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e8563f0 '__SVCount_t'
|-TypedefDecl 0x12e927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e927fb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
|-TypedefDecl 0x12e928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e927fb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
`-FunctionDecl 0x12e941948 <dataset_diviso_filec/func8697_vuln.c:1:1, line:17:1> line:1:14 invalid cp_report_fixup 'int *(struct hid_device *, int *, unsigned int *)' static
  |-ParmVarDecl 0x12e928668 <col:30, col:49> col:49 used hdev 'struct hid_device *'
  |-ParmVarDecl 0x12e928718 <col:55, col:61> col:61 referenced invalid rdesc 'int *'
  |-ParmVarDecl 0x12e941800 <line:2:3, col:17> col:17 used rsize 'unsigned int *'
  `-CompoundStmt 0x12e943e68 <line:3:1, line:17:1>
    |-DeclStmt 0x12e941ce8 <line:4:2, col:61>
    | `-VarDecl 0x12e941a20 <col:2, col:60> col:16 used quirks 'unsigned long' cinit
    |   `-CStyleCastExpr 0x12e941cc0 <col:25, col:60> 'unsigned long' <IntegralCast>
    |     `-CallExpr 0x12e941c68 <col:40, col:60> 'int'
    |       |-ImplicitCastExpr 0x12e941c50 <col:40> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12e941be0 <col:40> 'int ()' Function 0x12e941b28 'hid_get_drvdata' 'int ()'
    |       `-ImplicitCastExpr 0x12e941c90 <col:56> 'struct hid_device *' <LValueToRValue>
    |         `-DeclRefExpr 0x12e941c00 <col:56> 'struct hid_device *' lvalue ParmVar 0x12e928668 'hdev' 'struct hid_device *'
    |-DeclStmt 0x12e941d80 <line:5:2, col:16>
    | `-VarDecl 0x12e941d18 <col:2, col:15> col:15 used i 'unsigned int'
    |-IfStmt 0x12e941e40 <line:7:2, line:8:10>
    | |-RecoveryExpr 0x12e941df0 <line:7:6, col:41> '_Bool' contains-errors
    | `-ReturnStmt 0x12e941e30 <line:8:3, col:10>
    |   `-RecoveryExpr 0x12e941e10 <col:10> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x12e943e00 <line:10:2, line:15:3>
    | |-BinaryOperator 0x12e941eb8 <line:10:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x12e941e60 <col:7> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x12e941ea0 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x12e941e80 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12e941fd0 <col:14, col:27> 'int' '<'
    | | |-ImplicitCastExpr 0x12e941fb8 <col:14> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e941ed8 <col:14> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'
    | | `-BinaryOperator 0x12e941f98 <col:18, col:27> 'unsigned int' '-'
    | |   |-ImplicitCastExpr 0x12e941f68 <col:18, col:19> 'unsigned int' <LValueToRValue>
    | |   | `-UnaryOperator 0x12e941f30 <col:18, col:19> 'unsigned int' lvalue prefix '*' cannot overflow
    | |   |   `-ImplicitCastExpr 0x12e941f18 <col:19> 'unsigned int *' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x12e941ef8 <col:19> 'unsigned int *' lvalue ParmVar 0x12e941800 'rsize' 'unsigned int *'
    | |   `-ImplicitCastExpr 0x12e941f80 <col:27> 'unsigned int' <IntegralCast>
    | |     `-IntegerLiteral 0x12e941f48 <col:27> 'int' 4
    | |-UnaryOperator 0x12e942010 <col:30, col:31> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x12e941ff0 <col:30> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'
    | `-IfStmt 0x12e9427b0 <line:11:3, line:15:3>
    |   |-BinaryOperator 0x12e942220 <line:11:7, col:43> 'int' contains-errors '&&'
    |   | |-BinaryOperator 0x12e9420d8 <col:7, col:19> 'int' contains-errors '=='
    |   | | |-ArraySubscriptExpr 0x12e942098 <col:7, col:14> '<dependent type>' contains-errors lvalue
    |   | | | |-ImplicitCastExpr 0x12e942068 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | | `-RecoveryExpr 0x12e942028 <col:7> '<dependent type>' contains-errors lvalue
    |   | | | `-ImplicitCastExpr 0x12e942080 <col:13> 'unsigned int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x12e942048 <col:13> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'
    |   | | `-IntegerLiteral 0x12e9420b8 <col:19> 'int' 41
    |   | `-BinaryOperator 0x12e942200 <col:27, col:43> 'int' contains-errors '=='
    |   |   |-ArraySubscriptExpr 0x12e9421c0 <col:27, col:38> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x12e9421a8 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x12e9420f8 <col:27> '<dependent type>' contains-errors lvalue
    |   |   | `-BinaryOperator 0x12e942188 <col:33, col:37> 'unsigned int' '+'
    |   |   |   |-ImplicitCastExpr 0x12e942158 <col:33> 'unsigned int' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x12e942118 <col:33> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'
    |   |   |   `-ImplicitCastExpr 0x12e942170 <col:37> 'unsigned int' <IntegralCast>
    |   |   |     `-IntegerLiteral 0x12e942138 <col:37> 'int' 2
    |   |   `-IntegerLiteral 0x12e9421e0 <col:43> 'int' 25
    |   `-CompoundStmt 0x12e942788 <col:49, line:15:3>
    |     |-BinaryOperator 0x12e942318 <line:12:4, col:15> '<dependent type>' contains-errors '='
    |     | |-ArraySubscriptExpr 0x12e9422d8 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |     | | |-ImplicitCastExpr 0x12e9422a8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | `-RecoveryExpr 0x12e942260 <col:4> '<dependent type>' contains-errors lvalue
    |     | | |   `-DeclRefExpr 0x12e942240 <col:4> 'int *' lvalue ParmVar 0x12e928718 'rdesc' 'int *'
    |     | | `-ImplicitCastExpr 0x12e9422c0 <col:10> 'unsigned int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x12e942288 <col:10> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'
    |     | `-IntegerLiteral 0x12e9422f8 <col:15> 'int' 25
    |     |-BinaryOperator 0x12e942468 <line:13:4, col:19> '<dependent type>' contains-errors '='
    |     | |-ArraySubscriptExpr 0x12e942428 <col:4, col:15> '<dependent type>' contains-errors lvalue
    |     | | |-ImplicitCastExpr 0x12e942410 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | `-RecoveryExpr 0x12e942358 <col:4> '<dependent type>' contains-errors lvalue
    |     | | |   `-DeclRefExpr 0x12e942338 <col:4> 'int *' lvalue ParmVar 0x12e928718 'rdesc' 'int *'
    |     | | `-BinaryOperator 0x12e9423f0 <col:10, col:14> 'unsigned int' '+'
    |     | |   |-ImplicitCastExpr 0x12e9423c0 <col:10> 'unsigned int' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x12e942380 <col:10> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'
    |     | |   `-ImplicitCastExpr 0x12e9423d8 <col:14> 'unsigned int' <IntegralCast>
    |     | |     `-IntegerLiteral 0x12e9423a0 <col:14> 'int' 2
    |     | `-IntegerLiteral 0x12e942448 <col:19> 'int' 41
    |     `-CallExpr 0x12e942758 <line:14:4, col:35> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x12e942568 <col:4> 'int ()' Function 0x12e9424b0 'swap' 'int ()'
    |       |-ArraySubscriptExpr 0x12e942650 <col:9, col:20> '<dependent type>' contains-errors lvalue
    |       | |-ImplicitCastExpr 0x12e942638 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |       | | `-RecoveryExpr 0x12e942588 <col:9> '<dependent type>' contains-errors lvalue
    |       | `-BinaryOperator 0x12e942618 <col:15, col:19> 'unsigned int' '+'
    |       |   |-ImplicitCastExpr 0x12e9425e8 <col:15> 'unsigned int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x12e9425a8 <col:15> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'
    |       |   `-ImplicitCastExpr 0x12e942600 <col:19> 'unsigned int' <IntegralCast>
    |       |     `-IntegerLiteral 0x12e9425c8 <col:19> 'int' 3
    |       `-ArraySubscriptExpr 0x12e942738 <col:23, col:34> '<dependent type>' contains-errors lvalue
    |         |-ImplicitCastExpr 0x12e942720 <col:23> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-RecoveryExpr 0x12e942670 <col:23> '<dependent type>' contains-errors lvalue
    |         `-BinaryOperator 0x12e942700 <col:29, col:33> 'unsigned int' '+'
    |           |-ImplicitCastExpr 0x12e9426d0 <col:29> 'unsigned int' <LValueToRValue>
    |           | `-DeclRefExpr 0x12e942690 <col:29> 'unsigned int' lvalue Var 0x12e941d18 'i' 'unsigned int'
    |           `-ImplicitCastExpr 0x12e9426e8 <col:33> 'unsigned int' <IntegralCast>
    |             `-IntegerLiteral 0x12e9426b0 <col:33> 'int' 1
    `-ReturnStmt 0x12e943e58 <line:16:2, col:9>
      `-RecoveryExpr 0x12e943e38 <col:9> '<dependent type>' contains-errors lvalue
