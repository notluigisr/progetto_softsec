TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12d926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d926000 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12d926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12d926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12d926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12d9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12d926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12d926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12d9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12d927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12d927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d927fb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12d928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d927fb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
`-FunctionDecl 0x12d928758 <dataset_diviso_filec/func1434_vuln.c:1:1, line:43:1> line:1:1 limited_big_rand 'int (struct RBignum *)'
  |-ParmVarDecl 0x12d928648 <col:18, col:34> col:34 used limit 'struct RBignum *'
  `-CompoundStmt 0x12e009138 <line:2:1, line:43:1>
    |-DeclStmt 0x12d940bf0 <line:3:5, col:33>
    | |-VarDecl 0x12d940a68 <col:5, col:19> col:19 used mask 'unsigned long'
    | |-VarDecl 0x12d940ae8 <col:5, col:25> col:25 used lim 'unsigned long'
    | `-VarDecl 0x12d940b68 <col:5, col:30> col:30 used rnd 'unsigned long'
    |-DeclStmt 0x12d940d00 <line:4:5, col:24>
    | `-VarDecl 0x12d940c98 <col:5, col:21> col:21 used val 'struct RBignum *'
    |-DeclStmt 0x12d940eb8 <line:5:5, col:25>
    | |-VarDecl 0x12d940d30 <col:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x12d940db0 <col:5, col:12> col:12 used len 'int'
    | `-VarDecl 0x12d940e30 <col:5, col:17> col:17 used boundary 'int'
    |-BinaryOperator 0x12d9411e8 <line:9:5, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12d9411a0 <col:5, col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12d941168 <col:5> 'struct RBignum *' lvalue Var 0x12d940c98 'val' 'struct RBignum *'
    | `-IntegerLiteral 0x12d9411c8 <col:17> 'int' 1
    |-LabelStmt 0x12d9412d0 <line:22:3, line:23:12> 'retry'
    | `-BinaryOperator 0x12d941260 <col:5, col:12> 'unsigned long' '='
    |   |-DeclRefExpr 0x12d941208 <col:5> 'unsigned long' lvalue Var 0x12d940a68 'mask' 'unsigned long'
    |   `-ImplicitCastExpr 0x12d941248 <col:12> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x12d941228 <col:12> 'int' 0
    |-BinaryOperator 0x12d941330 <line:24:5, col:16> 'int' '='
    | |-DeclRefExpr 0x12d9412f0 <col:5> 'int' lvalue Var 0x12d940e30 'boundary' 'int'
    | `-IntegerLiteral 0x12d941310 <col:16> 'int' 1
    `-ForStmt 0x12e008fe8 <line:25:5, line:41:5>
      |-BinaryOperator 0x12d9413e8 <line:25:10, col:18> 'int' '='
      | |-DeclRefExpr 0x12d941350 <col:10> 'int' lvalue Var 0x12d940d30 'i' 'int'
      | `-BinaryOperator 0x12d9413c8 <col:14, col:18> 'int' '-'
      |   |-ImplicitCastExpr 0x12d9413b0 <col:14> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x12d941370 <col:14> 'int' lvalue Var 0x12d940db0 'len' 'int'
      |   `-IntegerLiteral 0x12d941390 <col:18> 'int' 1
      |-<<<NULL>>>
      |-BinaryOperator 0x12d941460 <col:21, col:26> 'int' '<='
      | |-IntegerLiteral 0x12d941408 <col:21> 'int' 0
      | `-ImplicitCastExpr 0x12d941448 <col:26> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x12d941428 <col:26> 'int' lvalue Var 0x12d940d30 'i' 'int'
      |-UnaryOperator 0x12d9414a0 <col:29, col:30> 'int' postfix '--'
      | `-DeclRefExpr 0x12d941480 <col:29> 'int' lvalue Var 0x12d940d30 'i' 'int'
      `-CompoundStmt 0x12e008fc8 <col:34, line:41:5>
        |-BinaryOperator 0x12d9417b0 <line:27:9, col:49> 'unsigned long' '='
        | |-DeclRefExpr 0x12d941530 <col:9> 'unsigned long' lvalue Var 0x12d940a68 'mask' 'unsigned long'
        | `-ImplicitCastExpr 0x12d941798 <col:16, col:49> 'unsigned long' <IntegralCast>
        |   `-ConditionalOperator 0x12d941768 <col:16, col:49> 'unsigned int'
        |     |-ImplicitCastExpr 0x12d941738 <col:16> 'unsigned long' <LValueToRValue>
        |     | `-DeclRefExpr 0x12d941550 <col:16> 'unsigned long' lvalue Var 0x12d940a68 'mask' 'unsigned long'
        |     |-IntegerLiteral 0x12d941570 <col:23> 'unsigned int' 4294967295
        |     `-ImplicitCastExpr 0x12d941750 <col:36, col:49> 'unsigned int' <IntegralCast>
        |       `-CallExpr 0x12d9416f8 <col:36, col:49> 'int'
        |         |-ImplicitCastExpr 0x12d9416e0 <col:36> 'int (*)()' <FunctionToPointerDecay>
        |         | `-DeclRefExpr 0x12d941670 <col:36> 'int ()' Function 0x12d9415b8 'make_mask' 'int ()'
        |         `-ImplicitCastExpr 0x12d941720 <col:46> 'unsigned long' <LValueToRValue>
        |           `-DeclRefExpr 0x12d941690 <col:46> 'unsigned long' lvalue Var 0x12d940ae8 'lim' 'unsigned long'
        `-IfStmt 0x12e008f00 <line:28:9, line:39:9> has_else
          |-ImplicitCastExpr 0x12d9417f0 <line:28:13> 'unsigned long' <LValueToRValue>
          | `-DeclRefExpr 0x12d9417d0 <col:13> 'unsigned long' lvalue Var 0x12d940a68 'mask' 'unsigned long'
          |-CompoundStmt 0x12e008e50 <col:19, line:36:9>
          | |-BinaryOperator 0x12d9419d0 <line:29:13, col:37> 'unsigned long' '='
          | | |-DeclRefExpr 0x12d941808 <col:13> 'unsigned long' lvalue Var 0x12d940b68 'rnd' 'unsigned long'
          | | `-BinaryOperator 0x12d9419b0 <col:19, col:37> 'unsigned long' '&'
          | |   |-ImplicitCastExpr 0x12d941998 <col:19, col:33> 'unsigned long' <IntegralCast>
          | |   | `-CallExpr 0x12d941940 <col:19, col:33> 'int'
          | |   |   `-ImplicitCastExpr 0x12d941928 <col:19> 'int (*)()' <FunctionToPointerDecay>
          | |   |     `-DeclRefExpr 0x12d941908 <col:19> 'int ()' Function 0x12d941850 'genrand_int32' 'int ()'
          | |   `-ImplicitCastExpr 0x12d941980 <col:37> 'unsigned long' <LValueToRValue>
          | |     `-DeclRefExpr 0x12d941960 <col:37> 'unsigned long' lvalue Var 0x12d940a68 'mask' 'unsigned long'
          | `-IfStmt 0x12e008e30 <line:30:13, line:35:13>
          |   |-ImplicitCastExpr 0x12e008c20 <line:30:17> 'int' <LValueToRValue>
          |   | `-DeclRefExpr 0x12e008c00 <col:17> 'int' lvalue Var 0x12d940e30 'boundary' 'int'
          |   `-CompoundStmt 0x12e008e10 <col:27, line:35:13>
          |     |-IfStmt 0x12e008ce0 <line:31:17, line:32:26>
          |     | |-BinaryOperator 0x12e008ca8 <line:31:21, col:27> 'int' '<'
          |     | | |-ImplicitCastExpr 0x12e008c78 <col:21> 'unsigned long' <LValueToRValue>
          |     | | | `-DeclRefExpr 0x12e008c38 <col:21> 'unsigned long' lvalue Var 0x12d940ae8 'lim' 'unsigned long'
          |     | | `-ImplicitCastExpr 0x12e008c90 <col:27> 'unsigned long' <LValueToRValue>
          |     | |   `-DeclRefExpr 0x12e008c58 <col:27> 'unsigned long' lvalue Var 0x12d940b68 'rnd' 'unsigned long'
          |     | `-GotoStmt 0x12e008cc8 <line:32:21, col:26> 'retry' 0x12d941280
          |     `-IfStmt 0x12e008df0 <line:33:17, line:34:32>
          |       |-BinaryOperator 0x12e008d70 <line:33:21, col:27> 'int' '<'
          |       | |-ImplicitCastExpr 0x12e008d40 <col:21> 'unsigned long' <LValueToRValue>
          |       | | `-DeclRefExpr 0x12e008d00 <col:21> 'unsigned long' lvalue Var 0x12d940b68 'rnd' 'unsigned long'
          |       | `-ImplicitCastExpr 0x12e008d58 <col:27> 'unsigned long' <LValueToRValue>
          |       |   `-DeclRefExpr 0x12e008d20 <col:27> 'unsigned long' lvalue Var 0x12d940ae8 'lim' 'unsigned long'
          |       `-BinaryOperator 0x12e008dd0 <line:34:21, col:32> 'int' '='
          |         |-DeclRefExpr 0x12e008d90 <col:21> 'int' lvalue Var 0x12d940e30 'boundary' 'int'
          |         `-IntegerLiteral 0x12e008db0 <col:32> 'int' 0
          `-CompoundStmt 0x12e008ee8 <line:37:14, line:39:9>
            `-BinaryOperator 0x12e008ec8 <line:38:13, col:19> 'unsigned long' '='
              |-DeclRefExpr 0x12e008e70 <col:13> 'unsigned long' lvalue Var 0x12d940b68 'rnd' 'unsigned long'
              `-ImplicitCastExpr 0x12e008eb0 <col:19> 'unsigned long' <IntegralCast>
                `-IntegerLiteral 0x12e008e90 <col:19> 'int' 0
