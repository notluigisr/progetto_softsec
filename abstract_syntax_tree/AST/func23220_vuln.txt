TranslationUnitDecl 0x125055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1250564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125055bd0 '__int128'
|-TypedefDecl 0x125056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125055bf0 'unsigned __int128'
|-TypedefDecl 0x12580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12580bc00 'struct __NSConstantString_tag'
|   `-Record 0x125056580 '__NSConstantString_tag'
|-TypedefDecl 0x12580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125055d90 '__SVInt8_t'
|-TypedefDecl 0x12580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125055db0 '__SVInt16_t'
|-TypedefDecl 0x12580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125055dd0 '__SVInt32_t'
|-TypedefDecl 0x12580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125055df0 '__SVInt64_t'
|-TypedefDecl 0x12580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125055e10 '__SVUint8_t'
|-TypedefDecl 0x12580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125055e30 '__SVUint16_t'
|-TypedefDecl 0x12580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125055e50 '__SVUint32_t'
|-TypedefDecl 0x12580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125055e70 '__SVUint64_t'
|-TypedefDecl 0x12580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125055e90 '__SVFloat16_t'
|-TypedefDecl 0x12580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1250560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1250560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1250560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1250561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1250561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1250561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1250562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1250562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1250562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125056390 '__SVBool_t'
|-TypedefDecl 0x12580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1250563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1250563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1250563f0 '__SVCount_t'
|-TypedefDecl 0x12580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12580dbb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-TypedefDecl 0x12580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12580dbb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-FunctionDecl 0x1258269c8 <dataset_diviso_filec/func23220_vuln.c:1:1, line:45:1> line:1:12 compare_tree_entry 'int (struct tree_desc *, struct tree_desc *, const char *, int, struct diff_options *)' static
| |-ParmVarDecl 0x12580e248 <col:31, col:49> col:49 used t1 'struct tree_desc *'
| |-ParmVarDecl 0x12580e338 <col:53, col:71> col:71 used t2 'struct tree_desc *'
| |-ParmVarDecl 0x125826600 <col:75, col:87> col:87 used base 'const char *'
| |-ParmVarDecl 0x125826680 <col:93, col:97> col:97 used baselen 'int'
| |-ParmVarDecl 0x125826858 <col:106, col:127> col:127 used opt 'struct diff_options *'
| `-CompoundStmt 0x12582c540 <line:2:1, line:45:1>
|   |-DeclStmt 0x125826bf8 <line:3:2, col:23>
|   | |-VarDecl 0x125826af8 <col:2, col:11> col:11 used mode1 'unsigned int'
|   | `-VarDecl 0x125826b78 <col:2, col:18> col:18 used mode2 'unsigned int'
|   |-DeclStmt 0x125826d28 <line:4:2, col:27>
|   | |-VarDecl 0x125826c28 <col:2, col:14> col:14 used path1 'const char *'
|   | `-VarDecl 0x125826ca8 <col:2, col:22> col:22 used path2 'const char *'
|   |-DeclStmt 0x125826e88 <line:5:2, col:34>
|   | |-VarDecl 0x125826d88 <col:2, col:23> col:23 used sha1 'const unsigned char *'
|   | `-VarDecl 0x125826e08 <col:2, col:30> col:30 used sha2 'const unsigned char *'
|   |-DeclStmt 0x125827040 <line:6:2, col:29>
|   | |-VarDecl 0x125826eb8 <col:2, col:6> col:6 used cmp 'int'
|   | |-VarDecl 0x125826f38 <col:2, col:11> col:11 used pathlen1 'int'
|   | `-VarDecl 0x125826fb8 <col:2, col:21> col:21 used pathlen2 'int'
|   |-BinaryOperator 0x125827370 <line:8:2, col:46> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x125827058 <col:2> 'const unsigned char *' lvalue Var 0x125826d88 'sha1' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x125827358 <col:9, col:46> 'const unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x125827308 <col:9, col:46> 'int'
|   |     |-ImplicitCastExpr 0x1258272f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1258271a0 <col:9> 'int ()' Function 0x1258270e8 'tree_entry_extract' 'int ()'
|   |     |-ImplicitCastExpr 0x125827340 <col:28> 'struct tree_desc *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1258271c0 <col:28> 'struct tree_desc *' lvalue ParmVar 0x12580e248 't1' 'struct tree_desc *'
|   |     |-UnaryOperator 0x125827230 <col:32, col:33> 'const char **' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x1258271e0 <col:33> 'const char *' lvalue Var 0x125826c28 'path1' 'const char *'
|   |     `-UnaryOperator 0x1258272a0 <col:40, col:41> 'unsigned int *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x125827248 <col:41> 'unsigned int' lvalue Var 0x125826af8 'mode1' 'unsigned int'
|   |-BinaryOperator 0x1258274e0 <line:9:2, col:46> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x125827390 <col:2> 'const unsigned char *' lvalue Var 0x125826e08 'sha2' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1258274c8 <col:9, col:46> 'const unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x125827478 <col:9, col:46> 'int'
|   |     |-ImplicitCastExpr 0x125827460 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1258273b0 <col:9> 'int ()' Function 0x1258270e8 'tree_entry_extract' 'int ()'
|   |     |-ImplicitCastExpr 0x1258274b0 <col:28> 'struct tree_desc *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1258273d0 <col:28> 'struct tree_desc *' lvalue ParmVar 0x12580e338 't2' 'struct tree_desc *'
|   |     |-UnaryOperator 0x125827410 <col:32, col:33> 'const char **' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x1258273f0 <col:33> 'const char *' lvalue Var 0x125826ca8 'path2' 'const char *'
|   |     `-UnaryOperator 0x125827448 <col:40, col:41> 'unsigned int *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x125827428 <col:41> 'unsigned int' lvalue Var 0x125826b78 'mode2' 'unsigned int'
|   |-BinaryOperator 0x125828ed8 <line:11:2, col:39> 'int' '='
|   | |-DeclRefExpr 0x125827500 <col:2> 'int' lvalue Var 0x125826f38 'pathlen1' 'int'
|   | `-CallExpr 0x125828e78 <col:13, col:39> 'int'
|   |   |-ImplicitCastExpr 0x125828e60 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x125828e00 <col:13> 'int ()' Function 0x125827548 'tree_entry_len' 'int ()'
|   |   |-ImplicitCastExpr 0x125828ea8 <col:28> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x125828e20 <col:28> 'const char *' lvalue Var 0x125826c28 'path1' 'const char *'
|   |   `-ImplicitCastExpr 0x125828ec0 <col:35> 'const unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x125828e40 <col:35> 'const unsigned char *' lvalue Var 0x125826d88 'sha1' 'const unsigned char *'
|   |-BinaryOperator 0x125828ff0 <line:12:2, col:39> 'int' '='
|   | |-DeclRefExpr 0x125828ef8 <col:2> 'int' lvalue Var 0x125826fb8 'pathlen2' 'int'
|   | `-CallExpr 0x125828f90 <col:13, col:39> 'int'
|   |   |-ImplicitCastExpr 0x125828f78 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x125828f18 <col:13> 'int ()' Function 0x125827548 'tree_entry_len' 'int ()'
|   |   |-ImplicitCastExpr 0x125828fc0 <col:28> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x125828f38 <col:28> 'const char *' lvalue Var 0x125826ca8 'path2' 'const char *'
|   |   `-ImplicitCastExpr 0x125828fd8 <col:35> 'const unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x125828f58 <col:35> 'const unsigned char *' lvalue Var 0x125826e08 'sha2' 'const unsigned char *'
|   |-BinaryOperator 0x1258292e8 <line:13:2, col:72> 'int' '='
|   | |-DeclRefExpr 0x125829010 <col:2> 'int' lvalue Var 0x125826eb8 'cmp' 'int'
|   | `-CallExpr 0x125829208 <col:8, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1258291f0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x125829110 <col:8> 'int ()' Function 0x125829058 'base_name_compare' 'int ()'
|   |   |-ImplicitCastExpr 0x125829258 <col:26> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x125829130 <col:26> 'const char *' lvalue Var 0x125826c28 'path1' 'const char *'
|   |   |-ImplicitCastExpr 0x125829270 <col:33> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x125829150 <col:33> 'int' lvalue Var 0x125826f38 'pathlen1' 'int'
|   |   |-ImplicitCastExpr 0x125829288 <col:43> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x125829170 <col:43> 'unsigned int' lvalue Var 0x125826af8 'mode1' 'unsigned int'
|   |   |-ImplicitCastExpr 0x1258292a0 <col:50> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x125829190 <col:50> 'const char *' lvalue Var 0x125826ca8 'path2' 'const char *'
|   |   |-ImplicitCastExpr 0x1258292b8 <col:57> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1258291b0 <col:57> 'int' lvalue Var 0x125826fb8 'pathlen2' 'int'
|   |   `-ImplicitCastExpr 0x1258292d0 <col:67> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1258291d0 <col:67> 'unsigned int' lvalue Var 0x125826b78 'mode2' 'unsigned int'
|   |-IfStmt 0x1258296a0 <line:14:2, line:17:2>
|   | |-BinaryOperator 0x125829360 <line:14:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x125829348 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x125829308 <col:6> 'int' lvalue Var 0x125826eb8 'cmp' 'int'
|   | | `-IntegerLiteral 0x125829328 <col:12> 'int' 0
|   | `-CompoundStmt 0x125829680 <col:15, line:17:2>
|   |   |-CallExpr 0x125829578 <line:15:3, col:43> 'int'
|   |   | |-ImplicitCastExpr 0x125829560 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x125829460 <col:3> 'int ()' Function 0x1258293a8 'show_entry' 'int ()'
|   |   | |-ImplicitCastExpr 0x1258295c0 <col:14> 'struct diff_options *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x125829480 <col:14> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   |   | |-ImplicitCastExpr 0x1258295d8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1258294e0 <col:19> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x1258295f0 <col:26> 'struct tree_desc *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x125829500 <col:26> 'struct tree_desc *' lvalue ParmVar 0x12580e248 't1' 'struct tree_desc *'
|   |   | |-ImplicitCastExpr 0x125829608 <col:30> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x125829520 <col:30> 'const char *' lvalue ParmVar 0x125826600 'base' 'const char *'
|   |   | `-ImplicitCastExpr 0x125829620 <col:36> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x125829540 <col:36> 'int' lvalue ParmVar 0x125826680 'baselen' 'int'
|   |   `-ReturnStmt 0x125829670 <line:16:3, col:11>
|   |     `-UnaryOperator 0x125829658 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x125829638 <col:11> 'int' 1
|   |-IfStmt 0x125829920 <line:18:2, line:21:2>
|   | |-BinaryOperator 0x125829718 <line:18:6, col:12> 'int' '>'
|   | | |-ImplicitCastExpr 0x125829700 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1258296c0 <col:6> 'int' lvalue Var 0x125826eb8 'cmp' 'int'
|   | | `-IntegerLiteral 0x1258296e0 <col:12> 'int' 0
|   | `-CompoundStmt 0x125829900 <col:15, line:21:2>
|   |   |-CallExpr 0x125829810 <line:19:3, col:43> 'int'
|   |   | |-ImplicitCastExpr 0x1258297f8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x125829738 <col:3> 'int ()' Function 0x1258293a8 'show_entry' 'int ()'
|   |   | |-ImplicitCastExpr 0x125829858 <col:14> 'struct diff_options *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x125829758 <col:14> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   |   | |-ImplicitCastExpr 0x125829870 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x125829778 <col:19> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x125829888 <col:26> 'struct tree_desc *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x125829798 <col:26> 'struct tree_desc *' lvalue ParmVar 0x12580e338 't2' 'struct tree_desc *'
|   |   | |-ImplicitCastExpr 0x1258298a0 <col:30> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1258297b8 <col:30> 'const char *' lvalue ParmVar 0x125826600 'base' 'const char *'
|   |   | `-ImplicitCastExpr 0x1258298b8 <col:36> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1258297d8 <col:36> 'int' lvalue ParmVar 0x125826680 'baselen' 'int'
|   |   `-ReturnStmt 0x1258298f0 <line:20:3, col:10>
|   |     `-IntegerLiteral 0x1258298d0 <col:10> 'int' 1
|   |-IfStmt 0x12582af38 <line:22:2, line:23:10>
|   | |-BinaryOperator 0x12582aee8 <line:22:6, col:81> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x12582ae78 <col:6, col:67> 'int' contains-errors '&&'
|   | | | |-UnaryOperator 0x125829db0 <col:6, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | | `-CallExpr 0x125829d80 <col:7, col:43> '<dependent type>' contains-errors
|   | | | |   |-DeclRefExpr 0x125829a20 <col:7> 'int ()' Function 0x125829968 'DIFF_OPT_TST' 'int ()'
|   | | | |   |-DeclRefExpr 0x125829a40 <col:20> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   | | | |   `-RecoveryExpr 0x125829d60 <col:25> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x12582ae60 <col:48, col:67> 'int' prefix '!' cannot overflow
|   | | |   `-CallExpr 0x12582ae00 <col:49, col:67> 'int'
|   | | |     |-ImplicitCastExpr 0x125829dc8 <col:49> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x125829ba0 <col:49> 'int ()' Function 0x125829ae8 'hashcmp' 'int ()'
|   | | |     |-ImplicitCastExpr 0x12582ae30 <col:57> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x125829bc0 <col:57> 'const unsigned char *' lvalue Var 0x125826d88 'sha1' 'const unsigned char *'
|   | | |     `-ImplicitCastExpr 0x12582ae48 <col:63> 'const unsigned char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x125829be0 <col:63> 'const unsigned char *' lvalue Var 0x125826e08 'sha2' 'const unsigned char *'
|   | | `-BinaryOperator 0x12582aec8 <col:72, col:81> 'int' '=='
|   | |   |-ImplicitCastExpr 0x12582ae98 <col:72> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x125829cb0 <col:72> 'unsigned int' lvalue Var 0x125826af8 'mode1' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x12582aeb0 <col:81> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x125829cd0 <col:81> 'unsigned int' lvalue Var 0x125826b78 'mode2' 'unsigned int'
|   | `-ReturnStmt 0x12582af28 <line:23:3, col:10>
|   |   `-IntegerLiteral 0x12582af08 <col:10> 'int' 0
|   |-IfStmt 0x12582b510 <line:26:2, line:30:2>
|   | |-BinaryOperator 0x12582b168 <line:26:6, col:37> 'int' '!='
|   | | |-CallExpr 0x12582b090 <col:6, col:19> 'int'
|   | | | |-ImplicitCastExpr 0x12582b078 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12582b038 <col:6> 'int ()' Function 0x12582af80 'S_ISDIR' 'int ()'
|   | | | `-ImplicitCastExpr 0x12582b0b8 <col:14> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12582b058 <col:14> 'unsigned int' lvalue Var 0x125826af8 'mode1' 'unsigned int'
|   | | `-CallExpr 0x12582b128 <col:24, col:37> 'int'
|   | |   |-ImplicitCastExpr 0x12582b110 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12582b0d0 <col:24> 'int ()' Function 0x12582af80 'S_ISDIR' 'int ()'
|   | |   `-ImplicitCastExpr 0x12582b150 <col:32> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12582b0f0 <col:32> 'unsigned int' lvalue Var 0x125826b78 'mode2' 'unsigned int'
|   | `-CompoundStmt 0x12582b4e8 <col:40, line:30:2>
|   |   |-CallExpr 0x12582b260 <line:27:3, col:43> 'int'
|   |   | |-ImplicitCastExpr 0x12582b248 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12582b188 <col:3> 'int ()' Function 0x1258293a8 'show_entry' 'int ()'
|   |   | |-ImplicitCastExpr 0x12582b2a8 <col:14> 'struct diff_options *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12582b1a8 <col:14> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   |   | |-ImplicitCastExpr 0x12582b2c0 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x12582b1c8 <col:19> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x12582b2d8 <col:26> 'struct tree_desc *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12582b1e8 <col:26> 'struct tree_desc *' lvalue ParmVar 0x12580e248 't1' 'struct tree_desc *'
|   |   | |-ImplicitCastExpr 0x12582b2f0 <col:30> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12582b208 <col:30> 'const char *' lvalue ParmVar 0x125826600 'base' 'const char *'
|   |   | `-ImplicitCastExpr 0x12582b308 <col:36> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12582b228 <col:36> 'int' lvalue ParmVar 0x125826680 'baselen' 'int'
|   |   |-CallExpr 0x12582b3f8 <line:28:3, col:43> 'int'
|   |   | |-ImplicitCastExpr 0x12582b3e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12582b320 <col:3> 'int ()' Function 0x1258293a8 'show_entry' 'int ()'
|   |   | |-ImplicitCastExpr 0x12582b440 <col:14> 'struct diff_options *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12582b340 <col:14> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   |   | |-ImplicitCastExpr 0x12582b458 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x12582b360 <col:19> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x12582b470 <col:26> 'struct tree_desc *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12582b380 <col:26> 'struct tree_desc *' lvalue ParmVar 0x12580e338 't2' 'struct tree_desc *'
|   |   | |-ImplicitCastExpr 0x12582b488 <col:30> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12582b3a0 <col:30> 'const char *' lvalue ParmVar 0x125826600 'base' 'const char *'
|   |   | `-ImplicitCastExpr 0x12582b4a0 <col:36> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12582b3c0 <col:36> 'int' lvalue ParmVar 0x125826680 'baselen' 'int'
|   |   `-ReturnStmt 0x12582b4d8 <line:29:3, col:10>
|   |     `-IntegerLiteral 0x12582b4b8 <col:10> 'int' 0
|   |-IfStmt 0x12582c358 <line:32:2, line:41:2>
|   | |-BinaryOperator 0x12582b718 <line:32:6, col:51> 'int' contains-errors '&&'
|   | | |-CallExpr 0x12582b690 <col:6, col:33> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12582b530 <col:6> 'int ()' Function 0x125829968 'DIFF_OPT_TST' 'int ()'
|   | | | |-DeclRefExpr 0x12582b550 <col:19> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   | | | `-RecoveryExpr 0x12582b670 <col:24> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x12582b6d8 <col:38, col:51> 'int'
|   | |   |-ImplicitCastExpr 0x12582b6c0 <col:38> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12582b5b8 <col:38> 'int ()' Function 0x12582af80 'S_ISDIR' 'int ()'
|   | |   `-ImplicitCastExpr 0x12582b700 <col:46> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12582b5d8 <col:46> 'unsigned int' lvalue Var 0x125826af8 'mode1' 'unsigned int'
|   | `-CompoundStmt 0x12582c318 <col:54, line:41:2>
|   |   |-DeclStmt 0x12582b7b8 <line:33:3, col:13>
|   |   | `-VarDecl 0x12582b750 <col:3, col:7> col:7 used retval 'int'
|   |   |-DeclStmt 0x12582baa0 <line:34:3, col:62>
|   |   | `-VarDecl 0x12582b7e8 <col:3, col:61> col:9 used newbase 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x12582ba88 <col:19, col:61> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x12582b9e8 <col:19, col:61> 'int'
|   |   |       |-ImplicitCastExpr 0x12582b9d0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x12582b930 <col:19> 'int ()' Function 0x12582b878 'malloc_base' 'int ()'
|   |   |       |-ImplicitCastExpr 0x12582ba28 <col:31> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x12582b950 <col:31> 'const char *' lvalue ParmVar 0x125826600 'base' 'const char *'
|   |   |       |-ImplicitCastExpr 0x12582ba40 <col:37> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x12582b970 <col:37> 'int' lvalue ParmVar 0x125826680 'baselen' 'int'
|   |   |       |-ImplicitCastExpr 0x12582ba58 <col:46> 'const char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x12582b990 <col:46> 'const char *' lvalue Var 0x125826c28 'path1' 'const char *'
|   |   |       `-ImplicitCastExpr 0x12582ba70 <col:53> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x12582b9b0 <col:53> 'int' lvalue Var 0x125826f38 'pathlen1' 'int'
|   |   |-IfStmt 0x12582bd28 <line:35:3, line:37:32>
|   |   | |-CallExpr 0x12582bb60 <line:35:7, col:42> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x12582bab8 <col:7> 'int ()' Function 0x125829968 'DIFF_OPT_TST' 'int ()'
|   |   | | |-DeclRefExpr 0x12582bad8 <col:20> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   |   | | `-RecoveryExpr 0x12582bb40 <col:25> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x12582bcd0 <line:36:4, line:37:32> '<dependent type>' contains-errors
|   |   |   |-RecoveryExpr 0x12582bbc8 <line:36:4, col:9> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x12582bb90 <col:4> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   |   |   |-DeclRefExpr 0x12582bbf0 <col:16> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   |   |   |-DeclRefExpr 0x12582bc10 <col:21> 'unsigned int' lvalue Var 0x125826af8 'mode1' 'unsigned int'
|   |   |   |-DeclRefExpr 0x12582bc30 <col:28> 'unsigned int' lvalue Var 0x125826b78 'mode2' 'unsigned int'
|   |   |   |-DeclRefExpr 0x12582bc50 <line:37:9> 'const unsigned char *' lvalue Var 0x125826d88 'sha1' 'const unsigned char *'
|   |   |   |-DeclRefExpr 0x12582bc70 <col:15> 'const unsigned char *' lvalue Var 0x125826e08 'sha2' 'const unsigned char *'
|   |   |   |-DeclRefExpr 0x12582bc90 <col:21> 'const char *' lvalue ParmVar 0x125826600 'base' 'const char *'
|   |   |   `-DeclRefExpr 0x12582bcb0 <col:27> 'const char *' lvalue Var 0x125826c28 'path1' 'const char *'
|   |   |-BinaryOperator 0x12582c010 <line:38:3, col:51> 'int' '='
|   |   | |-DeclRefExpr 0x12582bd48 <col:3> 'int' lvalue Var 0x12582b750 'retval' 'int'
|   |   | `-CallExpr 0x12582bf70 <col:12, col:51> 'int'
|   |   |   |-ImplicitCastExpr 0x12582bf58 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12582beb8 <col:12> 'int ()' Function 0x12582be00 'diff_tree_sha1' 'int ()'
|   |   |   |-ImplicitCastExpr 0x12582bfb0 <col:27> 'const unsigned char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12582bed8 <col:27> 'const unsigned char *' lvalue Var 0x125826d88 'sha1' 'const unsigned char *'
|   |   |   |-ImplicitCastExpr 0x12582bfc8 <col:33> 'const unsigned char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12582bef8 <col:33> 'const unsigned char *' lvalue Var 0x125826e08 'sha2' 'const unsigned char *'
|   |   |   |-ImplicitCastExpr 0x12582bfe0 <col:39> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12582bf18 <col:39> 'char *' lvalue Var 0x12582b7e8 'newbase' 'char *'
|   |   |   `-ImplicitCastExpr 0x12582bff8 <col:48> 'struct diff_options *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12582bf38 <col:48> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   |   |-CallExpr 0x12582c278 <line:39:3, col:15> 'void'
|   |   | |-ImplicitCastExpr 0x12582c260 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12582c1d8 <col:3> 'void (void *)' Function 0x12582c068 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x12582c2b8 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x12582c2a0 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12582c1f8 <col:8> 'char *' lvalue Var 0x12582b7e8 'newbase' 'char *'
|   |   `-ReturnStmt 0x12582c308 <line:40:3, col:10>
|   |     `-ImplicitCastExpr 0x12582c2f0 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12582c2d0 <col:10> 'int' lvalue Var 0x12582b750 'retval' 'int'
|   |-CallExpr 0x12582c4b8 <line:43:2, col:56> '<dependent type>' contains-errors
|   | |-RecoveryExpr 0x12582c3b0 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12582c378 <col:2> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   | |-DeclRefExpr 0x12582c3d8 <col:14> 'struct diff_options *' lvalue ParmVar 0x125826858 'opt' 'struct diff_options *'
|   | |-DeclRefExpr 0x12582c3f8 <col:19> 'unsigned int' lvalue Var 0x125826af8 'mode1' 'unsigned int'
|   | |-DeclRefExpr 0x12582c418 <col:26> 'unsigned int' lvalue Var 0x125826b78 'mode2' 'unsigned int'
|   | |-DeclRefExpr 0x12582c438 <col:33> 'const unsigned char *' lvalue Var 0x125826d88 'sha1' 'const unsigned char *'
|   | |-DeclRefExpr 0x12582c458 <col:39> 'const unsigned char *' lvalue Var 0x125826e08 'sha2' 'const unsigned char *'
|   | |-DeclRefExpr 0x12582c478 <col:45> 'const char *' lvalue ParmVar 0x125826600 'base' 'const char *'
|   | `-DeclRefExpr 0x12582c498 <col:51> 'const char *' lvalue Var 0x125826c28 'path1' 'const char *'
|   `-ReturnStmt 0x12582c530 <line:44:2, col:9>
|     `-IntegerLiteral 0x12582c510 <col:9> 'int' 0
`-FunctionDecl 0x12582c068 <line:39:3> col:3 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12582c168 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12582c110 <<invalid sloc>> Implicit 873
