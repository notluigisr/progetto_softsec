TranslationUnitDecl 0x124055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1240564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124055bd0 '__int128'
|-TypedefDecl 0x124056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124055bf0 'unsigned __int128'
|-TypedefDecl 0x12480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12480bc00 'struct __NSConstantString_tag'
|   `-Record 0x124056580 '__NSConstantString_tag'
|-TypedefDecl 0x12480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124055d90 '__SVInt8_t'
|-TypedefDecl 0x12480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124055db0 '__SVInt16_t'
|-TypedefDecl 0x12480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124055dd0 '__SVInt32_t'
|-TypedefDecl 0x12480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124055df0 '__SVInt64_t'
|-TypedefDecl 0x12480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124055e10 '__SVUint8_t'
|-TypedefDecl 0x12480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124055e30 '__SVUint16_t'
|-TypedefDecl 0x12480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124055e50 '__SVUint32_t'
|-TypedefDecl 0x12480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124055e70 '__SVUint64_t'
|-TypedefDecl 0x12480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124055e90 '__SVFloat16_t'
|-TypedefDecl 0x12480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1240560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1240560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1240560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1240561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1240561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1240561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1240562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1240562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1240562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124056390 '__SVBool_t'
|-TypedefDecl 0x12480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1240563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1240563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1240563f0 '__SVCount_t'
|-TypedefDecl 0x12480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12480dbb0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
|-TypedefDecl 0x12480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12480dbb0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
|-FunctionDecl 0x12480de38 <dataset_diviso_filec/func21073_nonvuln.c:2:1, line:15:11> line:2:12 check_id_allowed 'int (char *, long)' static
| |-ParmVarDecl 0x12480dcd8 <col:29, col:35> col:35 used id 'char *'
| |-ParmVarDecl 0x12480dd58 <col:39, col:44> col:44 used what 'long'
| `-CompoundStmt 0x126809088 <line:3:1, line:15:11>
|   |-IfStmt 0x124827870 <line:4:2, col:95>
|   | |-BinaryOperator 0x124827820 <col:6, col:85> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1248276e8 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x12480df38 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x1248276c8 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x124827800 <col:51, col:85> 'int' '=='
|   | |   |-CallExpr 0x124827750 <col:51, col:80> 'int'
|   | |   | |-ImplicitCastExpr 0x124827738 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x124827480 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x1248277a0 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124827788 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1248274a0 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x1248277d0 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x1248277b8 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x124827500 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x1248277e8 <col:79> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x124827520 <col:79> 'int' 7
|   | |   `-IntegerLiteral 0x124827668 <col:85> 'int' 0
|   | `-ReturnStmt 0x124827860 <col:88, col:95>
|   |   `-IntegerLiteral 0x124827840 <col:95> 'int' 1
|   |-IfStmt 0x124827c68 <line:5:2, col:94>
|   | |-BinaryOperator 0x124827c18 <col:6, col:84> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x124827ae0 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x124827890 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x124827ac0 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x124827bf8 <col:51, col:84> 'int' '=='
|   | |   |-CallExpr 0x124827b48 <col:51, col:79> 'int'
|   | |   | |-ImplicitCastExpr 0x124827b30 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1248278e8 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x124827b98 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124827b80 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x124827908 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x124827bc8 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124827bb0 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x124827928 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x124827be0 <col:78> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x124827948 <col:78> 'int' 8
|   | |   `-IntegerLiteral 0x124827a60 <col:84> 'int' 0
|   | `-ReturnStmt 0x124827c58 <col:87, col:94>
|   |   `-IntegerLiteral 0x124827c38 <col:94> 'int' 1
|   |-IfStmt 0x124828060 <line:6:2, col:91>
|   | |-BinaryOperator 0x124828010 <col:6, col:81> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x124827ed8 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x124827c88 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x124827eb8 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x124827ff0 <col:51, col:81> 'int' '=='
|   | |   |-CallExpr 0x124827f40 <col:51, col:76> 'int'
|   | |   | |-ImplicitCastExpr 0x124827f28 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x124827ce0 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x124827f90 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124827f78 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x124827d00 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x124827fc0 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124827fa8 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x124827d20 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x124827fd8 <col:74> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x124827d40 <col:74> 'int' 11
|   | |   `-IntegerLiteral 0x124827e58 <col:81> 'int' 0
|   | `-ReturnStmt 0x124828050 <col:84, col:91>
|   |   `-IntegerLiteral 0x124828030 <col:91> 'int' 1
|   |-IfStmt 0x124122e68 <line:7:2, col:95>
|   | |-BinaryOperator 0x124122e18 <col:6, col:85> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x124122ce0 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x124828080 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x124122cc0 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x124122df8 <col:51, col:85> 'int' '=='
|   | |   |-CallExpr 0x124122d48 <col:51, col:80> 'int'
|   | |   | |-ImplicitCastExpr 0x124122d30 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1248280d8 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x124122d98 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124122d80 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1248280f8 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x124122dc8 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124122db0 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x124828118 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x124122de0 <col:79> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x124828138 <col:79> 'int' 7
|   | |   `-IntegerLiteral 0x124122c60 <col:85> 'int' 0
|   | `-ReturnStmt 0x124122e58 <col:88, col:95>
|   |   `-IntegerLiteral 0x124122e38 <col:95> 'int' 1
|   |-IfStmt 0x124123260 <line:8:2, col:97>
|   | |-BinaryOperator 0x124123210 <col:6, col:87> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1241230d8 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x124122e88 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x1241230b8 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1241231f0 <col:51, col:87> 'int' '=='
|   | |   |-CallExpr 0x124123140 <col:51, col:82> 'int'
|   | |   | |-ImplicitCastExpr 0x124123128 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x124122ee0 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x124123190 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124123178 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x124122f00 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x1241231c0 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x1241231a8 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x124122f20 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x1241231d8 <col:81> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x124122f40 <col:81> 'int' 5
|   | |   `-IntegerLiteral 0x124123058 <col:87> 'int' 0
|   | `-ReturnStmt 0x124123250 <col:90, col:97>
|   |   `-IntegerLiteral 0x124123230 <col:97> 'int' 1
|   |-IfStmt 0x124123658 <line:9:2, col:93>
|   | |-BinaryOperator 0x124123608 <col:6, col:83> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1241234d0 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x124123280 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x1241234b0 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1241235e8 <col:51, col:83> 'int' '=='
|   | |   |-CallExpr 0x124123538 <col:51, col:78> 'int'
|   | |   | |-ImplicitCastExpr 0x124123520 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1241232d8 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x124123588 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124123570 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1241232f8 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x1241235b8 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x1241235a0 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x124123318 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x1241235d0 <col:77> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x124123338 <col:77> 'int' 9
|   | |   `-IntegerLiteral 0x124123450 <col:83> 'int' 0
|   | `-ReturnStmt 0x124123648 <col:86, col:93>
|   |   `-IntegerLiteral 0x124123628 <col:93> 'int' 1
|   |-IfStmt 0x124123a50 <line:10:2, col:92>
|   | |-BinaryOperator 0x124123a00 <col:6, col:82> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1241238c8 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x124123678 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x1241238a8 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1241239e0 <col:51, col:82> 'int' '=='
|   | |   |-CallExpr 0x124123930 <col:51, col:77> 'int'
|   | |   | |-ImplicitCastExpr 0x124123918 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1241236d0 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x124123980 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124123968 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1241236f0 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x1241239b0 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x124123998 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x124123710 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x1241239c8 <col:75> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x124123730 <col:75> 'int' 10
|   | |   `-IntegerLiteral 0x124123848 <col:82> 'int' 0
|   | `-ReturnStmt 0x124123a40 <col:85, col:92>
|   |   `-IntegerLiteral 0x124123a20 <col:92> 'int' 1
|   |-IfStmt 0x126808450 <line:11:2, col:95>
|   | |-BinaryOperator 0x126808400 <col:6, col:85> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1268082c8 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x124123a70 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x1268082a8 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1268083e0 <col:51, col:85> 'int' '=='
|   | |   |-CallExpr 0x126808330 <col:51, col:80> 'int'
|   | |   | |-ImplicitCastExpr 0x126808318 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x124123ac8 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x126808380 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x126808368 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x124123ae8 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x1268083b0 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x126808398 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x124123b08 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x1268083c8 <col:79> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x124123b28 <col:79> 'int' 7
|   | |   `-IntegerLiteral 0x126808248 <col:85> 'int' 0
|   | `-ReturnStmt 0x126808440 <col:88, col:95>
|   |   `-IntegerLiteral 0x126808420 <col:95> 'int' 1
|   |-IfStmt 0x126808848 <line:12:2, col:95>
|   | |-BinaryOperator 0x1268087f8 <col:6, col:85> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1268086c0 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x126808470 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x1268086a0 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1268087d8 <col:51, col:85> 'int' '=='
|   | |   |-CallExpr 0x126808728 <col:51, col:80> 'int'
|   | |   | |-ImplicitCastExpr 0x126808710 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1268084c8 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x126808778 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x126808760 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1268084e8 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x1268087a8 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x126808790 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x126808508 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x1268087c0 <col:79> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x126808528 <col:79> 'int' 7
|   | |   `-IntegerLiteral 0x126808640 <col:85> 'int' 0
|   | `-ReturnStmt 0x126808838 <col:88, col:95>
|   |   `-IntegerLiteral 0x126808818 <col:95> 'int' 1
|   |-IfStmt 0x126808c40 <line:13:2, col:94>
|   | |-BinaryOperator 0x126808bf0 <col:6, col:84> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x126808ab8 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x126808868 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x126808a98 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x126808bd0 <col:51, col:84> 'int' '=='
|   | |   |-CallExpr 0x126808b20 <col:51, col:79> 'int'
|   | |   | |-ImplicitCastExpr 0x126808b08 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1268088c0 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x126808b70 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x126808b58 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1268088e0 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x126808ba0 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x126808b88 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x126808900 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x126808bb8 <col:78> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x126808920 <col:78> 'int' 8
|   | |   `-IntegerLiteral 0x126808a38 <col:84> 'int' 0
|   | `-ReturnStmt 0x126808c30 <col:87, col:94>
|   |   `-IntegerLiteral 0x126808c10 <col:94> 'int' 1
|   |-IfStmt 0x126809038 <line:14:2, col:99>
|   | |-BinaryOperator 0x126808fe8 <col:6, col:89> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x126808eb0 <col:6, col:13> '<dependent type>' contains-errors '&'
|   | | | |-DeclRefExpr 0x126808c60 <col:6> 'long' lvalue ParmVar 0x12480dd58 'what' 'long'
|   | | | `-RecoveryExpr 0x126808e90 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x126808fc8 <col:51, col:89> 'int' '=='
|   | |   |-CallExpr 0x126808f18 <col:51, col:84> 'int'
|   | |   | |-ImplicitCastExpr 0x126808f00 <col:51> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x126808cb8 <col:51> 'int (const char *, const char *, unsigned long)' Function 0x124827230 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x126808f68 <col:63> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x126808f50 <col:63> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x126808cd8 <col:63> 'char *' lvalue ParmVar 0x12480dcd8 'id' 'char *'
|   | |   | |-ImplicitCastExpr 0x126808f98 <col:67> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x126808f80 <col:67> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x126808cf8 <col:67> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x126808fb0 <col:83> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x126808d18 <col:83> 'int' 3
|   | |   `-IntegerLiteral 0x126808e30 <col:89> 'int' 0
|   | `-ReturnStmt 0x126809028 <col:92, col:99>
|   |   `-IntegerLiteral 0x126809008 <col:99> 'int' 1
|   `-ReturnStmt 0x126809078 <line:15:2, col:9>
|     `-IntegerLiteral 0x126809058 <col:9> 'int' 0
`-FunctionDecl 0x124827230 <line:4:51> col:51 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x124827330 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x124827398 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x124827400 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1248272d8 <<invalid sloc>> Implicit 958
