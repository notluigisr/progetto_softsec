TranslationUnitDecl 0x11f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f055bd0 '__int128'
|-TypedefDecl 0x11f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f055bf0 'unsigned __int128'
|-TypedefDecl 0x11f126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f126000 'struct __NSConstantString_tag'
|   `-Record 0x11f056580 '__NSConstantString_tag'
|-TypedefDecl 0x11f126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f055d90 '__SVInt8_t'
|-TypedefDecl 0x11f126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f055db0 '__SVInt16_t'
|-TypedefDecl 0x11f126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f055dd0 '__SVInt32_t'
|-TypedefDecl 0x11f1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f055df0 '__SVInt64_t'
|-TypedefDecl 0x11f126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f055e10 '__SVUint8_t'
|-TypedefDecl 0x11f1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f055e30 '__SVUint16_t'
|-TypedefDecl 0x11f126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f055e50 '__SVUint32_t'
|-TypedefDecl 0x11f126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f055e70 '__SVUint64_t'
|-TypedefDecl 0x11f1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f055e90 '__SVFloat16_t'
|-TypedefDecl 0x11f126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f056390 '__SVBool_t'
|-TypedefDecl 0x11f127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f0563f0 '__SVCount_t'
|-TypedefDecl 0x11f127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
|-TypedefDecl 0x11f128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
`-FunctionDecl 0x11f128318 <dataset_diviso_filec/func3476_vuln.c:1:1, line:31:1> line:1:12 invalid cmv_process_header 'int (int *, const int *, const int *)' static
  |-ParmVarDecl 0x11f128128 <col:31, col:43> col:43 referenced invalid s 'int *'
  |-ParmVarDecl 0x11f1281a8 <col:46, col:61> col:61 referenced invalid buf 'const int *'
  |-ParmVarDecl 0x11f128228 <col:66, col:81> col:81 invalid buf_end 'const int *'
  `-CompoundStmt 0x11f809790 <line:2:1, line:31:1>
    |-DeclStmt 0x11f128688 <line:3:5, col:42>
    | |-VarDecl 0x11f1283f0 <col:5, col:9> col:9 used pal_start 'int'
    | |-VarDecl 0x11f128470 <col:5, col:20> col:20 used pal_count 'int'
    | |-VarDecl 0x11f1284f0 <col:5, col:31> col:31 used i 'int'
    | |-VarDecl 0x11f128570 <col:5, col:34> col:34 used ret 'int'
    | `-VarDecl 0x11f1285f0 <col:5, col:39> col:39 used fps 'int'
    |-IfStmt 0x11f141ab8 <line:5:5, line:8:5>
    | |-BinaryOperator 0x11f128720 <line:5:8, col:24> 'int' contains-errors '<'
    | | |-BinaryOperator 0x11f1286e0 <col:8, col:18> '<dependent type>' contains-errors '-'
    | | | |-RecoveryExpr 0x11f1286a0 <col:8> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x11f1286c0 <col:18> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11f128700 <col:24> 'int' 16
    | `-CompoundStmt 0x11f141a98 <col:28, line:8:5>
    |   |-CallExpr 0x11f141a18 <line:6:9, col:47> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11f1418b8 <col:9> 'int ()' Function 0x11f141800 'av_log' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x11f1418f8 <col:16, col:19> '<dependent type>' contains-errors lvalue ->avctx
    |   | | `-RecoveryExpr 0x11f1418d8 <col:16> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x11f1419f8 <col:26> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x11f1419a0 <col:42> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x11f141a88 <line:7:9, col:16>
    |     `-RecoveryExpr 0x11f141a68 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x11f141d20 <line:10:5, col:32> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f141b20 <col:5, col:8> '<dependent type>' contains-errors lvalue ->width
    | | `-RecoveryExpr 0x11f141af8 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f141ad8 <col:5> 'int *' lvalue ParmVar 0x11f128128 's' 'int *'
    | `-CallExpr 0x11f141cf8 <col:17, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f141c48 <col:17> 'int ()' Function 0x11f141b90 'AV_RL16' 'int ()'
    |   `-UnaryOperator 0x11f141ce0 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x11f141cc0 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x11f141ca8 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x11f141c68 <col:26> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x11f141c88 <col:30> 'int' 4
    |-BinaryOperator 0x11f141ea8 <line:11:5, col:32> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f141d88 <col:5, col:8> '<dependent type>' contains-errors lvalue ->height
    | | `-RecoveryExpr 0x11f141d60 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f141d40 <col:5> 'int *' lvalue ParmVar 0x11f128128 's' 'int *'
    | `-CallExpr 0x11f141e80 <col:17, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f141dd0 <col:17> 'int ()' Function 0x11f141b90 'AV_RL16' 'int ()'
    |   `-UnaryOperator 0x11f141e68 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x11f141e48 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x11f141e30 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x11f141df0 <col:26> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x11f141e10 <col:30> 'int' 6
    |-BinaryOperator 0x11f142158 <line:13:5, col:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x11f141ec8 <col:5> 'int' lvalue Var 0x11f128570 'ret' 'int'
    | `-CallExpr 0x11f142120 <col:11, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f141fc8 <col:11> 'int ()' Function 0x11f141f10 'ff_set_dimensions' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x11f142008 <col:29, col:32> '<dependent type>' contains-errors lvalue ->avctx
    |   | `-RecoveryExpr 0x11f141fe8 <col:29> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x11f142070 <col:39, col:42> '<dependent type>' contains-errors lvalue ->width
    |   | `-RecoveryExpr 0x11f142050 <col:39> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x11f1420d8 <col:49, col:52> '<dependent type>' contains-errors lvalue ->height
    |     `-RecoveryExpr 0x11f1420b8 <col:49> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f142238 <line:14:5, line:15:16>
    | |-BinaryOperator 0x11f1421d0 <line:14:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x11f1421b8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11f142178 <col:9> 'int' lvalue Var 0x11f128570 'ret' 'int'
    | | `-IntegerLiteral 0x11f142198 <col:15> 'int' 0
    | `-ReturnStmt 0x11f142228 <line:15:9, col:16>
    |   `-ImplicitCastExpr 0x11f142210 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x11f1421f0 <col:16> 'int' lvalue Var 0x11f128570 'ret' 'int'
    |-BinaryOperator 0x11f142350 <line:17:5, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x11f142258 <col:5> 'int' lvalue Var 0x11f1285f0 'fps' 'int'
    | `-CallExpr 0x11f142328 <col:11, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f142278 <col:11> 'int ()' Function 0x11f141b90 'AV_RL16' 'int ()'
    |   `-UnaryOperator 0x11f142310 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x11f1422f0 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x11f1422d8 <col:20> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x11f142298 <col:20> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x11f1422b8 <col:24> 'int' 10
    |-BinaryOperator 0x11f1425d0 <line:21:5, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x11f1424d8 <col:5> 'int' lvalue Var 0x11f1283f0 'pal_start' 'int'
    | `-CallExpr 0x11f1425a8 <col:17, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f1424f8 <col:17> 'int ()' Function 0x11f141b90 'AV_RL16' 'int ()'
    |   `-UnaryOperator 0x11f142590 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x11f142570 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x11f142558 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x11f142518 <col:26> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x11f142538 <col:30> 'int' 12
    |-BinaryOperator 0x11f1426e8 <line:22:5, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x11f1425f0 <col:5> 'int' lvalue Var 0x11f128470 'pal_count' 'int'
    | `-CallExpr 0x11f1426c0 <col:17, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f142610 <col:17> 'int ()' Function 0x11f141b90 'AV_RL16' 'int ()'
    |   `-UnaryOperator 0x11f1426a8 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x11f142688 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x11f142670 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x11f142630 <col:26> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x11f142650 <col:30> 'int' 14
    |-CompoundAssignOperator 0x11f142770 <line:24:5, col:12> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x11f142728 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11f142708 <col:5> 'const int *' lvalue ParmVar 0x11f1281a8 'buf' 'const int *'
    | `-IntegerLiteral 0x11f142750 <col:12> 'int' 16
    |-ForStmt 0x11f809728 <line:25:5, line:28:5>
    | |-BinaryOperator 0x11f809000 <line:25:10, col:12> 'int' '='
    | | |-DeclRefExpr 0x11f1427a0 <col:10> 'int' lvalue Var 0x11f1284f0 'i' 'int'
    | | `-ImplicitCastExpr 0x11f1427e0 <col:12> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11f1427c0 <col:12> 'int' lvalue Var 0x11f1283f0 'pal_start' 'int'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11f8093b0 <col:23, col:86> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x11f809390 <col:23, col:50> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x11f809330 <col:23, col:35> 'int' '<'
    | | | | |-ImplicitCastExpr 0x11f809318 <col:23> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x11f809020 <col:23> 'int' lvalue Var 0x11f1284f0 'i' 'int'
    | | | | `-BinaryOperator 0x11f8092f8 <col:25, col:35> 'int' '+'
    | | | |   |-ImplicitCastExpr 0x11f8092c8 <col:25> 'int' <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x11f809040 <col:25> 'int' lvalue Var 0x11f1283f0 'pal_start' 'int'
    | | | |   `-ImplicitCastExpr 0x11f8092e0 <col:35> 'int' <LValueToRValue>
    | | | |     `-DeclRefExpr 0x11f809060 <col:35> 'int' lvalue Var 0x11f128470 'pal_count' 'int'
    | | | `-BinaryOperator 0x11f809370 <col:48, col:50> 'int' contains-errors '<'
    | | |   |-DeclRefExpr 0x11f809108 <col:48> 'int' lvalue Var 0x11f1284f0 'i' 'int'
    | | |   `-RecoveryExpr 0x11f809350 <col:50> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x11f809200 <col:69, col:86> 'int' contains-errors '>='
    | |   |-BinaryOperator 0x11f8091c0 <col:69, col:79> '<dependent type>' contains-errors '-'
    | |   | |-RecoveryExpr 0x11f809180 <col:69> '<dependent type>' contains-errors lvalue
    | |   | `-RecoveryExpr 0x11f8091a0 <col:79> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x11f8091e0 <col:86> 'int' 3
    | |-UnaryOperator 0x11f8093f0 <col:89, col:90> 'int' postfix '++'
    | | `-DeclRefExpr 0x11f8093d0 <col:89> 'int' lvalue Var 0x11f1284f0 'i' 'int'
    | `-CompoundStmt 0x11f809708 <col:94, line:28:5>
    |   |-BinaryOperator 0x11f809650 <line:26:9, col:36> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x11f8094e8 <col:9, col:21> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x11f8094b8 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x11f809450 <col:9, col:12> '<dependent type>' contains-errors lvalue ->palette
    |   | | |   `-RecoveryExpr 0x11f809428 <col:9> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x11f809408 <col:9> 'int *' lvalue ParmVar 0x11f128128 's' 'int *'
    |   | | `-ImplicitCastExpr 0x11f8094d0 <col:20> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x11f809498 <col:20> 'int' lvalue Var 0x11f1284f0 'i' 'int'
    |   | `-CallExpr 0x11f809628 <col:25, col:36> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11f8095e8 <col:25> 'int ()' Function 0x11f809530 'AV_RB24' 'int ()'
    |   |   `-RecoveryExpr 0x11f809608 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CompoundAssignOperator 0x11f8096d8 <line:27:9, col:16> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x11f809690 <col:9> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x11f809670 <col:9> 'const int *' lvalue ParmVar 0x11f1281a8 'buf' 'const int *'
    |     `-IntegerLiteral 0x11f8096b8 <col:16> 'int' 3
    `-ReturnStmt 0x11f809780 <line:30:5, col:12>
      `-IntegerLiteral 0x11f809760 <col:12> 'int' 0
