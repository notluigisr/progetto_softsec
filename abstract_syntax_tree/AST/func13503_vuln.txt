TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x12380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12380bc00 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x12380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x12380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x12380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x12380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x12380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x12380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x12380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x12380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x12380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x12380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x12380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x12380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x12380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-FunctionDecl 0x12380df28 <dataset_diviso_filec/func13503_vuln.c:1:1, line:67:1> line:1:5 main 'int (int, char **)'
| |-ParmVarDecl 0x12380dcd8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x12380de00 <col:20, col:31> col:26 used argv 'char **'
| `-CompoundStmt 0x123830750 <line:2:1, line:67:1>
|   |-DeclStmt 0x12380e128 <line:5:5, col:27>
|   | `-VarDecl 0x12380e088 <col:5, col:23> col:11 used plist_out 'char *' cinit
|   |   `-RecoveryExpr 0x12380e108 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12380e1e0 <line:7:5, col:22>
|   | `-VarDecl 0x12380e158 <col:5, col:21> col:9 used read_size 'int' cinit
|   |   `-IntegerLiteral 0x12380e1c0 <col:21> 'int' 0
|   |-DeclStmt 0x12380e2b0 <line:8:5, col:30>
|   | `-VarDecl 0x12380e210 <col:5, col:26> col:11 used plist_entire 'char *' cinit
|   |   `-RecoveryExpr 0x12380e290 <col:26> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x123827ea8 <line:9:5, col:26>
|   | |-RecordDecl 0x12380e2c8 <col:5, col:12> col:12 struct stat
|   | `-VarDecl 0x123827a00 <col:5, col:17> col:17 invalid filestats 'struct stat'
|   |-IfStmt 0x123828398 <line:12:5, line:16:5>
|   | |-UnaryOperator 0x123828178 <line:12:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x123828160 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x123828140 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x123828378 <line:13:5, line:16:5>
|   |   |-CallExpr 0x1238282e8 <line:14:9, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x1238282d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x123828270 <col:9> 'int ()' Function 0x1238281b8 'print_usage' 'int ()'
|   |   | |-ImplicitCastExpr 0x123828318 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x123828290 <col:21> 'int' lvalue ParmVar 0x12380dcd8 'argc' 'int'
|   |   | `-ImplicitCastExpr 0x123828330 <col:27> 'char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1238282b0 <col:27> 'char **' lvalue ParmVar 0x12380de00 'argv' 'char **'
|   |   `-ReturnStmt 0x123828368 <line:15:9, col:16>
|   |     `-IntegerLiteral 0x123828348 <col:16> 'int' 0
|   |-IfStmt 0x123828920 <line:20:5, line:23:5>
|   | |-UnaryOperator 0x123828630 <line:20:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x123828618 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1238285f8 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x123828900 <col:18, line:23:5>
|   |   |-CallExpr 0x1238288a8 <line:21:9, col:21> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1238287f8 <col:9> 'void (void *)' Function 0x123828688 'free' 'void (void *)'
|   |   | `-RecoveryExpr 0x123828870 <col:14> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x1238288f0 <line:22:9, col:16>
|   |     `-IntegerLiteral 0x1238288d0 <col:16> 'int' 1
|   |-BinaryOperator 0x123829ea8 <line:26:5, col:74> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x123829b10 <col:5> 'char *' contains-errors lvalue Var 0x12380e210 'plist_entire' 'char *'
|   | `-CStyleCastExpr 0x123829e80 <col:20, col:74> 'char *' contains-errors <Dependent>
|   |   `-CallExpr 0x123829e40 <col:29, col:74> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x123829d08 <col:29> 'void *(unsigned long)' Function 0x123829b68 'malloc' 'void *(unsigned long)'
|   |     `-BinaryOperator 0x123829e20 <col:36, col:73> '<dependent type>' contains-errors '*'
|   |       |-UnaryExprOrTypeTraitExpr 0x123829d38 <col:36, col:47> 'unsigned long' sizeof 'char'
|   |       `-ParenExpr 0x123829e00 <col:51, col:73> '<dependent type>' contains-errors
|   |         `-BinaryOperator 0x123829de0 <col:52, col:72> '<dependent type>' contains-errors '+'
|   |           |-CXXDependentScopeMemberExpr 0x123829d78 <col:52, col:62> '<dependent type>' contains-errors lvalue .st_size
|   |           | `-RecoveryExpr 0x123829d58 <col:52> '<dependent type>' contains-errors lvalue
|   |           `-IntegerLiteral 0x123829dc0 <col:72> 'int' 1
|   |-IfStmt 0x12382fd68 <line:31:5, line:40:5> has_else
|   | |-BinaryOperator 0x12382a638 <line:31:9, col:43> 'int' contains-errors '=='
|   | | |-CallExpr 0x12382a568 <col:9, col:38> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x12382a550 <col:9> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12382a468 <col:9> 'int (const void *, const void *, unsigned long)' Function 0x12382a218 'memcmp' 'int (const void *, const void *, unsigned long)'
|   | | | |-ImplicitCastExpr 0x12382a5b8 <col:16> 'const void *' contains-errors <BitCast>
|   | | | | `-ImplicitCastExpr 0x12382a5a0 <col:16> 'char *' contains-errors <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x12382a488 <col:16> 'char *' contains-errors lvalue Var 0x12380e210 'plist_entire' 'char *'
|   | | | |-ImplicitCastExpr 0x12382a5e8 <col:30> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x12382a5d0 <col:30> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x12382a4a8 <col:30> 'char[4]' lvalue "STR"
|   | | | `-ImplicitCastExpr 0x12382a600 <col:37> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x12382a4c8 <col:37> 'int' 8
|   | | `-IntegerLiteral 0x12382a618 <col:43> 'int' 0
|   | |-CompoundStmt 0x12382a8d0 <line:32:5, line:35:5>
|   | `-CompoundStmt 0x12382fd58 <line:37:5, line:40:5>
|   |-CallExpr 0x12382ff38 <line:42:5, col:22> 'void' contains-errors
|   | |-ImplicitCastExpr 0x12382ff20 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12382fe98 <col:5> 'void (void *)' Function 0x123828688 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x12382ff78 <col:10> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x12382ff60 <col:10> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x12382feb8 <col:10> 'char *' contains-errors lvalue Var 0x12380e210 'plist_entire' 'char *'
|   |-IfStmt 0x1238306d0 <line:44:5, line:63:21> has_else
|   | |-ImplicitCastExpr 0x12382ffb0 <line:44:9> 'char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x12382ff90 <col:9> 'char *' contains-errors lvalue Var 0x12380e088 'plist_out' 'char *'
|   | |-CompoundStmt 0x1238303c8 <line:45:5, line:61:5>
|   | | |-IfStmt 0x1238302d0 <line:46:9, line:58:13> has_else
|   | | | |-RecoveryExpr 0x12382ffc8 <line:46:13, col:34> '_Bool' contains-errors
|   | | | |-CompoundStmt 0x123830240 <line:47:9, line:55:9>
|   | | | | `-IfStmt 0x1238300b0 <line:49:13, line:52:13>
|   | | | |   |-RecoveryExpr 0x123830028 <line:49:17, col:18> '_Bool' contains-errors
|   | | | |   `-CompoundStmt 0x123830098 <col:26, line:52:13>
|   | | | |     `-ReturnStmt 0x123830088 <line:51:17, col:24>
|   | | | |       `-IntegerLiteral 0x123830068 <col:24> 'int' 1
|   | | | `-NullStmt 0x1238302c8 <line:58:13>
|   | | `-CallExpr 0x123830370 <line:60:9, col:23> 'void' contains-errors
|   | |   |-ImplicitCastExpr 0x123830358 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x123830300 <col:9> 'void (void *)' Function 0x123828688 'free' 'void (void *)'
|   | |   `-ImplicitCastExpr 0x1238303b0 <col:14> 'void *' contains-errors <BitCast>
|   | |     `-ImplicitCastExpr 0x123830398 <col:14> 'char *' contains-errors <LValueToRValue>
|   | |       `-DeclRefExpr 0x123830320 <col:14> 'char *' contains-errors lvalue Var 0x12380e088 'plist_out' 'char *'
|   | `-CallExpr 0x123830678 <line:63:9, col:21> 'int'
|   |   |-ImplicitCastExpr 0x123830660 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1238305d8 <col:9> 'int (const char *, ...)' Function 0x123830430 'printf' 'int (const char *, ...)'
|   |   `-ImplicitCastExpr 0x1238306b8 <col:16> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1238306a0 <col:16> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1238305f8 <col:16> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x123830740 <line:66:5, col:12>
|     `-IntegerLiteral 0x123830720 <col:12> 'int' 0
|-FunctionDecl 0x123828688 <line:21:9> col:9 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x123828788 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x123828730 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x123829b68 <line:26:29> col:29 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x123829c68 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x123829c10 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x123829cd8 <col:29> Implicit 1
|-FunctionDecl 0x12382a218 <line:31:9> col:9 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x12382a318 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12382a380 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12382a3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12382a2c0 <<invalid sloc>> Implicit 883
`-FunctionDecl 0x123830430 <line:63:9> col:9 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x123830530 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x1238304d8 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x1238305a0 <col:9> Implicit printf 1 2
