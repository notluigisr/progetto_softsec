TranslationUnitDecl 0x125855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1258564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125855bd0 '__int128'
|-TypedefDecl 0x125856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125855bf0 'unsigned __int128'
|-TypedefDecl 0x12600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12600bc00 'struct __NSConstantString_tag'
|   `-Record 0x125856580 '__NSConstantString_tag'
|-TypedefDecl 0x12600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125855d90 '__SVInt8_t'
|-TypedefDecl 0x12600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125855db0 '__SVInt16_t'
|-TypedefDecl 0x12600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125855dd0 '__SVInt32_t'
|-TypedefDecl 0x12600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125855df0 '__SVInt64_t'
|-TypedefDecl 0x12600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125855e10 '__SVUint8_t'
|-TypedefDecl 0x12600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125855e30 '__SVUint16_t'
|-TypedefDecl 0x12600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125855e50 '__SVUint32_t'
|-TypedefDecl 0x12600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125855e70 '__SVUint64_t'
|-TypedefDecl 0x12600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125855e90 '__SVFloat16_t'
|-TypedefDecl 0x12600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1258560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1258560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1258560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1258561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1258561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1258561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1258562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1258562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1258562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125856390 '__SVBool_t'
|-TypedefDecl 0x12600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1258563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1258563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1258563f0 '__SVCount_t'
|-TypedefDecl 0x12600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-TypedefDecl 0x12600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
`-FunctionDecl 0x12600dfe8 <dataset_diviso_filec/func24825_vuln.c:1:1, line:61:1> line:1:12 invalid cloop_open 'int (int *, int *, int, int **)' static
  |-ParmVarDecl 0x12600dd28 <col:23, col:41> col:41 referenced invalid bs 'int *'
  |-ParmVarDecl 0x12600dda8 <col:45, col:52> col:52 invalid options 'int *'
  |-ParmVarDecl 0x12600de28 <col:61, col:65> col:65 flags 'int'
  |-ParmVarDecl 0x12600dee0 <line:2:23, col:31> col:31 invalid errp 'int **'
  `-CompoundStmt 0x126029740 <line:3:1, line:61:1>
    |-DeclStmt 0x12600e1b0 <line:6:5, col:12>
    | `-VarDecl 0x12600e148 <col:5, col:9> col:9 used ret 'int'
    |-BinaryOperator 0x12600e278 <line:8:5, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12600e210 <col:5, col:9> '<dependent type>' contains-errors lvalue ->read_only
    | | `-RecoveryExpr 0x12600e1e8 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12600e1c8 <col:5> 'int *' lvalue ParmVar 0x12600dd28 'bs' 'int *'
    | `-IntegerLiteral 0x12600e258 <col:21> 'int' 1
    |-BinaryOperator 0x126027a70 <line:11:5, col:54> 'int' contains-errors '='
    | |-DeclRefExpr 0x12600e298 <col:5> 'int' lvalue Var 0x12600e148 'ret' 'int'
    | `-CallExpr 0x126027a30 <col:11, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126027810 <col:11> 'int ()' Function 0x12600e358 'bdrv_pread' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x126027850 <col:22, col:26> '<dependent type>' contains-errors lvalue ->file
    |   | `-RecoveryExpr 0x126027830 <col:22> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x126027898 <col:32> 'int' 128
    |   |-UnaryOperator 0x126027a18 <col:37, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x1260279d0 <col:38, col:41> '<dependent type>' contains-errors lvalue ->block_size
    |   |   `-RecoveryExpr 0x1260279b0 <col:38> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x126027930 <col:53> 'int' 4
    |-IfStmt 0x126027b68 <line:12:5, line:14:5>
    | |-BinaryOperator 0x126027ae8 <line:12:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x126027ad0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x126027a90 <col:9> 'int' lvalue Var 0x12600e148 'ret' 'int'
    | | `-IntegerLiteral 0x126027ab0 <col:15> 'int' 0
    | `-CompoundStmt 0x126027b50 <col:18, line:14:5>
    |   `-ReturnStmt 0x126027b40 <line:13:9, col:16>
    |     `-ImplicitCastExpr 0x126027b28 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x126027b08 <col:16> 'int' lvalue Var 0x12600e148 'ret' 'int'
    |-BinaryOperator 0x126027fd0 <line:17:5, col:56> 'int' contains-errors '='
    | |-DeclRefExpr 0x126027d10 <col:5> 'int' lvalue Var 0x12600e148 'ret' 'int'
    | `-CallExpr 0x126027f90 <col:11, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126027d30 <col:11> 'int ()' Function 0x12600e358 'bdrv_pread' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x126027d70 <col:22, col:26> '<dependent type>' contains-errors lvalue ->file
    |   | `-RecoveryExpr 0x126027d50 <col:22> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x126027df8 <col:32, col:38> 'int' '+'
    |   | |-IntegerLiteral 0x126027db8 <col:32> 'int' 128
    |   | `-IntegerLiteral 0x126027dd8 <col:38> 'int' 4
    |   |-UnaryOperator 0x126027f78 <col:41, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x126027f30 <col:42, col:45> '<dependent type>' contains-errors lvalue ->n_blocks
    |   |   `-RecoveryExpr 0x126027f10 <col:42> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x126027e90 <col:55> 'int' 4
    |-IfStmt 0x1260280c8 <line:18:5, line:20:5>
    | |-BinaryOperator 0x126028048 <line:18:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x126028030 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x126027ff0 <col:9> 'int' lvalue Var 0x12600e148 'ret' 'int'
    | | `-IntegerLiteral 0x126028010 <col:15> 'int' 0
    | `-CompoundStmt 0x1260280b0 <col:18, line:20:5>
    |   `-ReturnStmt 0x1260280a0 <line:19:9, col:16>
    |     `-ImplicitCastExpr 0x126028088 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x126028068 <col:16> 'int' lvalue Var 0x12600e148 'ret' 'int'
    |-IfStmt 0x126028588 <line:28:5, line:30:5>
    | |-BinaryOperator 0x1260284e8 <line:28:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1260284d0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x126028490 <col:9> 'int' lvalue Var 0x12600e148 'ret' 'int'
    | | `-IntegerLiteral 0x1260284b0 <col:15> 'int' 0
    | `-CompoundStmt 0x126028570 <col:18, line:30:5>
    |   `-GotoStmt 0x126028558 <line:29:9, col:14> 'fail' 0x126028508
    |-IfStmt 0x126029390 <line:45:5, line:48:5>
    | |-RecoveryExpr 0x126029320 <line:45:9, col:37> '_Bool' contains-errors
    | `-CompoundStmt 0x126029378 <col:43, line:48:5>
    |   `-GotoStmt 0x126029360 <line:47:9, col:14> 'fail' 0x126028508
    |-ReturnStmt 0x126029580 <line:54:5, col:12>
    | `-IntegerLiteral 0x126029560 <col:12> 'int' 0
    |-LabelStmt 0x126029698 <line:56:1, col:5> 'fail'
    | `-NullStmt 0x126029690 <col:5>
    `-ReturnStmt 0x126029730 <line:60:5, col:12>
      `-ImplicitCastExpr 0x126029718 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1260296f8 <col:12> 'int' lvalue Var 0x12600e148 'ret' 'int'
