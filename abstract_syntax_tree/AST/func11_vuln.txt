TranslationUnitDecl 0x12c055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c0555d0 '__int128'
|-TypedefDecl 0x12c055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c0555f0 'unsigned __int128'
|-TypedefDecl 0x12d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12c055f80 '__NSConstantString_tag'
|-TypedefDecl 0x12d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c055790 '__SVInt8_t'
|-TypedefDecl 0x12d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c0557b0 '__SVInt16_t'
|-TypedefDecl 0x12d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c0557d0 '__SVInt32_t'
|-TypedefDecl 0x12d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c0557f0 '__SVInt64_t'
|-TypedefDecl 0x12d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c055810 '__SVUint8_t'
|-TypedefDecl 0x12d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c055830 '__SVUint16_t'
|-TypedefDecl 0x12d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c055850 '__SVUint32_t'
|-TypedefDecl 0x12d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c055870 '__SVUint64_t'
|-TypedefDecl 0x12d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c055890 '__SVFloat16_t'
|-TypedefDecl 0x12d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c0558b0 '__SVFloat32_t'
|-TypedefDecl 0x12d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c0558d0 '__SVFloat64_t'
|-TypedefDecl 0x12d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c0558f0 '__SVBfloat16_t'
|-TypedefDecl 0x12d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c055910 '__clang_svint8x2_t'
|-TypedefDecl 0x12d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c055930 '__clang_svint16x2_t'
|-TypedefDecl 0x12d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c055950 '__clang_svint32x2_t'
|-TypedefDecl 0x12d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c055970 '__clang_svint64x2_t'
|-TypedefDecl 0x12d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c0559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c0559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c0559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c055d90 '__SVBool_t'
|-TypedefDecl 0x12d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c055df0 '__SVCount_t'
|-TypedefDecl 0x12d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d00dbb0 'char *'
|   `-BuiltinType 0x12c0550b0 'char'
|-TypedefDecl 0x12d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d00dbb0 'char *'
|   `-BuiltinType 0x12c0550b0 'char'
`-FunctionDecl 0x12d00e038 <dataset_diviso_filec/func11_vuln.c:1:1, line:97:2> line:1:5 invalid ASN1_item_verify 'int (const int *, int *, int *, void *, int *)'
  |-ParmVarDecl 0x12d00dcf0 <col:22, col:39> col:39 invalid it 'const int *'
  |-ParmVarDecl 0x12d00dda8 <col:43, col:55> col:55 invalid a 'int *'
  |-ParmVarDecl 0x12d00de28 <line:2:3, col:20> col:20 invalid signature 'int *'
  |-ParmVarDecl 0x12d00dea8 <col:31, col:37> col:37 used asn 'void *'
  |-ParmVarDecl 0x12d00df28 <col:42, col:52> col:52 invalid pkey 'int *'
  `-CompoundStmt 0x12d029af8 <line:3:2, line:97:2>
    |-DeclStmt 0x12d00e1f8 <line:5:2, col:28>
    | `-VarDecl 0x12d00e158 <col:2, col:24> col:17 used buf_in 'unsigned char *' cinit
    |   `-RecoveryExpr 0x12d00e1d8 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12d00e360 <line:6:2, col:17>
    | |-VarDecl 0x12d00e228 <col:2, col:12> col:6 used ret 'int' cinit
    | | `-UnaryOperator 0x12d00e2b0 <col:11, col:12> 'int' prefix '-'
    | |   `-IntegerLiteral 0x12d00e290 <col:12> 'int' 1
    | `-VarDecl 0x12d00e2e0 <col:2, col:14> col:14 used inl 'int'
    |-DeclStmt 0x12c122e98 <line:8:2, col:18>
    | |-VarDecl 0x12d00e390 <col:2, col:6> col:6 used mdnid 'int'
    | `-VarDecl 0x12c122e18 <col:2, col:13> col:13 used pknid 'int'
    |-IfStmt 0x12c1231b8 <line:10:2, line:14:3>
    | |-UnaryOperator 0x12c122ee8 <line:10:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12c122ed0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12c122eb0 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12c123198 <line:11:3, line:14:3>
    |   |-CallExpr 0x12c123120 <line:12:3, col:63> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12c123060 <col:3> 'int ()' Function 0x12c122fa8 'ASN1err' 'int ()'
    |   | |-RecoveryExpr 0x12c1230e0 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x12c123100 <col:36> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12c123188 <line:13:3, col:11>
    |     `-UnaryOperator 0x12c123170 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x12c123150 <col:11> 'int' 1
    |-CallExpr 0x12c123368 <line:16:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c1232b8 <col:2> 'int ()' Function 0x12c123200 'EVP_MD_CTX_init' 'int ()'
    | `-UnaryOperator 0x12c123350 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12c123330 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c123858 <line:19:2, line:23:3>
    | |-UnaryOperator 0x12c1236c8 <line:19:6, col:68> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12c123690 <col:7, col:68> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12c123470 <col:7> 'int ()' Function 0x12c1233b8 'OBJ_find_sigid_algs' 'int ()'
    | |   |-CallExpr 0x12c1235f8 <col:27, col:51> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x12c123570 <col:27> 'int ()' Function 0x12c1234b8 'OBJ_obj2nid' 'int ()'
    | |   | `-CXXDependentScopeMemberExpr 0x12c1235b0 <col:39, col:42> '<dependent type>' contains-errors lvalue ->algorithm
    | |   |   `-RecoveryExpr 0x12c123590 <col:39> '<dependent type>' contains-errors lvalue
    | |   |-UnaryOperator 0x12c123640 <col:54, col:55> 'int *' prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x12c123620 <col:55> 'int' lvalue Var 0x12d00e390 'mdnid' 'int'
    | |   `-UnaryOperator 0x12c123678 <col:62, col:63> 'int *' prefix '&' cannot overflow
    | |     `-DeclRefExpr 0x12c123658 <col:63> 'int' lvalue Var 0x12c122e18 'pknid' 'int'
    | `-CompoundStmt 0x12c123838 <line:20:3, line:23:3>
    |   |-CallExpr 0x12c1237a0 <line:21:3, col:69> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12c1236e0 <col:3> 'int ()' Function 0x12c122fa8 'ASN1err' 'int ()'
    |   | |-RecoveryExpr 0x12c123760 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x12c123780 <col:35> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12c123820 <line:22:3, col:8> 'err' 0x12c1237d0
    |-IfStmt 0x12d027d40 <line:24:2, line:62:3> has_else
    | |-BinaryOperator 0x12c1238f0 <line:24:6, col:15> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12c123878 <col:6> 'int' lvalue Var 0x12d00e390 'mdnid' 'int'
    | | `-RecoveryExpr 0x12c1238d0 <col:15> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12d027498 <line:25:3, line:37:3>
    | | |-IfStmt 0x12c123bd0 <line:26:3, line:30:4>
    | | | |-BinaryOperator 0x12c123a88 <line:26:7, col:37> 'int' contains-errors '||'
    | | | | |-UnaryOperator 0x12c123990 <col:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | | `-ImplicitCastExpr 0x12c123978 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | | | |   `-CXXDependentScopeMemberExpr 0x12c123930 <col:8, col:14> '<dependent type>' contains-errors lvalue ->ameth
    | | | | |     `-RecoveryExpr 0x12c123910 <col:8> '<dependent type>' contains-errors lvalue
    | | | | `-UnaryOperator 0x12c123a70 <col:23, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | |   `-ImplicitCastExpr 0x12c123a58 <col:24, col:37> '<dependent type>' contains-errors <LValueToRValue>
    | | | |     `-CXXDependentScopeMemberExpr 0x12c123a10 <col:24, col:37> '<dependent type>' contains-errors lvalue ->item_verify
    | | | |       `-CXXDependentScopeMemberExpr 0x12c1239c8 <col:24, col:30> '<dependent type>' contains-errors lvalue ->ameth
    | | | |         `-RecoveryExpr 0x12c1239a8 <col:24> '<dependent type>' contains-errors lvalue
    | | | `-CompoundStmt 0x12c123bb0 <line:27:4, line:30:4>
    | | |   |-CallExpr 0x12c123b68 <line:28:4, col:70> '<dependent type>' contains-errors
    | | |   | |-DeclRefExpr 0x12c123aa8 <col:4> 'int ()' Function 0x12c122fa8 'ASN1err' 'int ()'
    | | |   | |-RecoveryExpr 0x12c123b28 <col:12> '<dependent type>' contains-errors lvalue
    | | |   | `-RecoveryExpr 0x12c123b48 <col:36> '<dependent type>' contains-errors lvalue
    | | |   `-GotoStmt 0x12c123b98 <line:29:4, col:9> 'err' 0x12c1237d0
    | | |-IfStmt 0x12d027400 <line:34:3, line:35:9>
    | | | |-BinaryOperator 0x12c123db8 <line:34:7, col:14> 'int' '!='
    | | | | |-ImplicitCastExpr 0x12c123da0 <col:7> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x12c123d60 <col:7> 'int' lvalue Var 0x12d00e228 'ret' 'int'
    | | | | `-IntegerLiteral 0x12c123d80 <col:14> 'int' 2
    | | | `-GotoStmt 0x12c123dd8 <line:35:4, col:9> 'err' 0x12c1237d0
    | | `-BinaryOperator 0x12d027478 <line:36:3, col:10> 'int' '='
    | |   |-DeclRefExpr 0x12d027420 <col:3> 'int' lvalue Var 0x12d00e228 'ret' 'int'
    | |   `-UnaryOperator 0x12d027460 <col:9, col:10> 'int' prefix '-'
    | |     `-IntegerLiteral 0x12d027440 <col:10> 'int' 1
    | `-CompoundStmt 0x12d027d08 <line:39:3, line:62:3>
    |   |-DeclStmt 0x12d027540 <line:40:3, col:21>
    |   | `-VarDecl 0x12d0274d8 <col:3, col:17> col:17 referenced invalid type 'const int *'
    |   |-BinaryOperator 0x12d027748 <line:41:3, col:33> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12d027578 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12d027558 <col:3> 'const int *' lvalue Var 0x12d0274d8 'type' 'const int *'
    |   | `-CallExpr 0x12d027708 <col:8, col:33> 'int'
    |   |   |-ImplicitCastExpr 0x12d0276f0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12d027680 <col:8> 'int ()' Function 0x12d0275c8 'EVP_get_digestbynid' 'int ()'
    |   |   `-ImplicitCastExpr 0x12d027730 <col:28> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12d0276a0 <col:28> 'int' lvalue Var 0x12d00e390 'mdnid' 'int'
    |   |-IfStmt 0x12d0277f8 <line:42:3, line:46:4>
    |   | |-RecoveryExpr 0x12d027788 <line:42:7, col:15> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12d0277e0 <line:43:4, line:46:4>
    |   |   `-GotoStmt 0x12d0277c8 <line:45:4, col:9> 'err' 0x12c1237d0
    |   |-IfStmt 0x12d027ab0 <line:49:3, line:53:4>
    |   | |-BinaryOperator 0x12d027a40 <line:49:7, col:44> 'int' contains-errors '!='
    |   | | |-CallExpr 0x12d027950 <col:7, col:26> 'int'
    |   | | | |-ImplicitCastExpr 0x12d027938 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | | `-DeclRefExpr 0x12d0278f8 <col:7> 'int ()' Function 0x12d027840 'EVP_PKEY_type' 'int ()'
    |   | | | `-ImplicitCastExpr 0x12d027978 <col:21> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x12d027918 <col:21> 'int' lvalue Var 0x12c122e18 'pknid' 'int'
    |   | | `-CXXDependentScopeMemberExpr 0x12d0279f8 <col:31, col:44> '<dependent type>' contains-errors lvalue ->pkey_id
    |   | |   `-CXXDependentScopeMemberExpr 0x12d0279b0 <col:31, col:37> '<dependent type>' contains-errors lvalue ->ameth
    |   | |     `-RecoveryExpr 0x12d027990 <col:31> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x12d027a98 <line:50:4, line:53:4>
    |   |   `-GotoStmt 0x12d027a80 <line:52:4, col:9> 'err' 0x12c1237d0
    |   `-IfStmt 0x12d027ce8 <line:55:3, line:60:4>
    |     |-RecoveryExpr 0x12d027c10 <line:55:7, col:57> '_Bool' contains-errors
    |     `-CompoundStmt 0x12d027cc8 <line:56:4, line:60:4>
    |       |-BinaryOperator 0x12d027c90 <line:58:4, col:8> 'int' '='
    |       | |-DeclRefExpr 0x12d027c50 <col:4> 'int' lvalue Var 0x12d00e228 'ret' 'int'
    |       | `-IntegerLiteral 0x12d027c70 <col:8> 'int' 0
    |       `-GotoStmt 0x12d027cb0 <line:59:4, col:9> 'err' 0x12c1237d0
    |-BinaryOperator 0x12d027f70 <line:64:2, col:38> 'int' contains-errors '='
    | |-DeclRefExpr 0x12d027d70 <col:2> 'int' lvalue Var 0x12d00e2e0 'inl' 'int'
    | `-CallExpr 0x12d027f38 <col:8, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12d027e70 <col:8> 'int ()' Function 0x12d027db8 'ASN1_item_i2d' 'int ()'
    |   |-DeclRefExpr 0x12d027e90 <col:22> 'void *' lvalue ParmVar 0x12d00dea8 'asn' 'void *'
    |   |-UnaryOperator 0x12d027f00 <col:27, col:28> 'unsigned char **' contains-errors prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x12d027eb0 <col:28> 'unsigned char *' contains-errors lvalue Var 0x12d00e158 'buf_in' 'unsigned char *'
    |   `-RecoveryExpr 0x12d027f18 <col:36> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d028020 <line:66:2, line:70:3>
    | |-RecoveryExpr 0x12d027fb0 <line:66:6, col:16> '_Bool' contains-errors
    | `-CompoundStmt 0x12d028008 <line:67:3, line:70:3>
    |   `-GotoStmt 0x12d027ff0 <line:69:3, col:8> 'err' 0x12c1237d0
    |-CallExpr 0x12d028350 <line:74:2, col:42> 'int' contains-errors
    | |-ImplicitCastExpr 0x12d028338 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d028280 <col:2> 'int ()' Function 0x12d0281c8 'OPENSSL_cleanse' 'int ()'
    | |-ImplicitCastExpr 0x12d028380 <col:18> 'unsigned char *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x12d0282a0 <col:18> 'unsigned char *' contains-errors lvalue Var 0x12d00e158 'buf_in' 'unsigned char *'
    | `-CStyleCastExpr 0x12d028310 <col:25, col:39> 'unsigned int' <IntegralCast>
    |   `-ImplicitCastExpr 0x12d0282f8 <col:39> 'int' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x12d0282c0 <col:39> 'int' lvalue Var 0x12d00e2e0 'inl' 'int'
    |-CallExpr 0x12d029510 <line:75:2, col:21> 'int' contains-errors
    | |-ImplicitCastExpr 0x12d0294f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d0294b8 <col:2> 'int ()' Function 0x12d029400 'OPENSSL_free' 'int ()'
    | `-ImplicitCastExpr 0x12d029538 <col:15> 'unsigned char *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x12d0294d8 <col:15> 'unsigned char *' contains-errors lvalue Var 0x12d00e158 'buf_in' 'unsigned char *'
    |-IfStmt 0x12d0295f0 <line:77:2, line:81:3>
    | |-UnaryOperator 0x12d029588 <line:77:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12d029570 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12d029550 <col:7> 'int' lvalue Var 0x12d00e228 'ret' 'int'
    | `-CompoundStmt 0x12d0295d8 <line:78:3, line:81:3>
    |   `-GotoStmt 0x12d0295c0 <line:80:3, col:8> 'err' 0x12c1237d0
    |-BinaryOperator 0x12d029668 <line:82:2, col:9> 'int' '='
    | |-DeclRefExpr 0x12d029610 <col:2> 'int' lvalue Var 0x12d00e228 'ret' 'int'
    | `-UnaryOperator 0x12d029650 <col:8, col:9> 'int' prefix '-'
    |   `-IntegerLiteral 0x12d029630 <col:9> 'int' 1
    |-IfStmt 0x12d0298e8 <line:84:2, line:90:3>
    | |-RecoveryExpr 0x12d029810 <line:84:6, line:85:34> '_Bool' contains-errors
    | `-CompoundStmt 0x12d0298c8 <line:86:3, line:90:3>
    |   |-BinaryOperator 0x12d029890 <line:88:3, col:7> 'int' '='
    |   | |-DeclRefExpr 0x12d029850 <col:3> 'int' lvalue Var 0x12d00e228 'ret' 'int'
    |   | `-IntegerLiteral 0x12d029870 <col:7> 'int' 0
    |   `-GotoStmt 0x12d0298b0 <line:89:3, col:8> 'err' 0x12c1237d0
    |-BinaryOperator 0x12d029948 <line:93:2, col:6> 'int' '='
    | |-DeclRefExpr 0x12d029908 <col:2> 'int' lvalue Var 0x12d00e228 'ret' 'int'
    | `-IntegerLiteral 0x12d029928 <col:6> 'int' 1
    |-LabelStmt 0x12d029a70 <line:94:1, col:4> 'err'
    | `-NullStmt 0x12d029a68 <col:4>
    `-ReturnStmt 0x12d029ae8 <line:96:2, col:12>
      `-ImplicitCastExpr 0x12d029ad0 <col:8, col:12> 'int' <LValueToRValue>
        `-ParenExpr 0x12d029ab0 <col:8, col:12> 'int' lvalue
          `-DeclRefExpr 0x12d029a90 <col:9> 'int' lvalue Var 0x12d00e228 'ret' 'int'
