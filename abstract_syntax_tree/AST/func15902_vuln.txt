TranslationUnitDecl 0x153855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1538564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x153855bd0 '__int128'
|-TypedefDecl 0x153856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x153855bf0 'unsigned __int128'
|-TypedefDecl 0x15400be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15400bc00 'struct __NSConstantString_tag'
|   `-Record 0x153856580 '__NSConstantString_tag'
|-TypedefDecl 0x15400be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x153855d90 '__SVInt8_t'
|-TypedefDecl 0x15400bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x153855db0 '__SVInt16_t'
|-TypedefDecl 0x15400bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x153855dd0 '__SVInt32_t'
|-TypedefDecl 0x15400bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x153855df0 '__SVInt64_t'
|-TypedefDecl 0x15400c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x153855e10 '__SVUint8_t'
|-TypedefDecl 0x15400c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x153855e30 '__SVUint16_t'
|-TypedefDecl 0x15400c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x153855e50 '__SVUint32_t'
|-TypedefDecl 0x15400c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x153855e70 '__SVUint64_t'
|-TypedefDecl 0x15400c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x153855e90 '__SVFloat16_t'
|-TypedefDecl 0x15400c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x153855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15400c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x153855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15400c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x153855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15400c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x153855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15400c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x153855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15400c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x153855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15400c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x153855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15400c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x153855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15400c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x153855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15400c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x153855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15400c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x153855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15400c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x153856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15400c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x153856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15400c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x153856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15400c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x153856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15400c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x153856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15400c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1538560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15400c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1538560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15400c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1538560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15400c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x153856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15400ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x153856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15400cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x153856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15400cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x153856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15400cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x153856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15400d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1538561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15400d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1538561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15400d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1538561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15400d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x153856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15400d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x153856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15400d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x153856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15400d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x153856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15400d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x153856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15400d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1538562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15400d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1538562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15400d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1538562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15400d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x153856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15400d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x153856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15400d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x153856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15400d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x153856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15400da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x153856390 '__SVBool_t'
|-TypedefDecl 0x15400da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1538563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15400dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1538563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15400db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1538563f0 '__SVCount_t'
|-TypedefDecl 0x15400dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15400dbb0 'char *'
|   `-BuiltinType 0x1538556b0 'char'
|-TypedefDecl 0x15400dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15400dbb0 'char *'
|   `-BuiltinType 0x1538556b0 'char'
|-FunctionDecl 0x15400de58 <dataset_diviso_filec/func15902_vuln.c:1:1, line:44:1> line:1:14 invalid get_pid_environ_val 'char *(int, char *)' static
| |-ParmVarDecl 0x15400dcf0 <col:34, col:40> col:40 invalid pid 'int'
| |-ParmVarDecl 0x15400dd70 <col:44, col:50> col:50 used val 'char *'
| `-CompoundStmt 0x15402b630 <col:54, line:44:1>
|   |-DeclStmt 0x15400e018 <line:2:3, col:17>
|   | `-VarDecl 0x15400dfb0 <col:3, col:16> col:8 used temp 'char[500]'
|   |-DeclStmt 0x15400e0d0 <line:3:3, col:10>
|   | `-VarDecl 0x15400e048 <col:3, col:9> col:7 used i 'int' cinit
|   |   `-IntegerLiteral 0x15400e0b0 <col:9> 'int' 0
|   |-DeclStmt 0x15400e188 <line:4:3, col:16>
|   | `-VarDecl 0x15400e100 <col:3, col:15> col:7 used foundit 'int' cinit
|   |   `-IntegerLiteral 0x15400e168 <col:15> 'int' 0
|   |-CallExpr 0x154027f80 <line:7:3, col:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x154027e88 <col:3> 'int (char *, const char *, ...)' Function 0x154027c70 'sprintf' 'int (char *, const char *, ...)'
|   | |-DeclRefExpr 0x154027ea8 <col:11> 'char[500]' lvalue Var 0x15400dfb0 'temp' 'char[500]'
|   | |-StringLiteral 0x154027f10 <col:16> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x154027f30 <col:22> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x154028310 <line:10:3, line:11:12>
|   | |-BinaryOperator 0x1540282a8 <line:10:6, col:10> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x154028268 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x154028288 <col:10> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x154028300 <line:11:5, col:12>
|   |   `-RecoveryExpr 0x1540282e0 <col:12> '<dependent type>' contains-errors lvalue
|   `-ForStmt 0x15402b5f8 <line:14:3, line:43:3>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     `-CompoundStmt 0x15402b5d0 <line:14:10, line:43:3>
|       |-BinaryOperator 0x154028608 <line:15:5, col:21> 'char' contains-errors '='
|       | |-ArraySubscriptExpr 0x1540285a0 <col:5, col:11> 'char' lvalue
|       | | |-ImplicitCastExpr 0x154028570 <col:5> 'char *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x154028330 <col:5> 'char[500]' lvalue Var 0x15400dfb0 'temp' 'char[500]'
|       | | `-ImplicitCastExpr 0x154028588 <col:10> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x154028350 <col:10> 'int' lvalue Var 0x15400e048 'i' 'int'
|       | `-CallExpr 0x1540285e0 <col:13, col:21> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x1540284a0 <col:13> 'int ()' Function 0x1540283e8 'fgetc' 'int ()'
|       |   `-RecoveryExpr 0x1540285c0 <col:19> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x15402ac70 <line:17:5, line:24:5>
|       | |-RecoveryExpr 0x15402a160 <line:17:8, col:66> '_Bool' contains-errors
|       | `-CompoundStmt 0x15402ac30 <col:68, line:24:5>
|       |   |-DeclStmt 0x15402a200 <line:18:7, col:16>
|       |   | `-VarDecl 0x15402a198 <col:7, col:13> col:13 used ret 'char *'
|       |   |-BinaryOperator 0x15402a2e0 <line:19:7, col:15> 'char' '='
|       |   | |-ArraySubscriptExpr 0x15402a288 <col:7, col:13> 'char' lvalue
|       |   | | |-ImplicitCastExpr 0x15402a258 <col:7> 'char *' <ArrayToPointerDecay>
|       |   | | | `-DeclRefExpr 0x15402a218 <col:7> 'char[500]' lvalue Var 0x15400dfb0 'temp' 'char[500]'
|       |   | | `-ImplicitCastExpr 0x15402a270 <col:12> 'int' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x15402a238 <col:12> 'int' lvalue Var 0x15400e048 'i' 'int'
|       |   | `-ImplicitCastExpr 0x15402a2c8 <col:15> 'char' <IntegralCast>
|       |   |   `-IntegerLiteral 0x15402a2a8 <col:15> 'int' 0
|       |   |-BinaryOperator 0x15402a8a8 <line:20:7, col:33> 'char *' '='
|       |   | |-DeclRefExpr 0x15402a300 <col:7> 'char *' lvalue Var 0x15402a198 'ret' 'char *'
|       |   | `-ImplicitCastExpr 0x15402a890 <col:11, col:33> 'char *' <BitCast>
|       |   |   `-CallExpr 0x15402a868 <col:11, col:33> 'void *'
|       |   |     |-ImplicitCastExpr 0x15402a850 <col:11> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|       |   |     | `-DeclRefExpr 0x15402a4f8 <col:11> 'void *(unsigned long)' Function 0x15402a358 'malloc' 'void *(unsigned long)'
|       |   |     `-BinaryOperator 0x15402a7f8 <col:18, col:31> 'unsigned long' '+'
|       |   |       |-CallExpr 0x15402a768 <col:18, col:29> 'unsigned long'
|       |   |       | |-ImplicitCastExpr 0x15402a750 <col:18> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|       |   |       | | `-DeclRefExpr 0x15402a6c8 <col:18> 'unsigned long (const char *)' Function 0x15402a558 'strlen' 'unsigned long (const char *)'
|       |   |       | `-ImplicitCastExpr 0x15402a7a8 <col:25> 'const char *' <NoOp>
|       |   |       |   `-ImplicitCastExpr 0x15402a790 <col:25> 'char *' <ArrayToPointerDecay>
|       |   |       |     `-DeclRefExpr 0x15402a6e8 <col:25> 'char[500]' lvalue Var 0x15400dfb0 'temp' 'char[500]'
|       |   |       `-ImplicitCastExpr 0x15402a7e0 <col:31> 'unsigned long' <IntegralCast>
|       |   |         `-IntegerLiteral 0x15402a7c0 <col:31> 'int' 10
|       |   |-CallExpr 0x15402a9c8 <line:21:7, col:29> 'int'
|       |   | |-ImplicitCastExpr 0x15402a9b0 <col:7> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x15402a8c8 <col:7> 'int (char *, const char *, ...)' Function 0x154027c70 'sprintf' 'int (char *, const char *, ...)'
|       |   | |-ImplicitCastExpr 0x15402aa00 <col:15> 'char *' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x15402a8e8 <col:15> 'char *' lvalue Var 0x15402a198 'ret' 'char *'
|       |   | |-ImplicitCastExpr 0x15402aa30 <col:19> 'const char *' <NoOp>
|       |   | | `-ImplicitCastExpr 0x15402aa18 <col:19> 'char *' <ArrayToPointerDecay>
|       |   | |   `-StringLiteral 0x15402a908 <col:19> 'char[4]' lvalue "STR"
|       |   | `-ImplicitCastExpr 0x15402aa48 <col:25> 'char *' <ArrayToPointerDecay>
|       |   |   `-DeclRefExpr 0x15402a928 <col:25> 'char[500]' lvalue Var 0x15400dfb0 'temp' 'char[500]'
|       |   |-CallExpr 0x15402abc0 <line:22:7, col:16> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x15402ab40 <col:7> 'int ()' Function 0x15402aa88 'fclose' 'int ()'
|       |   | `-RecoveryExpr 0x15402aba0 <col:14> '<dependent type>' contains-errors lvalue
|       |   `-ReturnStmt 0x15402ac20 <line:23:7, col:14>
|       |     `-ImplicitCastExpr 0x15402ac08 <col:14> 'char *' <LValueToRValue>
|       |       `-DeclRefExpr 0x15402abe8 <col:14> 'char *' lvalue Var 0x15402a198 'ret' 'char *'
|       `-SwitchStmt 0x15402ad50 <line:26:5, line:42:5>
|         |-ImplicitCastExpr 0x15402ad38 <line:26:12, col:18> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x15402ad20 <col:12, col:18> 'char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x15402ad00 <col:12, col:18> 'char' lvalue
|         |     |-ImplicitCastExpr 0x15402acd0 <col:12> 'char *' <ArrayToPointerDecay>
|         |     | `-DeclRefExpr 0x15402ac90 <col:12> 'char[500]' lvalue Var 0x15400dfb0 'temp' 'char[500]'
|         |     `-ImplicitCastExpr 0x15402ace8 <col:17> 'int' <LValueToRValue>
|         |       `-DeclRefExpr 0x15402acb0 <col:17> 'int' lvalue Var 0x15400e048 'i' 'int'
|         `-CompoundStmt 0x15402b578 <col:20, line:42:5>
|           |-CallExpr 0x15402ae10 <line:28:7, col:16> '<dependent type>' contains-errors
|           | |-DeclRefExpr 0x15402ad90 <col:7> 'int ()' Function 0x15402aa88 'fclose' 'int ()'
|           | `-RecoveryExpr 0x15402adf0 <col:14> '<dependent type>' contains-errors lvalue
|           |-ReturnStmt 0x15402ae70 <line:29:7, col:14>
|           | `-RecoveryExpr 0x15402ae50 <col:14> '<dependent type>' contains-errors lvalue
|           |-CaseStmt 0x15402aeb0 <line:30:5, line:31:15>
|           | |-ConstantExpr 0x15402ae98 <line:30:10> 'int'
|           | | `-CharacterLiteral 0x15402ae80 <col:10> 'int' 61
|           | `-BinaryOperator 0x15402afa0 <line:31:7, col:15> 'char' '='
|           |   |-ArraySubscriptExpr 0x15402af48 <col:7, col:13> 'char' lvalue
|           |   | |-ImplicitCastExpr 0x15402af18 <col:7> 'char *' <ArrayToPointerDecay>
|           |   | | `-DeclRefExpr 0x15402aed8 <col:7> 'char[500]' lvalue Var 0x15400dfb0 'temp' 'char[500]'
|           |   | `-ImplicitCastExpr 0x15402af30 <col:12> 'int' <LValueToRValue>
|           |   |   `-DeclRefExpr 0x15402aef8 <col:12> 'int' lvalue Var 0x15400e048 'i' 'int'
|           |   `-ImplicitCastExpr 0x15402af88 <col:15> 'char' <IntegralCast>
|           |     `-IntegerLiteral 0x15402af68 <col:15> 'int' 0
|           |-IfStmt 0x15402b3d8 <line:32:7, line:34:7>
|           | |-UnaryOperator 0x15402b348 <line:32:10, col:26> 'int' prefix '!' cannot overflow
|           | | `-CallExpr 0x15402b2b8 <col:11, col:26> 'int'
|           | |   |-ImplicitCastExpr 0x15402b2a0 <col:11> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|           | |   | `-DeclRefExpr 0x15402b1e0 <col:11> 'int (const char *, const char *)' Function 0x15402b000 'strcmp' 'int (const char *, const char *)'
|           | |   |-ImplicitCastExpr 0x15402b300 <col:18> 'const char *' <NoOp>
|           | |   | `-ImplicitCastExpr 0x15402b2e8 <col:18> 'char *' <ArrayToPointerDecay>
|           | |   |   `-DeclRefExpr 0x15402b200 <col:18> 'char[500]' lvalue Var 0x15400dfb0 'temp' 'char[500]'
|           | |   `-ImplicitCastExpr 0x15402b330 <col:23> 'const char *' <NoOp>
|           | |     `-ImplicitCastExpr 0x15402b318 <col:23> 'char *' <LValueToRValue>
|           | |       `-DeclRefExpr 0x15402b220 <col:23> 'char *' lvalue ParmVar 0x15400dd70 'val' 'char *'
|           | `-CompoundStmt 0x15402b3c0 <col:28, line:34:7>
|           |   `-BinaryOperator 0x15402b3a0 <line:33:2, col:10> 'int' '='
|           |     |-DeclRefExpr 0x15402b360 <col:2> 'int' lvalue Var 0x15400e100 'foundit' 'int'
|           |     `-IntegerLiteral 0x15402b380 <col:10> 'int' 1
|           |-BinaryOperator 0x15402b438 <line:35:7, col:9> 'int' '='
|           | |-DeclRefExpr 0x15402b3f8 <col:7> 'int' lvalue Var 0x15400e048 'i' 'int'
|           | `-IntegerLiteral 0x15402b418 <col:9> 'int' 0
|           |-BreakStmt 0x15402b458 <line:36:7>
|           |-CaseStmt 0x15402b490 <line:37:5, line:38:9>
|           | |-ConstantExpr 0x15402b478 <line:37:10> 'int'
|           | | `-CharacterLiteral 0x15402b460 <col:10> 'int' 0
|           | `-BinaryOperator 0x15402b4f8 <line:38:7, col:9> 'int' '='
|           |   |-DeclRefExpr 0x15402b4b8 <col:7> 'int' lvalue Var 0x15400e048 'i' 'int'
|           |   `-IntegerLiteral 0x15402b4d8 <col:9> 'int' 0
|           |-BreakStmt 0x15402b518 <line:39:7>
|           `-DefaultStmt 0x15402b558 <line:40:5, line:41:8>
|             `-UnaryOperator 0x15402b540 <col:7, col:8> 'int' postfix '++'
|               `-DeclRefExpr 0x15402b520 <col:7> 'int' lvalue Var 0x15400e048 'i' 'int'
|-FunctionDecl 0x154027c70 <line:7:3> col:3 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x154027d70 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x154027dd8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x154027d18 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x154027e50 <col:3> Implicit printf 2 3
|-FunctionDecl 0x15402a358 <line:20:11> col:11 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x15402a458 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x15402a400 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x15402a4c8 <col:11> Implicit 1
|-FunctionDecl 0x15402a558 <col:18> col:18 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x15402a658 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15402a600 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x15402b000 <line:32:11> col:11 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x15402b100 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15402b168 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15402b0a8 <<invalid sloc>> Implicit 887
